<Type Name="Assembly" FullName="System.Reflection.Assembly">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e736f111054396eb8c10c409622d4163d4c6e42f" />
    <Meta Name="ms.sourcegitcommit" Value="29c771f79cf4eac4f49e5fae5f1aa8b457acf146" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="06/21/2018" />
    <Meta Name="ms.locfileid" Value="36299110" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class Assembly : System.Reflection.ICustomAttributeProvider, System.Runtime.InteropServices._Assembly, System.Runtime.Serialization.ISerializable, System.Security.IEvidenceFactory" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi abstract serializable beforefieldinit Assembly extends System.Object implements class System.Reflection.ICustomAttributeProvider, class System.Runtime.InteropServices._Assembly, class System.Runtime.Serialization.ISerializable, class System.Security.IEvidenceFactory" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.Assembly" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Assembly&#xA;Implements _Assembly, ICustomAttributeProvider, IEvidenceFactory, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Assembly abstract : System::Reflection::ICustomAttributeProvider, System::Runtime::InteropServices::_Assembly, System::Runtime::Serialization::ISerializable, System::Security::IEvidenceFactory" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Reflection.ICustomAttributeProvider</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices._Assembly</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Security.IEvidenceFactory</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._Assembly))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="9ab64-101">Representa um assembly, que é um bloco de construção autodescritivo, versátil e reutilizável de um aplicativo de common language runtime.</span>
      <span class="sxs-lookup">
        <span data-stu-id="9ab64-101">Represents an assembly, which is a reusable, versionable, and self-describing building block of a common language runtime application.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ab64-102">Use o <xref:System.Reflection.Assembly> classe carregar assemblies para explorar as partes de metadados e constituinte de assemblies, para descobrir os tipos contidos em assemblies e para criar instâncias desses tipos.</span><span class="sxs-lookup"><span data-stu-id="9ab64-102">Use the <xref:System.Reflection.Assembly> class to load assemblies, to explore the metadata and constituent parts of assemblies, to discover the types contained in assemblies, and to create instances of those types.</span></span>  
  
 <span data-ttu-id="9ab64-103">Para obter uma matriz de <xref:System.Reflection.Assembly> objetos representar os assemblies atualmente carregados em um domínio de aplicativo (por exemplo, domínio de aplicativo padrão de um projeto simple), use o <xref:System.AppDomain.GetAssemblies%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="9ab64-103">To get an array of <xref:System.Reflection.Assembly> objects representing the assemblies currently loaded into an application domain (for example, the default application domain of a simple project), use the <xref:System.AppDomain.GetAssemblies%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="9ab64-104">Carregar assemblies dinamicamente, o <xref:System.Reflection.Assembly> classe fornece os seguintes métodos estáticos (`Shared` métodos no Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="9ab64-104">To load assemblies dynamically, the <xref:System.Reflection.Assembly> class provides the following static methods (`Shared` methods in Visual Basic).</span></span> <span data-ttu-id="9ab64-105">Os assemblies são carregados para o domínio de aplicativo onde ocorre a operação de carregamento.</span><span class="sxs-lookup"><span data-stu-id="9ab64-105">Assemblies are loaded into the application domain where the load operation occurs.</span></span>  
  
-   <span data-ttu-id="9ab64-106">A maneira recomendada para assemblies de carga é usar o <xref:System.AppDomain.Load%2A> método, que identifica o assembly a ser carregada pelo seu nome de exibição (por exemplo, "System, Version = 2.0.0.0, Culture = neutral, PublicKeyToken = b77a5c561934e089").</span><span class="sxs-lookup"><span data-stu-id="9ab64-106">The recommended way to load assemblies is to use the <xref:System.AppDomain.Load%2A> method, which identifies the assembly to be loaded by its display name (for example, "System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089").</span></span> <span data-ttu-id="9ab64-107">A pesquisa para o assembly segue as regras descritas [como o tempo de execução Localiza Assemblies](~/docs/framework/deployment/how-the-runtime-locates-assemblies.md).</span><span class="sxs-lookup"><span data-stu-id="9ab64-107">The search for the assembly follows the rules described in [How the Runtime Locates Assemblies](~/docs/framework/deployment/how-the-runtime-locates-assemblies.md).</span></span>  
  
-   <span data-ttu-id="9ab64-108">O <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A> e <xref:System.Reflection.Assembly.ReflectionOnlyLoadFrom%2A> métodos permitem que você carregar um assembly para reflexão, mas não para execução.</span><span class="sxs-lookup"><span data-stu-id="9ab64-108">The <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A> and <xref:System.Reflection.Assembly.ReflectionOnlyLoadFrom%2A> methods enable you to load an assembly for reflection, but not for execution.</span></span> <span data-ttu-id="9ab64-109">Por exemplo, um assembly que tem como alvo uma plataforma de 64 bits pode ser examinado pelo código que é executado em uma plataforma de 32 bits.</span><span class="sxs-lookup"><span data-stu-id="9ab64-109">For example, an assembly that targets a 64-bit platform can be examined by code that is running on a 32-bit platform.</span></span>  
  
-   <span data-ttu-id="9ab64-110">O <xref:System.Reflection.Assembly.LoadFile%2A> e <xref:System.Reflection.Assembly.LoadFrom%2A> métodos são fornecidos para os cenários raros em que um assembly deve ser identificado pelo caminho.</span><span class="sxs-lookup"><span data-stu-id="9ab64-110">The <xref:System.Reflection.Assembly.LoadFile%2A> and <xref:System.Reflection.Assembly.LoadFrom%2A> methods are provided for rare scenarios in which an assembly must be identified by path.</span></span>  
  
 <span data-ttu-id="9ab64-111">Para obter um <xref:System.Reflection.Assembly> objeto para o assembly em execução no momento, use o <xref:System.Reflection.Assembly.GetExecutingAssembly%2A> método.</span><span class="sxs-lookup"><span data-stu-id="9ab64-111">To get an <xref:System.Reflection.Assembly> object for the currently executing assembly, use the <xref:System.Reflection.Assembly.GetExecutingAssembly%2A> method.</span></span>  
  
 <span data-ttu-id="9ab64-112">Número de membros do <xref:System.Reflection.Assembly> classe fornecem informações sobre um assembly.</span><span class="sxs-lookup"><span data-stu-id="9ab64-112">Many members of the <xref:System.Reflection.Assembly> class provide information about an assembly.</span></span> <span data-ttu-id="9ab64-113">Por exemplo:</span><span class="sxs-lookup"><span data-stu-id="9ab64-113">For example:</span></span>  
  
-   <span data-ttu-id="9ab64-114">O <xref:System.Reflection.Assembly.GetName%2A> método retorna um <xref:System.Reflection.AssemblyName> objeto que fornece acesso a partes do nome de exibição do assembly.</span><span class="sxs-lookup"><span data-stu-id="9ab64-114">The <xref:System.Reflection.Assembly.GetName%2A> method returns an <xref:System.Reflection.AssemblyName> object that provides access to the parts of the assembly display name.</span></span>  
  
-   <span data-ttu-id="9ab64-115">O <xref:System.Reflection.Assembly.GetCustomAttributes%2A> método lista os atributos aplicados ao assembly.</span><span class="sxs-lookup"><span data-stu-id="9ab64-115">The <xref:System.Reflection.Assembly.GetCustomAttributes%2A> method lists the attributes applied to the assembly.</span></span>  
  
-   <span data-ttu-id="9ab64-116">O <xref:System.Reflection.Assembly.GetFiles%2A> método fornece acesso a arquivos no manifesto do assembly.</span><span class="sxs-lookup"><span data-stu-id="9ab64-116">The <xref:System.Reflection.Assembly.GetFiles%2A> method provides access to the files in the assembly manifest.</span></span>  
  
-   <span data-ttu-id="9ab64-117">O <xref:System.Reflection.Assembly.GetManifestResourceNames%2A> método fornece os nomes dos recursos no manifesto do assembly.</span><span class="sxs-lookup"><span data-stu-id="9ab64-117">The <xref:System.Reflection.Assembly.GetManifestResourceNames%2A> method provides the names of the resources in the assembly manifest.</span></span>  
  
 <span data-ttu-id="9ab64-118">O <xref:System.Reflection.Assembly.GetTypes%2A> método lista todos os tipos no assembly.</span><span class="sxs-lookup"><span data-stu-id="9ab64-118">The <xref:System.Reflection.Assembly.GetTypes%2A> method lists all the types in the assembly.</span></span> <span data-ttu-id="9ab64-119">O <xref:System.Reflection.Assembly.GetExportedTypes%2A> método lista os tipos que são visíveis para chamadores fora do assembly.</span><span class="sxs-lookup"><span data-stu-id="9ab64-119">The <xref:System.Reflection.Assembly.GetExportedTypes%2A> method lists the types that are visible to callers outside the assembly.</span></span> <span data-ttu-id="9ab64-120">O <xref:System.Reflection.Assembly.GetType%2A> método pode ser usado para pesquisar um determinado tipo no assembly.</span><span class="sxs-lookup"><span data-stu-id="9ab64-120">The <xref:System.Reflection.Assembly.GetType%2A> method can be used to search for a particular type in the assembly.</span></span> <span data-ttu-id="9ab64-121">O <xref:System.Reflection.Assembly.CreateInstance%2A> método pode ser usado para procurar e criar instâncias de tipos no assembly.</span><span class="sxs-lookup"><span data-stu-id="9ab64-121">The <xref:System.Reflection.Assembly.CreateInstance%2A> method can be used to search for and create instances of types in the assembly.</span></span>  
  
 <span data-ttu-id="9ab64-122">Para obter mais informações sobre assemblies, consulte a seção "Aplicativo domínios e Assemblies" o [domínios de aplicativo](~/docs/framework/app-domains/application-domains.md) tópico.</span><span class="sxs-lookup"><span data-stu-id="9ab64-122">For more information on assemblies, see the "Application Domains and Assemblies" section in the [Application Domains](~/docs/framework/app-domains/application-domains.md) topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9ab64-123">O exemplo de código a seguir mostra como obter o assembly em execução no momento, criar uma instância de um tipo contido nesse assembly e chamar um dos métodos do tipo com associação tardia.</span><span class="sxs-lookup"><span data-stu-id="9ab64-123">The following code example shows how to obtain the currently executing assembly, create an instance of a type contained in that assembly, and invoke one of the type's methods with late binding.</span></span> <span data-ttu-id="9ab64-124">Para essa finalidade, o exemplo de código define uma classe denominada `Example`, com um método denominado `SampleMethod`.</span><span class="sxs-lookup"><span data-stu-id="9ab64-124">For this purpose, the code example defines a class named `Example`, with a method named `SampleMethod`.</span></span> <span data-ttu-id="9ab64-125">O construtor da classe aceita um inteiro, que é usado para calcular o valor de retorno do método.</span><span class="sxs-lookup"><span data-stu-id="9ab64-125">The constructor of the class accepts an integer, which is used to compute the return value of the method.</span></span>  
  
 <span data-ttu-id="9ab64-126">O exemplo de código também demonstra o uso do <xref:System.Reflection.Assembly.GetName%2A> método para obter um <xref:System.Reflection.AssemblyName> objeto que pode ser usado para analisar o nome completo do assembly.</span><span class="sxs-lookup"><span data-stu-id="9ab64-126">The code example also demonstrates the use of the <xref:System.Reflection.Assembly.GetName%2A> method to obtain an <xref:System.Reflection.AssemblyName> object that can be used to parse the full name of the assembly.</span></span> <span data-ttu-id="9ab64-127">O exemplo exibe o número de versão do assembly, o <xref:System.Reflection.Assembly.CodeBase%2A> propriedade e o <xref:System.Reflection.Assembly.EntryPoint%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="9ab64-127">The example displays the version number of the assembly, the <xref:System.Reflection.Assembly.CodeBase%2A> property, and the <xref:System.Reflection.Assembly.EntryPoint%2A> property.</span></span>  
  
 [!code-cpp[AssemblyClass#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyClass/cpp/source.cpp#1)]
 [!code-csharp[AssemblyClass#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyClass/cs/source.cs#1)]
 [!code-vb[AssemblyClass#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyClass/vb/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">
      <span data-ttu-id="9ab64-128">para confiança total de herdeiros.</span>
      <span class="sxs-lookup">
        <span data-stu-id="9ab64-128">for full trust for inheritors.</span>
      </span>
      <span data-ttu-id="9ab64-129">Esta classe não pode ser herdada pelo código parcialmente confiável.</span>
      <span class="sxs-lookup">
        <span data-stu-id="9ab64-129">This class cannot be inherited by partially trusted code.</span>
      </span>
    </permission>
    <threadsafe>
      <span data-ttu-id="9ab64-130">Este tipo é thread-safe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="9ab64-130">This type is thread safe.</span>
      </span>
    </threadsafe>
    <altmember cref="T:System.AppDomain" />
    <altmember cref="T:System.Reflection.AssemblyName" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Assembly ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Assembly();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9ab64-131">Inicializa uma nova instância da classe <see cref="T:System.Reflection.Assembly" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-131">Initializes a new instance of the <see cref="T:System.Reflection.Assembly" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ab64-132">Este construtor é chamado por classes derivadas durante a construção do <xref:System.Reflection.Assembly> objetos.</span><span class="sxs-lookup"><span data-stu-id="9ab64-132">This constructor is invoked by derived classes during the construction of <xref:System.Reflection.Assembly> objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CodeBase">
      <MemberSignature Language="C#" Value="public virtual string CodeBase { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CodeBase" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.CodeBase" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CodeBase As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CodeBase { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._Assembly.CodeBase</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9ab64-133">Obtém o local do assembly como especificado originalmente, por exemplo, em um objeto <see cref="T:System.Reflection.AssemblyName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-133">Gets the location of the assembly as specified originally, for example, in an <see cref="T:System.Reflection.AssemblyName" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9ab64-134">O local do assembly como especificado originalmente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-134">The location of the assembly as specified originally.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ab64-135">Para obter o caminho absoluto para o arquivo de manifesto-contendo carregado, use o <xref:System.Reflection.Assembly.Location%2A?displayProperty=nameWithType> propriedade em vez disso.</span><span class="sxs-lookup"><span data-stu-id="9ab64-135">To get the absolute path to the loaded manifest-containing file, use the <xref:System.Reflection.Assembly.Location%2A?displayProperty=nameWithType> property instead.</span></span>  
  
 <span data-ttu-id="9ab64-136">Se o assembly foi carregado como uma matriz de bytes, usando uma sobrecarga de <xref:System.Reflection.Assembly.Load%2A> método que usa uma matriz de bytes, essa propriedade retorna o local do chamador do método, não o local do assembly carregado.</span><span class="sxs-lookup"><span data-stu-id="9ab64-136">If the assembly was loaded as a byte array, using an overload of the <xref:System.Reflection.Assembly.Load%2A> method that takes an array of bytes, this property returns the location of the caller of the method, not the location of the loaded assembly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9ab64-137">O exemplo a seguir usa o <xref:System.Reflection.Assembly.CodeBase%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="9ab64-137">The following example uses the <xref:System.Reflection.Assembly.CodeBase%2A> property.</span></span>  
  
 [!code-cpp[System.Reflection.Assembly#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Assembly/CPP/codebase1.cpp#1)]
 [!code-csharp[System.Reflection.Assembly#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Assembly/CS/codebase1.cs#1)]
 [!code-vb[System.Reflection.Assembly#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Assembly/VB/codebase1.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="9ab64-138">para acessar o caminho.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-138">for access to the path.</span>
          </span>
          <span data-ttu-id="9ab64-139">Enumeração associada: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-139">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateInstance">
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9ab64-140">Localiza um tipo nesse assembly e cria uma instância dele, usando o ativador do sistema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-140">Locates a type from this assembly and creates an instance of it using the system activator.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public object CreateInstance (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateInstance(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.CreateInstance(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateInstance (typeName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ CreateInstance(System::String ^ typeName);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.CreateInstance(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName">
          <span data-ttu-id="9ab64-141">O <see cref="P:System.Type.FullName" /> do tipo a se localizar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-141">The <see cref="P:System.Type.FullName" /> of the type to locate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9ab64-142">Localiza o tipo especificado desse assembly e cria uma instância dele usando o ativador de sistema, usando a pesquisa que diferencia maiúsculas de minúsculas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-142">Locates the specified type from this assembly and creates an instance of it using the system activator, using case-sensitive search.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9ab64-143">Uma instância do tipo especificado criada com o construtor padrão; ou <see langword="null" /> se <paramref name="typeName" /> não foi encontrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-143">An instance of the specified type created with the default constructor; or <see langword="null" /> if <paramref name="typeName" /> is not found.</span>
          </span>
          <span data-ttu-id="9ab64-144">O tipo é resolvido usando o associador padrão, sem especificar atributos de cultura ou de ativação, e com <see cref="T:System.Reflection.BindingFlags" /> definido como <see langword="Public" /> ou <see langword="Instance" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-144">The type is resolved using the default binder, without specifying culture or activation attributes, and with <see cref="T:System.Reflection.BindingFlags" /> set to <see langword="Public" /> or <see langword="Instance" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ab64-145">Se o tempo de execução não consegue encontrar `typeName` no <xref:System.Reflection.Assembly> instância, ele retorna `null` em vez de gerar uma exceção.</span><span class="sxs-lookup"><span data-stu-id="9ab64-145">If the runtime is unable to find `typeName` in the <xref:System.Reflection.Assembly> instance, it returns `null` instead of throwing an exception.</span></span> <span data-ttu-id="9ab64-146">Isso pode acontecer porque:</span><span class="sxs-lookup"><span data-stu-id="9ab64-146">This might happen because:</span></span>  
  
-   <span data-ttu-id="9ab64-147">Você não especificou o nome totalmente qualificado do tipo.</span><span class="sxs-lookup"><span data-stu-id="9ab64-147">You haven't specified the fully qualified name of the type.</span></span>  
  
-   <span data-ttu-id="9ab64-148">Você especificou o nome de tipo totalmente qualificado, mas seu caso não coincidem no caso do tipo <xref:System.Type.FullName%2A?displayProperty=nameWithType> propriedade.</span><span class="sxs-lookup"><span data-stu-id="9ab64-148">You've specified the fully qualified type name, but its case doesn’t match the case of the type's <xref:System.Type.FullName%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="9ab64-149">Para obter uma comparação de maiusculas e minúsculas de `typeName` com o nome do tipo completo, chame o <xref:System.Reflection.Assembly.CreateInstance%28System.String%2CSystem.Boolean%29> de sobrecarga e especifique `true` para o `ignoreCase` argumento.</span><span class="sxs-lookup"><span data-stu-id="9ab64-149">For a case-insensitive comparison of `typeName` with the type's full name, call the <xref:System.Reflection.Assembly.CreateInstance%28System.String%2CSystem.Boolean%29> overload and specify `true` for the `ignoreCase` argument.</span></span>  
  
-   <span data-ttu-id="9ab64-150">O tipo não existe no atual <xref:System.Reflection.Assembly> instância.</span><span class="sxs-lookup"><span data-stu-id="9ab64-150">The type doesn’t exist in the current <xref:System.Reflection.Assembly> instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9ab64-151">O exemplo a seguir define uma `Person` classe e chama o <xref:System.Reflection.Assembly.CreateInstance%28System.String%29> método instanciá-la.</span><span class="sxs-lookup"><span data-stu-id="9ab64-151">The following example defines a `Person` class and calls the <xref:System.Reflection.Assembly.CreateInstance%28System.String%29> method to instantiate it.</span></span>  
  
 [!code-csharp[System.Reflection.Assembly.CreateInstance#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.reflection.assembly.createinstance/cs/createinstance1.cs#1)]
 [!code-vb[System.Reflection.Assembly.CreateInstance#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.reflection.assembly.createinstance/vb/createinstance1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9ab64-152">
            <paramref name="typeName" /> é uma cadeia de caracteres vazia ("") ou que começa com um caractere nulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-152">
              <paramref name="typeName" /> is an empty string ("") or a string beginning with a null character.</span>
          </span>
          <span data-ttu-id="9ab64-153">-ou-  O assembly atual foi carregado no contexto de somente reflexão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-153">-or-  The current assembly was loaded into the reflection-only context.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9ab64-154">
            <paramref name="typeName" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-154">
              <paramref name="typeName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="9ab64-155">Nenhum construtor correspondente foi encontrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-155">No matching constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="9ab64-156">
            <paramref name="typeName" /> exige um assembly dependente que não pôde ser encontrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-156">
              <paramref name="typeName" /> requires a dependent assembly that could not be found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="9ab64-157">
            <paramref name="typeName" /> exige um assembly dependente que foi encontrado, mas que não pôde ser carregado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-157">
              <paramref name="typeName" /> requires a dependent assembly that was found but could not be loaded.</span>
          </span>
          <span data-ttu-id="9ab64-158">-ou-  O assembly atual foi carregado no contexto somente reflexão e o <paramref name="typeName" /> exige um assembly dependente que não foi pré-carregado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-158">-or-  The current assembly was loaded into the reflection-only context, and <paramref name="typeName" /> requires a dependent assembly that was not preloaded.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="9ab64-159">
            <paramref name="typeName" /> exige um assembly dependente, mas o arquivo não é um assembly válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-159">
              <paramref name="typeName" /> requires a dependent assembly, but the file is not a valid assembly.</span>
          </span>
          <span data-ttu-id="9ab64-160">-ou-  <paramref name="typeName" /> requer um assembly dependente compilado para uma versão do tempo de execução que é posterior à versão atualmente carregada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-160">-or-  <paramref name="typeName" /> requires a dependent assembly that was compiled for a version of the runtime that is later than the currently loaded version.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="9ab64-161">quando invocado com associação tardia por meio de mecanismos como <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-161">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="9ab64-162">Enumeração associada: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-162">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public object CreateInstance (string typeName, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateInstance(string typeName, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.CreateInstance(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateInstance (typeName As String, ignoreCase As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ CreateInstance(System::String ^ typeName, bool ignoreCase);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.CreateInstance(System.String,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="typeName">
          <span data-ttu-id="9ab64-163">O <see cref="P:System.Type.FullName" /> do tipo a se localizar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-163">The <see cref="P:System.Type.FullName" /> of the type to locate.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="9ab64-164">
            <see langword="true" /> para ignorar maiúsculas e minúsculas do nome do tipo; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-164">
              <see langword="true" /> to ignore the case of the type name; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9ab64-165">Localiza o tipo especificado desse assembly e cria uma instância dele usando o ativador de sistema, com pesquisa que diferencia maiúsculas de minúsculas opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-165">Locates the specified type from this assembly and creates an instance of it using the system activator, with optional case-sensitive search.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9ab64-166">Uma instância do tipo especificado criada com o construtor padrão; ou <see langword="null" /> se <paramref name="typeName" /> não foi encontrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-166">An instance of the specified type created with the default constructor; or <see langword="null" /> if <paramref name="typeName" /> is not found.</span>
          </span>
          <span data-ttu-id="9ab64-167">O tipo é resolvido usando o associador padrão, sem especificar atributos de cultura ou de ativação, e com <see cref="T:System.Reflection.BindingFlags" /> definido como <see langword="Public" /> ou <see langword="Instance" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-167">The type is resolved using the default binder, without specifying culture or activation attributes, and with <see cref="T:System.Reflection.BindingFlags" /> set to <see langword="Public" /> or <see langword="Instance" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ab64-168">Se o tempo de execução não consegue encontrar `typeName` no <xref:System.Reflection.Assembly> instância, ele retorna `null` em vez de gerar uma exceção.</span><span class="sxs-lookup"><span data-stu-id="9ab64-168">If the runtime is unable to find `typeName` in the <xref:System.Reflection.Assembly> instance, it returns `null` instead of throwing an exception.</span></span> <span data-ttu-id="9ab64-169">Isso pode acontecer porque:</span><span class="sxs-lookup"><span data-stu-id="9ab64-169">This might happen because:</span></span>  
  
-   <span data-ttu-id="9ab64-170">Você não especificou o nome totalmente qualificado do tipo.</span><span class="sxs-lookup"><span data-stu-id="9ab64-170">You haven't specified the fully qualified name of the type.</span></span>  
  
-   <span data-ttu-id="9ab64-171">O tipo não existe no atual <xref:System.Reflection.Assembly> instância.</span><span class="sxs-lookup"><span data-stu-id="9ab64-171">The type doesn’t exist in the current <xref:System.Reflection.Assembly> instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9ab64-172">O exemplo a seguir define um `Person` classe.</span><span class="sxs-lookup"><span data-stu-id="9ab64-172">The following example defines a `Person` class.</span></span> <span data-ttu-id="9ab64-173">Depois, ele chama o <xref:System.Reflection.Assembly.CreateInstance%28System.String%29> método instanciá-la, mas, como maiusculas e minúsculas de `typeName` argumento não coincidir com o tipo <xref:System.Type.FullName%2A> propriedade, o método retorna `null`.</span><span class="sxs-lookup"><span data-stu-id="9ab64-173">It then calls the <xref:System.Reflection.Assembly.CreateInstance%28System.String%29> method to instantiate it, but because the casing of the `typeName` argument doesn’t match that of the type's <xref:System.Type.FullName%2A> property, the method returns `null`.</span></span> <span data-ttu-id="9ab64-174">Quando o exemplo passa a mesma cadeia de caracteres para o <xref:System.Reflection.Assembly.CreateInstance%28System.String%2CSystem.Boolean%29> de sobrecarga e especifica que a comparação deve diferenciar maiusculas de minúsculas, o `Person` classe for encontrada e um `Person` objeto é instanciado com êxito.</span><span class="sxs-lookup"><span data-stu-id="9ab64-174">When the example passes the same string to the <xref:System.Reflection.Assembly.CreateInstance%28System.String%2CSystem.Boolean%29> overload and specifies that the comparison should be case-insensitive, the `Person` class is found, and a `Person` object is successfully instantiated.</span></span>  
  
 [!code-csharp[System.Reflection.Assembly.CreateInstance#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.reflection.assembly.createinstance/cs/createinstance2.cs#2)]
 [!code-vb[System.Reflection.Assembly.CreateInstance#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.reflection.assembly.createinstance/vb/createinstance2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9ab64-175">
            <paramref name="typeName" /> é uma cadeia de caracteres vazia ("") ou que começa com um caractere nulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-175">
              <paramref name="typeName" /> is an empty string ("") or a string beginning with a null character.</span>
          </span>
          <span data-ttu-id="9ab64-176">-ou-  O assembly atual foi carregado no contexto de somente reflexão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-176">-or-  The current assembly was loaded into the reflection-only context.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="9ab64-177">Nenhum construtor correspondente foi encontrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-177">No matching constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9ab64-178">
            <paramref name="typeName" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-178">
              <paramref name="typeName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="9ab64-179">
            <paramref name="typeName" /> exige um assembly dependente que não pôde ser encontrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-179">
              <paramref name="typeName" /> requires a dependent assembly that could not be found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="9ab64-180">
            <paramref name="typeName" /> exige um assembly dependente que foi encontrado, mas que não pôde ser carregado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-180">
              <paramref name="typeName" /> requires a dependent assembly that was found but could not be loaded.</span>
          </span>
          <span data-ttu-id="9ab64-181">-ou-  O assembly atual foi carregado no contexto somente reflexão e o <paramref name="typeName" /> exige um assembly dependente que não foi pré-carregado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-181">-or-  The current assembly was loaded into the reflection-only context, and <paramref name="typeName" /> requires a dependent assembly that was not preloaded.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="9ab64-182">
            <paramref name="typeName" /> exige um assembly dependente, mas o arquivo não é um assembly válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-182">
              <paramref name="typeName" /> requires a dependent assembly, but the file is not a valid assembly.</span>
          </span>
          <span data-ttu-id="9ab64-183">-ou-  <paramref name="typeName" /> requer um assembly dependente compilado para uma versão do tempo de execução que é posterior à versão atualmente carregada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-183">-or-  <paramref name="typeName" /> requires a dependent assembly that was compiled for a version of the runtime that is later than the currently loaded version.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="9ab64-184">quando invocado com associação tardia por meio de mecanismos como <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-184">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="9ab64-185">Enumeração associada: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-185">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public virtual object CreateInstance (string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateInstance(string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.CreateInstance(System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ CreateInstance(System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.CreateInstance(System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="typeName">
          <span data-ttu-id="9ab64-186">O <see cref="P:System.Type.FullName" /> do tipo a se localizar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-186">The <see cref="P:System.Type.FullName" /> of the type to locate.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="9ab64-187">
            <see langword="true" /> para ignorar maiúsculas e minúsculas do nome do tipo; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-187">
              <see langword="true" /> to ignore the case of the type name; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="9ab64-188">Um bitmask que afeta a maneira pela qual a pesquisa é realizada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-188">A bitmask that affects the way in which the search is conducted.</span>
          </span>
          <span data-ttu-id="9ab64-189">O valor é uma combinação dos sinalizadores de bit de <see cref="T:System.Reflection.BindingFlags" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-189">The value is a combination of bit flags from <see cref="T:System.Reflection.BindingFlags" />.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="9ab64-190">Um objeto que permite a associação, a coerção de tipos de argumentos, invocação de membros e a recuperação de objetos <see langword="MemberInfo" /> por meio de reflexão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-190">An object that enables the binding, coercion of argument types, invocation of members, and retrieval of <see langword="MemberInfo" /> objects via reflection.</span>
          </span>
          <span data-ttu-id="9ab64-191">Se o <c>associador</c> for <see langword="null" />, o associador padrão será usado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-191">If <c>binder</c> is <see langword="null" />, the default binder is used.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="9ab64-192">Uma matriz que contém os argumentos a serem passados ao construtor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-192">An array that contains the arguments to be passed to the constructor.</span>
          </span>
          <span data-ttu-id="9ab64-193">Essa matriz de argumentos deve corresponder em número, ordem e tipo aos parâmetros do construtor a ser invocado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-193">This array of arguments must match in number, order, and type the parameters of the constructor to be invoked.</span>
          </span>
          <span data-ttu-id="9ab64-194">Caso haja preferência pelo construtor padrão, <c>args</c> deverá ser uma matriz vazia ou <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-194">If the default constructor is desired, <c>args</c> must be an empty array or <see langword="null" />.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="9ab64-195">Uma instância de <see langword="CultureInfo" /> usada para determinar a coerção de tipos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-195">An instance of <see langword="CultureInfo" /> used to govern the coercion of types.</span>
          </span>
          <span data-ttu-id="9ab64-196">Se isso for <see langword="null" />, será usado o <see langword="CultureInfo" /> para o thread atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-196">If this is <see langword="null" />, the <see langword="CultureInfo" /> for the current thread is used.</span>
          </span>
          <span data-ttu-id="9ab64-197">(Isso é necessário para converter um <see langword="String" /> que representa 1000 para um valor <see langword="Double" />, por exemplo, uma vez que 1000 é representado de forma diferente por diferentes culturas.)</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-197">(This is necessary to convert a <see langword="String" /> that represents 1000 to a <see langword="Double" /> value, for example, since 1000 is represented differently by different cultures.)</span>
          </span>
        </param>
        <param name="activationAttributes">
          <span data-ttu-id="9ab64-198">Uma matriz de um ou mais atributos que podem participar da ativação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-198">An array of one or more attributes that can participate in activation.</span>
          </span>
          <span data-ttu-id="9ab64-199">Normalmente, uma matriz que contém um único objeto <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> que especifica a URL necessária para ativar um objeto remoto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-199">Typically, an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span>
          </span>
          <span data-ttu-id="9ab64-200">Esse parâmetro está relacionado a objetos ativados pelo cliente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-200">This parameter is related to client-activated objects.</span>
          </span>
          <span data-ttu-id="9ab64-201">A ativação do cliente é uma tecnologia herdada, mantida para compatibilidade com versões anteriores, mas não é recomendada para novos desenvolvimentos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-201">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span>
          </span>
          <span data-ttu-id="9ab64-202">Em vez disso, os aplicativos distribuídos devem usar o Windows Communication Foundation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-202">Distributed applications should instead use Windows Communication Foundation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9ab64-203">Localiza o tipo especificado desse assembly e cria uma instância dele usando o ativador do sistema, com a pesquisa opcional que diferencia maiúsculas de minúsculas e com a cultura especificada, os argumentos e os atributos de associação e ativação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-203">Locates the specified type from this assembly and creates an instance of it using the system activator, with optional case-sensitive search and having the specified culture, arguments, and binding and activation attributes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9ab64-204">Uma instância do tipo especificado ou <see langword="null" />, se <paramref name="typeName" /> não for encontrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-204">An instance of the specified type, or <see langword="null" /> if <paramref name="typeName" /> is not found.</span>
          </span>
          <span data-ttu-id="9ab64-205">Os argumentos fornecidos são usados para resolver o tipo e associar o construtor utilizado para criar a instância.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-205">The supplied arguments are used to resolve the type, and to bind the constructor that is used to create the instance.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9ab64-206">
            <paramref name="typeName" /> é uma cadeia de caracteres vazia ("") ou que começa com um caractere nulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-206">
              <paramref name="typeName" /> is an empty string ("") or a string beginning with a null character.</span>
          </span>
          <span data-ttu-id="9ab64-207">-ou-  O assembly atual foi carregado no contexto de somente reflexão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-207">-or-  The current assembly was loaded into the reflection-only context.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9ab64-208">
            <paramref name="typeName" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-208">
              <paramref name="typeName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="9ab64-209">Nenhum construtor correspondente foi encontrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-209">No matching constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="9ab64-210">Uma matriz de atributos de ativação não vazia é passada a um tipo que não herda de <see cref="T:System.MarshalByRefObject" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-210">A non-empty activation attributes array is passed to a type that does not inherit from <see cref="T:System.MarshalByRefObject" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="9ab64-211">
            <paramref name="typeName" /> requer um assembly dependente que não pôde ser encontrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-211">
              <paramref name="typeName" /> requires a dependent assembly that could not be found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="9ab64-212">
            <paramref name="typeName" /> exige um assembly dependente que foi encontrado, mas que não pôde ser carregado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-212">
              <paramref name="typeName" /> requires a dependent assembly that was found but could not be loaded.</span>
          </span>
          <span data-ttu-id="9ab64-213">-ou-  O assembly atual foi carregado no contexto somente reflexão e o <paramref name="typeName" /> exige um assembly dependente que não foi pré-carregado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-213">-or-  The current assembly was loaded into the reflection-only context, and <paramref name="typeName" /> requires a dependent assembly that was not preloaded.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="9ab64-214">
            <paramref name="typeName" /> exige um assembly dependente, mas o arquivo não é um assembly válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-214">
              <paramref name="typeName" /> requires a dependent assembly, but the file is not a valid assembly.</span>
          </span>
          <span data-ttu-id="9ab64-215">-or-  <paramref name="typeName" /> requer um assembly dependente compilado para uma versão do tempo de execução posterior à versão atualmente carregada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-215">-or-  <paramref name="typeName" /> requires a dependent assembly which that was compiled for a version of the runtime that is later than the currently loaded version.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="9ab64-216">quando invocado com associação tardia por meio de mecanismos como <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-216">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="9ab64-217">Enumeração associada: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-217">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="9ab64-218">para criar uma instância de um representante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-218">to create an instance of a delegate.</span>
          </span>
          <span data-ttu-id="9ab64-219">Enumeração associada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-219">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateQualifiedName">
      <MemberSignature Language="C#" Value="public static string CreateQualifiedName (string assemblyName, string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string CreateQualifiedName(string assemblyName, string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.CreateQualifiedName(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateQualifiedName (assemblyName As String, typeName As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ CreateQualifiedName(System::String ^ assemblyName, System::String ^ typeName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyName">
          <span data-ttu-id="9ab64-220">O nome de exibição de um assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-220">The display name of an assembly.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="9ab64-221">O nome completo de um tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-221">The full name of a type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9ab64-222">Cria o nome de um tipo, qualificado pelo nome de exibição do seu assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-222">Creates the name of a type qualified by the display name of its assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9ab64-223">O nome completo do tipo, qualificado pelo nome de exibição do assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-223">The full name of the type qualified by the display name of the assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ab64-224">O formato de cadeia de caracteres retornada é:</span><span class="sxs-lookup"><span data-stu-id="9ab64-224">The format of the returned string is:</span></span>  
  
 <span data-ttu-id="9ab64-225">\<FullTypeName>, \<AssemblyDisplayName></span><span class="sxs-lookup"><span data-stu-id="9ab64-225">\<FullTypeName>, \<AssemblyDisplayName></span></span>  
  
 <span data-ttu-id="9ab64-226">Consulte <xref:System.Reflection.AssemblyName> para obter uma descrição do formato do nome para exibição de um assembly.</span><span class="sxs-lookup"><span data-stu-id="9ab64-226">See <xref:System.Reflection.AssemblyName> for a description of the format of the display name of an assembly.</span></span>  
  
 <span data-ttu-id="9ab64-227">Para acomodar as alterações em versões do common language runtime, use esse método em vez de construir o nome qualificado por conta própria.</span><span class="sxs-lookup"><span data-stu-id="9ab64-227">To accommodate changes in versions of the common language runtime, use this method rather than constructing the qualified name yourself.</span></span>  <span data-ttu-id="9ab64-228">Para obter informações sobre nomes de assembly qualificado, consulte <xref:System.Type.AssemblyQualifiedName%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="9ab64-228">For information about qualified assembly names, see <xref:System.Type.AssemblyQualifiedName%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomAttributes">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Reflection.CustomAttributeData&gt; CustomAttributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Reflection.CustomAttributeData&gt; CustomAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.CustomAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CustomAttributes As IEnumerable(Of CustomAttributeData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IEnumerable&lt;System::Reflection::CustomAttributeData ^&gt; ^ CustomAttributes { System::Collections::Generic::IEnumerable&lt;System::Reflection::CustomAttributeData ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Reflection.CustomAttributeData&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9ab64-229">Obtém uma coleção que contém os atributos personalizados deste assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-229">Gets a collection that contains this assembly's custom attributes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9ab64-230">Uma coleção que contém os atributos personalizados deste assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-230">A collection that contains this assembly's custom attributes.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefinedTypes">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Reflection.TypeInfo&gt; DefinedTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Reflection.TypeInfo&gt; DefinedTypes" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.DefinedTypes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DefinedTypes As IEnumerable(Of TypeInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IEnumerable&lt;System::Reflection::TypeInfo ^&gt; ^ DefinedTypes { System::Collections::Generic::IEnumerable&lt;System::Reflection::TypeInfo ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Reflection.TypeInfo&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9ab64-231">Obtém uma coleção dos tipos definidos nesse assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-231">Gets a collection of the types defined in this assembly.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9ab64-232">Uma coleção dos tipos definidos neste assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-232">A collection of the types defined in this assembly.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ab64-233">O <xref:System.Reflection.Assembly.DefinedTypes%2A> propriedade é comparável ao <xref:System.Reflection.Assembly.GetTypes%2A?displayProperty=nameWithType> método, exceto que o <xref:System.Reflection.Assembly.DefinedTypes%2A> propriedade retorna uma coleção de <xref:System.Reflection.TypeInfo> objetos e o <xref:System.Reflection.Assembly.GetTypes%2A?displayProperty=nameWithType> método retorna uma matriz de <xref:System.Type> objetos.</span><span class="sxs-lookup"><span data-stu-id="9ab64-233">The <xref:System.Reflection.Assembly.DefinedTypes%2A> property is comparable to the <xref:System.Reflection.Assembly.GetTypes%2A?displayProperty=nameWithType> method, except that the <xref:System.Reflection.Assembly.DefinedTypes%2A> property returns a collection of <xref:System.Reflection.TypeInfo> objects, and the <xref:System.Reflection.Assembly.GetTypes%2A?displayProperty=nameWithType> method returns an array of <xref:System.Type> objects.</span></span>  
  
 <span data-ttu-id="9ab64-234">A matriz retornada inclui tipos aninhados.</span><span class="sxs-lookup"><span data-stu-id="9ab64-234">The returned array includes nested types.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.GetTypes" />
      </Docs>
    </Member>
    <Member MemberName="EntryPoint">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.MethodInfo EntryPoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MethodInfo EntryPoint" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.EntryPoint" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property EntryPoint As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::MethodInfo ^ EntryPoint { System::Reflection::MethodInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._Assembly.EntryPoint</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9ab64-235">Obtém o ponto de entrada desse assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-235">Gets the entry point of this assembly.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9ab64-236">Um objeto que representa o ponto de entrada desse assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-236">An object that represents the entry point of this assembly.</span>
          </span>
          <span data-ttu-id="9ab64-237">Se nenhum ponto de entrada for encontrado (por exemplo, se o assembly for uma DLL), <see langword="null" /> será retornado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-237">If no entry point is found (for example, the assembly is a DLL), <see langword="null" /> is returned.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.Equals(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">
          <span data-ttu-id="9ab64-238">O objeto a ser comparado com essa instância.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-238">The object to compare with this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9ab64-239">Determina se este assembly e o objeto especificado são iguais.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-239">Determines whether this assembly and the specified object are equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9ab64-240">
            <see langword="true" /> se <paramref name="o" /> for igual a essa instância; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-240">
              <see langword="true" /> if <paramref name="o" /> is equal to this instance; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ab64-241">O <xref:System.Reflection.Assembly.Equals%2A> método executa um teste de igualdade de referência determinar se a instância atual e `o` são iguais.</span><span class="sxs-lookup"><span data-stu-id="9ab64-241">The <xref:System.Reflection.Assembly.Equals%2A> method performs a test for reference equality to determine whether the current instance and `o` are equal.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EscapedCodeBase">
      <MemberSignature Language="C#" Value="public virtual string EscapedCodeBase { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EscapedCodeBase" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.EscapedCodeBase" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property EscapedCodeBase As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ EscapedCodeBase { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._Assembly.EscapedCodeBase</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9ab64-242">Obtém o URI, incluindo caracteres de escape, que representa a base de código.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-242">Gets the URI, including escape characters, that represents the codebase.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9ab64-243">Um URI com caracteres de escape.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-243">A URI with escape characters.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="9ab64-244">para acessar o caminho.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-244">for access to the path.</span>
          </span>
          <span data-ttu-id="9ab64-245">Enumeração associada: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-245">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Evidence">
      <MemberSignature Language="C#" Value="public virtual System.Security.Policy.Evidence Evidence { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Policy.Evidence Evidence" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.Evidence" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Evidence As Evidence" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Policy::Evidence ^ Evidence { System::Security::Policy::Evidence ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._Assembly.Evidence</InterfaceMember>
        <InterfaceMember>P:System.Security.IEvidenceFactory.Evidence</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.Evidence</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9ab64-246">Obtém a evidência para esse assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-246">Gets the evidence for this assembly.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9ab64-247">A evidência para esse assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-247">The evidence for this assembly.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ab64-248">Evidência é o conjunto de informações que constitui a entrada para decisões de política de segurança, como quais permissões podem ser concedidas ao código.</span><span class="sxs-lookup"><span data-stu-id="9ab64-248">Evidence is the set of information that constitutes input to security policy decisions, such as what permissions can be granted to code.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="9ab64-249">para carregar um assembly com evidências.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-249">to load an assembly with evidence.</span>
          </span>
          <span data-ttu-id="9ab64-250">Enumeração associada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-250">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Security.Policy.Evidence" />
      </Docs>
    </Member>
    <Member MemberName="ExportedTypes">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;Type&gt; ExportedTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; ExportedTypes" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.ExportedTypes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ExportedTypes As IEnumerable(Of Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ ExportedTypes { System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Type&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9ab64-251">Obtém uma coleção dos tipos públicos definidos nesse assembly visíveis fora do assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-251">Gets a collection of the public types defined in this assembly that are visible outside the assembly.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9ab64-252">Uma coleção dos tipos públicos definidos nesse assembly visíveis fora do assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-252">A collection of the public types defined in this assembly that are visible outside the assembly.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FullName">
      <MemberSignature Language="C#" Value="public virtual string FullName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullName" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.FullName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property FullName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ FullName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._Assembly.FullName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9ab64-253">Obtém o nome de exibição do assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-253">Gets the display name of the assembly.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9ab64-254">O nome para exibição do assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-254">The display name of the assembly.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ab64-255">Consulte <xref:System.Reflection.AssemblyName> para obter uma descrição do formato do nome para exibição de um assembly.</span><span class="sxs-lookup"><span data-stu-id="9ab64-255">See <xref:System.Reflection.AssemblyName> for a description of the format of the display name of an assembly.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9ab64-256">Escrevendo seu próprio código para analisar os nomes de exibição não é recomendado.</span><span class="sxs-lookup"><span data-stu-id="9ab64-256">Writing your own code to parse display names is not recommended.</span></span> <span data-ttu-id="9ab64-257">Em vez disso, passe o nome de exibição para o <xref:System.Reflection.AssemblyName.%23ctor%2A> construtor, que analisa e preenche os campos apropriados do novo <xref:System.Reflection.AssemblyName>.</span><span class="sxs-lookup"><span data-stu-id="9ab64-257">Instead, pass the display name to the <xref:System.Reflection.AssemblyName.%23ctor%2A> constructor, which parses it and populates the appropriate fields of the new <xref:System.Reflection.AssemblyName>.</span></span>  
  
 <span data-ttu-id="9ab64-258">No .NET Framework versão 2.0, a arquitetura do processador é adicionada à identidade do assembly e pode ser especificada como parte das cadeias de caracteres de nome do assembly.</span><span class="sxs-lookup"><span data-stu-id="9ab64-258">In the .NET Framework version 2.0, processor architecture is added to assembly identity, and can be specified as part of assembly name strings.</span></span> <span data-ttu-id="9ab64-259">No entanto, ele não está incluído na cadeia de caracteres retornada pela propriedade <xref:System.Reflection.Assembly.FullName%2A>, por motivos de compatibilidade.</span><span class="sxs-lookup"><span data-stu-id="9ab64-259">However, it is not included in the string returned by the <xref:System.Reflection.Assembly.FullName%2A> property, for compatibility reasons.</span></span> <span data-ttu-id="9ab64-260">Consulte <xref:System.Reflection.AssemblyName.ProcessorArchitecture%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="9ab64-260">See <xref:System.Reflection.AssemblyName.ProcessorArchitecture%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9ab64-261">O exemplo a seguir recupera o nome para exibição do assembly em execução no momento e o nome para exibição do assembly que contém o <xref:System.Int32> tipo (`int` em c#, `Integer` no Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="9ab64-261">The following example retrieves the display name of the currently executing assembly, and the display name of the assembly that contains the <xref:System.Int32> type (`int` in C#, `Integer` in Visual Basic).</span></span>  
  
 [!code-cpp[Assembly.FullName#1](~/samples/snippets/cpp/VS_Snippets_CLR/Assembly.FullName/CPP/Example.cpp#1)]
 [!code-csharp[Assembly.FullName#1](~/samples/snippets/csharp/VS_Snippets_CLR/Assembly.FullName/CS/Example.cs#1)]
 [!code-vb[Assembly.FullName#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Assembly.FullName/VB/Example.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAssembly">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly GetAssembly (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly GetAssembly(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetAssembly(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ GetAssembly(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="9ab64-262">Um objeto que representa um tipo no assembly que será retornado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-262">An object representing a type in the assembly that will be returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9ab64-263">Obtém o assembly carregado no momento em que o tipo especificado é definido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-263">Gets the currently loaded assembly in which the specified type is defined.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9ab64-264">O assembly no qual o tipo especificado é definido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-264">The assembly in which the specified type is defined.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ab64-265">Chamar esse método é equivalente a recuperação do valor da <xref:System.Type.Assembly?displayProperty=nameWithType> propriedade.</span><span class="sxs-lookup"><span data-stu-id="9ab64-265">Calling this method is equivalent to retrieving the value of the  <xref:System.Type.Assembly?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="9ab64-266">No entanto, o <xref:System.Type.Assembly?displayProperty=nameWithType> propriedade normalmente oferece desempenho superior.</span><span class="sxs-lookup"><span data-stu-id="9ab64-266">However, the <xref:System.Type.Assembly?displayProperty=nameWithType> property typically offers superior performance.</span></span>  
  
 <span data-ttu-id="9ab64-267">Para chamar esse método, você deve ter uma <xref:System.Type> objeto, o que significa que o assembly no qual a classe é definida já deve ser carregado.</span><span class="sxs-lookup"><span data-stu-id="9ab64-267">In order to call this method, you must have a <xref:System.Type> object, which means that the assembly in which the class is defined must already be loaded.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9ab64-268">O exemplo a seguir recupera o assembly que contém o <xref:System.Int32> digite e exibe seu nome e o arquivo local.</span><span class="sxs-lookup"><span data-stu-id="9ab64-268">The following example retrieves the assembly that contains the <xref:System.Int32> type and displays its name and file location.</span></span>  
  
 [!code-cpp[System.Reflection.Assembly#12](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Assembly/CPP/GetAssembly1.cpp#12)]
 [!code-csharp[System.Reflection.Assembly#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Assembly/CS/GetAssembly1.cs#12)]
 [!code-vb[System.Reflection.Assembly#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Assembly/VB/GetAssembly1.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9ab64-269">
            <paramref name="type" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-269">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="9ab64-270">quando invocado com associação tardia por meio de mecanismos como <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-270">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="9ab64-271">Enumeração associada: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-271">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetCallingAssembly">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly GetCallingAssembly ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly GetCallingAssembly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetCallingAssembly" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCallingAssembly () As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ GetCallingAssembly();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9ab64-272">Retorna o <see cref="T:System.Reflection.Assembly" /> do método que invocou o método atualmente em execução.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-272">Returns the <see cref="T:System.Reflection.Assembly" /> of the method that invoked the currently executing method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9ab64-273">O objeto <see langword="Assembly" /> do método que invocou o método atualmente em execução.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-273">The <see langword="Assembly" /> object of the method that invoked the currently executing method.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ab64-274">Se o método que chama o <xref:System.Reflection.Assembly.GetCallingAssembly%2A> método é expandido embutido pelo compilador just-in-time (JIT), ou se o chamador estiver expandido embutido, o assembly que é retornado por <xref:System.Reflection.Assembly.GetCallingAssembly%2A> podem diferir inesperadamente.</span><span class="sxs-lookup"><span data-stu-id="9ab64-274">If the method that calls the <xref:System.Reflection.Assembly.GetCallingAssembly%2A> method is expanded inline by the just-in-time (JIT) compiler, or if its caller is expanded inline, the assembly that is returned by <xref:System.Reflection.Assembly.GetCallingAssembly%2A> may differ unexpectedly.</span></span> <span data-ttu-id="9ab64-275">Por exemplo, considere os seguintes métodos e assemblies:</span><span class="sxs-lookup"><span data-stu-id="9ab64-275">For example, consider the following methods and assemblies:</span></span>  
  
-   <span data-ttu-id="9ab64-276">Método `M1` no assembly `A1` chamadas <xref:System.Reflection.Assembly.GetCallingAssembly%2A>.</span><span class="sxs-lookup"><span data-stu-id="9ab64-276">Method `M1` in assembly `A1` calls <xref:System.Reflection.Assembly.GetCallingAssembly%2A>.</span></span>  
  
-   <span data-ttu-id="9ab64-277">Método `M2` no assembly `A2` chamadas `M1`.</span><span class="sxs-lookup"><span data-stu-id="9ab64-277">Method `M2` in assembly `A2` calls `M1`.</span></span>  
  
-   <span data-ttu-id="9ab64-278">Método `M3` no assembly `A3` chamadas `M2`.</span><span class="sxs-lookup"><span data-stu-id="9ab64-278">Method `M3` in assembly `A3` calls `M2`.</span></span>  
  
 <span data-ttu-id="9ab64-279">Quando `M1` não é embutida, <xref:System.Reflection.Assembly.GetCallingAssembly%2A> retorna `A2`.</span><span class="sxs-lookup"><span data-stu-id="9ab64-279">When `M1` is not inlined, <xref:System.Reflection.Assembly.GetCallingAssembly%2A> returns `A2`.</span></span> <span data-ttu-id="9ab64-280">Quando `M1` é embutida, <xref:System.Reflection.Assembly.GetCallingAssembly%2A> retorna `A3`.</span><span class="sxs-lookup"><span data-stu-id="9ab64-280">When `M1` is inlined, <xref:System.Reflection.Assembly.GetCallingAssembly%2A> returns `A3`.</span></span> <span data-ttu-id="9ab64-281">Da mesma forma, quando `M2` não é embutida, <xref:System.Reflection.Assembly.GetCallingAssembly%2A> retorna `A2`.</span><span class="sxs-lookup"><span data-stu-id="9ab64-281">Similarly, when `M2` is not inlined, <xref:System.Reflection.Assembly.GetCallingAssembly%2A> returns `A2`.</span></span> <span data-ttu-id="9ab64-282">Quando `M2` é embutida, <xref:System.Reflection.Assembly.GetCallingAssembly%2A> retorna `A3`.</span><span class="sxs-lookup"><span data-stu-id="9ab64-282">When `M2` is inlined, <xref:System.Reflection.Assembly.GetCallingAssembly%2A> returns `A3`.</span></span>  
  
 <span data-ttu-id="9ab64-283">Esse efeito também ocorre quando `M1` é executado como uma chamada tail de `M2`, ou quando `M2` é executado como uma chamada tail de `M3`.</span><span class="sxs-lookup"><span data-stu-id="9ab64-283">This effect also occurs when `M1` executes as a tail call from `M2`, or when `M2` executes as a tail call from `M3`.</span></span> <span data-ttu-id="9ab64-284">Você pode impedir que o compilador JIT do inlining o método que chama <xref:System.Reflection.Assembly.GetCallingAssembly%2A>, aplicando o <xref:System.Runtime.CompilerServices.MethodImplAttribute> atributo com o <xref:System.Runtime.CompilerServices.MethodImplOptions.NoInlining?displayProperty=nameWithType> sinalizador, mas não há nenhum mecanismo semelhante para evitar chamadas tail.</span><span class="sxs-lookup"><span data-stu-id="9ab64-284">You can prevent the JIT compiler from inlining the method that calls <xref:System.Reflection.Assembly.GetCallingAssembly%2A>, by applying the <xref:System.Runtime.CompilerServices.MethodImplAttribute> attribute with the <xref:System.Runtime.CompilerServices.MethodImplOptions.NoInlining?displayProperty=nameWithType> flag, but there is no similar mechanism for preventing tail calls.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9ab64-285">O exemplo a seguir obtém o assembly de chamada do método atual.</span><span class="sxs-lookup"><span data-stu-id="9ab64-285">The following example gets the calling assembly of the current method.</span></span>  
  
 [!code-cpp[System.Reflection.Assembly#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Assembly/CPP/getcallingassembly1.cpp#4)]
 [!code-csharp[System.Reflection.Assembly#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Assembly/CS/getcallingassembly1.cs#4)]
 [!code-vb[System.Reflection.Assembly#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Assembly/VB/getcallingassembly1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCustomAttributes">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9ab64-286">Obtém os atributos personalizados para esse assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-286">Gets the custom attributes for this assembly.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public virtual object[] GetCustomAttributes (bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] GetCustomAttributes(bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetCustomAttributes(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCustomAttributes (inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(bool inherit);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.ICustomAttributeProvider.GetCustomAttributes(System.Boolean)</InterfaceMember>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetCustomAttributes(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="inherit">
          <span data-ttu-id="9ab64-287">Este argumento é ignorado para objetos do tipo <see cref="T:System.Reflection.Assembly" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-287">This argument is ignored for objects of type <see cref="T:System.Reflection.Assembly" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9ab64-288">Obtém todos os atributos personalizados para esse assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-288">Gets all the custom attributes for this assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9ab64-289">Uma matriz que contém os atributos personalizados para este assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-289">An array that contains the custom attributes for this assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ab64-290">Esse método implementa correspondente <xref:System.Reflection.ICustomAttributeProvider> método de interface.</span><span class="sxs-lookup"><span data-stu-id="9ab64-290">This method implements the corresponding <xref:System.Reflection.ICustomAttributeProvider> interface method.</span></span> <span data-ttu-id="9ab64-291">Portanto, o `inherit` parâmetro deve ser especificado mesmo que ele será ignorado.</span><span class="sxs-lookup"><span data-stu-id="9ab64-291">Therefore, the `inherit` parameter must be specified even though it is ignored.</span></span>  
  
 <span data-ttu-id="9ab64-292">Um atributo pseudo indica bits dos metadados principais que devem ser definidas quando o atributo estiver presente.</span><span class="sxs-lookup"><span data-stu-id="9ab64-292">A pseudo-attribute indicates bits of the core metadata that must be set when the attribute is present.</span></span> <span data-ttu-id="9ab64-293">Ao contrário de um atributo personalizado que estende os metadados para um tipo e é salvo junto com o tipo, um atributo pseudo modifica metadados para o tipo e, em seguida, será descartado.</span><span class="sxs-lookup"><span data-stu-id="9ab64-293">Unlike a custom attribute that extends the metadata for a type and is saved along with the type, a pseudo-attribute modifies the metadata for the type and then is discarded.</span></span> <span data-ttu-id="9ab64-294">Alguns dos bits resultantes não podem ser acessado usando APIs de reflexão existente.</span><span class="sxs-lookup"><span data-stu-id="9ab64-294">Some of the resulting bits cannot be accessed using existing reflection APIs.</span></span>  
  
 <span data-ttu-id="9ab64-295">A tabela a seguir resume os atributos de pseudo diferentes e os acessadores para os bits que estão disponíveis em reflexão.</span><span class="sxs-lookup"><span data-stu-id="9ab64-295">The following table summarizes the different pseudo-attributes and the accessors for the bits that are available in reflection.</span></span>  
  
|<span data-ttu-id="9ab64-296">Atributo pseudo</span><span class="sxs-lookup"><span data-stu-id="9ab64-296">Pseudo-Attribute</span></span>|<span data-ttu-id="9ab64-297">Bits de metadados</span><span class="sxs-lookup"><span data-stu-id="9ab64-297">Metadata Bits</span></span>|<span data-ttu-id="9ab64-298">Acessador de reflexão</span><span class="sxs-lookup"><span data-stu-id="9ab64-298">Reflection Accessor</span></span>|  
|-----------------------|-------------------|-------------------------|  
|<span data-ttu-id="9ab64-299">DllImportAttribute</span><span class="sxs-lookup"><span data-stu-id="9ab64-299">DllImportAttribute</span></span>|<span data-ttu-id="9ab64-300">CorPInvokeMap</span><span class="sxs-lookup"><span data-stu-id="9ab64-300">CorPInvokeMap</span></span><br /><br /> <span data-ttu-id="9ab64-301">Nome da DLL</span><span class="sxs-lookup"><span data-stu-id="9ab64-301">DLL name</span></span>|<span data-ttu-id="9ab64-302">Nenhum acessador PInvokeMap método/global comum para atributos de método.</span><span class="sxs-lookup"><span data-stu-id="9ab64-302">No accessor for PInvokeMap for ordinary method/global method attributes.</span></span><br /><br /> <span data-ttu-id="9ab64-303">Nenhum acessador para o nome da DLL.</span><span class="sxs-lookup"><span data-stu-id="9ab64-303">No accessor for DLL name.</span></span>|  
|<span data-ttu-id="9ab64-304">GuidAttribute</span><span class="sxs-lookup"><span data-stu-id="9ab64-304">GuidAttribute</span></span>|<span data-ttu-id="9ab64-305">Armazenado como um atributo personalizado real.</span><span class="sxs-lookup"><span data-stu-id="9ab64-305">Stored as a real custom attribute.</span></span>|<span data-ttu-id="9ab64-306">Acessado como um atributo personalizado real.</span><span class="sxs-lookup"><span data-stu-id="9ab64-306">Accessed as a real custom attribute.</span></span>|  
|<span data-ttu-id="9ab64-307">ComImportAttribute</span><span class="sxs-lookup"><span data-stu-id="9ab64-307">ComImportAttribute</span></span>|<span data-ttu-id="9ab64-308">CorTypeAttr.tdImport</span><span class="sxs-lookup"><span data-stu-id="9ab64-308">CorTypeAttr.tdImport</span></span>|<span data-ttu-id="9ab64-309">Type.Attributes.Import</span><span class="sxs-lookup"><span data-stu-id="9ab64-309">Type.Attributes.Import</span></span>|  
|<span data-ttu-id="9ab64-310">SerializableAttribute</span><span class="sxs-lookup"><span data-stu-id="9ab64-310">SerializableAttribute</span></span>|<span data-ttu-id="9ab64-311">CorTypeAttr.tdSerializable</span><span class="sxs-lookup"><span data-stu-id="9ab64-311">CorTypeAttr.tdSerializable</span></span>|<span data-ttu-id="9ab64-312">Type.Attributes.Serializable</span><span class="sxs-lookup"><span data-stu-id="9ab64-312">Type.Attributes.Serializable</span></span>|  
|<span data-ttu-id="9ab64-313">NonSerializedAttribute</span><span class="sxs-lookup"><span data-stu-id="9ab64-313">NonSerializedAttribute</span></span>|<span data-ttu-id="9ab64-314">CorFieldAttr.fdNotSerialized</span><span class="sxs-lookup"><span data-stu-id="9ab64-314">CorFieldAttr.fdNotSerialized</span></span>|<span data-ttu-id="9ab64-315">FieldInfo.Attributes.NotSerialized</span><span class="sxs-lookup"><span data-stu-id="9ab64-315">FieldInfo.Attributes.NotSerialized</span></span>|  
|<span data-ttu-id="9ab64-316">MethodImplAttribute</span><span class="sxs-lookup"><span data-stu-id="9ab64-316">MethodImplAttribute</span></span>|<span data-ttu-id="9ab64-317">CorMethodImpl</span><span class="sxs-lookup"><span data-stu-id="9ab64-317">CorMethodImpl</span></span>|<span data-ttu-id="9ab64-318">MethodInfo.GetMethodImplementationFlags()</span><span class="sxs-lookup"><span data-stu-id="9ab64-318">MethodInfo.GetMethodImplementationFlags()</span></span><br /><br /> <span data-ttu-id="9ab64-319">ConstructorInfo.GetMethodImplementationFlags()</span><span class="sxs-lookup"><span data-stu-id="9ab64-319">ConstructorInfo.GetMethodImplementationFlags()</span></span>|  
|<span data-ttu-id="9ab64-320">MarshalAsAttribute</span><span class="sxs-lookup"><span data-stu-id="9ab64-320">MarshalAsAttribute</span></span>|<span data-ttu-id="9ab64-321">Vários bits.</span><span class="sxs-lookup"><span data-stu-id="9ab64-321">Various bits.</span></span>|<span data-ttu-id="9ab64-322">Nenhum acessador.</span><span class="sxs-lookup"><span data-stu-id="9ab64-322">No accessor.</span></span>|  
|<span data-ttu-id="9ab64-323">PreserveSigAttribute</span><span class="sxs-lookup"><span data-stu-id="9ab64-323">PreserveSigAttribute</span></span>|<span data-ttu-id="9ab64-324">CorMethodImpl.miOLE</span><span class="sxs-lookup"><span data-stu-id="9ab64-324">CorMethodImpl.miOLE</span></span>|<span data-ttu-id="9ab64-325">MethodInfo.GetMethodImplementationFlags().OLE</span><span class="sxs-lookup"><span data-stu-id="9ab64-325">MethodInfo.GetMethodImplementationFlags().OLE</span></span><br /><br /> <span data-ttu-id="9ab64-326">ConstructorInfo.GetMethodImplementationFlags().OLE</span><span class="sxs-lookup"><span data-stu-id="9ab64-326">ConstructorInfo.GetMethodImplementationFlags().OLE</span></span>|  
|<span data-ttu-id="9ab64-327">InAttribute</span><span class="sxs-lookup"><span data-stu-id="9ab64-327">InAttribute</span></span>|<span data-ttu-id="9ab64-328">CorParamAttr.pdIn</span><span class="sxs-lookup"><span data-stu-id="9ab64-328">CorParamAttr.pdIn</span></span>|<span data-ttu-id="9ab64-329">ParameterInfo.Attributes.In</span><span class="sxs-lookup"><span data-stu-id="9ab64-329">ParameterInfo.Attributes.In</span></span>|  
|<span data-ttu-id="9ab64-330">OutAttribute</span><span class="sxs-lookup"><span data-stu-id="9ab64-330">OutAttribute</span></span>|<span data-ttu-id="9ab64-331">CorParamAttr.pdOut</span><span class="sxs-lookup"><span data-stu-id="9ab64-331">CorParamAttr.pdOut</span></span>|<span data-ttu-id="9ab64-332">ParameterInfo.Attributes.Out</span><span class="sxs-lookup"><span data-stu-id="9ab64-332">ParameterInfo.Attributes.Out</span></span>|  
|<span data-ttu-id="9ab64-333">StructLayoutAttribute</span><span class="sxs-lookup"><span data-stu-id="9ab64-333">StructLayoutAttribute</span></span>|<span data-ttu-id="9ab64-334">CorTypeAttr.tdLayoutSequential</span><span class="sxs-lookup"><span data-stu-id="9ab64-334">CorTypeAttr.tdLayoutSequential</span></span><br /><br /> <span data-ttu-id="9ab64-335">CorTypeAttr.tdExplicitLayout</span><span class="sxs-lookup"><span data-stu-id="9ab64-335">CorTypeAttr.tdExplicitLayout</span></span><br /><br /> <span data-ttu-id="9ab64-336">CorTypeAttr.tdAnsiClass</span><span class="sxs-lookup"><span data-stu-id="9ab64-336">CorTypeAttr.tdAnsiClass</span></span><br /><br /> <span data-ttu-id="9ab64-337">CorTypeAttr.tdUnicodeClass</span><span class="sxs-lookup"><span data-stu-id="9ab64-337">CorTypeAttr.tdUnicodeClass</span></span><br /><br /> <span data-ttu-id="9ab64-338">CorTypeAttr.tdAutoClass</span><span class="sxs-lookup"><span data-stu-id="9ab64-338">CorTypeAttr.tdAutoClass</span></span><br /><br /> <span data-ttu-id="9ab64-339">Empacotamento de classe.</span><span class="sxs-lookup"><span data-stu-id="9ab64-339">Class packing.</span></span>|<span data-ttu-id="9ab64-340">Type.Attributes.LayoutSequential</span><span class="sxs-lookup"><span data-stu-id="9ab64-340">Type.Attributes.LayoutSequential</span></span><br /><br /> <span data-ttu-id="9ab64-341">Type.Attributes.ExplicitLayout</span><span class="sxs-lookup"><span data-stu-id="9ab64-341">Type.Attributes.ExplicitLayout</span></span><br /><br /> <span data-ttu-id="9ab64-342">Type.Attributes.AnsiClass</span><span class="sxs-lookup"><span data-stu-id="9ab64-342">Type.Attributes.AnsiClass</span></span><br /><br /> <span data-ttu-id="9ab64-343">Type.Attributes.UnicodeClass</span><span class="sxs-lookup"><span data-stu-id="9ab64-343">Type.Attributes.UnicodeClass</span></span><br /><br /> <span data-ttu-id="9ab64-344">Type.Attributes.AutoClass</span><span class="sxs-lookup"><span data-stu-id="9ab64-344">Type.Attributes.AutoClass</span></span><br /><br /> <span data-ttu-id="9ab64-345">Nenhum acessador.</span><span class="sxs-lookup"><span data-stu-id="9ab64-345">No accessor.</span></span>|  
|<span data-ttu-id="9ab64-346">FieldOffsetAttribute</span><span class="sxs-lookup"><span data-stu-id="9ab64-346">FieldOffsetAttribute</span></span>|<span data-ttu-id="9ab64-347">Deslocamento de campo.</span><span class="sxs-lookup"><span data-stu-id="9ab64-347">Field offset.</span></span>|<span data-ttu-id="9ab64-348">Nenhum acessador.</span><span class="sxs-lookup"><span data-stu-id="9ab64-348">No accessor.</span></span>|  
|<span data-ttu-id="9ab64-349">AssemblyLoadAttribute</span><span class="sxs-lookup"><span data-stu-id="9ab64-349">AssemblyLoadAttribute</span></span>|<span data-ttu-id="9ab64-350">CorAssemblyFlags</span><span class="sxs-lookup"><span data-stu-id="9ab64-350">CorAssemblyFlags</span></span>|<span data-ttu-id="9ab64-351">Nenhum acessador ou enumerador.</span><span class="sxs-lookup"><span data-stu-id="9ab64-351">No accessor or enumerator.</span></span>|  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="9ab64-352">quando invocado com associação tardia por meio de mecanismos como <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-352">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="9ab64-353">Enumeração associada: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-353">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public virtual object[] GetCustomAttributes (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] GetCustomAttributes(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetCustomAttributes(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCustomAttributes (attributeType As Type, inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(Type ^ attributeType, bool inherit);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.ICustomAttributeProvider.GetCustomAttributes(System.Type,System.Boolean)</InterfaceMember>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetCustomAttributes(System.Type,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType">
          <span data-ttu-id="9ab64-354">O tipo para o qual os atributos personalizados devem ser retornados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-354">The type for which the custom attributes are to be returned.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="9ab64-355">Este argumento é ignorado para objetos do tipo <see cref="T:System.Reflection.Assembly" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-355">This argument is ignored for objects of type <see cref="T:System.Reflection.Assembly" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9ab64-356">Obtém os atributos personalizados para esse assembly conforme especificado pelo tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-356">Gets the custom attributes for this assembly as specified by type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9ab64-357">Uma matriz que contém os atributos personalizados para este assembly conforme especificado por <paramref name="attributeType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-357">An array that contains the custom attributes for this assembly as specified by <paramref name="attributeType" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ab64-358">Esse método implementa correspondente <xref:System.Reflection.ICustomAttributeProvider> método de interface.</span><span class="sxs-lookup"><span data-stu-id="9ab64-358">This method implements the corresponding <xref:System.Reflection.ICustomAttributeProvider> interface method.</span></span> <span data-ttu-id="9ab64-359">Portanto, o `inherit` parâmetro deve ser especificado mesmo que ele será ignorado.</span><span class="sxs-lookup"><span data-stu-id="9ab64-359">Therefore, the `inherit` parameter must be specified even though it is ignored.</span></span>  
  
 <span data-ttu-id="9ab64-360">Um atributo pseudo indica bits dos metadados principais que devem ser definidas quando o atributo estiver presente.</span><span class="sxs-lookup"><span data-stu-id="9ab64-360">A pseudo-attribute indicates bits of the core metadata that must be set when the attribute is present.</span></span> <span data-ttu-id="9ab64-361">Ao contrário de um atributo personalizado que estende os metadados para um tipo e é salvo junto com o tipo, um atributo pseudo modifica metadados para o tipo e, em seguida, será descartado.</span><span class="sxs-lookup"><span data-stu-id="9ab64-361">Unlike a custom attribute that extends the metadata for a type and is saved along with the type, a pseudo-attribute modifies the metadata for the type and then is discarded.</span></span> <span data-ttu-id="9ab64-362">Alguns dos bits resultantes não podem ser acessado usando APIs de reflexão existente.</span><span class="sxs-lookup"><span data-stu-id="9ab64-362">Some of the resulting bits cannot be accessed using existing reflection APIs.</span></span>  
  
 <span data-ttu-id="9ab64-363">A tabela a seguir resume os atributos de pseudo diferentes e os acessadores para os bits que estão disponíveis em reflexão.</span><span class="sxs-lookup"><span data-stu-id="9ab64-363">The following table summarizes the different pseudo-attributes and the accessors for the bits that are available in reflection.</span></span>  
  
|<span data-ttu-id="9ab64-364">Atributo pseudo</span><span class="sxs-lookup"><span data-stu-id="9ab64-364">Pseudo-Attribute</span></span>|<span data-ttu-id="9ab64-365">Bits de metadados</span><span class="sxs-lookup"><span data-stu-id="9ab64-365">Metadata Bits</span></span>|<span data-ttu-id="9ab64-366">Acessador de reflexão</span><span class="sxs-lookup"><span data-stu-id="9ab64-366">Reflection Accessor</span></span>|  
|-----------------------|-------------------|-------------------------|  
|<span data-ttu-id="9ab64-367">DllImportAttribute</span><span class="sxs-lookup"><span data-stu-id="9ab64-367">DllImportAttribute</span></span>|<span data-ttu-id="9ab64-368">CorPInvokeMap</span><span class="sxs-lookup"><span data-stu-id="9ab64-368">CorPInvokeMap</span></span><br /><br /> <span data-ttu-id="9ab64-369">Nome da DLL</span><span class="sxs-lookup"><span data-stu-id="9ab64-369">DLL name</span></span>|<span data-ttu-id="9ab64-370">Nenhum acessador PInvokeMap método/global comum para atributos de método.</span><span class="sxs-lookup"><span data-stu-id="9ab64-370">No accessor for PInvokeMap for ordinary method/global method attributes.</span></span><br /><br /> <span data-ttu-id="9ab64-371">Nenhum acessador para o nome da DLL.</span><span class="sxs-lookup"><span data-stu-id="9ab64-371">No accessor for DLL name.</span></span>|  
|<span data-ttu-id="9ab64-372">GuidAttribute</span><span class="sxs-lookup"><span data-stu-id="9ab64-372">GuidAttribute</span></span>|<span data-ttu-id="9ab64-373">Armazenado como um atributo personalizado real.</span><span class="sxs-lookup"><span data-stu-id="9ab64-373">Stored as a real custom attribute.</span></span>|<span data-ttu-id="9ab64-374">Acessado como um atributo personalizado real.</span><span class="sxs-lookup"><span data-stu-id="9ab64-374">Accessed as a real custom attribute.</span></span>|  
|<span data-ttu-id="9ab64-375">ComImportAttribute</span><span class="sxs-lookup"><span data-stu-id="9ab64-375">ComImportAttribute</span></span>|<span data-ttu-id="9ab64-376">CorTypeAttr.tdImport</span><span class="sxs-lookup"><span data-stu-id="9ab64-376">CorTypeAttr.tdImport</span></span>|<span data-ttu-id="9ab64-377">Type.Attributes.Import</span><span class="sxs-lookup"><span data-stu-id="9ab64-377">Type.Attributes.Import</span></span>|  
|<span data-ttu-id="9ab64-378">SerializableAttribute</span><span class="sxs-lookup"><span data-stu-id="9ab64-378">SerializableAttribute</span></span>|<span data-ttu-id="9ab64-379">CorTypeAttr.tdSerializable</span><span class="sxs-lookup"><span data-stu-id="9ab64-379">CorTypeAttr.tdSerializable</span></span>|<span data-ttu-id="9ab64-380">Type.Attributes.Serializable</span><span class="sxs-lookup"><span data-stu-id="9ab64-380">Type.Attributes.Serializable</span></span>|  
|<span data-ttu-id="9ab64-381">NonSerializedAttribute</span><span class="sxs-lookup"><span data-stu-id="9ab64-381">NonSerializedAttribute</span></span>|<span data-ttu-id="9ab64-382">CorFieldAttr.fdNotSerialized</span><span class="sxs-lookup"><span data-stu-id="9ab64-382">CorFieldAttr.fdNotSerialized</span></span>|<span data-ttu-id="9ab64-383">FieldInfo.Attributes.NotSerialized</span><span class="sxs-lookup"><span data-stu-id="9ab64-383">FieldInfo.Attributes.NotSerialized</span></span>|  
|<span data-ttu-id="9ab64-384">MethodImplAttribute</span><span class="sxs-lookup"><span data-stu-id="9ab64-384">MethodImplAttribute</span></span>|<span data-ttu-id="9ab64-385">CorMethodImpl</span><span class="sxs-lookup"><span data-stu-id="9ab64-385">CorMethodImpl</span></span>|<span data-ttu-id="9ab64-386">MethodInfo.GetMethodImplementationFlags()</span><span class="sxs-lookup"><span data-stu-id="9ab64-386">MethodInfo.GetMethodImplementationFlags()</span></span><br /><br /> <span data-ttu-id="9ab64-387">ConstructorInfo.GetMethodImplementationFlags()</span><span class="sxs-lookup"><span data-stu-id="9ab64-387">ConstructorInfo.GetMethodImplementationFlags()</span></span>|  
|<span data-ttu-id="9ab64-388">MarshalAsAttribute</span><span class="sxs-lookup"><span data-stu-id="9ab64-388">MarshalAsAttribute</span></span>|<span data-ttu-id="9ab64-389">Vários bits.</span><span class="sxs-lookup"><span data-stu-id="9ab64-389">Various bits.</span></span>|<span data-ttu-id="9ab64-390">Nenhum acessador.</span><span class="sxs-lookup"><span data-stu-id="9ab64-390">No accessor.</span></span>|  
|<span data-ttu-id="9ab64-391">PreserveSigAttribute</span><span class="sxs-lookup"><span data-stu-id="9ab64-391">PreserveSigAttribute</span></span>|<span data-ttu-id="9ab64-392">CorMethodImpl.miOLE</span><span class="sxs-lookup"><span data-stu-id="9ab64-392">CorMethodImpl.miOLE</span></span>|<span data-ttu-id="9ab64-393">MethodInfo.GetMethodImplementationFlags().OLE</span><span class="sxs-lookup"><span data-stu-id="9ab64-393">MethodInfo.GetMethodImplementationFlags().OLE</span></span><br /><br /> <span data-ttu-id="9ab64-394">ConstructorInfo.GetMethodImplementationFlags().OLE</span><span class="sxs-lookup"><span data-stu-id="9ab64-394">ConstructorInfo.GetMethodImplementationFlags().OLE</span></span>|  
|<span data-ttu-id="9ab64-395">InAttribute</span><span class="sxs-lookup"><span data-stu-id="9ab64-395">InAttribute</span></span>|<span data-ttu-id="9ab64-396">CorParamAttr.pdIn</span><span class="sxs-lookup"><span data-stu-id="9ab64-396">CorParamAttr.pdIn</span></span>|<span data-ttu-id="9ab64-397">ParameterInfo.Attributes.In</span><span class="sxs-lookup"><span data-stu-id="9ab64-397">ParameterInfo.Attributes.In</span></span>|  
|<span data-ttu-id="9ab64-398">OutAttribute</span><span class="sxs-lookup"><span data-stu-id="9ab64-398">OutAttribute</span></span>|<span data-ttu-id="9ab64-399">CorParamAttr.pdOut</span><span class="sxs-lookup"><span data-stu-id="9ab64-399">CorParamAttr.pdOut</span></span>|<span data-ttu-id="9ab64-400">ParameterInfo.Attributes.Out</span><span class="sxs-lookup"><span data-stu-id="9ab64-400">ParameterInfo.Attributes.Out</span></span>|  
|<span data-ttu-id="9ab64-401">StructLayoutAttribute</span><span class="sxs-lookup"><span data-stu-id="9ab64-401">StructLayoutAttribute</span></span>|<span data-ttu-id="9ab64-402">CorTypeAttr.tdLayoutSequential</span><span class="sxs-lookup"><span data-stu-id="9ab64-402">CorTypeAttr.tdLayoutSequential</span></span><br /><br /> <span data-ttu-id="9ab64-403">CorTypeAttr.tdExplicitLayout</span><span class="sxs-lookup"><span data-stu-id="9ab64-403">CorTypeAttr.tdExplicitLayout</span></span><br /><br /> <span data-ttu-id="9ab64-404">CorTypeAttr.tdAnsiClass</span><span class="sxs-lookup"><span data-stu-id="9ab64-404">CorTypeAttr.tdAnsiClass</span></span><br /><br /> <span data-ttu-id="9ab64-405">CorTypeAttr.tdUnicodeClass</span><span class="sxs-lookup"><span data-stu-id="9ab64-405">CorTypeAttr.tdUnicodeClass</span></span><br /><br /> <span data-ttu-id="9ab64-406">CorTypeAttr.tdAutoClass</span><span class="sxs-lookup"><span data-stu-id="9ab64-406">CorTypeAttr.tdAutoClass</span></span><br /><br /> <span data-ttu-id="9ab64-407">Empacotamento de classe.</span><span class="sxs-lookup"><span data-stu-id="9ab64-407">Class packing.</span></span>|<span data-ttu-id="9ab64-408">Type.Attributes.LayoutSequential</span><span class="sxs-lookup"><span data-stu-id="9ab64-408">Type.Attributes.LayoutSequential</span></span><br /><br /> <span data-ttu-id="9ab64-409">Type.Attributes.ExplicitLayout</span><span class="sxs-lookup"><span data-stu-id="9ab64-409">Type.Attributes.ExplicitLayout</span></span><br /><br /> <span data-ttu-id="9ab64-410">Type.Attributes.AnsiClass</span><span class="sxs-lookup"><span data-stu-id="9ab64-410">Type.Attributes.AnsiClass</span></span><br /><br /> <span data-ttu-id="9ab64-411">Type.Attributes.UnicodeClass</span><span class="sxs-lookup"><span data-stu-id="9ab64-411">Type.Attributes.UnicodeClass</span></span><br /><br /> <span data-ttu-id="9ab64-412">Type.Attributes.AutoClass</span><span class="sxs-lookup"><span data-stu-id="9ab64-412">Type.Attributes.AutoClass</span></span><br /><br /> <span data-ttu-id="9ab64-413">Nenhum acessador.</span><span class="sxs-lookup"><span data-stu-id="9ab64-413">No accessor.</span></span>|  
|<span data-ttu-id="9ab64-414">FieldOffsetAttribute</span><span class="sxs-lookup"><span data-stu-id="9ab64-414">FieldOffsetAttribute</span></span>|<span data-ttu-id="9ab64-415">Deslocamento de campo.</span><span class="sxs-lookup"><span data-stu-id="9ab64-415">Field offset.</span></span>|<span data-ttu-id="9ab64-416">Nenhum acessador.</span><span class="sxs-lookup"><span data-stu-id="9ab64-416">No accessor.</span></span>|  
|<span data-ttu-id="9ab64-417">AssemblyLoadAttribute</span><span class="sxs-lookup"><span data-stu-id="9ab64-417">AssemblyLoadAttribute</span></span>|<span data-ttu-id="9ab64-418">CorAssemblyFlags</span><span class="sxs-lookup"><span data-stu-id="9ab64-418">CorAssemblyFlags</span></span>|<span data-ttu-id="9ab64-419">Nenhum acessador ou enumerador.</span><span class="sxs-lookup"><span data-stu-id="9ab64-419">No accessor or enumerator.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9ab64-420">
            <paramref name="attributeType" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-420">
              <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9ab64-421">
            <paramref name="attributeType" /> não é um tipo de tempo de execução.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-421">
              <paramref name="attributeType" /> is not a runtime type.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="9ab64-422">quando invocado com associação tardia por meio de mecanismos como <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-422">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="9ab64-423">Enumeração associada: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-423">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributesData">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt; GetCustomAttributesData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class System.Reflection.CustomAttributeData&gt; GetCustomAttributesData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetCustomAttributesData" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCustomAttributesData () As IList(Of CustomAttributeData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeData ^&gt; ^ GetCustomAttributesData();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9ab64-424">Retorna informações sobre os atributos que foram aplicados ao <see cref="T:System.Reflection.Assembly" /> atual, expressos como objetos <see cref="T:System.Reflection.CustomAttributeData" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-424">Returns information about the attributes that have been applied to the current <see cref="T:System.Reflection.Assembly" />, expressed as <see cref="T:System.Reflection.CustomAttributeData" /> objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9ab64-425">Uma lista genérica de objetos <see cref="T:System.Reflection.CustomAttributeData" /> que representam dados sobre os atributos que foram aplicados ao assembly atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-425">A generic list of <see cref="T:System.Reflection.CustomAttributeData" /> objects representing data about the attributes that have been applied to the current assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ab64-426">Use esse método para examinar os atributos personalizados de código no contexto exclusivo de reflexão, em casos onde os atributos personalizados próprios são definidos no código que é carregado no contexto exclusivo de reflexão.</span><span class="sxs-lookup"><span data-stu-id="9ab64-426">Use this method to examine the custom attributes of code in the reflection-only context, in cases where the custom attributes themselves are defined in code that is loaded into the reflection-only context.</span></span> <span data-ttu-id="9ab64-427">Métodos como <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType> e <xref:System.Reflection.Assembly.GetCustomAttributes%2A?displayProperty=nameWithType> não pode ser usado em tais casos, porque eles criar instâncias dos atributos.</span><span class="sxs-lookup"><span data-stu-id="9ab64-427">Methods like <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType> and <xref:System.Reflection.Assembly.GetCustomAttributes%2A?displayProperty=nameWithType> cannot be used in such cases, because they create instances of the attributes.</span></span> <span data-ttu-id="9ab64-428">O código no contexto exclusivo de reflexão não pode ser executado.</span><span class="sxs-lookup"><span data-stu-id="9ab64-428">Code in the reflection-only context cannot be executed.</span></span> <span data-ttu-id="9ab64-429">Para obter mais informações e como código, consulte o <xref:System.Reflection.CustomAttributeData> classe.</span><span class="sxs-lookup"><span data-stu-id="9ab64-429">For more information and for example code, see the <xref:System.Reflection.CustomAttributeData> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEntryAssembly">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly GetEntryAssembly ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly GetEntryAssembly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetEntryAssembly" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEntryAssembly () As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ GetEntryAssembly();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9ab64-430">Obtém o processo executável no domínio de aplicativo padrão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-430">Gets the process executable in the default application domain.</span>
          </span>
          <span data-ttu-id="9ab64-431">Em outros domínios de aplicativo, é o primeiro executável que foi executado por <see cref="M:System.AppDomain.ExecuteAssembly(System.String)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-431">In other application domains, this is the first executable that was executed by <see cref="M:System.AppDomain.ExecuteAssembly(System.String)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9ab64-432">O assembly é processo executável no domínio de aplicativo padrão ou o primeiro executável que foi executado por <see cref="M:System.AppDomain.ExecuteAssembly(System.String)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-432">The assembly that is the process executable in the default application domain, or the first executable that was executed by <see cref="M:System.AppDomain.ExecuteAssembly(System.String)" />.</span>
          </span>
          <span data-ttu-id="9ab64-433">Pode retornar <see langword="null" /> quando chamado do código não gerenciado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-433">Can return <see langword="null" /> when called from unmanaged code.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ab64-434">O <xref:System.Reflection.Assembly.GetEntryAssembly%2A> método pode retornar `null` quando um assembly gerenciado foi carregado de um aplicativo não gerenciado.</span><span class="sxs-lookup"><span data-stu-id="9ab64-434">The <xref:System.Reflection.Assembly.GetEntryAssembly%2A> method can return `null` when a managed assembly has been loaded from an unmanaged application.</span></span> <span data-ttu-id="9ab64-435">Por exemplo, se um aplicativo não gerenciado cria uma instância de um componente COM escrita em c#, uma chamada para o <xref:System.Reflection.Assembly.GetEntryAssembly%2A> método do componente de c# retornará nulo, porque o ponto de entrada para o processo de código não gerenciado em vez de um assembly gerenciado.</span><span class="sxs-lookup"><span data-stu-id="9ab64-435">For example, if an unmanaged application creates an instance of a COM component written in C#, a call to the <xref:System.Reflection.Assembly.GetEntryAssembly%2A> method from the C# component returns null, because the entry point for the process was unmanaged code rather than a managed assembly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExecutingAssembly">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly GetExecutingAssembly ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly GetExecutingAssembly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetExecutingAssembly" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetExecutingAssembly () As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ GetExecutingAssembly();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9ab64-436">Obtém o assembly que contém o código executado no momento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-436">Gets the assembly that contains the code that is currently executing.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9ab64-437">O assembly que contém o código que está sendo executado no momento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-437">The assembly that contains the code that is currently executing.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ab64-438">Por motivos de desempenho, você deve chamar esse método somente quando você não souber em tempo de design o assembly está em execução atualmente.</span><span class="sxs-lookup"><span data-stu-id="9ab64-438">For performance reasons, you should call this method only when you do not know at design time what assembly is currently executing.</span></span> <span data-ttu-id="9ab64-439">A maneira recomendada para recuperar um <xref:System.Reflection.Assembly> objeto que representa o assembly atual é usar o <xref:System.Type.Assembly%2A?displayProperty=nameWithType> propriedade de um tipo encontrado no assembly, como mostra o exemplo a seguir.</span><span class="sxs-lookup"><span data-stu-id="9ab64-439">The recommended way to retrieve an <xref:System.Reflection.Assembly> object that represents the current assembly is to use the <xref:System.Type.Assembly%2A?displayProperty=nameWithType> property of a type found in the assembly, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Reflection.Assembly.GetExecutingAssembly#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.reflection.assembly.getexecutingassembly/cs/assembly1.cs#1)]
 [!code-vb[System.Reflection.Assembly.GetExecutingAssembly#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.reflection.assembly.getexecutingassembly/vb/assembly1.vb#1)]  
  
 <span data-ttu-id="9ab64-440">Para obter o assembly que contém o método que é chamado de código em execução no momento, use <xref:System.Reflection.Assembly.GetCallingAssembly%2A>.</span><span class="sxs-lookup"><span data-stu-id="9ab64-440">To get the assembly that contains the method that called the currently executing code, use <xref:System.Reflection.Assembly.GetCallingAssembly%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9ab64-441">O exemplo a seguir usa o <xref:System.Type.Assembly%2A?displayProperty=nameWithType> propriedade para obter o assembly em execução no momento com base em um tipo contido nesse assembly.</span><span class="sxs-lookup"><span data-stu-id="9ab64-441">The following example uses the <xref:System.Type.Assembly%2A?displayProperty=nameWithType> property to get the currently executing assembly based on a type contained in that assembly.</span></span> <span data-ttu-id="9ab64-442">Ele também chama o <xref:System.Reflection.Assembly.GetExecutingAssembly%2A> método para mostrar que retorna um <xref:System.Reflection.Assembly> objeto que representa o mesmo assembly.</span><span class="sxs-lookup"><span data-stu-id="9ab64-442">It also calls the <xref:System.Reflection.Assembly.GetExecutingAssembly%2A> method to show that it returns an <xref:System.Reflection.Assembly> object that represents the same assembly.</span></span>  
  
 [!code-cpp[System.Reflection.Assembly.GetExecutingAssembly#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.reflection.assembly.getexecutingassembly/cpp/getexecutingassembly1.cpp#5)]
 [!code-csharp[System.Reflection.Assembly.GetExecutingAssembly#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.reflection.assembly.getexecutingassembly/cs/getexecutingassembly1.cs#5)]
 [!code-vb[System.Reflection.Assembly.GetExecutingAssembly#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.reflection.assembly.getexecutingassembly/vb/getexecutingassembly1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExportedTypes">
      <MemberSignature Language="C#" Value="public virtual Type[] GetExportedTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type[] GetExportedTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetExportedTypes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExportedTypes () As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;Type ^&gt; ^ GetExportedTypes();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetExportedTypes</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9ab64-443">Obtém os tipos públicos definidos nesse assembly que são visíveis fora do assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-443">Gets the public types defined in this assembly that are visible outside the assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9ab64-444">Uma matriz que representa os tipos definidos nesse assembly que são visíveis fora do assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-444">An array that represents the types defined in this assembly that are visible outside the assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ab64-445">Os únicos tipos visíveis fora de um assembly são os tipos públicos e tipos públicos aninhados em outros tipos públicos.</span><span class="sxs-lookup"><span data-stu-id="9ab64-445">The only types visible outside an assembly are public types and public types nested within other public types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9ab64-446">O exemplo de código a seguir define um número de classes com vários níveis de acesso e chamadas <xref:System.Reflection.Assembly.GetExportedTypes%2A> para exibir os que estão visíveis fora do assembly.</span><span class="sxs-lookup"><span data-stu-id="9ab64-446">The following code sample defines a number of classes with various access levels, and calls <xref:System.Reflection.Assembly.GetExportedTypes%2A> to display the ones that are visible from outside the assembly.</span></span>  
  
 [!code-cpp[Assembly.GetExportedTypes#1](~/samples/snippets/cpp/VS_Snippets_CLR/Assembly.GetExportedTypes/CPP/source.cpp#1)]
 [!code-csharp[Assembly.GetExportedTypes#1](~/samples/snippets/csharp/VS_Snippets_CLR/Assembly.GetExportedTypes/CS/source.cs#1)]
 [!code-vb[Assembly.GetExportedTypes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Assembly.GetExportedTypes/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="9ab64-447">O assembly é um assembly dinâmico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-447">The assembly is a dynamic assembly.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="9ab64-448">Não é possível carregar um assembly dependente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-448">Unable to load a dependent assembly.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetFile">
      <MemberSignature Language="C#" Value="public virtual System.IO.FileStream GetFile (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.FileStream GetFile(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFile (name As String) As FileStream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::FileStream ^ GetFile(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetFile(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileStream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="9ab64-449">O nome do arquivo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-449">The name of the specified file.</span>
          </span>
          <span data-ttu-id="9ab64-450">Não inclua o caminho para o arquivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-450">Do not include the path to the file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9ab64-451">Obtém um <see cref="T:System.IO.FileStream" /> para o arquivo especificado na tabela de arquivo do manifesto desse assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-451">Gets a <see cref="T:System.IO.FileStream" /> for the specified file in the file table of the manifest of this assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9ab64-452">Um fluxo que contém o arquivo especificado ou <see langword="null" /> se o arquivo não for encontrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-452">A stream that contains the specified file, or <see langword="null" /> if the file is not found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ab64-453">Esse método funciona em ambos os arquivos de recurso públicas e privadas.</span><span class="sxs-lookup"><span data-stu-id="9ab64-453">This method works on both public and private resource files.</span></span>  
  
 <span data-ttu-id="9ab64-454">O `name` não deve incluir o caminho para o arquivo.</span><span class="sxs-lookup"><span data-stu-id="9ab64-454">The `name` should not include the path to the file.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="9ab64-455">Não foi possível carregar um arquivo que foi encontrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-455">A file that was found could not be loaded.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9ab64-456">O parâmetro <paramref name="name" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-456">The <paramref name="name" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9ab64-457">O parâmetro <paramref name="name" /> é uma cadeia de caracteres vazia ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-457">The <paramref name="name" /> parameter is an empty string ("").</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="9ab64-458">
            <paramref name="name" /> não foi encontrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-458">
              <paramref name="name" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="9ab64-459">
            <paramref name="name" /> não é um assembly válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-459">
              <paramref name="name" /> is not a valid assembly.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="9ab64-460">para acessar o caminho e para ler o arquivo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-460">for access to the path and for reading the specified file.</span>
          </span>
          <span data-ttu-id="9ab64-461">Enumerações associadas: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> e <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-461">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFiles">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9ab64-462">Obtém os arquivos na tabela de arquivo de um manifesto do assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-462">Gets the files in the file table of an assembly manifest.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public virtual System.IO.FileStream[] GetFiles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.FileStream[] GetFiles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetFiles" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFiles () As FileStream()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::IO::FileStream ^&gt; ^ GetFiles();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetFiles</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileStream[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9ab64-463">Obtém os arquivos na tabela de arquivo de um manifesto do assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-463">Gets the files in the file table of an assembly manifest.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9ab64-464">Uma matriz de fluxos que contêm os arquivos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-464">An array of streams that contain the files.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ab64-465">Esse método funciona em arquivos de recurso públicas e privadas.</span><span class="sxs-lookup"><span data-stu-id="9ab64-465">This method works on public and private resource files.</span></span>  
  
 <span data-ttu-id="9ab64-466">Essa sobrecarga é equivalente a chamar o <xref:System.Reflection.Assembly.GetFiles%28System.Boolean%29> sobrecarga e especificando `false`.</span><span class="sxs-lookup"><span data-stu-id="9ab64-466">This overload is equivalent to calling the <xref:System.Reflection.Assembly.GetFiles%28System.Boolean%29> overload and specifying `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="9ab64-467">Não foi possível carregar um arquivo que foi encontrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-467">A file that was found could not be loaded.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="9ab64-468">Um arquivo não foi encontrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-468">A file was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="9ab64-469">Um arquivo não é um assembly válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-469">A file was not a valid assembly.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public virtual System.IO.FileStream[] GetFiles (bool getResourceModules);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.FileStream[] GetFiles(bool getResourceModules) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetFiles(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFiles (getResourceModules As Boolean) As FileStream()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::IO::FileStream ^&gt; ^ GetFiles(bool getResourceModules);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetFiles(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileStream[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="getResourceModules" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="getResourceModules">
          <span data-ttu-id="9ab64-470">
            <see langword="true" /> para incluir os módulos de recursos; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-470">
              <see langword="true" /> to include resource modules; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9ab64-471">Obtém os arquivos na tabela de arquivos de um manifesto do assembly, especificando se deseja-se incluir os módulos de recursos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-471">Gets the files in the file table of an assembly manifest, specifying whether to include resource modules.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9ab64-472">Uma matriz de fluxos que contêm os arquivos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-472">An array of streams that contain the files.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ab64-473">Esse método funciona em arquivos de recurso públicas e privadas.</span><span class="sxs-lookup"><span data-stu-id="9ab64-473">This method works on public and private resource files.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="9ab64-474">Não foi possível carregar um arquivo que foi encontrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-474">A file that was found could not be loaded.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="9ab64-475">Um arquivo não foi encontrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-475">A file was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="9ab64-476">Um arquivo não é um assembly válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-476">A file was not a valid assembly.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetForwardedTypes">
      <MemberSignature Language="C#" Value="public virtual Type[] GetForwardedTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type[] GetForwardedTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetForwardedTypes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetForwardedTypes () As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;Type ^&gt; ^ GetForwardedTypes();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetHashCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9ab64-477">Retorna o código hash para essa instância.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-477">Returns the hash code for this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9ab64-478">Um código de hash do inteiro assinado de 32 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-478">A 32-bit signed integer hash code.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetLoadedModules">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9ab64-479">Obtém todos os módulos carregados que fazem parte desse assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-479">Gets all the loaded modules that are part of this assembly.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetLoadedModules">
      <MemberSignature Language="C#" Value="public System.Reflection.Module[] GetLoadedModules ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Module[] GetLoadedModules() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetLoadedModules" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLoadedModules () As Module()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Reflection::Module ^&gt; ^ GetLoadedModules();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetLoadedModules</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9ab64-480">Obtém todos os módulos carregados que fazem parte desse assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-480">Gets all the loaded modules that are part of this assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9ab64-481">Uma matriz de módulos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-481">An array of modules.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLoadedModules">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.Module[] GetLoadedModules (bool getResourceModules);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Module[] GetLoadedModules(bool getResourceModules) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetLoadedModules(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLoadedModules (getResourceModules As Boolean) As Module()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Reflection::Module ^&gt; ^ GetLoadedModules(bool getResourceModules);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetLoadedModules(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="getResourceModules" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="getResourceModules">
          <span data-ttu-id="9ab64-482">
            <see langword="true" /> para incluir os módulos de recursos; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-482">
              <see langword="true" /> to include resource modules; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9ab64-483">Obtém todos os módulos carregados que fazem parte desse assembly, especificando se os módulos de recursos devem ser incluídos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-483">Gets all the loaded modules that are part of this assembly, specifying whether to include resource modules.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9ab64-484">Uma matriz de módulos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-484">An array of modules.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManifestResourceInfo">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.ManifestResourceInfo GetManifestResourceInfo (string resourceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.ManifestResourceInfo GetManifestResourceInfo(string resourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetManifestResourceInfo(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManifestResourceInfo (resourceName As String) As ManifestResourceInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::ManifestResourceInfo ^ GetManifestResourceInfo(System::String ^ resourceName);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetManifestResourceInfo(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ManifestResourceInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resourceName">
          <span data-ttu-id="9ab64-485">O nome do recurso, que diferencia maiúsculas de minúsculas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-485">The case-sensitive name of the resource.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9ab64-486">Retorna informações sobre como o recurso em questão foi persistido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-486">Returns information about how the given resource has been persisted.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9ab64-487">Um objeto que é populado com informações sobre a topologia do recurso ou <see langword="null" />, se o recurso não for encontrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-487">An object that is populated with information about the resource's topology, or <see langword="null" /> if the resource is not found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ab64-488">Informações sobre o recurso é retornado somente se o recurso é visível ao chamador ou o chamador tem <xref:System.Security.Permissions.ReflectionPermission>.</span><span class="sxs-lookup"><span data-stu-id="9ab64-488">Resource information is returned only if the resource is visible to the caller, or the caller has <xref:System.Security.Permissions.ReflectionPermission>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9ab64-489">
            <paramref name="resourceName" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-489">
              <paramref name="resourceName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9ab64-490">O parâmetro <paramref name="resourceName" /> é uma cadeia de caracteres vazia ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-490">The <paramref name="resourceName" /> parameter is an empty string ("").</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="9ab64-491">quando invocado com associação tardia por meio de mecanismos como <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-491">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="9ab64-492">Enumeração associada: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-492">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Reflection.Assembly.GetManifestResourceNames" />
      </Docs>
    </Member>
    <Member MemberName="GetManifestResourceNames">
      <MemberSignature Language="C#" Value="public virtual string[] GetManifestResourceNames ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetManifestResourceNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetManifestResourceNames" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManifestResourceNames () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::String ^&gt; ^ GetManifestResourceNames();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetManifestResourceNames</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9ab64-493">Retorna os nomes de todos os recursos nesse assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-493">Returns the names of all the resources in this assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9ab64-494">Uma matriz que contém os nomes de todos os recursos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-494">An array that contains the names of all the resources.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ab64-495">Você pode usar o nome de cada recurso na matriz retornada por este método, da seguinte maneira:</span><span class="sxs-lookup"><span data-stu-id="9ab64-495">You can use each resource name in the array returned by this method as follows:</span></span>  
  
-   <span data-ttu-id="9ab64-496">Você pode passar o nome do recurso para o <xref:System.Reflection.Assembly.GetManifestResourceInfo%2A> método para obter informações adicionais sobre o recurso.</span><span class="sxs-lookup"><span data-stu-id="9ab64-496">You can pass the resource name to the <xref:System.Reflection.Assembly.GetManifestResourceInfo%2A> method to get additional information about the resource.</span></span>  
  
-   <span data-ttu-id="9ab64-497">Se o nome identifica um arquivo. Resources binário, você pode remover a sua extensão de arquivo. Resources e passá-lo para o <xref:System.Resources.ResourceManager.%23ctor%28System.String%2CSystem.Reflection.Assembly%29?displayProperty=nameWithType> construtor para instanciar o Gerenciador de recursos.</span><span class="sxs-lookup"><span data-stu-id="9ab64-497">If the name identifies a binary .resources file, you can remove its .resources file extension and pass it to the <xref:System.Resources.ResourceManager.%23ctor%28System.String%2CSystem.Reflection.Assembly%29?displayProperty=nameWithType> constructor to instantiate the resource manager.</span></span>  
  
-   <span data-ttu-id="9ab64-498">Você pode passar o nome do recurso para o <xref:System.Reflection.Assembly.GetManifestResourceStream%2A> método para recuperar um <xref:System.IO.Stream> objeto que você pode passar para o <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29?displayProperty=nameWithType> construtor.</span><span class="sxs-lookup"><span data-stu-id="9ab64-498">You can pass the resource name to the <xref:System.Reflection.Assembly.GetManifestResourceStream%2A> method to retrieve a <xref:System.IO.Stream> object that you can then pass to the <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29?displayProperty=nameWithType> constructor.</span></span>  
  
-   <span data-ttu-id="9ab64-499">Você pode passar o nome do recurso para o <xref:System.Reflection.Assembly.GetManifestResourceStream%2A> método para recuperar um <xref:System.IO.Stream> objeto que você pode passar para o <xref:System.Resources.ResourceSet.%23ctor%28System.IO.Stream%29?displayProperty=nameWithType> construtor.</span><span class="sxs-lookup"><span data-stu-id="9ab64-499">You can pass the resource name to the <xref:System.Reflection.Assembly.GetManifestResourceStream%2A> method to retrieve a <xref:System.IO.Stream> object that you can then pass to the <xref:System.Resources.ResourceSet.%23ctor%28System.IO.Stream%29?displayProperty=nameWithType> constructor.</span></span>  
  
 <span data-ttu-id="9ab64-500">Informações sobre o recurso é retornado somente se o recurso é visível ao chamador ou o chamador tem <xref:System.Security.Permissions.ReflectionPermission>.</span><span class="sxs-lookup"><span data-stu-id="9ab64-500">Resource information is returned only if the resource is visible to the caller, or the caller has <xref:System.Security.Permissions.ReflectionPermission>.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="9ab64-501">quando invocado com associação tardia por meio de mecanismos como <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-501">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="9ab64-502">Enumeração associada: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-502">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Reflection.Assembly.GetManifestResourceStream(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetManifestResourceStream">
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9ab64-503">Carrega o recurso de manifesto especificado desse assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-503">Loads the specified manifest resource from this assembly.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetManifestResourceStream">
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream GetManifestResourceStream (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream GetManifestResourceStream(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetManifestResourceStream(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManifestResourceStream (name As String) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Stream ^ GetManifestResourceStream(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetManifestResourceStream(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="9ab64-504">O nome que diferencia maiúsculas de minúsculas do recurso de manifesto solicitado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-504">The case-sensitive name of the manifest resource being requested.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9ab64-505">Carrega o recurso de manifesto especificado desse assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-505">Loads the specified manifest resource from this assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9ab64-506">O recurso de manifesto; ou <see langword="null" /> se nenhum recurso foi especificado durante a compilação ou se o recurso não é visível para o chamador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-506">The manifest resource; or <see langword="null" /> if no resources were specified during compilation or if the resource is not visible to the caller.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ab64-507">Um recurso de manifesto é um recurso (como um arquivo de imagem) que é inserido no assembly em tempo de compilação.</span><span class="sxs-lookup"><span data-stu-id="9ab64-507">A manifest resource is a resource (such as an image file) that is embedded in the assembly at compile time.</span></span> <span data-ttu-id="9ab64-508">Para obter mais informações sobre recursos de manifesto, consulte [Noções básicas de recursos do Microsoft .NET Framework](http://go.microsoft.com/fwlink/?LinkId=204554) na biblioteca MSDN.</span><span class="sxs-lookup"><span data-stu-id="9ab64-508">For more information about manifest resources, see [Microsoft .NET Framework Resource Basics](http://go.microsoft.com/fwlink/?LinkId=204554) in the MSDN Library.</span></span>  
  
 <span data-ttu-id="9ab64-509">Informações sobre o recurso é retornado somente se o recurso é visível ao chamador ou o chamador tem <xref:System.Security.Permissions.ReflectionPermission>.</span><span class="sxs-lookup"><span data-stu-id="9ab64-509">Resource information is returned only if the resource is visible to the caller, or the caller has <xref:System.Security.Permissions.ReflectionPermission>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9ab64-510">Este método retorna `null` se um recurso particular em outro assembly é acessado e o chamador não tem <xref:System.Security.Permissions.ReflectionPermission> com o <xref:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess?displayProperty=nameWithType> sinalizador.</span><span class="sxs-lookup"><span data-stu-id="9ab64-510">This method returns `null` if a private resource in another assembly is accessed and the caller does not have <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess?displayProperty=nameWithType> flag.</span></span>  
  
 <span data-ttu-id="9ab64-511">Se o manifesto do assembly lista um arquivo de recurso, <xref:System.Reflection.Assembly.GetManifestResourceStream%2A> retorna um <xref:System.IO.Stream> objeto mesmo se o arquivo de recurso não pode ser encontrado no disco no momento.</span><span class="sxs-lookup"><span data-stu-id="9ab64-511">If the assembly manifest lists a resource file, <xref:System.Reflection.Assembly.GetManifestResourceStream%2A> returns a <xref:System.IO.Stream> object even if the resource file cannot be found on disk at the time.</span></span> <span data-ttu-id="9ab64-512">Se o arquivo de recurso não for encontrado, passando resultante <xref:System.IO.Stream> o objeto para o <xref:System.Resources.ResourceReader> construtor faz com que um <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="9ab64-512">If the resource file is not found, passing the resulting <xref:System.IO.Stream> object to the <xref:System.Resources.ResourceReader> constructor causes an <xref:System.ArgumentException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9ab64-513">O parâmetro <paramref name="name" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-513">The <paramref name="name" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9ab64-514">O parâmetro <paramref name="name" /> é uma cadeia de caracteres vazia ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-514">The <paramref name="name" /> parameter is an empty string ("").</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="9ab64-515">
            <block subset="none" type="note">
              <para> No [.NET para aplicativos da Windows Store](http://go.microsoft.com/fwlink/?LinkID=247912) ou na [Biblioteca de Classes Portátil](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), capture a exceção de classe base, <see cref="T:System.IO.IOException" />.  </para>
            </block>  Não foi possível carregar um arquivo que foi encontrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-515">
              <block subset="none" type="note">
                <para> In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch the base class exception, <see cref="T:System.IO.IOException" />, instead.  </para>
              </block>  A file that was found could not be loaded.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="9ab64-516">
            <paramref name="name" /> não foi encontrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-516">
              <paramref name="name" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="9ab64-517">
            <paramref name="name" /> não é um assembly válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-517">
              <paramref name="name" /> is not a valid assembly.</span>
          </span>
        </exception>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="9ab64-518">O tamanho do recurso é maior que <see cref="F:System.Int64.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-518">Resource length is greater than <see cref="F:System.Int64.MaxValue" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="9ab64-519">quando invocado com associação tardia por meio de mecanismos como <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-519">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="9ab64-520">Enumeração associada: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-520">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Reflection.Assembly.GetManifestResourceNames" />
      </Docs>
    </Member>
    <Member MemberName="GetManifestResourceStream">
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream GetManifestResourceStream (Type type, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream GetManifestResourceStream(class System.Type type, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetManifestResourceStream(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Stream ^ GetManifestResourceStream(Type ^ type, System::String ^ name);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetManifestResourceStream(System.Type,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="9ab64-521">O tipo cujo namespace é usado para definir o escopo do nome de recurso de manifesto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-521">The type whose namespace is used to scope the manifest resource name.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="9ab64-522">O nome que diferencia maiúsculas de minúsculas do recurso de manifesto solicitado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-522">The case-sensitive name of the manifest resource being requested.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9ab64-523">Carrega o recurso de manifesto especificado, o escopo pelo namespace do tipo especificado, desse assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-523">Loads the specified manifest resource, scoped by the namespace of the specified type, from this assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9ab64-524">O recurso de manifesto; ou <see langword="null" /> se nenhum recurso foi especificado durante a compilação ou se o recurso não é visível para o chamador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-524">The manifest resource; or <see langword="null" /> if no resources were specified during compilation or if the resource is not visible to the caller.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ab64-525">Por exemplo, se o nome completo especificado para `type` é "MyNameSpace.MyClasses" e `name` é "Net", este método sobrecarregar procura um recurso chamado "MyNameSpace.Net".</span><span class="sxs-lookup"><span data-stu-id="9ab64-525">For example, if the full name specified for `type` is "MyNameSpace.MyClasses" and `name` is "Net", this method overload searches for a resource named "MyNameSpace.Net".</span></span>  
  
 <span data-ttu-id="9ab64-526">Um recurso de manifesto é um recurso (como um arquivo de imagem) que é inserido no assembly em tempo de compilação.</span><span class="sxs-lookup"><span data-stu-id="9ab64-526">A manifest resource is a resource (such as an image file) that is embedded in the assembly at compile time.</span></span> <span data-ttu-id="9ab64-527">Para obter mais informações sobre recursos de manifesto, consulte [Noções básicas de recursos do Microsoft .NET Framework](http://go.microsoft.com/fwlink/?LinkId=204554) na biblioteca MSDN.</span><span class="sxs-lookup"><span data-stu-id="9ab64-527">For more information about manifest resources, see [Microsoft .NET Framework Resource Basics](http://go.microsoft.com/fwlink/?LinkId=204554) in the MSDN Library.</span></span>  
  
 <span data-ttu-id="9ab64-528">Informações sobre o recurso é retornado somente se o recurso é visível ao chamador ou o chamador tem <xref:System.Security.Permissions.ReflectionPermission>.</span><span class="sxs-lookup"><span data-stu-id="9ab64-528">Resource information is returned only if the resource is visible to the caller, or the caller has <xref:System.Security.Permissions.ReflectionPermission>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9ab64-529">Este método retorna `null` se um recurso particular em outro assembly é acessado e o chamador não tem <xref:System.Security.Permissions.ReflectionPermission> com o <xref:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess?displayProperty=nameWithType> sinalizador.</span><span class="sxs-lookup"><span data-stu-id="9ab64-529">This method returns `null` if a private resource in another assembly is accessed and the caller does not have <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess?displayProperty=nameWithType> flag.</span></span>  
  
 <span data-ttu-id="9ab64-530">Se o manifesto do assembly lista um arquivo de recurso, <xref:System.Reflection.Assembly.GetManifestResourceStream%2A> retorna um <xref:System.IO.Stream> objeto mesmo se o arquivo de recurso não pode ser encontrado no disco no momento.</span><span class="sxs-lookup"><span data-stu-id="9ab64-530">If the assembly manifest lists a resource file, <xref:System.Reflection.Assembly.GetManifestResourceStream%2A> returns a <xref:System.IO.Stream> object even if the resource file cannot be found on disk at the time.</span></span> <span data-ttu-id="9ab64-531">Se o arquivo de recurso não for encontrado, passando resultante <xref:System.IO.Stream> o objeto para o <xref:System.Resources.ResourceReader> construtor faz com que um <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="9ab64-531">If the resource file is not found, passing the resulting <xref:System.IO.Stream> object to the <xref:System.Resources.ResourceReader> constructor causes an <xref:System.ArgumentException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9ab64-532">O parâmetro <paramref name="name" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-532">The <paramref name="name" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9ab64-533">O parâmetro <paramref name="name" /> é uma cadeia de caracteres vazia ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-533">The <paramref name="name" /> parameter is an empty string ("").</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="9ab64-534">Não foi possível carregar um arquivo que foi encontrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-534">A file that was found could not be loaded.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="9ab64-535">
            <paramref name="name" /> não foi encontrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-535">
              <paramref name="name" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="9ab64-536">
            <paramref name="name" /> não é um assembly válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-536">
              <paramref name="name" /> is not a valid assembly.</span>
          </span>
        </exception>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="9ab64-537">O tamanho do recurso é maior que <see cref="F:System.Int64.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-537">Resource length is greater than <see cref="F:System.Int64.MaxValue" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="9ab64-538">quando invocado com associação tardia por meio de mecanismos como <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-538">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="9ab64-539">Enumeração associada: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-539">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Reflection.Assembly.GetManifestResourceNames" />
      </Docs>
    </Member>
    <Member MemberName="GetModule">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.Module GetModule (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Module GetModule(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetModule(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetModule (name As String) As Module" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::Module ^ GetModule(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetModule(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="9ab64-540">O nome do módulo que está sendo solicitado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-540">The name of the module being requested.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9ab64-541">Obtém o módulo especificado nesse assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-541">Gets the specified module in this assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9ab64-542">O módulo que está sendo solicitado ou <see langword="null" />, se o módulo não tiver sido encontrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-542">The module being requested, or <see langword="null" /> if the module is not found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ab64-543">Esse método funciona em nomes de arquivo.</span><span class="sxs-lookup"><span data-stu-id="9ab64-543">This method works on file names.</span></span>  
  
 <span data-ttu-id="9ab64-544">Classes de `Reflection.Emit` namespace emitir o nome do escopo para um módulo dinâmico.</span><span class="sxs-lookup"><span data-stu-id="9ab64-544">Classes in the `Reflection.Emit` namespace emit the scope name for a dynamic module.</span></span> <span data-ttu-id="9ab64-545">O nome do escopo pode ser determinado pelo <xref:System.Reflection.Module.ScopeName%2A?displayProperty=nameWithType> propriedade.</span><span class="sxs-lookup"><span data-stu-id="9ab64-545">The scope name can be determined by the <xref:System.Reflection.Module.ScopeName%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="9ab64-546">Passar o tipo de módulo a ser `Assembly.GetModule`.</span><span class="sxs-lookup"><span data-stu-id="9ab64-546">Pass the kind of module you want to `Assembly.GetModule`.</span></span> <span data-ttu-id="9ab64-547">Por exemplo, se desejar que o módulo que contém o manifesto do assembly, passe o nome do escopo do módulo a ser `GetModule`.</span><span class="sxs-lookup"><span data-stu-id="9ab64-547">For example, if you want the module that contains the assembly manifest, pass the scope name of the module to `GetModule`.</span></span> <span data-ttu-id="9ab64-548">Caso contrário, passe o nome de arquivo do módulo.</span><span class="sxs-lookup"><span data-stu-id="9ab64-548">Otherwise, pass the file name of the module.</span></span> <span data-ttu-id="9ab64-549">Os assemblies carregados por um do `Load` métodos que têm um parâmetro do byte [] têm apenas um módulo, e que o módulo de manifesto.</span><span class="sxs-lookup"><span data-stu-id="9ab64-549">Assemblies loaded by one of the `Load` methods that have a byte[] parameter have only one module, and that is the manifest module.</span></span> <span data-ttu-id="9ab64-550">Sempre busca esses módulos usando o nome do escopo.</span><span class="sxs-lookup"><span data-stu-id="9ab64-550">Always seek these modules using the scope name.</span></span>  
  
 <span data-ttu-id="9ab64-551">Um tipo pode ser recuperado de um módulo específico usando <xref:System.Reflection.Module.GetType%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="9ab64-551">A type can be retrieved from a specific module using <xref:System.Reflection.Module.GetType%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="9ab64-552">Chamando `Module.GetType` no módulo que contém o manifesto não iniciará uma pesquisa de assembly inteiro.</span><span class="sxs-lookup"><span data-stu-id="9ab64-552">Calling `Module.GetType` on the module containing the manifest will not initiate a search of the entire assembly.</span></span> <span data-ttu-id="9ab64-553">Para recuperar um tipo de um assembly, independentemente de qual módulo está em, você deve chamar <xref:System.Reflection.Assembly.GetType%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="9ab64-553">To retrieve a type from an assembly, regardless of which module it is in, you must call <xref:System.Reflection.Assembly.GetType%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9ab64-554">O parâmetro <paramref name="name" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-554">The <paramref name="name" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9ab64-555">O parâmetro <paramref name="name" /> é uma cadeia de caracteres vazia ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-555">The <paramref name="name" /> parameter is an empty string ("").</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="9ab64-556">Não foi possível carregar um arquivo que foi encontrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-556">A file that was found could not be loaded.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="9ab64-557">
            <paramref name="name" /> não foi encontrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-557">
              <paramref name="name" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="9ab64-558">
            <paramref name="name" /> não é um assembly válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-558">
              <paramref name="name" /> is not a valid assembly.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetModules">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9ab64-559">Obtém todos os módulos que fazem parte desse assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-559">Gets all the modules that are part of this assembly.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetModules">
      <MemberSignature Language="C#" Value="public System.Reflection.Module[] GetModules ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Module[] GetModules() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetModules" />
      <MemberSignature Language="VB.NET" Value="Public Function GetModules () As Module()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Reflection::Module ^&gt; ^ GetModules();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetModules</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9ab64-560">Obtém todos os módulos que fazem parte desse assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-560">Gets all the modules that are part of this assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9ab64-561">Uma matriz de módulos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-561">An array of modules.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ab64-562">Esse método funciona em arquivos de recurso públicas e privadas.</span><span class="sxs-lookup"><span data-stu-id="9ab64-562">This method works on public and private resource files.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9ab64-563">Módulos devem ser emitidos com extensões de nome de arquivo.</span><span class="sxs-lookup"><span data-stu-id="9ab64-563">Modules must be emitted with file name extensions.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9ab64-564">O exemplo a seguir exibe o nome do módulo na matriz retornada que contém o manifesto do assembly.</span><span class="sxs-lookup"><span data-stu-id="9ab64-564">The following example displays the name of the module in the returned array that contains the assembly manifest.</span></span>  
  
 [!code-cpp[Classic Assembly.GetModules Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Assembly.GetModules Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Assembly.GetModules Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Assembly.GetModules Example/CS/source.cs#1)]
 [!code-vb[Classic Assembly.GetModules Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Assembly.GetModules Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="9ab64-565">O módulo a ser carregado não especifica uma extensão de nome de arquivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-565">The module to be loaded does not specify a file name extension.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetModules">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.Module[] GetModules (bool getResourceModules);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Module[] GetModules(bool getResourceModules) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetModules(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetModules (getResourceModules As Boolean) As Module()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Reflection::Module ^&gt; ^ GetModules(bool getResourceModules);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetModules(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="getResourceModules" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="getResourceModules">
          <span data-ttu-id="9ab64-566">
            <see langword="true" /> para incluir os módulos de recursos; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-566">
              <see langword="true" /> to include resource modules; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9ab64-567">Obtém todos os módulos que fazem parte desse assembly, especificando se os módulos de recursos devem ser incluídos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-567">Gets all the modules that are part of this assembly, specifying whether to include resource modules.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9ab64-568">Uma matriz de módulos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-568">An array of modules.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ab64-569">Esse método funciona em arquivos de recurso públicas e privadas.</span><span class="sxs-lookup"><span data-stu-id="9ab64-569">This method works on public and private resource files.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9ab64-570">Módulos devem ser emitidos com extensões de nome de arquivo.</span><span class="sxs-lookup"><span data-stu-id="9ab64-570">Modules must be emitted with file name extensions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetName">
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9ab64-571">Obtém um <see cref="T:System.Reflection.AssemblyName" /> para esse assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-571">Gets an <see cref="T:System.Reflection.AssemblyName" /> for this assembly.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetName">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.AssemblyName GetName ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.AssemblyName GetName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetName () As AssemblyName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::AssemblyName ^ GetName();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.AssemblyName</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9ab64-572">Obtém um <see cref="T:System.Reflection.AssemblyName" /> para esse assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-572">Gets an <see cref="T:System.Reflection.AssemblyName" /> for this assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9ab64-573">Um objeto que contém o nome de exibição totalmente analisado para esse assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-573">An object that contains the fully parsed display name for this assembly.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="9ab64-574">para acessar o caminho do assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-574">for access to the path of the assembly.</span>
          </span>
          <span data-ttu-id="9ab64-575">Enumeração associada: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-575">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetName">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.AssemblyName GetName (bool copiedName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.AssemblyName GetName(bool copiedName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetName(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetName (copiedName As Boolean) As AssemblyName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::AssemblyName ^ GetName(bool copiedName);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetName(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.AssemblyName</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="copiedName" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="copiedName">
          <span data-ttu-id="9ab64-576">
            <see langword="true" /> para definir o <see cref="P:System.Reflection.Assembly.CodeBase" /> com o local do assembly depois que tiver sido feita uma cópia de sombra dele; <see langword="false" /> para definir <see cref="P:System.Reflection.Assembly.CodeBase" /> com o local original.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-576">
              <see langword="true" /> to set the <see cref="P:System.Reflection.Assembly.CodeBase" /> to the location of the assembly after it was shadow copied; <see langword="false" /> to set <see cref="P:System.Reflection.Assembly.CodeBase" /> to the original location.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9ab64-577">Obtém um <see cref="T:System.Reflection.AssemblyName" /> para esse assembly, definindo a base de código como especificado por <paramref name="copiedName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-577">Gets an <see cref="T:System.Reflection.AssemblyName" /> for this assembly, setting the codebase as specified by <paramref name="copiedName" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9ab64-578">Um objeto que contém o nome de exibição totalmente analisado para esse assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-578">An object that contains the fully parsed display name for this assembly.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="9ab64-579">para acessar o caminho do assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-579">for access to the path of the assembly.</span>
          </span>
          <span data-ttu-id="9ab64-580">Enumeração associada: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-580">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="9ab64-581">O objeto a ser populado com informações de serialização.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-581">The object to be populated with serialization information.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="9ab64-582">O contexto de destino da serialização.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-582">The destination context of the serialization.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9ab64-583">Obtém informações de serialização com todos os dados necessários para recriar uma instância desse assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-583">Gets serialization information with all of the data needed to reinstantiate this assembly.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9ab64-584">
            <paramref name="info" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-584">
              <paramref name="info" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="9ab64-585">Requer confiança total para o chamador imediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-585">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="9ab64-586">Este membro não pode ser usado pelo código transparente ou parcialmente confiável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-586">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetReferencedAssemblies">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.AssemblyName[] GetReferencedAssemblies ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.AssemblyName[] GetReferencedAssemblies() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetReferencedAssemblies" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetReferencedAssemblies () As AssemblyName()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Reflection::AssemblyName ^&gt; ^ GetReferencedAssemblies();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetReferencedAssemblies</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.AssemblyName[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9ab64-587">Obtém os objetos <see cref="T:System.Reflection.AssemblyName" /> para todos os assemblies referenciados por esse assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-587">Gets the <see cref="T:System.Reflection.AssemblyName" /> objects for all the assemblies referenced by this assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9ab64-588">Uma matriz que contém os nomes de exibição totalmente analisados de todos os assemblies referenciados por esse assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-588">An array that contains the fully parsed display names of all the assemblies referenced by this assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="9ab64-589">Começando com o [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], o <xref:System.Reflection.AssemblyName.HashAlgorithm%2A> propriedade de um <xref:System.Reflection.AssemblyName> objeto retornado por esse método é <xref:System.Configuration.Assemblies.AssemblyHashAlgorithm.None?displayProperty=nameWithType> se não houver nenhum algoritmo de hash para o assembly referenciado, ou se o algoritmo de hash do assembly referenciado não é identificado pelo <xref:System.Configuration.Assemblies.AssemblyHashAlgorithm?displayProperty=nameWithType> enumeração.</span><span class="sxs-lookup"><span data-stu-id="9ab64-589">Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the <xref:System.Reflection.AssemblyName.HashAlgorithm%2A> property of an <xref:System.Reflection.AssemblyName> object that is returned by this method is <xref:System.Configuration.Assemblies.AssemblyHashAlgorithm.None?displayProperty=nameWithType> if there is no hash algorithm for the referenced assembly, or if the hash algorithm of the referenced assembly is not identified by the <xref:System.Configuration.Assemblies.AssemblyHashAlgorithm?displayProperty=nameWithType> enumeration.</span></span> <span data-ttu-id="9ab64-590">Em versões anteriores do .NET Framework, o <xref:System.Reflection.AssemblyName.HashAlgorithm%2A> propriedade retornada <xref:System.Configuration.Assemblies.AssemblyHashAlgorithm.SHA1?displayProperty=nameWithType> nessa situação.</span><span class="sxs-lookup"><span data-stu-id="9ab64-590">In previous versions of the .NET Framework, the <xref:System.Reflection.AssemblyName.HashAlgorithm%2A> property returned <xref:System.Configuration.Assemblies.AssemblyHashAlgorithm.SHA1?displayProperty=nameWithType> in this situation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9ab64-591">O exemplo de código a seguir demonstra a chamar o <xref:System.Reflection.Assembly.GetReferencedAssemblies%2A> método.</span><span class="sxs-lookup"><span data-stu-id="9ab64-591">The following code example demonstrates calling the <xref:System.Reflection.Assembly.GetReferencedAssemblies%2A> method.</span></span> <span data-ttu-id="9ab64-592">Este exemplo de código é parte de um exemplo maior fornecido para a <xref:System.Reflection.Assembly> classe.</span><span class="sxs-lookup"><span data-stu-id="9ab64-592">This code example is part of a larger example provided for the <xref:System.Reflection.Assembly> class.</span></span>  
  
 [!code-cpp[Reflection#1](~/samples/snippets/cpp/VS_Snippets_CLR/Reflection/CPP/reflection.cpp#1)]
 [!code-csharp[Reflection#1](~/samples/snippets/csharp/VS_Snippets_CLR/Reflection/CS/Reflection.cs#1)]
 [!code-vb[Reflection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Reflection/VB/Reflection.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSatelliteAssembly">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9ab64-593">Obtém o assembly satélite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-593">Gets the satellite assembly.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSatelliteAssembly">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.Assembly GetSatelliteAssembly (System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Assembly GetSatelliteAssembly(class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSatelliteAssembly (culture As CultureInfo) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::Assembly ^ GetSatelliteAssembly(System::Globalization::CultureInfo ^ culture);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="culture">
          <span data-ttu-id="9ab64-594">A cultura especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-594">The specified culture.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9ab64-595">Obtém o assembly satélite para a cultura especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-595">Gets the satellite assembly for the specified culture.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9ab64-596">O assembly satélite especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-596">The specified satellite assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ab64-597">Assemblies satélites contém recursos localizados, diferentes de assemblies de aplicativo principal, que contêm código executável não localizáveis e recursos para uma única cultura que servem como o padrão ou a cultura neutra.</span><span class="sxs-lookup"><span data-stu-id="9ab64-597">Satellite assemblies contain localized resources, as distinct from main application assemblies, which contain non-localizable executable code and resources for a single culture that serve as the default or neutral culture.</span></span>  
  
 <span data-ttu-id="9ab64-598">Chame este método para usar a versão atual do assembly.</span><span class="sxs-lookup"><span data-stu-id="9ab64-598">Call this method to use your current assembly version.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9ab64-599">
            <paramref name="culture" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-599">
              <paramref name="culture" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="9ab64-600">Não foi possível localizar o assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-600">The assembly cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="9ab64-601">O assembly satélite com um nome de arquivo correspondente foi encontrado, mas o <see langword="CultureInfo" /> não correspondia ao especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-601">The satellite assembly with a matching file name was found, but the <see langword="CultureInfo" /> did not match the one specified.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="9ab64-602">O assembly satélite não é um assembly válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-602">The satellite assembly is not a valid assembly.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSatelliteAssembly">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.Assembly GetSatelliteAssembly (System.Globalization.CultureInfo culture, Version version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Assembly GetSatelliteAssembly(class System.Globalization.CultureInfo culture, class System.Version version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo,System.Version)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::Assembly ^ GetSatelliteAssembly(System::Globalization::CultureInfo ^ culture, Version ^ version);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo,System.Version)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="version" Type="System.Version" />
      </Parameters>
      <Docs>
        <param name="culture">
          <span data-ttu-id="9ab64-603">A cultura especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-603">The specified culture.</span>
          </span>
        </param>
        <param name="version">
          <span data-ttu-id="9ab64-604">A versão do assembly satélite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-604">The version of the satellite assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9ab64-605">Obtém a versão especificada do assembly satélite para a cultura especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-605">Gets the specified version of the satellite assembly for the specified culture.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9ab64-606">O assembly satélite especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-606">The specified satellite assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ab64-607">Assemblies satélites contém recursos localizados, diferentes de assemblies de aplicativo principal, que contêm código executável não localizáveis e recursos para uma única cultura que servem como o padrão ou a cultura neutra.</span><span class="sxs-lookup"><span data-stu-id="9ab64-607">Satellite assemblies contain localized resources, as distinct from main application assemblies, which contain non-localizable executable code and resources for a single culture that serve as the default or neutral culture.</span></span>  
  
 <span data-ttu-id="9ab64-608">Chamar o <xref:System.Reflection.Assembly.GetSatelliteAssembly%28System.Globalization.CultureInfo%29> sobrecarga para usar a versão atual do assembly.</span><span class="sxs-lookup"><span data-stu-id="9ab64-608">Call the <xref:System.Reflection.Assembly.GetSatelliteAssembly%28System.Globalization.CultureInfo%29> overload to use your current assembly version.</span></span>  
  
 <span data-ttu-id="9ab64-609">Se `version` é `null`, a versão do assembly atual será usada se o recurso e os assemblies principais são assinados.</span><span class="sxs-lookup"><span data-stu-id="9ab64-609">If `version` is `null`, the current assembly version is used if both the resource and main assemblies are signed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9ab64-610">
            <paramref name="culture" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-610">
              <paramref name="culture" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="9ab64-611">O assembly satélite com um nome de arquivo correspondente foi encontrado, mas o <see langword="CultureInfo" /> ou a versão não correspondia ao especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-611">The satellite assembly with a matching file name was found, but the <see langword="CultureInfo" /> or the version did not match the one specified.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="9ab64-612">Não foi possível localizar o assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-612">The assembly cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="9ab64-613">O assembly satélite não é um assembly válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-613">The satellite assembly is not a valid assembly.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetType">
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9ab64-614">Obtém o objeto <see cref="T:System.Type" /> que representa o tipo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-614">Gets the <see cref="T:System.Type" /> object that represents the specified type.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public virtual Type GetType (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetType (name As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetType(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetType(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="9ab64-615">O nome completo do tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-615">The full name of the type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9ab64-616">Obtém o objeto <see cref="T:System.Type" /> com o nome especificado na instância do assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-616">Gets the <see cref="T:System.Type" /> object with the specified name in the assembly instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9ab64-617">Um objeto que representa a classe especificada ou <see langword="null" /> se a classe não for encontrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-617">An object that represents the specified class, or <see langword="null" /> if the class is not found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ab64-618">Este método pesquisa apenas a instância atual do assembly.</span><span class="sxs-lookup"><span data-stu-id="9ab64-618">This method only searches the current assembly instance.</span></span> <span data-ttu-id="9ab64-619">O `name` parâmetro inclui o namespace, mas não o assembly.</span><span class="sxs-lookup"><span data-stu-id="9ab64-619">The `name` parameter includes the namespace but not the assembly.</span></span> <span data-ttu-id="9ab64-620">Para pesquisar outros assemblies para um tipo, use o <xref:System.Type.GetType%28System.String%29?displayProperty=nameWithType> sobrecarga de método, o que pode opcionalmente incluir um nome de exibição do assembly como parte do nome do tipo.</span><span class="sxs-lookup"><span data-stu-id="9ab64-620">To search other assemblies for a type, use the <xref:System.Type.GetType%28System.String%29?displayProperty=nameWithType> method overload, which can optionally include an assembly display name as part of the type name.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9ab64-621">Se o tipo foi encaminhado para outro conjunto, ele ainda é retornado por este método.</span><span class="sxs-lookup"><span data-stu-id="9ab64-621">If the type has been forwarded to another assembly, it is still returned by this method.</span></span> <span data-ttu-id="9ab64-622">Para obter informações sobre o encaminhamento de tipo, consulte [encaminhamento de tipo no Common Language Runtime](~/docs/framework/app-domains/type-forwarding-in-the-common-language-runtime.md).</span><span class="sxs-lookup"><span data-stu-id="9ab64-622">For information on type forwarding, see [Type Forwarding in the Common Language Runtime](~/docs/framework/app-domains/type-forwarding-in-the-common-language-runtime.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9ab64-623">O exemplo a seguir define um resumo `MeansOfTransportation` classe no `Transportation` namespace.</span><span class="sxs-lookup"><span data-stu-id="9ab64-623">The following example defines an abstract `MeansOfTransportation` class in the `Transportation` namespace.</span></span> <span data-ttu-id="9ab64-624">Ele chama o <xref:System.Reflection.Assembly.GetType%28System.String%29> método para recuperar seu <xref:System.Type> objeto, chamadas de <xref:System.Type.GetProperties%2A?displayProperty=nameWithType> método para obter uma matriz de <xref:System.Reflection.PropertyInfo> objetos que representam as propriedades do tipo e, em seguida, exibe informações sobre o tipo abstraem propriedades.</span><span class="sxs-lookup"><span data-stu-id="9ab64-624">It calls the <xref:System.Reflection.Assembly.GetType%28System.String%29> method to retrieve its <xref:System.Type> object, calls the <xref:System.Type.GetProperties%2A?displayProperty=nameWithType> method to get an array of <xref:System.Reflection.PropertyInfo> objects that represent the type's properties, and then displays information on the type's abstract properties.</span></span> <span data-ttu-id="9ab64-625">Observe que a chamada para o <xref:System.Reflection.Assembly.GetType%28System.String%29> método usa o nome do tipo totalmente qualificado (ou seja, seu namespace juntamente com seu nome de tipo).</span><span class="sxs-lookup"><span data-stu-id="9ab64-625">Note that the call to the <xref:System.Reflection.Assembly.GetType%28System.String%29> method uses the type's fully qualified name (that is, its namespace along with its type name).</span></span>  
  
 [!code-csharp[System.Reflection.Assembly.GetType#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.reflection.assembly.gettype/cs/gettype1.cs#1)]
 [!code-vb[System.Reflection.Assembly.GetType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.reflection.assembly.gettype/vb/gettype1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9ab64-626">
            <paramref name="name" /> é inválido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-626">
              <paramref name="name" /> is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9ab64-627">
            <paramref name="name" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-627">
              <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="9ab64-628">
            <paramref name="name" /> exige um assembly dependente que não pôde ser encontrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-628">
              <paramref name="name" /> requires a dependent assembly that could not be found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="9ab64-629">
            <block subset="none" type="note">
              <para> No [.NET para aplicativos da Windows Store](http://go.microsoft.com/fwlink/?LinkID=247912) ou na [Biblioteca de Classes Portátil](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), capture a exceção de classe base, <see cref="T:System.IO.IOException" />.  </para>
            </block>
            <paramref name="name" /> requer um assembly dependente que foi encontrado mas não pôde ser carregado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-629">
              <block subset="none" type="note">
                <para> In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch the base class exception, <see cref="T:System.IO.IOException" />, instead.  </para>
              </block>
              <paramref name="name" /> requires a dependent assembly that was found but could not be loaded.</span>
          </span>
          <span data-ttu-id="9ab64-630">-ou-  O assembly atual foi carregado no contexto somente reflexão e o <paramref name="name" /> exige um assembly dependente que não foi pré-carregado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-630">-or-  The current assembly was loaded into the reflection-only context, and <paramref name="name" /> requires a dependent assembly that was not preloaded.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="9ab64-631">
            <paramref name="name" /> exige um assembly dependente, mas o arquivo não é um assembly válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-631">
              <paramref name="name" /> requires a dependent assembly, but the file is not a valid assembly.</span>
          </span>
          <span data-ttu-id="9ab64-632">-ou-  <paramref name="name" /> exige um assembly dependente que foi compilado para uma versão do tempo de execução posterior à versão carregada no momento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-632">-or-  <paramref name="name" /> requires a dependent assembly which was compiled for a version of the runtime later than the currently loaded version.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public virtual Type GetType (string name, bool throwOnError);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType(string name, bool throwOnError) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetType(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetType (name As String, throwOnError As Boolean) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetType(System::String ^ name, bool throwOnError);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetType(System.String,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="throwOnError" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="9ab64-633">O nome completo do tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-633">The full name of the type.</span>
          </span>
        </param>
        <param name="throwOnError">
          <span data-ttu-id="9ab64-634">
            <see langword="true" /> para gerar uma exceção se não for possível encontrar o tipo; <see langword="false" /> para retornar <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-634">
              <see langword="true" /> to throw an exception if the type is not found; <see langword="false" /> to return <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9ab64-635">Obtém o objeto <see cref="T:System.Type" /> com o nome especificado na instância do assembly e, opcionalmente, lança uma exceção se o tipo não for encontrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-635">Gets the <see cref="T:System.Type" /> object with the specified name in the assembly instance and optionally throws an exception if the type is not found.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9ab64-636">Um objeto que representa a classe especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-636">An object that represents the specified class.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ab64-637">Este método pesquisa apenas a instância atual do assembly.</span><span class="sxs-lookup"><span data-stu-id="9ab64-637">This method only searches the current assembly instance.</span></span> <span data-ttu-id="9ab64-638">O `name` parâmetro inclui o namespace, mas não o assembly.</span><span class="sxs-lookup"><span data-stu-id="9ab64-638">The `name` parameter includes the namespace but not the assembly.</span></span> <span data-ttu-id="9ab64-639">Para pesquisar outros assemblies para um tipo, use o <xref:System.Type.GetType%28System.String%29?displayProperty=nameWithType> sobrecarga de método, o que pode opcionalmente incluir um nome de exibição do assembly como parte do nome do tipo.</span><span class="sxs-lookup"><span data-stu-id="9ab64-639">To search other assemblies for a type, use the <xref:System.Type.GetType%28System.String%29?displayProperty=nameWithType> method overload, which can optionally include an assembly display name as part of the type name.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9ab64-640">Se o tipo foi encaminhado para outro conjunto, ele ainda é retornado por este método.</span><span class="sxs-lookup"><span data-stu-id="9ab64-640">If the type has been forwarded to another assembly, it is still returned by this method.</span></span> <span data-ttu-id="9ab64-641">Para obter informações sobre o encaminhamento de tipo, consulte [encaminhamento de tipo no Common Language Runtime](~/docs/framework/app-domains/type-forwarding-in-the-common-language-runtime.md).</span><span class="sxs-lookup"><span data-stu-id="9ab64-641">For information on type forwarding, see [Type Forwarding in the Common Language Runtime](~/docs/framework/app-domains/type-forwarding-in-the-common-language-runtime.md).</span></span>  
  
 <span data-ttu-id="9ab64-642">O `throwOnError` parâmetro afeta somente o que acontece quando o tipo não foi encontrado.</span><span class="sxs-lookup"><span data-stu-id="9ab64-642">The `throwOnError` parameter only affects what happens when the type is not found.</span></span> <span data-ttu-id="9ab64-643">Ele não afeta todas as exceções que podem ser geradas.</span><span class="sxs-lookup"><span data-stu-id="9ab64-643">It does not affect any other exceptions that might be thrown.</span></span> <span data-ttu-id="9ab64-644">Em particular, se o tipo é encontrado, mas não pode ser carregado, <xref:System.TypeLoadException> pode ser acionada mesmo se `throwOnError` é `false`.</span><span class="sxs-lookup"><span data-stu-id="9ab64-644">In particular, if the type is found but cannot be loaded, <xref:System.TypeLoadException> can be thrown even if `throwOnError` is `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9ab64-645">
            <paramref name="name" /> é inválido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-645">
              <paramref name="name" /> is invalid.</span>
          </span>
          <span data-ttu-id="9ab64-646">-ou- O tamanho de <paramref name="name" /> excede 1.024 caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-646">-or-  The length of <paramref name="name" /> exceeds 1024 characters.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9ab64-647">
            <paramref name="name" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-647">
              <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="9ab64-648">
            <paramref name="throwOnError" /> é <see langword="true" /> e o tipo não pode ser encontrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-648">
              <paramref name="throwOnError" /> is <see langword="true" />, and the type cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="9ab64-649">
            <paramref name="name" /> exige um assembly dependente que não pôde ser encontrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-649">
              <paramref name="name" /> requires a dependent assembly that could not be found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="9ab64-650">
            <paramref name="name" /> exige um assembly dependente que foi encontrado, mas que não pôde ser carregado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-650">
              <paramref name="name" /> requires a dependent assembly that was found but could not be loaded.</span>
          </span>
          <span data-ttu-id="9ab64-651">-ou-  O assembly atual foi carregado no contexto somente reflexão e o <paramref name="name" /> exige um assembly dependente que não foi pré-carregado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-651">-or-  The current assembly was loaded into the reflection-only context, and <paramref name="name" /> requires a dependent assembly that was not preloaded.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="9ab64-652">
            <paramref name="name" /> exige um assembly dependente, mas o arquivo não é um assembly válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-652">
              <paramref name="name" /> requires a dependent assembly, but the file is not a valid assembly.</span>
          </span>
          <span data-ttu-id="9ab64-653">-ou-  <paramref name="name" /> exige um assembly dependente que foi compilado para uma versão do tempo de execução posterior à versão carregada no momento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-653">-or-  <paramref name="name" /> requires a dependent assembly which was compiled for a version of the runtime later than the currently loaded version.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public virtual Type GetType (string name, bool throwOnError, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType(string name, bool throwOnError, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetType(System.String,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetType (name As String, throwOnError As Boolean, ignoreCase As Boolean) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetType(System::String ^ name, bool throwOnError, bool ignoreCase);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetType(System.String,System.Boolean,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="throwOnError" Type="System.Boolean" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="9ab64-654">O nome completo do tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-654">The full name of the type.</span>
          </span>
        </param>
        <param name="throwOnError">
          <span data-ttu-id="9ab64-655">
            <see langword="true" /> para gerar uma exceção se não for possível encontrar o tipo; <see langword="false" /> para retornar <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-655">
              <see langword="true" /> to throw an exception if the type is not found; <see langword="false" /> to return <see langword="null" />.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="9ab64-656">
            <see langword="true" /> para ignorar maiúsculas e minúsculas do nome do tipo; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-656">
              <see langword="true" /> to ignore the case of the type name; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9ab64-657">Obtém o objeto <see cref="T:System.Type" /> com o nome especificado na instância do assembly, com a opção de ignorar a diferença entre maiúsculas e minúsculas e de gerar uma exceção se o tipo não for encontrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-657">Gets the <see cref="T:System.Type" /> object with the specified name in the assembly instance, with the options of ignoring the case, and of throwing an exception if the type is not found.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9ab64-658">Um objeto que representa a classe especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-658">An object that represents the specified class.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ab64-659">Este método pesquisa apenas a instância atual do assembly.</span><span class="sxs-lookup"><span data-stu-id="9ab64-659">This method only searches the current assembly instance.</span></span> <span data-ttu-id="9ab64-660">O `name` parâmetro inclui o namespace, mas não o assembly.</span><span class="sxs-lookup"><span data-stu-id="9ab64-660">The `name` parameter includes the namespace but not the assembly.</span></span> <span data-ttu-id="9ab64-661">Para pesquisar outros assemblies para um tipo, use o <xref:System.Type.GetType%28System.String%29?displayProperty=nameWithType> sobrecarga de método, o que pode opcionalmente incluir um nome de exibição do assembly como parte do nome do tipo.</span><span class="sxs-lookup"><span data-stu-id="9ab64-661">To search other assemblies for a type, use the <xref:System.Type.GetType%28System.String%29?displayProperty=nameWithType> method overload, which can optionally include an assembly display name as part of the type name.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9ab64-662">Se o tipo foi encaminhado para outro conjunto, ele ainda é retornado por este método.</span><span class="sxs-lookup"><span data-stu-id="9ab64-662">If the type has been forwarded to another assembly, it is still returned by this method.</span></span> <span data-ttu-id="9ab64-663">Para obter informações sobre o encaminhamento de tipo, consulte [encaminhamento de tipo no Common Language Runtime](~/docs/framework/app-domains/type-forwarding-in-the-common-language-runtime.md).</span><span class="sxs-lookup"><span data-stu-id="9ab64-663">For information on type forwarding, see [Type Forwarding in the Common Language Runtime](~/docs/framework/app-domains/type-forwarding-in-the-common-language-runtime.md).</span></span>  
  
 <span data-ttu-id="9ab64-664">O `throwOnError` parâmetro afeta somente o que acontece quando o tipo não foi encontrado.</span><span class="sxs-lookup"><span data-stu-id="9ab64-664">The `throwOnError` parameter only affects what happens when the type is not found.</span></span> <span data-ttu-id="9ab64-665">Ele não afeta todas as exceções que podem ser geradas.</span><span class="sxs-lookup"><span data-stu-id="9ab64-665">It does not affect any other exceptions that might be thrown.</span></span> <span data-ttu-id="9ab64-666">Em particular, se o tipo é encontrado, mas não pode ser carregado, <xref:System.TypeLoadException> pode ser acionada mesmo se `throwOnError` é `false`.</span><span class="sxs-lookup"><span data-stu-id="9ab64-666">In particular, if the type is found but cannot be loaded, <xref:System.TypeLoadException> can be thrown even if `throwOnError` is `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9ab64-667">
            <paramref name="name" /> é inválido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-667">
              <paramref name="name" /> is invalid.</span>
          </span>
          <span data-ttu-id="9ab64-668">-ou- O tamanho de <paramref name="name" /> excede 1.024 caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-668">-or-  The length of <paramref name="name" /> exceeds 1024 characters.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9ab64-669">
            <paramref name="name" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-669">
              <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="9ab64-670">
            <paramref name="throwOnError" /> é <see langword="true" /> e o tipo não pode ser encontrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-670">
              <paramref name="throwOnError" /> is <see langword="true" />, and the type cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="9ab64-671">
            <paramref name="name" /> exige um assembly dependente que não pôde ser encontrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-671">
              <paramref name="name" /> requires a dependent assembly that could not be found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="9ab64-672">
            <paramref name="name" /> exige um assembly dependente que foi encontrado, mas que não pôde ser carregado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-672">
              <paramref name="name" /> requires a dependent assembly that was found but could not be loaded.</span>
          </span>
          <span data-ttu-id="9ab64-673">-ou-  O assembly atual foi carregado no contexto somente reflexão e o <paramref name="name" /> exige um assembly dependente que não foi pré-carregado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-673">-or-  The current assembly was loaded into the reflection-only context, and <paramref name="name" /> requires a dependent assembly that was not preloaded.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="9ab64-674">
            <paramref name="name" /> exige um assembly dependente, mas o arquivo não é um assembly válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-674">
              <paramref name="name" /> requires a dependent assembly, but the file is not a valid assembly.</span>
          </span>
          <span data-ttu-id="9ab64-675">-ou-  <paramref name="name" /> exige um assembly dependente que foi compilado para uma versão do tempo de execução posterior à versão carregada no momento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-675">-or-  <paramref name="name" /> requires a dependent assembly which was compiled for a version of the runtime later than the currently loaded version.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetTypes">
      <MemberSignature Language="C#" Value="public virtual Type[] GetTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type[] GetTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetTypes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTypes () As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;Type ^&gt; ^ GetTypes();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetTypes</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9ab64-676">Obtém os tipos definidos neste assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-676">Gets the types defined in this assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9ab64-677">Uma matriz que contém todos os tipos que são definidos nesse assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-677">An array that contains all the types that are defined in this assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ab64-678">A matriz retornada inclui tipos aninhados.</span><span class="sxs-lookup"><span data-stu-id="9ab64-678">The returned array includes nested types.</span></span>  
  
 <span data-ttu-id="9ab64-679">Se o <xref:System.Reflection.Assembly.GetTypes%2A> método for chamado em um assembly e um tipo nesse assembly é dependente de um tipo em um assembly que não tenha sido carregado (por exemplo, se ela deriva de um tipo no assembly segundo), um <xref:System.Reflection.ReflectionTypeLoadException> é gerada.</span><span class="sxs-lookup"><span data-stu-id="9ab64-679">If the <xref:System.Reflection.Assembly.GetTypes%2A> method is called on an assembly and a type in that assembly is dependent on a type in an assembly that has not been loaded (for example, if it derives from a type in the second assembly), a <xref:System.Reflection.ReflectionTypeLoadException> is thrown.</span></span> <span data-ttu-id="9ab64-680">Por exemplo, isso pode acontecer se o primeiro assembly foi carregado com o <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A> ou <xref:System.Reflection.Assembly.ReflectionOnlyLoadFrom%2A> métodos e o segundo conjunto não foi carregado.</span><span class="sxs-lookup"><span data-stu-id="9ab64-680">For example, this can happen if the first assembly was loaded with the <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A> or <xref:System.Reflection.Assembly.ReflectionOnlyLoadFrom%2A> methods, and the second assembly was not loaded.</span></span> <span data-ttu-id="9ab64-681">Isso também pode acontecer com assemblies carregados usando o <xref:System.Reflection.Assembly.Load%2A> e <xref:System.Reflection.Assembly.LoadFile%2A> métodos se o segundo conjunto não pode ser localizada quando o <xref:System.Reflection.Assembly.GetTypes%2A> método é chamado.</span><span class="sxs-lookup"><span data-stu-id="9ab64-681">It can also happen with assemblies loaded using the <xref:System.Reflection.Assembly.Load%2A> and <xref:System.Reflection.Assembly.LoadFile%2A> methods if the second assembly cannot be located when the <xref:System.Reflection.Assembly.GetTypes%2A> method is called.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9ab64-682">Se um tipo foi encaminhado para outro conjunto, ele não está incluído na matriz retornada.</span><span class="sxs-lookup"><span data-stu-id="9ab64-682">If a type has been forwarded to another assembly, it is not included in the returned array.</span></span> <span data-ttu-id="9ab64-683">Para obter informações sobre o encaminhamento de tipo, consulte [encaminhamento de tipo no Common Language Runtime](~/docs/framework/app-domains/type-forwarding-in-the-common-language-runtime.md).</span><span class="sxs-lookup"><span data-stu-id="9ab64-683">For information on type forwarding, see [Type Forwarding in the Common Language Runtime](~/docs/framework/app-domains/type-forwarding-in-the-common-language-runtime.md).</span></span>  
  
 <span data-ttu-id="9ab64-684">Para recuperar uma coleção de <xref:System.Reflection.TypeInfo> objetos em vez de uma matriz de <xref:System.Type> objetos, use o <xref:System.Reflection.Assembly.DefinedTypes%2A?displayProperty=nameWithType> propriedade.</span><span class="sxs-lookup"><span data-stu-id="9ab64-684">To retrieve a collection of <xref:System.Reflection.TypeInfo> objects instead of an array of <xref:System.Type> objects, use the <xref:System.Reflection.Assembly.DefinedTypes%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9ab64-685">O exemplo a seguir exibe os parâmetros de um método em um tipo no assembly especificado.</span><span class="sxs-lookup"><span data-stu-id="9ab64-685">The following example displays parameters of one method on a type in the specified assembly.</span></span>  
  
 [!code-cpp[System.Reflection.Assembly#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Assembly/CPP/assembly.cpp#11)]
 [!code-csharp[System.Reflection.Assembly#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Assembly/CS/assembly.cs#11)]
 [!code-vb[System.Reflection.Assembly#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Assembly/VB/assembly.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.ReflectionTypeLoadException">
          <span data-ttu-id="9ab64-686">O assembly contém um ou mais tipos que não podem ser carregados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-686">The assembly contains one or more types that cannot be loaded.</span>
          </span>
          <span data-ttu-id="9ab64-687">A matriz retornada pela propriedade <see cref="P:System.Reflection.ReflectionTypeLoadException.Types" /> dessa exceção contém um objeto <see cref="T:System.Type" /> para cada tipo que foi carregado e <see langword="null" /> para cada tipo que não pôde ser carregado, enquanto a propriedade <see cref="P:System.Reflection.ReflectionTypeLoadException.LoaderExceptions" /> contém uma exceção para cada tipo que não pôde ser carregado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-687">The array returned by the <see cref="P:System.Reflection.ReflectionTypeLoadException.Types" /> property of this exception contains a <see cref="T:System.Type" /> object for each type that was loaded and <see langword="null" /> for each type that could not be loaded, while the <see cref="P:System.Reflection.ReflectionTypeLoadException.LoaderExceptions" /> property contains an exception for each type that could not be loaded.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GlobalAssemblyCache">
      <MemberSignature Language="C#" Value="public virtual bool GlobalAssemblyCache { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool GlobalAssemblyCache" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.GlobalAssemblyCache" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property GlobalAssemblyCache As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool GlobalAssemblyCache { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._Assembly.GlobalAssemblyCache</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9ab64-688">Obtém um valor que indica se o assembly foi carregado do cache de assembly global.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-688">Gets a value indicating whether the assembly was loaded from the global assembly cache.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9ab64-689">
            <see langword="true" /> Se o assembly foi carregado do cache de assembly global; Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-689">
              <see langword="true" /> if the assembly was loaded from the global assembly cache; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HostContext">
      <MemberSignature Language="C#" Value="public virtual long HostContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 HostContext" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.HostContext" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HostContext As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long HostContext { long get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9ab64-690">Obtém o contexto de host com o qual o assembly foi carregado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-690">Gets the host context with which the assembly was loaded.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9ab64-691">Um valor <see cref="T:System.Int64" /> que indica o contexto de host com o qual o assembly foi carregado, se houver.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-691">An <see cref="T:System.Int64" /> value that indicates the host context with which the assembly was loaded, if any.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageRuntimeVersion">
      <MemberSignature Language="C#" Value="public virtual string ImageRuntimeVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ImageRuntimeVersion" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.ImageRuntimeVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ImageRuntimeVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ImageRuntimeVersion { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9ab64-692">Obtém uma cadeia de caracteres que representa a versão do CLR (Common Language Runtime) salva no arquivo que contém o manifesto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-692">Gets a string representing the version of the common language runtime (CLR) saved in the file containing the manifest.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9ab64-693">O nome da pasta da versão do CLR.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-693">The CLR version folder name.</span>
          </span>
          <span data-ttu-id="9ab64-694">Este não é um caminho completo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-694">This is not a full path.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ab64-695">Por exemplo, o valor para o .NET Framework versão 1.1 seria v 1.1.4322.</span><span class="sxs-lookup"><span data-stu-id="9ab64-695">For example, the value for the .NET Framework version 1.1 would be v1.1.4322.</span></span> <span data-ttu-id="9ab64-696">Os arquivos binários para que a versão deve ser localizados no caminho % windir%\Microsoft.NET\Framework\v1.1.4322.</span><span class="sxs-lookup"><span data-stu-id="9ab64-696">The binary files for that version would be located in the path %windir%\Microsoft.NET\Framework\v1.1.4322.</span></span>  
  
 <span data-ttu-id="9ab64-697">Por padrão, <xref:System.Reflection.Assembly.ImageRuntimeVersion%2A> está definido para a versão do CLR usado para compilar o assembly.</span><span class="sxs-lookup"><span data-stu-id="9ab64-697">By default, <xref:System.Reflection.Assembly.ImageRuntimeVersion%2A> is set to the version of the CLR used to build the assembly.</span></span> <span data-ttu-id="9ab64-698">No entanto, ele pode ter sido definido como outro valor em tempo de compilação.</span><span class="sxs-lookup"><span data-stu-id="9ab64-698">However, it might have been set to another value at compile time.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public virtual bool IsDefined (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsDefined(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.IsDefined(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsDefined (attributeType As Type, inherit As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsDefined(Type ^ attributeType, bool inherit);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.ICustomAttributeProvider.IsDefined(System.Type,System.Boolean)</InterfaceMember>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.IsDefined(System.Type,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType">
          <span data-ttu-id="9ab64-699">O tipo do atributo a ser verificado para esse assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-699">The type of the attribute to be checked for this assembly.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="9ab64-700">Este argumento é ignorado para objetos deste tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-700">This argument is ignored for objects of this type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9ab64-701">Indica se um atributo especificado foi ou não foi aplicado ao assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-701">Indicates whether or not a specified attribute has been applied to the assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9ab64-702">
            <see langword="true" /> se o atributo foi aplicado ao assembly; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-702">
              <see langword="true" /> if the attribute has been applied to the assembly; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9ab64-703">O exemplo de código a seguir se aplica a <xref:System.Reflection.AssemblyTitleAttribute> atributo para um assembly e, em seguida, usa <xref:System.Reflection.Assembly.IsDefined%2A> para indicar se ela foi aplicada.</span><span class="sxs-lookup"><span data-stu-id="9ab64-703">The following code example applies the <xref:System.Reflection.AssemblyTitleAttribute> attribute to an assembly and then uses <xref:System.Reflection.Assembly.IsDefined%2A> to indicate whether it was applied.</span></span> <span data-ttu-id="9ab64-704">Ele também testa um atributo que não foi aplicado.</span><span class="sxs-lookup"><span data-stu-id="9ab64-704">It also tests an attribute that was not applied.</span></span>  
  
 [!code-csharp[System.Reflection.Assembly.IsDefined#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.reflection.assembly.isdefined/CS/isdefined.cs#1)]
 [!code-vb[System.Reflection.Assembly.IsDefined#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.reflection.assembly.isdefined/VB/isdefined.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9ab64-705">
            <paramref name="attributeType" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-705">
              <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9ab64-706">
            <paramref name="attributeType" /> usa um tipo inválido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-706">
              <paramref name="attributeType" /> uses an invalid type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsDynamic">
      <MemberSignature Language="C#" Value="public virtual bool IsDynamic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDynamic" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.IsDynamic" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsDynamic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsDynamic { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9ab64-707">Obtém um valor que indica se o assembly atual foi gerado dinamicamente no processo atual através da emissão de reflexo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-707">Gets a value that indicates whether the current assembly was generated dynamically in the current process by using reflection emit.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9ab64-708">
            <see langword="true" /> Se o assembly atual foi gerado dinamicamente no processo atual; Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-708">
              <see langword="true" /> if the current assembly was generated dynamically in the current process; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ab64-709">Assemblies dinâmicos são representados pela classe derivada <xref:System.Reflection.Emit.AssemblyBuilder>.</span><span class="sxs-lookup"><span data-stu-id="9ab64-709">Dynamic assemblies are represented by the derived class <xref:System.Reflection.Emit.AssemblyBuilder>.</span></span>  
  
 <span data-ttu-id="9ab64-710">Quando um assembly dinâmico é salvo em disco, o assembly salvo não é dinâmico.</span><span class="sxs-lookup"><span data-stu-id="9ab64-710">When a dynamic assembly is saved to disk, the saved assembly is not dynamic.</span></span> <span data-ttu-id="9ab64-711">Se o assembly salvo é carregado em outro domínio de aplicativo ou processo, o <xref:System.Reflection.Assembly.IsDynamic%2A> propriedade retorna `false`.</span><span class="sxs-lookup"><span data-stu-id="9ab64-711">If the saved assembly is loaded into another application domain or process, the <xref:System.Reflection.Assembly.IsDynamic%2A> property returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFullyTrusted">
      <MemberSignature Language="C#" Value="public bool IsFullyTrusted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFullyTrusted" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.IsFullyTrusted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFullyTrusted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFullyTrusted { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9ab64-712">Obtém um valor que indica se o assembly atual é carregado com confiança total.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-712">Gets a value that indicates whether the current assembly is loaded with full trust.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9ab64-713">
            <see langword="true" /> se o assembly atual for carregado com confiança total; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-713">
              <see langword="true" /> if the current assembly is loaded with full trust; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9ab64-714">Carrega um assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-714">Loads an assembly.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly Load (byte[] rawAssembly);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly Load(unsigned int8[] rawAssembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.Load(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Load (rawAssembly As Byte()) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ Load(cli::array &lt;System::Byte&gt; ^ rawAssembly);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawAssembly" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rawAssembly">
          <span data-ttu-id="9ab64-715">Uma matriz de byte que é uma imagem baseada em COFF contendo um assembly emitido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-715">A byte array that is a COFF-based image containing an emitted assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9ab64-716">Carrega o assembly com uma imagem baseada em formato COFF, contendo um assembly emitido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-716">Loads the assembly with a common object file format (COFF)-based image containing an emitted assembly.</span>
          </span>
          <span data-ttu-id="9ab64-717">O assembly é carregado no domínio de aplicativo do chamador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-717">The assembly is loaded into the application domain of the caller.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9ab64-718">O assembly carregado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-718">The loaded assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ab64-719">O nível de confiança de um assembly carregado usando esse método é o mesmo que o nível de confiança de que o assembly de chamada.</span><span class="sxs-lookup"><span data-stu-id="9ab64-719">The trust level of an assembly that is loaded by using this method is the same as the trust level of the calling assembly.</span></span> <span data-ttu-id="9ab64-720">Para carregar um assembly de uma matriz de bytes com o nível de confiança do domínio do aplicativo, use o <xref:System.Reflection.Assembly.Load%28System.Byte%5B%5D%2CSystem.Byte%5B%5D%2CSystem.Security.SecurityContextSource%29> sobrecarga do método.</span><span class="sxs-lookup"><span data-stu-id="9ab64-720">To load an assembly from a byte array with the trust level of the application domain, use the <xref:System.Reflection.Assembly.Load%28System.Byte%5B%5D%2CSystem.Byte%5B%5D%2CSystem.Security.SecurityContextSource%29> method overload.</span></span> <span data-ttu-id="9ab64-721">Para obter mais informações sobre o uso de evidência com sobrecargas do <xref:System.Reflection.Assembly.Load%2A> método que usam matrizes de bytes, consulte o <xref:System.Reflection.Assembly.Load%28System.Byte%5B%5D%2CSystem.Byte%5B%5D%2CSystem.Security.Policy.Evidence%29> sobrecarga do método.</span><span class="sxs-lookup"><span data-stu-id="9ab64-721">For more information about the use of evidence with overloads of the <xref:System.Reflection.Assembly.Load%2A> method that take byte arrays, see the <xref:System.Reflection.Assembly.Load%28System.Byte%5B%5D%2CSystem.Byte%5B%5D%2CSystem.Security.Policy.Evidence%29> method overload.</span></span>  
  
 <span data-ttu-id="9ab64-722">Refletir em arquivos executáveis C++ pode lançar um <xref:System.BadImageFormatException>.</span><span class="sxs-lookup"><span data-stu-id="9ab64-722">Reflecting on C++ executable files might throw a <xref:System.BadImageFormatException>.</span></span> <span data-ttu-id="9ab64-723">Isso provavelmente é causado pelo compilador C++ tirando os endereços de relocação ou `.reloc` seção do arquivo executável.</span><span class="sxs-lookup"><span data-stu-id="9ab64-723">This is most likely caused by the C++ compiler stripping the relocation addresses or the `.reloc` section from your executable file.</span></span> <span data-ttu-id="9ab64-724">Para preservar o `.reloc` endereço para o arquivo executável C++, especifique `/fixed:no` quando você está vinculando.</span><span class="sxs-lookup"><span data-stu-id="9ab64-724">To preserve the `.reloc` address for your C++ executable file, specify `/fixed:no` when you are linking.</span></span>  
  
 <span data-ttu-id="9ab64-725">Observe que essa sobrecarga de método sempre cria um novo <xref:System.Reflection.Assembly> objeto com seu próprio mapeamento.</span><span class="sxs-lookup"><span data-stu-id="9ab64-725">Note that this method overload always creates a new <xref:System.Reflection.Assembly> object with its own mapping.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9ab64-726">
            <paramref name="rawAssembly" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-726">
              <paramref name="rawAssembly" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="9ab64-727">
            <paramref name="rawAssembly" /> não é um assembly válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-727">
              <paramref name="rawAssembly" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="9ab64-728">-ou-  A versão 2.0 ou posterior do Common Language Runtime está carregada atualmente e o <paramref name="rawAssembly" /> foi compilado com uma versão posterior.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-728">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="rawAssembly" /> was compiled with a later version.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly Load (System.Reflection.AssemblyName assemblyRef);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly Load(class System.Reflection.AssemblyName assemblyRef) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.Load(System.Reflection.AssemblyName)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Load (assemblyRef As AssemblyName) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ Load(System::Reflection::AssemblyName ^ assemblyRef);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyRef" Type="System.Reflection.AssemblyName" />
      </Parameters>
      <Docs>
        <param name="assemblyRef">
          <span data-ttu-id="9ab64-729">O objeto que descreve o assembly a ser carregado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-729">The object that describes the assembly to be loaded.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9ab64-730">Carrega um assembly de acordo com seu <see cref="T:System.Reflection.AssemblyName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-730">Loads an assembly given its <see cref="T:System.Reflection.AssemblyName" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9ab64-731">O assembly carregado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-731">The loaded assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ab64-732"><xref:System.IO.FileLoadException> será gerada se `assemblyRef` Especifica o nome completo do assembly e o primeiro conjunto que corresponda ao nome simple tem uma versão diferente, cultura ou token de chave pública.</span><span class="sxs-lookup"><span data-stu-id="9ab64-732"><xref:System.IO.FileLoadException> is thrown if `assemblyRef` specifies the full assembly name and the first assembly that matches the simple name has a different version, culture, or public key token.</span></span> <span data-ttu-id="9ab64-733">O carregador não continuar a investigação de outros assemblies que correspondem ao nome simple.</span><span class="sxs-lookup"><span data-stu-id="9ab64-733">The loader does not continue probing for other assemblies that match the simple name.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9ab64-734">Não use um <xref:System.Reflection.AssemblyName> somente com o <xref:System.Reflection.AssemblyName.CodeBase%2A> conjunto de propriedades.</span><span class="sxs-lookup"><span data-stu-id="9ab64-734">Do not use an <xref:System.Reflection.AssemblyName> with only the <xref:System.Reflection.AssemblyName.CodeBase%2A> property set.</span></span> <span data-ttu-id="9ab64-735">O <xref:System.Reflection.AssemblyName.CodeBase%2A> propriedade não fornece todos os elementos da identidade do assembly (como nome ou versão), então o carregar não ocorrerem de acordo com regras de carga por identidade, como se esperaria do <xref:System.Reflection.Assembly.Load%2A> método.</span><span class="sxs-lookup"><span data-stu-id="9ab64-735">The <xref:System.Reflection.AssemblyName.CodeBase%2A> property does not supply any elements of the assembly identity (such as name or version), so loading does not occur according to load-by-identity rules, as you would expect from the <xref:System.Reflection.Assembly.Load%2A> method.</span></span> <span data-ttu-id="9ab64-736">Em vez disso, o assembly for carregado usando regras de carga.</span><span class="sxs-lookup"><span data-stu-id="9ab64-736">Instead, the assembly is loaded using load-from rules.</span></span> <span data-ttu-id="9ab64-737">Para obter informações sobre as desvantagens de usar o contexto de carga, consulte o <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> sobrecarga de método ou [práticas recomendadas para o carregamento do Assembly](~/docs/framework/deployment/best-practices-for-assembly-loading.md).</span><span class="sxs-lookup"><span data-stu-id="9ab64-737">For information about the disadvantages of using the load-from context, see the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> method overload or [Best Practices for Assembly Loading](~/docs/framework/deployment/best-practices-for-assembly-loading.md).</span></span>  
  
 <span data-ttu-id="9ab64-738">Se determinadas permissões são concedidas ou não a um assembly é algo que se baseia na evidência.</span><span class="sxs-lookup"><span data-stu-id="9ab64-738">Whether certain permissions are granted or not granted to an assembly is based on evidence.</span></span> <span data-ttu-id="9ab64-739">As regras para o assembly e a mesclagem de evidência de segurança são da seguinte maneira:</span><span class="sxs-lookup"><span data-stu-id="9ab64-739">The rules for assembly and security evidence merging are as follows:</span></span>  
  
-   <span data-ttu-id="9ab64-740">Quando você usa um <xref:System.Reflection.Assembly.Load%2A> método sem nenhum <xref:System.Security.Policy.Evidence> parâmetro, o assembly é carregado com a evidência que fornece o carregador.</span><span class="sxs-lookup"><span data-stu-id="9ab64-740">When you use a <xref:System.Reflection.Assembly.Load%2A> method with no <xref:System.Security.Policy.Evidence> parameter, the assembly is loaded with the evidence that the loader supplies.</span></span>  
  
-   <span data-ttu-id="9ab64-741">Quando você usa um <xref:System.Reflection.Assembly.Load%2A> método com um <xref:System.Security.Policy.Evidence> parâmetros, partes de evidência são mesclados.</span><span class="sxs-lookup"><span data-stu-id="9ab64-741">When you use a <xref:System.Reflection.Assembly.Load%2A> method with an <xref:System.Security.Policy.Evidence> parameter, pieces of evidence are merged.</span></span> <span data-ttu-id="9ab64-742">Partes de evidência fornecida como um argumento para o <xref:System.Reflection.Assembly.Load%2A> método substituir partes de evidência fornecida pelo carregador.</span><span class="sxs-lookup"><span data-stu-id="9ab64-742">Pieces of evidence supplied as an argument to the <xref:System.Reflection.Assembly.Load%2A> method supersede pieces of evidence supplied by the loader.</span></span>  
  
-   <span data-ttu-id="9ab64-743">Quando você usa um <xref:System.Reflection.Assembly.Load%2A> sobrecarga de método com um `Byte[]` parâmetro para carregar uma objeto arquivo formato COFF imagem comum, evidência é herdado do assembly de chamada.</span><span class="sxs-lookup"><span data-stu-id="9ab64-743">When you use a <xref:System.Reflection.Assembly.Load%2A> method overload with a `Byte[]` parameter to load a common object file format (COFF) image, evidence is inherited from the calling assembly.</span></span> <span data-ttu-id="9ab64-744">Isso se aplica ao .NET Framework versão 1.1 Service Pack 1 (SP1) e versões posteriores.</span><span class="sxs-lookup"><span data-stu-id="9ab64-744">This applies to the .NET Framework version 1.1 Service Pack 1 (SP1) and subsequent releases.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="9ab64-745">No .NET Framework versão 1.0 e na versão 1.1 sem o SP1, quando você usa um <xref:System.Reflection.Assembly.Load%2A> sobrecarga de método com um `Byte[]` parâmetro para carregar uma imagem COFF, evidência é combinado.</span><span class="sxs-lookup"><span data-stu-id="9ab64-745">In the .NET Framework version 1.0 and in version 1.1 without SP1, when you use a <xref:System.Reflection.Assembly.Load%2A> method overload with a `Byte[]` parameter to load a COFF image, evidence is combined.</span></span> <span data-ttu-id="9ab64-746">`Zone`, `Url` e `Site` são herdadas do assembly de chamada, e `Hash` e `StrongName` são obtidos do assembly COFF.</span><span class="sxs-lookup"><span data-stu-id="9ab64-746">`Zone`, `Url` and `Site` are inherited from the calling assembly, and `Hash` and `StrongName` are taken from the COFF assembly.</span></span>  
  
-   <span data-ttu-id="9ab64-747">Quando você usa um <xref:System.Reflection.Assembly.Load%2A> método com um `Byte[]` parâmetro e <xref:System.Security.Policy.Evidence> para carregar uma imagem COFF, somente a evidência fornecida é usada.</span><span class="sxs-lookup"><span data-stu-id="9ab64-747">When you use a <xref:System.Reflection.Assembly.Load%2A> method with a `Byte[]` parameter and <xref:System.Security.Policy.Evidence> to load a COFF image, only the supplied evidence is used.</span></span> <span data-ttu-id="9ab64-748">Evidência de assembly de chamada e evidência da imagem COFF são ignorados.</span><span class="sxs-lookup"><span data-stu-id="9ab64-748">Evidence of the calling assembly and evidence of the COFF image is ignored.</span></span>  
  
 <span data-ttu-id="9ab64-749">Refletir em arquivos executáveis C++ pode lançar um <xref:System.BadImageFormatException>.</span><span class="sxs-lookup"><span data-stu-id="9ab64-749">Reflecting on C++ executable files might throw a <xref:System.BadImageFormatException>.</span></span> <span data-ttu-id="9ab64-750">Isso provavelmente é causado pelo compilador C++ tirando os endereços de relocação ou `.reloc` seção do arquivo executável.</span><span class="sxs-lookup"><span data-stu-id="9ab64-750">This is most likely caused by the C++ compiler stripping the relocation addresses or the `.reloc` section from your executable file.</span></span> <span data-ttu-id="9ab64-751">Para preservar o `.reloc` endereço para o arquivo executável C++, especifique `/fixed:no` quando você está vinculando.</span><span class="sxs-lookup"><span data-stu-id="9ab64-751">To preserve the `.reloc` address for your C++ executable file, specify `/fixed:no` when you are linking.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9ab64-752">Se o <xref:System.Reflection.AssemblyName.Name%2A?displayProperty=nameWithType> propriedade e o <xref:System.Reflection.AssemblyName.CodeBase%2A?displayProperty=nameWithType> propriedade estiver definida, a primeira tentativa de carregar o assembly usa o nome de exibição (incluindo a versão, cultura e assim por diante, conforme retornado pelo <xref:System.Reflection.Assembly.FullName%2A?displayProperty=nameWithType> propriedade).</span><span class="sxs-lookup"><span data-stu-id="9ab64-752">If both the <xref:System.Reflection.AssemblyName.Name%2A?displayProperty=nameWithType> property and the <xref:System.Reflection.AssemblyName.CodeBase%2A?displayProperty=nameWithType> property are set, the first attempt to load the assembly uses the display name (including version, culture, and so on, as returned by the <xref:System.Reflection.Assembly.FullName%2A?displayProperty=nameWithType> property).</span></span> <span data-ttu-id="9ab64-753">Se o arquivo não for encontrado, <xref:System.Reflection.AssemblyName.CodeBase%2A> é usado para pesquisar o assembly.</span><span class="sxs-lookup"><span data-stu-id="9ab64-753">If the file is not found, <xref:System.Reflection.AssemblyName.CodeBase%2A> is used to search for the assembly.</span></span> <span data-ttu-id="9ab64-754">Se o assembly for encontrado usando <xref:System.Reflection.AssemblyName.CodeBase%2A>, o nome de exibição é comparado com o assembly.</span><span class="sxs-lookup"><span data-stu-id="9ab64-754">If the assembly is found using <xref:System.Reflection.AssemblyName.CodeBase%2A>, the display name is matched against the assembly.</span></span> <span data-ttu-id="9ab64-755">Se a correspondência falhar, um <xref:System.IO.FileLoadException> é gerada.</span><span class="sxs-lookup"><span data-stu-id="9ab64-755">If the match fails, a <xref:System.IO.FileLoadException> is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9ab64-756">O exemplo a seguir cria um <xref:System.Reflection.AssemblyName> do objeto e o utiliza para carregar o `sysglobal.dll` assembly.</span><span class="sxs-lookup"><span data-stu-id="9ab64-756">The following example instantiates an <xref:System.Reflection.AssemblyName> object and uses it to load the `sysglobal.dll` assembly.</span></span> <span data-ttu-id="9ab64-757">O exemplo, em seguida, exibe o nome completo de tipos públicos do assembly.</span><span class="sxs-lookup"><span data-stu-id="9ab64-757">The example then displays the full name of the assembly's public types.</span></span>  
  
 [!code-csharp[System.Reflection.Assembly.Load#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.reflection.assembly.load/cs/Load2.cs#2)]
 [!code-vb[System.Reflection.Assembly.Load#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.reflection.assembly.load/vb/Load2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9ab64-758">
            <paramref name="assemblyRef" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-758">
              <paramref name="assemblyRef" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="9ab64-759">
            <paramref name="assemblyRef" /> não foi encontrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-759">
              <paramref name="assemblyRef" /> is not found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="9ab64-760">
            <block subset="none" type="note">
              <para> No [.NET para aplicativos da Windows Store](http://go.microsoft.com/fwlink/?LinkID=247912) ou na [Biblioteca de Classes Portátil](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), capture a exceção de classe base, <see cref="T:System.IO.IOException" />.  </para>
            </block>  Não foi possível carregar um arquivo que foi encontrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-760">
              <block subset="none" type="note">
                <para> In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch the base class exception, <see cref="T:System.IO.IOException" />, instead.  </para>
              </block>  A file that was found could not be loaded.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="9ab64-761">
            <paramref name="assemblyRef" /> não é um assembly válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-761">
              <paramref name="assemblyRef" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="9ab64-762">-ou-  A versão 2.0 ou posterior do Common Language Runtime está carregada atualmente e o <paramref name="assemblyRef" /> foi compilado com uma versão posterior.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-762">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyRef" /> was compiled with a later version.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="9ab64-763">para acesso de leitura de um arquivo ou um diretório, e para acesso às informações no próprio caminho.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-763">for access to read from a file or directory, and for access to the information in the path itself.</span>
          </span>
          <span data-ttu-id="9ab64-764">Enumerações associadas: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-764">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          </span>
        </permission>
        <permission cref="T:System.Net.WebPermission">
          <span data-ttu-id="9ab64-765">para ler um URI que não começa com "file://".</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-765">for reading a URI that does not begin with "file://".</span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="9ab64-766">para carregar um assembly com evidências.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-766">to load an assembly with evidence.</span>
          </span>
          <span data-ttu-id="9ab64-767">Enumeração associada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-767">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Reflection.AssemblyName" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly Load (string assemblyString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly Load(string assemblyString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.Load(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Load (assemblyString As String) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ Load(System::String ^ assemblyString);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyString">
          <span data-ttu-id="9ab64-768">O formato longo do nome do assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-768">The long form of the assembly name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9ab64-769">Carrega um assembly tendo o formato longo de seu nome.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-769">Loads an assembly given the long form of its name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9ab64-770">O assembly carregado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-770">The loaded assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ab64-771">O formato longo de um nome de assembly consiste em seu nome simple (como "sistema" para o assembly System. dll), juntamente com sua versão, cultura, token de chave pública e, opcionalmente, sua arquitetura de processador.</span><span class="sxs-lookup"><span data-stu-id="9ab64-771">The long form of an assembly name consists of its simple name (such as "System" for the System.dll assembly) along with its version, culture, public key token, and optionally its processor architecture.</span></span> <span data-ttu-id="9ab64-772">Ele corresponde do assembly <xref:System.Reflection.Assembly.FullName%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="9ab64-772">It corresponds to the assembly's <xref:System.Reflection.Assembly.FullName%2A> property.</span></span> <span data-ttu-id="9ab64-773">O exemplo a seguir ilustra o uso de um nome longo para carregar o assembly System. dll para o .NET Framework 4.</span><span class="sxs-lookup"><span data-stu-id="9ab64-773">The following example illustrates the use of a long name to load the System.dll assembly for the .NET Framework 4.</span></span>  
  
 [!code-csharp[System.Reflection.Assembly.Load#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.reflection.assembly.load/cs/load1.cs#1)]
 [!code-vb[System.Reflection.Assembly.Load#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.reflection.assembly.load/vb/load1.vb#1)]  
  
 <span data-ttu-id="9ab64-774"><xref:System.IO.FileLoadException> será gerada se `assemblyString` Especifica o nome completo do assembly e o primeiro conjunto que corresponda ao nome simple tem uma versão diferente, cultura ou token de chave pública.</span><span class="sxs-lookup"><span data-stu-id="9ab64-774"><xref:System.IO.FileLoadException> is thrown if `assemblyString` specifies the full assembly name, and the first assembly that matches the simple name has a different version, culture, or public key token.</span></span> <span data-ttu-id="9ab64-775">O carregador não continuar a investigação de outros assemblies que correspondem ao nome simple.</span><span class="sxs-lookup"><span data-stu-id="9ab64-775">The loader does not continue probing for other assemblies that match the simple name.</span></span>  
  
 <span data-ttu-id="9ab64-776">Se determinadas permissões são concedidas ou não a um assembly é algo que se baseia na evidência.</span><span class="sxs-lookup"><span data-stu-id="9ab64-776">Whether certain permissions are granted or not granted to an assembly is based on evidence.</span></span> <span data-ttu-id="9ab64-777">As regras para o assembly e a mesclagem de evidência de segurança são da seguinte maneira:</span><span class="sxs-lookup"><span data-stu-id="9ab64-777">The rules for assembly and security evidence merging are as follows:</span></span>  
  
-   <span data-ttu-id="9ab64-778">Quando você usa um <xref:System.Reflection.Assembly.Load%2A> método sem nenhum <xref:System.Security.Policy.Evidence> parâmetro, o assembly é carregado com a evidência que fornece o carregador.</span><span class="sxs-lookup"><span data-stu-id="9ab64-778">When you use a <xref:System.Reflection.Assembly.Load%2A> method with no <xref:System.Security.Policy.Evidence> parameter, the assembly is loaded with the evidence that the loader supplies.</span></span>  
  
-   <span data-ttu-id="9ab64-779">Quando você usa um <xref:System.Reflection.Assembly.Load%2A> método com um <xref:System.Security.Policy.Evidence> parâmetros, partes de evidência são mesclados.</span><span class="sxs-lookup"><span data-stu-id="9ab64-779">When you use a <xref:System.Reflection.Assembly.Load%2A> method with an <xref:System.Security.Policy.Evidence> parameter, pieces of evidence are merged.</span></span> <span data-ttu-id="9ab64-780">Partes de evidência fornecida como um argumento para o <xref:System.Reflection.Assembly.Load%2A> método substituir partes de evidência fornecida pelo carregador.</span><span class="sxs-lookup"><span data-stu-id="9ab64-780">Pieces of evidence supplied as an argument to the <xref:System.Reflection.Assembly.Load%2A> method supersede pieces of evidence supplied by the loader.</span></span>  
  
-   <span data-ttu-id="9ab64-781">Quando você usa um <xref:System.Reflection.Assembly.Load%2A> sobrecarga de método com um `Byte[]` parâmetro para carregar uma objeto arquivo formato COFF imagem comum, evidência é herdado do assembly de chamada.</span><span class="sxs-lookup"><span data-stu-id="9ab64-781">When you use a <xref:System.Reflection.Assembly.Load%2A> method overload with a `Byte[]` parameter to load a common object file format (COFF) image, evidence is inherited from the calling assembly.</span></span> <span data-ttu-id="9ab64-782">Isso se aplica ao .NET Framework versão 1.1 Service Pack 1 (SP1) e versões posteriores.</span><span class="sxs-lookup"><span data-stu-id="9ab64-782">This applies to the .NET Framework version 1.1 Service Pack 1 (SP1) and subsequent releases.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="9ab64-783">No .NET Framework versão 1.0 e na versão 1.1 sem o SP1, quando você usa um <xref:System.Reflection.Assembly.Load%2A> sobrecarga de método com um `Byte[]` parâmetro para carregar uma imagem COFF, evidência é combinado.</span><span class="sxs-lookup"><span data-stu-id="9ab64-783">In the .NET Framework version 1.0 and in version 1.1 without SP1, when you use a <xref:System.Reflection.Assembly.Load%2A> method overload with a `Byte[]` parameter to load a COFF image, evidence is combined.</span></span> <span data-ttu-id="9ab64-784">`Zone`, `Url` e `Site` são herdadas do assembly de chamada, e `Hash` e `StrongName` são obtidos do assembly COFF.</span><span class="sxs-lookup"><span data-stu-id="9ab64-784">`Zone`, `Url` and `Site` are inherited from the calling assembly, and `Hash` and `StrongName` are taken from the COFF assembly.</span></span>  
  
-   <span data-ttu-id="9ab64-785">Quando você usa um <xref:System.Reflection.Assembly.Load%2A> método com um `Byte[]` parâmetro e <xref:System.Security.Policy.Evidence> para carregar uma imagem COFF, somente a evidência fornecida é usada.</span><span class="sxs-lookup"><span data-stu-id="9ab64-785">When you use a <xref:System.Reflection.Assembly.Load%2A> method with a `Byte[]` parameter and <xref:System.Security.Policy.Evidence> to load a COFF image, only the supplied evidence is used.</span></span> <span data-ttu-id="9ab64-786">Evidência de assembly de chamada e evidência da imagem COFF são ignorados.</span><span class="sxs-lookup"><span data-stu-id="9ab64-786">Evidence of the calling assembly and evidence of the COFF image is ignored.</span></span>  
  
 <span data-ttu-id="9ab64-787">Refletir em arquivos executáveis C++ pode lançar um <xref:System.BadImageFormatException>.</span><span class="sxs-lookup"><span data-stu-id="9ab64-787">Reflecting on C++ executable files might throw a <xref:System.BadImageFormatException>.</span></span> <span data-ttu-id="9ab64-788">Isso provavelmente é causado pelo compilador C++ tirando os endereços de relocação ou `.reloc` seção do arquivo executável.</span><span class="sxs-lookup"><span data-stu-id="9ab64-788">This is most likely caused by the C++ compiler stripping the relocation addresses or the `.reloc` section from your executable file.</span></span> <span data-ttu-id="9ab64-789">Para preservar o `.reloc` endereço para o arquivo executável C++, especifique `/fixed:no` quando você está vinculando.</span><span class="sxs-lookup"><span data-stu-id="9ab64-789">To preserve the `.reloc` address for your C++ executable file, specify `/fixed:no` when you are linking.</span></span>  
  
 <span data-ttu-id="9ab64-790">No .NET Framework versão 2.0, a arquitetura do processador é adicionada à identidade do assembly e pode ser especificada como parte das cadeias de caracteres de nome do assembly.</span><span class="sxs-lookup"><span data-stu-id="9ab64-790">In the .NET Framework version 2.0, processor architecture is added to assembly identity, and can be specified as part of assembly name strings.</span></span> <span data-ttu-id="9ab64-791">Por exemplo, "ProcessorArchitecture=msil".</span><span class="sxs-lookup"><span data-stu-id="9ab64-791">For example, "ProcessorArchitecture=msil".</span></span> <span data-ttu-id="9ab64-792">No entanto, a maneira recomendada para especificar um nome de assembly é criar um <xref:System.Reflection.AssemblyName> do objeto e passá-lo para uma sobrecarga apropriada do <xref:System.Reflection.Assembly.Load%2A> método.</span><span class="sxs-lookup"><span data-stu-id="9ab64-792">However, the recommended way to specify an assembly name is to create an <xref:System.Reflection.AssemblyName> object and pass it to an appropriate overload of the <xref:System.Reflection.Assembly.Load%2A> method.</span></span> <span data-ttu-id="9ab64-793">Consulte <xref:System.Reflection.AssemblyName.ProcessorArchitecture%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="9ab64-793">See <xref:System.Reflection.AssemblyName.ProcessorArchitecture%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9ab64-794">O exemplo a seguir carrega um assembly fornecido o nome totalmente qualificado e lista todos os tipos contidos no assembly especificado.</span><span class="sxs-lookup"><span data-stu-id="9ab64-794">The following example loads an assembly given its fully qualified name, and lists all the types contained in the specified assembly.</span></span> <span data-ttu-id="9ab64-795">Para este exemplo de código ser executado, você deve fornecer o nome de assembly totalmente qualificado.</span><span class="sxs-lookup"><span data-stu-id="9ab64-795">For this code example to run, you must provide the fully qualified assembly name.</span></span> <span data-ttu-id="9ab64-796">Para obter informações sobre como obter o nome totalmente qualificado do assembly, consulte [nomes de Assembly](~/docs/framework/app-domains/assembly-names.md).</span><span class="sxs-lookup"><span data-stu-id="9ab64-796">For information about how to obtain the fully qualified assembly name, see [Assembly Names](~/docs/framework/app-domains/assembly-names.md).</span></span>  
  
 [!code-cpp[assembly.load1#1](~/samples/snippets/cpp/VS_Snippets_CLR/Assembly.Load1/CPP/load1.cpp#1)]
 [!code-csharp[assembly.load1#1](~/samples/snippets/csharp/VS_Snippets_CLR/Assembly.Load1/CS/load1.cs#1)]
 [!code-vb[assembly.load1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Assembly.Load1/VB/load1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9ab64-797">
            <paramref name="assemblyString" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-797">
              <paramref name="assemblyString" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9ab64-798">
            <paramref name="assemblyString" /> é uma cadeia de comprimento zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-798">
              <paramref name="assemblyString" /> is a zero-length string.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="9ab64-799">
            <paramref name="assemblyString" /> não foi encontrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-799">
              <paramref name="assemblyString" /> is not found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="9ab64-800">Não foi possível carregar um arquivo que foi encontrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-800">A file that was found could not be loaded.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="9ab64-801">
            <paramref name="assemblyString" /> não é um assembly válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-801">
              <paramref name="assemblyString" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="9ab64-802">-ou-  A versão 2.0 ou posterior do Common Language Runtime está carregada atualmente e o <paramref name="assemblyString" /> foi compilado com uma versão posterior.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-802">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyString" /> was compiled with a later version.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="9ab64-803">para carregar um assembly com evidências.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-803">to load an assembly with evidence.</span>
          </span>
          <span data-ttu-id="9ab64-804">Enumeração associada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-804">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Reflection.AssemblyName" />
        <altmember cref="M:System.Reflection.Assembly.LoadFrom(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly Load (byte[] rawAssembly, byte[] rawSymbolStore);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly Load(unsigned int8[] rawAssembly, unsigned int8[] rawSymbolStore) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.Load(System.Byte[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Load (rawAssembly As Byte(), rawSymbolStore As Byte()) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ Load(cli::array &lt;System::Byte&gt; ^ rawAssembly, cli::array &lt;System::Byte&gt; ^ rawSymbolStore);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawAssembly" Type="System.Byte[]" />
        <Parameter Name="rawSymbolStore" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rawAssembly">
          <span data-ttu-id="9ab64-805">Uma matriz de byte que é uma imagem baseada em COFF contendo um assembly emitido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-805">A byte array that is a COFF-based image containing an emitted assembly.</span>
          </span>
        </param>
        <param name="rawSymbolStore">
          <span data-ttu-id="9ab64-806">Uma matriz de bytes que contém os bytes brutos que representam os símbolos do assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-806">A byte array that contains the raw bytes representing the symbols for the assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9ab64-807">Carrega o assembly com uma imagem baseada em formato COFF, contendo um assembly emitido e com a opção de incluir símbolos para o assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-807">Loads the assembly with a common object file format (COFF)-based image containing an emitted assembly, optionally including symbols for the assembly.</span>
          </span>
          <span data-ttu-id="9ab64-808">O assembly é carregado no domínio de aplicativo do chamador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-808">The assembly is loaded into the application domain of the caller.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9ab64-809">O assembly carregado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-809">The loaded assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ab64-810">O nível de confiança de um assembly carregado usando esse método é o mesmo que o nível de confiança de que o assembly de chamada.</span><span class="sxs-lookup"><span data-stu-id="9ab64-810">The trust level of an assembly that is loaded by using this method is the same as the trust level of the calling assembly.</span></span> <span data-ttu-id="9ab64-811">Para carregar um assembly de uma matriz de bytes com o nível de confiança do domínio do aplicativo, use o <xref:System.Reflection.Assembly.Load%28System.Byte%5B%5D%2CSystem.Byte%5B%5D%2CSystem.Security.SecurityContextSource%29> sobrecarga do método.</span><span class="sxs-lookup"><span data-stu-id="9ab64-811">To load an assembly from a byte array with the trust level of the application domain, use the <xref:System.Reflection.Assembly.Load%28System.Byte%5B%5D%2CSystem.Byte%5B%5D%2CSystem.Security.SecurityContextSource%29> method overload.</span></span> <span data-ttu-id="9ab64-812">Para obter mais informações sobre o uso de evidência com sobrecargas do <xref:System.Reflection.Assembly.Load%2A> método que usam matrizes de bytes, consulte o <xref:System.Reflection.Assembly.Load%28System.Byte%5B%5D%2CSystem.Byte%5B%5D%2CSystem.Security.Policy.Evidence%29> sobrecarga do método.</span><span class="sxs-lookup"><span data-stu-id="9ab64-812">For more information about the use of evidence with overloads of the <xref:System.Reflection.Assembly.Load%2A> method that take byte arrays, see the <xref:System.Reflection.Assembly.Load%28System.Byte%5B%5D%2CSystem.Byte%5B%5D%2CSystem.Security.Policy.Evidence%29> method overload.</span></span>  
  
 <span data-ttu-id="9ab64-813">Refletir em arquivos executáveis C++ pode lançar um <xref:System.BadImageFormatException>.</span><span class="sxs-lookup"><span data-stu-id="9ab64-813">Reflecting on C++ executable files might throw a <xref:System.BadImageFormatException>.</span></span> <span data-ttu-id="9ab64-814">Isso provavelmente é causado pelo compilador C++ tirando os endereços de relocação ou `.reloc` seção do arquivo executável.</span><span class="sxs-lookup"><span data-stu-id="9ab64-814">This is most likely caused by the C++ compiler stripping the relocation addresses or the `.reloc` section from your executable file.</span></span> <span data-ttu-id="9ab64-815">Para preservar o `.reloc` endereço para o arquivo executável C++, especifique `/fixed:no` quando você está vinculando.</span><span class="sxs-lookup"><span data-stu-id="9ab64-815">To preserve the `.reloc` address for your C++ executable file, specify `/fixed:no` when you are linking.</span></span>  
  
 <span data-ttu-id="9ab64-816">Observe que essa sobrecarga de método sempre cria um novo <xref:System.Reflection.Assembly> objeto com seu próprio mapeamento.</span><span class="sxs-lookup"><span data-stu-id="9ab64-816">Note that this method overload always creates a new <xref:System.Reflection.Assembly> object with its own mapping.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9ab64-817">
            <paramref name="rawAssembly" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-817">
              <paramref name="rawAssembly" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="9ab64-818">
            <paramref name="rawAssembly" /> não é um assembly válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-818">
              <paramref name="rawAssembly" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="9ab64-819">-ou-  A versão 2.0 ou posterior do Common Language Runtime está carregada atualmente e o <paramref name="rawAssembly" /> foi compilado com uma versão posterior.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-819">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="rawAssembly" /> was compiled with a later version.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly Load (System.Reflection.AssemblyName assemblyRef, System.Security.Policy.Evidence assemblySecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly Load(class System.Reflection.AssemblyName assemblyRef, class System.Security.Policy.Evidence assemblySecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.Load(System.Reflection.AssemblyName,System.Security.Policy.Evidence)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Load (assemblyRef As AssemblyName, assemblySecurity As Evidence) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ Load(System::Reflection::AssemblyName ^ assemblyRef, System::Security::Policy::Evidence ^ assemblySecurity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyRef" Type="System.Reflection.AssemblyName" />
        <Parameter Name="assemblySecurity" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="assemblyRef">
          <span data-ttu-id="9ab64-820">O objeto que descreve o assembly a ser carregado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-820">The object that describes the assembly to be loaded.</span>
          </span>
        </param>
        <param name="assemblySecurity">
          <span data-ttu-id="9ab64-821">Evidência para carregar o assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-821">Evidence for loading the assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9ab64-822">Carrega um assembly de acordo com seu <see cref="T:System.Reflection.AssemblyName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-822">Loads an assembly given its <see cref="T:System.Reflection.AssemblyName" />.</span>
          </span>
          <span data-ttu-id="9ab64-823">O assembly é carregado no domínio do chamador usando a evidência fornecida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-823">The assembly is loaded into the domain of the caller using the supplied evidence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9ab64-824">O assembly carregado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-824">The loaded assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ab64-825"><xref:System.IO.FileLoadException> será gerada se `assemblyRef` Especifica o nome completo do assembly e o primeiro conjunto que corresponda ao nome simple tem uma versão diferente, cultura ou token de chave pública.</span><span class="sxs-lookup"><span data-stu-id="9ab64-825"><xref:System.IO.FileLoadException> is thrown if `assemblyRef` specifies the full assembly name, and the first assembly that matches the simple name has a different version, culture, or public key token.</span></span> <span data-ttu-id="9ab64-826">O carregador não continuar a investigação de outros assemblies que correspondem ao nome simple.</span><span class="sxs-lookup"><span data-stu-id="9ab64-826">The loader does not continue probing for other assemblies that match the simple name.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9ab64-827">Não use um <xref:System.Reflection.AssemblyName> somente com o <xref:System.Reflection.AssemblyName.CodeBase%2A> conjunto de propriedades.</span><span class="sxs-lookup"><span data-stu-id="9ab64-827">Do not use an <xref:System.Reflection.AssemblyName> with only the <xref:System.Reflection.AssemblyName.CodeBase%2A> property set.</span></span> <span data-ttu-id="9ab64-828">O <xref:System.Reflection.AssemblyName.CodeBase%2A> propriedade não fornece todos os elementos da identidade do assembly (como nome ou versão), então o carregar não ocorrerem de acordo com regras de carga por identidade, como se esperaria do <xref:System.Reflection.Assembly.Load%2A> método.</span><span class="sxs-lookup"><span data-stu-id="9ab64-828">The <xref:System.Reflection.AssemblyName.CodeBase%2A> property does not supply any elements of the assembly identity (such as name or version), so loading does not occur according to load-by-identity rules, as you would expect from the <xref:System.Reflection.Assembly.Load%2A> method.</span></span> <span data-ttu-id="9ab64-829">Em vez disso, o assembly for carregado usando regras de carga.</span><span class="sxs-lookup"><span data-stu-id="9ab64-829">Instead, the assembly is loaded using load-from rules.</span></span> <span data-ttu-id="9ab64-830">Para obter informações sobre as desvantagens de usar o contexto de carga, consulte o <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> sobrecarga de método ou [práticas recomendadas para o carregamento do Assembly](~/docs/framework/deployment/best-practices-for-assembly-loading.md).</span><span class="sxs-lookup"><span data-stu-id="9ab64-830">For information about the disadvantages of using the load-from context, see the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> method overload or [Best Practices for Assembly Loading](~/docs/framework/deployment/best-practices-for-assembly-loading.md).</span></span>  
  
 <span data-ttu-id="9ab64-831">Se determinadas permissões são concedidas ou não a um assembly é algo que se baseia na evidência.</span><span class="sxs-lookup"><span data-stu-id="9ab64-831">Whether certain permissions are granted or not granted to an assembly is based on evidence.</span></span> <span data-ttu-id="9ab64-832">As regras para o assembly e a mesclagem de evidência de segurança são da seguinte maneira:</span><span class="sxs-lookup"><span data-stu-id="9ab64-832">The rules for assembly and security evidence merging are as follows:</span></span>  
  
-   <span data-ttu-id="9ab64-833">Quando você usa um <xref:System.Reflection.Assembly.Load%2A> método sem nenhum <xref:System.Security.Policy.Evidence> parâmetro, o assembly é carregado com a evidência que fornece o carregador.</span><span class="sxs-lookup"><span data-stu-id="9ab64-833">When you use a <xref:System.Reflection.Assembly.Load%2A> method with no <xref:System.Security.Policy.Evidence> parameter, the assembly is loaded with the evidence that the loader supplies.</span></span>  
  
-   <span data-ttu-id="9ab64-834">Quando você usa um <xref:System.Reflection.Assembly.Load%2A> método com um <xref:System.Security.Policy.Evidence> parâmetros, partes de evidência são mesclados.</span><span class="sxs-lookup"><span data-stu-id="9ab64-834">When you use a <xref:System.Reflection.Assembly.Load%2A> method with an <xref:System.Security.Policy.Evidence> parameter, pieces of evidence are merged.</span></span> <span data-ttu-id="9ab64-835">Partes de evidência fornecida como um argumento para o <xref:System.Reflection.Assembly.Load%2A> método substituir partes de evidência fornecida pelo carregador.</span><span class="sxs-lookup"><span data-stu-id="9ab64-835">Pieces of evidence supplied as an argument to the <xref:System.Reflection.Assembly.Load%2A> method supersede pieces of evidence supplied by the loader.</span></span>  
  
-   <span data-ttu-id="9ab64-836">Quando você usa um <xref:System.Reflection.Assembly.Load%2A> sobrecarga de método com um `Byte[]` parâmetro para carregar uma objeto arquivo formato COFF imagem comum, evidência é herdado do assembly de chamada.</span><span class="sxs-lookup"><span data-stu-id="9ab64-836">When you use a <xref:System.Reflection.Assembly.Load%2A> method overload with a `Byte[]` parameter to load a common object file format (COFF) image, evidence is inherited from the calling assembly.</span></span> <span data-ttu-id="9ab64-837">Isso se aplica ao .NET Framework versão 1.1 Service Pack 1 (SP1) e versões posteriores.</span><span class="sxs-lookup"><span data-stu-id="9ab64-837">This applies to the .NET Framework version 1.1 Service Pack 1 (SP1) and subsequent releases.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="9ab64-838">No .NET Framework versão 1.0 e na versão 1.1 sem o SP1, quando você usa um <xref:System.Reflection.Assembly.Load%2A> sobrecarga de método com um `Byte[]` parâmetro para carregar uma imagem COFF, evidência é combinado.</span><span class="sxs-lookup"><span data-stu-id="9ab64-838">In the .NET Framework version 1.0 and in version 1.1 without SP1, when you use a <xref:System.Reflection.Assembly.Load%2A> method overload with a `Byte[]` parameter to load a COFF image, evidence is combined.</span></span> <span data-ttu-id="9ab64-839">`Zone`, `Url` e `Site` são herdadas do assembly de chamada, e `Hash` e `StrongName` são obtidos do assembly COFF.</span><span class="sxs-lookup"><span data-stu-id="9ab64-839">`Zone`, `Url` and `Site` are inherited from the calling assembly, and `Hash` and `StrongName` are taken from the COFF assembly.</span></span>  
  
-   <span data-ttu-id="9ab64-840">Quando você usa um <xref:System.Reflection.Assembly.Load%2A> método com um `Byte[]` parâmetro e <xref:System.Security.Policy.Evidence> para carregar uma imagem COFF, somente a evidência fornecida é usada.</span><span class="sxs-lookup"><span data-stu-id="9ab64-840">When you use a <xref:System.Reflection.Assembly.Load%2A> method with a `Byte[]` parameter and <xref:System.Security.Policy.Evidence> to load a COFF image, only the supplied evidence is used.</span></span> <span data-ttu-id="9ab64-841">Evidência de assembly de chamada e evidência da imagem COFF são ignorados.</span><span class="sxs-lookup"><span data-stu-id="9ab64-841">Evidence of the calling assembly and evidence of the COFF image is ignored.</span></span>  
  
 <span data-ttu-id="9ab64-842">Refletir em arquivos executáveis C++ pode lançar um <xref:System.BadImageFormatException>.</span><span class="sxs-lookup"><span data-stu-id="9ab64-842">Reflecting on C++ executable files might throw a <xref:System.BadImageFormatException>.</span></span> <span data-ttu-id="9ab64-843">Isso provavelmente é causado pelo compilador C++ tirando os endereços de relocação ou `.reloc` seção do arquivo executável.</span><span class="sxs-lookup"><span data-stu-id="9ab64-843">This is most likely caused by the C++ compiler stripping the relocation addresses or the `.reloc` section from your executable file.</span></span> <span data-ttu-id="9ab64-844">Para preservar o `.reloc` endereço para o arquivo executável C++, especifique `/fixed:no` quando você está vinculando.</span><span class="sxs-lookup"><span data-stu-id="9ab64-844">To preserve the `.reloc` address for your C++ executable file, specify `/fixed:no` when you are linking.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9ab64-845">Se o <xref:System.Reflection.AssemblyName.Name%2A?displayProperty=nameWithType> propriedade e o <xref:System.Reflection.AssemblyName.CodeBase%2A?displayProperty=nameWithType> propriedade estiver definida, a primeira tentativa de carregar o assembly usa o nome de exibição (incluindo a versão, cultura e assim por diante, conforme retornado pelo <xref:System.Reflection.Assembly.FullName%2A?displayProperty=nameWithType> propriedade).</span><span class="sxs-lookup"><span data-stu-id="9ab64-845">If both the <xref:System.Reflection.AssemblyName.Name%2A?displayProperty=nameWithType> property and the <xref:System.Reflection.AssemblyName.CodeBase%2A?displayProperty=nameWithType> property are set, the first attempt to load the assembly uses the display name (including version, culture, and so on, as returned by the <xref:System.Reflection.Assembly.FullName%2A?displayProperty=nameWithType> property).</span></span> <span data-ttu-id="9ab64-846">Se o arquivo não for encontrado, <xref:System.Reflection.AssemblyName.CodeBase%2A> é usado para pesquisar o assembly.</span><span class="sxs-lookup"><span data-stu-id="9ab64-846">If the file is not found, <xref:System.Reflection.AssemblyName.CodeBase%2A> is used to search for the assembly.</span></span> <span data-ttu-id="9ab64-847">Se o assembly for encontrado usando <xref:System.Reflection.AssemblyName.CodeBase%2A>, o nome de exibição é comparado com o assembly.</span><span class="sxs-lookup"><span data-stu-id="9ab64-847">If the assembly is found using <xref:System.Reflection.AssemblyName.CodeBase%2A>, the display name is matched against the assembly.</span></span> <span data-ttu-id="9ab64-848">Se a correspondência falhar, um <xref:System.IO.FileLoadException> é gerada.</span><span class="sxs-lookup"><span data-stu-id="9ab64-848">If the match fails, a <xref:System.IO.FileLoadException> is thrown.</span></span>  
  
 <span data-ttu-id="9ab64-849">Se você chamar o <xref:System.Reflection.Assembly.Load%2A> método mais de uma vez no mesmo assembly, mas com uma evidência diferente especificada, o common language runtime não gerará um <xref:System.IO.FileLoadException> a igualdade e a integridade das especificações evidência diferentes não podem ser determinada.</span><span class="sxs-lookup"><span data-stu-id="9ab64-849">If you call the <xref:System.Reflection.Assembly.Load%2A> method more than once on the same assembly but with a different evidence specified, the common language runtime does not throw a <xref:System.IO.FileLoadException> because the equality and integrity of the different evidence specifications cannot be determined.</span></span> <span data-ttu-id="9ab64-850">A evidência que primeiro é bem-sucedida é a evidência que será usada.</span><span class="sxs-lookup"><span data-stu-id="9ab64-850">The evidence that first succeeds is the evidence that is used.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9ab64-851">
            <paramref name="assemblyRef" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-851">
              <paramref name="assemblyRef" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="9ab64-852">
            <paramref name="assemblyRef" /> não foi encontrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-852">
              <paramref name="assemblyRef" /> is not found.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="9ab64-853">
            <paramref name="assemblyRef" /> não é um assembly válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-853">
              <paramref name="assemblyRef" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="9ab64-854">-ou-  A versão 2.0 ou posterior do Common Language Runtime está carregada atualmente e o <paramref name="assemblyRef" /> foi compilado com uma versão posterior.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-854">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyRef" /> was compiled with a later version.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="9ab64-855">Um assembly ou módulo foi carregado duas vezes em com duas evidências diferentes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-855">An assembly or module was loaded twice with two different evidences.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="9ab64-856">para acesso de leitura de um arquivo ou um diretório, e para acesso às informações no próprio caminho.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-856">for access to read from a file or directory, and for access to the information in the path itself.</span>
          </span>
          <span data-ttu-id="9ab64-857">Enumerações associadas: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-857">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          </span>
        </permission>
        <permission cref="T:System.Net.WebPermission">
          <span data-ttu-id="9ab64-858">para ler um URI que não começa com "file://".</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-858">for reading a URI that does not begin with "file://".</span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="9ab64-859">para carregar um assembly com evidências.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-859">to load an assembly with evidence.</span>
          </span>
          <span data-ttu-id="9ab64-860">Enumeração associada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-860">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Security.Policy.Evidence" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly Load (string assemblyString, System.Security.Policy.Evidence assemblySecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly Load(string assemblyString, class System.Security.Policy.Evidence assemblySecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.Load(System.String,System.Security.Policy.Evidence)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Load (assemblyString As String, assemblySecurity As Evidence) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ Load(System::String ^ assemblyString, System::Security::Policy::Evidence ^ assemblySecurity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyString" Type="System.String" />
        <Parameter Name="assemblySecurity" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="assemblyString">
          <span data-ttu-id="9ab64-861">O nome para exibição do assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-861">The display name of the assembly.</span>
          </span>
        </param>
        <param name="assemblySecurity">
          <span data-ttu-id="9ab64-862">Evidência para carregar o assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-862">Evidence for loading the assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9ab64-863">Carrega um assembly dado seu nome de exibição, carregando-o no domínio do chamador usando a evidência fornecida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-863">Loads an assembly given its display name, loading the assembly into the domain of the caller using the supplied evidence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9ab64-864">O assembly carregado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-864">The loaded assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ab64-865"><xref:System.IO.FileLoadException> será gerada se `assemblyString` Especifica o nome completo do assembly e o primeiro conjunto que corresponda ao nome simple tem uma versão diferente, cultura ou token de chave pública.</span><span class="sxs-lookup"><span data-stu-id="9ab64-865"><xref:System.IO.FileLoadException> is thrown if `assemblyString` specifies the full assembly name, and the first assembly that matches the simple name has a different version, culture, or public key token.</span></span> <span data-ttu-id="9ab64-866">O carregador não continuar a investigação de outros assemblies que correspondem ao nome simple.</span><span class="sxs-lookup"><span data-stu-id="9ab64-866">The loader does not continue probing for other assemblies that match the simple name.</span></span>  
  
 <span data-ttu-id="9ab64-867">Se determinadas permissões são concedidas ou não a um assembly é algo que se baseia na evidência.</span><span class="sxs-lookup"><span data-stu-id="9ab64-867">Whether certain permissions are granted or not granted to an assembly is based on evidence.</span></span> <span data-ttu-id="9ab64-868">As regras para o assembly e a mesclagem de evidência de segurança são da seguinte maneira:</span><span class="sxs-lookup"><span data-stu-id="9ab64-868">The rules for assembly and security evidence merging are as follows:</span></span>  
  
-   <span data-ttu-id="9ab64-869">Quando você usa um <xref:System.Reflection.Assembly.Load%2A> método sem nenhum <xref:System.Security.Policy.Evidence> parâmetro, o assembly é carregado com a evidência que fornece o carregador.</span><span class="sxs-lookup"><span data-stu-id="9ab64-869">When you use a <xref:System.Reflection.Assembly.Load%2A> method with no <xref:System.Security.Policy.Evidence> parameter, the assembly is loaded with the evidence that the loader supplies.</span></span>  
  
-   <span data-ttu-id="9ab64-870">Quando você usa um <xref:System.Reflection.Assembly.Load%2A> método com um <xref:System.Security.Policy.Evidence> parâmetros, partes de evidência são mesclados.</span><span class="sxs-lookup"><span data-stu-id="9ab64-870">When you use a <xref:System.Reflection.Assembly.Load%2A> method with an <xref:System.Security.Policy.Evidence> parameter, pieces of evidence are merged.</span></span> <span data-ttu-id="9ab64-871">Partes de evidência fornecida como um argumento para o <xref:System.Reflection.Assembly.Load%2A> método substituir partes de evidência fornecida pelo carregador.</span><span class="sxs-lookup"><span data-stu-id="9ab64-871">Pieces of evidence supplied as an argument to the <xref:System.Reflection.Assembly.Load%2A> method supersede pieces of evidence supplied by the loader.</span></span>  
  
-   <span data-ttu-id="9ab64-872">Quando você usa um <xref:System.Reflection.Assembly.Load%2A> sobrecarga de método com um `Byte[]` parâmetro para carregar uma objeto arquivo formato COFF imagem comum, evidência é herdado do assembly de chamada.</span><span class="sxs-lookup"><span data-stu-id="9ab64-872">When you use a <xref:System.Reflection.Assembly.Load%2A> method overload with a `Byte[]` parameter to load a common object file format (COFF) image, evidence is inherited from the calling assembly.</span></span> <span data-ttu-id="9ab64-873">Isso se aplica ao .NET Framework versão 1.1 Service Pack 1 (SP1) e versões posteriores.</span><span class="sxs-lookup"><span data-stu-id="9ab64-873">This applies to the .NET Framework version 1.1 Service Pack 1 (SP1) and subsequent releases.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="9ab64-874">No .NET Framework versão 1.0 e na versão 1.1 sem o SP1, quando você usa um <xref:System.Reflection.Assembly.Load%2A> sobrecarga de método com um `Byte[]` parâmetro para carregar uma imagem COFF, evidência é combinado.</span><span class="sxs-lookup"><span data-stu-id="9ab64-874">In the .NET Framework version 1.0 and in version 1.1 without SP1, when you use a <xref:System.Reflection.Assembly.Load%2A> method overload with a `Byte[]` parameter to load a COFF image, evidence is combined.</span></span> <span data-ttu-id="9ab64-875">`Zone`, `Url` e `Site` são herdadas do assembly de chamada, e `Hash` e `StrongName` são obtidos do assembly COFF.</span><span class="sxs-lookup"><span data-stu-id="9ab64-875">`Zone`, `Url` and `Site` are inherited from the calling assembly, and `Hash` and `StrongName` are taken from the COFF assembly.</span></span>  
  
-   <span data-ttu-id="9ab64-876">Quando você usa um <xref:System.Reflection.Assembly.Load%2A> método com um `Byte[]` parâmetro e <xref:System.Security.Policy.Evidence> para carregar uma imagem COFF, somente a evidência fornecida é usada.</span><span class="sxs-lookup"><span data-stu-id="9ab64-876">When you use a <xref:System.Reflection.Assembly.Load%2A> method with a `Byte[]` parameter and <xref:System.Security.Policy.Evidence> to load a COFF image, only the supplied evidence is used.</span></span> <span data-ttu-id="9ab64-877">Evidência de assembly de chamada e evidência da imagem COFF são ignorados.</span><span class="sxs-lookup"><span data-stu-id="9ab64-877">Evidence of the calling assembly and evidence of the COFF image is ignored.</span></span>  
  
 <span data-ttu-id="9ab64-878">Refletir em arquivos executáveis C++ pode lançar um <xref:System.BadImageFormatException>.</span><span class="sxs-lookup"><span data-stu-id="9ab64-878">Reflecting on C++ executable files might throw a <xref:System.BadImageFormatException>.</span></span> <span data-ttu-id="9ab64-879">Isso provavelmente é causado pelo compilador C++ tirando os endereços de relocação ou `.reloc` seção do arquivo executável.</span><span class="sxs-lookup"><span data-stu-id="9ab64-879">This is most likely caused by the C++ compiler stripping the relocation addresses or the `.reloc` section from your executable file.</span></span> <span data-ttu-id="9ab64-880">Para preservar o `.reloc` endereço para o arquivo executável C++, especifique `/fixed:no` quando você está vinculando.</span><span class="sxs-lookup"><span data-stu-id="9ab64-880">To preserve the `.reloc` address for your C++ executable file, specify `/fixed:no` when you are linking.</span></span>  
  
 <span data-ttu-id="9ab64-881">Se você chamar esse método mais de uma vez no mesmo assembly, mas com uma evidência diferente especificada, o common language runtime não gerará um <xref:System.IO.FileLoadException> a igualdade e a integridade das especificações evidência diferentes não podem ser determinada.</span><span class="sxs-lookup"><span data-stu-id="9ab64-881">If you call this method more than once on the same assembly but with a different evidence specified, the common language runtime does not throw a <xref:System.IO.FileLoadException> because the equality and integrity of the different evidence specifications cannot be determined.</span></span> <span data-ttu-id="9ab64-882">A evidência que primeiro é bem-sucedida é a evidência que será usada.</span><span class="sxs-lookup"><span data-stu-id="9ab64-882">The evidence that first succeeds is the evidence that is used.</span></span>  
  
 <span data-ttu-id="9ab64-883">No .NET Framework versão 2.0, a arquitetura do processador é adicionada à identidade do assembly e pode ser especificada como parte das cadeias de caracteres de nome do assembly.</span><span class="sxs-lookup"><span data-stu-id="9ab64-883">In the .NET Framework version 2.0, processor architecture is added to assembly identity, and can be specified as part of assembly name strings.</span></span> <span data-ttu-id="9ab64-884">Por exemplo, "ProcessorArchitecture=msil".</span><span class="sxs-lookup"><span data-stu-id="9ab64-884">For example, "ProcessorArchitecture=msil".</span></span> <span data-ttu-id="9ab64-885">No entanto, a maneira recomendada para especificar um nome de assembly é criar um <xref:System.Reflection.AssemblyName> do objeto e passá-lo para uma sobrecarga apropriada do <xref:System.Reflection.Assembly.Load%2A> método.</span><span class="sxs-lookup"><span data-stu-id="9ab64-885">However, the recommended way to specify an assembly name is to create an <xref:System.Reflection.AssemblyName> object and pass it to an appropriate overload of the <xref:System.Reflection.Assembly.Load%2A> method.</span></span> <span data-ttu-id="9ab64-886">Consulte <xref:System.Reflection.AssemblyName.ProcessorArchitecture%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="9ab64-886">See <xref:System.Reflection.AssemblyName.ProcessorArchitecture%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9ab64-887">
            <paramref name="assemblyString" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-887">
              <paramref name="assemblyString" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="9ab64-888">
            <paramref name="assemblyString" /> não foi encontrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-888">
              <paramref name="assemblyString" /> is not found.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="9ab64-889">
            <paramref name="assemblyString" /> não é um assembly válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-889">
              <paramref name="assemblyString" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="9ab64-890">-ou-  A versão 2.0 ou posterior do Common Language Runtime está carregada atualmente e o <paramref name="assemblyString" /> foi compilado com uma versão posterior.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-890">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyString" /> was compiled with a later version.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="9ab64-891">Não foi possível carregar um arquivo que foi encontrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-891">A file that was found could not be loaded.</span>
          </span>
          <span data-ttu-id="9ab64-892">-ou-  Um assembly ou módulo foi carregado duas vezes com duas evidências diferentes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-892">-or-  An assembly or module was loaded twice with two different evidences.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="9ab64-893">para carregar um assembly com evidências.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-893">to load an assembly with evidence.</span>
          </span>
          <span data-ttu-id="9ab64-894">Enumeração associada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-894">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Security.Policy.Evidence" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly Load (byte[] rawAssembly, byte[] rawSymbolStore, System.Security.Policy.Evidence securityEvidence);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly Load(unsigned int8[] rawAssembly, unsigned int8[] rawSymbolStore, class System.Security.Policy.Evidence securityEvidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.Load(System.Byte[],System.Byte[],System.Security.Policy.Evidence)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Load (rawAssembly As Byte(), rawSymbolStore As Byte(), securityEvidence As Evidence) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ Load(cli::array &lt;System::Byte&gt; ^ rawAssembly, cli::array &lt;System::Byte&gt; ^ rawSymbolStore, System::Security::Policy::Evidence ^ securityEvidence);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawAssembly" Type="System.Byte[]" />
        <Parameter Name="rawSymbolStore" Type="System.Byte[]" />
        <Parameter Name="securityEvidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="rawAssembly">
          <span data-ttu-id="9ab64-895">Uma matriz de byte que é uma imagem baseada em COFF contendo um assembly emitido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-895">A byte array that is a COFF-based image containing an emitted assembly.</span>
          </span>
        </param>
        <param name="rawSymbolStore">
          <span data-ttu-id="9ab64-896">Uma matriz de bytes que contém os bytes brutos que representam os símbolos do assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-896">A byte array that contains the raw bytes representing the symbols for the assembly.</span>
          </span>
        </param>
        <param name="securityEvidence">
          <span data-ttu-id="9ab64-897">Evidência para carregar o assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-897">Evidence for loading the assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9ab64-898">Carrega o assembly com uma imagem baseada em formato COFF, contendo um assembly emitido, incluindo, opcionalmente, símbolos e evidência para o assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-898">Loads the assembly with a common object file format (COFF)-based image containing an emitted assembly, optionally including symbols and evidence for the assembly.</span>
          </span>
          <span data-ttu-id="9ab64-899">O assembly é carregado no domínio de aplicativo do chamador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-899">The assembly is loaded into the application domain of the caller.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9ab64-900">O assembly carregado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-900">The loaded assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ab64-901">O assembly é carregado no domínio do chamador usando a evidência fornecida.</span><span class="sxs-lookup"><span data-stu-id="9ab64-901">The assembly is loaded into the domain of the caller using the supplied evidence.</span></span> <span data-ttu-id="9ab64-902">Os bytes brutos que representa os símbolos para o assembly também são carregados.</span><span class="sxs-lookup"><span data-stu-id="9ab64-902">The raw bytes representing the symbols for the assembly are also loaded.</span></span>  
  
 <span data-ttu-id="9ab64-903">Se determinadas permissões são concedidas ou não a um assembly é algo que se baseia na evidência.</span><span class="sxs-lookup"><span data-stu-id="9ab64-903">Whether certain permissions are granted or not granted to an assembly is based on evidence.</span></span> <span data-ttu-id="9ab64-904">As regras para o assembly e a mesclagem de evidência de segurança são da seguinte maneira:</span><span class="sxs-lookup"><span data-stu-id="9ab64-904">The rules for assembly and security evidence merging are as follows:</span></span>  
  
-   <span data-ttu-id="9ab64-905">Quando você usa um <xref:System.Reflection.Assembly.Load%2A> método sem nenhum <xref:System.Security.Policy.Evidence> parâmetro, o assembly é carregado com a evidência que fornece o carregador.</span><span class="sxs-lookup"><span data-stu-id="9ab64-905">When you use a <xref:System.Reflection.Assembly.Load%2A> method with no <xref:System.Security.Policy.Evidence> parameter, the assembly is loaded with the evidence that the loader supplies.</span></span>  
  
-   <span data-ttu-id="9ab64-906">Quando você usa um <xref:System.Reflection.Assembly.Load%2A> método com um <xref:System.Security.Policy.Evidence> parâmetros, partes de evidência são mesclados.</span><span class="sxs-lookup"><span data-stu-id="9ab64-906">When you use a <xref:System.Reflection.Assembly.Load%2A> method with an <xref:System.Security.Policy.Evidence> parameter, pieces of evidence are merged.</span></span> <span data-ttu-id="9ab64-907">Partes de evidência fornecida como um argumento para o <xref:System.Reflection.Assembly.Load%2A> método substituir partes de evidência fornecida pelo carregador.</span><span class="sxs-lookup"><span data-stu-id="9ab64-907">Pieces of evidence supplied as an argument to the <xref:System.Reflection.Assembly.Load%2A> method supersede pieces of evidence supplied by the loader.</span></span>  
  
-   <span data-ttu-id="9ab64-908">Quando você usa um <xref:System.Reflection.Assembly.Load%2A> sobrecarga de método com um `Byte[]` parâmetro para carregar uma imagem COFF, evidência é herdado do assembly de chamada.</span><span class="sxs-lookup"><span data-stu-id="9ab64-908">When you use a <xref:System.Reflection.Assembly.Load%2A> method overload with a `Byte[]` parameter to load a COFF image, evidence is inherited from the calling assembly.</span></span> <span data-ttu-id="9ab64-909">Isso se aplica ao .NET Framework versão 1.1 Service Pack 1 (SP1) e versões posteriores.</span><span class="sxs-lookup"><span data-stu-id="9ab64-909">This applies to the .NET Framework version 1.1 Service Pack 1 (SP1) and subsequent releases.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="9ab64-910">No .NET Framework versão 1.0 e na versão 1.1 sem o SP1, quando você usa um <xref:System.Reflection.Assembly.Load%2A> sobrecarga de método com um `Byte[]` parâmetro para carregar uma imagem COFF, evidência é combinado.</span><span class="sxs-lookup"><span data-stu-id="9ab64-910">In the .NET Framework version 1.0 and in version 1.1 without SP1, when you use a <xref:System.Reflection.Assembly.Load%2A> method overload with a `Byte[]` parameter to load a COFF image, evidence is combined.</span></span> <span data-ttu-id="9ab64-911">`Zone`, `Url` e `Site` são herdadas do assembly de chamada, e `Hash` e `StrongName` são obtidos do assembly COFF.</span><span class="sxs-lookup"><span data-stu-id="9ab64-911">`Zone`, `Url` and `Site` are inherited from the calling assembly, and `Hash` and `StrongName` are taken from the COFF assembly.</span></span>  
  
-   <span data-ttu-id="9ab64-912">Quando você usa um <xref:System.Reflection.Assembly.Load%2A> método com um `Byte[]` parâmetro e <xref:System.Security.Policy.Evidence> para carregar uma imagem COFF, somente a evidência fornecida é usada.</span><span class="sxs-lookup"><span data-stu-id="9ab64-912">When you use a <xref:System.Reflection.Assembly.Load%2A> method with a `Byte[]` parameter and <xref:System.Security.Policy.Evidence> to load a COFF image, only the supplied evidence is used.</span></span> <span data-ttu-id="9ab64-913">Evidência de assembly de chamada e evidência da imagem COFF são ignorados.</span><span class="sxs-lookup"><span data-stu-id="9ab64-913">Evidence of the calling assembly and evidence of the COFF image are ignored.</span></span>  
  
 <span data-ttu-id="9ab64-914">Refletir em arquivos executáveis C++ pode lançar um <xref:System.BadImageFormatException>.</span><span class="sxs-lookup"><span data-stu-id="9ab64-914">Reflecting on C++ executable files might throw a <xref:System.BadImageFormatException>.</span></span> <span data-ttu-id="9ab64-915">Isso provavelmente é causado pelo compilador C++ tirando os endereços de relocação ou `.reloc` seção do arquivo executável.</span><span class="sxs-lookup"><span data-stu-id="9ab64-915">This is most likely caused by the C++ compiler stripping the relocation addresses or the `.reloc` section from your executable file.</span></span> <span data-ttu-id="9ab64-916">Para preservar o `.reloc` endereço para o arquivo executável C++, especifique `/fixed:no` quando você está vinculando.</span><span class="sxs-lookup"><span data-stu-id="9ab64-916">To preserve the `.reloc` address for your C++ executable file, specify `/fixed:no` when you are linking.</span></span>  
  
 <span data-ttu-id="9ab64-917">Se você chamar o [\], Byte\<xref:System.Reflection.Assembly.Load%2A > método mais de uma vez no mesmo assembly, mas com uma evidência diferente especificada, o common language runtime não gerará um <xref:System.IO.FileLoadException> porque o igualdade e a integridade das especificações evidência diferentes não podem ser determinados.</span><span class="sxs-lookup"><span data-stu-id="9ab64-917">If you call the [\], Byte\<xref:System.Reflection.Assembly.Load%2A> method more than once on the same assembly but with a different evidence specified, the common language runtime does not throw a <xref:System.IO.FileLoadException> because the equality and integrity of the different evidence specifications cannot be determined.</span></span> <span data-ttu-id="9ab64-918">A evidência que primeiro é bem-sucedida é a evidência que será usada.</span><span class="sxs-lookup"><span data-stu-id="9ab64-918">The evidence that first succeeds is the evidence that is used.</span></span>  
  
 <span data-ttu-id="9ab64-919">Observe que essa sobrecarga de método sempre cria um novo <xref:System.Reflection.Assembly> objeto com seu próprio mapeamento.</span><span class="sxs-lookup"><span data-stu-id="9ab64-919">Note that this method overload always creates a new <xref:System.Reflection.Assembly> object with its own mapping.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9ab64-920">
            <paramref name="rawAssembly" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-920">
              <paramref name="rawAssembly" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="9ab64-921">
            <paramref name="rawAssembly" /> não é um assembly válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-921">
              <paramref name="rawAssembly" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="9ab64-922">-ou-  A versão 2.0 ou posterior do Common Language Runtime está carregada atualmente e o <paramref name="rawAssembly" /> foi compilado com uma versão posterior.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-922">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="rawAssembly" /> was compiled with a later version.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="9ab64-923">Um assembly ou módulo foi carregado duas vezes em com duas evidências diferentes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-923">An assembly or module was loaded twice with two different evidences.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="9ab64-924">
            <paramref name="securityEvidence" /> não é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-924">
              <paramref name="securityEvidence" /> is not <see langword="null" />.</span>
          </span>
          <span data-ttu-id="9ab64-925">Por padrão, a política de CAS herdada não está habilitada no [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]; quando ela não está habilitada, <paramref name="securityEvidence" /> deve ser <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-925">By default, legacy CAS policy is not enabled in the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]; when it is not enabled, <paramref name="securityEvidence" /> must be <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="9ab64-926">a capacidade de fornecer a evidência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-926">for the ability to supply evidence.</span>
          </span>
          <span data-ttu-id="9ab64-927">Enumeração associada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-927">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" />.</span>
          </span>
          <span data-ttu-id="9ab64-928">Ação de segurança: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-928">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly Load (byte[] rawAssembly, byte[] rawSymbolStore, System.Security.SecurityContextSource securityContextSource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly Load(unsigned int8[] rawAssembly, unsigned int8[] rawSymbolStore, valuetype System.Security.SecurityContextSource securityContextSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.Load(System.Byte[],System.Byte[],System.Security.SecurityContextSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ Load(cli::array &lt;System::Byte&gt; ^ rawAssembly, cli::array &lt;System::Byte&gt; ^ rawSymbolStore, System::Security::SecurityContextSource securityContextSource);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawAssembly" Type="System.Byte[]" />
        <Parameter Name="rawSymbolStore" Type="System.Byte[]" />
        <Parameter Name="securityContextSource" Type="System.Security.SecurityContextSource" />
      </Parameters>
      <Docs>
        <param name="rawAssembly">
          <span data-ttu-id="9ab64-929">Uma matriz de byte que é uma imagem baseada em COFF contendo um assembly emitido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-929">A byte array that is a COFF-based image containing an emitted assembly.</span>
          </span>
        </param>
        <param name="rawSymbolStore">
          <span data-ttu-id="9ab64-930">Uma matriz de bytes que contém os bytes brutos que representam os símbolos do assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-930">A byte array that contains the raw bytes representing the symbols for the assembly.</span>
          </span>
        </param>
        <param name="securityContextSource">
          <span data-ttu-id="9ab64-931">A origem do contexto de segurança.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-931">The source of the security context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9ab64-932">Carrega o assembly com uma imagem baseada no formato COFF contendo um assembly emitido, opcionalmente incluindo símbolos e especificando a fonte para o contexto de segurança.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-932">Loads the assembly with a common object file format (COFF)-based image containing an emitted assembly, optionally including symbols and specifying the source for the security context.</span>
          </span>
          <span data-ttu-id="9ab64-933">O assembly é carregado no domínio de aplicativo do chamador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-933">The assembly is loaded into the application domain of the caller.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9ab64-934">O assembly carregado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-934">The loaded assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ab64-935">O assembly é carregado no domínio de aplicativo do chamador usando a origem especificada para o contexto de segurança.</span><span class="sxs-lookup"><span data-stu-id="9ab64-935">The assembly is loaded into the application domain of the caller using the specified source for the security context.</span></span> <span data-ttu-id="9ab64-936">Se `rawSymbolStore` foi especificado, os bytes brutos que representam os símbolos para o assembly também são carregados.</span><span class="sxs-lookup"><span data-stu-id="9ab64-936">If `rawSymbolStore` was specified, the raw bytes that represent the symbols for the assembly are also loaded.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9ab64-937">
            <paramref name="rawAssembly" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-937">
              <paramref name="rawAssembly" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="9ab64-938">
            <paramref name="rawAssembly" /> não é um assembly válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-938">
              <paramref name="rawAssembly" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="9ab64-939">-ou-  <paramref name="rawAssembly" /> foi compilado com uma versão do Common Language Runtime posterior àquela carregada atualmente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-939">-or-  <paramref name="rawAssembly" /> was compiled with a later version of the common language runtime than the version that is currently loaded.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9ab64-940">O valor atribuído de <paramref name="securityContextSource" /> não é um dos valores de enumeração.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-940">The value of <paramref name="securityContextSource" /> is not one of the enumeration values.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="LoadFile">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9ab64-941">Carrega o conteúdo de um arquivo do assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-941">Loads the contents of an assembly file.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LoadFile">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly LoadFile (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly LoadFile(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.LoadFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LoadFile (path As String) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ LoadFile(System::String ^ path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="9ab64-942">O caminho totalmente qualificado do arquivo a ser carregado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-942">The fully qualified path of the file to load.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9ab64-943">Carrega o conteúdo de um arquivo do assembly no caminho especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-943">Loads the contents of an assembly file on the specified path.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9ab64-944">O assembly carregado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-944">The loaded assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ab64-945">Use o <xref:System.Reflection.Assembly.LoadFile%2A> método para carregar e examine os assemblies que têm a mesma identidade, mas estão localizados em diferentes caminhos.<xref:System.Reflection.Assembly.LoadFile%2A></span><span class="sxs-lookup"><span data-stu-id="9ab64-945">Use the <xref:System.Reflection.Assembly.LoadFile%2A> method to load and examine assemblies that have the same identity, but are located in different paths.<xref:System.Reflection.Assembly.LoadFile%2A></span></span> <span data-ttu-id="9ab64-946">não carregar arquivos em contexto de carga e não resolver dependências usando o caminho de carga, como o <xref:System.Reflection.Assembly.LoadFrom%2A> método.</span><span class="sxs-lookup"><span data-stu-id="9ab64-946">does not load files into the load-from  context, and does not resolve dependencies using the load path, as the <xref:System.Reflection.Assembly.LoadFrom%2A> method does.</span></span> <span data-ttu-id="9ab64-947"><xref:System.Reflection.Assembly.LoadFile%2A> é útil neste cenário limitada porque <xref:System.Reflection.Assembly.LoadFrom%2A> não pode ser usado para carregar assemblies que têm as mesmo identidades mas caminhos diferentes; ele carregará apenas os primeiros esse assembly.</span><span class="sxs-lookup"><span data-stu-id="9ab64-947"><xref:System.Reflection.Assembly.LoadFile%2A> is useful in this limited scenario because <xref:System.Reflection.Assembly.LoadFrom%2A> cannot be used to load assemblies that have the same identities but different paths; it will load only the first such assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9ab64-948">O argumento <paramref name="path" /> não é um caminho absoluto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-948">The <paramref name="path" /> argument is not an absolute path.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9ab64-949">O parâmetro <paramref name="path" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-949">The <paramref name="path" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="9ab64-950">Não foi possível carregar um arquivo que foi encontrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-950">A file that was found could not be loaded.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="9ab64-951">O parâmetro <paramref name="path" /> é uma cadeia de caracteres vazia ("") ou não existe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-951">The <paramref name="path" /> parameter is an empty string ("") or does not exist.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="9ab64-952">
            <paramref name="path" /> não é um assembly válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-952">
              <paramref name="path" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="9ab64-953">-ou-  A versão 2.0 ou posterior do Common Language Runtime está carregada atualmente e o <paramref name="path" /> foi compilado com uma versão posterior.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-953">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="path" /> was compiled with a later version.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="9ab64-954">para acesso de leitura de um arquivo ou um diretório, e para acesso às informações no próprio caminho.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-954">for access to read from a file or directory, and for access to the information in the path itself.</span>
          </span>
          <span data-ttu-id="9ab64-955">Enumerações associadas: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-955">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="9ab64-956">para carregar um assembly com evidências.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-956">to load an assembly with evidence.</span>
          </span>
          <span data-ttu-id="9ab64-957">Enumeração associada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-957">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="LoadFile">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly LoadFile (string path, System.Security.Policy.Evidence securityEvidence);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly LoadFile(string path, class System.Security.Policy.Evidence securityEvidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.LoadFile(System.String,System.Security.Policy.Evidence)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LoadFile (path As String, securityEvidence As Evidence) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ LoadFile(System::String ^ path, System::Security::Policy::Evidence ^ securityEvidence);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="securityEvidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="9ab64-958">O caminho totalmente qualificado do arquivo do assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-958">The fully qualified path of the assembly file.</span>
          </span>
        </param>
        <param name="securityEvidence">
          <span data-ttu-id="9ab64-959">Evidência para carregar o assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-959">Evidence for loading the assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9ab64-960">Carrega um assembly de acordo com seu caminho, carregando o assembly no domínio do chamador usando a evidência fornecida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-960">Loads an assembly given its path, loading the assembly into the domain of the caller using the supplied evidence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9ab64-961">O assembly carregado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-961">The loaded assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ab64-962">Use o <xref:System.Reflection.Assembly.LoadFile%2A> método para carregar e examine os assemblies que têm a mesma identidade, mas estão localizados em diferentes caminhos.</span><span class="sxs-lookup"><span data-stu-id="9ab64-962">Use the <xref:System.Reflection.Assembly.LoadFile%2A> method to load and examine assemblies that have the same identity, but are located in different paths.</span></span> <span data-ttu-id="9ab64-963"><xref:System.Reflection.Assembly.LoadFile%2A> não carregar arquivos para o <xref:System.Reflection.Assembly.LoadFrom%2A> contexto e não resolver dependências usando o caminho de carga, como o <xref:System.Reflection.Assembly.LoadFrom%2A> método.</span><span class="sxs-lookup"><span data-stu-id="9ab64-963"><xref:System.Reflection.Assembly.LoadFile%2A> does not load files into the <xref:System.Reflection.Assembly.LoadFrom%2A> context, and does not resolve dependencies using the load path, as the <xref:System.Reflection.Assembly.LoadFrom%2A> method does.</span></span> <span data-ttu-id="9ab64-964"><xref:System.Reflection.Assembly.LoadFile%2A> é útil neste cenário limitada porque <xref:System.Reflection.Assembly.LoadFrom%2A> não pode ser usado para carregar assemblies que têm as mesmo identidades mas caminhos diferentes; ele carregará apenas os primeiros esse assembly.</span><span class="sxs-lookup"><span data-stu-id="9ab64-964"><xref:System.Reflection.Assembly.LoadFile%2A> is useful in this limited scenario because <xref:System.Reflection.Assembly.LoadFrom%2A> cannot be used to load assemblies that have the same identities but different paths; it will load only the first such assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9ab64-965">O argumento <paramref name="path" /> não é um caminho absoluto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-965">The <paramref name="path" /> argument is not an absolute path.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9ab64-966">O parâmetro <paramref name="path" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-966">The <paramref name="path" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="9ab64-967">O parâmetro <paramref name="path" /> é uma cadeia de caracteres vazia ("") ou não existe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-967">The <paramref name="path" /> parameter is an empty string ("") or does not exist.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="9ab64-968">Não foi possível carregar um arquivo que foi encontrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-968">A file that was found could not be loaded.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="9ab64-969">
            <paramref name="path" /> não é um assembly válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-969">
              <paramref name="path" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="9ab64-970">-ou-  A versão 2.0 ou posterior do Common Language Runtime está carregada atualmente e o <paramref name="path" /> foi compilado com uma versão posterior.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-970">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="path" /> was compiled with a later version.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="9ab64-971">
            <paramref name="securityEvidence" /> não é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-971">
              <paramref name="securityEvidence" /> is not <see langword="null" />.</span>
          </span>
          <span data-ttu-id="9ab64-972">Por padrão, a política de CAS herdada não está habilitada no [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]; quando ela não está habilitada, <paramref name="securityEvidence" /> deve ser <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-972">By default, legacy CAS policy is not enabled in the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]; when it is not enabled, <paramref name="securityEvidence" /> must be <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="9ab64-973">para acesso de leitura de um arquivo ou um diretório, e para acesso às informações no próprio caminho.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-973">for access to read from a file or directory, and for access to the information in the path itself.</span>
          </span>
          <span data-ttu-id="9ab64-974">Enumerações associadas: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-974">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="9ab64-975">para carregar um assembly com evidências.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-975">to load an assembly with evidence.</span>
          </span>
          <span data-ttu-id="9ab64-976">Enumeração associada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-976">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="LoadFrom">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9ab64-977">Carrega um assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-977">Loads an assembly.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LoadFrom">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly LoadFrom (string assemblyFile);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly LoadFrom(string assemblyFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.LoadFrom(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LoadFrom (assemblyFile As String) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ LoadFrom(System::String ^ assemblyFile);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyFile">
          <span data-ttu-id="9ab64-978">O nome ou o caminho do arquivo que contém o manifesto do assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-978">The name or path of the file that contains the manifest of the assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9ab64-979">Carrega um assembly de acordo com o nome de arquivo ou caminho.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-979">Loads an assembly given its file name or path.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9ab64-980">O assembly carregado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-980">The loaded assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ab64-981">O `assemblyFile` parâmetro deve se referir a um URI sem caracteres de escape.</span><span class="sxs-lookup"><span data-stu-id="9ab64-981">The `assemblyFile` parameter must refer to a URI without escape characters.</span></span> <span data-ttu-id="9ab64-982">Esse método fornece caracteres de escape para todos os caracteres inválidos no URI.</span><span class="sxs-lookup"><span data-stu-id="9ab64-982">This method supplies escape characters for all invalid characters in the URI.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9ab64-983">Não há suporte para o protocolo de transferência de arquivo (FTP).</span><span class="sxs-lookup"><span data-stu-id="9ab64-983">File transfer protocol (FTP) is not supported.</span></span> <span data-ttu-id="9ab64-984">Se o URI fornecido para `assemblyFile` é um endereço FTP, o assembly não está carregado.</span><span class="sxs-lookup"><span data-stu-id="9ab64-984">If the URI supplied for `assemblyFile` is an FTP address, the assembly is not loaded.</span></span> <span data-ttu-id="9ab64-985">Nenhuma exceção é lançada.</span><span class="sxs-lookup"><span data-stu-id="9ab64-985">No exception is thrown.</span></span>  
  
 <span data-ttu-id="9ab64-986">`assemblyFile` pode ser absoluto ou relativo para o diretório atual, e o assembly é carregado para o domínio do chamador.</span><span class="sxs-lookup"><span data-stu-id="9ab64-986">`assemblyFile` may be absolute or relative to the current directory, and the assembly is loaded into the domain of the caller.</span></span>  
  
 <span data-ttu-id="9ab64-987">Módulos (assemblies) pode ser carregado em um dos três contextos, ou pode ser carregado sem contexto:</span><span class="sxs-lookup"><span data-stu-id="9ab64-987">Assemblies can be loaded into one of three contexts, or can be loaded without context:</span></span>  
  
-   <span data-ttu-id="9ab64-988">O contexto de carregamento contém assemblies encontrados pela sondagem: no GAC, em um assembly de host armazenar se o tempo de execução está hospedado, ou no <xref:System.AppDomainSetup.ApplicationBase%2A> e <xref:System.AppDomainSetup.PrivateBinPath%2A> do domínio do aplicativo.</span><span class="sxs-lookup"><span data-stu-id="9ab64-988">The load context contains assemblies found by probing: in the GAC, in a host assembly store if the runtime is hosted, or in the <xref:System.AppDomainSetup.ApplicationBase%2A> and <xref:System.AppDomainSetup.PrivateBinPath%2A> of the application domain.</span></span> <span data-ttu-id="9ab64-989">A maioria das sobrecargas do método <xref:System.Reflection.Assembly.Load%2A> carrega os assemblies nesse contexto.</span><span class="sxs-lookup"><span data-stu-id="9ab64-989">Most overloads of the <xref:System.Reflection.Assembly.Load%2A> method load assemblies into this context.</span></span>  
  
-   <span data-ttu-id="9ab64-990">Contexto de carga contém os assemblies para os quais o usuário forneceu um caminho que não são incluído nos diretórios pesquisados por sondagem.</span><span class="sxs-lookup"><span data-stu-id="9ab64-990">The load-from context contains assemblies for which the user provided a path not included in the directories searched by probing.</span></span> <span data-ttu-id="9ab64-991"><xref:System.Reflection.Assembly.LoadFrom%2A>, <xref:System.AppDomain.CreateInstanceFrom%2A> e <xref:System.AppDomain.ExecuteAssembly%2A> são exemplos de métodos que carregam pelo caminho.</span><span class="sxs-lookup"><span data-stu-id="9ab64-991"><xref:System.Reflection.Assembly.LoadFrom%2A>, <xref:System.AppDomain.CreateInstanceFrom%2A>, and <xref:System.AppDomain.ExecuteAssembly%2A> are examples of methods that load by path.</span></span>  
  
-   <span data-ttu-id="9ab64-992">O contexto exclusivo de reflexão contém assemblies carregados com o <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A> e <xref:System.Reflection.Assembly.ReflectionOnlyLoadFrom%2A> métodos; código nesses contextos não podem ser executados.</span><span class="sxs-lookup"><span data-stu-id="9ab64-992">The reflection-only context contains assemblies loaded with the <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A> and <xref:System.Reflection.Assembly.ReflectionOnlyLoadFrom%2A> methods; code in these contexts cannot be executed.</span></span>  
  
-   <span data-ttu-id="9ab64-993">Se o usuário gerado ou localizado o assembly, não é em qualquer contexto.</span><span class="sxs-lookup"><span data-stu-id="9ab64-993">If the user generated or found the assembly, it is not in any context.</span></span> <span data-ttu-id="9ab64-994">Isso se aplica aos assemblies carregados usando sobrecargas do <xref:System.Reflection.Assembly.Load%2A> método que especificar uma matriz de bytes que contém um assembly e para transitórios assemblies dinâmicos criados com reflexão emitir e não são salvas em disco.</span><span class="sxs-lookup"><span data-stu-id="9ab64-994">This applies to assemblies loaded using overloads of the <xref:System.Reflection.Assembly.Load%2A> method that specify a byte array containing an assembly, and to transient dynamic assemblies created with reflection emit and not saved to disk.</span></span>  
  
 <span data-ttu-id="9ab64-995">Contexto de carga permite que um assembly a ser carregado de um caminho não incluído na investigação e ainda permite que as dependências no caminho a ser localizado e carregado porque as informações de caminho são mantidas pelo contexto de.</span><span class="sxs-lookup"><span data-stu-id="9ab64-995">The load-from context allows an assembly to be loaded from a path not included in probing, and yet allows dependencies on that path to be found and loaded because the path information is maintained by the context.</span></span>  
  
 <span data-ttu-id="9ab64-996">O <xref:System.Reflection.Assembly.LoadFrom%2A> método tem as seguintes desvantagens.</span><span class="sxs-lookup"><span data-stu-id="9ab64-996">The <xref:System.Reflection.Assembly.LoadFrom%2A> method has the following disadvantages.</span></span> <span data-ttu-id="9ab64-997">Considere o uso de <xref:System.Reflection.Assembly.Load%2A> em seu lugar.</span><span class="sxs-lookup"><span data-stu-id="9ab64-997">Consider using <xref:System.Reflection.Assembly.Load%2A> instead.</span></span>  
  
-   <span data-ttu-id="9ab64-998">Se um assembly com a mesma identidade já estiver carregado, <xref:System.Reflection.Assembly.LoadFrom%2A> retornará o assembly carregado, mesmo se um caminho diferente foi especificado.</span><span class="sxs-lookup"><span data-stu-id="9ab64-998">If an assembly with the same identity is already loaded, <xref:System.Reflection.Assembly.LoadFrom%2A> returns the loaded assembly even if a different path was specified.</span></span>  
  
-   <span data-ttu-id="9ab64-999">Se um assembly é carregado com <xref:System.Reflection.Assembly.LoadFrom%2A>e posteriormente um assembly no contexto de carga tenta carregar o mesmo assembly por nome de exibição, a tentativa de carregamento falhará.</span><span class="sxs-lookup"><span data-stu-id="9ab64-999">If an assembly is loaded with <xref:System.Reflection.Assembly.LoadFrom%2A>, and later an assembly in the load context attempts to load the same assembly by display name, the load attempt fails.</span></span> <span data-ttu-id="9ab64-1000">Isso pode ocorrer quando um assembly é desserializado.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1000">This can occur when an assembly is de-serialized.</span></span>  
  
-   <span data-ttu-id="9ab64-1001">Se um assembly é carregado com <xref:System.Reflection.Assembly.LoadFrom%2A>, e o caminho de investigação inclui um assembly com um local diferente, mas com a mesma identidade de um <xref:System.InvalidCastException>, <xref:System.MissingMethodException>, ou outro comportamento inesperado poderá ocorrer.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1001">If an assembly is loaded with <xref:System.Reflection.Assembly.LoadFrom%2A>, and the probing path includes an assembly with the same identity but a different location, an <xref:System.InvalidCastException>, <xref:System.MissingMethodException>, or other unexpected behavior can occur.</span></span>  
  
-   <span data-ttu-id="9ab64-1002"><xref:System.Reflection.Assembly.LoadFrom%2A> exige <xref:System.Security.Permissions.FileIOPermissionAccess.Read?displayProperty=nameWithType> e <xref:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery?displayProperty=nameWithType>, ou <xref:System.Net.WebPermission>, no caminho especificado.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1002"><xref:System.Reflection.Assembly.LoadFrom%2A> demands <xref:System.Security.Permissions.FileIOPermissionAccess.Read?displayProperty=nameWithType> and <xref:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery?displayProperty=nameWithType>, or <xref:System.Net.WebPermission>, on the specified path.</span></span>  
  
-   <span data-ttu-id="9ab64-1003">Se existir uma imagem nativa para `assemblyFile`, ele não é usado.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1003">If a native image exists for `assemblyFile`, it is not used.</span></span> <span data-ttu-id="9ab64-1004">O assembly não pode ser carregado como domínio neutro.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1004">The assembly cannot be loaded as domain neutral.</span></span>  
  
-   <span data-ttu-id="9ab64-1005">No .NET Framework versão 1.0 e 1.1, a diretiva não será aplicada.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1005">In the .NET Framework version 1.0 and 1.1, policy is not applied.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9ab64-1006">O exemplo a seguir carrega um assembly fornecido o nome de arquivo ou caminho.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1006">The following example loads an assembly given its file name or path.</span></span>  
  
 [!code-cpp[System.Reflection.Assembly#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Assembly/CPP/assembly.cpp#11)]
 [!code-csharp[System.Reflection.Assembly#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Assembly/CS/assembly.cs#11)]
 [!code-vb[System.Reflection.Assembly#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Assembly/VB/assembly.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9ab64-1007">
            <paramref name="assemblyFile" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1007">
              <paramref name="assemblyFile" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="9ab64-1008">
            <paramref name="assemblyFile" /> não foi encontrado, ou o módulo que você está tentando carregar não especifica uma extensão de nome de arquivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1008">
              <paramref name="assemblyFile" /> is not found, or the module you are trying to load does not specify a filename extension.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="9ab64-1009">Não foi possível carregar um arquivo que foi encontrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1009">A file that was found could not be loaded.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="9ab64-1010">
            <paramref name="assemblyFile" /> não é um assembly válido; por exemplo, um assembly de 32 bits em um processo de 64 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1010">
              <paramref name="assemblyFile" /> is not a valid assembly; for example, a 32-bit assembly in a 64-bit process.</span>
          </span>
          <span data-ttu-id="9ab64-1011">Consulte o tópico de exceção para obter mais informações.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1011">See the exception topic for more information.</span>
          </span>
          <span data-ttu-id="9ab64-1012">-ou-  A versão 2.0 ou posterior do Common Language Runtime está carregada atualmente e o <paramref name="assemblyFile" /> foi compilado com uma versão posterior.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1012">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyFile" /> was compiled with a later version.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="9ab64-1013">Uma base de código que não é iniciada com “file://” foi especificada sem o <see cref="T:System.Net.WebPermission" /> necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1013">A codebase that does not start with "file://" was specified without the required <see cref="T:System.Net.WebPermission" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9ab64-1014">O parâmetro <paramref name="assemblyFile" /> é uma cadeia de caracteres vazia ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1014">The <paramref name="assemblyFile" /> parameter is an empty string ("").</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="9ab64-1015">O nome do assembly excede o tamanho máximo definido pelo sistema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1015">The assembly name exceeds the system-defined maximum length.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="9ab64-1016">para ler um URI que começa com "file://".</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1016">for reading a URI that begins with "file://".</span>
          </span>
          <span data-ttu-id="9ab64-1017">Enumeração associada: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1017">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          </span>
        </permission>
        <permission cref="T:System.Net.WebPermission">
          <span data-ttu-id="9ab64-1018">para ler um URI que não começa com "file://".</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1018">for reading a URI that does not begin with "file://".</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="LoadFrom">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly LoadFrom (string assemblyFile, System.Security.Policy.Evidence securityEvidence);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly LoadFrom(string assemblyFile, class System.Security.Policy.Evidence securityEvidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.LoadFrom(System.String,System.Security.Policy.Evidence)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LoadFrom (assemblyFile As String, securityEvidence As Evidence) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ LoadFrom(System::String ^ assemblyFile, System::Security::Policy::Evidence ^ securityEvidence);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFile" Type="System.String" />
        <Parameter Name="securityEvidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="assemblyFile">
          <span data-ttu-id="9ab64-1019">O nome ou o caminho do arquivo que contém o manifesto do assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1019">The name or path of the file that contains the manifest of the assembly.</span>
          </span>
        </param>
        <param name="securityEvidence">
          <span data-ttu-id="9ab64-1020">Evidência para carregar o assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1020">Evidence for loading the assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9ab64-1021">Carrega um assembly dado seu nome de arquivo ou caminho e fornecendo evidência de segurança.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1021">Loads an assembly given its file name or path and supplying security evidence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9ab64-1022">O assembly carregado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1022">The loaded assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ab64-1023">O `assemblyFile` parâmetro deve se referir a um URI sem caracteres de escape.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1023">The `assemblyFile` parameter must refer to a URI without escape characters.</span></span> <span data-ttu-id="9ab64-1024">Esse método fornece caracteres de escape para todos os caracteres inválidos no URI.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1024">This method supplies escape characters for all invalid characters in the URI.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9ab64-1025">Não há suporte para o protocolo de transferência de arquivo (FTP).</span><span class="sxs-lookup"><span data-stu-id="9ab64-1025">File transfer protocol (FTP) is not supported.</span></span> <span data-ttu-id="9ab64-1026">Se o URI fornecido para `assemblyFile` é um endereço FTP, o assembly não está carregado.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1026">If the URI supplied for `assemblyFile` is an FTP address, the assembly is not loaded.</span></span> <span data-ttu-id="9ab64-1027">Nenhuma exceção é lançada.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1027">No exception is thrown.</span></span>  
  
 <span data-ttu-id="9ab64-1028">`assemblyFile` pode ser absoluto ou relativo para o diretório atual, e o assembly é carregado para o domínio do chamador.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1028">`assemblyFile` may be absolute or  relative to the current directory, and the assembly is loaded into the domain of the caller.</span></span>  
  
 <span data-ttu-id="9ab64-1029">Módulos (assemblies) pode ser carregado em um dos três contextos, ou pode ser carregado sem contexto:</span><span class="sxs-lookup"><span data-stu-id="9ab64-1029">Assemblies can be loaded into one of three contexts, or can be loaded without context:</span></span>  
  
-   <span data-ttu-id="9ab64-1030">O contexto de carregamento contém assemblies encontrados pela sondagem: no GAC, em um assembly de host armazenar se o tempo de execução está hospedado, ou no <xref:System.AppDomainSetup.ApplicationBase%2A> e <xref:System.AppDomainSetup.PrivateBinPath%2A> do domínio do aplicativo.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1030">The load context contains assemblies found by probing: in the GAC, in a host assembly store if the runtime is hosted, or in the <xref:System.AppDomainSetup.ApplicationBase%2A> and <xref:System.AppDomainSetup.PrivateBinPath%2A> of the application domain.</span></span> <span data-ttu-id="9ab64-1031">A maioria das sobrecargas do método <xref:System.Reflection.Assembly.Load%2A> carrega os assemblies nesse contexto.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1031">Most overloads of the <xref:System.Reflection.Assembly.Load%2A> method load assemblies into this context.</span></span>  
  
-   <span data-ttu-id="9ab64-1032">Contexto de carga contém os assemblies para os quais o usuário forneceu um caminho que não são incluído nos diretórios pesquisados por sondagem.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1032">The load-from context contains assemblies for which the user provided a path not included in the directories searched by probing.</span></span> <span data-ttu-id="9ab64-1033"><xref:System.Reflection.Assembly.LoadFrom%2A>, <xref:System.AppDomain.CreateInstanceFrom%2A> e <xref:System.AppDomain.ExecuteAssembly%2A> são exemplos de métodos que carregam pelo caminho.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1033"><xref:System.Reflection.Assembly.LoadFrom%2A>, <xref:System.AppDomain.CreateInstanceFrom%2A>, and <xref:System.AppDomain.ExecuteAssembly%2A> are examples of methods that load by path.</span></span>  
  
-   <span data-ttu-id="9ab64-1034">O contexto exclusivo de reflexão contém assemblies carregados com o <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A> e <xref:System.Reflection.Assembly.ReflectionOnlyLoadFrom%2A> métodos; código nesses contextos não podem ser executados.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1034">The reflection-only context contains assemblies loaded with the <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A> and <xref:System.Reflection.Assembly.ReflectionOnlyLoadFrom%2A> methods; code in these contexts cannot be executed.</span></span>  
  
-   <span data-ttu-id="9ab64-1035">Se o usuário gerado ou localizado o assembly, não é em qualquer contexto.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1035">If the user generated or found the assembly, it is not in any context.</span></span> <span data-ttu-id="9ab64-1036">Isso se aplica aos assemblies carregados usando sobrecargas do <xref:System.Reflection.Assembly.Load%2A> método que especificar uma matriz de bytes que contém um assembly e para transitórios assemblies dinâmicos criados com reflexão emitir e não são salvas em disco.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1036">This applies to assemblies loaded using overloads of the <xref:System.Reflection.Assembly.Load%2A> method that specify a byte array containing an assembly, and to transient dynamic assemblies created with reflection emit and not saved to disk.</span></span>  
  
 <span data-ttu-id="9ab64-1037">Contexto de carga permite que um assembly a ser carregado de um caminho não incluído na investigação e ainda permite que as dependências no caminho a ser localizado e carregado porque as informações de caminho são mantidas pelo contexto de.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1037">The load-from context allows an assembly to be loaded from a path not included in probing, and yet allows dependencies on that path to be found and loaded because the path information is maintained by the context.</span></span>  
  
 <span data-ttu-id="9ab64-1038">O <xref:System.Reflection.Assembly.LoadFrom%2A> método tem as seguintes desvantagens.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1038">The <xref:System.Reflection.Assembly.LoadFrom%2A> method has the following disadvantages.</span></span> <span data-ttu-id="9ab64-1039">Considere o uso de <xref:System.Reflection.Assembly.Load%2A> em seu lugar.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1039">Consider using <xref:System.Reflection.Assembly.Load%2A> instead.</span></span>  
  
-   <span data-ttu-id="9ab64-1040">Se um assembly com a mesma identidade já estiver carregado, <xref:System.Reflection.Assembly.LoadFrom%2A> retornará o assembly carregado, mesmo se um caminho diferente foi especificado.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1040">If an assembly with the same identity is already loaded, <xref:System.Reflection.Assembly.LoadFrom%2A> returns the loaded assembly even if a different path was specified.</span></span>  
  
-   <span data-ttu-id="9ab64-1041">Se um assembly é carregado com <xref:System.Reflection.Assembly.LoadFrom%2A>e posteriormente um assembly no contexto de carga tenta carregar o mesmo assembly por nome de exibição, a tentativa de carregamento falhará.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1041">If an assembly is loaded with <xref:System.Reflection.Assembly.LoadFrom%2A>, and later an assembly in the load context attempts to load the same assembly by display name, the load attempt fails.</span></span> <span data-ttu-id="9ab64-1042">Isso pode ocorrer quando um assembly é desserializado.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1042">This can occur when an assembly is deserialized.</span></span>  
  
-   <span data-ttu-id="9ab64-1043">Se um assembly é carregado com <xref:System.Reflection.Assembly.LoadFrom%2A>, e o caminho de investigação inclui um assembly com um local diferente, mas com a mesma identidade de um <xref:System.InvalidCastException>, <xref:System.MissingMethodException>, ou outro comportamento inesperado poderá ocorrer.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1043">If an assembly is loaded with <xref:System.Reflection.Assembly.LoadFrom%2A>, and the probing path includes an assembly with the same identity but a different location, an <xref:System.InvalidCastException>, <xref:System.MissingMethodException>, or other unexpected behavior can occur.</span></span>  
  
-   <span data-ttu-id="9ab64-1044"><xref:System.Reflection.Assembly.LoadFrom%2A> exige <xref:System.Security.Permissions.FileIOPermissionAccess.Read?displayProperty=nameWithType> e <xref:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery?displayProperty=nameWithType>, ou <xref:System.Net.WebPermission>, no caminho especificado.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1044"><xref:System.Reflection.Assembly.LoadFrom%2A> demands <xref:System.Security.Permissions.FileIOPermissionAccess.Read?displayProperty=nameWithType> and <xref:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery?displayProperty=nameWithType>, or <xref:System.Net.WebPermission>, on the specified path.</span></span>  
  
-   <span data-ttu-id="9ab64-1045">Se existir uma imagem nativa para `assemblyFile`, ele não é usado.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1045">If a native image exists for `assemblyFile`, it is not used.</span></span> <span data-ttu-id="9ab64-1046">O assembly não pode ser carregado como domínio neutro.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1046">The assembly cannot be loaded as domain neutral.</span></span>  
  
-   <span data-ttu-id="9ab64-1047">No .NET Framework versão 1.0 e 1.1, a diretiva não será aplicada.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1047">In the .NET Framework version 1.0 and 1.1, policy is not applied.</span></span>  
  
 <span data-ttu-id="9ab64-1048">Se determinadas permissões são concedidas ou não a um assembly é algo que se baseia na evidência.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1048">Whether certain permissions are granted or not granted to an assembly is based on evidence.</span></span> <span data-ttu-id="9ab64-1049">As regras para o assembly e a mesclagem de evidência de segurança são da seguinte maneira:</span><span class="sxs-lookup"><span data-stu-id="9ab64-1049">The rules for assembly and security evidence merging are as follows:</span></span>  
  
-   <span data-ttu-id="9ab64-1050">Quando você usa um <xref:System.Reflection.Assembly.LoadFrom%2A> método sem nenhum <xref:System.Security.Policy.Evidence> parâmetro, o assembly é carregado com a evidência que fornece o carregador.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1050">When you use a <xref:System.Reflection.Assembly.LoadFrom%2A> method with no <xref:System.Security.Policy.Evidence> parameter, the assembly is loaded with the evidence that the loader supplies.</span></span>  
  
-   <span data-ttu-id="9ab64-1051">Quando você usa um <xref:System.Reflection.Assembly.LoadFrom%2A> método com um <xref:System.Security.Policy.Evidence> parâmetros, partes de evidência são mesclados.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1051">When you use a <xref:System.Reflection.Assembly.LoadFrom%2A> method with an <xref:System.Security.Policy.Evidence> parameter, pieces of evidence are merged.</span></span> <span data-ttu-id="9ab64-1052">Partes de evidência fornecida como um argumento para o <xref:System.Reflection.Assembly.LoadFrom%2A> método substituir partes de evidência fornecida pelo carregador.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1052">Pieces of evidence supplied as an argument to the <xref:System.Reflection.Assembly.LoadFrom%2A> method supersede pieces of evidence supplied by the loader.</span></span>  
  
-   <span data-ttu-id="9ab64-1053">Se você chamar esse método mais de uma vez no mesmo assembly, mas com uma evidência diferente especificada, o common language runtime não gerará um <xref:System.IO.FileLoadException> a igualdade e a integridade das especificações evidência diferentes não podem ser determinada.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1053">If you call this method more than once on the same assembly but with a different evidence specified, the common language runtime does not throw a <xref:System.IO.FileLoadException> because the equality and integrity of the different evidence specifications cannot be determined.</span></span> <span data-ttu-id="9ab64-1054">A evidência que primeiro é bem-sucedida é a evidência que será usada.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1054">The evidence that first succeeds is the evidence that is used.</span></span>  
  
-   <span data-ttu-id="9ab64-1055">Quando você usa um <xref:System.Reflection.Assembly.LoadFrom%2A> método com um `Byte[]` parâmetro para carregar uma objeto arquivo formato COFF imagem comum, evidência é combinado.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1055">When you use a <xref:System.Reflection.Assembly.LoadFrom%2A> method with a `Byte[]` parameter to load a common object file format (COFF) image, evidence is combined.</span></span> <span data-ttu-id="9ab64-1056">`Zone`, `Url` e `Site` são herdadas do assembly de chamada, e `Hash` e `StrongName` são obtidos do assembly COFF.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1056">`Zone`, `Url` and `Site` are inherited from the calling assembly, and `Hash` and `StrongName` are taken from the COFF assembly.</span></span>  
  
-   <span data-ttu-id="9ab64-1057">Quando você usa um <xref:System.Reflection.Assembly.LoadFrom%2A> método com um `Byte[]` parâmetro e <xref:System.Security.Policy.Evidence> para carregar uma imagem COFF, somente a evidência fornecida é usada.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1057">When you use a <xref:System.Reflection.Assembly.LoadFrom%2A> method with a `Byte[]` parameter and <xref:System.Security.Policy.Evidence> to load a COFF image, only the supplied evidence is used.</span></span> <span data-ttu-id="9ab64-1058">Evidência de assembly de chamada e evidência da imagem COFF são ignorados.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1058">Evidence of the calling assembly and evidence of the COFF image is ignored.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9ab64-1059">
            <paramref name="assemblyFile" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1059">
              <paramref name="assemblyFile" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="9ab64-1060">
            <paramref name="assemblyFile" /> não foi encontrado, ou o módulo que você está tentando carregar não especifica uma extensão de nome de arquivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1060">
              <paramref name="assemblyFile" /> is not found, or the module you are trying to load does not specify a filename extension.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="9ab64-1061">Não foi possível carregar um arquivo que foi encontrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1061">A file that was found could not be loaded.</span>
          </span>
          <span data-ttu-id="9ab64-1062">-ou-  O <paramref name="securityEvidence" /> não é ambíguo e é determinado como inválido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1062">-or-  The <paramref name="securityEvidence" /> is not ambiguous and is determined to be invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="9ab64-1063">
            <paramref name="assemblyFile" /> não é um assembly válido; por exemplo, um assembly de 32 bits em um processo de 64 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1063">
              <paramref name="assemblyFile" /> is not a valid assembly; for example, a 32-bit assembly in a 64-bit process.</span>
          </span>
          <span data-ttu-id="9ab64-1064">Consulte o tópico de exceção para obter mais informações.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1064">See the exception topic for more information.</span>
          </span>
          <span data-ttu-id="9ab64-1065">-ou-  A versão 2.0 ou posterior do Common Language Runtime está carregada atualmente e o <paramref name="assemblyFile" /> foi compilado com uma versão posterior.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1065">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyFile" /> was compiled with a later version.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="9ab64-1066">Uma base de código que não é iniciada com “file://” foi especificada sem o <see cref="T:System.Net.WebPermission" /> necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1066">A codebase that does not start with "file://" was specified without the required <see cref="T:System.Net.WebPermission" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9ab64-1067">O parâmetro <paramref name="assemblyFile" /> é uma cadeia de caracteres vazia ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1067">The <paramref name="assemblyFile" /> parameter is an empty string ("").</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="9ab64-1068">O nome do assembly excede o tamanho máximo definido pelo sistema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1068">The assembly name exceeds the system-defined maximum length.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="9ab64-1069">para carregar um assembly com evidências.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1069">to load an assembly with evidence.</span>
          </span>
          <span data-ttu-id="9ab64-1070">Enumeração associada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1070">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="9ab64-1071">para ler um URI que começa com "file://".</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1071">for reading a URI that begins with "file://".</span>
          </span>
          <span data-ttu-id="9ab64-1072">Enumeração associada: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1072">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          </span>
        </permission>
        <permission cref="T:System.Net.WebPermission">
          <span data-ttu-id="9ab64-1073">para ler um URI que não começa com "file://".</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1073">for reading a URI that does not begin with "file://".</span>
          </span>
        </permission>
        <altmember cref="T:System.Security.Policy.Evidence" />
      </Docs>
    </Member>
    <Member MemberName="LoadFrom">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly LoadFrom (string assemblyFile, byte[] hashValue, System.Configuration.Assemblies.AssemblyHashAlgorithm hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly LoadFrom(string assemblyFile, unsigned int8[] hashValue, valuetype System.Configuration.Assemblies.AssemblyHashAlgorithm hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.LoadFrom(System.String,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LoadFrom (assemblyFile As String, hashValue As Byte(), hashAlgorithm As AssemblyHashAlgorithm) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ LoadFrom(System::String ^ assemblyFile, cli::array &lt;System::Byte&gt; ^ hashValue, System::Configuration::Assemblies::AssemblyHashAlgorithm hashAlgorithm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFile" Type="System.String" />
        <Parameter Name="hashValue" Type="System.Byte[]" />
        <Parameter Name="hashAlgorithm" Type="System.Configuration.Assemblies.AssemblyHashAlgorithm" />
      </Parameters>
      <Docs>
        <param name="assemblyFile">
          <span data-ttu-id="9ab64-1074">O nome ou o caminho do arquivo que contém o manifesto do assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1074">The name or path of the file that contains the manifest of the assembly.</span>
          </span>
        </param>
        <param name="hashValue">
          <span data-ttu-id="9ab64-1075">O valor do código hash calculado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1075">The value of the computed hash code.</span>
          </span>
        </param>
        <param name="hashAlgorithm">
          <span data-ttu-id="9ab64-1076">O algoritmo de hash usado para arquivos de hash e para gerar o nome forte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1076">The hash algorithm used for hashing files and for generating the strong name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9ab64-1077">Carrega um assembly de acordo com o nome de arquivo ou caminho, valor e algoritmo de hash.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1077">Loads an assembly given its file name or path, hash value, and hash algorithm.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9ab64-1078">O assembly carregado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1078">The loaded assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ab64-1079">O `assemblyFile` parâmetro deve se referir a um URI sem caracteres de escape.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1079">The `assemblyFile` parameter must refer to a URI without escape characters.</span></span> <span data-ttu-id="9ab64-1080">Esse método fornece caracteres de escape para todos os caracteres inválidos no URI.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1080">This method supplies escape characters for all invalid characters in the URI.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9ab64-1081">Não há suporte para o protocolo de transferência de arquivo (FTP).</span><span class="sxs-lookup"><span data-stu-id="9ab64-1081">File transfer protocol (FTP) is not supported.</span></span> <span data-ttu-id="9ab64-1082">Se o URI fornecido para `assemblyFile` é um endereço FTP, o assembly não está carregado.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1082">If the URI supplied for `assemblyFile` is an FTP address, the assembly is not loaded.</span></span> <span data-ttu-id="9ab64-1083">Nenhuma exceção é lançada.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1083">No exception is thrown.</span></span>  
  
 <span data-ttu-id="9ab64-1084">`assemblyFile` pode ser absoluto ou relativo para o diretório atual, e o assembly é carregado para o domínio do chamador.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1084">`assemblyFile` may be absolute or relative to the current directory, and the assembly is loaded into the domain of the caller.</span></span>  
  
 <span data-ttu-id="9ab64-1085">Módulos (assemblies) pode ser carregado em um dos três contextos, ou pode ser carregado sem contexto:</span><span class="sxs-lookup"><span data-stu-id="9ab64-1085">Assemblies can be loaded into one of three contexts, or can be loaded without context:</span></span>  
  
-   <span data-ttu-id="9ab64-1086">O contexto de carregamento contém assemblies encontrados pela sondagem: no cache de assembly global, em um assembly de host armazenar se o tempo de execução está hospedado, ou no <xref:System.AppDomainSetup.ApplicationBase%2A> e <xref:System.AppDomainSetup.PrivateBinPath%2A> do domínio do aplicativo.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1086">The load context contains assemblies found by probing: in the global assembly cache, in a host assembly store if the runtime is hosted, or in the <xref:System.AppDomainSetup.ApplicationBase%2A> and <xref:System.AppDomainSetup.PrivateBinPath%2A> of the application domain.</span></span> <span data-ttu-id="9ab64-1087">A maioria das sobrecargas do método <xref:System.Reflection.Assembly.Load%2A> carrega os assemblies nesse contexto.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1087">Most overloads of the <xref:System.Reflection.Assembly.Load%2A> method load assemblies into this context.</span></span>  
  
-   <span data-ttu-id="9ab64-1088">Contexto de carga contém os assemblies para os quais o usuário forneceu um caminho que não está incluído no probing.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1088">The load-from context contains assemblies for which the user provided a path that is not included in probing.</span></span> <span data-ttu-id="9ab64-1089"><xref:System.Reflection.Assembly.LoadFrom%2A>, <xref:System.AppDomain.CreateInstanceFrom%2A> e <xref:System.AppDomain.ExecuteAssembly%2A> são exemplos de métodos que carregam pelo caminho.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1089"><xref:System.Reflection.Assembly.LoadFrom%2A>, <xref:System.AppDomain.CreateInstanceFrom%2A>, and <xref:System.AppDomain.ExecuteAssembly%2A> are examples of methods that load by path.</span></span>  
  
-   <span data-ttu-id="9ab64-1090">O contexto exclusivo de reflexão contém assemblies carregados com o <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A> e <xref:System.Reflection.Assembly.ReflectionOnlyLoadFrom%2A> métodos; código nesses contextos não podem ser executados.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1090">The reflection-only context contains assemblies loaded with the <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A> and <xref:System.Reflection.Assembly.ReflectionOnlyLoadFrom%2A> methods; code in these contexts cannot be executed.</span></span>  
  
-   <span data-ttu-id="9ab64-1091">Se o usuário gerado ou localizado o assembly, não é em qualquer contexto.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1091">If the user generated or found the assembly, it is not in any context.</span></span> <span data-ttu-id="9ab64-1092">Isso se aplica aos assemblies carregados usando sobrecargas do <xref:System.Reflection.Assembly.Load%2A> método que especificar uma matriz de bytes que contém um assembly e para transitórios assemblies dinâmicos criados com reflexão emitir e não são salvas em disco.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1092">This applies to assemblies loaded using overloads of the <xref:System.Reflection.Assembly.Load%2A> method that specify a byte array containing an assembly, and to transient dynamic assemblies created with reflection emit and not saved to disk.</span></span>  
  
 <span data-ttu-id="9ab64-1093">Contexto de carga permite que um assembly a ser carregado de um caminho que não está incluído no probing e ainda permite que as dependências no caminho a ser localizado e carregado porque as informações de caminho são mantidas pelo contexto de.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1093">The load-from context allows an assembly to be loaded from a path that is not included in probing, and yet allows dependencies on that path to be found and loaded because the path information is maintained by the context.</span></span>  
  
 <span data-ttu-id="9ab64-1094">O <xref:System.Reflection.Assembly.LoadFrom%2A> método tem as seguintes desvantagens.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1094">The <xref:System.Reflection.Assembly.LoadFrom%2A> method has the following disadvantages.</span></span> <span data-ttu-id="9ab64-1095">Considere o uso de <xref:System.Reflection.Assembly.Load%2A> em seu lugar.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1095">Consider using <xref:System.Reflection.Assembly.Load%2A> instead.</span></span>  
  
-   <span data-ttu-id="9ab64-1096">Se um assembly com a mesma identidade já estiver carregado, <xref:System.Reflection.Assembly.LoadFrom%2A> retornará o assembly carregado, mesmo se um caminho diferente foi especificado.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1096">If an assembly with the same identity is already loaded, <xref:System.Reflection.Assembly.LoadFrom%2A> returns the loaded assembly even if a different path was specified.</span></span>  
  
-   <span data-ttu-id="9ab64-1097">Se um assembly é carregado com <xref:System.Reflection.Assembly.LoadFrom%2A>e posteriormente um assembly no contexto de carga tenta carregar o mesmo assembly por nome de exibição, a tentativa de carregamento falhará.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1097">If an assembly is loaded with <xref:System.Reflection.Assembly.LoadFrom%2A>, and later an assembly in the load context attempts to load the same assembly by display name, the load attempt fails.</span></span> <span data-ttu-id="9ab64-1098">Isso pode ocorrer quando um assembly é desserializado.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1098">This can occur when an assembly is deserialized.</span></span>  
  
-   <span data-ttu-id="9ab64-1099">Se um assembly é carregado com <xref:System.Reflection.Assembly.LoadFrom%2A>, e o caminho de investigação inclui um assembly com um local diferente, mas com a mesma identidade de um <xref:System.InvalidCastException>, <xref:System.MissingMethodException>, ou outro comportamento inesperado poderá ocorrer.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1099">If an assembly is loaded with <xref:System.Reflection.Assembly.LoadFrom%2A>, and the probing path includes an assembly with the same identity but a different location, an <xref:System.InvalidCastException>, <xref:System.MissingMethodException>, or other unexpected behavior can occur.</span></span>  
  
-   <span data-ttu-id="9ab64-1100"><xref:System.Reflection.Assembly.LoadFrom%2A> exige <xref:System.Security.Permissions.FileIOPermissionAccess.Read?displayProperty=nameWithType> e <xref:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery?displayProperty=nameWithType>, ou <xref:System.Net.WebPermission>, no caminho especificado.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1100"><xref:System.Reflection.Assembly.LoadFrom%2A> demands <xref:System.Security.Permissions.FileIOPermissionAccess.Read?displayProperty=nameWithType> and <xref:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery?displayProperty=nameWithType>, or <xref:System.Net.WebPermission>, on the specified path.</span></span>  
  
-   <span data-ttu-id="9ab64-1101">Se existir uma imagem nativa para `assemblyFile`, ele não é usado.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1101">If a native image exists for `assemblyFile`, it is not used.</span></span> <span data-ttu-id="9ab64-1102">O assembly não pode ser carregado como de domínio neutro.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1102">The assembly cannot be loaded as domain-neutral.</span></span>  
  
 <span data-ttu-id="9ab64-1103">O assembly é carregado com a evidência que fornece o carregador.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1103">The assembly is loaded with the evidence that the loader supplies.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9ab64-1104">
            <paramref name="assemblyFile" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1104">
              <paramref name="assemblyFile" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="9ab64-1105">
            <paramref name="assemblyFile" /> não foi encontrado ou o módulo que você está tentando carregar não especifica uma extensão de nome de arquivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1105">
              <paramref name="assemblyFile" /> is not found, or the module you are trying to load does not specify a file name extension.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="9ab64-1106">Não foi possível carregar um arquivo que foi encontrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1106">A file that was found could not be loaded.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="9ab64-1107">
            <paramref name="assemblyFile" /> não é um assembly válido; por exemplo, um assembly de 32 bits em um processo de 64 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1107">
              <paramref name="assemblyFile" /> is not a valid assembly; for example, a 32-bit assembly in a 64-bit process.</span>
          </span>
          <span data-ttu-id="9ab64-1108">Consulte o tópico de exceção para obter mais informações.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1108">See the exception topic for more information.</span>
          </span>
          <span data-ttu-id="9ab64-1109">-ou-  <paramref name="assemblyFile" /> foi compilado com uma versão do Common Language Runtime posterior àquela carregada atualmente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1109">-or-  <paramref name="assemblyFile" /> was compiled with a later version of the common language runtime than the version that is currently loaded.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="9ab64-1110">Uma base de código que não é iniciada com “file://” foi especificada sem o <see cref="T:System.Net.WebPermission" /> necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1110">A codebase that does not start with "file://" was specified without the required <see cref="T:System.Net.WebPermission" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9ab64-1111">O parâmetro <paramref name="assemblyFile" /> é uma cadeia de caracteres vazia ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1111">The <paramref name="assemblyFile" /> parameter is an empty string ("").</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="9ab64-1112">O nome do assembly excede o tamanho máximo definido pelo sistema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1112">The assembly name exceeds the system-defined maximum length.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="9ab64-1113">para carregar um assembly com evidências.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1113">to load an assembly with evidence.</span>
          </span>
          <span data-ttu-id="9ab64-1114">Enumeração associada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1114">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="9ab64-1115">para ler um URI que começa com "file://".</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1115">for reading a URI that begins with "file://".</span>
          </span>
          <span data-ttu-id="9ab64-1116">Enumeração associada: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1116">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          </span>
        </permission>
        <permission cref="T:System.Net.WebPermission">
          <span data-ttu-id="9ab64-1117">para ler um URI que não começa com "file://".</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1117">for reading a URI that does not begin with "file://".</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="LoadFrom">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly LoadFrom (string assemblyFile, System.Security.Policy.Evidence securityEvidence, byte[] hashValue, System.Configuration.Assemblies.AssemblyHashAlgorithm hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly LoadFrom(string assemblyFile, class System.Security.Policy.Evidence securityEvidence, unsigned int8[] hashValue, valuetype System.Configuration.Assemblies.AssemblyHashAlgorithm hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.LoadFrom(System.String,System.Security.Policy.Evidence,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LoadFrom (assemblyFile As String, securityEvidence As Evidence, hashValue As Byte(), hashAlgorithm As AssemblyHashAlgorithm) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ LoadFrom(System::String ^ assemblyFile, System::Security::Policy::Evidence ^ securityEvidence, cli::array &lt;System::Byte&gt; ^ hashValue, System::Configuration::Assemblies::AssemblyHashAlgorithm hashAlgorithm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFile" Type="System.String" />
        <Parameter Name="securityEvidence" Type="System.Security.Policy.Evidence" />
        <Parameter Name="hashValue" Type="System.Byte[]" />
        <Parameter Name="hashAlgorithm" Type="System.Configuration.Assemblies.AssemblyHashAlgorithm" />
      </Parameters>
      <Docs>
        <param name="assemblyFile">
          <span data-ttu-id="9ab64-1118">O nome ou o caminho do arquivo que contém o manifesto do assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1118">The name or path of the file that contains the manifest of the assembly.</span>
          </span>
        </param>
        <param name="securityEvidence">
          <span data-ttu-id="9ab64-1119">Evidência para carregar o assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1119">Evidence for loading the assembly.</span>
          </span>
        </param>
        <param name="hashValue">
          <span data-ttu-id="9ab64-1120">O valor do código hash calculado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1120">The value of the computed hash code.</span>
          </span>
        </param>
        <param name="hashAlgorithm">
          <span data-ttu-id="9ab64-1121">O algoritmo de hash usado para arquivos de hash e para gerar o nome forte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1121">The hash algorithm used for hashing files and for generating the strong name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9ab64-1122">Carrega um assembly considerando seu nome de arquivo ou caminho, sua evidência de segurança, seu valor de hash e seu algoritmo de hash.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1122">Loads an assembly given its file name or path, security evidence, hash value, and hash algorithm.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9ab64-1123">O assembly carregado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1123">The loaded assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ab64-1124">O `assemblyFile` parâmetro deve se referir a um URI sem caracteres de escape.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1124">The `assemblyFile` parameter must refer to a URI without escape characters.</span></span> <span data-ttu-id="9ab64-1125">Esse método fornece caracteres de escape para todos os caracteres inválidos no URI.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1125">This method supplies escape characters for all invalid characters in the URI.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9ab64-1126">Não há suporte para o protocolo de transferência de arquivo (FTP).</span><span class="sxs-lookup"><span data-stu-id="9ab64-1126">File transfer protocol (FTP) is not supported.</span></span> <span data-ttu-id="9ab64-1127">Se o URI fornecido para `assemblyFile` é um endereço FTP, o assembly não está carregado.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1127">If the URI supplied for `assemblyFile` is an FTP address, the assembly is not loaded.</span></span> <span data-ttu-id="9ab64-1128">Nenhuma exceção é lançada.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1128">No exception is thrown.</span></span>  
  
 <span data-ttu-id="9ab64-1129">`assemblyFile` pode ser absoluto ou relativo para o diretório atual, e o assembly é carregado para o domínio do chamador.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1129">`assemblyFile` may be absolute or relative to the current directory, and the assembly is loaded into the domain of the caller.</span></span>  
  
 <span data-ttu-id="9ab64-1130">Módulos (assemblies) pode ser carregado em um dos três contextos, ou pode ser carregado sem contexto:</span><span class="sxs-lookup"><span data-stu-id="9ab64-1130">Assemblies can be loaded into one of three contexts, or can be loaded without context:</span></span>  
  
-   <span data-ttu-id="9ab64-1131">O contexto de carregamento contém assemblies encontrados pela sondagem: no GAC, em um assembly de host armazenar se o tempo de execução está hospedado, ou no <xref:System.AppDomainSetup.ApplicationBase%2A> e <xref:System.AppDomainSetup.PrivateBinPath%2A> do domínio do aplicativo.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1131">The load context contains assemblies found by probing: in the GAC, in a host assembly store if the runtime is hosted, or in the <xref:System.AppDomainSetup.ApplicationBase%2A> and <xref:System.AppDomainSetup.PrivateBinPath%2A> of the application domain.</span></span> <span data-ttu-id="9ab64-1132">A maioria das sobrecargas do método <xref:System.Reflection.Assembly.Load%2A> carrega os assemblies nesse contexto.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1132">Most overloads of the <xref:System.Reflection.Assembly.Load%2A> method load assemblies into this context.</span></span>  
  
-   <span data-ttu-id="9ab64-1133">Contexto de carga contém os assemblies para os quais o usuário forneceu um caminho que não são incluído nos diretórios pesquisados por sondagem.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1133">The load-from context contains assemblies for which the user provided a path not included in the directories searched by probing.</span></span> <span data-ttu-id="9ab64-1134"><xref:System.Reflection.Assembly.LoadFrom%2A>, <xref:System.AppDomain.CreateInstanceFrom%2A> e <xref:System.AppDomain.ExecuteAssembly%2A> são exemplos de métodos que carregam pelo caminho.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1134"><xref:System.Reflection.Assembly.LoadFrom%2A>, <xref:System.AppDomain.CreateInstanceFrom%2A>, and <xref:System.AppDomain.ExecuteAssembly%2A> are examples of methods that load by path.</span></span>  
  
-   <span data-ttu-id="9ab64-1135">O contexto exclusivo de reflexão contém assemblies carregados com o <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A> e <xref:System.Reflection.Assembly.ReflectionOnlyLoadFrom%2A> métodos; código nesses contextos não podem ser executados.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1135">The reflection-only context contains assemblies loaded with the <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A> and <xref:System.Reflection.Assembly.ReflectionOnlyLoadFrom%2A> methods; code in these contexts cannot be executed.</span></span>  
  
-   <span data-ttu-id="9ab64-1136">Se o usuário gerado ou localizado o assembly, não é em qualquer contexto.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1136">If the user generated or found the assembly, it is not in any context.</span></span> <span data-ttu-id="9ab64-1137">Isso se aplica aos assemblies carregados usando sobrecargas do <xref:System.Reflection.Assembly.Load%2A> método que especificar uma matriz de bytes que contém um assembly e para transitórios assemblies dinâmicos criados com reflexão emitir e não são salvas em disco.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1137">This applies to assemblies loaded using overloads of the <xref:System.Reflection.Assembly.Load%2A> method that specify a byte array containing an assembly, and to transient dynamic assemblies created with reflection emit and not saved to disk.</span></span>  
  
 <span data-ttu-id="9ab64-1138">Contexto de carga permite que um assembly a ser carregado de um caminho não incluído na investigação e ainda permite que as dependências no caminho a ser localizado e carregado porque as informações de caminho são mantidas pelo contexto de.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1138">The load-from context allows an assembly to be loaded from a path not included in probing, and yet allows dependencies on that path to be found and loaded because the path information is maintained by the context.</span></span>  
  
 <span data-ttu-id="9ab64-1139">O <xref:System.Reflection.Assembly.LoadFrom%2A> método tem as seguintes desvantagens.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1139">The <xref:System.Reflection.Assembly.LoadFrom%2A> method has the following disadvantages.</span></span> <span data-ttu-id="9ab64-1140">Considere o uso de <xref:System.Reflection.Assembly.Load%2A> em seu lugar.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1140">Consider using <xref:System.Reflection.Assembly.Load%2A> instead.</span></span>  
  
-   <span data-ttu-id="9ab64-1141">Se um assembly com a mesma identidade já estiver carregado, <xref:System.Reflection.Assembly.LoadFrom%2A> retornará o assembly carregado, mesmo se um caminho diferente foi especificado.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1141">If an assembly with the same identity is already loaded, <xref:System.Reflection.Assembly.LoadFrom%2A> returns the loaded assembly even if a different path was specified.</span></span>  
  
-   <span data-ttu-id="9ab64-1142">Se um assembly é carregado com <xref:System.Reflection.Assembly.LoadFrom%2A>e posteriormente um assembly no contexto de carga tenta carregar o mesmo assembly por nome de exibição, a tentativa de carregamento falhará.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1142">If an assembly is loaded with <xref:System.Reflection.Assembly.LoadFrom%2A>, and later an assembly in the load context attempts to load the same assembly by display name, the load attempt fails.</span></span> <span data-ttu-id="9ab64-1143">Isso pode ocorrer quando um assembly é desserializado.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1143">This can occur when an assembly is deserialized.</span></span>  
  
-   <span data-ttu-id="9ab64-1144">Se um assembly é carregado com <xref:System.Reflection.Assembly.LoadFrom%2A>, e o caminho de investigação inclui um assembly com um local diferente, mas com a mesma identidade de um <xref:System.InvalidCastException>, <xref:System.MissingMethodException>, ou outro comportamento inesperado poderá ocorrer.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1144">If an assembly is loaded with <xref:System.Reflection.Assembly.LoadFrom%2A>, and the probing path includes an assembly with the same identity but a different location, an <xref:System.InvalidCastException>, <xref:System.MissingMethodException>, or other unexpected behavior can occur.</span></span>  
  
-   <span data-ttu-id="9ab64-1145"><xref:System.Reflection.Assembly.LoadFrom%2A> exige <xref:System.Security.Permissions.FileIOPermissionAccess.Read?displayProperty=nameWithType> e <xref:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery?displayProperty=nameWithType>, ou <xref:System.Net.WebPermission>, no caminho especificado.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1145"><xref:System.Reflection.Assembly.LoadFrom%2A> demands <xref:System.Security.Permissions.FileIOPermissionAccess.Read?displayProperty=nameWithType> and <xref:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery?displayProperty=nameWithType>, or <xref:System.Net.WebPermission>, on the specified path.</span></span>  
  
-   <span data-ttu-id="9ab64-1146">Se existir uma imagem nativa para `assemblyFile`, ele não é usado.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1146">If a native image exists for `assemblyFile`, it is not used.</span></span> <span data-ttu-id="9ab64-1147">O assembly não pode ser carregado como domínio neutro.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1147">The assembly cannot be loaded as domain neutral.</span></span>  
  
-   <span data-ttu-id="9ab64-1148">No .NET Framework versão 1.0 e 1.1, a diretiva não será aplicada.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1148">In the .NET Framework version 1.0 and 1.1, policy is not applied.</span></span>  
  
 <span data-ttu-id="9ab64-1149">Se determinadas permissões são concedidas ou não a um assembly é algo que se baseia na evidência.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1149">Whether certain permissions are granted or not granted to an assembly is based on evidence.</span></span> <span data-ttu-id="9ab64-1150">As regras para o assembly e a mesclagem de evidência de segurança são da seguinte maneira:</span><span class="sxs-lookup"><span data-stu-id="9ab64-1150">The rules for assembly and security evidence merging are as follows:</span></span>  
  
-   <span data-ttu-id="9ab64-1151">Quando você usa um <xref:System.Reflection.Assembly.LoadFrom%2A> método sem nenhum <xref:System.Security.Policy.Evidence> parâmetro, o assembly é carregado com a evidência que fornece o carregador.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1151">When you use a <xref:System.Reflection.Assembly.LoadFrom%2A> method with no <xref:System.Security.Policy.Evidence> parameter, the assembly is loaded with the evidence that the loader supplies.</span></span>  
  
-   <span data-ttu-id="9ab64-1152">Quando você usa um <xref:System.Reflection.Assembly.LoadFrom%2A> método com um <xref:System.Security.Policy.Evidence> parâmetros, partes de evidência são mesclados.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1152">When you use a <xref:System.Reflection.Assembly.LoadFrom%2A> method with an <xref:System.Security.Policy.Evidence> parameter, pieces of evidence are merged.</span></span> <span data-ttu-id="9ab64-1153">Partes de evidência fornecida como um argumento para o <xref:System.Reflection.Assembly.LoadFrom%2A> método substituir partes de evidência fornecida pelo carregador.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1153">Pieces of evidence supplied as an argument to the <xref:System.Reflection.Assembly.LoadFrom%2A> method supersede pieces of evidence supplied by the loader.</span></span>  
  
-   <span data-ttu-id="9ab64-1154">Se você chamar esse método mais de uma vez no mesmo assembly, mas com uma evidência diferente especificada, o common language runtime não gerará um <xref:System.IO.FileLoadException> a igualdade e a integridade das especificações evidência diferentes não podem ser determinada.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1154">If you call this method more than once on the same assembly but with a different evidence specified, the common language runtime does not throw a <xref:System.IO.FileLoadException> because the equality and integrity of the different evidence specifications cannot be determined.</span></span> <span data-ttu-id="9ab64-1155">A evidência que primeiro é bem-sucedida é a evidência que será usada.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1155">The evidence that first succeeds is the evidence that is used.</span></span>  
  
-   <span data-ttu-id="9ab64-1156">Quando você usa um <xref:System.Reflection.Assembly.LoadFrom%2A> método com um `Byte[]` parâmetro para carregar uma objeto arquivo formato COFF imagem comum, evidência é combinado.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1156">When you use a <xref:System.Reflection.Assembly.LoadFrom%2A> method with a `Byte[]` parameter to load a common object file format (COFF) image, evidence is combined.</span></span> <span data-ttu-id="9ab64-1157">`Zone`, `Url` e `Site` são herdadas do assembly de chamada, e `Hash` e `StrongName` são obtidos do assembly COFF.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1157">`Zone`, `Url` and `Site` are inherited from the calling assembly, and `Hash` and `StrongName` are taken from the COFF assembly.</span></span>  
  
-   <span data-ttu-id="9ab64-1158">Quando você usa um <xref:System.Reflection.Assembly.LoadFrom%2A> método com um `Byte[]` parâmetro e <xref:System.Security.Policy.Evidence> para carregar uma imagem COFF, somente a evidência fornecida é usada.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1158">When you use a <xref:System.Reflection.Assembly.LoadFrom%2A> method with a `Byte[]` parameter and <xref:System.Security.Policy.Evidence> to load a COFF image, only the supplied evidence is used.</span></span> <span data-ttu-id="9ab64-1159">Evidência de assembly de chamada e evidência da imagem COFF são ignorados.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1159">Evidence of the calling assembly and evidence of the COFF image is ignored.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9ab64-1160">
            <paramref name="assemblyFile" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1160">
              <paramref name="assemblyFile" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="9ab64-1161">
            <paramref name="assemblyFile" /> não foi encontrado, ou o módulo que você está tentando carregar não especifica uma extensão de nome de arquivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1161">
              <paramref name="assemblyFile" /> is not found, or the module you are trying to load does not specify a filename extension.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="9ab64-1162">Não foi possível carregar um arquivo que foi encontrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1162">A file that was found could not be loaded.</span>
          </span>
          <span data-ttu-id="9ab64-1163">-ou-  O <paramref name="securityEvidence" /> não é ambíguo e é determinado como inválido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1163">-or-  The <paramref name="securityEvidence" /> is not ambiguous and is determined to be invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="9ab64-1164">
            <paramref name="assemblyFile" /> não é um assembly válido; por exemplo, um assembly de 32 bits em um processo de 64 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1164">
              <paramref name="assemblyFile" /> is not a valid assembly; for example, a 32-bit assembly in a 64-bit process.</span>
          </span>
          <span data-ttu-id="9ab64-1165">Consulte o tópico de exceção para obter mais informações.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1165">See the exception topic for more information.</span>
          </span>
          <span data-ttu-id="9ab64-1166">-ou-  A versão 2.0 ou posterior do Common Language Runtime está carregada atualmente e o <paramref name="assemblyFile" /> foi compilado com uma versão posterior.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1166">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyFile" /> was compiled with a later version.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="9ab64-1167">Uma base de código que não é iniciada com “file://” foi especificada sem o <see cref="T:System.Net.WebPermission" /> necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1167">A codebase that does not start with "file://" was specified without the required <see cref="T:System.Net.WebPermission" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9ab64-1168">O parâmetro <paramref name="assemblyFile" /> é uma cadeia de caracteres vazia ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1168">The <paramref name="assemblyFile" /> parameter is an empty string ("").</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="9ab64-1169">O nome do assembly excede o tamanho máximo definido pelo sistema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1169">The assembly name exceeds the system-defined maximum length.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="9ab64-1170">para carregar um assembly com evidências.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1170">to load an assembly with evidence.</span>
          </span>
          <span data-ttu-id="9ab64-1171">Enumeração associada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1171">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="9ab64-1172">para ler um URI que começa com "file://".</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1172">for reading a URI that begins with "file://".</span>
          </span>
          <span data-ttu-id="9ab64-1173">Enumeração associada: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1173">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          </span>
        </permission>
        <permission cref="T:System.Net.WebPermission">
          <span data-ttu-id="9ab64-1174">para ler um URI que não começa com "file://".</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1174">for reading a URI that does not begin with "file://".</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="LoadModule">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9ab64-1175">Carrega o módulo interno para este assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1175">Loads the module internal to this assembly.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LoadModule">
      <MemberSignature Language="C#" Value="public System.Reflection.Module LoadModule (string moduleName, byte[] rawModule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Module LoadModule(string moduleName, unsigned int8[] rawModule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.LoadModule(System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadModule (moduleName As String, rawModule As Byte()) As Module" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::Module ^ LoadModule(System::String ^ moduleName, cli::array &lt;System::Byte&gt; ^ rawModule);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.LoadModule(System.String,System.Byte[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="moduleName" Type="System.String" />
        <Parameter Name="rawModule" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="moduleName">
          <span data-ttu-id="9ab64-1176">O nome do módulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1176">The name of the module.</span>
          </span>
          <span data-ttu-id="9ab64-1177">Essa cadeia de caracteres deve corresponder a um nome de arquivo no manifesto deste assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1177">This string must correspond to a file name in this assembly's manifest.</span>
          </span>
        </param>
        <param name="rawModule">
          <span data-ttu-id="9ab64-1178">Uma matriz de bytes que é uma imagem baseada em COFF que contém módulo omitido ou um recurso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1178">A byte array that is a COFF-based image containing an emitted module, or a resource.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9ab64-1179">Carrega o módulo, interno a esse assembly, com uma imagem baseada no formato COFF que contém um módulo emitido ou um arquivo de recurso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1179">Loads the module, internal to this assembly, with a common object file format (COFF)-based image containing an emitted module, or a resource file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9ab64-1180">O módulo carregado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1180">The loaded module.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9ab64-1181">
            <paramref name="moduleName" /> ou <paramref name="rawModule" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1181">
              <paramref name="moduleName" /> or <paramref name="rawModule" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9ab64-1182">
            <paramref name="moduleName" /> não coincide com uma entrada de arquivo no manifesto deste assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1182">
              <paramref name="moduleName" /> does not match a file entry in this assembly's manifest.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="9ab64-1183">
            <paramref name="rawModule" /> não é um módulo válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1183">
              <paramref name="rawModule" /> is not a valid module.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="9ab64-1184">Não foi possível carregar um arquivo que foi encontrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1184">A file that was found could not be loaded.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="9ab64-1185">para fornecer evidência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1185">to provide evidence.</span>
          </span>
          <span data-ttu-id="9ab64-1186">Enumeração associada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1186">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="LoadModule">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.Module LoadModule (string moduleName, byte[] rawModule, byte[] rawSymbolStore);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Module LoadModule(string moduleName, unsigned int8[] rawModule, unsigned int8[] rawSymbolStore) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.LoadModule(System.String,System.Byte[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LoadModule (moduleName As String, rawModule As Byte(), rawSymbolStore As Byte()) As Module" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::Module ^ LoadModule(System::String ^ moduleName, cli::array &lt;System::Byte&gt; ^ rawModule, cli::array &lt;System::Byte&gt; ^ rawSymbolStore);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.LoadModule(System.String,System.Byte[],System.Byte[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="moduleName" Type="System.String" />
        <Parameter Name="rawModule" Type="System.Byte[]" />
        <Parameter Name="rawSymbolStore" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="moduleName">
          <span data-ttu-id="9ab64-1187">O nome do módulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1187">The name of the module.</span>
          </span>
          <span data-ttu-id="9ab64-1188">Essa cadeia de caracteres deve corresponder a um nome de arquivo no manifesto deste assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1188">This string must correspond to a file name in this assembly's manifest.</span>
          </span>
        </param>
        <param name="rawModule">
          <span data-ttu-id="9ab64-1189">Uma matriz de bytes que é uma imagem baseada em COFF que contém módulo omitido ou um recurso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1189">A byte array that is a COFF-based image containing an emitted module, or a resource.</span>
          </span>
        </param>
        <param name="rawSymbolStore">
          <span data-ttu-id="9ab64-1190">Uma matriz de bytes contendo os bytes brutos que representam os símbolos para o módulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1190">A byte array containing the raw bytes representing the symbols for the module.</span>
          </span>
          <span data-ttu-id="9ab64-1191">Deve ser <see langword="null" /> quando se trata de um arquivo de recurso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1191">Must be <see langword="null" /> if this is a resource file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9ab64-1192">Carrega o módulo, interno a esse assembly, com uma imagem baseada no formato COFF que contém um módulo emitido ou um arquivo de recurso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1192">Loads the module, internal to this assembly, with a common object file format (COFF)-based image containing an emitted module, or a resource file.</span>
          </span>
          <span data-ttu-id="9ab64-1193">Os bytes brutos que representam os símbolos para o módulo também são carregados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1193">The raw bytes representing the symbols for the module are also loaded.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9ab64-1194">O módulo carregado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1194">The loaded module.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9ab64-1195">
            <paramref name="moduleName" /> ou <paramref name="rawModule" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1195">
              <paramref name="moduleName" /> or <paramref name="rawModule" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9ab64-1196">
            <paramref name="moduleName" /> não coincide com uma entrada de arquivo no manifesto deste assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1196">
              <paramref name="moduleName" /> does not match a file entry in this assembly's manifest.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="9ab64-1197">
            <paramref name="rawModule" /> não é um módulo válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1197">
              <paramref name="rawModule" /> is not a valid module.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="9ab64-1198">Não foi possível carregar um arquivo que foi encontrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1198">A file that was found could not be loaded.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="9ab64-1199">para fornecer evidência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1199">to provide evidence.</span>
          </span>
          <span data-ttu-id="9ab64-1200">Enumeração associada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1200">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="LoadWithPartialName">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9ab64-1201">Carrega um assembly do diretório do aplicativo ou do cache de assembly global usando um nome parcial.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1201">Loads an assembly from the application directory or from the global assembly cache using a partial name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="9ab64-1202">As sobrecargas do <xref:System.Reflection.Assembly.LoadWithPartialName%2A?displayProperty=nameWithType> método estão obsoleto e foi mantido para compatibilidade com versões anteriores.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1202">The overloads of the <xref:System.Reflection.Assembly.LoadWithPartialName%2A?displayProperty=nameWithType> method are obsolete and have been retained for backward compatibility.</span></span> <span data-ttu-id="9ab64-1203">A alternativa não obsoleta é <xref:System.Reflection.Assembly.Load%28System.String%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1203">The non-obsolete alternative is <xref:System.Reflection.Assembly.Load%28System.String%29?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="LoadWithPartialName">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly LoadWithPartialName (string partialName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly LoadWithPartialName(string partialName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.LoadWithPartialName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LoadWithPartialName (partialName As String) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ LoadWithPartialName(System::String ^ partialName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partialName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="partialName">
          <span data-ttu-id="9ab64-1204">O nome para exibição do assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1204">The display name of the assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9ab64-1205">Carrega um assembly do diretório do aplicativo ou do cache de assembly global usando um nome parcial.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1205">Loads an assembly from the application directory or from the global assembly cache using a partial name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9ab64-1206">O assembly carregado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1206">The loaded assembly.</span>
          </span>
          <span data-ttu-id="9ab64-1207">Se <paramref name="partialName" /> não foi encontrado, este método retorn <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1207">If <paramref name="partialName" /> is not found, this method returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="9ab64-1208">O <xref:System.Reflection.Assembly.LoadWithPartialName%28System.String%29> método está obsoleto e foi mantido para compatibilidade com versões anteriores.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1208">The <xref:System.Reflection.Assembly.LoadWithPartialName%28System.String%29> method is obsolete and has been retained for backward compatibility.</span></span> <span data-ttu-id="9ab64-1209">A alternativa não obsoleta é <xref:System.Reflection.Assembly.Load%28System.String%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1209">The non-obsolete alternative is <xref:System.Reflection.Assembly.Load%28System.String%29?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="9ab64-1210">Aplicativos que carregar assemblies com esse método serão afetados por atualizações desses assemblies.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1210">Applications that load assemblies with this method will be affected by upgrades of those assemblies.</span></span> <span data-ttu-id="9ab64-1211">Portanto, não use esse método; recriar o aplicativo para usar o <xref:System.Reflection.Assembly.Load%28System.String%29> sobrecarga de método ou o <xref:System.Reflection.Assembly.LoadFrom%28System.String%29> sobrecarga do método.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1211">Therefore, do not use this method; redesign the application to use the <xref:System.Reflection.Assembly.Load%28System.String%29> method overload or the <xref:System.Reflection.Assembly.LoadFrom%28System.String%29> method overload.</span></span>  
  
 <span data-ttu-id="9ab64-1212">Este método primeiro chama <xref:System.Reflection.Assembly.Load%2A>.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1212">This method first calls <xref:System.Reflection.Assembly.Load%2A>.</span></span> <span data-ttu-id="9ab64-1213">Se o assembly não for encontrado, esse método retorna o assembly do cache de assembly global que tem o mesmo nome simples e o maior número de versão.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1213">If the assembly is not found, this method returns the assembly from the global assembly cache that has the same simple name, and the highest version number.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9ab64-1214">O parâmetro <paramref name="partialName" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1214">The <paramref name="partialName" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="9ab64-1215">
            <paramref name="assemblyFile" /> não é um assembly válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1215">
              <paramref name="assemblyFile" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="9ab64-1216">-ou-  A versão 2.0 ou posterior do Common Language Runtime está carregada atualmente e o <paramref name="partialName" /> foi compilado com uma versão posterior.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1216">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="partialName" /> was compiled with a later version.</span>
          </span>
        </exception>
        <altmember cref="M:System.Reflection.Assembly.Load(System.String)" />
        <altmember cref="M:System.Reflection.Assembly.LoadFrom(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="LoadWithPartialName">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly LoadWithPartialName (string partialName, System.Security.Policy.Evidence securityEvidence);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly LoadWithPartialName(string partialName, class System.Security.Policy.Evidence securityEvidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.LoadWithPartialName(System.String,System.Security.Policy.Evidence)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LoadWithPartialName (partialName As String, securityEvidence As Evidence) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ LoadWithPartialName(System::String ^ partialName, System::Security::Policy::Evidence ^ securityEvidence);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partialName" Type="System.String" />
        <Parameter Name="securityEvidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="partialName">
          <span data-ttu-id="9ab64-1217">O nome para exibição do assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1217">The display name of the assembly.</span>
          </span>
        </param>
        <param name="securityEvidence">
          <span data-ttu-id="9ab64-1218">Evidência para carregar o assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1218">Evidence for loading the assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9ab64-1219">Carrega um assembly do diretório do aplicativo ou do cache de assembly global usando um nome parcial.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1219">Loads an assembly from the application directory or from the global assembly cache using a partial name.</span>
          </span>
          <span data-ttu-id="9ab64-1220">O assembly é carregado no domínio do chamador usando a evidência fornecida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1220">The assembly is loaded into the domain of the caller using the supplied evidence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9ab64-1221">O assembly carregado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1221">The loaded assembly.</span>
          </span>
          <span data-ttu-id="9ab64-1222">Se <paramref name="partialName" /> não foi encontrado, este método retorn <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1222">If <paramref name="partialName" /> is not found, this method returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="9ab64-1223">O <xref:System.Reflection.Assembly.LoadWithPartialName%28System.String%2CSystem.Security.Policy.Evidence%29> método está obsoleto e foi mantido para compatibilidade com versões anteriores.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1223">The <xref:System.Reflection.Assembly.LoadWithPartialName%28System.String%2CSystem.Security.Policy.Evidence%29> method is obsolete and has been retained for backward compatibility.</span></span> <span data-ttu-id="9ab64-1224">A alternativa não obsoleta é <xref:System.Reflection.Assembly.Load%28System.String%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1224">The non-obsolete alternative is <xref:System.Reflection.Assembly.Load%28System.String%29?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="9ab64-1225">Evidência é o conjunto de informações que constitui a entrada para decisões de política de segurança, como quais permissões podem ser concedidas ao código.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1225">Evidence is the set of information that constitutes input to security policy decisions, such as what permissions can be granted to code.</span></span>  
  
 <span data-ttu-id="9ab64-1226">Aplicativos que carregar assemblies com esse método serão afetados por atualizações desses assemblies.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1226">Applications that load assemblies with this method will be affected by upgrades of those assemblies.</span></span> <span data-ttu-id="9ab64-1227">Portanto, não use esse método; recriar o aplicativo para usar o <xref:System.Reflection.Assembly.Load%2A> método ou o <xref:System.Reflection.Assembly.LoadFrom%2A> método.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1227">Therefore, do not use this method; redesign the application to use the <xref:System.Reflection.Assembly.Load%2A> method or the <xref:System.Reflection.Assembly.LoadFrom%2A> method.</span></span>  
  
 <span data-ttu-id="9ab64-1228">Este método primeiro chama <xref:System.Reflection.Assembly.Load%2A>.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1228">This method first calls <xref:System.Reflection.Assembly.Load%2A>.</span></span> <span data-ttu-id="9ab64-1229">Se o assembly não for encontrado, esse método retorna o assembly do cache de assembly global que tem o mesmo nome simples e o maior número de versão.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1229">If the assembly is not found, this method returns the assembly from the global assembly cache that has the same simple name, and the highest version number.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="9ab64-1230">Um assembly ou módulo foi carregado duas vezes com dois conjuntos de evidências.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1230">An assembly or module was loaded twice with two different sets of evidence.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9ab64-1231">O parâmetro <paramref name="partialName" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1231">The <paramref name="partialName" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="9ab64-1232">
            <paramref name="assemblyFile" /> não é um assembly válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1232">
              <paramref name="assemblyFile" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="9ab64-1233">-ou-  A versão 2.0 ou posterior do Common Language Runtime está carregada atualmente e o <paramref name="partialName" /> foi compilado com uma versão posterior.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1233">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="partialName" /> was compiled with a later version.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="9ab64-1234">para chamar código não gerenciado e carregar um assembly com evidência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1234">for calling unmanaged code and to load an assembly with evidence.</span>
          </span>
          <span data-ttu-id="9ab64-1235">Enumeração associada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1235">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Reflection.Assembly.Load(System.String)" />
        <altmember cref="M:System.Reflection.Assembly.LoadFrom(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public virtual string Location { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Location" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.Location" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Location As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Location { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._Assembly.Location</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9ab64-1236">Obtém o caminho completo ou uma localização UNC do arquivo carregado que contém o manifesto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1236">Gets the full path or UNC location of the loaded file that contains the manifest.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9ab64-1237">A localização do arquivo carregado que contém o manifesto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1237">The location of the loaded file that contains the manifest.</span>
          </span>
          <span data-ttu-id="9ab64-1238">Se o arquivo carregado foi copiado de sombra, o local é que o arquivo depois de ser copiado de sombra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1238">If the loaded file was shadow-copied, the location is that of the file after being shadow-copied.</span>
          </span>
          <span data-ttu-id="9ab64-1239">Se o assembly for carregado de uma matriz de bytes, como ao usar a sobrecarga de método <see cref="M:System.Reflection.Assembly.Load(System.Byte[])" />, o valor retornado será uma cadeia de caracteres vazia ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1239">If the assembly is loaded from a byte array, such as when using the <see cref="M:System.Reflection.Assembly.Load(System.Byte[])" /> method overload, the value returned is an empty string ("").</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ab64-1240">Para obter o local antes que o arquivo tenha sido copiado de sombra, use o <xref:System.Reflection.Assembly.CodeBase%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1240">To get the location before the file has been shadow-copied, use the <xref:System.Reflection.Assembly.CodeBase%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9ab64-1241">O exemplo a seguir exibe o local do arquivo carregado que contém o manifesto.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1241">The following example displays the location of the loaded file that contains the manifest.</span></span>  
  
 [!code-cpp[System.Reflection.Assembly#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Assembly/CPP/assembly.cpp#3)]
 [!code-csharp[System.Reflection.Assembly#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Assembly/CS/assembly.cs#3)]
 [!code-vb[System.Reflection.Assembly#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Assembly/VB/assembly.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="9ab64-1242">O assembly atual é um assembly dinâmico, representado por um objeto <see cref="T:System.Reflection.Emit.AssemblyBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1242">The current assembly is a dynamic assembly, represented by an <see cref="T:System.Reflection.Emit.AssemblyBuilder" /> object.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="9ab64-1243">para acessar o caminho.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1243">for access to the path.</span>
          </span>
          <span data-ttu-id="9ab64-1244">Enumeração associada: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1244">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="ManifestModule">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.Module ManifestModule { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Module ManifestModule" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.ManifestModule" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ManifestModule As Module" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::Module ^ ManifestModule { System::Reflection::Module ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9ab64-1245">Obtém o módulo que contém o manifesto do assembly atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1245">Gets the module that contains the manifest for the current assembly.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9ab64-1246">O módulo que contém o manifesto do assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1246">The module that contains the manifest for the assembly.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModuleResolve">
      <MemberSignature Language="C#" Value="public virtual event System.Reflection.ModuleResolveEventHandler ModuleResolve;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Reflection.ModuleResolveEventHandler ModuleResolve" />
      <MemberSignature Language="DocId" Value="E:System.Reflection.Assembly.ModuleResolve" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Custom Event ModuleResolve As ModuleResolveEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Reflection::ModuleResolveEventHandler ^ ModuleResolve;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Runtime.InteropServices._Assembly.ModuleResolve</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ModuleResolveEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9ab64-1247">Ocorre quando o carregador de classe do Common Language Runtime não é capaz de resolver uma referência a um módulo interno de um assembly por meios normais.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1247">Occurs when the common language runtime class loader cannot resolve a reference to an internal module of an assembly through normal means.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ab64-1248">Este evento dá o retorno de chamada a oportunidade de localizar e carregar o módulo em si e retorná-lo.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1248">This event gives the callback a chance to find and load the module itself and return it.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="9ab64-1249">Requer confiança total para o chamador imediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1249">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="9ab64-1250">Este membro não pode ser usado pelo código transparente ou parcialmente confiável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1250">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Modules">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Reflection.Module&gt; Modules { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Reflection.Module&gt; Modules" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.Modules" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Modules As IEnumerable(Of Module)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IEnumerable&lt;System::Reflection::Module ^&gt; ^ Modules { System::Collections::Generic::IEnumerable&lt;System::Reflection::Module ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Reflection.Module&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9ab64-1251">Obtém uma coleção que contém os módulos neste assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1251">Gets a collection that contains the modules in this assembly.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9ab64-1252">Uma coleção que contém os módulos neste assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1252">A collection that contains the modules in this assembly.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Reflection.Assembly left, System.Reflection.Assembly right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Reflection.Assembly left, class System.Reflection.Assembly right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.op_Equality(System.Reflection.Assembly,System.Reflection.Assembly)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As Assembly, right As Assembly) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Reflection::Assembly ^ left, System::Reflection::Assembly ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Reflection.Assembly" />
        <Parameter Name="right" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="9ab64-1253">O assembly a ser comparado com <c>right</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1253">The assembly to compare to <c>right</c>.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="9ab64-1254">O assembly a ser comparado com <c>left</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1254">The assembly to compare to <c>left</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9ab64-1255">Indica se dois objetos <see cref="T:System.Reflection.Assembly" /> são iguais.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1255">Indicates whether two <see cref="T:System.Reflection.Assembly" /> objects are equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9ab64-1256">
            <see langword="true" /> se <paramref name="left" /> for igual a <paramref name="right" />; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1256">
              <see langword="true" /> if <paramref name="left" /> is equal to <paramref name="right" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Reflection.Assembly left, System.Reflection.Assembly right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Reflection.Assembly left, class System.Reflection.Assembly right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.op_Inequality(System.Reflection.Assembly,System.Reflection.Assembly)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As Assembly, right As Assembly) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Reflection::Assembly ^ left, System::Reflection::Assembly ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Reflection.Assembly" />
        <Parameter Name="right" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="9ab64-1257">O assembly a ser comparado com <c>right</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1257">The assembly to compare to <c>right</c>.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="9ab64-1258">O assembly a ser comparado com <c>left</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1258">The assembly to compare to <c>left</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9ab64-1259">Indica se dois objetos <see cref="T:System.Reflection.Assembly" /> não são iguais.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1259">Indicates whether two <see cref="T:System.Reflection.Assembly" /> objects are not equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9ab64-1260">
            <see langword="true" /> se <paramref name="left" /> não for igual a <paramref name="right" />; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1260">
              <see langword="true" /> if <paramref name="left" /> is not equal to <paramref name="right" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PermissionSet">
      <MemberSignature Language="C#" Value="public virtual System.Security.PermissionSet PermissionSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.PermissionSet PermissionSet" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.PermissionSet" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PermissionSet As PermissionSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::PermissionSet ^ PermissionSet { System::Security::PermissionSet ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.PermissionSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9ab64-1261">Obtém o conjunto de concessões do assembly atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1261">Gets the grant set of the current assembly.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9ab64-1262">O conjunto de concessões do assembly atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1262">The grant set of the current assembly.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ab64-1263"><xref:System.Security.PermissionSet> objetos podem conter informações confidenciais, como caminhos.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1263"><xref:System.Security.PermissionSet> objects can contain sensitive information such as paths.</span></span> <span data-ttu-id="9ab64-1264">Portanto, a confiança total é necessária para acessar esses objetos.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1264">Therefore, full trust is required to access these objects.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="9ab64-1265">requer confiança total para o chamador imediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1265">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="9ab64-1266">Este membro não pode ser usado pelo código transparente ou parcialmente confiável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1266">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="ReflectionOnly">
      <MemberSignature Language="C#" Value="public virtual bool ReflectionOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReflectionOnly" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.ReflectionOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ReflectionOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ReflectionOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9ab64-1267">Obtém um valor <see cref="T:System.Boolean" /> que indica se esse assembly foi carregado no contexto de somente reflexão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1267">Gets a <see cref="T:System.Boolean" /> value indicating whether this assembly was loaded into the reflection-only context.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9ab64-1268">
            <see langword="true" /> Se o assembly foi carregado no contexto exclusivo de reflexão, em vez do contexto de execução; Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1268">
              <see langword="true" /> if the assembly was loaded into the reflection-only context, rather than the execution context; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ab64-1269">Se um assembly foi carregado no contexto exclusivo de reflexão, usando o <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A> método, você não pode executar o código no assembly.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1269">If an assembly has been loaded into the reflection-only context, using the <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A> method, you cannot execute code in the assembly.</span></span> <span data-ttu-id="9ab64-1270">Para executar o código, o assembly deve ser carregado no contexto de execução.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1270">To execute code, the assembly must be loaded into the execution context.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReflectionOnlyLoad">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9ab64-1271">Carrega um assembly no contexto de somente reflexão, em que ele possa ser examinado, mas não executado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1271">Loads an assembly into the reflection-only context, where it can be examined but not executed.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReflectionOnlyLoad">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly ReflectionOnlyLoad (byte[] rawAssembly);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly ReflectionOnlyLoad(unsigned int8[] rawAssembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.ReflectionOnlyLoad(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReflectionOnlyLoad (rawAssembly As Byte()) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ ReflectionOnlyLoad(cli::array &lt;System::Byte&gt; ^ rawAssembly);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawAssembly" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rawAssembly">
          <span data-ttu-id="9ab64-1272">Uma matriz de byte que é uma imagem baseada em COFF contendo um assembly emitido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1272">A byte array that is a COFF-based image containing an emitted assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9ab64-1273">Carrega o assembly de uma imagem baseada em formato COFF contendo um assembly emitido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1273">Loads the assembly from a common object file format (COFF)-based image containing an emitted assembly.</span>
          </span>
          <span data-ttu-id="9ab64-1274">O assembly é carregado no contexto de somente reflexão do domínio do aplicativo do chamador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1274">The assembly is loaded into the reflection-only context of the caller's application domain.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9ab64-1275">O assembly carregado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1275">The loaded assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ab64-1276">Você não pode executar o código de um assembly carregado no contexto exclusivo de reflexão.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1276">You cannot execute code from an assembly loaded into the reflection-only context.</span></span> <span data-ttu-id="9ab64-1277">Para executar o código, o assembly deve ser carregado no contexto de execução, usando o <xref:System.Reflection.Assembly.Load%2A> método.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1277">To execute code, the assembly must be loaded into the execution context as well, using the <xref:System.Reflection.Assembly.Load%2A> method.</span></span>  
  
 <span data-ttu-id="9ab64-1278">O contexto exclusivo de reflexão não é diferente de outros contextos.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1278">The reflection-only context is no different from other contexts.</span></span> <span data-ttu-id="9ab64-1279">Assemblies são carregados no contexto de podem ser descarregados somente por descarregar o domínio de aplicativo.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1279">Assemblies that are loaded into the context can be unloaded only by unloading the application domain.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9ab64-1280">
            <paramref name="rawAssembly" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1280">
              <paramref name="rawAssembly" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="9ab64-1281">
            <paramref name="rawAssembly" /> não é um assembly válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1281">
              <paramref name="rawAssembly" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="9ab64-1282">-ou-  A versão 2.0 ou posterior do Common Language Runtime está carregada atualmente e o <paramref name="rawAssembly" /> foi compilado com uma versão posterior.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1282">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="rawAssembly" /> was compiled with a later version.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="9ab64-1283">
            <paramref name="rawAssembly" /> não pode ser carregado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1283">
              <paramref name="rawAssembly" /> cannot be loaded.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReflectionOnlyLoad">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly ReflectionOnlyLoad (string assemblyString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly ReflectionOnlyLoad(string assemblyString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.ReflectionOnlyLoad(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReflectionOnlyLoad (assemblyString As String) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ ReflectionOnlyLoad(System::String ^ assemblyString);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyString">
          <span data-ttu-id="9ab64-1284">O nome de exibição do assembly, conforme retornado pela propriedade <see cref="P:System.Reflection.AssemblyName.FullName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1284">The display name of the assembly, as returned by the <see cref="P:System.Reflection.AssemblyName.FullName" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9ab64-1285">Carrega um assembly no contexto somente de reflexão, dado seu nome de exibição.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1285">Loads an assembly into the reflection-only context, given its display name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9ab64-1286">O assembly carregado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1286">The loaded assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ab64-1287">Dependências não são automaticamente carregadas no contexto exclusivo de reflexão.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1287">Dependencies are not automatically loaded into the reflection-only context.</span></span>  
  
 <span data-ttu-id="9ab64-1288">Você não pode executar o código de um assembly carregado no contexto exclusivo de reflexão.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1288">You cannot execute code from an assembly loaded into the reflection-only context.</span></span> <span data-ttu-id="9ab64-1289">Para executar o código, o assembly deve ser carregado no contexto de execução, usando o <xref:System.Reflection.Assembly.Load%2A> método.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1289">To execute code, the assembly must be loaded into the execution context as well, using the <xref:System.Reflection.Assembly.Load%2A> method.</span></span>  
  
 <span data-ttu-id="9ab64-1290">Se determinadas permissões são concedidas ou não a um assembly é algo que se baseia na evidência.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1290">Whether certain permissions are granted or not granted to an assembly is based on evidence.</span></span> <span data-ttu-id="9ab64-1291">As regras para o assembly e a mesclagem de evidência de segurança são da seguinte maneira:</span><span class="sxs-lookup"><span data-stu-id="9ab64-1291">The rules for assembly and security evidence merging are as follows:</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9ab64-1292">Refletir em arquivos executáveis compilados em C++ pode acionar um <xref:System.IO.FileLoadException>.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1292">Reflecting on executable files compiled in C++ might throw a <xref:System.IO.FileLoadException>.</span></span> <span data-ttu-id="9ab64-1293">Isso provavelmente é causado pelo compilador C++ tirando os endereços de relocação ou a seção de .reloc do seu arquivo executável.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1293">This is most likely caused by the C++ compiler stripping the relocation addresses or the .reloc section from your executable file.</span></span> <span data-ttu-id="9ab64-1294">Para preservar o endereço .reloc, especifique `/fixed:no` quando você está vinculando.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1294">To preserve the .reloc address, specify `/fixed:no` when you are linking.</span></span>  
  
 <span data-ttu-id="9ab64-1295">O contexto exclusivo de reflexão não é diferente de outros contextos.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1295">The reflection-only context is no different from other contexts.</span></span> <span data-ttu-id="9ab64-1296">Assemblies são carregados no contexto de podem ser descarregados somente por descarregar o domínio de aplicativo.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1296">Assemblies that are loaded into the context can be unloaded only by unloading the application domain.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9ab64-1297">
            <paramref name="assemblyString" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1297">
              <paramref name="assemblyString" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9ab64-1298">
            <paramref name="assemblyString" /> é uma cadeia de caracteres vazia ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1298">
              <paramref name="assemblyString" /> is an empty string ("").</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="9ab64-1299">
            <paramref name="assemblyString" /> não foi encontrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1299">
              <paramref name="assemblyString" /> is not found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="9ab64-1300">
            <paramref name="assemblyString" /> foi encontrado, mas não pode ser carregado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1300">
              <paramref name="assemblyString" /> is found, but cannot be loaded.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="9ab64-1301">
            <paramref name="assemblyString" /> não é um assembly válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1301">
              <paramref name="assemblyString" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="9ab64-1302">-ou-  A versão 2.0 ou posterior do Common Language Runtime está carregada atualmente e o <paramref name="assemblyString" /> foi compilado com uma versão posterior.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1302">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyString" /> was compiled with a later version.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReflectionOnlyLoadFrom">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly ReflectionOnlyLoadFrom (string assemblyFile);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly ReflectionOnlyLoadFrom(string assemblyFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.ReflectionOnlyLoadFrom(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReflectionOnlyLoadFrom (assemblyFile As String) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ ReflectionOnlyLoadFrom(System::String ^ assemblyFile);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyFile">
          <span data-ttu-id="9ab64-1303">O caminho do arquivo que contém o manifesto do assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1303">The path of the file that contains the manifest of the assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9ab64-1304">Carrega um assembly no contexto somente de reflexão, dado seu caminho.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1304">Loads an assembly into the reflection-only context, given its path.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9ab64-1305">O assembly carregado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1305">The loaded assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ab64-1306">Dependências não são automaticamente carregadas no contexto exclusivo de reflexão.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1306">Dependencies are not automatically loaded into the reflection-only context.</span></span> <span data-ttu-id="9ab64-1307">Para carregar automaticamente as dependências, tratar o <xref:System.AppDomain.ReflectionOnlyAssemblyResolve> eventos e carregar a dependência no manipulador de eventos.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1307">To automatically load dependencies, handle the <xref:System.AppDomain.ReflectionOnlyAssemblyResolve> event and load the dependency in the event handler.</span></span>  
  
 <span data-ttu-id="9ab64-1308">Você não pode executar o código de um assembly que foi carregado no contexto exclusivo de reflexão.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1308">You cannot execute code from an assembly that has been loaded into the reflection-only context.</span></span> <span data-ttu-id="9ab64-1309">Para executar o código, carregar o assembly com o <xref:System.Reflection.Assembly.LoadFile%2A> método.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1309">To execute the code, load the assembly with the <xref:System.Reflection.Assembly.LoadFile%2A> method.</span></span>  
  
 <span data-ttu-id="9ab64-1310">O `assemblyFile` parâmetro deve se referir a um URI sem caracteres de escape.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1310">The `assemblyFile` parameter must refer to a URI without escape characters.</span></span> <span data-ttu-id="9ab64-1311">Esse método fornece caracteres de escape para todos os caracteres inválidos no URI.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1311">This method supplies escape characters for all invalid characters in the URI.</span></span>  
  
 <span data-ttu-id="9ab64-1312">O caminho especificado para `assemblyFile` é relativo ao diretório atual.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1312">The path specified for `assemblyFile` is relative to the current directory.</span></span> <span data-ttu-id="9ab64-1313">O assembly é carregado para o domínio do chamador.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1313">The assembly is loaded into the domain of the caller.</span></span>  
  
 <span data-ttu-id="9ab64-1314">O contexto exclusivo de reflexão não é diferente de outros contextos.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1314">The reflection-only context is no different from other contexts.</span></span> <span data-ttu-id="9ab64-1315">Assemblies são carregados no contexto de podem ser descarregados somente por descarregar o domínio de aplicativo.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1315">Assemblies that are loaded into the context can be unloaded only by unloading the application domain.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9ab64-1316">
            <paramref name="assemblyFile" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1316">
              <paramref name="assemblyFile" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="9ab64-1317">
            <paramref name="assemblyFile" /> não foi encontrado ou o módulo que você está tentando carregar não especifica uma extensão de nome de arquivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1317">
              <paramref name="assemblyFile" /> is not found, or the module you are trying to load does not specify a file name extension.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="9ab64-1318">
            <paramref name="assemblyFile" /> foi encontrado, mas não pôde ser carregado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1318">
              <paramref name="assemblyFile" /> is found, but could not be loaded.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="9ab64-1319">
            <paramref name="assemblyFile" /> não é um assembly válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1319">
              <paramref name="assemblyFile" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="9ab64-1320">-ou-  A versão 2.0 ou posterior do Common Language Runtime está carregada atualmente e o <paramref name="assemblyFile" /> foi compilado com uma versão posterior.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1320">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyFile" /> was compiled with a later version.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="9ab64-1321">Uma base de código que não é iniciada com “file://” foi especificada sem o <see cref="T:System.Net.WebPermission" /> necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1321">A codebase that does not start with "file://" was specified without the required <see cref="T:System.Net.WebPermission" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="9ab64-1322">O nome do assembly excede o tamanho máximo definido pelo sistema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1322">The assembly name exceeds the system-defined maximum length.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9ab64-1323">
            <paramref name="assemblyFile" /> é uma cadeia de caracteres vazia ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1323">
              <paramref name="assemblyFile" /> is an empty string ("").</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="9ab64-1324">para ler um URI que começa com "file://".</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1324">for reading a URI that begins with "file://".</span>
          </span>
          <span data-ttu-id="9ab64-1325">Enumerações associadas: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1325">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          </span>
        </permission>
        <permission cref="T:System.Net.WebPermission">
          <span data-ttu-id="9ab64-1326">para ler um URI que não começa com "file://".</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1326">for reading a URI that does not begin with "file://".</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="SecurityRuleSet">
      <MemberSignature Language="C#" Value="public virtual System.Security.SecurityRuleSet SecurityRuleSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.SecurityRuleSet SecurityRuleSet" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.SecurityRuleSet" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SecurityRuleSet As SecurityRuleSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::SecurityRuleSet SecurityRuleSet { System::Security::SecurityRuleSet get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityRuleSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9ab64-1327">Obtém um valor que indica qual conjunto de regras de segurança o CLR (Common Language Runtime) impõe a este assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1327">Gets a value that indicates which set of security rules the common language runtime (CLR) enforces for this assembly.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9ab64-1328">O conjunto de regras de segurança que impõe o CLR para esse assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1328">The security rule set that the CLR enforces for this assembly.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ab64-1329">Por padrão, os assemblies que são compilados com o [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] ter transparência, embora você pode torná-los explicitamente em vez disso.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1329">By default, assemblies that you compile with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] have  transparency, although you can explicitly make them  instead.</span></span> <span data-ttu-id="9ab64-1330">Assemblies que foram compilados com versões anteriores do .NET Framework tem transparência de nível 1.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1330">Assemblies that were compiled with earlier versions of the .NET Framework have level 1 transparency.</span></span>  
  
 <span data-ttu-id="9ab64-1331">Consulte [Alterações de segurança](~/docs/framework/security/security-changes.md).</span><span class="sxs-lookup"><span data-stu-id="9ab64-1331">See [Security Changes](~/docs/framework/security/security-changes.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.ICustomAttributeProvider.GetCustomAttributes">
      <MemberSignature Language="C#" Value="object[] ICustomAttributeProvider.GetCustomAttributes (bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object[] System.Reflection.ICustomAttributeProvider.GetCustomAttributes(bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Function GetCustomAttributes (inherit As Boolean) As Object() Implements ICustomAttributeProvider.GetCustomAttributes" />
      <MemberSignature Language="C++ CLI" Value=" virtual cli::array &lt;System::Object ^&gt; ^ System.Reflection.ICustomAttributeProvider.GetCustomAttributes(bool inherit) = System::Reflection::ICustomAttributeProvider::GetCustomAttributes;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.ICustomAttributeProvider.GetCustomAttributes(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="inherit">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.ICustomAttributeProvider.GetCustomAttributes">
      <MemberSignature Language="C#" Value="object[] ICustomAttributeProvider.GetCustomAttributes (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object[] System.Reflection.ICustomAttributeProvider.GetCustomAttributes(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Function GetCustomAttributes (attributeType As Type, inherit As Boolean) As Object() Implements ICustomAttributeProvider.GetCustomAttributes" />
      <MemberSignature Language="C++ CLI" Value=" virtual cli::array &lt;System::Object ^&gt; ^ System.Reflection.ICustomAttributeProvider.GetCustomAttributes(Type ^ attributeType, bool inherit) = System::Reflection::ICustomAttributeProvider::GetCustomAttributes;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.ICustomAttributeProvider.GetCustomAttributes(System.Type,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType">To be added.</param>
        <param name="inherit">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.ICustomAttributeProvider.IsDefined">
      <MemberSignature Language="C#" Value="bool ICustomAttributeProvider.IsDefined (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Reflection.ICustomAttributeProvider.IsDefined(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.System#Reflection#ICustomAttributeProvider#IsDefined(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Function IsDefined (attributeType As Type, inherit As Boolean) As Boolean Implements ICustomAttributeProvider.IsDefined" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Reflection.ICustomAttributeProvider.IsDefined(Type ^ attributeType, bool inherit) = System::Reflection::ICustomAttributeProvider::IsDefined;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.ICustomAttributeProvider.IsDefined(System.Type,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType">To be added.</param>
        <param name="inherit">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._Assembly.GetType">
      <MemberSignature Language="C#" Value="Type _Assembly.GetType ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Type System.Runtime.InteropServices._Assembly.GetType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.System#Runtime#InteropServices#_Assembly#GetType" />
      <MemberSignature Language="VB.NET" Value="Function GetType () As Type Implements _Assembly.GetType" />
      <MemberSignature Language="C++ CLI" Value=" virtual Type ^ System.Runtime.InteropServices._Assembly.GetType() = System::Runtime::InteropServices::_Assembly::GetType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9ab64-1332">Retorna o tipo da instância atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1332">Returns the type of the current instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9ab64-1333">Um objeto que representa o tipo <see cref="T:System.Reflection.Assembly" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1333">An object that represents the <see cref="T:System.Reflection.Assembly" /> type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.ToString</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9ab64-1334">Retorna o nome completo do assembly, também conhecido como o nome de exibição.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1334">Returns the full name of the assembly, also known as the display name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9ab64-1335">O nome completo do assembly ou o nome de classe, se o nome completo do assembly não puder ser determinado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1335">The full name of the assembly, or the class name if the full name of the assembly cannot be determined.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnsafeLoadFrom">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly UnsafeLoadFrom (string assemblyFile);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly UnsafeLoadFrom(string assemblyFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.UnsafeLoadFrom(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UnsafeLoadFrom (assemblyFile As String) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ UnsafeLoadFrom(System::String ^ assemblyFile);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyFile">
          <span data-ttu-id="9ab64-1336">O nome ou o caminho do arquivo que contém o manifesto do assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1336">The name or path of the file that contains the manifest of the assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9ab64-1337">Carrega um assembly no contexto de carga, ignorando algumas verificações de segurança.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1337">Loads an assembly into the load-from context, bypassing some security checks.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9ab64-1338">O assembly carregado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1338">The loaded assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ab64-1339">Use esse método para carregar um assembly local que o sistema operacional foi sinalizada como tendo sido carregado da Web (por exemplo, um arquivo temporário que foi baixado da Internet ou intranet).</span><span class="sxs-lookup"><span data-stu-id="9ab64-1339">Use this method to load a local assembly that the operating system has flagged as having been loaded from the Web (for example, a temporary file that was downloaded from the Internet or intranet).</span></span> <span data-ttu-id="9ab64-1340">Antes do [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], esses assemblies foram carregadas automaticamente para um domínio de aplicativo na área restrita.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1340">Before the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], such assemblies were automatically loaded into a sandboxed application domain.</span></span> <span data-ttu-id="9ab64-1341">Começando com o [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], elas são carregadas com confiança total.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1341">Starting with the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], they are loaded with full trust.</span></span>  
  
 <span data-ttu-id="9ab64-1342">Como alternativa para usar esse método, você pode aplicar o [ &lt;NetFx40_LegacySecurityPolicy&gt; elemento](~/docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md) em seu arquivo de configuração do aplicativo.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1342">As an alternative to using this method, you can apply the [&lt;NetFx40_LegacySecurityPolicy&gt; Element](~/docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md) in your application configuration file.</span></span> <span data-ttu-id="9ab64-1343">Isso faz com que o common language runtime reverter para a política de segurança do [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)].</span><span class="sxs-lookup"><span data-stu-id="9ab64-1343">This causes the common language runtime to revert to the security policy of the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)].</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="9ab64-1344">Se você usar qualquer uma dessas soluções, você deve certificar-se é seguro carregar `assemblyFile` com confiança total.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1344">If you use either of these solutions, you must be certain that it is safe to load `assemblyFile` with full trust.</span></span>  
  
 <span data-ttu-id="9ab64-1345">Para obter uma discussão de contextos de carga, incluindo o contexto de carga, consulte o <xref:System.Reflection.Assembly.LoadFrom%28System.String%29> sobrecarga do método.</span><span class="sxs-lookup"><span data-stu-id="9ab64-1345">For a discussion of load contexts, including the load-from context, see the <xref:System.Reflection.Assembly.LoadFrom%28System.String%29> method overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9ab64-1346">
            <paramref name="assemblyFile" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1346">
              <paramref name="assemblyFile" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="9ab64-1347">
            <paramref name="assemblyFile" /> não foi encontrado, ou o módulo que você está tentando carregar não especifica uma extensão de nome de arquivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1347">
              <paramref name="assemblyFile" /> is not found, or the module you are trying to load does not specify a filename extension.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="9ab64-1348">Não foi possível carregar um arquivo que foi encontrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1348">A file that was found could not be loaded.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="9ab64-1349">
            <paramref name="assemblyFile" /> não é um assembly válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1349">
              <paramref name="assemblyFile" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="9ab64-1350">-ou-  <paramref name="assemblyFile" /> foi compilado com uma versão do Common Language Runtime posterior àquela carregada atualmente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1350">-or-  <paramref name="assemblyFile" /> was compiled with a later version of the common language runtime than the version that is currently loaded.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="9ab64-1351">Uma base de código que não é iniciada com “file://” foi especificada sem o <see cref="T:System.Net.WebPermission" /> necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1351">A codebase that does not start with "file://" was specified without the required <see cref="T:System.Net.WebPermission" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9ab64-1352">O parâmetro <paramref name="assemblyFile" /> é uma cadeia de caracteres vazia ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1352">The <paramref name="assemblyFile" /> parameter is an empty string ("").</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="9ab64-1353">O nome do assembly excede o tamanho máximo definido pelo sistema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1353">The assembly name exceeds the system-defined maximum length.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="9ab64-1354">requer confiança total para o chamador imediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1354">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="9ab64-1355">Este membro não pode ser usado pelo código transparente ou parcialmente confiável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ab64-1355">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
  </Members>
</Type>