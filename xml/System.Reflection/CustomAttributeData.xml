<Type Name="CustomAttributeData" FullName="System.Reflection.CustomAttributeData">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ec6a319f71ff453bcbc8ccde88ae4c1671d48a5e" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58715616" /></Metadata><TypeSignature Language="C#" Value="public class CustomAttributeData" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit CustomAttributeData extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.CustomAttributeData" />
  <TypeSignature Language="VB.NET" Value="Public Class CustomAttributeData" />
  <TypeSignature Language="C++ CLI" Value="public ref class CustomAttributeData" />
  <TypeSignature Language="F#" Value="type CustomAttributeData = class" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="0f720-101">Fornece acesso aos dados de atributo personalizado para assemblies, módulos, tipos, membros e parâmetros que são carregados no contexto exclusivo de reflexão.</span><span class="sxs-lookup"><span data-stu-id="0f720-101">Provides access to custom attribute data for assemblies, modules, types, members and parameters that are loaded into the reflection-only context.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f720-102">Código que está sendo examinado no contexto somente reflexão não pode ser executado, portanto, nem sempre é possível examinar os atributos personalizados, criando instâncias de-los e, em seguida, examinar suas propriedades, usando métodos como <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType>, <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=nameWithType>e assim por diante .</span><span class="sxs-lookup"><span data-stu-id="0f720-102">Code that is being examined in the reflection-only context cannot be executed, so it is not always possible to examine custom attributes by creating instances of them and then examining their properties, using methods like <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType>, <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=nameWithType>, and so on.</span></span> <span data-ttu-id="0f720-103">Se o código para o tipo de atributo é carregado no contexto somente reflexão, ele não pode ser executado.</span><span class="sxs-lookup"><span data-stu-id="0f720-103">If the code for the attribute type itself is loaded into the reflection-only context, it cannot be executed.</span></span>  
  
 <span data-ttu-id="0f720-104">O <xref:System.Reflection.CustomAttributeData> classe permite o exame dos atributos personalizados no contexto somente reflexão, fornecendo uma abstração para atributos.</span><span class="sxs-lookup"><span data-stu-id="0f720-104">The <xref:System.Reflection.CustomAttributeData> class allows examination of custom attributes in the reflection-only context by providing an abstraction for attributes.</span></span> <span data-ttu-id="0f720-105">Os membros dessa classe podem ser usados para obter os argumentos posicionais e argumentos do atributo nomeados.</span><span class="sxs-lookup"><span data-stu-id="0f720-105">The members of this class can be used to obtain the positional arguments and named arguments of the attribute.</span></span> <span data-ttu-id="0f720-106">Use o <xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A> propriedade para obter uma lista de <xref:System.Reflection.CustomAttributeTypedArgument> estruturas que representam os argumentos posicionais e usarem o <xref:System.Reflection.CustomAttributeData.NamedArguments%2A> propriedade para obter uma lista de <xref:System.Reflection.CustomAttributeNamedArgument> estruturas que representam os argumentos nomeados.</span><span class="sxs-lookup"><span data-stu-id="0f720-106">Use the <xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A> property to get a list of <xref:System.Reflection.CustomAttributeTypedArgument> structures that represent the positional arguments, and use the <xref:System.Reflection.CustomAttributeData.NamedArguments%2A> property to get a list of <xref:System.Reflection.CustomAttributeNamedArgument> structures that represent the named arguments.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0f720-107">O <xref:System.Reflection.CustomAttributeNamedArgument> estrutura só fornece informações sobre a propriedade do atributo usada para obter e definir o valor do argumento.</span><span class="sxs-lookup"><span data-stu-id="0f720-107">The <xref:System.Reflection.CustomAttributeNamedArgument> structure only provides information about the attribute property used to get and set the argument value.</span></span> <span data-ttu-id="0f720-108">Para obter o tipo e o valor do argumento, use o <xref:System.Reflection.CustomAttributeNamedArgument.TypedValue%2A?displayProperty=nameWithType> propriedade para obter um <xref:System.Reflection.CustomAttributeTypedArgument> estrutura.</span><span class="sxs-lookup"><span data-stu-id="0f720-108">To obtain the type and value of the argument, use the <xref:System.Reflection.CustomAttributeNamedArgument.TypedValue%2A?displayProperty=nameWithType> property to obtain a <xref:System.Reflection.CustomAttributeTypedArgument> structure.</span></span>  
  
 <span data-ttu-id="0f720-109">Quando você tem um <xref:System.Reflection.CustomAttributeTypedArgument> de estrutura para um argumento, se nomeados ou posicionais, use o <xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A?displayProperty=nameWithType> propriedade para obter o tipo e o <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A?displayProperty=nameWithType> propriedade para obter o valor.</span><span class="sxs-lookup"><span data-stu-id="0f720-109">When you have a <xref:System.Reflection.CustomAttributeTypedArgument> structure for an argument, whether named or positional, use the <xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A?displayProperty=nameWithType> property to get the type and the <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A?displayProperty=nameWithType> property to get the value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0f720-110">Para um argumento de matriz, o <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A?displayProperty=nameWithType> propriedade retorna um genérico <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> de <xref:System.Reflection.CustomAttributeTypedArgument> objetos.</span><span class="sxs-lookup"><span data-stu-id="0f720-110">For an array argument, the <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A?displayProperty=nameWithType> property returns a generic <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> of <xref:System.Reflection.CustomAttributeTypedArgument> objects.</span></span> <span data-ttu-id="0f720-111">Cada <xref:System.Reflection.CustomAttributeTypedArgument> objeto na coleção representa o elemento correspondente da matriz.</span><span class="sxs-lookup"><span data-stu-id="0f720-111">Each <xref:System.Reflection.CustomAttributeTypedArgument> object in the collection represents the corresponding element of the array.</span></span>  
  
 <span data-ttu-id="0f720-112"><xref:System.Reflection.CustomAttributeData> pode ser usado no contexto de execução, bem como no contexto somente reflexão.</span><span class="sxs-lookup"><span data-stu-id="0f720-112"><xref:System.Reflection.CustomAttributeData> can be used in the execution context as well as in the reflection-only context.</span></span> <span data-ttu-id="0f720-113">Por exemplo, você talvez queira evitar carregar o assembly que contém o código para um atributo personalizado.</span><span class="sxs-lookup"><span data-stu-id="0f720-113">For example, you might want to avoid loading the assembly that contains the code for a custom attribute.</span></span> <span data-ttu-id="0f720-114">Usando o <xref:System.Reflection.CustomAttributeData> classe é diferente de usar métodos como <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType>:</span><span class="sxs-lookup"><span data-stu-id="0f720-114">Using the <xref:System.Reflection.CustomAttributeData> class is different from using methods like <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType>:</span></span>  
  
-   <span data-ttu-id="0f720-115">As propriedades e métodos de <xref:System.Reflection.CustomAttributeData> apenas fornecer os valores que foram especificados para a instância do atributo, não a semântica do construtor.</span><span class="sxs-lookup"><span data-stu-id="0f720-115">The properties and methods of <xref:System.Reflection.CustomAttributeData> only provide you with the values that were specified for the attribute instance, not the semantics of the constructor.</span></span> <span data-ttu-id="0f720-116">Por exemplo, um argumento de cadeia de caracteres de um atributo pode ser convertido internamente em alguma outra representação e retornado em uma forma canônica; ou uma propriedade pode ter efeitos colaterais quando o código do atributo real é executado.</span><span class="sxs-lookup"><span data-stu-id="0f720-116">For example, a string argument of an attribute might be converted internally to some other representation, and returned in a canonical form; or a property might have side effects when the actual attribute code is executed.</span></span>  
  
-   <span data-ttu-id="0f720-117">As propriedades e métodos de <xref:System.Reflection.CustomAttributeData> não permitem que você recupere os atributos personalizados herdados de classes base.</span><span class="sxs-lookup"><span data-stu-id="0f720-117">The properties and methods of <xref:System.Reflection.CustomAttributeData> do not allow you to retrieve the custom attributes inherited from base classes.</span></span>  
  
 <span data-ttu-id="0f720-118">Para criar instâncias do <xref:System.Reflection.CustomAttributeData> classe, use o `static` (`Shared` no Visual Basic) <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> métodos de fábrica.</span><span class="sxs-lookup"><span data-stu-id="0f720-118">To create instances of the <xref:System.Reflection.CustomAttributeData> class, use the `static` (`Shared` in Visual Basic) <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> factory methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0f720-119">O exemplo a seguir define um atributo personalizado com quatro construtores e quatro propriedades.</span><span class="sxs-lookup"><span data-stu-id="0f720-119">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="0f720-120">Duas propriedades são somente leitura e são definidas usando os parâmetros posicionais dos construtores.</span><span class="sxs-lookup"><span data-stu-id="0f720-120">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="0f720-121">As outras duas propriedades são de leitura/gravação e pode ser conjunto somente usando argumentos nomeado.</span><span class="sxs-lookup"><span data-stu-id="0f720-121">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="0f720-122">Uma propriedade posicional é uma matriz de cadeias de caracteres e uma propriedade nomeada é uma matriz de inteiros.</span><span class="sxs-lookup"><span data-stu-id="0f720-122">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="0f720-123">O atributo é aplicado ao assembly, a um tipo declarado no assembly, para um método do tipo e a um parâmetro do método.</span><span class="sxs-lookup"><span data-stu-id="0f720-123">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="0f720-124">Construtores diferentes são usados para esses casos.</span><span class="sxs-lookup"><span data-stu-id="0f720-124">Different constructors are used for these cases.</span></span> <span data-ttu-id="0f720-125">Quando executado, o assembly em si é carregado no contexto somente reflexão e exibe informações sobre os atributos personalizados que foram aplicados a ele e o tipo e os membros que ele contém.</span><span class="sxs-lookup"><span data-stu-id="0f720-125">When executed, the assembly loads itself into the reflection-only context and displays information about the custom attributes that were applied to it and to the type and members it contains.</span></span>  
  
 <span data-ttu-id="0f720-126">O atributo que é aplicado ao tipo demonstra as propriedades de matriz, com argumentos posicionais e nomeados.</span><span class="sxs-lookup"><span data-stu-id="0f720-126">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
    <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CustomAttributeData ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CustomAttributeData();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0f720-127">Inicializa uma nova instância da classe <see cref="T:System.Reflection.CustomAttributeData" />.</span><span class="sxs-lookup"><span data-stu-id="0f720-127">Initializes a new instance of the <see cref="T:System.Reflection.CustomAttributeData" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f720-128">Este construtor é chamado por classes derivadas durante a construção do <xref:System.Reflection.CustomAttributeData> objetos.</span><span class="sxs-lookup"><span data-stu-id="0f720-128">This constructor is invoked by derived classes during the construction of <xref:System.Reflection.CustomAttributeData> objects.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="0f720-129">Requer confiança total para o chamador imediato.</span><span class="sxs-lookup"><span data-stu-id="0f720-129">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="0f720-130">Este membro não pode ser usado pelo código transparente ou parcialmente confiável.</span><span class="sxs-lookup"><span data-stu-id="0f720-130">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="AttributeType">
      <MemberSignature Language="C#" Value="public Type AttributeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AttributeType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.CustomAttributeData.AttributeType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AttributeType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ AttributeType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AttributeType : Type" Usage="System.Reflection.CustomAttributeData.AttributeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0f720-131">Obtém o tipo do atributo.</span><span class="sxs-lookup"><span data-stu-id="0f720-131">Gets the type of the attribute.</span></span></summary>
        <value><span data-ttu-id="0f720-132">O tipo do atributo.</span><span class="sxs-lookup"><span data-stu-id="0f720-132">The type of the attribute.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Constructor">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.ConstructorInfo Constructor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.ConstructorInfo Constructor" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.CustomAttributeData.Constructor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Constructor As ConstructorInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::ConstructorInfo ^ Constructor { System::Reflection::ConstructorInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Constructor : System.Reflection.ConstructorInfo" Usage="System.Reflection.CustomAttributeData.Constructor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.ConstructorInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0f720-133">Obtém um objeto <see cref="T:System.Reflection.ConstructorInfo" /> que representa o construtor que teria inicializado o atributo personalizado.</span><span class="sxs-lookup"><span data-stu-id="0f720-133">Gets a <see cref="T:System.Reflection.ConstructorInfo" /> object that represents the constructor that would have initialized the custom attribute.</span></span></summary>
        <value><span data-ttu-id="0f720-134">Um objeto que representa o construtor que teria inicializado o atributo personalizado representado pela instância atual da classe <see cref="T:System.Reflection.CustomAttributeData" />.</span><span class="sxs-lookup"><span data-stu-id="0f720-134">An object that represents the constructor that would have initialized the custom attribute represented by the current instance of the <see cref="T:System.Reflection.CustomAttributeData" /> class.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f720-135">Se um tipo de atributo tem vários construtores, essa propriedade retorna somente o construtor particular que teria inicializado a instância de atributo representada pelo atual <xref:System.Reflection.CustomAttributeData> objeto.</span><span class="sxs-lookup"><span data-stu-id="0f720-135">If an attribute type has multiple constructors, this property returns only the particular constructor that would have initialized the attribute instance represented by the current <xref:System.Reflection.CustomAttributeData> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0f720-136">O exemplo a seguir define um atributo personalizado com quatro construtores e quatro propriedades.</span><span class="sxs-lookup"><span data-stu-id="0f720-136">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="0f720-137">Duas propriedades são somente leitura e são definidas usando os parâmetros posicionais dos construtores.</span><span class="sxs-lookup"><span data-stu-id="0f720-137">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="0f720-138">As outras duas propriedades são de leitura/gravação e pode ser conjunto somente usando argumentos nomeado.</span><span class="sxs-lookup"><span data-stu-id="0f720-138">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="0f720-139">Uma propriedade posicional é uma matriz de cadeias de caracteres e uma propriedade nomeada é uma matriz de inteiros.</span><span class="sxs-lookup"><span data-stu-id="0f720-139">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="0f720-140">O atributo é aplicado ao assembly, a um tipo declarado no assembly, para um método do tipo e a um parâmetro do método.</span><span class="sxs-lookup"><span data-stu-id="0f720-140">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="0f720-141">Construtores diferentes são usados para esses casos.</span><span class="sxs-lookup"><span data-stu-id="0f720-141">Different constructors are used for these cases.</span></span> <span data-ttu-id="0f720-142">Quando executado, o assembly em si é carregado no contexto somente reflexão e exibe os atributos personalizados.</span><span class="sxs-lookup"><span data-stu-id="0f720-142">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="0f720-143">O atributo que é aplicado ao tipo demonstra as propriedades de matriz, com argumentos posicionais e nomeados.</span><span class="sxs-lookup"><span data-stu-id="0f720-143">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="0f720-144">O <xref:System.Reflection.CustomAttributeData.Constructor%2A> propriedade é usada no `ShowAttributeData` método que exibe dados de atributo personalizado.</span><span class="sxs-lookup"><span data-stu-id="0f720-144">The <xref:System.Reflection.CustomAttributeData.Constructor%2A> property is used in the `ShowAttributeData` method that displays custom attribute data.</span></span> <span data-ttu-id="0f720-145">Neste exemplo de código, o <xref:System.Reflection.ConstructorInfo> retornados por essa propriedade é usada para exibir uma cadeia de caracteres de texto que descreve o construtor, demonstrando que a propriedade retorna o construtor que teria inicializado o atributo.</span><span class="sxs-lookup"><span data-stu-id="0f720-145">In this code example, the <xref:System.Reflection.ConstructorInfo> returned by this property is used to display a text string that describes the constructor, demonstrating that the property returns the constructor that would initialize the attribute.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
    <Member MemberName="ConstructorArguments">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeTypedArgument&gt; ConstructorArguments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;valuetype System.Reflection.CustomAttributeTypedArgument&gt; ConstructorArguments" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.CustomAttributeData.ConstructorArguments" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ConstructorArguments As IList(Of CustomAttributeTypedArgument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeTypedArgument&gt; ^ ConstructorArguments { System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeTypedArgument&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ConstructorArguments : System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeTypedArgument&gt;" Usage="System.Reflection.CustomAttributeData.ConstructorArguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeTypedArgument&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0f720-146">Obtém a lista de argumentos posicionais especificados para a instância de atributo representada pelo objeto <see cref="T:System.Reflection.CustomAttributeData" />.</span><span class="sxs-lookup"><span data-stu-id="0f720-146">Gets the list of positional arguments specified for the attribute instance represented by the <see cref="T:System.Reflection.CustomAttributeData" /> object.</span></span></summary>
        <value><span data-ttu-id="0f720-147">Uma coleção de estruturas que representa os argumentos posicionais especificados para a instância de atributo personalizado.</span><span class="sxs-lookup"><span data-stu-id="0f720-147">A collection of structures that represent the positional arguments specified for the custom attribute instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f720-148">Esse método obtém os argumentos posicionais que foram especificados para a instância do atributo personalizado sem executar qualquer código personalizado do atributo.</span><span class="sxs-lookup"><span data-stu-id="0f720-148">This method gets the positional arguments that were specified for the custom attribute instance without executing any of the custom attribute code.</span></span> <span data-ttu-id="0f720-149">Assim, podem ser usado no contexto somente reflexão.</span><span class="sxs-lookup"><span data-stu-id="0f720-149">Thus, it can be used in the reflection-only context.</span></span>  
  
 <span data-ttu-id="0f720-150">Use o <xref:System.Reflection.CustomAttributeData.NamedArguments%2A> método para obter os argumentos nomeados especificados para a instância de atributo.</span><span class="sxs-lookup"><span data-stu-id="0f720-150">Use the <xref:System.Reflection.CustomAttributeData.NamedArguments%2A> method to get the named arguments specified for the attribute instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0f720-151">O exemplo a seguir define um atributo personalizado com quatro construtores e quatro propriedades.</span><span class="sxs-lookup"><span data-stu-id="0f720-151">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="0f720-152">Duas propriedades são somente leitura e são definidas usando os parâmetros posicionais dos construtores.</span><span class="sxs-lookup"><span data-stu-id="0f720-152">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="0f720-153">As outras duas propriedades são de leitura/gravação e pode ser conjunto somente usando argumentos nomeado.</span><span class="sxs-lookup"><span data-stu-id="0f720-153">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="0f720-154">Uma propriedade posicional é uma matriz de cadeias de caracteres e uma propriedade nomeada é uma matriz de inteiros.</span><span class="sxs-lookup"><span data-stu-id="0f720-154">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="0f720-155">O atributo é aplicado ao assembly, a um tipo declarado no assembly, para um método do tipo e a um parâmetro do método.</span><span class="sxs-lookup"><span data-stu-id="0f720-155">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="0f720-156">Construtores diferentes são usados para esses casos.</span><span class="sxs-lookup"><span data-stu-id="0f720-156">Different constructors are used for these cases.</span></span> <span data-ttu-id="0f720-157">Quando executado, o assembly em si é carregado no contexto somente reflexão e exibe os atributos personalizados.</span><span class="sxs-lookup"><span data-stu-id="0f720-157">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="0f720-158">O atributo que é aplicado ao tipo demonstra as propriedades de matriz, com argumentos posicionais e nomeados.</span><span class="sxs-lookup"><span data-stu-id="0f720-158">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="0f720-159">O <xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A> propriedade é usada no `ShowAttributeData` método que exibe dados de atributo personalizado.</span><span class="sxs-lookup"><span data-stu-id="0f720-159">The <xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A> property is used in the `ShowAttributeData` method that displays custom attribute data.</span></span> <span data-ttu-id="0f720-160">Neste exemplo de código, essa propriedade é usada para exibir a lista de argumentos passados para o construtor que inicializado o atributo.</span><span class="sxs-lookup"><span data-stu-id="0f720-160">In this code example, this property is used to display the list of arguments passed to the constructor that initialized the attribute.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Reflection.CustomAttributeData.NamedArguments" />
        <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="customAttributeData.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="0f720-161">Um objeto a ser comparado com essa instância ou <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="0f720-161">An object to compare with this instance, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="0f720-162">Retorna um valor que indica se essa instância é igual a um objeto especificado.</span><span class="sxs-lookup"><span data-stu-id="0f720-162">Returns a value that indicates whether this instance is equal to a specified object.</span></span></summary>
        <returns><span data-ttu-id="0f720-163"><see langword="true" /> se <paramref name="obj" /> for igual a essa instância atual, caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0f720-163"><see langword="true" /> if <paramref name="obj" /> is equal to the current instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCustomAttributes">
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0f720-164">Retorna uma lista de objetos <see cref="T:System.Reflection.CustomAttributeData" /> que representam dados sobre os atributos que foram aplicados ao destino.</span><span class="sxs-lookup"><span data-stu-id="0f720-164">Returns a list of <see cref="T:System.Reflection.CustomAttributeData" /> objects representing data about the attributes that have been applied to the target.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt; GetCustomAttributes (System.Reflection.Assembly target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IList`1&lt;class System.Reflection.CustomAttributeData&gt; GetCustomAttributes(class System.Reflection.Assembly target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.Assembly)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (target As Assembly) As IList(Of CustomAttributeData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeData ^&gt; ^ GetCustomAttributes(System::Reflection::Assembly ^ target);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.Assembly -&gt; System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;" Usage="System.Reflection.CustomAttributeData.GetCustomAttributes target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Reflection.Assembly" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="0f720-165">O assembly cujos dados de atributo personalizado devem ser recuperados.</span><span class="sxs-lookup"><span data-stu-id="0f720-165">The assembly whose custom attribute data is to be retrieved.</span></span></param>
        <summary><span data-ttu-id="0f720-166">Retorna uma lista de objetos <see cref="T:System.Reflection.CustomAttributeData" /> que representam os dados sobre os atributos que foram aplicados ao assembly de destino.</span><span class="sxs-lookup"><span data-stu-id="0f720-166">Returns a list of <see cref="T:System.Reflection.CustomAttributeData" /> objects representing data about the attributes that have been applied to the target assembly.</span></span></summary>
        <returns><span data-ttu-id="0f720-167">Uma lista de objetos que representam dados sobre os atributos que foram aplicados ao assembly de destino.</span><span class="sxs-lookup"><span data-stu-id="0f720-167">A list of objects that represent data about the attributes that have been applied to the target assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f720-168">Esse método fornece uma alternativa para o <xref:System.Reflection.Assembly.GetCustomAttributes%2A> método sempre pode ser usado no contexto somente reflexão.</span><span class="sxs-lookup"><span data-stu-id="0f720-168">This method provides an alternative to the <xref:System.Reflection.Assembly.GetCustomAttributes%2A> method that can always be used in the Reflection-only context.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0f720-169">O exemplo a seguir define um atributo personalizado com quatro construtores e quatro propriedades.</span><span class="sxs-lookup"><span data-stu-id="0f720-169">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="0f720-170">Duas propriedades são somente leitura e são definidas usando os parâmetros posicionais dos construtores.</span><span class="sxs-lookup"><span data-stu-id="0f720-170">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="0f720-171">As outras duas propriedades são de leitura/gravação e pode ser conjunto somente usando argumentos nomeado.</span><span class="sxs-lookup"><span data-stu-id="0f720-171">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="0f720-172">Uma propriedade posicional é uma matriz de cadeias de caracteres e uma propriedade nomeada é uma matriz de inteiros.</span><span class="sxs-lookup"><span data-stu-id="0f720-172">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="0f720-173">O atributo é aplicado ao assembly, a um tipo declarado no assembly, para um método do tipo e a um parâmetro do método.</span><span class="sxs-lookup"><span data-stu-id="0f720-173">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="0f720-174">Construtores diferentes são usados para esses casos.</span><span class="sxs-lookup"><span data-stu-id="0f720-174">Different constructors are used for these cases.</span></span> <span data-ttu-id="0f720-175">Quando executado, o assembly em si é carregado no contexto somente reflexão e exibe os atributos personalizados.</span><span class="sxs-lookup"><span data-stu-id="0f720-175">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="0f720-176">O atributo que é aplicado ao tipo demonstra as propriedades de matriz, com argumentos posicionais e nomeados.</span><span class="sxs-lookup"><span data-stu-id="0f720-176">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="0f720-177">O <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> método é usado em `Main()` para obter os atributos personalizados aplicados ao assembly.</span><span class="sxs-lookup"><span data-stu-id="0f720-177">The <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> method is used in `Main()` to get the custom attributes applied to the assembly.</span></span> <span data-ttu-id="0f720-178">O valor de retorno do método é passado para o `ShowAttributeData` método.</span><span class="sxs-lookup"><span data-stu-id="0f720-178">The return value of the method is passed to the `ShowAttributeData` method.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0f720-179"><paramref name="target" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="0f720-179"><paramref name="target" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt; GetCustomAttributes (System.Reflection.MemberInfo target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IList`1&lt;class System.Reflection.CustomAttributeData&gt; GetCustomAttributes(class System.Reflection.MemberInfo target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.MemberInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (target As MemberInfo) As IList(Of CustomAttributeData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeData ^&gt; ^ GetCustomAttributes(System::Reflection::MemberInfo ^ target);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.MemberInfo -&gt; System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;" Usage="System.Reflection.CustomAttributeData.GetCustomAttributes target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Reflection.MemberInfo" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="0f720-180">O membro cujos dados de atributo devem ser recuperados.</span><span class="sxs-lookup"><span data-stu-id="0f720-180">The member whose attribute data is to be retrieved.</span></span></param>
        <summary><span data-ttu-id="0f720-181">Retorna uma lista de objetos <see cref="T:System.Reflection.CustomAttributeData" /> que representam dados sobre os atributos que foram aplicados ao membro de destino.</span><span class="sxs-lookup"><span data-stu-id="0f720-181">Returns a list of <see cref="T:System.Reflection.CustomAttributeData" /> objects representing data about the attributes that have been applied to the target member.</span></span></summary>
        <returns><span data-ttu-id="0f720-182">Uma lista de objetos que representa dados sobre os atributos que foram aplicados ao membro de destino.</span><span class="sxs-lookup"><span data-stu-id="0f720-182">A list of objects that represent data about the attributes that have been applied to the target member.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f720-183">Essa sobrecarga de método obtém dados de atributo personalizado para tipos, tipos aninhados e membros de tipo, porque o <xref:System.Type> e as classes na <xref:System.Reflection> namespace que representam todos os derivam de membros de tipo <xref:System.Reflection.MemberInfo>.</span><span class="sxs-lookup"><span data-stu-id="0f720-183">This method overload gets custom attribute data for types, nested types, and type members, because the <xref:System.Type> class and the classes in the <xref:System.Reflection> namespace that represent type members all derive from <xref:System.Reflection.MemberInfo>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0f720-184">O exemplo a seguir define um atributo personalizado com quatro construtores e quatro propriedades.</span><span class="sxs-lookup"><span data-stu-id="0f720-184">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="0f720-185">Duas propriedades são somente leitura e são definidas usando os parâmetros posicionais dos construtores.</span><span class="sxs-lookup"><span data-stu-id="0f720-185">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="0f720-186">As outras duas propriedades são de leitura/gravação e pode ser conjunto somente usando argumentos nomeado.</span><span class="sxs-lookup"><span data-stu-id="0f720-186">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="0f720-187">Uma propriedade posicional é uma matriz de cadeias de caracteres e uma propriedade nomeada é uma matriz de inteiros.</span><span class="sxs-lookup"><span data-stu-id="0f720-187">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="0f720-188">O atributo é aplicado ao assembly, a um tipo declarado no assembly, para um método do tipo e a um parâmetro do método.</span><span class="sxs-lookup"><span data-stu-id="0f720-188">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="0f720-189">Construtores diferentes são usados para esses casos.</span><span class="sxs-lookup"><span data-stu-id="0f720-189">Different constructors are used for these cases.</span></span> <span data-ttu-id="0f720-190">Quando executado, o assembly em si é carregado no contexto somente reflexão e exibe os atributos personalizados.</span><span class="sxs-lookup"><span data-stu-id="0f720-190">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="0f720-191">O atributo que é aplicado ao tipo demonstra as propriedades de matriz, com argumentos posicionais e nomeados.</span><span class="sxs-lookup"><span data-stu-id="0f720-191">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="0f720-192">O <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> método é usado em `Main()` para obter os atributos personalizados que foram aplicados a um tipo e a um método de teste (<xref:System.Type> deriva <xref:System.Reflection.MemberInfo>).</span><span class="sxs-lookup"><span data-stu-id="0f720-192">The <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> method is used in `Main()` to get the custom attributes that were applied to a type and to a test method (<xref:System.Type> derives from <xref:System.Reflection.MemberInfo>).</span></span> <span data-ttu-id="0f720-193">O valor de retorno <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> é passado para o `ShowAttributeData` método.</span><span class="sxs-lookup"><span data-stu-id="0f720-193">The return value of <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> is passed to the `ShowAttributeData` method.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="Overload:System.Reflection.MemberInfo.GetCustomAttributes" />
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0f720-194"><paramref name="target" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="0f720-194"><paramref name="target" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt; GetCustomAttributes (System.Reflection.Module target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IList`1&lt;class System.Reflection.CustomAttributeData&gt; GetCustomAttributes(class System.Reflection.Module target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.Module)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (target As Module) As IList(Of CustomAttributeData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeData ^&gt; ^ GetCustomAttributes(System::Reflection::Module ^ target);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.Module -&gt; System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;" Usage="System.Reflection.CustomAttributeData.GetCustomAttributes target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Reflection.Module" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="0f720-195">O módulo cujos dados de atributo personalizado devem ser recuperados.</span><span class="sxs-lookup"><span data-stu-id="0f720-195">The module whose custom attribute data is to be retrieved.</span></span></param>
        <summary><span data-ttu-id="0f720-196">Retorna uma lista de objetos <see cref="T:System.Reflection.CustomAttributeData" /> que representam dados sobre os atributos que foram aplicados ao módulo de destino.</span><span class="sxs-lookup"><span data-stu-id="0f720-196">Returns a list of <see cref="T:System.Reflection.CustomAttributeData" /> objects representing data about the attributes that have been applied to the target module.</span></span></summary>
        <returns><span data-ttu-id="0f720-197">Uma lista de objetos que representa dados sobre os atributos que foram aplicados ao módulo de destino.</span><span class="sxs-lookup"><span data-stu-id="0f720-197">A list of objects that represent data about the attributes that have been applied to the target module.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0f720-198"><paramref name="target" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="0f720-198"><paramref name="target" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt; GetCustomAttributes (System.Reflection.ParameterInfo target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IList`1&lt;class System.Reflection.CustomAttributeData&gt; GetCustomAttributes(class System.Reflection.ParameterInfo target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.ParameterInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (target As ParameterInfo) As IList(Of CustomAttributeData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeData ^&gt; ^ GetCustomAttributes(System::Reflection::ParameterInfo ^ target);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.ParameterInfo -&gt; System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;" Usage="System.Reflection.CustomAttributeData.GetCustomAttributes target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Reflection.ParameterInfo" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="0f720-199">O parâmetro cujos dados de atributo devem ser recuperados.</span><span class="sxs-lookup"><span data-stu-id="0f720-199">The parameter whose attribute data is to be retrieved.</span></span></param>
        <summary><span data-ttu-id="0f720-200">Retorna uma lista de objetos <see cref="T:System.Reflection.CustomAttributeData" /> que representam os dados sobre os atributos que foram aplicados ao parâmetro de destino.</span><span class="sxs-lookup"><span data-stu-id="0f720-200">Returns a list of <see cref="T:System.Reflection.CustomAttributeData" /> objects representing data about the attributes that have been applied to the target parameter.</span></span></summary>
        <returns><span data-ttu-id="0f720-201">Uma lista de objetos que representam dados sobre os atributos que foram aplicados ao parâmetro de destino.</span><span class="sxs-lookup"><span data-stu-id="0f720-201">A list of objects that represent data about the attributes that have been applied to the target parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f720-202">Esse método fornece uma alternativa para o <xref:System.Reflection.ParameterInfo.GetCustomAttributes%2A> método sempre pode ser usado no contexto somente reflexão.</span><span class="sxs-lookup"><span data-stu-id="0f720-202">This method provides an alternative to the <xref:System.Reflection.ParameterInfo.GetCustomAttributes%2A> method that can always be used in the Reflection-only context.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0f720-203">O exemplo a seguir define um atributo personalizado com quatro construtores e quatro propriedades.</span><span class="sxs-lookup"><span data-stu-id="0f720-203">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="0f720-204">Duas propriedades são somente leitura e são definidas usando os parâmetros posicionais dos construtores.</span><span class="sxs-lookup"><span data-stu-id="0f720-204">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="0f720-205">As outras duas propriedades são de leitura/gravação e pode ser conjunto somente usando argumentos nomeado.</span><span class="sxs-lookup"><span data-stu-id="0f720-205">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="0f720-206">Uma propriedade posicional é uma matriz de cadeias de caracteres e uma propriedade nomeada é uma matriz de inteiros.</span><span class="sxs-lookup"><span data-stu-id="0f720-206">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="0f720-207">O atributo é aplicado ao assembly, a um tipo declarado no assembly, para um método do tipo e a um parâmetro do método.</span><span class="sxs-lookup"><span data-stu-id="0f720-207">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="0f720-208">Construtores diferentes são usados para esses casos.</span><span class="sxs-lookup"><span data-stu-id="0f720-208">Different constructors are used for these cases.</span></span> <span data-ttu-id="0f720-209">Quando executado, o assembly em si é carregado no contexto somente reflexão e exibe os atributos personalizados.</span><span class="sxs-lookup"><span data-stu-id="0f720-209">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="0f720-210">O atributo que é aplicado ao tipo demonstra as propriedades de matriz, com argumentos posicionais e nomeados.</span><span class="sxs-lookup"><span data-stu-id="0f720-210">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="0f720-211">O <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> método é usado em `Main()` para recuperar os atributos personalizados aplicados a um parâmetro de um método de teste.</span><span class="sxs-lookup"><span data-stu-id="0f720-211">The <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> method is used in `Main()` to retrieve the custom attributes applied to a parameter of a test method.</span></span> <span data-ttu-id="0f720-212">O valor de retorno <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> é passado para o `ShowAttributeData` método.</span><span class="sxs-lookup"><span data-stu-id="0f720-212">The return value of <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> is passed to the `ShowAttributeData` method.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0f720-213"><paramref name="target" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="0f720-213"><paramref name="target" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="customAttributeData.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0f720-214">Serve como uma função de hash para um tipo específico.</span><span class="sxs-lookup"><span data-stu-id="0f720-214">Serves as a hash function for a particular type.</span></span></summary>
        <returns><span data-ttu-id="0f720-215">Um código hash do <see cref="T:System.Object" /> atual.</span><span class="sxs-lookup"><span data-stu-id="0f720-215">A hash code for the current <see cref="T:System.Object" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Object.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="NamedArguments">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeNamedArgument&gt; NamedArguments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;valuetype System.Reflection.CustomAttributeNamedArgument&gt; NamedArguments" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.CustomAttributeData.NamedArguments" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property NamedArguments As IList(Of CustomAttributeNamedArgument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeNamedArgument&gt; ^ NamedArguments { System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeNamedArgument&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NamedArguments : System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeNamedArgument&gt;" Usage="System.Reflection.CustomAttributeData.NamedArguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeNamedArgument&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0f720-216">Obtém a lista de argumentos nomeados especificados para a instância de atributo representada pelo objeto <see cref="T:System.Reflection.CustomAttributeData" />.</span><span class="sxs-lookup"><span data-stu-id="0f720-216">Gets the list of named arguments specified for the attribute instance represented by the <see cref="T:System.Reflection.CustomAttributeData" /> object.</span></span></summary>
        <value><span data-ttu-id="0f720-217">Uma coleção de estruturas que representam os argumentos nomeados especificados para a instância de atributo personalizado.</span><span class="sxs-lookup"><span data-stu-id="0f720-217">A collection of structures that represent the named arguments specified for the custom attribute instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f720-218">Esse método obtém os argumentos nomeados que foram especificados para a instância do atributo personalizado sem executar qualquer código personalizado do atributo.</span><span class="sxs-lookup"><span data-stu-id="0f720-218">This method gets the named arguments that were specified for the custom attribute instance without executing any of the custom attribute code.</span></span> <span data-ttu-id="0f720-219">Assim, podem ser usado no contexto somente reflexão.</span><span class="sxs-lookup"><span data-stu-id="0f720-219">Thus, it can be used in the Reflection-only context.</span></span>  
  
 <span data-ttu-id="0f720-220">A lista retornada contém somente os argumentos nomeados que foram especificados para a instância do atributo.</span><span class="sxs-lookup"><span data-stu-id="0f720-220">The list that is returned contains only the named arguments that were specified for the attribute instance.</span></span>  
  
 <span data-ttu-id="0f720-221">Use o <xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A> método para obter os argumentos posicionais especificados para a instância do atributo.</span><span class="sxs-lookup"><span data-stu-id="0f720-221">Use the <xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A> method to get the positional arguments that were specified for the attribute instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0f720-222">O exemplo a seguir define um atributo personalizado com quatro construtores e quatro propriedades.</span><span class="sxs-lookup"><span data-stu-id="0f720-222">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="0f720-223">Duas propriedades são somente leitura e são definidas usando os parâmetros posicionais dos construtores.</span><span class="sxs-lookup"><span data-stu-id="0f720-223">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="0f720-224">As outras duas propriedades são de leitura/gravação e pode ser conjunto somente usando argumentos nomeado.</span><span class="sxs-lookup"><span data-stu-id="0f720-224">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="0f720-225">Uma propriedade posicional é uma matriz de cadeias de caracteres e uma propriedade nomeada é uma matriz de inteiros.</span><span class="sxs-lookup"><span data-stu-id="0f720-225">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="0f720-226">O atributo é aplicado ao assembly, a um tipo declarado no assembly, para um método do tipo e a um parâmetro do método.</span><span class="sxs-lookup"><span data-stu-id="0f720-226">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="0f720-227">Construtores diferentes são usados para esses casos.</span><span class="sxs-lookup"><span data-stu-id="0f720-227">Different constructors are used for these cases.</span></span> <span data-ttu-id="0f720-228">Quando executado, o assembly em si é carregado no contexto somente reflexão e exibe os atributos personalizados.</span><span class="sxs-lookup"><span data-stu-id="0f720-228">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="0f720-229">O atributo que é aplicado ao tipo demonstra as propriedades de matriz, com argumentos posicionais e nomeados.</span><span class="sxs-lookup"><span data-stu-id="0f720-229">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="0f720-230">O <xref:System.Reflection.CustomAttributeData.NamedArguments%2A> propriedade é usada no `ShowAttributeData` método que exibe dados de atributo personalizado.</span><span class="sxs-lookup"><span data-stu-id="0f720-230">The <xref:System.Reflection.CustomAttributeData.NamedArguments%2A> property is used in the `ShowAttributeData` method that displays custom attribute data.</span></span> <span data-ttu-id="0f720-231">Neste exemplo de código, essa propriedade é usada para exibir a lista de argumentos nomeados especificados para o atributo.</span><span class="sxs-lookup"><span data-stu-id="0f720-231">In this code example, this property is used to display the list of named arguments specified for the attribute.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Reflection.CustomAttributeData.ConstructorArguments" />
        <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="customAttributeData.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0f720-232">Retorna uma representação de cadeia de caracteres do atributo personalizado.</span><span class="sxs-lookup"><span data-stu-id="0f720-232">Returns a string representation of the custom attribute.</span></span></summary>
        <returns><span data-ttu-id="0f720-233">Um valor de cadeia de caracteres que representa um atributo personalizado.</span><span class="sxs-lookup"><span data-stu-id="0f720-233">A string value that represents the custom attribute.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f720-234">O valor de cadeia de caracteres inclui o tipo de atributo, os parâmetros de atributo e os parâmetros nomeados.</span><span class="sxs-lookup"><span data-stu-id="0f720-234">The string value includes the attribute type, the attribute parameters, and the named parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0f720-235">O exemplo a seguir define um atributo personalizado com quatro construtores e quatro propriedades.</span><span class="sxs-lookup"><span data-stu-id="0f720-235">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="0f720-236">Duas propriedades são somente leitura e são definidas usando os parâmetros posicionais dos construtores.</span><span class="sxs-lookup"><span data-stu-id="0f720-236">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="0f720-237">As outras duas propriedades são de leitura/gravação e pode ser conjunto somente usando argumentos nomeado.</span><span class="sxs-lookup"><span data-stu-id="0f720-237">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="0f720-238">Uma propriedade posicional é uma matriz de cadeias de caracteres e uma propriedade nomeada é uma matriz de inteiros.</span><span class="sxs-lookup"><span data-stu-id="0f720-238">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="0f720-239">O atributo é aplicado ao assembly, a um tipo declarado no assembly, para um método do tipo e a um parâmetro do método.</span><span class="sxs-lookup"><span data-stu-id="0f720-239">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="0f720-240">Construtores diferentes são usados para esses casos.</span><span class="sxs-lookup"><span data-stu-id="0f720-240">Different constructors are used for these cases.</span></span> <span data-ttu-id="0f720-241">Quando executado, o assembly em si é carregado no contexto somente reflexão e exibe os atributos personalizados.</span><span class="sxs-lookup"><span data-stu-id="0f720-241">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="0f720-242">O atributo que é aplicado ao tipo demonstra as propriedades de matriz, com argumentos posicionais e nomeados.</span><span class="sxs-lookup"><span data-stu-id="0f720-242">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="0f720-243">Neste exemplo, o <xref:System.Reflection.CustomAttributeData.ToString%2A> método é usado o `ShowAttributeData` método para identificar o atributo cujos dados estão sendo exibidos.</span><span class="sxs-lookup"><span data-stu-id="0f720-243">In this example, the <xref:System.Reflection.CustomAttributeData.ToString%2A> method is used in the `ShowAttributeData` method, to identify the attribute whose data is being displayed.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>