<Type Name="CustomAttributeData" FullName="System.Reflection.CustomAttributeData">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b81fc715a47a4fd76280f78c4364218e82b0390c" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CustomAttributeData" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit CustomAttributeData extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.CustomAttributeData" />
  <TypeSignature Language="VB.NET" Value="Public Class CustomAttributeData" />
  <TypeSignature Language="C++ CLI" Value="public ref class CustomAttributeData" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="b5729-101">Fornece acesso aos dados de atributo personalizado para assemblies, módulos, tipos, membros e parâmetros que são carregados no contexto exclusivo de reflexão.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b5729-101">Provides access to custom attribute data for assemblies, modules, types, members and parameters that are loaded into the reflection-only context.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5729-102">Código que está sendo examinado no contexto exclusivo de reflexão não pode ser executado, portanto, sempre não é possível examinar os atributos personalizados ao criar instâncias de-las e, em seguida, examinar suas propriedades, usando métodos como <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType>, <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=nameWithType>e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="b5729-102">Code that is being examined in the reflection-only context cannot be executed, so it is not always possible to examine custom attributes by creating instances of them and then examining their properties, using methods like <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType>, <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=nameWithType>, and so on.</span></span> <span data-ttu-id="b5729-103">Se o código para o tipo de atributo é carregado no contexto exclusivo de reflexão, ele não pode ser executado.</span><span class="sxs-lookup"><span data-stu-id="b5729-103">If the code for the attribute type itself is loaded into the reflection-only context, it cannot be executed.</span></span>  
  
 <span data-ttu-id="b5729-104">O <xref:System.Reflection.CustomAttributeData> classe permite o exame dos atributos personalizados no contexto exclusivo de reflexão, fornecendo uma abstração para atributos.</span><span class="sxs-lookup"><span data-stu-id="b5729-104">The <xref:System.Reflection.CustomAttributeData> class allows examination of custom attributes in the reflection-only context by providing an abstraction for attributes.</span></span> <span data-ttu-id="b5729-105">Os membros dessa classe podem ser usados para obter os argumentos posicionais e denominados argumentos do atributo.</span><span class="sxs-lookup"><span data-stu-id="b5729-105">The members of this class can be used to obtain the positional arguments and named arguments of the attribute.</span></span> <span data-ttu-id="b5729-106">Use o <xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A> propriedade para obter uma lista de <xref:System.Reflection.CustomAttributeTypedArgument> estruturas que representam os argumentos posicionais e usam o <xref:System.Reflection.CustomAttributeData.NamedArguments%2A> propriedade para obter uma lista de <xref:System.Reflection.CustomAttributeNamedArgument> estruturas que representam os argumentos nomeados.</span><span class="sxs-lookup"><span data-stu-id="b5729-106">Use the <xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A> property to get a list of <xref:System.Reflection.CustomAttributeTypedArgument> structures that represent the positional arguments, and use the <xref:System.Reflection.CustomAttributeData.NamedArguments%2A> property to get a list of <xref:System.Reflection.CustomAttributeNamedArgument> structures that represent the named arguments.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b5729-107">O <xref:System.Reflection.CustomAttributeNamedArgument> estrutura só fornece informações sobre a propriedade do atributo usada para obter e definir o valor do argumento.</span><span class="sxs-lookup"><span data-stu-id="b5729-107">The <xref:System.Reflection.CustomAttributeNamedArgument> structure only provides information about the attribute property used to get and set the argument value.</span></span> <span data-ttu-id="b5729-108">Para obter o tipo e o valor do argumento, use o <xref:System.Reflection.CustomAttributeNamedArgument.TypedValue%2A?displayProperty=nameWithType> propriedade para obter um <xref:System.Reflection.CustomAttributeTypedArgument> estrutura.</span><span class="sxs-lookup"><span data-stu-id="b5729-108">To obtain the type and value of the argument, use the <xref:System.Reflection.CustomAttributeNamedArgument.TypedValue%2A?displayProperty=nameWithType> property to obtain a <xref:System.Reflection.CustomAttributeTypedArgument> structure.</span></span>  
  
 <span data-ttu-id="b5729-109">Quando você tiver um <xref:System.Reflection.CustomAttributeTypedArgument> estrutura para um argumento nomeado ou posicional, use o <xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A?displayProperty=nameWithType> propriedade para obter o tipo e o <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A?displayProperty=nameWithType> propriedade para obter o valor.</span><span class="sxs-lookup"><span data-stu-id="b5729-109">When you have a <xref:System.Reflection.CustomAttributeTypedArgument> structure for an argument, whether named or positional, use the <xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A?displayProperty=nameWithType> property to get the type and the <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A?displayProperty=nameWithType> property to get the value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b5729-110">Para um argumento de matriz, o <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A?displayProperty=nameWithType> propriedade retorna um genérico <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> de <xref:System.Reflection.CustomAttributeTypedArgument> objetos.</span><span class="sxs-lookup"><span data-stu-id="b5729-110">For an array argument, the <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A?displayProperty=nameWithType> property returns a generic <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> of <xref:System.Reflection.CustomAttributeTypedArgument> objects.</span></span> <span data-ttu-id="b5729-111">Cada <xref:System.Reflection.CustomAttributeTypedArgument> objeto na coleção representa o elemento correspondente da matriz.</span><span class="sxs-lookup"><span data-stu-id="b5729-111">Each <xref:System.Reflection.CustomAttributeTypedArgument> object in the collection represents the corresponding element of the array.</span></span>  
  
 <span data-ttu-id="b5729-112"><xref:System.Reflection.CustomAttributeData> pode ser usado no contexto de execução, bem como o contexto exclusivo de reflexão.</span><span class="sxs-lookup"><span data-stu-id="b5729-112"><xref:System.Reflection.CustomAttributeData> can be used in the execution context as well as in the reflection-only context.</span></span> <span data-ttu-id="b5729-113">Por exemplo, você talvez queira evitar carregar o assembly que contém o código para um atributo personalizado.</span><span class="sxs-lookup"><span data-stu-id="b5729-113">For example, you might want to avoid loading the assembly that contains the code for a custom attribute.</span></span> <span data-ttu-id="b5729-114">Usando o <xref:System.Reflection.CustomAttributeData> classe é diferente de usar os métodos, como <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType>:</span><span class="sxs-lookup"><span data-stu-id="b5729-114">Using the <xref:System.Reflection.CustomAttributeData> class is different from using methods like <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType>:</span></span>  
  
-   <span data-ttu-id="b5729-115">As propriedades e métodos de <xref:System.Reflection.CustomAttributeData> apenas fornecer os valores que foram especificados para a instância do atributo, não a semântica do construtor.</span><span class="sxs-lookup"><span data-stu-id="b5729-115">The properties and methods of <xref:System.Reflection.CustomAttributeData> only provide you with the values that were specified for the attribute instance, not the semantics of the constructor.</span></span> <span data-ttu-id="b5729-116">Por exemplo, um argumento de cadeia de caracteres de um atributo pode ser convertido internamente em alguma outra representação e retornado em uma forma canônica; ou uma propriedade pode ter efeitos colaterais quando o código do atributo real é executado.</span><span class="sxs-lookup"><span data-stu-id="b5729-116">For example, a string argument of an attribute might be converted internally to some other representation, and returned in a canonical form; or a property might have side effects when the actual attribute code is executed.</span></span>  
  
-   <span data-ttu-id="b5729-117">As propriedades e métodos de <xref:System.Reflection.CustomAttributeData> não permitem recuperar os atributos personalizados herdados de classes base.</span><span class="sxs-lookup"><span data-stu-id="b5729-117">The properties and methods of <xref:System.Reflection.CustomAttributeData> do not allow you to retrieve the custom attributes inherited from base classes.</span></span>  
  
 <span data-ttu-id="b5729-118">Para criar instâncias da <xref:System.Reflection.CustomAttributeData> classe, use o `static` (`Shared` no Visual Basic) <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> métodos de fábrica.</span><span class="sxs-lookup"><span data-stu-id="b5729-118">To create instances of the <xref:System.Reflection.CustomAttributeData> class, use the `static` (`Shared` in Visual Basic) <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> factory methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b5729-119">O exemplo a seguir define um atributo personalizado com quatro construtores e quatro propriedades.</span><span class="sxs-lookup"><span data-stu-id="b5729-119">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="b5729-120">Duas propriedades são somente leitura e são definidas usando os parâmetros posicionais dos construtores.</span><span class="sxs-lookup"><span data-stu-id="b5729-120">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="b5729-121">As duas propriedades são somente leitura, e pode ser conjunto somente usando argumentos nomeado.</span><span class="sxs-lookup"><span data-stu-id="b5729-121">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="b5729-122">Uma propriedade de posição é uma matriz de cadeias de caracteres e uma propriedade nomeada é uma matriz de inteiros.</span><span class="sxs-lookup"><span data-stu-id="b5729-122">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="b5729-123">O atributo é aplicado ao assembly, a um tipo declarado no assembly, para um método do tipo e a um parâmetro do método.</span><span class="sxs-lookup"><span data-stu-id="b5729-123">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="b5729-124">Construtores diferentes são usados para esses casos.</span><span class="sxs-lookup"><span data-stu-id="b5729-124">Different constructors are used for these cases.</span></span> <span data-ttu-id="b5729-125">Quando executado, o assembly carrega em si no contexto exclusivo de reflexão e exibe informações sobre os atributos personalizados que foram aplicadas a ele e o tipo e os membros que ele contém.</span><span class="sxs-lookup"><span data-stu-id="b5729-125">When executed, the assembly loads itself into the reflection-only context and displays information about the custom attributes that were applied to it and to the type and members it contains.</span></span>  
  
 <span data-ttu-id="b5729-126">O atributo é aplicado ao tipo demonstra as propriedades de matriz, com argumentos posicionais e nomeadas.</span><span class="sxs-lookup"><span data-stu-id="b5729-126">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
    <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CustomAttributeData ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CustomAttributeData();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b5729-127">Inicializa uma nova instância da classe <see cref="T:System.Reflection.CustomAttributeData" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5729-127">Initializes a new instance of the <see cref="T:System.Reflection.CustomAttributeData" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5729-128">Este construtor é chamado por classes derivadas durante a construção do <xref:System.Reflection.CustomAttributeData> objetos.</span><span class="sxs-lookup"><span data-stu-id="b5729-128">This constructor is invoked by derived classes during the construction of <xref:System.Reflection.CustomAttributeData> objects.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="b5729-129">Requer confiança total para o chamador imediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5729-129">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="b5729-130">Este membro não pode ser usado pelo código transparente ou parcialmente confiável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5729-130">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AttributeType">
      <MemberSignature Language="C#" Value="public Type AttributeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AttributeType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.CustomAttributeData.AttributeType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AttributeType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ AttributeType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b5729-131">Obtém o tipo do atributo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5729-131">Gets the type of the attribute.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b5729-132">O tipo do atributo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5729-132">The type of the attribute.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Constructor">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.ConstructorInfo Constructor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.ConstructorInfo Constructor" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.CustomAttributeData.Constructor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Constructor As ConstructorInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::ConstructorInfo ^ Constructor { System::Reflection::ConstructorInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.ConstructorInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b5729-133">Obtém um objeto <see cref="T:System.Reflection.ConstructorInfo" /> que representa o construtor que teria inicializado o atributo personalizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5729-133">Gets a <see cref="T:System.Reflection.ConstructorInfo" /> object that represents the constructor that would have initialized the custom attribute.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b5729-134">Um objeto que representa o construtor que teria inicializado o atributo personalizado representado pela instância atual da classe <see cref="T:System.Reflection.CustomAttributeData" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5729-134">An object that represents the constructor that would have initialized the custom attribute represented by the current instance of the <see cref="T:System.Reflection.CustomAttributeData" /> class.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5729-135">Se um tipo de atributo tem vários construtores, essa propriedade retorna apenas o construtor específico que poderia ter inicializado a instância de atributo representada pelo atual <xref:System.Reflection.CustomAttributeData> objeto.</span><span class="sxs-lookup"><span data-stu-id="b5729-135">If an attribute type has multiple constructors, this property returns only the particular constructor that would have initialized the attribute instance represented by the current <xref:System.Reflection.CustomAttributeData> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b5729-136">O exemplo a seguir define um atributo personalizado com quatro construtores e quatro propriedades.</span><span class="sxs-lookup"><span data-stu-id="b5729-136">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="b5729-137">Duas propriedades são somente leitura e são definidas usando os parâmetros posicionais dos construtores.</span><span class="sxs-lookup"><span data-stu-id="b5729-137">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="b5729-138">As duas propriedades são somente leitura, e pode ser conjunto somente usando argumentos nomeado.</span><span class="sxs-lookup"><span data-stu-id="b5729-138">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="b5729-139">Uma propriedade de posição é uma matriz de cadeias de caracteres e uma propriedade nomeada é uma matriz de inteiros.</span><span class="sxs-lookup"><span data-stu-id="b5729-139">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="b5729-140">O atributo é aplicado ao assembly, a um tipo declarado no assembly, para um método do tipo e a um parâmetro do método.</span><span class="sxs-lookup"><span data-stu-id="b5729-140">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="b5729-141">Construtores diferentes são usados para esses casos.</span><span class="sxs-lookup"><span data-stu-id="b5729-141">Different constructors are used for these cases.</span></span> <span data-ttu-id="b5729-142">Quando executado, o assembly carrega em si no contexto exclusivo de reflexão e exibe os atributos personalizados.</span><span class="sxs-lookup"><span data-stu-id="b5729-142">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="b5729-143">O atributo é aplicado ao tipo demonstra as propriedades de matriz, com argumentos posicionais e nomeadas.</span><span class="sxs-lookup"><span data-stu-id="b5729-143">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="b5729-144">O <xref:System.Reflection.CustomAttributeData.Constructor%2A> propriedade é usada a `ShowAttributeData` método que exibe dados de atributo personalizado.</span><span class="sxs-lookup"><span data-stu-id="b5729-144">The <xref:System.Reflection.CustomAttributeData.Constructor%2A> property is used in the `ShowAttributeData` method that displays custom attribute data.</span></span> <span data-ttu-id="b5729-145">Neste exemplo de código, o <xref:System.Reflection.ConstructorInfo> retornados por essa propriedade é usada para exibir uma cadeia de caracteres de texto que descreve o construtor, demonstrando que a propriedade retorna o construtor que seria inicializar o atributo.</span><span class="sxs-lookup"><span data-stu-id="b5729-145">In this code example, the <xref:System.Reflection.ConstructorInfo> returned by this property is used to display a text string that describes the constructor, demonstrating that the property returns the constructor that would initialize the attribute.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
    <Member MemberName="ConstructorArguments">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeTypedArgument&gt; ConstructorArguments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;valuetype System.Reflection.CustomAttributeTypedArgument&gt; ConstructorArguments" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.CustomAttributeData.ConstructorArguments" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ConstructorArguments As IList(Of CustomAttributeTypedArgument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeTypedArgument&gt; ^ ConstructorArguments { System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeTypedArgument&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeTypedArgument&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b5729-146">Obtém a lista de argumentos posicionais especificados para a instância de atributo representada pelo objeto <see cref="T:System.Reflection.CustomAttributeData" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5729-146">Gets the list of positional arguments specified for the attribute instance represented by the <see cref="T:System.Reflection.CustomAttributeData" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b5729-147">Uma coleção de estruturas que representa os argumentos posicionais especificados para a instância de atributo personalizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5729-147">A collection of structures that represent the positional arguments specified for the custom attribute instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5729-148">Esse método obtém os argumentos posicionais que foram especificados para a instância do atributo personalizado sem executar qualquer código personalizado do atributo.</span><span class="sxs-lookup"><span data-stu-id="b5729-148">This method gets the positional arguments that were specified for the custom attribute instance without executing any of the custom attribute code.</span></span> <span data-ttu-id="b5729-149">Portanto, ele pode ser usado no contexto exclusivo de reflexão.</span><span class="sxs-lookup"><span data-stu-id="b5729-149">Thus, it can be used in the reflection-only context.</span></span>  
  
 <span data-ttu-id="b5729-150">Use o <xref:System.Reflection.CustomAttributeData.NamedArguments%2A> método para obter os argumentos nomeados especificados para a instância do atributo.</span><span class="sxs-lookup"><span data-stu-id="b5729-150">Use the <xref:System.Reflection.CustomAttributeData.NamedArguments%2A> method to get the named arguments specified for the attribute instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b5729-151">O exemplo a seguir define um atributo personalizado com quatro construtores e quatro propriedades.</span><span class="sxs-lookup"><span data-stu-id="b5729-151">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="b5729-152">Duas propriedades são somente leitura e são definidas usando os parâmetros posicionais dos construtores.</span><span class="sxs-lookup"><span data-stu-id="b5729-152">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="b5729-153">As duas propriedades são somente leitura, e pode ser conjunto somente usando argumentos nomeado.</span><span class="sxs-lookup"><span data-stu-id="b5729-153">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="b5729-154">Uma propriedade de posição é uma matriz de cadeias de caracteres e uma propriedade nomeada é uma matriz de inteiros.</span><span class="sxs-lookup"><span data-stu-id="b5729-154">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="b5729-155">O atributo é aplicado ao assembly, a um tipo declarado no assembly, para um método do tipo e a um parâmetro do método.</span><span class="sxs-lookup"><span data-stu-id="b5729-155">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="b5729-156">Construtores diferentes são usados para esses casos.</span><span class="sxs-lookup"><span data-stu-id="b5729-156">Different constructors are used for these cases.</span></span> <span data-ttu-id="b5729-157">Quando executado, o assembly carrega em si no contexto exclusivo de reflexão e exibe os atributos personalizados.</span><span class="sxs-lookup"><span data-stu-id="b5729-157">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="b5729-158">O atributo é aplicado ao tipo demonstra as propriedades de matriz, com argumentos posicionais e nomeadas.</span><span class="sxs-lookup"><span data-stu-id="b5729-158">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="b5729-159">O <xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A> propriedade é usada a `ShowAttributeData` método que exibe dados de atributo personalizado.</span><span class="sxs-lookup"><span data-stu-id="b5729-159">The <xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A> property is used in the `ShowAttributeData` method that displays custom attribute data.</span></span> <span data-ttu-id="b5729-160">Neste exemplo de código, essa propriedade é usada para exibir a lista de argumentos passados para o construtor que inicializar o atributo.</span><span class="sxs-lookup"><span data-stu-id="b5729-160">In this code example, this property is used to display the list of arguments passed to the constructor that initialized the attribute.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Reflection.CustomAttributeData.NamedArguments" />
        <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="b5729-161">Um objeto a ser comparado com essa instância ou <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5729-161">An object to compare with this instance, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b5729-162">Retorna um valor que indica se essa instância é igual a um objeto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5729-162">Returns a value that indicates whether this instance is equal to a specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b5729-163">
            <see langword="true" /> se <paramref name="obj" /> for igual a essa instância atual, caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5729-163">
              <see langword="true" /> if <paramref name="obj" /> is equal to the current instance; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCustomAttributes">
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b5729-164">Retorna uma lista de objetos <see cref="T:System.Reflection.CustomAttributeData" /> que representam dados sobre os atributos que foram aplicados ao destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5729-164">Returns a list of <see cref="T:System.Reflection.CustomAttributeData" /> objects representing data about the attributes that have been applied to the target.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt; GetCustomAttributes (System.Reflection.Assembly target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IList`1&lt;class System.Reflection.CustomAttributeData&gt; GetCustomAttributes(class System.Reflection.Assembly target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.Assembly)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (target As Assembly) As IList(Of CustomAttributeData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeData ^&gt; ^ GetCustomAttributes(System::Reflection::Assembly ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="b5729-165">O assembly cujos dados de atributo personalizado devem ser recuperados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5729-165">The assembly whose custom attribute data is to be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b5729-166">Retorna uma lista de objetos <see cref="T:System.Reflection.CustomAttributeData" /> que representam os dados sobre os atributos que foram aplicados ao assembly de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5729-166">Returns a list of <see cref="T:System.Reflection.CustomAttributeData" /> objects representing data about the attributes that have been applied to the target assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b5729-167">Uma lista de objetos que representam dados sobre os atributos que foram aplicados ao assembly de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5729-167">A list of objects that represent data about the attributes that have been applied to the target assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5729-168">Esse método fornece uma alternativa para o <xref:System.Reflection.Assembly.GetCustomAttributes%2A> método sempre pode ser usado no contexto exclusivo de reflexão.</span><span class="sxs-lookup"><span data-stu-id="b5729-168">This method provides an alternative to the <xref:System.Reflection.Assembly.GetCustomAttributes%2A> method that can always be used in the Reflection-only context.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b5729-169">O exemplo a seguir define um atributo personalizado com quatro construtores e quatro propriedades.</span><span class="sxs-lookup"><span data-stu-id="b5729-169">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="b5729-170">Duas propriedades são somente leitura e são definidas usando os parâmetros posicionais dos construtores.</span><span class="sxs-lookup"><span data-stu-id="b5729-170">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="b5729-171">As duas propriedades são somente leitura, e pode ser conjunto somente usando argumentos nomeado.</span><span class="sxs-lookup"><span data-stu-id="b5729-171">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="b5729-172">Uma propriedade de posição é uma matriz de cadeias de caracteres e uma propriedade nomeada é uma matriz de inteiros.</span><span class="sxs-lookup"><span data-stu-id="b5729-172">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="b5729-173">O atributo é aplicado ao assembly, a um tipo declarado no assembly, para um método do tipo e a um parâmetro do método.</span><span class="sxs-lookup"><span data-stu-id="b5729-173">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="b5729-174">Construtores diferentes são usados para esses casos.</span><span class="sxs-lookup"><span data-stu-id="b5729-174">Different constructors are used for these cases.</span></span> <span data-ttu-id="b5729-175">Quando executado, o assembly carrega em si no contexto exclusivo de reflexão e exibe os atributos personalizados.</span><span class="sxs-lookup"><span data-stu-id="b5729-175">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="b5729-176">O atributo é aplicado ao tipo demonstra as propriedades de matriz, com argumentos posicionais e nomeadas.</span><span class="sxs-lookup"><span data-stu-id="b5729-176">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="b5729-177">O <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> método é usado em `Main()` para obter os atributos personalizados aplicados ao assembly.</span><span class="sxs-lookup"><span data-stu-id="b5729-177">The <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> method is used in `Main()` to get the custom attributes applied to the assembly.</span></span> <span data-ttu-id="b5729-178">O valor de retorno do método é passado para o `ShowAttributeData` método.</span><span class="sxs-lookup"><span data-stu-id="b5729-178">The return value of the method is passed to the `ShowAttributeData` method.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b5729-179">
            <paramref name="target" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5729-179">
              <paramref name="target" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt; GetCustomAttributes (System.Reflection.MemberInfo target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IList`1&lt;class System.Reflection.CustomAttributeData&gt; GetCustomAttributes(class System.Reflection.MemberInfo target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.MemberInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (target As MemberInfo) As IList(Of CustomAttributeData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeData ^&gt; ^ GetCustomAttributes(System::Reflection::MemberInfo ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Reflection.MemberInfo" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="b5729-180">O membro cujos dados de atributo devem ser recuperados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5729-180">The member whose attribute data is to be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b5729-181">Retorna uma lista de objetos <see cref="T:System.Reflection.CustomAttributeData" /> que representam dados sobre os atributos que foram aplicados ao membro de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5729-181">Returns a list of <see cref="T:System.Reflection.CustomAttributeData" /> objects representing data about the attributes that have been applied to the target member.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b5729-182">Uma lista de objetos que representa dados sobre os atributos que foram aplicados ao membro de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5729-182">A list of objects that represent data about the attributes that have been applied to the target member.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5729-183">Essa sobrecarga de método obtém dados de atributo personalizado para tipos, tipos aninhados e membros de tipo, porque o <xref:System.Type> e as classes no <xref:System.Reflection> namespace que representam todos os derivam de membros de tipo <xref:System.Reflection.MemberInfo>.</span><span class="sxs-lookup"><span data-stu-id="b5729-183">This method overload gets custom attribute data for types, nested types, and type members, because the <xref:System.Type> class and the classes in the <xref:System.Reflection> namespace that represent type members all derive from <xref:System.Reflection.MemberInfo>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b5729-184">O exemplo a seguir define um atributo personalizado com quatro construtores e quatro propriedades.</span><span class="sxs-lookup"><span data-stu-id="b5729-184">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="b5729-185">Duas propriedades são somente leitura e são definidas usando os parâmetros posicionais dos construtores.</span><span class="sxs-lookup"><span data-stu-id="b5729-185">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="b5729-186">As duas propriedades são somente leitura, e pode ser conjunto somente usando argumentos nomeado.</span><span class="sxs-lookup"><span data-stu-id="b5729-186">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="b5729-187">Uma propriedade de posição é uma matriz de cadeias de caracteres e uma propriedade nomeada é uma matriz de inteiros.</span><span class="sxs-lookup"><span data-stu-id="b5729-187">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="b5729-188">O atributo é aplicado ao assembly, a um tipo declarado no assembly, para um método do tipo e a um parâmetro do método.</span><span class="sxs-lookup"><span data-stu-id="b5729-188">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="b5729-189">Construtores diferentes são usados para esses casos.</span><span class="sxs-lookup"><span data-stu-id="b5729-189">Different constructors are used for these cases.</span></span> <span data-ttu-id="b5729-190">Quando executado, o assembly carrega em si no contexto exclusivo de reflexão e exibe os atributos personalizados.</span><span class="sxs-lookup"><span data-stu-id="b5729-190">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="b5729-191">O atributo é aplicado ao tipo demonstra as propriedades de matriz, com argumentos posicionais e nomeadas.</span><span class="sxs-lookup"><span data-stu-id="b5729-191">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="b5729-192">O <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> método é usado em `Main()` para obter os atributos personalizados que foram aplicados a um tipo e a um método de teste (<xref:System.Type> deriva <xref:System.Reflection.MemberInfo>).</span><span class="sxs-lookup"><span data-stu-id="b5729-192">The <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> method is used in `Main()` to get the custom attributes that were applied to a type and to a test method (<xref:System.Type> derives from <xref:System.Reflection.MemberInfo>).</span></span> <span data-ttu-id="b5729-193">O valor de retorno <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> é passado para o `ShowAttributeData` método.</span><span class="sxs-lookup"><span data-stu-id="b5729-193">The return value of <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> is passed to the `ShowAttributeData` method.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="Overload:System.Reflection.MemberInfo.GetCustomAttributes" />
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b5729-194">
            <paramref name="target" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5729-194">
              <paramref name="target" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt; GetCustomAttributes (System.Reflection.Module target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IList`1&lt;class System.Reflection.CustomAttributeData&gt; GetCustomAttributes(class System.Reflection.Module target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.Module)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (target As Module) As IList(Of CustomAttributeData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeData ^&gt; ^ GetCustomAttributes(System::Reflection::Module ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Reflection.Module" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="b5729-195">O módulo cujos dados de atributo personalizado devem ser recuperados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5729-195">The module whose custom attribute data is to be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b5729-196">Retorna uma lista de objetos <see cref="T:System.Reflection.CustomAttributeData" /> que representam dados sobre os atributos que foram aplicados ao módulo de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5729-196">Returns a list of <see cref="T:System.Reflection.CustomAttributeData" /> objects representing data about the attributes that have been applied to the target module.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b5729-197">Uma lista de objetos que representa dados sobre os atributos que foram aplicados ao módulo de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5729-197">A list of objects that represent data about the attributes that have been applied to the target module.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b5729-198">
            <paramref name="target" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5729-198">
              <paramref name="target" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt; GetCustomAttributes (System.Reflection.ParameterInfo target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IList`1&lt;class System.Reflection.CustomAttributeData&gt; GetCustomAttributes(class System.Reflection.ParameterInfo target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.ParameterInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (target As ParameterInfo) As IList(Of CustomAttributeData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeData ^&gt; ^ GetCustomAttributes(System::Reflection::ParameterInfo ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Reflection.ParameterInfo" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="b5729-199">O parâmetro cujos dados de atributo devem ser recuperados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5729-199">The parameter whose attribute data is to be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b5729-200">Retorna uma lista de objetos <see cref="T:System.Reflection.CustomAttributeData" /> que representam os dados sobre os atributos que foram aplicados ao parâmetro de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5729-200">Returns a list of <see cref="T:System.Reflection.CustomAttributeData" /> objects representing data about the attributes that have been applied to the target parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b5729-201">Uma lista de objetos que representam dados sobre os atributos que foram aplicados ao parâmetro de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5729-201">A list of objects that represent data about the attributes that have been applied to the target parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5729-202">Esse método fornece uma alternativa para o <xref:System.Reflection.ParameterInfo.GetCustomAttributes%2A> método sempre pode ser usado no contexto exclusivo de reflexão.</span><span class="sxs-lookup"><span data-stu-id="b5729-202">This method provides an alternative to the <xref:System.Reflection.ParameterInfo.GetCustomAttributes%2A> method that can always be used in the Reflection-only context.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b5729-203">O exemplo a seguir define um atributo personalizado com quatro construtores e quatro propriedades.</span><span class="sxs-lookup"><span data-stu-id="b5729-203">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="b5729-204">Duas propriedades são somente leitura e são definidas usando os parâmetros posicionais dos construtores.</span><span class="sxs-lookup"><span data-stu-id="b5729-204">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="b5729-205">As duas propriedades são somente leitura, e pode ser conjunto somente usando argumentos nomeado.</span><span class="sxs-lookup"><span data-stu-id="b5729-205">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="b5729-206">Uma propriedade de posição é uma matriz de cadeias de caracteres e uma propriedade nomeada é uma matriz de inteiros.</span><span class="sxs-lookup"><span data-stu-id="b5729-206">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="b5729-207">O atributo é aplicado ao assembly, a um tipo declarado no assembly, para um método do tipo e a um parâmetro do método.</span><span class="sxs-lookup"><span data-stu-id="b5729-207">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="b5729-208">Construtores diferentes são usados para esses casos.</span><span class="sxs-lookup"><span data-stu-id="b5729-208">Different constructors are used for these cases.</span></span> <span data-ttu-id="b5729-209">Quando executado, o assembly carrega em si no contexto exclusivo de reflexão e exibe os atributos personalizados.</span><span class="sxs-lookup"><span data-stu-id="b5729-209">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="b5729-210">O atributo é aplicado ao tipo demonstra as propriedades de matriz, com argumentos posicionais e nomeadas.</span><span class="sxs-lookup"><span data-stu-id="b5729-210">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="b5729-211">O <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> método é usado em `Main()` para recuperar os atributos personalizados aplicados a um parâmetro de um método de teste.</span><span class="sxs-lookup"><span data-stu-id="b5729-211">The <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> method is used in `Main()` to retrieve the custom attributes applied to a parameter of a test method.</span></span> <span data-ttu-id="b5729-212">O valor de retorno <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> é passado para o `ShowAttributeData` método.</span><span class="sxs-lookup"><span data-stu-id="b5729-212">The return value of <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> is passed to the `ShowAttributeData` method.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b5729-213">
            <paramref name="target" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5729-213">
              <paramref name="target" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b5729-214">Serve como uma função de hash para um tipo específico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5729-214">Serves as a hash function for a particular type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b5729-215">Um código hash do <see cref="T:System.Object" /> atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5729-215">A hash code for the current <see cref="T:System.Object" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Object.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="NamedArguments">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeNamedArgument&gt; NamedArguments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;valuetype System.Reflection.CustomAttributeNamedArgument&gt; NamedArguments" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.CustomAttributeData.NamedArguments" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property NamedArguments As IList(Of CustomAttributeNamedArgument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeNamedArgument&gt; ^ NamedArguments { System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeNamedArgument&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeNamedArgument&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b5729-216">Obtém a lista de argumentos nomeados especificados para a instância de atributo representada pelo objeto <see cref="T:System.Reflection.CustomAttributeData" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5729-216">Gets the list of named arguments specified for the attribute instance represented by the <see cref="T:System.Reflection.CustomAttributeData" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b5729-217">Uma coleção de estruturas que representam os argumentos nomeados especificados para a instância de atributo personalizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5729-217">A collection of structures that represent the named arguments specified for the custom attribute instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5729-218">Esse método obtém os argumentos nomeados que foram especificados para a instância do atributo personalizado sem executar qualquer código personalizado do atributo.</span><span class="sxs-lookup"><span data-stu-id="b5729-218">This method gets the named arguments that were specified for the custom attribute instance without executing any of the custom attribute code.</span></span> <span data-ttu-id="b5729-219">Portanto, ele pode ser usado no contexto exclusivo de reflexão.</span><span class="sxs-lookup"><span data-stu-id="b5729-219">Thus, it can be used in the Reflection-only context.</span></span>  
  
 <span data-ttu-id="b5729-220">A lista que é retornada contém apenas os argumentos nomeados que foram especificados para a instância do atributo.</span><span class="sxs-lookup"><span data-stu-id="b5729-220">The list that is returned contains only the named arguments that were specified for the attribute instance.</span></span>  
  
 <span data-ttu-id="b5729-221">Use o <xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A> método para obter os argumentos posicionais que foram especificados para a instância do atributo.</span><span class="sxs-lookup"><span data-stu-id="b5729-221">Use the <xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A> method to get the positional arguments that were specified for the attribute instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b5729-222">O exemplo a seguir define um atributo personalizado com quatro construtores e quatro propriedades.</span><span class="sxs-lookup"><span data-stu-id="b5729-222">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="b5729-223">Duas propriedades são somente leitura e são definidas usando os parâmetros posicionais dos construtores.</span><span class="sxs-lookup"><span data-stu-id="b5729-223">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="b5729-224">As duas propriedades são somente leitura, e pode ser conjunto somente usando argumentos nomeado.</span><span class="sxs-lookup"><span data-stu-id="b5729-224">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="b5729-225">Uma propriedade de posição é uma matriz de cadeias de caracteres e uma propriedade nomeada é uma matriz de inteiros.</span><span class="sxs-lookup"><span data-stu-id="b5729-225">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="b5729-226">O atributo é aplicado ao assembly, a um tipo declarado no assembly, para um método do tipo e a um parâmetro do método.</span><span class="sxs-lookup"><span data-stu-id="b5729-226">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="b5729-227">Construtores diferentes são usados para esses casos.</span><span class="sxs-lookup"><span data-stu-id="b5729-227">Different constructors are used for these cases.</span></span> <span data-ttu-id="b5729-228">Quando executado, o assembly carrega em si no contexto exclusivo de reflexão e exibe os atributos personalizados.</span><span class="sxs-lookup"><span data-stu-id="b5729-228">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="b5729-229">O atributo é aplicado ao tipo demonstra as propriedades de matriz, com argumentos posicionais e nomeadas.</span><span class="sxs-lookup"><span data-stu-id="b5729-229">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="b5729-230">O <xref:System.Reflection.CustomAttributeData.NamedArguments%2A> propriedade é usada a `ShowAttributeData` método que exibe dados de atributo personalizado.</span><span class="sxs-lookup"><span data-stu-id="b5729-230">The <xref:System.Reflection.CustomAttributeData.NamedArguments%2A> property is used in the `ShowAttributeData` method that displays custom attribute data.</span></span> <span data-ttu-id="b5729-231">Neste exemplo de código, essa propriedade é usada para exibir a lista de argumentos nomeados especificado para o atributo.</span><span class="sxs-lookup"><span data-stu-id="b5729-231">In this code example, this property is used to display the list of named arguments specified for the attribute.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Reflection.CustomAttributeData.ConstructorArguments" />
        <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b5729-232">Retorna uma representação de cadeia de caracteres do atributo personalizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5729-232">Returns a string representation of the custom attribute.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b5729-233">Um valor de cadeia de caracteres que representa um atributo personalizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5729-233">A string value that represents the custom attribute.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5729-234">O valor de cadeia de caracteres inclui o tipo de atributo, os parâmetros de atributo e os parâmetros nomeados.</span><span class="sxs-lookup"><span data-stu-id="b5729-234">The string value includes the attribute type, the attribute parameters, and the named parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b5729-235">O exemplo a seguir define um atributo personalizado com quatro construtores e quatro propriedades.</span><span class="sxs-lookup"><span data-stu-id="b5729-235">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="b5729-236">Duas propriedades são somente leitura e são definidas usando os parâmetros posicionais dos construtores.</span><span class="sxs-lookup"><span data-stu-id="b5729-236">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="b5729-237">As duas propriedades são somente leitura, e pode ser conjunto somente usando argumentos nomeado.</span><span class="sxs-lookup"><span data-stu-id="b5729-237">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="b5729-238">Uma propriedade de posição é uma matriz de cadeias de caracteres e uma propriedade nomeada é uma matriz de inteiros.</span><span class="sxs-lookup"><span data-stu-id="b5729-238">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="b5729-239">O atributo é aplicado ao assembly, a um tipo declarado no assembly, para um método do tipo e a um parâmetro do método.</span><span class="sxs-lookup"><span data-stu-id="b5729-239">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="b5729-240">Construtores diferentes são usados para esses casos.</span><span class="sxs-lookup"><span data-stu-id="b5729-240">Different constructors are used for these cases.</span></span> <span data-ttu-id="b5729-241">Quando executado, o assembly carrega em si no contexto exclusivo de reflexão e exibe os atributos personalizados.</span><span class="sxs-lookup"><span data-stu-id="b5729-241">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="b5729-242">O atributo é aplicado ao tipo demonstra as propriedades de matriz, com argumentos posicionais e nomeadas.</span><span class="sxs-lookup"><span data-stu-id="b5729-242">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="b5729-243">Neste exemplo, o <xref:System.Reflection.CustomAttributeData.ToString%2A> método é usado o `ShowAttributeData` método, para identificar o atributo cujos dados estão sendo exibidos.</span><span class="sxs-lookup"><span data-stu-id="b5729-243">In this example, the <xref:System.Reflection.CustomAttributeData.ToString%2A> method is used in the `ShowAttributeData` method, to identify the attribute whose data is being displayed.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>