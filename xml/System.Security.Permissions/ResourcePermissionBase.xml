<Type Name="ResourcePermissionBase" FullName="System.Security.Permissions.ResourcePermissionBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e329ebf43082f31c11ea9711593c5a135b8be429" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30500260" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ResourcePermissionBase : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit ResourcePermissionBase extends System.Security.CodeAccessPermission implements class System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="DocId" Value="T:System.Security.Permissions.ResourcePermissionBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ResourcePermissionBase&#xA;Inherits CodeAccessPermission&#xA;Implements IUnrestrictedPermission" />
  <TypeSignature Language="C++ CLI" Value="public ref class ResourcePermissionBase abstract : System::Security::CodeAccessPermission, System::Security::Permissions::IUnrestrictedPermission" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.CodeAccessPermission</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.Permissions.IUnrestrictedPermission</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Permite o controle de permissões de segurança de acesso do código.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  O <xref:System.Security.Permissions.ResourcePermissionBase> classe compara cadeias de caracteres usando regras de classificação ordinal e diferencia maiusculas de minúsculas das cadeias de caracteres que estão sendo comparados.  
  
   
  
## Examples  
 O exemplo a seguir herda o <xref:System.Security.Permissions.ResourcePermissionBase> classe. 4 tipos de construtores são implementados. O exemplo também fornece uma implementação de uma classe chamada `MailslotPermissionEntry`. O <xref:System.Security.Permissions.ResourcePermissionBase.PermissionAccessType%2A> propriedade em particular, em seguida, é definida como o tipo de `MailslotPermissionEntry`. O <xref:System.Security.Permissions.ResourcePermissionBase.TagNames%2A> propriedade é definida em particular, como "Nome" e "Computador".  
  
 [!code-cpp[ResourcePermissionBase#1](~/samples/snippets/cpp/VS_Snippets_CLR/ResourcePermissionBase/CPP/resourcepermissionbase.cpp#1)]
 [!code-csharp[ResourcePermissionBase#1](~/samples/snippets/csharp/VS_Snippets_CLR/ResourcePermissionBase/CS/resourcepermissionbase.cs#1)]
 [!code-vb[ResourcePermissionBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ResourcePermissionBase/VB/resourcepermissionbase.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission">para o direito de evidência de controle. Ação de segurança: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />. Enumeração associada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" />.</permission>
    <block subset="none" type="overrides">
      <para>Ao herdar de <see cref="T:System.Security.Permissions.ResourcePermissionBase" />, você deve fornecer pelo menos três construtores, definir duas propriedades e fornecer uma terceira propriedade. Os construtores necessários são: um construtor padrão, o que leva um <see cref="T:System.Security.Permissions.PermissionState" /> como um parâmetro e quantos necessários que usam valores de propriedades. As propriedades que precisam ser definidas são <see cref="P:System.Security.Permissions.ResourcePermissionBase.PermissionAccessType" /> e <see cref="P:System.Security.Permissions.ResourcePermissionBase.TagNames" />. A terceira propriedade, é necessário é aquele que retorna as entradas de permissão. Para obter um exemplo de uma implementação dessa classe, consulte <see cref="T:System.Diagnostics.PerformanceCounterPermission" />. Em <see cref="T:System.Diagnostics.PerformanceCounterPermission" />, o <see cref="P:System.Security.Permissions.ResourcePermissionBase.TagNames" /> propriedade é definida em particular para "Máquina" e "Category", o <see cref="P:System.Security.Permissions.ResourcePermissionBase.PermissionAccessType" /> propriedade em particular é definida como o tipo de <see cref="T:System.Diagnostics.PerformanceCounterPermissionAccess" />e o <see cref="P:System.Diagnostics.PerformanceCounterPermission.PermissionEntries" /> propriedade retorna as entradas de permissão.</para>
    </block>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Permissions.ResourcePermissionBase" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ResourcePermissionBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.ResourcePermissionBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ResourcePermissionBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Permissions.ResourcePermissionBase" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ResourcePermissionBase (System.Security.Permissions.PermissionState state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.PermissionState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.ResourcePermissionBase.#ctor(System.Security.Permissions.PermissionState)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (state As PermissionState)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ResourcePermissionBase(System::Security::Permissions::PermissionState state);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" />
      </Parameters>
      <Docs>
        <param name="state">Um dos valores de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Permissions.ResourcePermissionBase" /> com o nível especificado de acesso aos recursos na criação.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">O parâmetro <paramref name="state" /> não é um valor válido de <see cref="T:System.Security.Permissions.PermissionState" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddPermissionAccess">
      <MemberSignature Language="C#" Value="protected void AddPermissionAccess (System.Security.Permissions.ResourcePermissionBaseEntry entry);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AddPermissionAccess(class System.Security.Permissions.ResourcePermissionBaseEntry entry) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.ResourcePermissionBase.AddPermissionAccess(System.Security.Permissions.ResourcePermissionBaseEntry)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AddPermissionAccess (entry As ResourcePermissionBaseEntry)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void AddPermissionAccess(System::Security::Permissions::ResourcePermissionBaseEntry ^ entry);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="System.Security.Permissions.ResourcePermissionBaseEntry" />
      </Parameters>
      <Docs>
        <param name="entry">O <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> a ser adicionado.</param>
        <summary>Adiciona uma entrada de permissão à permissão.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir mostra o uso do <xref:System.Security.Permissions.ResourcePermissionBase.AddPermissionAccess%2A> para adicionar uma entrada de permissão de acesso durante a inicialização de classe. Este exemplo de código é parte de um exemplo maior fornecido para a <xref:System.Security.Permissions.ResourcePermissionBase> classe.  
  
 [!code-cpp[ResourcePermissionBase#2](~/samples/snippets/cpp/VS_Snippets_CLR/ResourcePermissionBase/CPP/resourcepermissionbase.cpp#2)]
 [!code-csharp[ResourcePermissionBase#2](~/samples/snippets/csharp/VS_Snippets_CLR/ResourcePermissionBase/CS/resourcepermissionbase.cs#2)]
 [!code-vb[ResourcePermissionBase#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/ResourcePermissionBase/VB/resourcepermissionbase.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">O <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> especificado é <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">O número de elementos na propriedade <see cref="P:System.Security.Permissions.ResourcePermissionBaseEntry.PermissionAccessPath" /> não é igual ao número de elementos na propriedade <see cref="P:System.Security.Permissions.ResourcePermissionBase.TagNames" />.  
  
 - ou -  
  
 O <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> já está incluído na permissão.</exception>
        <altmember cref="M:System.Security.Permissions.ResourcePermissionBase.RemovePermissionAccess(System.Security.Permissions.ResourcePermissionBaseEntry)" />
      </Docs>
    </Member>
    <Member MemberName="Any">
      <MemberSignature Language="C#" Value="public const string Any;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string Any" />
      <MemberSignature Language="DocId" Value="F:System.Security.Permissions.ResourcePermissionBase.Any" />
      <MemberSignature Language="VB.NET" Value="Public Const Any As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ Any;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Especifica o caractere a ser usado para representar qualquer caractere curinga.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O valor desse campo é "*".  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="protected void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.ResourcePermissionBase.Clear" />
      <MemberSignature Language="VB.NET" Value="Protected Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void Clear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Limpa a permissão das entradas de permissão adicionadas.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.ResourcePermissionBase.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Copy () As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Copy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cria e retorna uma cópia idêntica do objeto de permissão atual.</summary>
        <returns>Uma cópia do objeto de permissão atual.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Uma cópia do objeto de permissão representa o mesmo acesso a recursos como o objeto de permissão original.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromXml">
      <MemberSignature Language="C#" Value="public override void FromXml (System.Security.SecurityElement securityElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void FromXml(class System.Security.SecurityElement securityElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.ResourcePermissionBase.FromXml(System.Security.SecurityElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void FromXml(System::Security::SecurityElement ^ securityElement);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("incomplete - need more test")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="securityElement" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="securityElement">A codificação XML a ser usada para reconstruir o objeto de segurança.</param>
        <summary>Reconstrói um objeto de segurança com um estado especificado de uma codificação XML.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">O parâmetro <paramref name="securityElement" /> não é um elemento de permissão válido.  
  
 - ou -  
  
 Não há suporte para o número de versão do parâmetro <paramref name="securityElement" />.</exception>
        <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="securityElement" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetPermissionEntries">
      <MemberSignature Language="C#" Value="protected System.Security.Permissions.ResourcePermissionBaseEntry[] GetPermissionEntries ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Security.Permissions.ResourcePermissionBaseEntry[] GetPermissionEntries() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.ResourcePermissionBase.GetPermissionEntries" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetPermissionEntries () As ResourcePermissionBaseEntry()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; cli::array &lt;System::Security::Permissions::ResourcePermissionBaseEntry ^&gt; ^ GetPermissionEntries();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Permissions.ResourcePermissionBaseEntry[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retorna uma matriz dos objetos <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> adicionados a essa permissão.</summary>
        <returns>Uma matriz de objetos <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> que foram adicionados a essa permissão.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use <xref:System.Security.Permissions.ResourcePermissionBase.AddPermissionAccess%2A> e <xref:System.Security.Permissions.ResourcePermissionBase.RemovePermissionAccess%2A> para adicionar e remover as entradas de permissão para essa permissão.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Security.Permissions.ResourcePermissionBase.AddPermissionAccess(System.Security.Permissions.ResourcePermissionBaseEntry)" />
        <altmember cref="M:System.Security.Permissions.ResourcePermissionBase.RemovePermissionAccess(System.Security.Permissions.ResourcePermissionBaseEntry)" />
        <altmember cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" />
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Intersect (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Intersect(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.ResourcePermissionBase.Intersect(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Intersect (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Intersect(System::Security::IPermission ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">Um objeto de permissão do mesmo tipo que o objeto de permissão atual.</param>
        <summary>Cria e retorna um objeto de permissão que é a interseção do objeto de permissão atual e de um objeto de permissão de destino.</summary>
        <returns>Um novo objeto de permissão que representa a interseção do objeto atual e do destino especificado. Este objeto será <see langword="null" /> se a interseção estiver vazia.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A interseção de dois objetos de permissão é uma permissão que descreve o conjunto de operações que ambos mantenham em comum. Especificamente, ele representa as permissões mínimas necessárias para uma demanda passar as permissões.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">O objeto de permissão de destino não é do mesmo tipo que o objeto de permissão atual.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public override bool IsSubsetOf (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsSubsetOf(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.ResourcePermissionBase.IsSubsetOf(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsSubsetOf (target As IPermission) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsSubsetOf(System::Security::IPermission ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">Um objeto de permissão que deve ser testado para a relação de subconjunto.</param>
        <summary>Determina se o objeto de permissão atual é um subconjunto da permissão especificada.</summary>
        <returns>
          <see langword="true" /> se o objeto de permissão atual for um subconjunto do objeto de permissão especificado; caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O objeto de permissão atual é um subconjunto do objeto de permissão especificado se o objeto de permissão atual especifica um conjunto de operações é totalmente contido no objeto de permissão especificada. Por exemplo, uma permissão que representa acesso à C:\Example.txt é um subconjunto de uma permissão que representa acesso na unidade c:\\. Se esse método retornar `true`, o objeto de permissão atual não representa nenhum mais acesso ao recurso protegido que o objeto de permissão especificado.  
  
 Esse método sempre retorna `false` quando o objeto de permissão especificado é de um tipo diferente do que o objeto de permissão atual.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUnrestricted">
      <MemberSignature Language="C#" Value="public bool IsUnrestricted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsUnrestricted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.ResourcePermissionBase.IsUnrestricted" />
      <MemberSignature Language="VB.NET" Value="Public Function IsUnrestricted () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsUnrestricted();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtém um valor que indica se a permissão é irrestrita.</summary>
        <returns>
          <see langword="true" /> se a permissão for irrestrita; caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um objeto de permissão irrestrita representa acesso a todos os recursos protegidos pela permissão.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Local">
      <MemberSignature Language="C#" Value="public const string Local;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string Local" />
      <MemberSignature Language="DocId" Value="F:System.Security.Permissions.ResourcePermissionBase.Local" />
      <MemberSignature Language="VB.NET" Value="Public Const Local As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ Local;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Especifica o caractere a ser usado para representar uma referência local.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O valor desse campo é ".".  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PermissionAccessType">
      <MemberSignature Language="C#" Value="protected Type PermissionAccessType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type PermissionAccessType" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.ResourcePermissionBase.PermissionAccessType" />
      <MemberSignature Language="VB.NET" Value="Protected Property PermissionAccessType As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property Type ^ PermissionAccessType { Type ^ get(); void set(Type ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor de enumeração que descreve os tipos de acesso que você está dando ao recurso.</summary>
        <value>Um valor de enumeração que é derivado de <see cref="T:System.Type" /> e descreve os tipos de acesso que você permitirá que o recurso.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">O valor da propriedade é <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">O valor da propriedade não é um valor de enumeração.</exception>
        <block subset="none" type="overrides">
          <para>Ao herdar de <see cref="T:System.Security.Permissions.ResourcePermissionBase" />, você deve definir essa propriedade. Para obter um exemplo de uma implementação dessa classe, consulte <see cref="T:System.Diagnostics.PerformanceCounterPermission" />. Em <see cref="T:System.Diagnostics.PerformanceCounterPermission" />, o <see cref="P:System.Security.Permissions.ResourcePermissionBase.PermissionAccessType" /> propriedade em particular é definida como o tipo de <see cref="T:System.Diagnostics.PerformanceCounterPermissionAccess" />.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="RemovePermissionAccess">
      <MemberSignature Language="C#" Value="protected void RemovePermissionAccess (System.Security.Permissions.ResourcePermissionBaseEntry entry);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RemovePermissionAccess(class System.Security.Permissions.ResourcePermissionBaseEntry entry) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.ResourcePermissionBase.RemovePermissionAccess(System.Security.Permissions.ResourcePermissionBaseEntry)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RemovePermissionAccess (entry As ResourcePermissionBaseEntry)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RemovePermissionAccess(System::Security::Permissions::ResourcePermissionBaseEntry ^ entry);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="System.Security.Permissions.ResourcePermissionBaseEntry" />
      </Parameters>
      <Docs>
        <param name="entry">O <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> a ser removido.</param>
        <summary>Remove uma entrada de permissão da permissão.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">O <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> especificado é <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">O número de elementos na propriedade <see cref="P:System.Security.Permissions.ResourcePermissionBaseEntry.PermissionAccessPath" /> não é igual ao número de elementos na propriedade <see cref="P:System.Security.Permissions.ResourcePermissionBase.TagNames" />.  
  
 - ou -  
  
 O <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> não está na permissão.</exception>
        <altmember cref="M:System.Security.Permissions.ResourcePermissionBase.AddPermissionAccess(System.Security.Permissions.ResourcePermissionBaseEntry)" />
      </Docs>
    </Member>
    <Member MemberName="TagNames">
      <MemberSignature Language="C#" Value="protected string[] TagNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] TagNames" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.ResourcePermissionBase.TagNames" />
      <MemberSignature Language="VB.NET" Value="Protected Property TagNames As String()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property cli::array &lt;System::String ^&gt; ^ TagNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define uma matriz de cadeias de caracteres que identifica o recurso que está sendo protegido.</summary>
        <value>Uma matriz de cadeias de caracteres que identifica o recurso que você está tentando proteger.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">O valor da propriedade é <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">O tamanho da matriz é 0.</exception>
        <block subset="none" type="overrides">
          <para>Ao herdar de <see cref="T:System.Security.Permissions.ResourcePermissionBase" />, você deve definir essa propriedade. Para obter um exemplo de uma implementação dessa classe, consulte <see cref="T:System.Diagnostics.PerformanceCounterPermission" />. Em <see cref="T:System.Diagnostics.PerformanceCounterPermission" />, o <see cref="P:System.Security.Permissions.ResourcePermissionBase.TagNames" /> propriedade é definida em particular para "Categoria" e "Computador".</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public override System.Security.SecurityElement ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.SecurityElement ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.ResourcePermissionBase.ToXml" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToXml () As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::SecurityElement ^ ToXml();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cria e retorna uma codificação XML do objeto de segurança e seu estado atual.</summary>
        <returns>Uma codificação XML do objeto de segurança, incluindo quaisquer informações de estado.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Union (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Union(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.ResourcePermissionBase.Union(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Union (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Union(System::Security::IPermission ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">Um objeto de permissão a combinar com o objeto de permissão atual. Ele deve ser do mesmo tipo que o objeto de permissão atual.</param>
        <summary>Cria um objeto de permissão que combina o objeto de permissão atual e o objeto de permissão de destino.</summary>
        <returns>Um novo objeto de permissão que representa a união de um objeto de permissão atual e o objeto de permissão especificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O resultado de uma chamada para <xref:System.Security.Permissions.ResourcePermissionBase.Union%2A> é uma permissão que representa todas as operações representadas pelo objeto de permissão atual e o objeto de permissão especificado. Qualquer solicitação que passa a ter a permissão passa seu union.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">O objeto de permissão <paramref name="target" /> não é do mesmo tipo que o objeto de permissão atual.</exception>
      </Docs>
    </Member>
  </Members>
</Type>