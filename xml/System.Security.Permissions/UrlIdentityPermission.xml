<Type Name="UrlIdentityPermission" FullName="System.Security.Permissions.UrlIdentityPermission">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2e6f5a331e7ee43db34c7f8124bc5daf5fe0fd2c" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37629860" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class UrlIdentityPermission : System.Security.CodeAccessPermission" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit UrlIdentityPermission extends System.Security.CodeAccessPermission" />
  <TypeSignature Language="DocId" Value="T:System.Security.Permissions.UrlIdentityPermission" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class UrlIdentityPermission&#xA;Inherits CodeAccessPermission" />
  <TypeSignature Language="C++ CLI" Value="public ref class UrlIdentityPermission sealed : System::Security::CodeAccessPermission" />
  <TypeSignature Language="F#" Value="type UrlIdentityPermission = class&#xA;    inherit CodeAccessPermission" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.CodeAccessPermission</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Defines the identity permission for the URL from which the code originates. This class cannot be inherited.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A URL completa é considerada, incluindo o protocolo (HTTP, HTTPS, FTP) e o arquivo. Por exemplo, http://www.fourthcoffee.com/process/grind.htm é uma URL completa.  
  
 URLs podem ser correspondidas exatamente ou um caractere curinga na posição final, por exemplo: http://www.fourthcoffee.com/process/*. As URLs também podem conter um caractere curinga ("\*") prefixo no delimitador de ponto. Por exemplo, a cadeia de nome de URL http://www.fourthcoffee.com/process/grind.htm/ é um subconjunto de http://\*.fourthcoffee.com/process/grind.htm/ e http://\*.com/process/grind.htm/.  
  
> [!IMPORTANT]
>  Começando com o [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], as permissões de identidade não são usadas.  
>   
>  Nas versões do .NET Framework 1.0 e 1.1, demandas sobre as permissões de identidade estão em vigor mesmo quando o assembly de chamada é totalmente confiável. Ou seja, embora o assembly de chamada tenha confiança total, uma solicitação de uma permissão de identidade falhará se o assembly não atendem aos critérios exigidos. Começando com o .NET Framework versão 2.0, demandas de permissões de identidade são mais eficazes de se o assembly de chamada tem confiança total. Ou seja, uma demanda para uma identidade sempre terá êxito, independentemente da identidade do assembly, se o assembly tiver sido concedido confiança total. Isso garante a consistência de todas as permissões, eliminando o tratamento de permissões de identidade como um caso especial.  
  
 Nas versões do .NET Framework 1.0 e 1.1, demandas sobre as permissões de identidade estão em vigor, mesmo quando o assembly de chamada é totalmente confiável. Ou seja, embora o assembly de chamada tenha confiança total, uma solicitação de uma permissão de identidade falhará se o assembly não atendem aos critérios exigidos. Começando com o .NET Framework versão 2.0, demandas de permissões de identidade são mais eficazes de se o assembly de chamada tem confiança total. Isso garante a consistência de todas as permissões, eliminando o tratamento de permissões de identidade como um caso especial.  
  
> [!NOTE]
>  Nas versões do .NET Framework antes do [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], você pode usar o <xref:System.Security.CodeAccessPermission.Deny%2A?displayProperty=nameWithType> método para evitar acesso acidental a recursos do sistema por código confiável. <xref:System.Security.CodeAccessPermission.Deny%2A> Agora é obsoleta, e o acesso aos recursos agora somente é determinado pela permissão concedida definido para um assembly. Para limitar o acesso a arquivos, você deve executar código parcialmente confiável em uma área restrita e atribua a ela permissões somente para recursos que o código tem permissão para acessar. Para obter informações sobre como executar um aplicativo em uma área restrita, consulte [como: executar código parcialmente confiável em uma área restrita](~/docs/framework/misc/how-to-run-partially-trusted-code-in-a-sandbox.md).  
  
> [!NOTE]
>  Nas versões do .NET Framework 1.0 e 1.1, as permissões de identidade não podem ter um <xref:System.Security.Permissions.PermissionState.Unrestricted> valor de estado de permissão. Começando com o .NET Framework versão 2.0, as permissões de identidade podem ter qualquer valor de estado de permissão. Isso significa que, nas versões 2.0 e posteriores, as permissões de identidade tem o mesmo comportamento que as permissões que implementam o <xref:System.Security.Permissions.IUnrestrictedPermission> interface.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.Permissions.UrlIdentityPermissionAttribute" />
    <altmember cref="T:System.Security.Policy.Url" />
    <altmember cref="T:System.Security.Policy.UrlMembershipCondition" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.UrlIdentityPermission" /> class.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UrlIdentityPermission (System.Security.Permissions.PermissionState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.PermissionState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.UrlIdentityPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (state As PermissionState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UrlIdentityPermission(System::Security::Permissions::PermissionState state);" />
      <MemberSignature Language="F#" Value="new System.Security.Permissions.UrlIdentityPermission : System.Security.Permissions.PermissionState -&gt; System.Security.Permissions.UrlIdentityPermission" Usage="new System.Security.Permissions.UrlIdentityPermission state" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" />
      </Parameters>
      <Docs>
        <param name="state">One of the <see cref="T:System.Security.Permissions.PermissionState" /> values.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.UrlIdentityPermission" /> class with the specified <see cref="T:System.Security.Permissions.PermissionState" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cria um totalmente restrito (`None`) ou `Unrestricted` permissão.  
  
> [!NOTE]
>  Nas versões do .NET Framework 1.0 e 1.1, as permissões de identidade não podem ter um <xref:System.Security.Permissions.PermissionState.Unrestricted> valor de estado de permissão. Começando com o .NET Framework versão 2.0, as permissões de identidade podem ter qualquer valor de estado de permissão. Isso significa que, nas versões 2.0 e posteriores, as permissões de identidade tem o mesmo comportamento que as permissões que implementam o <xref:System.Security.Permissions.IUnrestrictedPermission> interface. Ou seja, uma demanda para uma identidade sempre terá êxito, independentemente da identidade do assembly, se o assembly tiver sido concedido confiança total.  
  
 Nas versões do .NET Framework 1.0 e 1.1, demandas sobre as permissões de identidade estão em vigor, mesmo quando o assembly de chamada é totalmente confiável. Ou seja, embora o assembly de chamada tenha confiança total, uma solicitação de uma permissão de identidade falhará se o assembly não atendem aos critérios exigidos. Começando com o .NET Framework versão 2.0, demandas de permissões de identidade são mais eficazes de se o assembly de chamada tem confiança total. Isso garante a consistência de todas as permissões, eliminando o tratamento de permissões de identidade como um caso especial.  
  
   
  
## Examples  
 O exemplo a seguir mostra o uso do <xref:System.Security.Permissions.UrlIdentityPermission.%23ctor%28System.Security.Permissions.PermissionState%29?displayProperty=nameWithType> construtor.  
  
 [!code-cpp[System.Security.Permissions.UrlIdentityPermission#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.UrlIdentityPermission/CPP/urlidentity.cpp#7)]
 [!code-csharp[System.Security.Permissions.UrlIdentityPermission#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.UrlIdentityPermission/CS/urlidentity.cs#7)]
 [!code-vb[System.Security.Permissions.UrlIdentityPermission#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.UrlIdentityPermission/VB/urlidentity.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The <paramref name="state" /> parameter is not a valid value of <see cref="T:System.Security.Permissions.PermissionState" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UrlIdentityPermission (string site);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string site) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.UrlIdentityPermission.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (site As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UrlIdentityPermission(System::String ^ site);" />
      <MemberSignature Language="F#" Value="new System.Security.Permissions.UrlIdentityPermission : string -&gt; System.Security.Permissions.UrlIdentityPermission" Usage="new System.Security.Permissions.UrlIdentityPermission site" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="site" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="site">A URL or wildcard expression.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.UrlIdentityPermission" /> class to represent the URL identity described by <paramref name="site" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A URL completa é considerada, incluindo o protocolo HTTP, HTTPS, FTP e o arquivo, por exemplo: http://www.fourthcoffee.com/process/grind.htm/.  
  
 URLs podem ser correspondidas exatamente ou um caractere curinga na posição final, por exemplo: http://www.fourthcoffee.com/process/*. As URLs também podem conter um caractere curinga ("\*") prefixo no delimitador de ponto. Por exemplo, a cadeia de nome de URL http://www.fourthcoffee.com/process/grind.htm/ é um subconjunto de http://\*.fourthcoffee.com/process/grind.htm/ e http://\*.com/process/grind.htm/.  
  
> [!NOTE]
>  Começando com o .NET Framework versão 2.0, por motivos de desempenho inválido URL não causa uma exceção de argumento no momento em que a nova instância da classe é criada.  O argumento de exceção ocorrerá quando uma das operações de conjunto (Union, Intersect ou IsSubsetOf) é executada.  Uma demanda sobre as causas de permissão <xref:System.Security.Permissions.UrlIdentityPermission.IsSubsetOf%2A> a ser chamado pela infraestrutura de segurança. Haverá falha na solicitação devido à exceção de argumento, resultando em um <xref:System.Security.SecurityException> que está sendo gerada. Nesse caso, o original <xref:System.ArgumentException> exceção não será vista.  
  
   
  
## Examples  
 O exemplo a seguir mostra o uso do <xref:System.Security.Permissions.UrlIdentityPermission.%23ctor%28System.String%29?displayProperty=nameWithType> construtor.  
  
 [!code-cpp[System.Security.Permissions.UrlIdentityPermission#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.UrlIdentityPermission/CPP/urlidentity.cpp#8)]
 [!code-csharp[System.Security.Permissions.UrlIdentityPermission#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.UrlIdentityPermission/CS/urlidentity.cs#8)]
 [!code-vb[System.Security.Permissions.UrlIdentityPermission#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.UrlIdentityPermission/VB/urlidentity.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The <paramref name="site" /> parameter is <see langword="null" />.</exception>
        <exception cref="T:System.FormatException">The length of the <paramref name="site" /> parameter is zero.</exception>
        <exception cref="T:System.ArgumentException">The URL, directory, or site portion of the <paramref name="site" /> parameter is not valid.</exception>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.UrlIdentityPermission.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Copy () As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Copy();" />
      <MemberSignature Language="F#" Value="override this.Copy : unit -&gt; System.Security.IPermission" Usage="urlIdentityPermission.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates and returns an identical copy of the current permission.</summary>
        <returns>A copy of the current permission.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Uma cópia de uma permissão representa o mesmo acesso a recursos como a permissão original.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromXml">
      <MemberSignature Language="C#" Value="public override void FromXml (System.Security.SecurityElement esd);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void FromXml(class System.Security.SecurityElement esd) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.UrlIdentityPermission.FromXml(System.Security.SecurityElement)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub FromXml (esd As SecurityElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void FromXml(System::Security::SecurityElement ^ esd);" />
      <MemberSignature Language="F#" Value="override this.FromXml : System.Security.SecurityElement -&gt; unit" Usage="urlIdentityPermission.FromXml esd" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="esd" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="esd">The XML encoding to use to reconstruct the permission.</param>
        <summary>Reconstructs a permission with a specified state from an XML encoding.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">The <paramref name="esd" /> parameter is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">The <paramref name="esd" /> parameter is not a valid permission element.  -or-  The <paramref name="esd" /> parameter's version number is not valid.</exception>
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Intersect (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Intersect(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.UrlIdentityPermission.Intersect(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Intersect (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Intersect(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="override this.Intersect : System.Security.IPermission -&gt; System.Security.IPermission" Usage="urlIdentityPermission.Intersect target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">A permission to intersect with the current permission. It must be of the same type as the current permission.</param>
        <summary>Creates and returns a permission that is the intersection of the current permission and the specified permission.</summary>
        <returns>A new permission that represents the intersection of the current permission and the specified permission. This new permission is <see langword="null" /> if the intersection is empty.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A interseção de duas permissões é uma permissão que descreve o acesso às URLs ambas descrevem em comum. Somente uma demanda que passe ambas as permissões originais passará a interseção. Por exemplo, a interseção de uma permissão que representa o acesso aos http://www.fourthcoffee.com/process/grind.htm e uma permissão que representa o acesso ao http://www.fourthcoffee.com/* é uma permissão que representa o acesso ao http://www.fourthcoffee.com/process/grind.htm.  
  
 <xref:System.Security.Permissions.UrlIdentityPermission> dá suporte a operações de conjunto (<xref:System.Security.Permissions.UrlIdentityPermission.IsSubsetOf%2A>, <xref:System.Security.Permissions.UrlIdentityPermission.Intersect%2A>, e <xref:System.Security.Permissions.UrlIdentityPermission.Union%2A>) somente quando a permissão atual é igual ao objeto de permissão especificado ou quando uma das permissões usa o operador de curinga ("*").  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The <paramref name="target" /> parameter is not <see langword="null" /> and is not of the same type as the current permission.  -or-  The Url property is not a valid URL.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public override bool IsSubsetOf (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsSubsetOf(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.UrlIdentityPermission.IsSubsetOf(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsSubsetOf (target As IPermission) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsSubsetOf(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="override this.IsSubsetOf : System.Security.IPermission -&gt; bool" Usage="urlIdentityPermission.IsSubsetOf target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">A permission that is to be tested for the subset relationship. This permission must be of the same type as the current permission.</param>
        <summary>Determines whether the current permission is a subset of the specified permission.</summary>
        <returns>
          <see langword="true" /> if the current permission is a subset of the specified permission; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A permissão atual é um subconjunto da permissão especificada se a permissão atual identifica o acesso a uma URL que está totalmente contida pela permissão especificada. Por exemplo, uma permissão que representa o acesso aos http://www.fourthcoffee.com/process/grind.htm é um subconjunto de uma permissão que representa o acesso ao http://www.fourthcoffee.com/*. Se esse método retornar `true`, a permissão atual não representa nenhum mais acesso ao recurso protegido que tem a permissão especificada.  
  
 <xref:System.Security.Permissions.UrlIdentityPermission> dá suporte a operações de conjunto (<xref:System.Security.Permissions.UrlIdentityPermission.IsSubsetOf%2A>, <xref:System.Security.Permissions.UrlIdentityPermission.Intersect%2A>, e <xref:System.Security.Permissions.UrlIdentityPermission.Union%2A>) somente quando a permissão atual é igual à permissão especificada ou quando uma das permissões usa o operador de curinga ("*").  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The <paramref name="target" /> parameter is not <see langword="null" /> and is not of the same type as the current permission.  -or-  The Url property is not a valid URL.</exception>
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public override System.Security.SecurityElement ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.SecurityElement ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.UrlIdentityPermission.ToXml" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToXml () As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::SecurityElement ^ ToXml();" />
      <MemberSignature Language="F#" Value="override this.ToXml : unit -&gt; System.Security.SecurityElement" Usage="urlIdentityPermission.ToXml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates an XML encoding of the permission and its current state.</summary>
        <returns>An XML encoding of the permission, including any state information.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Union (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Union(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.UrlIdentityPermission.Union(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Union (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Union(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="override this.Union : System.Security.IPermission -&gt; System.Security.IPermission" Usage="urlIdentityPermission.Union target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">A permission to combine with the current permission. It must be of the same type as the current permission.</param>
        <summary>Creates a permission that is the union of the current permission and the specified permission.</summary>
        <returns>A new permission that represents the union of the current permission and the specified permission.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O resultado de uma chamada para o <xref:System.Security.Permissions.UrlIdentityPermission.Union%2A> método é uma permissão que representa o acesso à URL, conforme representado pela permissão atual, bem como acesso à URL, conforme representado pela permissão especificada.  
  
 O <xref:System.Security.Permissions.UrlIdentityPermission> classe dá suporte a operações de conjunto <xref:System.Security.Permissions.UrlIdentityPermission.IsSubsetOf%2A>, <xref:System.Security.Permissions.UrlIdentityPermission.Intersect%2A>, e <xref:System.Security.Permissions.UrlIdentityPermission.Union%2A>) somente quando a permissão atual é igual à permissão especificada ou quando uma das permissões usa o operador de curinga ("*") e a outra é um subconjunto da outros.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The <paramref name="target" /> parameter is not <see langword="null" /> and is not of the same type as the current permission.  -or-  The <see cref="P:System.Security.Permissions.UrlIdentityPermission.Url" /> property is not a valid URL.  -or-  The two permissions are not equal and one is not a subset of the other.</exception>
      </Docs>
    </Member>
    <Member MemberName="Url">
      <MemberSignature Language="C#" Value="public string Url { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Url" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.UrlIdentityPermission.Url" />
      <MemberSignature Language="VB.NET" Value="Public Property Url As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Url { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Url : string with get, set" Usage="System.Security.Permissions.UrlIdentityPermission.Url" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a URL representing the identity of Internet code.</summary>
        <value>Uma URL que representa a identidade do código de Internet.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A URL completa é considerada, incluindo o protocolo HTTP, HTTPS, FTP e o arquivo, por exemplo: http://www.fourthcoffee.com/process/grind.htm/.  
  
 URLs podem ser correspondidas exatamente ou um caractere curinga na posição final, por exemplo: http://www.fourthcoffee.com/process/*.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">The URL cannot be retrieved because it has an ambiguous identity.</exception>
      </Docs>
    </Member>
  </Members>
</Type>