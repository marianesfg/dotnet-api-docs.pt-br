<Type Name="ManagementEventWatcher" FullName="System.Management.ManagementEventWatcher">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4336dea5909d282395bddfe602d535fb768276c0" />
    <Meta Name="ms.sourcegitcommit" Value="0d6aa6694f157a08fe52cd25b4d9d3dcf913e812" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="10/12/2018" />
    <Meta Name="ms.locfileid" Value="49126318" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ManagementEventWatcher : System.ComponentModel.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ManagementEventWatcher extends System.ComponentModel.Component" />
  <TypeSignature Language="DocId" Value="T:System.Management.ManagementEventWatcher" />
  <TypeSignature Language="VB.NET" Value="Public Class ManagementEventWatcher&#xA;Inherits Component" />
  <TypeSignature Language="C++ CLI" Value="public ref class ManagementEventWatcher : System::ComponentModel::Component" />
  <TypeSignature Language="F#" Value="type ManagementEventWatcher = class&#xA;    inherit Component" />
  <AssemblyInfo>
    <AssemblyName>System.Management</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-2.1">
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="2e368-101">Inscreve-se para notificações de eventos temporárias com base em uma *consulta de evento*.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2e368-101">Subscribes to temporary event notifications based on a specified *event query*.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2e368-102">O exemplo a seguir mostra como o cliente recebe notificação quando uma instância do **Win32_Process** é criado porque é a classe de evento **InstanceCreationEvent**.</span><span class="sxs-lookup"><span data-stu-id="2e368-102">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="2e368-103">Para obter mais informações, consulte a documentação da instrumentação de gerenciamento do Windows na biblioteca MSDN em http://msdn.microsoft.com/library.</span><span class="sxs-lookup"><span data-stu-id="2e368-103">For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</span></span> <span data-ttu-id="2e368-104">O cliente recebe eventos de maneira síncrona chamando o <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> método.</span><span class="sxs-lookup"><span data-stu-id="2e368-104">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="2e368-105">Este exemplo pode ser testado iniciando um processo, como o bloco de notas, enquanto o código de exemplo está em execução.</span><span class="sxs-lookup"><span data-stu-id="2e368-105">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher/cs/ManagementEventWatcher.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher/vb/ManagementEventWatcher.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2e368-106">Inicializa uma nova instância da classe <see cref="T:System.Management.ManagementEventWatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e368-106">Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementEventWatcher ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementEventWatcher();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2e368-107">Inicializa uma nova instância da classe <see cref="T:System.Management.ManagementEventWatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e368-107">Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class.</span>
          </span>
          <span data-ttu-id="2e368-108">Para inicialização adicional, defina as propriedades no objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e368-108">For further initialization, set the properties on the object.</span>
          </span>
          <span data-ttu-id="2e368-109">Esse é o construtor padrão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e368-109">This is the default constructor.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="2e368-110">Segurança do .NET Framework</span><span class="sxs-lookup"><span data-stu-id="2e368-110">.NET Framework Security</span></span>  
 <span data-ttu-id="2e368-111">Confiança total para o chamador imediato.</span><span class="sxs-lookup"><span data-stu-id="2e368-111">Full trust for the immediate caller.</span></span> <span data-ttu-id="2e368-112">Este membro não pode ser usado pelo código parcialmente confiável.</span><span class="sxs-lookup"><span data-stu-id="2e368-112">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="2e368-113">Para obter mais informações, consulte [usando bibliotecas de código parcialmente confiável](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="2e368-113">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2e368-114">O exemplo a seguir mostra como o cliente recebe notificação quando uma instância do **Win32_Process** é criado porque é a classe de evento **InstanceCreationEvent**.</span><span class="sxs-lookup"><span data-stu-id="2e368-114">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="2e368-115">Para obter mais informações, consulte a documentação da instrumentação de gerenciamento do Windows na biblioteca MSDN em http://msdn.microsoft.com/library.</span><span class="sxs-lookup"><span data-stu-id="2e368-115">For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</span></span> <span data-ttu-id="2e368-116">O cliente recebe eventos de maneira síncrona chamando o <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> método.</span><span class="sxs-lookup"><span data-stu-id="2e368-116">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="2e368-117">Este exemplo pode ser testado iniciando um processo, como o bloco de notas, enquanto o código de exemplo está em execução.</span><span class="sxs-lookup"><span data-stu-id="2e368-117">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher/cs/ManagementEventWatcher.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher/vb/ManagementEventWatcher.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementEventWatcher (System.Management.EventQuery query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Management.EventQuery query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.#ctor(System.Management.EventQuery)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (query As EventQuery)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementEventWatcher(System::Management::EventQuery ^ query);" />
      <MemberSignature Language="F#" Value="new System.Management.ManagementEventWatcher : System.Management.EventQuery -&gt; System.Management.ManagementEventWatcher" Usage="new System.Management.ManagementEventWatcher query" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="query" Type="System.Management.EventQuery" />
      </Parameters>
      <Docs>
        <param name="query">
          <span data-ttu-id="2e368-118">Um <see cref="T:System.Management.EventQuery" /> que representa uma consulta de evento WMI, que determina os eventos para os quais o inspetor vai escutar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e368-118">An <see cref="T:System.Management.EventQuery" /> representing a WMI event query, which determines the events for which the watcher will listen.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2e368-119">Inicializa uma nova instância da classe <see cref="T:System.Management.ManagementEventWatcher" /> ao receber uma *consulta de evento* WMI.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e368-119">Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class when given a WMI *event query*.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e368-120">O namespace no qual o Inspetor escutará eventos é o namespace padrão atualmente definida.</span><span class="sxs-lookup"><span data-stu-id="2e368-120">The namespace in which the watcher will be listening for events is the default namespace that is currently set.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="2e368-121">Segurança do .NET Framework</span><span class="sxs-lookup"><span data-stu-id="2e368-121">.NET Framework Security</span></span>  
 <span data-ttu-id="2e368-122">Confiança total para o chamador imediato.</span><span class="sxs-lookup"><span data-stu-id="2e368-122">Full trust for the immediate caller.</span></span> <span data-ttu-id="2e368-123">Este membro não pode ser usado pelo código parcialmente confiável.</span><span class="sxs-lookup"><span data-stu-id="2e368-123">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="2e368-124">Para obter mais informações, consulte [usando bibliotecas de código parcialmente confiável](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="2e368-124">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2e368-125">Este exemplo de código, o cliente recebe notificação quando uma instância do **Win32_Process** é criado porque é a classe de evento **InstanceCreationEvent**.</span><span class="sxs-lookup"><span data-stu-id="2e368-125">In this code example, the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="2e368-126">Para obter mais informações, consulte a documentação da instrumentação de gerenciamento do Windows na biblioteca MSDN em http://msdn.microsoft.com/library.</span><span class="sxs-lookup"><span data-stu-id="2e368-126">For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</span></span> <span data-ttu-id="2e368-127">O cliente recebe eventos de maneira síncrona chamando o <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> método.</span><span class="sxs-lookup"><span data-stu-id="2e368-127">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="2e368-128">Este exemplo pode ser testado iniciando um processo, como o bloco de notas, enquanto o código de exemplo está em execução.</span><span class="sxs-lookup"><span data-stu-id="2e368-128">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher-E#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-E/cs/ManagementEventWatcher-E.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher-E#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-E/vb/ManagementEventWatcher-E.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementEventWatcher (string query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (query As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementEventWatcher(System::String ^ query);" />
      <MemberSignature Language="F#" Value="new System.Management.ManagementEventWatcher : string -&gt; System.Management.ManagementEventWatcher" Usage="new System.Management.ManagementEventWatcher query" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="query" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="query">
          <span data-ttu-id="2e368-129">Uma consulta de evento WMI, que define os eventos para os quais o inspetor escutará.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e368-129">A WMI event query, which defines the events for which the watcher will listen.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2e368-130">Inicializa uma nova instância da classe <see cref="T:System.Management.ManagementEventWatcher" /> quando é fornecida uma *consulta de evento* do WMI na forma de uma cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e368-130">Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class when given a WMI *event query* in the form of a string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e368-131">O namespace no qual o Inspetor escutará eventos é o namespace padrão atualmente definida.</span><span class="sxs-lookup"><span data-stu-id="2e368-131">The namespace in which the watcher will be listening for events is the default namespace that is currently set.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="2e368-132">Segurança do .NET Framework</span><span class="sxs-lookup"><span data-stu-id="2e368-132">.NET Framework Security</span></span>  
 <span data-ttu-id="2e368-133">Confiança total para o chamador imediato.</span><span class="sxs-lookup"><span data-stu-id="2e368-133">Full trust for the immediate caller.</span></span> <span data-ttu-id="2e368-134">Este membro não pode ser usado pelo código parcialmente confiável.</span><span class="sxs-lookup"><span data-stu-id="2e368-134">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="2e368-135">Para obter mais informações, consulte [usando bibliotecas de código parcialmente confiável](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="2e368-135">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2e368-136">O exemplo a seguir mostra como o cliente recebe notificação quando uma instância do **Win32_Process** é criado porque é a classe de evento **InstanceCreationEvent**.</span><span class="sxs-lookup"><span data-stu-id="2e368-136">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="2e368-137">Para obter mais informações, consulte a documentação da instrumentação de gerenciamento do Windows na biblioteca MSDN em http://msdn.microsoft.com/library.</span><span class="sxs-lookup"><span data-stu-id="2e368-137">For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</span></span> <span data-ttu-id="2e368-138">O cliente recebe eventos de maneira síncrona chamando o <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> método.</span><span class="sxs-lookup"><span data-stu-id="2e368-138">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="2e368-139">Este exemplo pode ser testado iniciando um processo, como o bloco de notas, enquanto o código de exemplo está em execução.</span><span class="sxs-lookup"><span data-stu-id="2e368-139">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher-S#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-S/cs/ManagementEventWatcher-S.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher-S#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-S/vb/ManagementEventWatcher-S.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementEventWatcher (System.Management.ManagementScope scope, System.Management.EventQuery query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Management.ManagementScope scope, class System.Management.EventQuery query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.#ctor(System.Management.ManagementScope,System.Management.EventQuery)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (scope As ManagementScope, query As EventQuery)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementEventWatcher(System::Management::ManagementScope ^ scope, System::Management::EventQuery ^ query);" />
      <MemberSignature Language="F#" Value="new System.Management.ManagementEventWatcher : System.Management.ManagementScope * System.Management.EventQuery -&gt; System.Management.ManagementEventWatcher" Usage="new System.Management.ManagementEventWatcher (scope, query)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scope" Type="System.Management.ManagementScope" />
        <Parameter Name="query" Type="System.Management.EventQuery" />
      </Parameters>
      <Docs>
        <param name="scope">
          <span data-ttu-id="2e368-140">Um <see cref="T:System.Management.ManagementScope" /> que representa o escopo (namespace) em que o inspetor escutará eventos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e368-140">A <see cref="T:System.Management.ManagementScope" /> representing the scope (namespace) in which the watcher will listen for events.</span>
          </span>
        </param>
        <param name="query">
          <span data-ttu-id="2e368-141">Um <see cref="T:System.Management.EventQuery" /> que representa uma consulta de evento WMI, que determina os eventos para os quais o inspetor vai escutar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e368-141">An <see cref="T:System.Management.EventQuery" /> representing a WMI event query, which determines the events for which the watcher will listen.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2e368-142">Inicializa uma nova instância da classe <see cref="T:System.Management.ManagementEventWatcher" /> que escuta eventos em conformidade com a WMI a *consulta de evento* de WMI determinada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e368-142">Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class that listens for events conforming to the given WMI *event query*.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="2e368-143">Segurança do .NET Framework</span><span class="sxs-lookup"><span data-stu-id="2e368-143">.NET Framework Security</span></span>  
 <span data-ttu-id="2e368-144">Confiança total para o chamador imediato.</span><span class="sxs-lookup"><span data-stu-id="2e368-144">Full trust for the immediate caller.</span></span> <span data-ttu-id="2e368-145">Este membro não pode ser usado pelo código parcialmente confiável.</span><span class="sxs-lookup"><span data-stu-id="2e368-145">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="2e368-146">Para obter mais informações, consulte [usando bibliotecas de código parcialmente confiável](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="2e368-146">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2e368-147">Este exemplo de código, o cliente recebe notificação quando uma instância do **Win32_Process** é criado porque é a classe de evento **InstanceCreationEvent**.</span><span class="sxs-lookup"><span data-stu-id="2e368-147">In this code example, the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="2e368-148">Para obter mais informações, consulte a documentação da instrumentação de gerenciamento do Windows na biblioteca MSDN em http://msdn.microsoft.com/library.</span><span class="sxs-lookup"><span data-stu-id="2e368-148">For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</span></span> <span data-ttu-id="2e368-149">O cliente recebe eventos de maneira síncrona chamando o <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> método.</span><span class="sxs-lookup"><span data-stu-id="2e368-149">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="2e368-150">Este exemplo pode ser testado iniciando um processo, como o bloco de notas, enquanto o código de exemplo está em execução.</span><span class="sxs-lookup"><span data-stu-id="2e368-150">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher-M_E#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-M_E/cs/ManagementEventWatcher-M_E.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher-M_E#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-M_E/vb/ManagementEventWatcher-M_E.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementEventWatcher (string scope, string query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string scope, string query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (scope As String, query As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementEventWatcher(System::String ^ scope, System::String ^ query);" />
      <MemberSignature Language="F#" Value="new System.Management.ManagementEventWatcher : string * string -&gt; System.Management.ManagementEventWatcher" Usage="new System.Management.ManagementEventWatcher (scope, query)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="query" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="scope">
          <span data-ttu-id="2e368-151">O escopo de gerenciamento (namespace) em que o inspetor escuta eventos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e368-151">The management scope (namespace) in which the watcher will listen for events.</span>
          </span>
        </param>
        <param name="query">
          <span data-ttu-id="2e368-152">A consulta que define os eventos para os quais o inspetor escutará.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e368-152">The query that defines the events for which the watcher will listen.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2e368-153">Inicializa uma nova instância da classe <see cref="T:System.Management.ManagementEventWatcher" /> que escuta eventos em conformidade com a WMI a *consulta de evento* de WMI determinada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e368-153">Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class that listens for events conforming to the given WMI *event query*.</span>
          </span>
          <span data-ttu-id="2e368-154">Para essa variante, a consulta e o escopo são especificados como cadeias de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e368-154">For this variant, the query and the scope are specified as strings.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="2e368-155">Segurança do .NET Framework</span><span class="sxs-lookup"><span data-stu-id="2e368-155">.NET Framework Security</span></span>  
 <span data-ttu-id="2e368-156">Confiança total para o chamador imediato.</span><span class="sxs-lookup"><span data-stu-id="2e368-156">Full trust for the immediate caller.</span></span> <span data-ttu-id="2e368-157">Este membro não pode ser usado pelo código parcialmente confiável.</span><span class="sxs-lookup"><span data-stu-id="2e368-157">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="2e368-158">Para obter mais informações, consulte [usando bibliotecas de código parcialmente confiável](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="2e368-158">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2e368-159">O exemplo a seguir mostra como o cliente recebe notificação quando uma instância do **Win32_Process** é criado porque é a classe de evento **InstanceCreationEvent**.</span><span class="sxs-lookup"><span data-stu-id="2e368-159">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="2e368-160">Para obter mais informações, consulte a documentação da instrumentação de gerenciamento do Windows na biblioteca MSDN em http://msdn.microsoft.com/library.</span><span class="sxs-lookup"><span data-stu-id="2e368-160">For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</span></span> <span data-ttu-id="2e368-161">O cliente recebe eventos de maneira síncrona chamando o <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> método.</span><span class="sxs-lookup"><span data-stu-id="2e368-161">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="2e368-162">Este exemplo pode ser testado iniciando um processo, como o bloco de notas, enquanto o código de exemplo está em execução.</span><span class="sxs-lookup"><span data-stu-id="2e368-162">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher-S_S#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-S_S/cs/ManagementEventWatcher-S_S.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher-S_S#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-S_S/vb/ManagementEventWatcher-S_S.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementEventWatcher (System.Management.ManagementScope scope, System.Management.EventQuery query, System.Management.EventWatcherOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Management.ManagementScope scope, class System.Management.EventQuery query, class System.Management.EventWatcherOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.#ctor(System.Management.ManagementScope,System.Management.EventQuery,System.Management.EventWatcherOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (scope As ManagementScope, query As EventQuery, options As EventWatcherOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementEventWatcher(System::Management::ManagementScope ^ scope, System::Management::EventQuery ^ query, System::Management::EventWatcherOptions ^ options);" />
      <MemberSignature Language="F#" Value="new System.Management.ManagementEventWatcher : System.Management.ManagementScope * System.Management.EventQuery * System.Management.EventWatcherOptions -&gt; System.Management.ManagementEventWatcher" Usage="new System.Management.ManagementEventWatcher (scope, query, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scope" Type="System.Management.ManagementScope" />
        <Parameter Name="query" Type="System.Management.EventQuery" />
        <Parameter Name="options" Type="System.Management.EventWatcherOptions" />
      </Parameters>
      <Docs>
        <param name="scope">
          <span data-ttu-id="2e368-163">Um <see cref="T:System.Management.ManagementScope" /> que representa o escopo (namespace) em que o inspetor escutará eventos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e368-163">A <see cref="T:System.Management.ManagementScope" /> representing the scope (namespace) in which the watcher will listen for events.</span>
          </span>
        </param>
        <param name="query">
          <span data-ttu-id="2e368-164">Um <see cref="T:System.Management.EventQuery" /> que representa uma consulta de evento WMI, que determina os eventos para os quais o inspetor vai escutar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e368-164">An <see cref="T:System.Management.EventQuery" /> representing a WMI event query, which determines the events for which the watcher will listen.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="2e368-165">Um <see cref="T:System.Management.EventWatcherOptions" /> que representa as opções adicionais usadas para inspecionar eventos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e368-165">An <see cref="T:System.Management.EventWatcherOptions" /> representing additional options used to watch for events.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2e368-166">Inicializa uma nova instância da classe <see cref="T:System.Management.ManagementEventWatcher" /> que escuta eventos em conformidade com a consulta de evento da WMI determinada, de acordo com as opções especificadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e368-166">Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class that listens for events conforming to the given WMI event query, according to the specified options.</span>
          </span>
          <span data-ttu-id="2e368-167">Para essa variante, a consulta e o escopo são especificados como objetos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e368-167">For this variant, the query and the scope are specified objects.</span>
          </span>
          <span data-ttu-id="2e368-168">O objeto de opções pode especificar opções, como informações de tempo limite e contexto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e368-168">The options object can specify options such as time-out and context information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="2e368-169">Segurança do .NET Framework</span><span class="sxs-lookup"><span data-stu-id="2e368-169">.NET Framework Security</span></span>  
 <span data-ttu-id="2e368-170">Confiança total para o chamador imediato.</span><span class="sxs-lookup"><span data-stu-id="2e368-170">Full trust for the immediate caller.</span></span> <span data-ttu-id="2e368-171">Este membro não pode ser usado pelo código parcialmente confiável.</span><span class="sxs-lookup"><span data-stu-id="2e368-171">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="2e368-172">Para obter mais informações, consulte [usando bibliotecas de código parcialmente confiável](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="2e368-172">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2e368-173">O exemplo a seguir mostra como o cliente recebe notificação quando uma instância do **Win32_Process** é criado porque é a classe de evento **InstanceCreationEvent**.</span><span class="sxs-lookup"><span data-stu-id="2e368-173">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="2e368-174">Para obter mais informações, consulte a documentação da instrumentação de gerenciamento do Windows na biblioteca MSDN em http://msdn.microsoft.com/library.</span><span class="sxs-lookup"><span data-stu-id="2e368-174">For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</span></span> <span data-ttu-id="2e368-175">O cliente recebe eventos de maneira síncrona chamando o <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> método.</span><span class="sxs-lookup"><span data-stu-id="2e368-175">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="2e368-176">Este exemplo pode ser testado iniciando um processo, como o bloco de notas, enquanto o código de exemplo está em execução.</span><span class="sxs-lookup"><span data-stu-id="2e368-176">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher-M_E_E#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-M_E_E/cs/ManagementEventWatcher-M_E_E.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher-M_E_E#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-M_E_E/vb/ManagementEventWatcher-M_E_E.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementEventWatcher (string scope, string query, System.Management.EventWatcherOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string scope, string query, class System.Management.EventWatcherOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.#ctor(System.String,System.String,System.Management.EventWatcherOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (scope As String, query As String, options As EventWatcherOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementEventWatcher(System::String ^ scope, System::String ^ query, System::Management::EventWatcherOptions ^ options);" />
      <MemberSignature Language="F#" Value="new System.Management.ManagementEventWatcher : string * string * System.Management.EventWatcherOptions -&gt; System.Management.ManagementEventWatcher" Usage="new System.Management.ManagementEventWatcher (scope, query, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="query" Type="System.String" />
        <Parameter Name="options" Type="System.Management.EventWatcherOptions" />
      </Parameters>
      <Docs>
        <param name="scope">
          <span data-ttu-id="2e368-177">O escopo de gerenciamento (namespace) em que o inspetor escuta eventos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e368-177">The management scope (namespace) in which the watcher will listen for events.</span>
          </span>
        </param>
        <param name="query">
          <span data-ttu-id="2e368-178">A consulta que define os eventos para os quais o inspetor escutará.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e368-178">The query that defines the events for which the watcher will listen.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="2e368-179">Um <see cref="T:System.Management.EventWatcherOptions" /> que representa as opções adicionais usadas para inspecionar eventos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e368-179">An <see cref="T:System.Management.EventWatcherOptions" /> representing additional options used to watch for events.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2e368-180">Inicializa uma nova instância da classe <see cref="T:System.Management.ManagementEventWatcher" /> que escuta eventos em conformidade com a *consulta de evento* da WMI determinada, de acordo com as opções especificadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e368-180">Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class that listens for events conforming to the given WMI *event query*, according to the specified options.</span>
          </span>
          <span data-ttu-id="2e368-181">Para essa variante, a consulta e o escopo são especificados como cadeias de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e368-181">For this variant, the query and the scope are specified as strings.</span>
          </span>
          <span data-ttu-id="2e368-182">O objeto de opções pode especificar opções, como informações de tempo limite e contexto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e368-182">The options object can specify options such as a time-out and context information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="2e368-183">Segurança do .NET Framework</span><span class="sxs-lookup"><span data-stu-id="2e368-183">.NET Framework Security</span></span>  
 <span data-ttu-id="2e368-184">Confiança total para o chamador imediato.</span><span class="sxs-lookup"><span data-stu-id="2e368-184">Full trust for the immediate caller.</span></span> <span data-ttu-id="2e368-185">Este membro não pode ser usado pelo código parcialmente confiável.</span><span class="sxs-lookup"><span data-stu-id="2e368-185">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="2e368-186">Para obter mais informações, consulte [usando bibliotecas de código parcialmente confiável](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="2e368-186">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2e368-187">O exemplo a seguir mostra como o cliente recebe notificação quando uma instância do **Win32_Process** é criado porque é a classe de evento **InstanceCreationEvent**.</span><span class="sxs-lookup"><span data-stu-id="2e368-187">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="2e368-188">Para obter mais informações, consulte a documentação da instrumentação de gerenciamento do Windows na biblioteca MSDN em http://msdn.microsoft.com/library.</span><span class="sxs-lookup"><span data-stu-id="2e368-188">For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</span></span> <span data-ttu-id="2e368-189">O cliente recebe eventos de maneira síncrona chamando o <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> método.</span><span class="sxs-lookup"><span data-stu-id="2e368-189">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="2e368-190">Este exemplo pode ser testado iniciando um processo, como o bloco de notas, enquanto o código de exemplo está em execução.</span><span class="sxs-lookup"><span data-stu-id="2e368-190">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher-S_S_E#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-S_S_E/cs/ManagementEventWatcher-S_S_E.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher-S_S_E#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-S_S_E/vb/ManagementEventWatcher-S_S_E.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EventArrived">
      <MemberSignature Language="C#" Value="public event System.Management.EventArrivedEventHandler EventArrived;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Management.EventArrivedEventHandler EventArrived" />
      <MemberSignature Language="DocId" Value="E:System.Management.ManagementEventWatcher.EventArrived" />
      <MemberSignature Language="VB.NET" Value="Public Event EventArrived As EventArrivedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Management::EventArrivedEventHandler ^ EventArrived;" />
      <MemberSignature Language="F#" Value="member this.EventArrived : System.Management.EventArrivedEventHandler " Usage="member this.EventArrived : System.Management.EventArrivedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.EventArrivedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2e368-191">Ocorre quando um novo evento chega.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e368-191">Occurs when a new event arrives.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="event-data"></a><span data-ttu-id="2e368-192">Dados do Evento</span><span class="sxs-lookup"><span data-stu-id="2e368-192">Event Data</span></span>  
 <span data-ttu-id="2e368-193">O manipulador de eventos recebe um argumento do tipo <xref:System.Management.EventArrivedEventArgs> que contém dados relacionados a este evento.</span><span class="sxs-lookup"><span data-stu-id="2e368-193">The event handler receives an argument of type <xref:System.Management.EventArrivedEventArgs> containing data related to this event.</span></span> <span data-ttu-id="2e368-194">O seguinte <xref:System.Management.EventArrivedEventArgs> propriedades fornecem informações específicas para esse evento.</span><span class="sxs-lookup"><span data-stu-id="2e368-194">The following <xref:System.Management.EventArrivedEventArgs> properties provide information specific to this event.</span></span>  
  
|<span data-ttu-id="2e368-195">Propriedade</span><span class="sxs-lookup"><span data-stu-id="2e368-195">Property</span></span>|<span data-ttu-id="2e368-196">Descrição</span><span class="sxs-lookup"><span data-stu-id="2e368-196">Description</span></span>|  
|--------------|-----------------|  
|<span data-ttu-id="2e368-197"><xref:System.Management.ManagementEventArgs.Context%2A> (herdado de <xref:System.Management.ManagementEventArgs>)</span><span class="sxs-lookup"><span data-stu-id="2e368-197"><xref:System.Management.ManagementEventArgs.Context%2A> (inherited from <xref:System.Management.ManagementEventArgs>)</span></span>|<span data-ttu-id="2e368-198">Obtém o contexto de operação ecoado de volta da operação que disparou o evento.</span><span class="sxs-lookup"><span data-stu-id="2e368-198">Gets the operation context echoed back from the operation that triggered the event.</span></span>|  
|<xref:System.Management.EventArrivedEventArgs.NewEvent%2A>|<span data-ttu-id="2e368-199">Obtém o evento WMI que foi entregue.</span><span class="sxs-lookup"><span data-stu-id="2e368-199">Gets the WMI event that was delivered.</span></span>|  
  
## <a name="net-framework-security"></a><span data-ttu-id="2e368-200">Segurança do .NET Framework</span><span class="sxs-lookup"><span data-stu-id="2e368-200">.NET Framework Security</span></span>  
 <span data-ttu-id="2e368-201">Confiança total para o chamador imediato.</span><span class="sxs-lookup"><span data-stu-id="2e368-201">Full trust for the immediate caller.</span></span> <span data-ttu-id="2e368-202">Este membro não pode ser usado pelo código parcialmente confiável.</span><span class="sxs-lookup"><span data-stu-id="2e368-202">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="2e368-203">Para obter mais informações, consulte [usando bibliotecas de código parcialmente confiável](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="2e368-203">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~ManagementEventWatcher ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!ManagementEventWatcher ()" />
      <MemberSignature Language="F#" Value="abstract member Finalize : unit -&gt; unit&#xA;override this.Finalize : unit -&gt; unit" Usage="managementEventWatcher.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2e368-204">Garante que as chamadas pendentes sejam desmarcadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e368-204">Ensures that outstanding calls are cleared.</span>
          </span>
          <span data-ttu-id="2e368-205">Este é o destruidor do objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e368-205">This is the destructor for the object.</span>
          </span>
          <span data-ttu-id="2e368-206">Em C#, os finalizadores são expressos usando a sintaxe do destruidor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e368-206">In C#, finalizers are expressed using destructor syntax.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="2e368-207">Segurança do .NET Framework</span><span class="sxs-lookup"><span data-stu-id="2e368-207">.NET Framework Security</span></span>  
 <span data-ttu-id="2e368-208">Confiança total para o chamador imediato.</span><span class="sxs-lookup"><span data-stu-id="2e368-208">Full trust for the immediate caller.</span></span> <span data-ttu-id="2e368-209">Este membro não pode ser usado pelo código parcialmente confiável.</span><span class="sxs-lookup"><span data-stu-id="2e368-209">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="2e368-210">Para obter mais informações, consulte [usando bibliotecas de código parcialmente confiável](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="2e368-210">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Options">
      <MemberSignature Language="C#" Value="public System.Management.EventWatcherOptions Options { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Management.EventWatcherOptions Options" />
      <MemberSignature Language="DocId" Value="P:System.Management.ManagementEventWatcher.Options" />
      <MemberSignature Language="VB.NET" Value="Public Property Options As EventWatcherOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Management::EventWatcherOptions ^ Options { System::Management::EventWatcherOptions ^ get(); void set(System::Management::EventWatcherOptions ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Options : System.Management.EventWatcherOptions with get, set" Usage="System.Management.ManagementEventWatcher.Options" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.EventWatcherOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2e368-211">Obtém ou define as opções usadas para observar eventos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e368-211">Gets or sets the options used to watch for events.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2e368-212">Retorna um <see cref="T:System.Management.EventWatcherOptions" /> que contém as opções de evento usadas para observar eventos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e368-212">Returns an <see cref="T:System.Management.EventWatcherOptions" /> that contains the event options used to watch for events.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a><span data-ttu-id="2e368-213">Valor de propriedade</span><span class="sxs-lookup"><span data-stu-id="2e368-213">Property Value</span></span>  
 <span data-ttu-id="2e368-214">As opções usadas para observar eventos.</span><span class="sxs-lookup"><span data-stu-id="2e368-214">The options used to watch for events.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="2e368-215">Segurança do .NET Framework</span><span class="sxs-lookup"><span data-stu-id="2e368-215">.NET Framework Security</span></span>  
 <span data-ttu-id="2e368-216">Confiança total para o chamador imediato.</span><span class="sxs-lookup"><span data-stu-id="2e368-216">Full trust for the immediate caller.</span></span> <span data-ttu-id="2e368-217">Este membro não pode ser usado pelo código parcialmente confiável.</span><span class="sxs-lookup"><span data-stu-id="2e368-217">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="2e368-218">Para obter mais informações, consulte [usando bibliotecas de código parcialmente confiável](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="2e368-218">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2e368-219">O exemplo a seguir mostra como o cliente recebe notificação quando uma instância do **Win32_Process** é criado porque é a classe de evento **InstanceCreationEvent**.</span><span class="sxs-lookup"><span data-stu-id="2e368-219">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="2e368-220">Para obter mais informações, consulte a documentação da instrumentação de gerenciamento do Windows na biblioteca MSDN em http://msdn.microsoft.com/library.</span><span class="sxs-lookup"><span data-stu-id="2e368-220">For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</span></span> <span data-ttu-id="2e368-221">O cliente recebe eventos de maneira síncrona chamando o <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> método.</span><span class="sxs-lookup"><span data-stu-id="2e368-221">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="2e368-222">Este exemplo pode ser testado iniciando um processo, como o bloco de notas, enquanto o código de exemplo está em execução.</span><span class="sxs-lookup"><span data-stu-id="2e368-222">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher_Options#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_Options/cs/ManagementEventWatcher_Options.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher_Options#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_Options/vb/ManagementEventWatcher_Options.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Query">
      <MemberSignature Language="C#" Value="public System.Management.EventQuery Query { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Management.EventQuery Query" />
      <MemberSignature Language="DocId" Value="P:System.Management.ManagementEventWatcher.Query" />
      <MemberSignature Language="VB.NET" Value="Public Property Query As EventQuery" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Management::EventQuery ^ Query { System::Management::EventQuery ^ get(); void set(System::Management::EventQuery ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Query : System.Management.EventQuery with get, set" Usage="System.Management.ManagementEventWatcher.Query" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.EventQuery</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2e368-223">Obtém ou define os critérios a aplicar aos eventos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e368-223">Gets or sets the criteria to apply to events.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2e368-224">Retorna um <see cref="T:System.Management.EventQuery" /> que contém a consulta a aplicar aos eventos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e368-224">Returns an <see cref="T:System.Management.EventQuery" /> that contains the query to apply to events.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a><span data-ttu-id="2e368-225">Valor de propriedade</span><span class="sxs-lookup"><span data-stu-id="2e368-225">Property Value</span></span>  
 <span data-ttu-id="2e368-226">Os critérios para aplicar aos eventos, que é igual para o *consulta de evento*.</span><span class="sxs-lookup"><span data-stu-id="2e368-226">The criteria to apply to the events, which is equal to the *event query*.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="2e368-227">Segurança do .NET Framework</span><span class="sxs-lookup"><span data-stu-id="2e368-227">.NET Framework Security</span></span>  
 <span data-ttu-id="2e368-228">Confiança total para o chamador imediato.</span><span class="sxs-lookup"><span data-stu-id="2e368-228">Full trust for the immediate caller.</span></span> <span data-ttu-id="2e368-229">Este membro não pode ser usado pelo código parcialmente confiável.</span><span class="sxs-lookup"><span data-stu-id="2e368-229">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="2e368-230">Para obter mais informações, consulte [usando bibliotecas de código parcialmente confiável](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="2e368-230">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2e368-231">O exemplo a seguir mostra como o cliente recebe notificação quando uma instância do **Win32_Process** é criado porque é a classe de evento **InstanceCreationEvent**.</span><span class="sxs-lookup"><span data-stu-id="2e368-231">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="2e368-232">Para obter mais informações, consulte a documentação da instrumentação de gerenciamento do Windows na biblioteca MSDN em http://msdn.microsoft.com/library.</span><span class="sxs-lookup"><span data-stu-id="2e368-232">For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</span></span> <span data-ttu-id="2e368-233">O cliente recebe eventos de maneira síncrona chamando o <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> método.</span><span class="sxs-lookup"><span data-stu-id="2e368-233">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="2e368-234">Este exemplo pode ser testado iniciando um processo, como o bloco de notas, enquanto o código de exemplo está em execução.</span><span class="sxs-lookup"><span data-stu-id="2e368-234">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher_Query#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_Query/cs/ManagementEventWatcher_Query.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher_Query#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_Query/vb/ManagementEventWatcher_Query.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scope">
      <MemberSignature Language="C#" Value="public System.Management.ManagementScope Scope { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Management.ManagementScope Scope" />
      <MemberSignature Language="DocId" Value="P:System.Management.ManagementEventWatcher.Scope" />
      <MemberSignature Language="VB.NET" Value="Public Property Scope As ManagementScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Management::ManagementScope ^ Scope { System::Management::ManagementScope ^ get(); void set(System::Management::ManagementScope ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Scope : System.Management.ManagementScope with get, set" Usage="System.Management.ManagementEventWatcher.Scope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.ManagementScope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2e368-235">Obtém ou define o escopo no qual inspecionar eventos (namespace ou escopo).</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e368-235">Gets or sets the scope in which to watch for events (namespace or scope).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2e368-236">Retorna um <see cref="T:System.Management.ManagementScope" /> que contém o escopo de em qual inspecionar eventos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e368-236">Returns a <see cref="T:System.Management.ManagementScope" /> that contains the scope the in which to watch for events.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a><span data-ttu-id="2e368-237">Valor de propriedade</span><span class="sxs-lookup"><span data-stu-id="2e368-237">Property Value</span></span>  
 <span data-ttu-id="2e368-238">O escopo no qual inspecionar eventos (namespace ou escopo).</span><span class="sxs-lookup"><span data-stu-id="2e368-238">The scope in which to watch for events (namespace or scope).</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="2e368-239">Segurança do .NET Framework</span><span class="sxs-lookup"><span data-stu-id="2e368-239">.NET Framework Security</span></span>  
 <span data-ttu-id="2e368-240">Confiança total para o chamador imediato.</span><span class="sxs-lookup"><span data-stu-id="2e368-240">Full trust for the immediate caller.</span></span> <span data-ttu-id="2e368-241">Este membro não pode ser usado pelo código parcialmente confiável.</span><span class="sxs-lookup"><span data-stu-id="2e368-241">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="2e368-242">Para obter mais informações, consulte [usando bibliotecas de código parcialmente confiável](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="2e368-242">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2e368-243">O exemplo a seguir mostra como o cliente recebe notificação quando uma instância do **Win32_Process** é criado porque é a classe de evento **InstanceCreationEvent**.</span><span class="sxs-lookup"><span data-stu-id="2e368-243">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="2e368-244">Para obter mais informações, consulte a documentação da instrumentação de gerenciamento do Windows na biblioteca MSDN em http://msdn.microsoft.com/library.</span><span class="sxs-lookup"><span data-stu-id="2e368-244">For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</span></span> <span data-ttu-id="2e368-245">O cliente recebe eventos de maneira síncrona chamando o <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> método.</span><span class="sxs-lookup"><span data-stu-id="2e368-245">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="2e368-246">Este exemplo pode ser testado iniciando um processo, como o bloco de notas, enquanto o código de exemplo está em execução.</span><span class="sxs-lookup"><span data-stu-id="2e368-246">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher_Scope#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_Scope/cs/ManagementEventWatcher_Scope.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher_Scope#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_Scope/vb/ManagementEventWatcher_Scope.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.Start" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start();" />
      <MemberSignature Language="F#" Value="member this.Start : unit -&gt; unit" Usage="managementEventWatcher.Start " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2e368-247">Assina eventos com a consulta fornecida e os entrega, de forma assíncrona, por meio do evento <see cref="E:System.Management.ManagementEventWatcher.EventArrived" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e368-247">Subscribes to events with the given query and delivers them, asynchronously, through the <see cref="E:System.Management.ManagementEventWatcher.EventArrived" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="2e368-248">Segurança do .NET Framework</span><span class="sxs-lookup"><span data-stu-id="2e368-248">.NET Framework Security</span></span>  
 <span data-ttu-id="2e368-249">Confiança total para o chamador imediato.</span><span class="sxs-lookup"><span data-stu-id="2e368-249">Full trust for the immediate caller.</span></span> <span data-ttu-id="2e368-250">Este membro não pode ser usado pelo código parcialmente confiável.</span><span class="sxs-lookup"><span data-stu-id="2e368-250">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="2e368-251">Para obter mais informações, consulte [usando bibliotecas de código parcialmente confiável](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="2e368-251">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="managementEventWatcher.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2e368-252">Cancela a assinatura seja ela síncrona ou assíncrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e368-252">Cancels the subscription whether it is synchronous or asynchronous.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="2e368-253">Segurança do .NET Framework</span><span class="sxs-lookup"><span data-stu-id="2e368-253">.NET Framework Security</span></span>  
 <span data-ttu-id="2e368-254">Confiança total para o chamador imediato.</span><span class="sxs-lookup"><span data-stu-id="2e368-254">Full trust for the immediate caller.</span></span> <span data-ttu-id="2e368-255">Este membro não pode ser usado pelo código parcialmente confiável.</span><span class="sxs-lookup"><span data-stu-id="2e368-255">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="2e368-256">Para obter mais informações, consulte [usando bibliotecas de código parcialmente confiável](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="2e368-256">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2e368-257">O exemplo a seguir mostra como o cliente recebe notificação quando uma instância do **Win32_Process** é criado porque é a classe de evento **InstanceCreationEvent**.</span><span class="sxs-lookup"><span data-stu-id="2e368-257">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="2e368-258">Para obter mais informações, consulte a documentação da instrumentação de gerenciamento do Windows na biblioteca MSDN em http://msdn.microsoft.com/library.</span><span class="sxs-lookup"><span data-stu-id="2e368-258">For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</span></span> <span data-ttu-id="2e368-259">O cliente recebe eventos de maneira síncrona chamando o <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> método.</span><span class="sxs-lookup"><span data-stu-id="2e368-259">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="2e368-260">Este exemplo pode ser testado iniciando um processo, como o bloco de notas, enquanto o código de exemplo está em execução.</span><span class="sxs-lookup"><span data-stu-id="2e368-260">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher_Stop#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_Stop/cs/ManagementEventWatcher_Stop.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher_Stop#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_Stop/vb/ManagementEventWatcher_Stop.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stopped">
      <MemberSignature Language="C#" Value="public event System.Management.StoppedEventHandler Stopped;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Management.StoppedEventHandler Stopped" />
      <MemberSignature Language="DocId" Value="E:System.Management.ManagementEventWatcher.Stopped" />
      <MemberSignature Language="VB.NET" Value="Public Event Stopped As StoppedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Management::StoppedEventHandler ^ Stopped;" />
      <MemberSignature Language="F#" Value="member this.Stopped : System.Management.StoppedEventHandler " Usage="member this.Stopped : System.Management.StoppedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.StoppedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2e368-261">Ocorre quando uma assinatura é cancelada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e368-261">Occurs when a subscription is canceled.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="event-data"></a><span data-ttu-id="2e368-262">Dados do Evento</span><span class="sxs-lookup"><span data-stu-id="2e368-262">Event Data</span></span>  
 <span data-ttu-id="2e368-263">O manipulador de eventos recebe um argumento do tipo <xref:System.Management.StoppedEventArgs> que contém dados relacionados a este evento.</span><span class="sxs-lookup"><span data-stu-id="2e368-263">The event handler receives an argument of type <xref:System.Management.StoppedEventArgs> containing data related to this event.</span></span> <span data-ttu-id="2e368-264">O seguinte <xref:System.Management.StoppedEventArgs> propriedades fornecem informações específicas para esse evento.</span><span class="sxs-lookup"><span data-stu-id="2e368-264">The following <xref:System.Management.StoppedEventArgs> properties provide information specific to this event.</span></span>  
  
|<span data-ttu-id="2e368-265">Propriedade</span><span class="sxs-lookup"><span data-stu-id="2e368-265">Property</span></span>|<span data-ttu-id="2e368-266">Descrição</span><span class="sxs-lookup"><span data-stu-id="2e368-266">Description</span></span>|  
|--------------|-----------------|  
|<span data-ttu-id="2e368-267"><xref:System.Management.ManagementEventArgs.Context%2A> (herdado de <xref:System.Management.ManagementEventArgs>)</span><span class="sxs-lookup"><span data-stu-id="2e368-267"><xref:System.Management.ManagementEventArgs.Context%2A> (inherited from <xref:System.Management.ManagementEventArgs>)</span></span>|<span data-ttu-id="2e368-268">Obtém o contexto de operação ecoado de volta da operação que disparou o evento.</span><span class="sxs-lookup"><span data-stu-id="2e368-268">Gets the operation context echoed back from the operation that triggered the event.</span></span>|  
|<xref:System.Management.StoppedEventArgs.Status%2A>|<span data-ttu-id="2e368-269">Obtém o status de conclusão da operação.</span><span class="sxs-lookup"><span data-stu-id="2e368-269">Gets the completion status of the operation.</span></span>|  
  
## <a name="net-framework-security"></a><span data-ttu-id="2e368-270">Segurança do .NET Framework</span><span class="sxs-lookup"><span data-stu-id="2e368-270">.NET Framework Security</span></span>  
 <span data-ttu-id="2e368-271">Confiança total para o chamador imediato.</span><span class="sxs-lookup"><span data-stu-id="2e368-271">Full trust for the immediate caller.</span></span> <span data-ttu-id="2e368-272">Este membro não pode ser usado pelo código parcialmente confiável.</span><span class="sxs-lookup"><span data-stu-id="2e368-272">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="2e368-273">Para obter mais informações, consulte [usando bibliotecas de código parcialmente confiável](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="2e368-273">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WaitForNextEvent">
      <MemberSignature Language="C#" Value="public System.Management.ManagementBaseObject WaitForNextEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Management.ManagementBaseObject WaitForNextEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.WaitForNextEvent" />
      <MemberSignature Language="VB.NET" Value="Public Function WaitForNextEvent () As ManagementBaseObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Management::ManagementBaseObject ^ WaitForNextEvent();" />
      <MemberSignature Language="F#" Value="member this.WaitForNextEvent : unit -&gt; System.Management.ManagementBaseObject" Usage="managementEventWatcher.WaitForNextEvent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.ManagementBaseObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2e368-274">Aguarda o próximo evento que corresponde à consulta especificada chegar e, em seguida, retorna-o.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e368-274">Waits for the next event that matches the specified query to arrive, and then returns it.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2e368-275">Um <see cref="T:System.Management.ManagementBaseObject" /> que representa o evento recém-chegado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e368-275">A <see cref="T:System.Management.ManagementBaseObject" /> representing the newly arrived event.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e368-276">Se o objeto do observador de evento contém as opções com um tempo limite especificado, a API aguardará o próximo evento apenas para a quantidade especificada de tempo; Caso contrário, a API será bloqueada até que o próximo evento ocorra.</span><span class="sxs-lookup"><span data-stu-id="2e368-276">If the event watcher object contains options with a specified time-out, the API will wait for the next event only for the specified amount of time; otherwise, the API will be blocked until the next event occurs.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="2e368-277">Segurança do .NET Framework</span><span class="sxs-lookup"><span data-stu-id="2e368-277">.NET Framework Security</span></span>  
 <span data-ttu-id="2e368-278">Confiança total para o chamador imediato.</span><span class="sxs-lookup"><span data-stu-id="2e368-278">Full trust for the immediate caller.</span></span> <span data-ttu-id="2e368-279">Este membro não pode ser usado pelo código parcialmente confiável.</span><span class="sxs-lookup"><span data-stu-id="2e368-279">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="2e368-280">Para obter mais informações, consulte [usando bibliotecas de código parcialmente confiável](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="2e368-280">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2e368-281">O exemplo a seguir mostra como o cliente recebe notificação quando uma instância do **Win32_Process** é criado porque é a classe de evento **InstanceCreationEvent**.</span><span class="sxs-lookup"><span data-stu-id="2e368-281">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="2e368-282">Para obter mais informações, consulte a documentação da instrumentação de gerenciamento do Windows na biblioteca MSDN em http://msdn.microsoft.com/library.</span><span class="sxs-lookup"><span data-stu-id="2e368-282">For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</span></span> <span data-ttu-id="2e368-283">O cliente recebe eventos de maneira síncrona chamando o <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> método.</span><span class="sxs-lookup"><span data-stu-id="2e368-283">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="2e368-284">Este exemplo pode ser testado iniciando um processo, como o bloco de notas, enquanto o código de exemplo está em execução.</span><span class="sxs-lookup"><span data-stu-id="2e368-284">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher_WaitForNextEvent#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_WaitForNextEvent/cs/ManagementEventWatcher_WaitForNextEvent.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher_WaitForNextEvent#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_WaitForNextEvent/vb/ManagementEventWatcher_WaitForNextEvent.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>