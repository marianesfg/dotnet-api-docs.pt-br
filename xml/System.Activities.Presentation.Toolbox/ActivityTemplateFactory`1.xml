<Type Name="ActivityTemplateFactory&lt;T&gt;" FullName="System.Activities.Presentation.Toolbox.ActivityTemplateFactory&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d8deef04afcc2c9d75b79061dd9715a2b6b8288f" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48753227" /></Metadata><TypeSignature Language="C#" Value="public abstract class ActivityTemplateFactory&lt;T&gt; : System.Activities.Presentation.IActivityTemplateFactory&lt;T&gt; where T : class" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ActivityTemplateFactory`1&lt;class T&gt; extends System.Object implements class System.Activities.Presentation.IActivityTemplateFactory`1&lt;!T&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.Toolbox.ActivityTemplateFactory`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ActivityTemplateFactory(Of T)&#xA;Implements IActivityTemplateFactory(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA; where T : classpublic ref class ActivityTemplateFactory abstract : System::Activities::Presentation::IActivityTemplateFactory&lt;T&gt;" />
  <TypeSignature Language="F#" Value="type ActivityTemplateFactory&lt;'T (requires 'T : null)&gt; = class&#xA;    interface IActivityTemplateFactory&lt;'T (requires 'T : null)&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Activities.Presentation.IActivityTemplateFactory&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Windows.Markup.ContentProperty("Implementation")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T"><span data-ttu-id="87872-101">O tipo desta fábrica criado.</span><span class="sxs-lookup"><span data-stu-id="87872-101">The type this factory created.</span></span></typeparam>
    <summary><span data-ttu-id="87872-102">Representa uma classe que é a representação de XAML para um IActivityTemplateFactory.</span><span class="sxs-lookup"><span data-stu-id="87872-102">Represents a class that is the XAML representation for an IActivityTemplateFactory.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ActivityTemplateFactory ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ActivityTemplateFactory`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ActivityTemplateFactory();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="87872-103">Inicializa uma nova instância da classe <see cref="T:System.Activities.Presentation.Toolbox.ActivityTemplateFactory`1" />.</span><span class="sxs-lookup"><span data-stu-id="87872-103">Initializes a new instance of the <see cref="T:System.Activities.Presentation.Toolbox.ActivityTemplateFactory`1" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public T Create (System.Windows.DependencyObject target, System.Windows.IDataObject dataObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !T Create(class System.Windows.DependencyObject target, class System.Windows.IDataObject dataObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ActivityTemplateFactory`1.Create(System.Windows.DependencyObject,System.Windows.IDataObject)" />
      <MemberSignature Language="VB.NET" Value="Public Function Create (target As DependencyObject, dataObject As IDataObject) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual T Create(System::Windows::DependencyObject ^ target, System::Windows::IDataObject ^ dataObject);" />
      <MemberSignature Language="F#" Value="abstract member Create : System.Windows.DependencyObject * System.Windows.IDataObject -&gt; 'T&#xA;override this.Create : System.Windows.DependencyObject * System.Windows.IDataObject -&gt; 'T" Usage="activityTemplateFactory.Create (target, dataObject)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Activities.Presentation.IActivityTemplateFactory`1.Create(System.Windows.DependencyObject,System.Windows.IDataObject)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="dataObject" Type="System.Windows.IDataObject" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="87872-104">Uma referência de destino – não usada.</span><span class="sxs-lookup"><span data-stu-id="87872-104">A reference the target- not used.</span></span></param>
        <param name="dataObject"><span data-ttu-id="87872-105">Uma referência de ao objeto de dados – não usada.</span><span class="sxs-lookup"><span data-stu-id="87872-105">A reference to the data object - not used.</span></span></param>
        <summary><span data-ttu-id="87872-106">Cria uma atividade chamando a implementação.</span><span class="sxs-lookup"><span data-stu-id="87872-106">Creates an activity by calling Implementation.</span></span></summary>
        <returns><span data-ttu-id="87872-107">A atividade criada pela implementação.</span><span class="sxs-lookup"><span data-stu-id="87872-107">The activity created by the implementation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Implementation">
      <MemberSignature Language="C#" Value="protected virtual Func&lt;T&gt; Implementation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`1&lt;!T&gt; Implementation" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Toolbox.ActivityTemplateFactory`1.Implementation" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Property Implementation As Func(Of T)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Func&lt;T&gt; ^ Implementation { Func&lt;T&gt; ^ get(); void set(Func&lt;T&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Implementation : Func&lt;'T (requires 'T : null)&gt; with get, set" Usage="System.Activities.Presentation.Toolbox.ActivityTemplateFactory&lt;'T (requires 'T : null)&gt;.Implementation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Windows.Markup.Ambient</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Windows.Markup.XamlDeferLoad(typeof(System.Activities.XamlIntegration.FuncDeferringLoader), typeof(System.Activities.Presentation.Toolbox.ActivityTemplateFactory))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Func&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="87872-108">Obtém ou define o método de fábrica que cria uma atividade como a implementação.</span><span class="sxs-lookup"><span data-stu-id="87872-108">Gets or sets the factory method that creates an activity as the implementation.</span></span></summary>
        <value><span data-ttu-id="87872-109">O método de fábrica que cria uma atividade como a implementação.</span><span class="sxs-lookup"><span data-stu-id="87872-109">The factory method that creates an activity as the implementation.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>