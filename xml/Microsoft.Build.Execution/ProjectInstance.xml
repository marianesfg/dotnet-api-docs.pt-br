<Type Name="ProjectInstance" FullName="Microsoft.Build.Execution.ProjectInstance">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b31c7e1182caf15b882e6b8e367b9ff3474a0ff9" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48610552" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ProjectInstance" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ProjectInstance extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Execution.ProjectInstance" />
  <TypeSignature Language="VB.NET" Value="Public Class ProjectInstance" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProjectInstance" />
  <TypeSignature Language="F#" Value="type ProjectInstance = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerDisplay("{FullPath} #Targets={TargetsCount} DefaultTargets={(DefaultTargets == null) ? System.String.Empty : System.String.Join(";", DefaultTargets.ToArray())} ToolsVersion={Toolset.ToolsVersion} InitialTargets={(InitialTargets == null) ? System.String.Empty : System.String.Join(";", InitialTargets.ToArray())} #GlobalProperties={globalProperties.Count} #Properties={properties.Count} #ItemTypes={items.ItemTypes.Count} #Items={items.Count}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="fa3db-101">Representa uma instância do projeto.</span>
      <span class="sxs-lookup">
        <span data-stu-id="fa3db-101">Represents a project instance.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa3db-102">As instâncias dessa classe resultam quando um projeto é clonado.</span><span class="sxs-lookup"><span data-stu-id="fa3db-102">Instances of this class result when a project is cloned.</span></span> <span data-ttu-id="fa3db-103">Construtores são internos para exigir que os usuários criem instâncias do projeto de projetos existentes.</span><span class="sxs-lookup"><span data-stu-id="fa3db-103">Constructors are internal in order to require users to create project instances from existing projects.</span></span>  
  
 <span data-ttu-id="fa3db-104">Novas instâncias do projeto são imutáveis, exceto que os itens de instância podem ser adicionados a eles e as propriedades de instância definidas neles.</span><span class="sxs-lookup"><span data-stu-id="fa3db-104">New project instances are immutable, except that instance items can be added to them and instance properties set on them.</span></span> <span data-ttu-id="fa3db-105">Instâncias do projeto são úteis porque podem ser modificados e compilados várias vezes sem afetar o projeto original.</span><span class="sxs-lookup"><span data-stu-id="fa3db-105">Project instances are useful because they can be modified and built several times without disturbing the original project.</span></span>  
  
 <span data-ttu-id="fa3db-106">Essa classe nem qualquer um de seus constituintes pode ter referências a <xref:Microsoft.Build.Construction> ou <xref:Microsoft.Build.Evaluation> objetos.</span><span class="sxs-lookup"><span data-stu-id="fa3db-106">Neither this class nor any of its constituents is allowed to have references to <xref:Microsoft.Build.Construction> or <xref:Microsoft.Build.Evaluation> objects.</span></span>  
  
 <span data-ttu-id="fa3db-107">Destinos de instância de projeto, serviços de host e o registro de tarefas não são expostos.</span><span class="sxs-lookup"><span data-stu-id="fa3db-107">Project instance targets, host services, and the task registry are not exposed.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fa3db-108">Cria uma nova instância de projeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-108">Creates a new project instance.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectInstance (Microsoft.Build.Construction.ProjectRootElement xml);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Construction.ProjectRootElement xml) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.#ctor(Microsoft.Build.Construction.ProjectRootElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xml As ProjectRootElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectInstance(Microsoft::Build::Construction::ProjectRootElement ^ xml);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Execution.ProjectInstance : Microsoft.Build.Construction.ProjectRootElement -&gt; Microsoft.Build.Execution.ProjectInstance" Usage="new Microsoft.Build.Execution.ProjectInstance xml" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xml" Type="Microsoft.Build.Construction.ProjectRootElement" />
      </Parameters>
      <Docs>
        <param name="xml">
          <span data-ttu-id="fa3db-109">O elemento raiz do projeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-109">The project root element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fa3db-110">Cria uma nova instância de projeto e a inicializa da raiz de projeto determinada, usando a coleção de projetos padrão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-110">Creates a new project instance and initializes it from the given project root, using the default project collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa3db-111">Nenhum objeto <xref:Microsoft.Build.Evaluation.Project> intermediário é criado.</span><span class="sxs-lookup"><span data-stu-id="fa3db-111">No intermediate <xref:Microsoft.Build.Evaluation.Project> object is created.</span></span> <span data-ttu-id="fa3db-112">Isso será útil se um projeto precisar ser compilado, mas não exibido ou editado.</span><span class="sxs-lookup"><span data-stu-id="fa3db-112">This is useful if a project is going to be built, but not displayed or edited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectInstance (string projectFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string projectFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (projectFile As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectInstance(System::String ^ projectFile);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Execution.ProjectInstance : string -&gt; Microsoft.Build.Execution.ProjectInstance" Usage="new Microsoft.Build.Execution.ProjectInstance projectFile" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="projectFile">
          <span data-ttu-id="fa3db-113">O nome do arquivo de projeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-113">The name of the project file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fa3db-114">Cria uma nova instância de projeto e a inicializa do arquivo de projeto determinado, usando a coleção de projetos padrão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-114">Creates a new project instance and initializes it from the given project file, using the default project collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa3db-115">Nenhum objeto <xref:Microsoft.Build.Evaluation.Project> intermediário é criado.</span><span class="sxs-lookup"><span data-stu-id="fa3db-115">No intermediate <xref:Microsoft.Build.Evaluation.Project> object is created.</span></span> <span data-ttu-id="fa3db-116">Isso será útil se um projeto precisar ser compilado, mas não exibido ou editado.</span><span class="sxs-lookup"><span data-stu-id="fa3db-116">This is useful if a project is going to be built, but not displayed or edited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectInstance (string projectFile, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string projectFile, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (projectFile As String, globalProperties As IDictionary(Of String, String), toolsVersion As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectInstance(System::String ^ projectFile, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Execution.ProjectInstance : string * System.Collections.Generic.IDictionary&lt;string, string&gt; * string -&gt; Microsoft.Build.Execution.ProjectInstance" Usage="new Microsoft.Build.Execution.ProjectInstance (projectFile, globalProperties, toolsVersion)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="projectFile">
          <span data-ttu-id="fa3db-117">O nome do arquivo de projeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-117">The name of the project file.</span>
          </span>
        </param>
        <param name="globalProperties">
          <span data-ttu-id="fa3db-118">As propriedades globais a serem usadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-118">The global properties to use.</span>
          </span>
        </param>
        <param name="toolsVersion">
          <span data-ttu-id="fa3db-119">A versão das ferramentas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-119">The tools version.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fa3db-120">Cria uma nova instância de projeto e a inicializa do arquivo de projeto determinado, usando as propriedades globais, a versão das ferramentas e a coleção de projetos padrão determinadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-120">Creates a new project instance and initializes it from the given project file, using the given global properties, tools version, and the default project collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa3db-121">Nenhum objeto <xref:Microsoft.Build.Evaluation.Project> intermediário é criado.</span><span class="sxs-lookup"><span data-stu-id="fa3db-121">No intermediate <xref:Microsoft.Build.Evaluation.Project> object is created.</span></span> <span data-ttu-id="fa3db-122">Isso será útil se um projeto precisar ser compilado, mas não exibido ou editado.</span><span class="sxs-lookup"><span data-stu-id="fa3db-122">This is useful if a project is going to be built, but not displayed or edited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectInstance (Microsoft.Build.Construction.ProjectRootElement xml, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Construction.ProjectRootElement xml, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectInstance(Microsoft::Build::Construction::ProjectRootElement ^ xml, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Execution.ProjectInstance : Microsoft.Build.Construction.ProjectRootElement * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * Microsoft.Build.Evaluation.ProjectCollection -&gt; Microsoft.Build.Execution.ProjectInstance" Usage="new Microsoft.Build.Execution.ProjectInstance (xml, globalProperties, toolsVersion, projectCollection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xml" Type="Microsoft.Build.Construction.ProjectRootElement" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="xml">
          <span data-ttu-id="fa3db-123">O elemento raiz do projeto</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-123">The project root element</span>
          </span>
        </param>
        <param name="globalProperties">
          <span data-ttu-id="fa3db-124">As propriedades globais a serem usadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-124">The global properties to use.</span>
          </span>
          <span data-ttu-id="fa3db-125">Pode ser nulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-125">May be null.</span>
          </span>
        </param>
        <param name="toolsVersion">
          <span data-ttu-id="fa3db-126">A versão das ferramentas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-126">The tools version.</span>
          </span>
          <span data-ttu-id="fa3db-127">Pode ser nulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-127">May be null.</span>
          </span>
        </param>
        <param name="projectCollection">
          <span data-ttu-id="fa3db-128">Coleção de projetos</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-128">Project collection</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fa3db-129">Cria uma nova instância de projeto e a inicializa da raiz de projeto determinada, usando as propriedades globais, versão das ferramentas e coleção de projetos determinadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-129">Creates a new project instance and initializes it from the given project root, using the given global properties, tools version, and project collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa3db-130">Nenhum objeto <xref:Microsoft.Build.Evaluation.Project> intermediário é criado.</span><span class="sxs-lookup"><span data-stu-id="fa3db-130">No intermediate <xref:Microsoft.Build.Evaluation.Project> object is created.</span></span> <span data-ttu-id="fa3db-131">Isso será útil se um projeto precisar ser compilado, mas não exibido ou editado.</span><span class="sxs-lookup"><span data-stu-id="fa3db-131">This is useful if a project is going to be built, but not displayed or edited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectInstance (string projectFile, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string projectFile, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectInstance(System::String ^ projectFile, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Execution.ProjectInstance : string * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * Microsoft.Build.Evaluation.ProjectCollection -&gt; Microsoft.Build.Execution.ProjectInstance" Usage="new Microsoft.Build.Execution.ProjectInstance (projectFile, globalProperties, toolsVersion, projectCollection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="projectFile">
          <span data-ttu-id="fa3db-132">O nome do arquivo de projeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-132">The name of the project file.</span>
          </span>
        </param>
        <param name="globalProperties">
          <span data-ttu-id="fa3db-133">As propriedades globais a serem usadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-133">The global properties to use.</span>
          </span>
          <span data-ttu-id="fa3db-134">Pode ser nulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-134">May be null.</span>
          </span>
        </param>
        <param name="toolsVersion">
          <span data-ttu-id="fa3db-135">A versão das ferramentas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-135">The tools version.</span>
          </span>
          <span data-ttu-id="fa3db-136">Pode ser nulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-136">May be null.</span>
          </span>
        </param>
        <param name="projectCollection">
          <span data-ttu-id="fa3db-137">Coleção de projetos</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-137">Project collection</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fa3db-138">Cria uma nova instância de projeto e a inicializa do arquivo de projeto determinado, usando as propriedades globais, versão das ferramentas e coleção de projetos determinadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-138">Creates a new project instance and initializes it from the given project file, using the given global properties, tools version, and project collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa3db-139">Nenhum objeto <xref:Microsoft.Build.Evaluation.Project> intermediário é criado.</span><span class="sxs-lookup"><span data-stu-id="fa3db-139">No intermediate <xref:Microsoft.Build.Evaluation.Project> object is created.</span></span> <span data-ttu-id="fa3db-140">Isso será útil se um projeto precisar ser compilado, mas não exibido ou editado.</span><span class="sxs-lookup"><span data-stu-id="fa3db-140">This is useful if a project is going to be built, but not displayed or edited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectInstance (Microsoft.Build.Construction.ProjectRootElement xml, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, string subToolsetVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Construction.ProjectRootElement xml, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, string subToolsetVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectInstance(Microsoft::Build::Construction::ProjectRootElement ^ xml, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, System::String ^ subToolsetVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Execution.ProjectInstance : Microsoft.Build.Construction.ProjectRootElement * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * string * Microsoft.Build.Evaluation.ProjectCollection -&gt; Microsoft.Build.Execution.ProjectInstance" Usage="new Microsoft.Build.Execution.ProjectInstance (xml, globalProperties, toolsVersion, subToolsetVersion, projectCollection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xml" Type="Microsoft.Build.Construction.ProjectRootElement" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="subToolsetVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="xml">
          <span data-ttu-id="fa3db-141">O elemento raiz do projeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-141">The project root element.</span>
          </span>
        </param>
        <param name="globalProperties">
          <span data-ttu-id="fa3db-142">As propriedades globais a serem usadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-142">The global properties to use.</span>
          </span>
          <span data-ttu-id="fa3db-143">Pode ser nulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-143">May be null.</span>
          </span>
        </param>
        <param name="toolsVersion">
          <span data-ttu-id="fa3db-144">A versão das ferramentas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-144">The tools version.</span>
          </span>
          <span data-ttu-id="fa3db-145">Pode ser nulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-145">May be null.</span>
          </span>
        </param>
        <param name="subToolsetVersion">
          <span data-ttu-id="fa3db-146">A versão do subconjunto de ferramentas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-146">The sub toolset version.</span>
          </span>
          <span data-ttu-id="fa3db-147">Pode ser nulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-147">May be null.</span>
          </span>
        </param>
        <param name="projectCollection">
          <span data-ttu-id="fa3db-148">Coleção de projetos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-148">Project collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fa3db-149">Cria uma nova instância de projeto e a inicializa da raiz de projeto determinada, usando as propriedades globais, versão das ferramentas e coleção de projetos determinadas</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-149">Creates a new project instance and initializes it from the given project root, using the given global properties, tools version, and project collection</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa3db-150">Nenhum objeto <xref:Microsoft.Build.Evaluation.Project> intermediário é criado.</span><span class="sxs-lookup"><span data-stu-id="fa3db-150">No intermediate <xref:Microsoft.Build.Evaluation.Project> object is created.</span></span> <span data-ttu-id="fa3db-151">Isso será útil se um projeto precisar ser compilado, mas não exibido ou editado.</span><span class="sxs-lookup"><span data-stu-id="fa3db-151">This is useful if a project is going to be built, but not displayed or edited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectInstance (string projectFile, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, string subToolsetVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string projectFile, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, string subToolsetVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectInstance(System::String ^ projectFile, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, System::String ^ subToolsetVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Execution.ProjectInstance : string * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * string * Microsoft.Build.Evaluation.ProjectCollection -&gt; Microsoft.Build.Execution.ProjectInstance" Usage="new Microsoft.Build.Execution.ProjectInstance (projectFile, globalProperties, toolsVersion, subToolsetVersion, projectCollection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="subToolsetVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="projectFile">
          <span data-ttu-id="fa3db-152">O nome do arquivo de projeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-152">The name of the project file.</span>
          </span>
        </param>
        <param name="globalProperties">
          <span data-ttu-id="fa3db-153">As propriedades globais a serem usadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-153">The global properties to use.</span>
          </span>
          <span data-ttu-id="fa3db-154">Pode ser nulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-154">May be null.</span>
          </span>
        </param>
        <param name="toolsVersion">
          <span data-ttu-id="fa3db-155">A versão das ferramentas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-155">The tools version.</span>
          </span>
          <span data-ttu-id="fa3db-156">Pode ser nulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-156">May be null.</span>
          </span>
        </param>
        <param name="subToolsetVersion">
          <span data-ttu-id="fa3db-157">A versão do subconjunto de ferramentas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-157">The sub toolset version.</span>
          </span>
          <span data-ttu-id="fa3db-158">Pode ser nulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-158">May be null.</span>
          </span>
        </param>
        <param name="projectCollection">
          <span data-ttu-id="fa3db-159">Coleção de projetos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-159">Project collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fa3db-160">Cria uma nova instância de projeto e a inicializa do arquivo de projeto determinado, usando as propriedades globais, versão das ferramentas, versão do subconjunto de ferramentas e coleção de projetos determinadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-160">Creates a new project instance and initializes it from the given project file, using the given global properties, tools version, sub toolset version, and project collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa3db-161">Nenhum objeto <xref:Microsoft.Build.Evaluation.Project> intermediário é criado.</span><span class="sxs-lookup"><span data-stu-id="fa3db-161">No intermediate <xref:Microsoft.Build.Evaluation.Project> object is created.</span></span> <span data-ttu-id="fa3db-162">Isso será útil se um projeto precisar ser compilado, mas não exibido ou editado.</span><span class="sxs-lookup"><span data-stu-id="fa3db-162">This is useful if a project is going to be built, but not displayed or edited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddItem">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fa3db-163">Adiciona um item sem metadados ao projeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-163">Adds an item with no metadata to the project.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddItem">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.ProjectItemInstance AddItem (string itemType, string evaluatedInclude);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Execution.ProjectItemInstance AddItem(string itemType, string evaluatedInclude) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.AddItem(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddItem (itemType As String, evaluatedInclude As String) As ProjectItemInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Execution::ProjectItemInstance ^ AddItem(System::String ^ itemType, System::String ^ evaluatedInclude);" />
      <MemberSignature Language="F#" Value="member this.AddItem : string * string -&gt; Microsoft.Build.Execution.ProjectItemInstance" Usage="projectInstance.AddItem (itemType, evaluatedInclude)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.ProjectItemInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
        <Parameter Name="evaluatedInclude" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="itemType">
          <span data-ttu-id="fa3db-164">O tipo do item a ser adicionado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-164">The item type of the item to be added.</span>
          </span>
        </param>
        <param name="evaluatedInclude">
          <span data-ttu-id="fa3db-165">O Incluir atributo do item avaliado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-165">The evaluated Include attribute of the item.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fa3db-166">Adiciona um item sem metadados ao projeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-166">Adds an item with no metadata to the project.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fa3db-167">Retorna o novo item.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-167">Returns the new item.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa3db-168">Não fazemos um ProjectItemInstance para garantir que não temos um que já está em uso por outro ProjectInstance.</span><span class="sxs-lookup"><span data-stu-id="fa3db-168">We don't take a ProjectItemInstance to make sure we don't have one that's already in use by another ProjectInstance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddItem">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.ProjectItemInstance AddItem (string itemType, string evaluatedInclude, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,string&gt;&gt; metadata);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Execution.ProjectItemInstance AddItem(string itemType, string evaluatedInclude, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, string&gt;&gt; metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.AddItem(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})" />
      <MemberSignature Language="VB.NET" Value="Public Function AddItem (itemType As String, evaluatedInclude As String, metadata As IEnumerable(Of KeyValuePair(Of String, String))) As ProjectItemInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Execution::ProjectItemInstance ^ AddItem(System::String ^ itemType, System::String ^ evaluatedInclude, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::String ^&gt;&gt; ^ metadata);" />
      <MemberSignature Language="F#" Value="member this.AddItem : string * string * seq&lt;System.Collections.Generic.KeyValuePair&lt;string, string&gt;&gt; -&gt; Microsoft.Build.Execution.ProjectItemInstance" Usage="projectInstance.AddItem (itemType, evaluatedInclude, metadata)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.ProjectItemInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
        <Parameter Name="evaluatedInclude" Type="System.String" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.String&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="itemType">
          <span data-ttu-id="fa3db-169">O tipo do item a ser adicionado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-169">The item type of the item to be added.</span>
          </span>
        </param>
        <param name="evaluatedInclude">
          <span data-ttu-id="fa3db-170">O Incluir atributo do item avaliado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-170">The evaluated Include attribute of the item.</span>
          </span>
        </param>
        <param name="metadata">
          <span data-ttu-id="fa3db-171">Os metadados do item.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-171">The metadata of the item.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fa3db-172">Adiciona um item com os metadados determinados ao projeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-172">Adds an item with the given metadata to the project.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fa3db-173">Retorna o novo item.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-173">Return the new item.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa3db-174">Não fazemos um ProjectItemInstance para garantir que não temos um que já está em uso por outro ProjectInstance.</span><span class="sxs-lookup"><span data-stu-id="fa3db-174">We don't take a ProjectItemInstance to make sure we don't have one that's already in use by another ProjectInstance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Build">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fa3db-175">Cria os destinos padrão do projeto com os agentes da coleção de projetos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-175">Builds the default targets of the project with loggers of the project collection.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build" />
      <MemberSignature Language="VB.NET" Value="Public Function Build () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build();" />
      <MemberSignature Language="F#" Value="member this.Build : unit -&gt; bool" Usage="projectInstance.Build " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fa3db-176">Cria os destinos padrão do projeto com os agentes da coleção de projetos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-176">Builds the default targets of the project with loggers of the project collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fa3db-177">Retorna verdadeiro caso a compilação seja bem sucedida; do contrário, falso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-177">Returns true if the build succeeds; false otherwise.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (loggers As IEnumerable(Of ILogger)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers);" />
      <MemberSignature Language="F#" Value="member this.Build : seq&lt;Microsoft.Build.Framework.ILogger&gt; -&gt; bool" Usage="projectInstance.Build loggers" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
      </Parameters>
      <Docs>
        <param name="loggers">
          <span data-ttu-id="fa3db-178">Os agentes a serem usados para a compilação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-178">The loggers to use for the build.</span>
          </span>
          <span data-ttu-id="fa3db-179">Pode ser nulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-179">May be null.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fa3db-180">Cria os destinos padrão do projeto com os agentes determinados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-180">Builds the default targets of the project with the given loggers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fa3db-181">Retorna verdadeiro caso a compilação seja bem sucedida; do contrário, falso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-181">Returns true if the build succeeds; false otherwise.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa3db-182">Lança InvalidOperationException caso alguns dos agentes fornecidos são já estejam anexados ao serviço de registro em log.</span><span class="sxs-lookup"><span data-stu-id="fa3db-182">Throws InvalidOperationException if any of the loggers supplied are already attached to the logging service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (loggers As IEnumerable(Of ILogger), remoteLoggers As IEnumerable(Of ForwardingLoggerRecord)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Logging::ForwardingLoggerRecord ^&gt; ^ remoteLoggers);" />
      <MemberSignature Language="F#" Value="member this.Build : seq&lt;Microsoft.Build.Framework.ILogger&gt; * seq&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; -&gt; bool" Usage="projectInstance.Build (loggers, remoteLoggers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
        <Parameter Name="remoteLoggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt;" />
      </Parameters>
      <Docs>
        <param name="loggers">
          <span data-ttu-id="fa3db-183">Os agentes a serem usados para a compilação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-183">The loggers to use for the build.</span>
          </span>
          <span data-ttu-id="fa3db-184">Pode ser nulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-184">May be null.</span>
          </span>
        </param>
        <param name="remoteLoggers">
          <span data-ttu-id="fa3db-185">Os agentes remotos a serem usados para a compilação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-185">The remote loggers to use for the build.</span>
          </span>
          <span data-ttu-id="fa3db-186">Pode ser nulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-186">May be null.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fa3db-187">Cria os destinos padrão do projeto com os agentes e os agentes remotos determinados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-187">Builds the default targets of the project with the given loggers and remote loggers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fa3db-188">Retorna verdadeiro caso a compilação seja bem sucedida; do contrário, falso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-188">Returns true if the build succeeds; false otherwise.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa3db-189">Lança InvalidOperationException caso alguns dos agentes fornecidos são já estejam anexados ao serviço de registro em log.</span><span class="sxs-lookup"><span data-stu-id="fa3db-189">Throws InvalidOperationException if any of the loggers supplied are already attached to the logging service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string target, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string target, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (target As String, loggers As IEnumerable(Of ILogger)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(System::String ^ target, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers);" />
      <MemberSignature Language="F#" Value="member this.Build : string * seq&lt;Microsoft.Build.Framework.ILogger&gt; -&gt; bool" Usage="projectInstance.Build (target, loggers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="fa3db-190">O destino a ser compilado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-190">The target to build.</span>
          </span>
          <span data-ttu-id="fa3db-191">Pode ser nulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-191">May be null.</span>
          </span>
        </param>
        <param name="loggers">
          <span data-ttu-id="fa3db-192">Os agentes a serem usados para a compilação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-192">The loggers to use for the build.</span>
          </span>
          <span data-ttu-id="fa3db-193">Pode ser nulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-193">May be null.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fa3db-194">Cria o destino determinado do projeto com os agentes determinados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-194">Builds the given target of the project with the given loggers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fa3db-195">Retorna verdadeiro caso a compilação seja bem sucedida; do contrário, falso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-195">Returns true if the build succeeds; false otherwise.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa3db-196">Lança InvalidOperationException caso alguns dos agentes fornecidos são já estejam anexados ao serviço de registro em log.</span><span class="sxs-lookup"><span data-stu-id="fa3db-196">Throws InvalidOperationException if any of the loggers supplied are already attached to the logging service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string[] targets, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string[] targets, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (targets As String(), loggers As IEnumerable(Of ILogger)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(cli::array &lt;System::String ^&gt; ^ targets, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers);" />
      <MemberSignature Language="F#" Value="member this.Build : string[] * seq&lt;Microsoft.Build.Framework.ILogger&gt; -&gt; bool" Usage="projectInstance.Build (targets, loggers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targets" Type="System.String[]" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
      </Parameters>
      <Docs>
        <param name="targets">
          <span data-ttu-id="fa3db-197">Os destinos a serem compilados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-197">The targets to build.</span>
          </span>
          <span data-ttu-id="fa3db-198">Pode ser nulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-198">May be null.</span>
          </span>
        </param>
        <param name="loggers">
          <span data-ttu-id="fa3db-199">Os agentes a serem usados para a compilação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-199">The loggers to use for the build.</span>
          </span>
          <span data-ttu-id="fa3db-200">Pode ser nulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-200">May be null.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fa3db-201">Cria os destinos determinados do projeto com os agentes determinados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-201">Builds the given targets of the project with the given loggers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fa3db-202">Retorna verdadeiro caso a compilação seja bem sucedida; do contrário, falso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-202">Returns true if the build succeeds; false otherwise.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa3db-203">Lança InvalidOperationException caso alguns dos agentes fornecidos são já estejam anexados ao serviço de registro em log.</span><span class="sxs-lookup"><span data-stu-id="fa3db-203">Throws InvalidOperationException if any of the loggers supplied are already attached to the logging service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string target, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string target, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (target As String, loggers As IEnumerable(Of ILogger), remoteLoggers As IEnumerable(Of ForwardingLoggerRecord)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(System::String ^ target, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Logging::ForwardingLoggerRecord ^&gt; ^ remoteLoggers);" />
      <MemberSignature Language="F#" Value="member this.Build : string * seq&lt;Microsoft.Build.Framework.ILogger&gt; * seq&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; -&gt; bool" Usage="projectInstance.Build (target, loggers, remoteLoggers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
        <Parameter Name="remoteLoggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt;" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="fa3db-204">O destino a ser compilado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-204">The target to build.</span>
          </span>
          <span data-ttu-id="fa3db-205">Pode ser nulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-205">May be null.</span>
          </span>
        </param>
        <param name="loggers">
          <span data-ttu-id="fa3db-206">Os agentes a serem usados para a compilação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-206">The loggers to use for the build.</span>
          </span>
          <span data-ttu-id="fa3db-207">Pode ser nulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-207">May be null.</span>
          </span>
        </param>
        <param name="remoteLoggers">
          <span data-ttu-id="fa3db-208">Os agentes remotos a serem usados para a compilação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-208">The remote loggers to use for the build.</span>
          </span>
          <span data-ttu-id="fa3db-209">Pode ser nulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-209">May be null.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fa3db-210">Cria o destino determinado do projeto com os agentes e agentes remotos determinados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-210">Builds the given target of the project with the given loggers and remote loggers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fa3db-211">Retorna verdadeiro caso a compilação seja bem sucedida; do contrário, falso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-211">Returns true if the build succeeds; false otherwise.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa3db-212">Lança InvalidOperationException caso alguns dos agentes fornecidos são já estejam anexados ao serviço de registro em log.</span><span class="sxs-lookup"><span data-stu-id="fa3db-212">Throws InvalidOperationException if any of the loggers supplied are already attached to the logging service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string[] targets, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers, out System.Collections.Generic.IDictionary&lt;string,Microsoft.Build.Execution.TargetResult&gt; targetOutputs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string[] targets, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers, [out] class System.Collections.Generic.IDictionary`2&lt;string, class Microsoft.Build.Execution.TargetResult&gt;&amp; targetOutputs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Execution.TargetResult}@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (targets As String(), loggers As IEnumerable(Of ILogger), ByRef targetOutputs As IDictionary(Of String, TargetResult)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(cli::array &lt;System::String ^&gt; ^ targets, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers, [Runtime::InteropServices::Out] System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Execution::TargetResult ^&gt; ^ % targetOutputs);" />
      <MemberSignature Language="F#" Value="member this.Build : string[] * seq&lt;Microsoft.Build.Framework.ILogger&gt; *  -&gt; bool" Usage="projectInstance.Build (targets, loggers, targetOutputs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targets" Type="System.String[]" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
        <Parameter Name="targetOutputs" Type="System.Collections.Generic.IDictionary&lt;System.String,Microsoft.Build.Execution.TargetResult&gt;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="targets">
          <span data-ttu-id="fa3db-213">A lista de destinos a serem criados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-213">List of targets to build.</span>
          </span>
          <span data-ttu-id="fa3db-214">Pode ser nulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-214">May be null.</span>
          </span>
        </param>
        <param name="loggers">
          <span data-ttu-id="fa3db-215">Lista enumerada de agentes a serem usados para criar destinos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-215">Enumerated list of loggers to use for building targets.</span>
          </span>
        </param>
        <param name="targetOutputs">
          <span data-ttu-id="fa3db-216">Saídas dos builds de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-216">Outputs of target builds.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fa3db-217">Cria uma lista de destinos com agentes especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-217">Build a list of targets with specified loggers.</span>
          </span>
          <span data-ttu-id="fa3db-218">Os destinos podem ser nulos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-218">Targets may be null.</span>
          </span>
          <span data-ttu-id="fa3db-219">Os agentes podem ser nulos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-219">Loggers may be null.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fa3db-220">Retorna true em caso de êxito, false em caso de falha.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-220">Returns true on success, false on failure.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa3db-221">Se qualquer um dos agentes fornecidos são já anexado ao serviço de registro em log que foram passados, gera InvalidOperationException.</span><span class="sxs-lookup"><span data-stu-id="fa3db-221">If any of the loggers supplied are already attached to the logging service we were passed, throws InvalidOperationException.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string[] targets, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string[] targets, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (targets As String(), loggers As IEnumerable(Of ILogger), remoteLoggers As IEnumerable(Of ForwardingLoggerRecord)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(cli::array &lt;System::String ^&gt; ^ targets, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Logging::ForwardingLoggerRecord ^&gt; ^ remoteLoggers);" />
      <MemberSignature Language="F#" Value="member this.Build : string[] * seq&lt;Microsoft.Build.Framework.ILogger&gt; * seq&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; -&gt; bool" Usage="projectInstance.Build (targets, loggers, remoteLoggers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targets" Type="System.String[]" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
        <Parameter Name="remoteLoggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt;" />
      </Parameters>
      <Docs>
        <param name="targets">
          <span data-ttu-id="fa3db-222">Os destinos a serem compilados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-222">The targets to build.</span>
          </span>
          <span data-ttu-id="fa3db-223">Pode ser nulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-223">May be null.</span>
          </span>
        </param>
        <param name="loggers">
          <span data-ttu-id="fa3db-224">Os agentes a serem usados para a compilação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-224">The loggers to use for the build.</span>
          </span>
          <span data-ttu-id="fa3db-225">Pode ser nulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-225">May be null.</span>
          </span>
        </param>
        <param name="remoteLoggers">
          <span data-ttu-id="fa3db-226">Os agentes remotos a serem usados para a compilação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-226">The remote loggers to use for the build.</span>
          </span>
          <span data-ttu-id="fa3db-227">Pode ser nulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-227">May be null.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fa3db-228">Cria os destinos determinados do projeto com os agentes e agentes remotos determinados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-228">Builds the given targets of the project with the given loggers and remote loggers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fa3db-229">Retorna verdadeiro caso a compilação seja bem sucedida; do contrário, falso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-229">Returns true if the build succeeds; false otherwise.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa3db-230">Lança InvalidOperationException caso alguns dos agentes fornecidos são já estejam anexados ao serviço de registro em log.</span><span class="sxs-lookup"><span data-stu-id="fa3db-230">Throws InvalidOperationException if any of the loggers supplied are already attached to the logging service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string[] targets, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers, out System.Collections.Generic.IDictionary&lt;string,Microsoft.Build.Execution.TargetResult&gt; targetOutputs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string[] targets, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers, [out] class System.Collections.Generic.IDictionary`2&lt;string, class Microsoft.Build.Execution.TargetResult&gt;&amp; targetOutputs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord},System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Execution.TargetResult}@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (targets As String(), loggers As IEnumerable(Of ILogger), remoteLoggers As IEnumerable(Of ForwardingLoggerRecord), ByRef targetOutputs As IDictionary(Of String, TargetResult)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(cli::array &lt;System::String ^&gt; ^ targets, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Logging::ForwardingLoggerRecord ^&gt; ^ remoteLoggers, [Runtime::InteropServices::Out] System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Execution::TargetResult ^&gt; ^ % targetOutputs);" />
      <MemberSignature Language="F#" Value="member this.Build : string[] * seq&lt;Microsoft.Build.Framework.ILogger&gt; * seq&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; *  -&gt; bool" Usage="projectInstance.Build (targets, loggers, remoteLoggers, targetOutputs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targets" Type="System.String[]" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
        <Parameter Name="remoteLoggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt;" />
        <Parameter Name="targetOutputs" Type="System.Collections.Generic.IDictionary&lt;System.String,Microsoft.Build.Execution.TargetResult&gt;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="targets">
          <span data-ttu-id="fa3db-231">Os destinos a serem compilados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-231">The targets to build.</span>
          </span>
          <span data-ttu-id="fa3db-232">Pode ser nulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-232">May be null.</span>
          </span>
        </param>
        <param name="loggers">
          <span data-ttu-id="fa3db-233">Os agentes a serem usados para a compilação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-233">The loggers to use for the build.</span>
          </span>
          <span data-ttu-id="fa3db-234">Pode ser nulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-234">May be null.</span>
          </span>
        </param>
        <param name="remoteLoggers">
          <span data-ttu-id="fa3db-235">Os agentes remotos a serem usados para a compilação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-235">The remote loggers to use for the build.</span>
          </span>
          <span data-ttu-id="fa3db-236">Pode ser nulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-236">May be null.</span>
          </span>
        </param>
        <param name="targetOutputs">
          <span data-ttu-id="fa3db-237">A saída de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-237">The target outputs.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fa3db-238">Cria os destinos determinados com as saídas de destino determinadas e com os agentes e agentes remotos determinados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-238">Builds the given targets with the given target outputs and with the given loggers and remote loggers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fa3db-239">Retorna verdadeiro caso a compilação seja bem sucedida; do contrário, falso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-239">Returns true if the build succeeds; false otherwise.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa3db-240">Lança InvalidOperationException caso alguns dos agentes fornecidos são já estejam anexados ao serviço de registro em log.</span><span class="sxs-lookup"><span data-stu-id="fa3db-240">Throws InvalidOperationException if any of the loggers supplied are already attached to the logging service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DeepCopy">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fa3db-241">Cria um clone profundo e independente deste projeto e de tudo que está nele.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-241">Creates an independent, deep clone of this project and everything in it.</span>
          </span>
          <span data-ttu-id="fa3db-242">Útil para compilar um único arquivo ou para manter os resultados da compilação entre elas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-242">Useful for compiling a single file or for keeping build results between builds.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DeepCopy">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.ProjectInstance DeepCopy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Execution.ProjectInstance DeepCopy() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.DeepCopy" />
      <MemberSignature Language="VB.NET" Value="Public Function DeepCopy () As ProjectInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Execution::ProjectInstance ^ DeepCopy();" />
      <MemberSignature Language="F#" Value="member this.DeepCopy : unit -&gt; Microsoft.Build.Execution.ProjectInstance" Usage="projectInstance.DeepCopy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.ProjectInstance</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fa3db-243">Cria um clone profundo e independente deste projeto e de tudo que está nele.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-243">Creates an independent, deep clone of this project and everything in it.</span>
          </span>
          <span data-ttu-id="fa3db-244">O clone tem a mesma mutabilidade que o original.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-244">Clone has the same mutability as the original.</span>
          </span>
          <span data-ttu-id="fa3db-245">Útil para compilar um único arquivo ou para manter os resultados da compilação entre elas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-245">Useful for compiling a single file or for keeping build results between builds.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fa3db-246">Cria um clone profundo e independente deste projeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-246">Creates an independent, deep clone of this project.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeepCopy">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.ProjectInstance DeepCopy (bool isImmutable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Execution.ProjectInstance DeepCopy(bool isImmutable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.DeepCopy(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function DeepCopy (isImmutable As Boolean) As ProjectInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Execution::ProjectInstance ^ DeepCopy(bool isImmutable);" />
      <MemberSignature Language="F#" Value="member this.DeepCopy : bool -&gt; Microsoft.Build.Execution.ProjectInstance" Usage="projectInstance.DeepCopy isImmutable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.ProjectInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isImmutable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isImmutable">
          <span data-ttu-id="fa3db-247">Sinalizador que indica a mutabilidade do clone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-247">Flag indicating clone mutability.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fa3db-248">Cria um clone profundo e independente deste projeto e de tudo que está nele, com mutabilidade especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-248">Creates an independent, deep clone of this project and everything in it, with specified mutability.</span>
          </span>
          <span data-ttu-id="fa3db-249">Útil para compilar um único arquivo ou para manter os resultados da compilação entre elas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-249">Useful for compiling a single file or for keeping build results between builds.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fa3db-250">Retorna um clone profundo e independente deste projeto, com mutabilidade especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-250">Returns an independent, deep clone of this project, with specified mutability.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultTargets">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;string&gt; DefaultTargets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.List`1&lt;string&gt; DefaultTargets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.DefaultTargets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DefaultTargets As List(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::List&lt;System::String ^&gt; ^ DefaultTargets { System::Collections::Generic::List&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultTargets : System.Collections.Generic.List&lt;string&gt;" Usage="Microsoft.Build.Execution.ProjectInstance.DefaultTargets" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Build.Evaluation.IEvaluatorData`4.DefaultTargets</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fa3db-251">Obtém ou define a lista de destinos padrão para este projeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-251">Gets or sets the list of default targets for this project.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fa3db-252">Retorna a lista de destinos padrão para este projeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-252">Returns the list of default targets for this project.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa3db-253">Destinos padrão serão compilados se nenhum destino for especificado explicitamente.</span><span class="sxs-lookup"><span data-stu-id="fa3db-253">Default targets are built if no targets are explicitly specified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Directory">
      <MemberSignature Language="C#" Value="public string Directory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Directory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.Directory" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Directory As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Directory { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Directory : string" Usage="Microsoft.Build.Execution.ProjectInstance.Directory" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Build.Evaluation.IEvaluatorData`4.Directory</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fa3db-254">Obtém o diretório raiz do projeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-254">Gets the project root directory.</span>
          </span>
          <span data-ttu-id="fa3db-255">Usado para avaliação de caminhos relativos e para definir o diretório atual durante o build.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-255">Used for evaluation of relative paths and setting the current directory during build.</span>
          </span>
          <span data-ttu-id="fa3db-256">Nunca é nulo: projetos não carregados do disco usam o diretório atual de quando o build foi iniciado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-256">Is never null: projects not loaded from disk use the current directory from the time the build started.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fa3db-257">Retorna o diretório raiz do projeto, que nunca é nulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-257">Returns the project root directory, which is never null.</span>
          </span>
          <span data-ttu-id="fa3db-258">Projetos não carregados do disco retornam o diretório atual no momento em que a compilação foi iniciada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-258">Projects not loaded from disk return the current directory at the time the build was started.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EvaluateCondition">
      <MemberSignature Language="C#" Value="public bool EvaluateCondition (string condition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool EvaluateCondition(string condition) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.EvaluateCondition(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function EvaluateCondition (condition As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool EvaluateCondition(System::String ^ condition);" />
      <MemberSignature Language="F#" Value="abstract member EvaluateCondition : string -&gt; bool&#xA;override this.EvaluateCondition : string -&gt; bool" Usage="projectInstance.EvaluateCondition condition" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Evaluation.IEvaluatorData`4.EvaluateCondition(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="fa3db-259">A cadeia de caracteres a ser expandida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-259">The string to be expanded.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fa3db-260">Avalia a cadeia de caracteres fornecida como uma condição expandindo itens e propriedades, usando os itens atuais e as propriedades disponíveis e fazendo uma avaliação lógica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-260">Evaluates the provided string as a condition by expanding items and properties, using the current items and properties available, then doing a logical evaluation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fa3db-261">Retornará true se a cadeia de caracteres for avaliada como true; caso contrário, false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-261">Returns true if the string evaluates to true; false otherwise.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa3db-262">Isso é útil para a janela imediata.</span><span class="sxs-lookup"><span data-stu-id="fa3db-262">This is useful for the immediate window.</span></span>  
  
 <span data-ttu-id="fa3db-263">Não expande as expressões de metadados vazio.</span><span class="sxs-lookup"><span data-stu-id="fa3db-263">Does not expand bare metadata expressions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpandString">
      <MemberSignature Language="C#" Value="public string ExpandString (string unexpandedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ExpandString(string unexpandedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.ExpandString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExpandString (unexpandedValue As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ExpandString(System::String ^ unexpandedValue);" />
      <MemberSignature Language="F#" Value="abstract member ExpandString : string -&gt; string&#xA;override this.ExpandString : string -&gt; string" Usage="projectInstance.ExpandString unexpandedValue" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Evaluation.IEvaluatorData`4.ExpandString(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unexpandedValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="unexpandedValue">
          <span data-ttu-id="fa3db-264">A cadeia de caracteres a ser expandida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-264">The string to be expanded.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fa3db-265">Avalia a cadeia de caracteres fornecida expandindo itens e propriedades, usando os itens atuais e as propriedades disponíveis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-265">Evaluates the provided string by expanding items and properties, using the current items and properties available.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fa3db-266">Retorna o valor da cadeia de caracteres expandida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-266">Returns the expanded string value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa3db-267">Isso é útil para alguns hosts ou para a janela imediato do depurador.</span><span class="sxs-lookup"><span data-stu-id="fa3db-267">This is useful for some hosts, or for the debugger immediate window.</span></span>  
  
 <span data-ttu-id="fa3db-268">Não expande as expressões de metadados vazio.</span><span class="sxs-lookup"><span data-stu-id="fa3db-268">Does not expand bare metadata expressions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FullPath">
      <MemberSignature Language="C#" Value="public string FullPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.FullPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FullPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FullPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FullPath : string" Usage="Microsoft.Build.Execution.ProjectInstance.FullPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fa3db-269">Obtém o caminho completo para o arquivo de projeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-269">Gets the full path to the project file.</span>
          </span>
          <span data-ttu-id="fa3db-270">Usado para registrar em log.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-270">Used for logging.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fa3db-271">Retorna o caminho completo para o arquivo de projeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-271">Returns the full path to the project file.</span>
          </span>
          <span data-ttu-id="fa3db-272">Retorna null se o projeto nunca foi chamado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-272">Returns null if the project was never named.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEvaluatedItemIncludeEscaped">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fa3db-273">Obtém o valor de escape avaliado de atributo Include da definição do item fornecida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-273">Gets the evaluated, escaped value of the Include attribute of the provided item definition.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEvaluatedItemIncludeEscaped">
      <MemberSignature Language="C#" Value="public static string GetEvaluatedItemIncludeEscaped (Microsoft.Build.Execution.ProjectItemDefinitionInstance item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetEvaluatedItemIncludeEscaped(class Microsoft.Build.Execution.ProjectItemDefinitionInstance item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Execution.ProjectItemDefinitionInstance)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEvaluatedItemIncludeEscaped (item As ProjectItemDefinitionInstance) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetEvaluatedItemIncludeEscaped(Microsoft::Build::Execution::ProjectItemDefinitionInstance ^ item);" />
      <MemberSignature Language="F#" Value="static member GetEvaluatedItemIncludeEscaped : Microsoft.Build.Execution.ProjectItemDefinitionInstance -&gt; string" Usage="Microsoft.Build.Execution.ProjectInstance.GetEvaluatedItemIncludeEscaped item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Execution.ProjectItemDefinitionInstance" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="fa3db-274">A definição de item a ser avaliada e escapada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-274">The item definition to be evaluated and escaped.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fa3db-275">Obtém o valor de escape avaliado de atributo Include da definição do item fornecida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-275">Gets the evaluated, escaped value of the Include attribute of the provided item definition.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fa3db-276">Retorna o valor avaliado e de escape do atributo Include da definição do item fornecido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-276">Returns the evaluated, escaped value of the Include attribute of the provided item definition.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEvaluatedItemIncludeEscaped">
      <MemberSignature Language="C#" Value="public static string GetEvaluatedItemIncludeEscaped (Microsoft.Build.Execution.ProjectItemInstance item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetEvaluatedItemIncludeEscaped(class Microsoft.Build.Execution.ProjectItemInstance item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Execution.ProjectItemInstance)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEvaluatedItemIncludeEscaped (item As ProjectItemInstance) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetEvaluatedItemIncludeEscaped(Microsoft::Build::Execution::ProjectItemInstance ^ item);" />
      <MemberSignature Language="F#" Value="static member GetEvaluatedItemIncludeEscaped : Microsoft.Build.Execution.ProjectItemInstance -&gt; string" Usage="Microsoft.Build.Execution.ProjectInstance.GetEvaluatedItemIncludeEscaped item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Execution.ProjectItemInstance" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="fa3db-277">O item a ser avaliado e escapado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-277">The item to be evaluated and escaped.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fa3db-278">Obtém o valor avaliado e de escape do atributo Include do item fornecido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-278">Gets the evaluated, escaped value of the Include attribute of the provided item.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fa3db-279">Retorna o valor avaliado e de escape do atributo Include do item fornecido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-279">Returns the evaluated, escaped value of the Include attribute of the provided item.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItems">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Execution.ProjectItemInstance&gt; GetItems (string itemType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Execution.ProjectItemInstance&gt; GetItems(string itemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetItems(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItems (itemType As String) As ICollection(Of ProjectItemInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::ICollection&lt;Microsoft::Build::Execution::ProjectItemInstance ^&gt; ^ GetItems(System::String ^ itemType);" />
      <MemberSignature Language="F#" Value="member this.GetItems : string -&gt; System.Collections.Generic.ICollection&lt;Microsoft.Build.Execution.ProjectItemInstance&gt;" Usage="projectInstance.GetItems itemType" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Evaluation.IItemProvider`1.GetItems(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Execution.ProjectItemInstance&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="itemType">
          <span data-ttu-id="fa3db-280">O tipo de item a ser recuperado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-280">The item type of the items to be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fa3db-281">Obtém todos os itens neste projeto do tipo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-281">Gets all the items in this project of the specified type.</span>
          </span>
          <span data-ttu-id="fa3db-282">Esta é uma lista somente leitura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-282">This is a read-only list.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fa3db-283">Retorna todos os itens neste projeto do tipo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-283">Returns all the items in this project of the specified type.</span>
          </span>
          <span data-ttu-id="fa3db-284">Retornará uma lista vazia, se não houver nenhuma.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-284">Returns an empty list if there are none.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemsByItemTypeAndEvaluatedInclude">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Execution.ProjectItemInstance&gt; GetItemsByItemTypeAndEvaluatedInclude (string itemType, string evaluatedInclude);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Execution.ProjectItemInstance&gt; GetItemsByItemTypeAndEvaluatedInclude(string itemType, string evaluatedInclude) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetItemsByItemTypeAndEvaluatedInclude(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemsByItemTypeAndEvaluatedInclude (itemType As String, evaluatedInclude As String) As IEnumerable(Of ProjectItemInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Execution::ProjectItemInstance ^&gt; ^ GetItemsByItemTypeAndEvaluatedInclude(System::String ^ itemType, System::String ^ evaluatedInclude);" />
      <MemberSignature Language="F#" Value="member this.GetItemsByItemTypeAndEvaluatedInclude : string * string -&gt; seq&lt;Microsoft.Build.Execution.ProjectItemInstance&gt;" Usage="projectInstance.GetItemsByItemTypeAndEvaluatedInclude (itemType, evaluatedInclude)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Execution.ProjectItemInstance&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
        <Parameter Name="evaluatedInclude" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="itemType">
          <span data-ttu-id="fa3db-285">O tipo de item a ser recuperado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-285">The item type of the items to be retrieved.</span>
          </span>
        </param>
        <param name="evaluatedInclude">
          <span data-ttu-id="fa3db-286">O valor de inclusão avaliado dos itens a serem recuperados</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-286">The evaluated include value of the items to be retrieved</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fa3db-287">Obtém todos os itens neste projeto do tipo especificado e do valor de inclusão avaliado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-287">Gets all the items in this project of the specified type and evaluated include value.</span>
          </span>
          <span data-ttu-id="fa3db-288">Esta é uma lista somente leitura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-288">This is a read-only list.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fa3db-289">Retorna todos os itens neste projeto do tipo especificado e do valor de inclusão avaliado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-289">Returns all the items in this project of the specified type and evaluated include value.</span>
          </span>
          <span data-ttu-id="fa3db-290">Retornará uma coleção vazia, se não houver nenhuma.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-290">Returns an empty collection if there are none.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMetadataValueEscaped">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fa3db-291">Obtém o valor de escape do metadado com o nome fornecido na definição do item fornecida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-291">Gets the escaped value of the metadatum with the provided name of the provided item definition.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMetadataValueEscaped">
      <MemberSignature Language="C#" Value="public static string GetMetadataValueEscaped (Microsoft.Build.Execution.ProjectMetadataInstance metadatum);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetMetadataValueEscaped(class Microsoft.Build.Execution.ProjectMetadataInstance metadatum) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped(Microsoft.Build.Execution.ProjectMetadataInstance)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMetadataValueEscaped (metadatum As ProjectMetadataInstance) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetMetadataValueEscaped(Microsoft::Build::Execution::ProjectMetadataInstance ^ metadatum);" />
      <MemberSignature Language="F#" Value="static member GetMetadataValueEscaped : Microsoft.Build.Execution.ProjectMetadataInstance -&gt; string" Usage="Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped metadatum" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadatum" Type="Microsoft.Build.Execution.ProjectMetadataInstance" />
      </Parameters>
      <Docs>
        <param name="metadatum">
          <span data-ttu-id="fa3db-292">O metadado a ser escapado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-292">The metadatum to be escaped.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fa3db-293">Obtém o valor de escape do metadado fornecido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-293">Gets the escaped value of the provided metadatum.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fa3db-294">Retorna o valor de escape do metadado fornecido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-294">Returns the escaped value of the provided metadatum.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMetadataValueEscaped">
      <MemberSignature Language="C#" Value="public static string GetMetadataValueEscaped (Microsoft.Build.Execution.ProjectItemDefinitionInstance item, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetMetadataValueEscaped(class Microsoft.Build.Execution.ProjectItemDefinitionInstance item, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped(Microsoft.Build.Execution.ProjectItemDefinitionInstance,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMetadataValueEscaped (item As ProjectItemDefinitionInstance, name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetMetadataValueEscaped(Microsoft::Build::Execution::ProjectItemDefinitionInstance ^ item, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetMetadataValueEscaped : Microsoft.Build.Execution.ProjectItemDefinitionInstance * string -&gt; string" Usage="Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped (item, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Execution.ProjectItemDefinitionInstance" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="fa3db-295">A definição do item para fornecer o valor de metadado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-295">The item definition to provide the metadatum value.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="fa3db-296">O nome do metadado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-296">The name of the metadatum.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fa3db-297">Obtém o valor de escape do metadado com o nome fornecido na definição do item fornecida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-297">Gets the escaped value of the metadatum with the provided name of the provided item definition.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fa3db-298">Retorna o valor de escape do metadado com o nome fornecido da definição do item fornecido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-298">Returns the escaped value of the metadatum with the provided name of the provided item definition.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMetadataValueEscaped">
      <MemberSignature Language="C#" Value="public static string GetMetadataValueEscaped (Microsoft.Build.Execution.ProjectItemInstance item, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetMetadataValueEscaped(class Microsoft.Build.Execution.ProjectItemInstance item, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped(Microsoft.Build.Execution.ProjectItemInstance,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMetadataValueEscaped (item As ProjectItemInstance, name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetMetadataValueEscaped(Microsoft::Build::Execution::ProjectItemInstance ^ item, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetMetadataValueEscaped : Microsoft.Build.Execution.ProjectItemInstance * string -&gt; string" Usage="Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped (item, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Execution.ProjectItemInstance" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="fa3db-299">O item para fornecer o valor de metadado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-299">The item to provide the metadatum value.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="fa3db-300">O nome do metadado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-300">The name of the metadatum.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fa3db-301">Obtém o valor de escape do metadado com o nome fornecido no item fornecido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-301">Gets the escaped value of the metadatum with the provided name on the provided item.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fa3db-302">Retorna o valor de escape do metadado com o nome fornecido no item fornecido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-302">Returns the escaped value of the metadatum with the provided name on the provided item.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperty">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.ProjectPropertyInstance GetProperty (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Build.Execution.ProjectPropertyInstance GetProperty(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetProperty(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperty (name As String) As ProjectPropertyInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::Build::Execution::ProjectPropertyInstance ^ GetProperty(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetProperty : string -&gt; Microsoft.Build.Execution.ProjectPropertyInstance&#xA;override this.GetProperty : string -&gt; Microsoft.Build.Execution.ProjectPropertyInstance" Usage="projectInstance.GetProperty name" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Evaluation.IPropertyProvider`1.GetProperty(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.ProjectPropertyInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="fa3db-303">O nome da propriedade a ser recuperada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-303">The name of the property to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fa3db-304">Obtém a propriedade com o nome determinado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-304">Get the property with the given name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fa3db-305">Retorna a propriedade com o nome determinado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-305">Returns the property with the given name.</span>
          </span>
          <span data-ttu-id="fa3db-306">Retornará null se nenhuma propriedade com esse nome existir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-306">Returns null if no property exists with that name.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValue">
      <MemberSignature Language="C#" Value="public string GetPropertyValue (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPropertyValue(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetPropertyValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPropertyValue (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPropertyValue(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.GetPropertyValue : string -&gt; string" Usage="projectInstance.GetPropertyValue name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="fa3db-307">O nome da propriedade cujo valor será recuperado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-307">The name of the property whose value is to be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fa3db-308">Obtém o valor da propriedade com o nome determinado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-308">Get the value of the property with the given name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fa3db-309">Retorna o valor da propriedade com o nome determinado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-309">Returns the value of the property with the given name.</span>
          </span>
          <span data-ttu-id="fa3db-310">Retornará uma cadeia de caracteres vazia se nenhuma propriedade com esse nome existir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-310">Returns an empty string if no property exists with that name.</span>
          </span>
          <span data-ttu-id="fa3db-311">O valor retornado não tem nenhuma sequência de caracteres de escape.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-311">The value returned has no escaped character sequences.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa3db-312">Esse método não faz distinção entre uma propriedade com um valor de cadeia de caracteres vazia e nenhuma propriedade com o nome fornecido.</span><span class="sxs-lookup"><span data-stu-id="fa3db-312">This method does not distinguish between a property with a value of empty string and no property with the given name.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValueEscaped">
      <MemberSignature Language="C#" Value="public static string GetPropertyValueEscaped (Microsoft.Build.Execution.ProjectPropertyInstance property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetPropertyValueEscaped(class Microsoft.Build.Execution.ProjectPropertyInstance property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetPropertyValueEscaped(Microsoft.Build.Execution.ProjectPropertyInstance)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPropertyValueEscaped (property As ProjectPropertyInstance) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetPropertyValueEscaped(Microsoft::Build::Execution::ProjectPropertyInstance ^ property);" />
      <MemberSignature Language="F#" Value="static member GetPropertyValueEscaped : Microsoft.Build.Execution.ProjectPropertyInstance -&gt; string" Usage="Microsoft.Build.Execution.ProjectInstance.GetPropertyValueEscaped property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.Build.Execution.ProjectPropertyInstance" />
      </Parameters>
      <Docs>
        <param name="property">
          <span data-ttu-id="fa3db-313">A propriedade a ser escapada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-313">The property to be escaped.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fa3db-314">Obtém o valor de escape da propriedade fornecida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-314">Get the escaped value of the provided property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fa3db-315">Retorna o valor de escape da propriedade fornecida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-315">Returns the escaped value of the provided property.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GlobalProperties">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; GlobalProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; GlobalProperties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.GlobalProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property GlobalProperties As IDictionary(Of String, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ GlobalProperties { System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.GlobalProperties : System.Collections.Generic.IDictionary&lt;string, string&gt;" Usage="Microsoft.Build.Execution.ProjectInstance.GlobalProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fa3db-316">Obtém o dicionário de propriedades globais com os quais este projeto foi avaliado, se houver.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-316">Gets the dictionary of global properties this project was evaluated with, if any.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fa3db-317">Retorna o dicionário de propriedades globais, que este projeto foi avaliado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-317">Returns the dictionary of global properties this project was evaluated with.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa3db-318">Coleção somente leitura.</span><span class="sxs-lookup"><span data-stu-id="fa3db-318">Read only collection.</span></span>  
  
 <span data-ttu-id="fa3db-319">Percorre as referências de projeto.</span><span class="sxs-lookup"><span data-stu-id="fa3db-319">Traverses project references.</span></span>  
  
 <span data-ttu-id="fa3db-320">Esse é o getter exposto publicamente, o que se traduz em um IDictionary morto somente leitura\<string, string >.</span><span class="sxs-lookup"><span data-stu-id="fa3db-320">This is the publicly exposed getter, that translates into a read-only dead IDictionary\<string, string>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitialTargets">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;string&gt; InitialTargets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.List`1&lt;string&gt; InitialTargets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.InitialTargets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InitialTargets As List(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::List&lt;System::String ^&gt; ^ InitialTargets { System::Collections::Generic::List&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InitialTargets : System.Collections.Generic.List&lt;string&gt;" Usage="Microsoft.Build.Execution.ProjectInstance.InitialTargets" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Build.Evaluation.IEvaluatorData`4.InitialTargets</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fa3db-321">Obtém a lista de destinos iniciais do projeto e todas as suas importações, começando pelo nível inferior.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-321">Gets the list of initial targets for the project and all its imports, depth-first.</span>
          </span>
          <span data-ttu-id="fa3db-322">Esses destinos são criados antes de outros destinos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-322">These targets are built before any other targets.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fa3db-323">Retorna a lista de destinos iniciais para o projeto e todas as suas importações, profundidade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-323">Returns the list of initial targets for the project and all its imports, depth-first.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsImmutable">
      <MemberSignature Language="C#" Value="public bool IsImmutable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsImmutable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.IsImmutable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsImmutable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsImmutable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsImmutable : bool" Usage="Microsoft.Build.Execution.ProjectInstance.IsImmutable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fa3db-324">Obtém um sinalizador que indica que a instância de projeto é imutável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-324">Gets a flag indicating that the project instance is immutable.</span>
          </span>
          <span data-ttu-id="fa3db-325">Este sinalizador será definido permanentemente quando a instância for criada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-325">This flag is set permanently when the instance is created.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fa3db-326">Retorna o sinalizador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-326">Returns the flag.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemDefinitions">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,Microsoft.Build.Execution.ProjectItemDefinitionInstance&gt; ItemDefinitions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, class Microsoft.Build.Execution.ProjectItemDefinitionInstance&gt; ItemDefinitions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.ItemDefinitions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemDefinitions As IDictionary(Of String, ProjectItemDefinitionInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Execution::ProjectItemDefinitionInstance ^&gt; ^ ItemDefinitions { System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Execution::ProjectItemDefinitionInstance ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ItemDefinitions : System.Collections.Generic.IDictionary&lt;string, Microsoft.Build.Execution.ProjectItemDefinitionInstance&gt;" Usage="Microsoft.Build.Execution.ProjectInstance.ItemDefinitions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,Microsoft.Build.Execution.ProjectItemDefinitionInstance&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fa3db-327">Obtém um dicionário somente leitura das definições de item no projeto, inseridas por tipo de item.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-327">Gets a read-only dictionary of the item definitions in the project, keyed by item type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fa3db-328">Retorna um dicionário somente leitura das definições de item o projeto, organizado por tipo de item.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-328">Returns a read-only dictionary of the item definitions in the project, keyed by item type.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Execution.ProjectItemInstance&gt; Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Execution.ProjectItemInstance&gt; Items" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.Items" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Items As ICollection(Of ProjectItemInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Execution::ProjectItemInstance ^&gt; ^ Items { System::Collections::Generic::ICollection&lt;Microsoft::Build::Execution::ProjectItemInstance ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Items : System.Collections.Generic.ICollection&lt;Microsoft.Build.Execution.ProjectItemInstance&gt;" Usage="Microsoft.Build.Execution.ProjectInstance.Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Execution.ProjectItemInstance&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fa3db-329">Obtém todos os itens neste projeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-329">Gets all items in this project.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fa3db-330">Retorna todos os itens neste projeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-330">Returns all items in this project.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemTypes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;string&gt; ItemTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;string&gt; ItemTypes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.ItemTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemTypes As ICollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;System::String ^&gt; ^ ItemTypes { System::Collections::Generic::ICollection&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ItemTypes : System.Collections.Generic.ICollection&lt;string&gt;" Usage="Microsoft.Build.Execution.ProjectInstance.ItemTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fa3db-331">Obtém todos os tipos de itens neste projeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-331">Gets all item types in this project.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fa3db-332">Retorna todos os tipos de item neste projeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-332">Returns all item types in this project.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProjectFileLocation">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ElementLocation ProjectFileLocation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ElementLocation ProjectFileLocation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.ProjectFileLocation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProjectFileLocation As ElementLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Construction::ElementLocation ^ ProjectFileLocation { Microsoft::Build::Construction::ElementLocation ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProjectFileLocation : Microsoft.Build.Construction.ElementLocation" Usage="Microsoft.Build.Execution.ProjectInstance.ProjectFileLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ElementLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fa3db-333">Obtém o local do arquivo originador em si.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-333">Gets the location of the originating file itself.</span>
          </span>
          <span data-ttu-id="fa3db-334">Nunca nulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-334">Never null.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fa3db-335">Retorna o local do arquivo de origem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-335">Returns the location of the originating file.</span>
          </span>
          <span data-ttu-id="fa3db-336">Nunca retorna nulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-336">Never returns null.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Execution.ProjectPropertyInstance&gt; Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Execution.ProjectPropertyInstance&gt; Properties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.Properties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Properties As ICollection(Of ProjectPropertyInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Execution::ProjectPropertyInstance ^&gt; ^ Properties { System::Collections::Generic::ICollection&lt;Microsoft::Build::Execution::ProjectPropertyInstance ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Collections.Generic.ICollection&lt;Microsoft.Build.Execution.ProjectPropertyInstance&gt;" Usage="Microsoft.Build.Execution.ProjectInstance.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Execution.ProjectPropertyInstance&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fa3db-337">Obtém todas as propriedades neste projeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-337">Gets all properties in this project.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fa3db-338">Retorna todas as propriedades neste projeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-338">Returns all properties in this project.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveItem">
      <MemberSignature Language="C#" Value="public bool RemoveItem (Microsoft.Build.Execution.ProjectItemInstance item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveItem(class Microsoft.Build.Execution.ProjectItemInstance item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.RemoveItem(Microsoft.Build.Execution.ProjectItemInstance)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveItem (item As ProjectItemInstance) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveItem(Microsoft::Build::Execution::ProjectItemInstance ^ item);" />
      <MemberSignature Language="F#" Value="member this.RemoveItem : Microsoft.Build.Execution.ProjectItemInstance -&gt; bool" Usage="projectInstance.RemoveItem item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Execution.ProjectItemInstance" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="fa3db-339">O item a ser removido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-339">The item to be removed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fa3db-340">Remove um item do projeto, se presente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-340">Removes an item from the project, if present.</span>
          </span>
          <span data-ttu-id="fa3db-341">Retornaria true se estivesse presente; caso contrário, false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-341">Returns true if it was present, false otherwise.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fa3db-342">Retornaria true se o item estivesse presente antes da remoção; caso contrário, false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-342">Returns true if the item was present before removal; false otherwise.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveProperty">
      <MemberSignature Language="C#" Value="public bool RemoveProperty (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveProperty(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.RemoveProperty(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveProperty (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveProperty(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.RemoveProperty : string -&gt; bool" Usage="projectInstance.RemoveProperty name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="fa3db-343">O nome da propriedade a ser removida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-343">The name of the property to be removed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fa3db-344">Remove uma propriedade com o nome determinado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-344">Removes a property with the given name.</span>
          </span>
          <span data-ttu-id="fa3db-345">Retornaria true se a propriedade tivesse um valor (possivelmente cadeia de caracteres vazia); caso contrário, false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-345">Returns true if the property had a value (possibly empty string), otherwise false.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fa3db-346">Retornaria true se a propriedade tivesse um valor (possivelmente uma cadeia de caracteres) antes da remoção; caso contrário, false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-346">Returns true if the property had a value (possibly an empty string) before removal; false otherwise.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetProperty">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.ProjectPropertyInstance SetProperty (string name, string evaluatedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Execution.ProjectPropertyInstance SetProperty(string name, string evaluatedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.SetProperty(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetProperty (name As String, evaluatedValue As String) As ProjectPropertyInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Execution::ProjectPropertyInstance ^ SetProperty(System::String ^ name, System::String ^ evaluatedValue);" />
      <MemberSignature Language="F#" Value="member this.SetProperty : string * string -&gt; Microsoft.Build.Execution.ProjectPropertyInstance" Usage="projectInstance.SetProperty (name, evaluatedValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.ProjectPropertyInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="evaluatedValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="fa3db-347">O nome da propriedade a ser adicionada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-347">The name of the property to add.</span>
          </span>
        </param>
        <param name="evaluatedValue">
          <span data-ttu-id="fa3db-348">O valor avaliado da propriedade a ser adicionada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-348">The evaluated value of the property to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fa3db-349">Adicione uma propriedade com o nome e o valor especificados ao projeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-349">Add a property with the specified name and value to the project.</span>
          </span>
          <span data-ttu-id="fa3db-350">Substitui qualquer propriedade pelo mesmo nome já na coleção de propriedades.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-350">Overwrites any property with the same name already in the property collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fa3db-351">Retorna a nova propriedade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-351">Returns the new property.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa3db-352">Não fazemos um ProjectPropertyInstance para garantir que não temos um que já está em uso por outro ProjectPropertyInstance.</span><span class="sxs-lookup"><span data-stu-id="fa3db-352">We don't take a ProjectPropertyInstance to make sure we don't have one that's already in use by another ProjectPropertyInstance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Targets">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,Microsoft.Build.Execution.ProjectTargetInstance&gt; Targets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, class Microsoft.Build.Execution.ProjectTargetInstance&gt; Targets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.Targets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Targets As IDictionary(Of String, ProjectTargetInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Execution::ProjectTargetInstance ^&gt; ^ Targets { System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Execution::ProjectTargetInstance ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Targets : System.Collections.Generic.IDictionary&lt;string, Microsoft.Build.Execution.ProjectTargetInstance&gt;" Usage="Microsoft.Build.Execution.ProjectInstance.Targets" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,Microsoft.Build.Execution.ProjectTargetInstance&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fa3db-353">Obtém um enumerador sobre todos os destinos neste projeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-353">Gets an enumerator over all targets in this project.</span>
          </span>
          <span data-ttu-id="fa3db-354">Esta coleção é somente leitura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-354">This collection is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fa3db-355">Retorna um enumerador sobre todos os destinos neste projeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-355">Returns an enumerator over all targets in this project.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToolsVersion">
      <MemberSignature Language="C#" Value="public string ToolsVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolsVersion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.ToolsVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ToolsVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ToolsVersion { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToolsVersion : string" Usage="Microsoft.Build.Execution.ProjectInstance.ToolsVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fa3db-356">Obtém a versão das ferramentas com a qual este projeto foi avaliado, se houver.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-356">Gets the tools version this project was evaluated with, if any.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fa3db-357">Retorna a versão das ferramentas que este projeto foi avaliado, se houver.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-357">Returns the tools version this project was evaluated with, if any.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa3db-358">O resultado não é necessariamente o mesmo que a versão das ferramentas na marca do projeto, se houver; ele pode ter sido externamente especificado, por exemplo com um comutador /tv.</span><span class="sxs-lookup"><span data-stu-id="fa3db-358">The result is not necessarily the same as the tools version on the Project tag, if any; it may have been externally specified, for example with a /tv switch.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToProjectRootElement">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ProjectRootElement ToProjectRootElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Construction.ProjectRootElement ToProjectRootElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.ToProjectRootElement" />
      <MemberSignature Language="VB.NET" Value="Public Function ToProjectRootElement () As ProjectRootElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Construction::ProjectRootElement ^ ToProjectRootElement();" />
      <MemberSignature Language="F#" Value="member this.ToProjectRootElement : unit -&gt; Microsoft.Build.Construction.ProjectRootElement" Usage="projectInstance.ToProjectRootElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectRootElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fa3db-359">Cria um ProjectRootElement do conteúdo deste ProjectInstance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-359">Creates a ProjectRootElement from the contents of this ProjectInstance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fa3db-360">Retorna um ProjectRootElement que representa esta instância.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-360">Returns a ProjectRootElement which represents this instance.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateStateFrom">
      <MemberSignature Language="C#" Value="public void UpdateStateFrom (Microsoft.Build.Execution.ProjectInstance projectState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateStateFrom(class Microsoft.Build.Execution.ProjectInstance projectState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.UpdateStateFrom(Microsoft.Build.Execution.ProjectInstance)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateStateFrom (projectState As ProjectInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateStateFrom(Microsoft::Build::Execution::ProjectInstance ^ projectState);" />
      <MemberSignature Language="F#" Value="member this.UpdateStateFrom : Microsoft.Build.Execution.ProjectInstance -&gt; unit" Usage="projectInstance.UpdateStateFrom projectState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectState" Type="Microsoft.Build.Execution.ProjectInstance" />
      </Parameters>
      <Docs>
        <param name="projectState">
          <span data-ttu-id="fa3db-361">O <see langword="ProjectInstance" /> do qual atualizar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-361">The <see langword="ProjectInstance" /> to update from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fa3db-362">Substitui o estado do projeto <see cref="P:Microsoft.Build.Execution.ProjectInstance.GlobalProperties" />, <see cref="P:Microsoft.Build.Execution.ProjectInstance.Properties" /> e <see cref="P:Microsoft.Build.Execution.ProjectInstance.Items" /> por aqueles do <see cref="T:Microsoft.Build.Execution.ProjectInstance" /> especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa3db-362">Replaces the project state <see cref="P:Microsoft.Build.Execution.ProjectInstance.GlobalProperties" />, <see cref="P:Microsoft.Build.Execution.ProjectInstance.Properties" /> and <see cref="P:Microsoft.Build.Execution.ProjectInstance.Items" /> with those from the specified <see cref="T:Microsoft.Build.Execution.ProjectInstance" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>