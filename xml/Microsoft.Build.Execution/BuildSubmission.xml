<Type Name="BuildSubmission" FullName="Microsoft.Build.Execution.BuildSubmission">
  <TypeSignature Language="C#" Value="public class BuildSubmission" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BuildSubmission extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Execution.BuildSubmission" />
  <TypeSignature Language="VB.NET" Value="Public Class BuildSubmission" />
  <TypeSignature Language="C++ CLI" Value="public ref class BuildSubmission" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="51efd-101">Representa uma solicitação de build que foi enviada para o gerenciador de build para processamento.</span><span class="sxs-lookup"><span data-stu-id="51efd-101">Represents a build request that has been submitted to the build manager for processing.</span></span> <span data-ttu-id="51efd-102">Os métodos dessa classe podem ser usados para executar solicitações de build síncronas ou assíncronas e fornecer acesso aos resultados após a conclusão.</span><span class="sxs-lookup"><span data-stu-id="51efd-102">The methods of this class may be used to execute synchronous or asynchronous build requests and to provide access to the results upon completion.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51efd-103">Essa classe é thread-safe.</span><span class="sxs-lookup"><span data-stu-id="51efd-103">This class is thread-safe.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AsyncContext">
      <MemberSignature Language="C#" Value="public object AsyncContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object AsyncContext" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.BuildSubmission.AsyncContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AsyncContext As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ AsyncContext { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="51efd-104">Obtém ou define o contexto assíncrono fornecido para <see cref="M:Microsoft.Build.Execution.BuildSubmission.ExecuteAsync(Microsoft.Build.Execution.BuildSubmissionCompleteCallback,System.Object)" />, se houver.</span><span class="sxs-lookup"><span data-stu-id="51efd-104">Gets or sets the asynchronous context provided to <see cref="M:Microsoft.Build.Execution.BuildSubmission.ExecuteAsync(Microsoft.Build.Execution.BuildSubmissionCompleteCallback,System.Object)" />, if any.</span></span></summary>
        <value><span data-ttu-id="51efd-105">Retorna o contexto assíncrono fornecido para <see cref="M:Microsoft.Build.Execution.BuildSubmission.ExecuteAsync(Microsoft.Build.Execution.BuildSubmissionCompleteCallback,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="51efd-105">Returns the asynchronous context provided to <see cref="M:Microsoft.Build.Execution.BuildSubmission.ExecuteAsync(Microsoft.Build.Execution.BuildSubmissionCompleteCallback,System.Object)" />.</span></span> <span data-ttu-id="51efd-106">Retorna null se nenhum contexto for fornecido.</span><span class="sxs-lookup"><span data-stu-id="51efd-106">Returns null if no context is provided.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildManager">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.BuildManager BuildManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Execution.BuildManager BuildManager" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.BuildSubmission.BuildManager" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BuildManager As BuildManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Execution::BuildManager ^ BuildManager { Microsoft::Build::Execution::BuildManager ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.BuildManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="51efd-107">Obtém ou define o gerenciador de build ao qual esse envio de build está associado.</span><span class="sxs-lookup"><span data-stu-id="51efd-107">Gets or sets the build manager this build submission is associated with.</span></span></summary>
        <value><span data-ttu-id="51efd-108">Retorna o Gerenciador de compilação, que o envio de compilação está associado.</span><span class="sxs-lookup"><span data-stu-id="51efd-108">Returns the build manager this build submission is associated with.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildResult">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.BuildResult BuildResult { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Execution.BuildResult BuildResult" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.BuildSubmission.BuildResult" />
      <MemberSignature Language="VB.NET" Value="Public Property BuildResult As BuildResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Execution::BuildResult ^ BuildResult { Microsoft::Build::Execution::BuildResult ^ get(); void set(Microsoft::Build::Execution::BuildResult ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.BuildResult</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="51efd-109">Obtém ou define o resultado de build.</span><span class="sxs-lookup"><span data-stu-id="51efd-109">Gets or sets the result of the build.</span></span></summary>
        <value><span data-ttu-id="51efd-110">Retorna o resultado da compilação.</span><span class="sxs-lookup"><span data-stu-id="51efd-110">Returns the result of the build.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51efd-111">O resultado não é válido até <xref:Microsoft.Build.Execution.BuildSubmission.WaitHandle%2A> é exibido.</span><span class="sxs-lookup"><span data-stu-id="51efd-111">The result is not valid until <xref:Microsoft.Build.Execution.BuildSubmission.WaitHandle%2A> is signalled.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.BuildResult Execute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Execution.BuildResult Execute() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.BuildSubmission.Execute" />
      <MemberSignature Language="VB.NET" Value="Public Function Execute () As BuildResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Execution::BuildResult ^ Execute();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.BuildResult</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="51efd-112">Inicia uma solicitação de build de forma síncrona e aguarda até que os resultados estejam disponíveis.</span><span class="sxs-lookup"><span data-stu-id="51efd-112">Starts a build request synchronously and waits until results are available.</span></span></summary>
        <returns><span data-ttu-id="51efd-113">Retorna a solicitação de build.</span><span class="sxs-lookup"><span data-stu-id="51efd-113">Returns the build request.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="51efd-114">A solicitação já foi iniciada ou já foi concluída.</span><span class="sxs-lookup"><span data-stu-id="51efd-114">The request has already been started or is already complete.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ExecuteAsync">
      <MemberSignature Language="C#" Value="public void ExecuteAsync (Microsoft.Build.Execution.BuildSubmissionCompleteCallback callback, object context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ExecuteAsync(class Microsoft.Build.Execution.BuildSubmissionCompleteCallback callback, object context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.BuildSubmission.ExecuteAsync(Microsoft.Build.Execution.BuildSubmissionCompleteCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExecuteAsync (callback As BuildSubmissionCompleteCallback, context As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExecuteAsync(Microsoft::Build::Execution::BuildSubmissionCompleteCallback ^ callback, System::Object ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="Microsoft.Build.Execution.BuildSubmissionCompleteCallback" />
        <Parameter Name="context" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="51efd-115">O método de retorno de chamada para chamar quando o envio de build for concluído.</span><span class="sxs-lookup"><span data-stu-id="51efd-115">The callback method to call when the build submission is complete.</span></span></param>
        <param name="context"><span data-ttu-id="51efd-116">O contexto no qual ocorre o envio de build.</span><span class="sxs-lookup"><span data-stu-id="51efd-116">The context in which the build submission occurs.</span></span></param>
        <summary><span data-ttu-id="51efd-117">Inicia uma solicitação de build de forma assíncrona e dentro do contexto especificado.</span><span class="sxs-lookup"><span data-stu-id="51efd-117">Starts a build request asynchronously and within the given context.</span></span> <span data-ttu-id="51efd-118">Retorna imediatamente o controle ao chamador.</span><span class="sxs-lookup"><span data-stu-id="51efd-118">Immediately returns control to the caller.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="51efd-119">A solicitação já foi iniciada ou já foi concluída.</span><span class="sxs-lookup"><span data-stu-id="51efd-119">The request has already been started or is already complete.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsCompleted">
      <MemberSignature Language="C#" Value="public bool IsCompleted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCompleted" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.BuildSubmission.IsCompleted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCompleted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCompleted { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="51efd-120">Determina se o envio desse build foi concluído.</span><span class="sxs-lookup"><span data-stu-id="51efd-120">Determines whether this build submission is complete.</span></span></summary>
        <value><span data-ttu-id="51efd-121">Retorna VERDADEIRO se o envio de compilação for concluído; FALSO caso contrário.</span><span class="sxs-lookup"><span data-stu-id="51efd-121">Returns true if this build submission is complete; false otherwise.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubmissionId">
      <MemberSignature Language="C#" Value="public int SubmissionId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SubmissionId" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.BuildSubmission.SubmissionId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SubmissionId As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SubmissionId { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="51efd-122">Obtém ou define uma ID que identifica exclusivamente o envio desse build.</span><span class="sxs-lookup"><span data-stu-id="51efd-122">Gets or sets an ID uniquely identifying this build submission.</span></span></summary>
        <value><span data-ttu-id="51efd-123">Retorna uma ID que identifica exclusivamente o envio de compilação.</span><span class="sxs-lookup"><span data-stu-id="51efd-123">Returns an ID uniquely identifying this build submission.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51efd-124">Essa ID é usada para distinguir o envio de compilação de outros envios de compilação dentro do mesmo build.</span><span class="sxs-lookup"><span data-stu-id="51efd-124">This ID is used to distinguish this build submission from other build submissions within the same build.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WaitHandle">
      <MemberSignature Language="C#" Value="public System.Threading.WaitHandle WaitHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.WaitHandle WaitHandle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.BuildSubmission.WaitHandle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WaitHandle As WaitHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::WaitHandle ^ WaitHandle { System::Threading::WaitHandle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.WaitHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="51efd-125">Obtém um objeto de <see cref="T:System.Threading.WaitHandle" /> que será assinalado quando o build for concluído.</span><span class="sxs-lookup"><span data-stu-id="51efd-125">Gets a <see cref="T:System.Threading.WaitHandle" /> object that will be signalled when the build is complete.</span></span></summary>
        <value><span data-ttu-id="51efd-126">Retorna null até <see cref="M:Microsoft.Build.Execution.BuildSubmission.Execute" /> ou <see cref="M:Microsoft.Build.Execution.BuildSubmission.ExecuteAsync(Microsoft.Build.Execution.BuildSubmissionCompleteCallback,System.Object)" /> retorna, em seguida, retorna o objeto WaitHandle.</span><span class="sxs-lookup"><span data-stu-id="51efd-126">Returns null until <see cref="M:Microsoft.Build.Execution.BuildSubmission.Execute" /> or <see cref="M:Microsoft.Build.Execution.BuildSubmission.ExecuteAsync(Microsoft.Build.Execution.BuildSubmissionCompleteCallback,System.Object)" /> returns, then returns the WaitHandle object.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>