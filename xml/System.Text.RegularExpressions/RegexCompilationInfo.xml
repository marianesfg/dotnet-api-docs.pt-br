<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="RegexCompilationInfo.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5731a068feb7a24b5a370b0ee36313a7a143e71c7.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">731a068feb7a24b5a370b0ee36313a7a143e71c7</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Text.RegularExpressions.RegexCompilationInfo">
          <source>Provides information about a regular expression that is used to compile a regular expression to a stand-alone assembly.</source>
          <target state="translated">Fornece informações sobre uma expressão regular usada para compilar uma expressão regular para um assembly autônomo.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.RegexCompilationInfo">
          <source>An array of <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo&gt;</ph> objects is passed to the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A&gt;</ph> method to provide information about each regular expression to be included in the assembly.</source>
          <target state="translated">Uma matriz de <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo&gt;</ph> objetos é passada para o <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A&gt;</ph> método para fornecer informações sobre cada expressão regular a ser incluído no assembly.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.RegexCompilationInfo">
          <source>Each compiled regular expression that is included in the assembly is represented as a class derived from <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex&gt;</ph>.</source>
          <target state="translated">Cada expressão regular compilado que está incluído no conjunto é representada como uma classe derivada de <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.RegexCompilationInfo">
          <source>The properties of the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo&gt;</ph> type define the regular expression's class name, its fully qualified name (that is, its namespace and its type name), its regular expression pattern, any additional options (such as whether the regular expression is case-insensitive), and a time-out interval that specifies how long the regular expression engine should search for a match.</source>
          <target state="translated">As propriedades do <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo&gt;</ph> tipo define o nome da classe da expressão regular, o nome totalmente qualificado (ou seja, o seu namespace e o seu nome de tipo), o padrão de expressão regular, quaisquer opções adicionais (como se a expressão regular diferencia maiusculas de minúsculas) e um intervalo de tempo limite que especifica quanto tempo o mecanismo de expressão regular deve procurar uma correspondência.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.RegexCompilationInfo">
          <source>You can instantiate a <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo&gt;</ph> object by calling its overloaded class constructor.</source>
          <target state="translated">Você pode instanciar uma <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo&gt;</ph> objeto chamando o construtor de classe sobrecarregados.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="T:System.Text.RegularExpressions.RegexCompilationInfo">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Text.RegularExpressions.RegexCompilationInfo" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Text.RegularExpressions.RegexCompilationInfo" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)">
          <source>The regular expression to compile.</source>
          <target state="translated">A expressão regular a ser compilada.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)">
          <source>The regular expression options to use when compiling the regular expression.</source>
          <target state="translated">As opções de expressão regular a serem usadas ao compilar a expressão regular.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)">
          <source>The name of the type that represents the compiled regular expression.</source>
          <target state="translated">O nome do tipo que representa a expressão regular compilada.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)">
          <source>The namespace to which the new type belongs.</source>
          <target state="translated">O namespace ao qual o novo tipo pertence.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to make the compiled regular expression publicly visible; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para tornar a expressão regular compilada publicamente visível; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Text.RegularExpressions.RegexCompilationInfo" /&gt;</ph> class that contains information about a regular expression to be included in an assembly.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Text.RegularExpressions.RegexCompilationInfo" /&gt;</ph> que contém informações sobre uma expressão regular a ser incluída em um assembly.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)">
          <source>Each parameter of the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.String%2CSystem.String%2CSystem.Boolean%29&gt;</ph> constructor directly corresponds to a property of the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo&gt;</ph> class.</source>
          <target state="translated">Cada parâmetro do <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.String%2CSystem.String%2CSystem.Boolean%29&gt;</ph> construtor corresponde diretamente a uma propriedade do <ph id="ph2">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)">
          <source>Because all properties are read/write, their values can also be assigned directly.</source>
          <target state="translated">Como todas as propriedades são somente leitura, seus valores também podem ser atribuídos diretamente.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A&gt;</ph> method generates an assembly that contains compiled regular expressions.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A&gt;</ph> método gera um assembly que contém expressões regulares compiladas.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)">
          <source>Therefore, you should not specify <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexOptions.Compiled&gt;</ph> as one of the values of <ph id="ph2">`options`</ph>.</source>
          <target state="translated">Portanto, você não deve especificar <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexOptions.Compiled&gt;</ph> como um dos valores de <ph id="ph2">`options`</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)">
          <source>If <ph id="ph1">`ispublic`</ph> is <ph id="ph2">`true`</ph>, the compiled regular expression class is given public accessibility.</source>
          <target state="translated">Se <ph id="ph1">`ispublic`</ph> é <ph id="ph2">`true`</ph>, a classe de expressão regular compilados tem acessibilidade pública.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)">
          <source>That is, it can be instantiated from code that executes in any assembly.</source>
          <target state="translated">Ou seja, ele poderá ser instanciado de código que é executado em qualquer assembly.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)">
          <source>If <ph id="ph1">`ispublic`</ph> is <ph id="ph2">`false`</ph>, the compiled regular expression class is given <ph id="ph3">`internal`</ph> (in C#) or <ph id="ph4">`Friend`</ph> (in Visual Basic) accessibility.</source>
          <target state="translated">Se <ph id="ph1">`ispublic`</ph> é <ph id="ph2">`false`</ph>, receberá a classe de expressão regular compilados <ph id="ph3">`internal`</ph> (em c#) ou <ph id="ph4">`Friend`</ph> (no Visual Basic) acessibilidade.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)">
          <source>That is, it can be instantiated only from code that executes in the same assembly as the regular expression class.</source>
          <target state="translated">Ou seja, ele poderá ser instanciado somente de código que é executado no mesmo assembly como a classe de expressão regular.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)">
          <source>The following example creates and uses a compiled regular expression in two steps.</source>
          <target state="translated">O exemplo a seguir cria e usa uma expressão regular compilada em duas etapas.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)">
          <source>In the first step, compile and execute the following code example.</source>
          <target state="translated">Na primeira etapa, compile e execute o exemplo de código a seguir.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%2A&gt;</ph> constructor in the code example defines a compiled regular expression.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%2A&gt;</ph> construtor no exemplo de código define uma expressão regular compilada.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)">
          <source>The result of executing the code is an assembly named FishRegex.dll that contains a compiled regular expression type named <ph id="ph1">`FishRegex`</ph>.</source>
          <target state="translated">O resultado da execução do código é um assembly chamado FishRegex.dll que contém um tipo de expressão regular compilados chamado <ph id="ph1">`FishRegex`</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)">
          <source>In the second step, compile the following code example using a reference to FishRegex.dll, and then run the resulting executable file.</source>
          <target state="translated">Na segunda etapa, compile o exemplo a seguir usa uma referência a FishRegex.dll e, em seguida, execute o arquivo executável resultante.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)">
          <source>The executable file matches a target string by using the <ph id="ph1">`FishRegex`</ph> type, and displays the match, group, capture group, and index position of the matches in the target string.</source>
          <target state="translated">O arquivo executável corresponde a uma cadeia de caracteres de destino usando o <ph id="ph1">`FishRegex`</ph> digite e exibe a correspondência, grupo, grupo de captura e posição de índice de correspondências na cadeia de caracteres de destino.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph> é <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="pattern" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="pattern" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="fullnamespace" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="fullnamespace" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)">
          <source>This constructor creates a compiled regular expression that uses the default time-out value of the application domain in which it is created.</source>
          <target state="translated">Este construtor cria uma expressão regular compilada que usa o valor de tempo limite padrão do domínio do aplicativo no qual ele é criado.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)">
          <source>If a time-out value is defined for the application domain, the compiled regular expression uses the value <ph id="ph1">&lt;see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /&gt;</ph>, which prevents a pattern-matching operation from timing out. The recommended constructor for creating a compiled regular expression is <ph id="ph2">&lt;see cref="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)" /&gt;</ph>, which lets you set the time-out interval.</source>
          <target state="translated">Se um valor de tempo limite é definido para o domínio de aplicativo, a expressão regular compilada usa o valor <ph id="ph1">&lt;see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /&gt;</ph>, que impede que uma operação de correspondência de padrão de tempo limite. O construtor recomendado para a criação de uma expressão regular compilada é <ph id="ph2">&lt;see cref="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)" /&gt;</ph>, que permite que você defina o intervalo de tempo limite.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)">
          <source>The regular expression to compile.</source>
          <target state="translated">A expressão regular a ser compilada.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)">
          <source>The regular expression options to use when compiling the regular expression.</source>
          <target state="translated">As opções de expressão regular a serem usadas ao compilar a expressão regular.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)">
          <source>The name of the type that represents the compiled regular expression.</source>
          <target state="translated">O nome do tipo que representa a expressão regular compilada.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)">
          <source>The namespace to which the new type belongs.</source>
          <target state="translated">O namespace ao qual o novo tipo pertence.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to make the compiled regular expression publicly visible; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para tornar a expressão regular compilada publicamente visível; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)">
          <source>The default time-out interval for the regular expression.</source>
          <target state="translated">O intervalo de tempo limite padrão para a expressão regular.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Text.RegularExpressions.RegexCompilationInfo" /&gt;</ph> class that contains information about a regular expression with a specified time-out value to be included in an assembly.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Text.RegularExpressions.RegexCompilationInfo" /&gt;</ph> que contém informações sobre uma expressão regular com um valor de tempo limite especificado a ser incluído em um assembly.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)">
          <source>Each parameter of the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.String%2CSystem.String%2CSystem.Boolean%29&gt;</ph> constructor directly corresponds to a property of the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo&gt;</ph> class.</source>
          <target state="translated">Cada parâmetro do <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.String%2CSystem.String%2CSystem.Boolean%29&gt;</ph> construtor corresponde diretamente a uma propriedade do <ph id="ph2">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)">
          <source>Because all properties are read/write, their values can also be assigned directly.</source>
          <target state="translated">Como todas as propriedades são somente leitura, seus valores também podem ser atribuídos diretamente.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)">
          <source>The <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A&gt;</ph> method generates an assembly that contains compiled regular expressions.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A&gt;</ph> método gera um assembly que contém expressões regulares compiladas.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)">
          <source>Therefore, you should not specify <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexOptions.Compiled&gt;</ph> as one of the values of <ph id="ph2">`options`</ph>.</source>
          <target state="translated">Portanto, você não deve especificar <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexOptions.Compiled&gt;</ph> como um dos valores de <ph id="ph2">`options`</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)">
          <source>If <ph id="ph1">`ispublic`</ph> is <ph id="ph2">`true`</ph>, the compiled regular expression class is given public accessibility.</source>
          <target state="translated">Se <ph id="ph1">`ispublic`</ph> é <ph id="ph2">`true`</ph>, a classe de expressão regular compilados tem acessibilidade pública.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)">
          <source>That is, it can be instantiated from code that executes in any assembly.</source>
          <target state="translated">Ou seja, ele poderá ser instanciado de código que é executado em qualquer assembly.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)">
          <source>If <ph id="ph1">`ispublic`</ph> is <ph id="ph2">`false`</ph>, the compiled regular expression class is given <ph id="ph3">`internal`</ph> (in C#) or <ph id="ph4">`Friend`</ph> (in Visual Basic) accessibility.</source>
          <target state="translated">Se <ph id="ph1">`ispublic`</ph> é <ph id="ph2">`false`</ph>, receberá a classe de expressão regular compilados <ph id="ph3">`internal`</ph> (em c#) ou <ph id="ph4">`Friend`</ph> (no Visual Basic) acessibilidade.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)">
          <source>That is, it can be instantiated only from code that executes in the same assembly as the regular expression class.</source>
          <target state="translated">Ou seja, ele poderá ser instanciado somente de código que é executado no mesmo assembly como a classe de expressão regular.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)">
          <source>The <ph id="ph1">`matchTimeout`</ph> parameter defines the default time-out interval for the compiled regular expression.</source>
          <target state="translated">O <ph id="ph1">`matchTimeout`</ph> parâmetro define o intervalo de tempo limite padrão para a expressão regular compilado.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)">
          <source>This value represents the approximate amount of time that a compiled regular expression object will execute a single matching operation before the operation times out and the regular expression engine throws a <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException&gt;</ph> exception during its next timing check.</source>
          <target state="translated">Esse valor representa a quantidade aproximada de tempo que um objeto de expressão regular compilada será executado uma única operação de correspondência antes da operação de tempo limite e o mecanismo de expressão regular gera um <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException&gt;</ph> exceção durante sua próxima verificação de tempo.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)">
          <source>For additional information about the time-out value, see the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout%2A&gt;</ph> property.</source>
          <target state="translated">Para obter informações adicionais sobre o valor de tempo limite, consulte o <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)">
          <source>We recommend that you always set a default time-out value for a compiled regular expression.</source>
          <target state="translated">É recomendável que você sempre pode definir um valor de tempo limite padrão para uma expressão regular compilado.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)">
          <source>Consumers of your regular expression library can override that time-out value by passing a <ph id="ph1">&lt;xref:System.TimeSpan&gt;</ph> value that represents the new time-out interval to this constructor overload.</source>
          <target state="translated">Os consumidores de sua biblioteca de expressão regular podem substituir esse valor de tempo limite, passando um <ph id="ph1">&lt;xref:System.TimeSpan&gt;</ph> valor que representa o novo intervalo de tempo limite para essa sobrecarga de construtor.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)">
          <source>The following example defines a single compiled regular expression named <ph id="ph1">`DuplicateChars`</ph> that identifies two or more occurrences of the same character in an input string.</source>
          <target state="translated">O exemplo a seguir define uma única expressão regular compilada denominada <ph id="ph1">`DuplicateChars`</ph> que identifica a duas ou mais ocorrências do mesmo caractere em uma cadeia de caracteres de entrada.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)">
          <source>The compiled regular expression has a default time-out of 2 seconds.</source>
          <target state="translated">A expressão regular compilada tem um tempo limite padrão de 2 segundos.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)">
          <source>When you execute the example, it creates a class library named RegexLib.dll that contains the compiled regular expression.</source>
          <target state="translated">Quando você executar o exemplo, ele cria uma biblioteca de classes chamada RegexLib.dll que contém a expressão regular compilada.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)">
          <source>The regular expression pattern <ph id="ph1">`(\w)\1+`</ph> is defined as shown in the following table.</source>
          <target state="translated">O padrão de expressão regular <ph id="ph1">`(\w)\1+`</ph> é definido conforme mostrado na tabela a seguir.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)">
          <source>Pattern</source>
          <target state="translated">Padrão</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)">
          <source>Description</source>
          <target state="translated">Descrição</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)">
          <source>Match any word character and assign it to the first capturing group.</source>
          <target state="translated">Corresponder qualquer caractere de palavra e atribuí-la para o primeiro grupo de capturando.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)">
          <source>Match one or more occurrences of the value of the first captured group.</source>
          <target state="translated">Corresponde a uma ou mais ocorrências do valor do primeiro grupo capturado.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)">
          <source>The following example uses the <ph id="ph1">`DuplicatedChars`</ph> regular expression to identify duplicate characters in a string array.</source>
          <target state="translated">O exemplo a seguir usa o <ph id="ph1">`DuplicatedChars`</ph> expressão regular para identificar duplique caracteres em uma matriz de cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)">
          <source>When it calls the <ph id="ph1">`DuplicatedChars`</ph> constructor, it changes the time-out interval to .5 seconds.</source>
          <target state="translated">Quando ele chama o <ph id="ph1">`DuplicatedChars`</ph> construtor, ele altera o intervalo de tempo limite de 0,5 segundo.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph> é <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)">
          <source><ph id="ph1">&lt;paramref name="pattern" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="pattern" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)">
          <source><ph id="ph1">&lt;paramref name="fullnamespace" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="fullnamespace" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)">
          <source><ph id="ph1">&lt;paramref name="matchTimeout" /&gt;</ph> is negative, zero, or greater than approximately 24 days.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="matchTimeout" /&gt;</ph> é negativo, zero ou maior que aproximadamente 24 dias.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="P:System.Text.RegularExpressions.RegexCompilationInfo.IsPublic">
          <source>Gets or sets a value that indicates whether the compiled regular expression has public visibility.</source>
          <target state="translated">Obtém ou define um valor que indica se a expressão regular compilada tem visibilidade pública.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexCompilationInfo.IsPublic">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the regular expression has public visibility; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Se a expressão regular tem visibilidade pública; Caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexCompilationInfo.IsPublic">
          <source>If the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo.IsPublic%2A&gt;</ph> property is <ph id="ph2">`false`</ph>, the regular expression class defined by the current instance can be instantiated only by code that is executing in the assembly that contains the class.</source>
          <target state="translated">Se o <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo.IsPublic%2A&gt;</ph> é de propriedade <ph id="ph2">`false`</ph>, a classe de expressão regular definida pela instância atual pode ser instanciada somente pelo código que está em execução no assembly que contém a classe.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexCompilationInfo.IsPublic">
          <source>However, because the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A?displayProperty=nameWithType&gt;</ph> method generates an assembly that contains only compiled regular expressions and does not allow additional code to be added, there is generally no reason to assign this property a value of <ph id="ph2">`false`</ph>.</source>
          <target state="translated">No entanto, como o <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A?displayProperty=nameWithType&gt;</ph> método gera um assembly que contém somente as expressões regulares compiladas e não permite que o código adicional a ser adicionado, geralmente, não há nenhum motivo para atribuir esta propriedade um valor de <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="P:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout">
          <source>Gets or sets the regular expression's default time-out interval.</source>
          <target state="translated">Obtém ou define o intervalo de tempo limite padrão da expressão regular.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout">
          <source>The default maximum time interval that can elapse in a pattern-matching operation before a <ph id="ph1">&lt;see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /&gt;</ph> is thrown, or <ph id="ph2">&lt;see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /&gt;</ph> if time-outs are disabled.</source>
          <target state="translated">O intervalo de tempo máximo que pode decorrer em uma operação de correspondência antes de um <ph id="ph1">&lt;see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /&gt;</ph> for lançada, ou <ph id="ph2">&lt;see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /&gt;</ph> se tempos limite está desabilitado.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout">
          <source>The <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout%2A&gt;</ph> property defines the default time-out interval for the compiled regular expression.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout%2A&gt;</ph> propriedade define o intervalo de tempo limite padrão para a expressão regular compilado.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout">
          <source>This value represents the approximate amount of time that a compiled regular expression will execute a single matching operation before the operation times out and the regular expression engine throws a <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException&gt;</ph> exception during its next timing check.</source>
          <target state="translated">Esse valor representa a quantidade aproximada de tempo que uma expressão regular compilada executará uma única operação de correspondência antes da operação de tempo limite e o mecanismo de expressão regular gera um <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException&gt;</ph> exceção durante sua próxima verificação de tempo.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout">
          <source>We recommend that you always set a default time-out value for a compiled regular expression.</source>
          <target state="translated">É recomendável que você sempre pode definir um valor de tempo limite padrão para uma expressão regular compilado.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout">
          <source>Consumers of your regular expression library can override that time-out value by passing a <ph id="ph1">&lt;xref:System.TimeSpan&gt;</ph> value that represents the new time-out interval to the compiled regular expression's class constructor.</source>
          <target state="translated">Os consumidores de sua biblioteca de expressão regular podem substituir esse valor de tempo limite, passando um <ph id="ph1">&lt;xref:System.TimeSpan&gt;</ph> valor que representa o novo intervalo de tempo limite para o construtor de classe da expressão regular compilados.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout">
          <source>You can assign a default time-out value to a <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo&gt;</ph> object in any of the following ways:</source>
          <target state="translated">Você pode atribuir um valor de tempo limite padrão para um <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo&gt;</ph> objeto em qualquer uma das seguintes maneiras:</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout">
          <source>By calling the <ph id="ph1">&lt;xref:System.AppDomain.SetData%2A?displayProperty=nameWithType&gt;</ph> method and providing the string representation of a <ph id="ph2">&lt;xref:System.TimeSpan&gt;</ph> value for the "REGEX_DEFAULT_MATCH_TIMEOUT" property.</source>
          <target state="translated">Chamando o <ph id="ph1">&lt;xref:System.AppDomain.SetData%2A?displayProperty=nameWithType&gt;</ph> método e fornecer a representação de cadeia de caracteres de uma <ph id="ph2">&lt;xref:System.TimeSpan&gt;</ph> valor para a propriedade "REGEX_DEFAULT_MATCH_TIMEOUT".</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout">
          <source>By calling the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.String%2CSystem.String%2CSystem.Boolean%2CSystem.TimeSpan%29&gt;</ph> constructor and providing a value for the <ph id="ph2">`matchTimeout`</ph> parameter.</source>
          <target state="translated">Chamando o <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.String%2CSystem.String%2CSystem.Boolean%2CSystem.TimeSpan%29&gt;</ph> construtor e fornecer um valor para o <ph id="ph2">`matchTimeout`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout">
          <source>By setting the value of this property.</source>
          <target state="translated">Definindo o valor dessa propriedade.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout">
          <source>To set a reasonable time-out interval, consider the following factors:</source>
          <target state="translated">Para definir um intervalo de tempo limite razoável, considere os seguintes fatores:</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout">
          <source>The length and complexity of the regular expression pattern.</source>
          <target state="translated">O comprimento e a complexidade do padrão de expressão regular.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout">
          <source>Longer and more complex regular expressions require more time than shorter and simpler ones.</source>
          <target state="translated">Expressões regulares mais longas e complexas requerem mais tempo do que aqueles menores e mais simples.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout">
          <source>The expected machine load.</source>
          <target state="translated">A carga esperada máquina.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout">
          <source>Processing takes more time on systems with high CPU and memory utilization.</source>
          <target state="translated">Processamento leva mais tempo em sistemas com alta utilização de CPU e memória.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout">
          <source>The following example defines a single compiled regular expression named <ph id="ph1">`DuplicateChars`</ph> that identifies two or more occurrences of the same character in an input string.</source>
          <target state="translated">O exemplo a seguir define uma única expressão regular compilada denominada <ph id="ph1">`DuplicateChars`</ph> que identifica a duas ou mais ocorrências do mesmo caractere em uma cadeia de caracteres de entrada.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout">
          <source>The compiled regular expression has a default time-out of 2 seconds.</source>
          <target state="translated">A expressão regular compilada tem um tempo limite padrão de 2 segundos.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout">
          <source>When you execute the example, it creates a class library named RegexLib.dll that contains the compiled regular expression.</source>
          <target state="translated">Quando você executar o exemplo, ele cria uma biblioteca de classes chamada RegexLib.dll que contém a expressão regular compilada.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout">
          <source>The regular expression pattern <ph id="ph1">`(\w)\1+`</ph> is defined as shown in the following table.</source>
          <target state="translated">O padrão de expressão regular <ph id="ph1">`(\w)\1+`</ph> é definido conforme mostrado na tabela a seguir.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout">
          <source>Pattern</source>
          <target state="translated">Padrão</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout">
          <source>Description</source>
          <target state="translated">Descrição</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout">
          <source>Match any word character and assign it to the first capturing group.</source>
          <target state="translated">Corresponder qualquer caractere de palavra e atribuí-la para o primeiro grupo de capturando.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout">
          <source>Match one or more occurrences of the value of the first captured group.</source>
          <target state="translated">Corresponde a uma ou mais ocorrências do valor do primeiro grupo capturado.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout">
          <source>The following example uses the <ph id="ph1">`DuplicatedChars`</ph> regular expression to identify duplicate characters in a string array.</source>
          <target state="translated">O exemplo a seguir usa o <ph id="ph1">`DuplicatedChars`</ph> expressão regular para identificar duplique caracteres em uma matriz de cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout">
          <source>When it calls the <ph id="ph1">`DuplicatedChars`</ph> constructor, it changes the time-out interval to .5 seconds.</source>
          <target state="translated">Quando ele chama o <ph id="ph1">`DuplicatedChars`</ph> construtor, ele altera o intervalo de tempo limite de 0,5 segundo.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="P:System.Text.RegularExpressions.RegexCompilationInfo.Name">
          <source>Gets or sets the name of the type that represents the compiled regular expression.</source>
          <target state="translated">Obtém ou define o nome do tipo que representa a expressão regular compilada.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexCompilationInfo.Name">
          <source>The name of the new type.</source>
          <target state="translated">O nome do novo tipo.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexCompilationInfo.Name">
          <source>The <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo&gt;</ph> class is used to define a compiled regular expression, which is represented as a class derived from <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Regex&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo&gt;</ph> classe é usada para definir uma expressão regular compilada, que é representada como uma classe derivada de <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Regex&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexCompilationInfo.Name">
          <source>The <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo.Name%2A&gt;</ph> property defines the class name of the regular expression type, and the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo.Namespace%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo.Name%2A&gt;</ph> properties together define its fully qualified name.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo.Name%2A&gt;</ph> propriedade define o nome da classe do tipo de expressão regular e o <ph id="ph2">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo.Namespace%2A&gt;</ph> e <ph id="ph3">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo.Name%2A&gt;</ph> propriedades juntas definem o nome totalmente qualificado.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="P:System.Text.RegularExpressions.RegexCompilationInfo.Name">
          <source>The value for this property is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">O valor dessa propriedade é <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="P:System.Text.RegularExpressions.RegexCompilationInfo.Name">
          <source>The value for this property is an empty string.</source>
          <target state="translated">O valor dessa propriedade é uma cadeia de caracteres vazia.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="P:System.Text.RegularExpressions.RegexCompilationInfo.Namespace">
          <source>Gets or sets the namespace to which the new type belongs.</source>
          <target state="translated">Obtém ou define o namespace ao qual o novo tipo pertence.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexCompilationInfo.Namespace">
          <source>The namespace of the new type.</source>
          <target state="translated">O namespace do novo tipo.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexCompilationInfo.Namespace">
          <source>The <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo&gt;</ph> class is used to define a compiled regular expression, which is represented as a class derived from <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Regex&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo&gt;</ph> classe é usada para definir uma expressão regular compilada, que é representada como uma classe derivada de <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Regex&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexCompilationInfo.Namespace">
          <source>The <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo.Namespace%2A&gt;</ph> property defines the namespace that contains the compiled regular expression type, and the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo.Namespace%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo.Name%2A&gt;</ph> properties together define its fully qualified name.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo.Namespace%2A&gt;</ph> propriedade define o namespace que contém o tipo de expressão regular compilado, e o <ph id="ph2">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo.Namespace%2A&gt;</ph> e <ph id="ph3">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo.Name%2A&gt;</ph> propriedades juntas definem o nome totalmente qualificado.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="P:System.Text.RegularExpressions.RegexCompilationInfo.Namespace">
          <source>The value for this property is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">O valor dessa propriedade é <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="P:System.Text.RegularExpressions.RegexCompilationInfo.Options">
          <source>Gets or sets the options to use when compiling the regular expression.</source>
          <target state="translated">Obtém ou define as opções a serem usadas ao compilar a expressão regular.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexCompilationInfo.Options">
          <source>A bitwise combination of the enumeration values.</source>
          <target state="translated">Um combinação bit a bit dos valores de enumeração.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexCompilationInfo.Options">
          <source>The <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A&gt;</ph> method generates an assembly that contains compiled regular expressions.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A&gt;</ph> método gera um assembly que contém expressões regulares compiladas.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexCompilationInfo.Options">
          <source>Therefore, you do not have to specify <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexOptions.Compiled&gt;</ph> as one of the values of this property.</source>
          <target state="translated">Portanto, você não precisa especificar <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexOptions.Compiled&gt;</ph> como um dos valores da propriedade.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexCompilationInfo.Options">
          <source>If it is present, the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexOptions.Compiled&gt;</ph> option is ignored.</source>
          <target state="translated">Se estiver presente, o <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexOptions.Compiled&gt;</ph> opção será ignorada.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="P:System.Text.RegularExpressions.RegexCompilationInfo.Pattern">
          <source>Gets or sets the regular expression to compile.</source>
          <target state="translated">Obtém ou define a expressão regular a ser compilada.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexCompilationInfo.Pattern">
          <source>The regular expression to compile.</source>
          <target state="translated">A expressão regular a ser compilada.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexCompilationInfo.Pattern">
          <source>The <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo.Pattern%2A&gt;</ph> property can contain any valid regular expression.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo.Pattern%2A&gt;</ph> propriedade pode conter qualquer expressão regular válida.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexCompilationInfo.Pattern">
          <source>If the value of the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo.Pattern%2A&gt;</ph> property is not a syntactically correct regular expression pattern, the call to the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A&gt;</ph> method throws an <ph id="ph3">&lt;xref:System.ArgumentException&gt;</ph>.</source>
          <target state="translated">Se o valor da <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo.Pattern%2A&gt;</ph> propriedade não é um padrão de expressão regular sintaticamente correto, a chamada para o <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A&gt;</ph> método lança um <ph id="ph3">&lt;xref:System.ArgumentException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="P:System.Text.RegularExpressions.RegexCompilationInfo.Pattern">
          <source>The value for this property is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">O valor dessa propriedade é <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>