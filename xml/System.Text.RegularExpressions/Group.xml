<Type Name="Group" FullName="System.Text.RegularExpressions.Group">
  <Metadata><Meta Name="ms.openlocfilehash" Value="44899e2b65b8da311b1e483c5e6c4dbd8a7bd6b7" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57934269" /></Metadata><TypeSignature Language="C#" Value="public class Group : System.Text.RegularExpressions.Capture" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit Group extends System.Text.RegularExpressions.Capture" />
  <TypeSignature Language="DocId" Value="T:System.Text.RegularExpressions.Group" />
  <TypeSignature Language="VB.NET" Value="Public Class Group&#xA;Inherits Capture" />
  <TypeSignature Language="C++ CLI" Value="public ref class Group : System::Text::RegularExpressions::Capture" />
  <TypeSignature Language="F#" Value="type Group = class&#xA;    inherit Capture" />
  <AssemblyInfo>
    <AssemblyName>System.Text.RegularExpressions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Text.RegularExpressions.Capture</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Representa os resultados de um único grupo de captura.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um grupo de captura pode capturar zero, um ou mais cadeias de caracteres em uma única correspondência devido aos quantificadores. (Para obter mais informações, consulte [quantificadores](~/docs/standard/base-types/quantifiers-in-regular-expressions.md).) Todas as subcadeias de caracteres correspondidas pelo grupo de captura único estão disponíveis no <xref:System.Text.RegularExpressions.Group.Captures%2A?displayProperty=nameWithType> propriedade. Informações sobre a última subcadeia de caracteres capturada podem ser acessadas diretamente a partir de `Value` e `Index` propriedades. (Isso é, o <xref:System.Text.RegularExpressions.Group> instância é equivalente a do último item da coleção retornada pela <xref:System.Text.RegularExpressions.Group.Captures%2A> propriedade, que reflete a última captura feita pelo grupo de captura.)  
  
 Um exemplo ajuda a esclarecer essa relação entre um <xref:System.Text.RegularExpressions.Group> objeto e o <xref:System.Text.RegularExpressions.CaptureCollection?displayProperty=nameWithType> que é retornado pelo <xref:System.Text.RegularExpressions.Group.Captures%2A> propriedade. O padrão de expressão regular `(\b(\w+?)[,:;]?\s?)+[?.!]` corresponde a frases inteiras. A expressão regular é definida como mostrado na tabela a seguir.  
  
|Padrão|Descrição|  
|-------------|-----------------|  
|`\b`|Começa a correspondência em um limite de palavra.|  
|`(\w+?)`|Corresponder a um ou mais caracteres de palavra, mas o menor número de caracteres possível. Isso é o segundo grupo de captura (interno). (O primeiro grupo de captura inclui o `\b` elemento de linguagem.)|  
|`[,:;]?`|Corresponde a zero ou uma ocorrência de uma vírgula, dois-pontos ou ponto e vírgula.|  
|`\s?`|Corresponde a zero ou uma ocorrência de um caractere de espaço em branco.|  
|`(\b(\w+?)[,:;]?\s?)+`|Corresponder ao padrão consiste em um limite de palavra, um ou mais caracteres de palavra, um símbolo de pontuação e um caractere de espaço em branco uma ou mais vezes. Este é o primeiro grupo de captura.|  
|`[?.!]`|Corresponde a qualquer ocorrência de um período, o ponto de interrogação ou o ponto de exclamação.|  
  
 Nesse padrão de expressão regular, o subpadrão `(\w+?)` foi projetada para corresponder a várias palavras em uma sentença. No entanto, o valor do <xref:System.Text.RegularExpressions.Group> objeto representa somente o último corresponde àquele `(\w+?)` captura, enquanto que o <xref:System.Text.RegularExpressions.Group.Captures%2A> propriedade retorna um <xref:System.Text.RegularExpressions.CaptureCollection> que representa o texto capturado todos os. Como mostra a saída, o <xref:System.Text.RegularExpressions.CaptureCollection> para o segundo grupo de captura contém quatro objetos. A última delas corresponde à <xref:System.Text.RegularExpressions.Group> objeto.  
  
 [!code-csharp[System.Text.RegularExpressions.Group.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.group.class/cs/groupandcaptures1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.Group.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.group.class/vb/groupandcaptures1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Captures">
      <MemberSignature Language="C#" Value="public System.Text.RegularExpressions.CaptureCollection Captures { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.RegularExpressions.CaptureCollection Captures" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.Group.Captures" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Captures As CaptureCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::RegularExpressions::CaptureCollection ^ Captures { System::Text::RegularExpressions::CaptureCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Captures : System.Text.RegularExpressions.CaptureCollection" Usage="System.Text.RegularExpressions.Group.Captures" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.CaptureCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém uma coleção de todas as capturas correspondida pelo grupo de captura, na primeira ordem interna mais à esquerda (ou primeira ordem interna mais à direita se a expressão regular for modificada com a opção <see cref="F:System.Text.RegularExpressions.RegexOptions.RightToLeft" />). A coleção pode ter zero ou mais itens.</summary>
        <value>A coleção de subcadeias de caracteres correspondida pelo grupo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se um quantificador não for aplicado à captura de um grupo, a coleção retornada pela <xref:System.Text.RegularExpressions.Group.Captures%2A> propriedade contém uma única <xref:System.Text.RegularExpressions.Capture> objeto que fornece informações sobre a mesma subcadeia de caracteres como o <xref:System.Text.RegularExpressions.Group> objeto. Isso é ilustrado no exemplo a seguir. Ele define uma expressão regular, `\b(\w+)\b`, que extrai uma única palavra de uma sentença. O <xref:System.Text.RegularExpressions.Group> objeto captura a palavra "This" e o único objeto no <xref:System.Text.RegularExpressions.CaptureCollection> contém informações sobre a mesma captura.  
  
 [!code-csharp[System.Text.RegularExpressions.Group.Captures#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.group.captures/cs/captures1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.Group.Captures#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.group.captures/vb/captures1.vb#1)]  
  
 A utilidade real do <xref:System.Text.RegularExpressions.Group.Captures%2A> propriedade ocorre quando um quantificador é aplicado a um grupo de captura, de modo que o grupo de captura várias subcadeias de caracteres em uma única expressão regular. Nesse caso, o <xref:System.Text.RegularExpressions.Group> objeto contém informações sobre a última subcadeia de caracteres capturada, enquanto o <xref:System.Text.RegularExpressions.Group.Captures%2A> propriedade contém informações sobre todas as subcadeias de caracteres capturadas pelo grupo. No exemplo a seguir, a expressão regular `\b(\w+\s*)+\.` corresponde a uma frase inteira que termina em um período. O grupo `(\w+\s*)+` captura palavras individuais na coleção. Porque o <xref:System.Text.RegularExpressions.Group> coleção contém informações somente sobre a última subcadeia de caracteres capturada, ela captura a última palavra na frase, "de frase". No entanto, cada palavra capturada pelo grupo está disponível na coleção retornada pela <xref:System.Text.RegularExpressions.Group.Captures%2A> propriedade.  
  
 [!code-csharp[System.Text.RegularExpressions.Group.Captures#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.group.captures/cs/captures2.cs#2)]
 [!code-vb[System.Text.RegularExpressions.Group.Captures#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.group.captures/vb/captures2.vb#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/0fc18634-f590-4062-8d5c-f0b71abe405b">Constructos de agrupamento</related>
        <related type="Article" href="https://msdn.microsoft.com/library/36b81212-6511-49ed-a8f1-ff080415312f">Quantificadores</related>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.Group.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Text.RegularExpressions.Group.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retorna o nome do grupo de captura representado pela instância atual.</summary>
        <value>O nome do grupo de captura representado pela instância atual.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Success">
      <MemberSignature Language="C#" Value="public bool Success { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Success" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.Group.Success" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Success As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Success { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Success : bool" Usage="System.Text.RegularExpressions.Group.Success" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um valor que indica se a correspondência foi bem-sucedida.</summary>
        <value><see langword="true" /> se a correspondência for bem-sucedida, caso contrário, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O `Success` propriedade é true se pelo menos uma subcadeia de caracteres foi capturada por esse grupo. É equivalente à expressão booliana (Group.Captures.Count > 0).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Synchronized">
      <MemberSignature Language="C#" Value="public static System.Text.RegularExpressions.Group Synchronized (System.Text.RegularExpressions.Group inner);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Text.RegularExpressions.Group Synchronized(class System.Text.RegularExpressions.Group inner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Group.Synchronized(System.Text.RegularExpressions.Group)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Synchronized (inner As Group) As Group" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Text::RegularExpressions::Group ^ Synchronized(System::Text::RegularExpressions::Group ^ inner);" />
      <MemberSignature Language="F#" Value="static member Synchronized : System.Text.RegularExpressions.Group -&gt; System.Text.RegularExpressions.Group" Usage="System.Text.RegularExpressions.Group.Synchronized inner" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.Group</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inner" Type="System.Text.RegularExpressions.Group" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="inner">O objeto <see cref="T:System.Text.RegularExpressions.Group" /> de entrada.</param>
        <summary>Retorna um <see langword="Group" /> objeto equivalente àquele fornecido e que é seguro compartilhar entre vários threads.</summary>
        <returns>Um objeto <see langword="Group" /> de expressão regular.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="inner" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>