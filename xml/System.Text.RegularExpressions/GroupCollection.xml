<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="GroupCollection.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac588745e6fd7ac5403f750a8bd7fe3115e386d3db4.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">88745e6fd7ac5403f750a8bd7fe3115e386d3db4</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Text.RegularExpressions.GroupCollection">
          <source>Returns the set of captured groups in a single match.</source>
          <target state="translated">Retorna o conjunto de grupos capturados em um única correspondência.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.GroupCollection">
          <source>The <ph id="ph1">&lt;xref:System.Text.RegularExpressions.GroupCollection&gt;</ph> class is a zero-based collection class that consists of one or more <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Group&gt;</ph> objects that provide information about captured groups in a regular expression match.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Text.RegularExpressions.GroupCollection&gt;</ph> classe é uma classe de coleção com base zero que consiste em um ou mais <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Group&gt;</ph> capturadas de objetos que fornecem informações sobre grupos em uma correspondência da expressão regular.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.GroupCollection">
          <source>The collection is immutable (read-only) and has no public constructor.</source>
          <target state="translated">A coleção é imutável (somente leitura) e não tem construtor público.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.GroupCollection">
          <source>A <ph id="ph1">&lt;xref:System.Text.RegularExpressions.GroupCollection&gt;</ph> object is returned by the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Match.Groups%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Um <ph id="ph1">&lt;xref:System.Text.RegularExpressions.GroupCollection&gt;</ph> retornado pelo objeto de <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Match.Groups%2A?displayProperty=nameWithType&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.GroupCollection">
          <source>The collection contains one or more <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Group?displayProperty=nameWithType&gt;</ph> objects.</source>
          <target state="translated">A coleção contém um ou mais <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Group?displayProperty=nameWithType&gt;</ph> objetos.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.GroupCollection">
          <source>If the match is successful, the first element in the collection contains the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Group&gt;</ph> object that corresponds to the entire match.</source>
          <target state="translated">Se a correspondência for bem-sucedida, o primeiro elemento na coleção contém o <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Group&gt;</ph> objeto que corresponde à correspondência inteira.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.GroupCollection">
          <source>Each subsequent element represents a captured group, if the regular expression includes capturing groups.</source>
          <target state="translated">Cada elemento subsequente representa um grupo capturado, se a expressão regular inclui grupos de captura.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.GroupCollection">
          <source>Matches from numbered (unnamed) capturing groups appear in numeric order before matches from named capturing groups.</source>
          <target state="translated">Correspondências de grupos de captura (sem nome) numerados são exibidos em ordem numérica antes de correspondências de grupos de captura nomeados.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.GroupCollection">
          <source>If the match is unsuccessful, the collection contains a single <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Group?displayProperty=nameWithType&gt;</ph> object whose <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Group.Success%2A&gt;</ph> property is <ph id="ph3">`false`</ph> and whose <ph id="ph4">&lt;xref:System.Text.RegularExpressions.Capture.Value%2A&gt;</ph> property equals <ph id="ph5">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Se a correspondência for bem-sucedida, a coleção contém um único <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Group?displayProperty=nameWithType&gt;</ph> do objeto cuja <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Group.Success%2A&gt;</ph> é de propriedade <ph id="ph3">`false`</ph> e cuja <ph id="ph4">&lt;xref:System.Text.RegularExpressions.Capture.Value%2A&gt;</ph> propriedade é igual a <ph id="ph5">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.GroupCollection">
          <source>For more information, see the "Grouping Constructs and Regular Expression Objects" section in the <bpt id="p1">[</bpt>Grouping Constructs<ept id="p1">](~/docs/standard/base-types/grouping-constructs-in-regular-expressions.md)</ept> article.</source>
          <target state="translated">Para obter mais informações, consulte a seção "Agrupamento constrói e Regular Expression objetos" a <bpt id="p1">[</bpt>construções de agrupamento<ept id="p1">](~/docs/standard/base-types/grouping-constructs-in-regular-expressions.md)</ept> artigo.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.GroupCollection">
          <source>To iterate through the members of the collection, you should use the collection iteration construct provided by your language (such as <ph id="ph1">`foreach`</ph> in C# and <ph id="ph2">`For Each`</ph>…<ph id="ph3">`Next`</ph></source>
          <target state="translated">Para percorrer os membros da coleção, você deve usar a construção de iteração da coleção fornecida pelo seu idioma (como <ph id="ph1">`foreach`</ph> em c# e <ph id="ph2">`For Each`</ph>...<ph id="ph3">`Next`</ph></target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.GroupCollection">
          <source>in Visual Basic) instead of retrieving the enumerator that is returned by the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.GroupCollection.GetEnumerator%2A&gt;</ph> method.</source>
          <target state="translated">no Visual Basic) em vez de recuperar o enumerador retornado pelo <ph id="ph1">&lt;xref:System.Text.RegularExpressions.GroupCollection.GetEnumerator%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.GroupCollection">
          <source>In addition, you can access individual numbered captured groups from the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.GroupCollection.Item%28System.Int32%29&gt;</ph> property (the indexer in C#), and you can access individual named captured groups from the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.GroupCollection.Item%28System.String%29&gt;</ph> property.</source>
          <target state="translated">Além disso, você pode acessar grupos capturados numerados individuais do <ph id="ph1">&lt;xref:System.Text.RegularExpressions.GroupCollection.Item%28System.Int32%29&gt;</ph> propriedade (indexador em c#) e você pode acessar grupos capturados nomeados individuais do <ph id="ph2">&lt;xref:System.Text.RegularExpressions.GroupCollection.Item%28System.String%29&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.GroupCollection">
          <source>Note that you can retrieve an array that contains the numbers and names of all capturing groups by calling the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex.GetGroupNumbers%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Regex.GetGroupNames%2A?displayProperty=nameWithType&gt;</ph> methods, respectively.</source>
          <target state="translated">Observe que você pode recuperar uma matriz que contém os números e os nomes dos grupos de captura todos os chamando o <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex.GetGroupNumbers%2A?displayProperty=nameWithType&gt;</ph> e <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Regex.GetGroupNames%2A?displayProperty=nameWithType&gt;</ph> métodos, respectivamente.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.GroupCollection">
          <source>Both are instance methods and require that you instantiate a <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex&gt;</ph> object that represents the regular expression to be matched.</source>
          <target state="translated">Ambos são métodos de instância e exigem que você instancia um <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex&gt;</ph> objeto que representa a expressão regular a ser correspondido.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.GroupCollection">
          <source>The following example uses a regular expression with capturing groups to extract information about trademarks and registered trademarks used in text.</source>
          <target state="translated">O exemplo a seguir usa uma expressão regular com grupos de captura para extrair informações sobre marcas comerciais e registradas usadas no texto.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.GroupCollection">
          <source>The regular expression pattern is <ph id="ph1">`\b(\w+?)([\u00AE\u2122])`</ph>, which is interpreted as shown in the following table.</source>
          <target state="translated">O padrão de expressão regular é <ph id="ph1">`\b(\w+?)([\u00AE\u2122])`</ph>, que é interpretado como mostrado na tabela a seguir.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.GroupCollection">
          <source>Pattern</source>
          <target state="translated">Padrão</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.GroupCollection">
          <source>Description</source>
          <target state="translated">Descrição</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.GroupCollection">
          <source>Look for a word boundary.</source>
          <target state="translated">Procure um limite de palavra.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.GroupCollection">
          <source>Look for one or more word characters.</source>
          <target state="translated">Procure um ou mais caracteres de texto.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.GroupCollection">
          <source>Together, these form the trademarked name.</source>
          <target state="translated">Juntos, eles formam o nome de marca registrado.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.GroupCollection">
          <source>(Note that this regular expression assumes that a trademark consists of a single word.) This is the first capturing group.</source>
          <target state="translated">(Observe que essa expressão regular supõe que marca consiste em uma única palavra). Este é o primeiro grupo de captura.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.GroupCollection">
          <source>Look for either the ® or the ™ character.</source>
          <target state="translated">Procure por uma o® ou™ caractere.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.GroupCollection">
          <source>This is the second capturing group.</source>
          <target state="translated">Este é o segundo grupo de captura.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.GroupCollection">
          <source>For each match, the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.GroupCollection&gt;</ph> contains three <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Group&gt;</ph> objects.</source>
          <target state="translated">Para cada correspondência, o <ph id="ph1">&lt;xref:System.Text.RegularExpressions.GroupCollection&gt;</ph> contém três <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Group&gt;</ph> objetos.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.GroupCollection">
          <source>The first object contains the string that matches the entire regular expression.</source>
          <target state="translated">O primeiro objeto contém a cadeia de caracteres que corresponde à expressão regular inteira.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.GroupCollection">
          <source>The second object, which represents the first captured group, contains the product name.</source>
          <target state="translated">O segundo objeto, que representa o primeiro grupo capturado, contém o nome do produto.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.GroupCollection">
          <source>The third object, which represents the second captured group, contains the trademark or registered trademark symbol.</source>
          <target state="translated">O terceiro objeto, que representa o segundo grupo capturado, contém a marca ou registrado o símbolo de marca.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.GroupCollection.CopyTo(System.Array,System.Int32)">
          <source>The array the collection is to be copied into.</source>
          <target state="translated">A matriz para a qual a coleção deverá ser copiada.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.GroupCollection.CopyTo(System.Array,System.Int32)">
          <source>The position in the destination array where the copying is to begin.</source>
          <target state="translated">A posição na matriz de destino em que a cópia deverá começar.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.GroupCollection.CopyTo(System.Array,System.Int32)">
          <source>Copies all the elements of the collection to the given array beginning at the given index.</source>
          <target state="translated">Copia todos os elementos da coleção para a matriz especificada, começando pelo índice especificado.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.GroupCollection.CopyTo(System.Array,System.Int32)">
          <source>Because the entire collection is copied into the array starting at the given index, the destination array must be at least as large as the collection.</source>
          <target state="translated">Como toda a coleção é copiada para a matriz começando no índice especificado, a matriz de destino deve ser pelo menos tão grande quanto a coleção.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.GroupCollection.CopyTo(System.Array,System.Int32)">
          <source>This member is not present in the <ph id="ph1">[!INCLUDE[net_portable](~/includes/net-portable-md.md)]</ph>.</source>
          <target state="translated">Este membro não está presente no <ph id="ph1">[!INCLUDE[net_portable](~/includes/net-portable-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.GroupCollection.CopyTo(System.Array,System.Int32)">
          <source>If you are developing applications that target the <ph id="ph1">[!INCLUDE[net_portable](~/includes/net-portable-md.md)]</ph>, use the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.GroupCollection.System%23Collections%23ICollection%23CopyTo%2A?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">Se você estiver desenvolvendo aplicativos direcionados a <ph id="ph1">[!INCLUDE[net_portable](~/includes/net-portable-md.md)]</ph>, use o <ph id="ph2">&lt;xref:System.Text.RegularExpressions.GroupCollection.System%23Collections%23ICollection%23CopyTo%2A?displayProperty=nameWithType&gt;</ph> método em vez disso.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.GroupCollection.CopyTo(System.Array,System.Int32)">
          <source>The following example extracts each word from a sentence and captures it in a capturing group, The <ph id="ph1">&lt;xref:System.Text.RegularExpressions.GroupCollection.CopyTo%2A&gt;</ph> method is then used to copy the elements in each match's <ph id="ph2">&lt;xref:System.Text.RegularExpressions.GroupCollection&gt;</ph> object to an array that contains the capturing groups from all matches.</source>
          <target state="translated">O exemplo a seguir extrai cada palavra de uma sentença e captura-o em um grupo de captura, o <ph id="ph1">&lt;xref:System.Text.RegularExpressions.GroupCollection.CopyTo%2A&gt;</ph> método é usado para copiar os elementos em cada correspondência <ph id="ph2">&lt;xref:System.Text.RegularExpressions.GroupCollection&gt;</ph> grupos de objeto para uma matriz que contém a captura de todas as correspondências.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.GroupCollection.CopyTo(System.Array,System.Int32)">
          <source>The individual captured words are then displayed to the console.</source>
          <target state="translated">As palavras capturadas individuais são exibidas no console.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.GroupCollection.CopyTo(System.Array,System.Int32)">
          <source>The regular expression is defined as follows:</source>
          <target state="translated">A expressão regular é definida da seguinte maneira:</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.GroupCollection.CopyTo(System.Array,System.Int32)">
          <source>Pattern</source>
          <target state="translated">Padrão</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.GroupCollection.CopyTo(System.Array,System.Int32)">
          <source>Description</source>
          <target state="translated">Descrição</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.GroupCollection.CopyTo(System.Array,System.Int32)">
          <source>Match a word boundary.</source>
          <target state="translated">Corresponder a um limite de palavra.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.GroupCollection.CopyTo(System.Array,System.Int32)">
          <source>Match one or more non-white space characters.</source>
          <target state="translated">Corresponde a um ou mais caracteres não seja espaço em branco.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.GroupCollection.CopyTo(System.Array,System.Int32)">
          <source>Assign them to the first capturing group.</source>
          <target state="translated">Atribuí-los para o primeiro grupo de capturando.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.GroupCollection.CopyTo(System.Array,System.Int32)">
          <source>Match a word boundary.</source>
          <target state="translated">Corresponder a um limite de palavra.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.GroupCollection.CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.GroupCollection.CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="arrayIndex" /&gt;</ph> is outside the bounds of <ph id="ph2">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="arrayIndex" /&gt;</ph> está fora dos limites de <ph id="ph2">&lt;paramref name="array" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.GroupCollection.CopyTo(System.Array,System.Int32)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.GroupCollection.CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="arrayIndex" /&gt;</ph> plus <ph id="ph2">&lt;see cref="P:System.Text.RegularExpressions.GroupCollection.Count" /&gt;</ph> is outside the bounds of <ph id="ph3">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="arrayIndex" /&gt;</ph> mais <ph id="ph2">&lt;see cref="P:System.Text.RegularExpressions.GroupCollection.Count" /&gt;</ph> está fora dos limites de <ph id="ph3">&lt;paramref name="array" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="P:System.Text.RegularExpressions.GroupCollection.Count">
          <source>Returns the number of groups in the collection.</source>
          <target state="translated">Retorna o número de grupos na coleção.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Count">
          <source>The number of groups in the collection.</source>
          <target state="translated">O número de grupos na coleção.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Count">
          <source>The <ph id="ph1">&lt;xref:System.Text.RegularExpressions.GroupCollection&gt;</ph> object always has at least one member.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Text.RegularExpressions.GroupCollection&gt;</ph> objeto sempre tem pelo menos um membro.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Count">
          <source>If a match is unsuccessful, the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Match.Groups%2A?displayProperty=nameWithType&gt;</ph> property returns a <ph id="ph2">&lt;xref:System.Text.RegularExpressions.GroupCollection&gt;</ph> object that contains a single member.</source>
          <target state="translated">Se uma correspondência for bem-sucedida, o <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Match.Groups%2A?displayProperty=nameWithType&gt;</ph> propriedade retorna um <ph id="ph2">&lt;xref:System.Text.RegularExpressions.GroupCollection&gt;</ph> objeto que contém um único membro.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.GroupCollection.GetEnumerator">
          <source>Provides an enumerator that iterates through the collection.</source>
          <target state="translated">Fornece um enumerador iterado por meio da coleção.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.GroupCollection.GetEnumerator">
          <source>An enumerator that contains all <ph id="ph1">&lt;see cref="T:System.Text.RegularExpressions.Group" /&gt;</ph> objects in the <ph id="ph2">&lt;see cref="T:System.Text.RegularExpressions.GroupCollection" /&gt;</ph>.</source>
          <target state="translated">Um enumerador que contém todos os objetos <ph id="ph1">&lt;see cref="T:System.Text.RegularExpressions.Group" /&gt;</ph> na <ph id="ph2">&lt;see cref="T:System.Text.RegularExpressions.GroupCollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.GroupCollection.GetEnumerator">
          <source>Instead of calling the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.GroupCollection.GetEnumerator%2A&gt;</ph> method to retrieve an enumerator that lets you iterate through the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Group&gt;</ph> objects in the collection, you should use the group iteration construct (such as <ph id="ph3">`foreach`</ph> in C# and <ph id="ph4">`For Each`</ph>…<ph id="ph5">`Next`</ph></source>
          <target state="translated">Em vez de chamar o <ph id="ph1">&lt;xref:System.Text.RegularExpressions.GroupCollection.GetEnumerator%2A&gt;</ph> método para recuperar um enumerador que permite que você percorrer o <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Group&gt;</ph> objetos na coleção, você deve usar a construção de iteração de grupo (como <ph id="ph3">`foreach`</ph> em c# e <ph id="ph4">`For Each`</ph>...<ph id="ph5">`Next`</ph></target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.GroupCollection.GetEnumerator">
          <source>in Visual Basic) that is provided by your programming language.</source>
          <target state="translated">no Visual Basic), que é fornecido pela linguagem de programação.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="P:System.Text.RegularExpressions.GroupCollection.IsReadOnly">
          <source>Gets a value that indicates whether the collection is read-only.</source>
          <target state="translated">Obtém um valor que indica se a coleção é somente leitura.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.IsReadOnly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> in all cases.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> em todos os casos.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="P:System.Text.RegularExpressions.GroupCollection.IsSynchronized">
          <source>Gets a value that indicates whether access to the <ph id="ph1">&lt;see cref="T:System.Text.RegularExpressions.GroupCollection" /&gt;</ph> is synchronized (thread-safe).</source>
          <target state="translated">Obtém um valor que indica se o acesso a <ph id="ph1">&lt;see cref="T:System.Text.RegularExpressions.GroupCollection" /&gt;</ph> é sincronizado (thread-safe).</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.IsSynchronized">
          <source><ph id="ph1">&lt;see langword="false" /&gt;</ph> in all cases.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="false" /&gt;</ph> em todos os casos.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.IsSynchronized">
          <source>This member is not present in the <ph id="ph1">[!INCLUDE[net_portable](~/includes/net-portable-md.md)]</ph>.</source>
          <target state="translated">Este membro não está presente no <ph id="ph1">[!INCLUDE[net_portable](~/includes/net-portable-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.IsSynchronized">
          <source>If you are developing applications that target the <ph id="ph1">[!INCLUDE[net_portable](~/includes/net-portable-md.md)]</ph>, use the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.CaptureCollection.System%23Collections%23ICollection%23IsSynchronized%2A?displayProperty=nameWithType&gt;</ph> property instead.</source>
          <target state="translated">Se você estiver desenvolvendo aplicativos direcionados a <ph id="ph1">[!INCLUDE[net_portable](~/includes/net-portable-md.md)]</ph>, use o <ph id="ph2">&lt;xref:System.Text.RegularExpressions.CaptureCollection.System%23Collections%23ICollection%23IsSynchronized%2A?displayProperty=nameWithType&gt;</ph> propriedade em vez disso.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="T:System.Text.RegularExpressions.GroupCollection">
          <source>Enables access to a single member of the collection by integer or string index.</source>
          <target state="translated">Permite acesso a um único membro da coleção por índice de inteiros ou de cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.Int32)">
          <source>The zero-based index of the collection member to be retrieved.</source>
          <target state="translated">O índice baseado em zero do membro da coleção a ser recuperado.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.Int32)">
          <source>Enables access to a member of the collection by integer index.</source>
          <target state="translated">Permite acesso a um membro da coleção pelo índice de inteiros.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.Int32)">
          <source>The member of the collection specified by <ph id="ph1">&lt;paramref name="groupnum" /&gt;</ph>.</source>
          <target state="translated">O membro da coleção especificado pelo <ph id="ph1">&lt;paramref name="groupnum" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.RegularExpressions.GroupCollection.Item%28System.Int32%29&gt;</ph> property is the index (in C#) or the default property (in Visual Basic) of the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.GroupCollection&gt;</ph> class.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Text.RegularExpressions.GroupCollection.Item%28System.Int32%29&gt;</ph> propriedade é o índice (em c#) ou a propriedade padrão (no Visual Basic) da <ph id="ph2">&lt;xref:System.Text.RegularExpressions.GroupCollection&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.Int32)">
          <source>It allows you to enumerate the members of the collection by using a <ph id="ph1">`foreach`</ph> statement in C# or a <ph id="ph2">`For Each`</ph> statement in Visual Basic.</source>
          <target state="translated">Ele permite que você enumerar os membros da coleção usando um <ph id="ph1">`foreach`</ph> instrução em c# ou um <ph id="ph2">`For Each`</ph> instrução no Visual Basic.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.Int32)">
          <source>You can also use this property to retrieve individual captured groups by their index number.</source>
          <target state="translated">Você também pode usar essa propriedade para recuperar grupos capturados individuais por seu número de índice.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.Int32)">
          <source>You can retrieve an array that contains the numbers of all capturing groups in a regular expression by calling the instance <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex.GetGroupNumbers%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Você pode recuperar uma matriz que contém os números de todos os grupos de captura em uma expressão regular chamando-se a instância <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex.GetGroupNumbers%2A?displayProperty=nameWithType&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.Int32)">
          <source>You can also map named capturing groups to their numbers by calling the instance <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex.GroupNumberFromName%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Você também pode mapear os grupos de captura nomeados para seus números chamando-se a instância <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex.GroupNumberFromName%2A?displayProperty=nameWithType&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.Int32)">
          <source>You can determine the number of items in the collection by retrieving the value of the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.GroupCollection.Count%2A&gt;</ph> property.</source>
          <target state="translated">Você pode determinar o número de itens na coleção por recuperar o valor da <ph id="ph1">&lt;xref:System.Text.RegularExpressions.GroupCollection.Count%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.Int32)">
          <source>Valid values for the <ph id="ph1">`groupnum`</ph> parameter range from 0 to one less than the number of items in the collection.</source>
          <target state="translated">Os valores válidos para o <ph id="ph1">`groupnum`</ph> intervalo de parâmetro de 0 a menos que o número de itens na coleção.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.RegularExpressions.GroupCollection&gt;</ph> object returned by the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Match.Groups%2A?displayProperty=nameWithType&gt;</ph> property always has at least one member.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Text.RegularExpressions.GroupCollection&gt;</ph> objeto retornado pelo <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Match.Groups%2A?displayProperty=nameWithType&gt;</ph> propriedade sempre tem pelo menos um membro.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.Int32)">
          <source>If the regular expression engine cannot find any matches in a particular input string, the single <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Group&gt;</ph> object in the collection has its <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Group.Success%2A?displayProperty=nameWithType&gt;</ph> property set to <ph id="ph3">`false`</ph> and its <ph id="ph4">`Group.Value`</ph> property set to <ph id="ph5">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Se o mecanismo de expressão regular não pode localizar nenhuma correspondência em uma cadeia de entrada específica, a única <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Group&gt;</ph> objeto na coleção tem seu <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Group.Success%2A?displayProperty=nameWithType&gt;</ph> propriedade definida como <ph id="ph3">`false`</ph> e sua <ph id="ph4">`Group.Value`</ph> propriedade definida como <ph id="ph5">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.Int32)">
          <source>If <ph id="ph1">`groupnum`</ph> is not the index of a member of the collection, or if <ph id="ph2">`groupnum`</ph> is the index of a capturing group that has not been matched in the input string, the method returns a <ph id="ph3">&lt;xref:System.Text.RegularExpressions.Group&gt;</ph> object whose <ph id="ph4">&lt;xref:System.Text.RegularExpressions.Group.Success%2A?displayProperty=nameWithType&gt;</ph> property is <ph id="ph5">`false`</ph> and whose <ph id="ph6">`Group.Value`</ph> property is <ph id="ph7">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Se <ph id="ph1">`groupnum`</ph> não é o índice de um membro da coleção, ou se <ph id="ph2">`groupnum`</ph> é o índice de um grupo de captura não foi correspondente na cadeia de entrada, o método retorna um <ph id="ph3">&lt;xref:System.Text.RegularExpressions.Group&gt;</ph> do objeto cuja <ph id="ph4">&lt;xref:System.Text.RegularExpressions.Group.Success%2A?displayProperty=nameWithType&gt;</ph> é de propriedade <ph id="ph5">`false`</ph> e cuja <ph id="ph6">`Group.Value`</ph> é de propriedade <ph id="ph7">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.Int32)">
          <source>The following example defines a regular expression that consists of two numbered groups.</source>
          <target state="translated">O exemplo a seguir define uma expressão regular que consiste em dois grupos numerados.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.Int32)">
          <source>The first group captures one or more consecutive digits.</source>
          <target state="translated">O primeiro grupo de captura uma ou mais dígitos consecutivos.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.Int32)">
          <source>The second group matches a single character.</source>
          <target state="translated">O segundo grupo corresponde a um único caractere.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.Int32)">
          <source>Because the regular expression engine looks for zero or one occurrence of the first group, it does not always find a match even if the regular expression match is successful.</source>
          <target state="translated">Como o mecanismo de expressão regular parece para zero ou uma ocorrência do primeiro grupo, ele não sempre encontrar uma correspondência mesmo se a correspondência da expressão regular é bem-sucedida.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.Int32)">
          <source>The example then illustrates the result when the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.GroupCollection.Item%28System.Int32%29&gt;</ph> property is used to retrieve an unmatched group, a matched group, and a group that is not defined in the regular expression.</source>
          <target state="translated">O exemplo ilustra, em seguida, o resultado quando o <ph id="ph1">&lt;xref:System.Text.RegularExpressions.GroupCollection.Item%28System.Int32%29&gt;</ph> propriedade é usada para recuperar um grupo sem correspondência, um grupo correspondente e um grupo que não está definido na expressão regular.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.Int32)">
          <source>The example defines a regular expression pattern <ph id="ph1">`(\d+)*(\w)\2`</ph>, which is interpreted as shown in the following table.</source>
          <target state="translated">O exemplo define um padrão de expressão regular <ph id="ph1">`(\d+)*(\w)\2`</ph>, que é interpretado como mostrado na tabela a seguir.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.Int32)">
          <source>Pattern</source>
          <target state="translated">Padrão</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.Int32)">
          <source>Description</source>
          <target state="translated">Descrição</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.Int32)">
          <source>Match one or more occurrence of a decimal digit.</source>
          <target state="translated">Corresponde a uma ou mais ocorrências de um dígito decimal.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.Int32)">
          <source>This is the first capturing group.</source>
          <target state="translated">Este é o primeiro grupo de captura.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.Int32)">
          <source>Match this pattern either zero or one time.</source>
          <target state="translated">Corresponde a esse padrão de zero ou um tempo.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.Int32)">
          <source>This is the second capturing group.</source>
          <target state="translated">Este é o segundo grupo de captura.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.Int32)">
          <source>Match the string captured by the second capturing group.</source>
          <target state="translated">Corresponde a cadeia de caracteres capturada por segundo grupo de capturando.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.String)">
          <source>The name of a capturing group.</source>
          <target state="translated">O nome de um grupo de captura.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.String)">
          <source>Enables access to a member of the collection by string index.</source>
          <target state="translated">Habilita o acesso a um membro da coleção pelo índice de cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.String)">
          <source>The member of the collection specified by <ph id="ph1">&lt;paramref name="groupname" /&gt;</ph>.</source>
          <target state="translated">O membro da coleção especificado pelo <ph id="ph1">&lt;paramref name="groupname" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.String)">
          <source><ph id="ph1">`groupName`</ph> can be either the name of a capturing group that is defined by the <ph id="ph2">`(?&lt;`</ph><bpt id="p1">*</bpt>name<ept id="p1">*</ept><ph id="ph3">`&gt;)`</ph> element in a regular expression, or the string representation of the number of a capturing group that is defined by a grouping construct.</source>
          <target state="translated"><ph id="ph1">`groupName`</ph> pode ser o nome de um grupo de captura é definido pelo <ph id="ph2">`(?&lt;`</ph> <bpt id="p1">*</bpt>nome<ept id="p1">*</ept> <ph id="ph3">`&gt;)`</ph> elemento em uma expressão regular ou a representação de cadeia de caracteres do número de um grupo de captura é definido por um agrupamento Construa.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.String)">
          <source>For more information about groups in regular expressions, see <bpt id="p1">[</bpt>Grouping Constructs<ept id="p1">](~/docs/standard/base-types/grouping-constructs-in-regular-expressions.md)</ept>.</source>
          <target state="translated">Para obter mais informações sobre grupos em expressões regulares, consulte <bpt id="p1">[</bpt>construções de agrupamento<ept id="p1">](~/docs/standard/base-types/grouping-constructs-in-regular-expressions.md)</ept>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.String)">
          <source>You can retrieve the names of all the captured groups in a <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex&gt;</ph> object by calling the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Regex.GetGroupNames%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Você pode recuperar os nomes de todos os grupos capturados em um <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex&gt;</ph> objeto chamando o <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Regex.GetGroupNames%2A?displayProperty=nameWithType&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.String)">
          <source>You can also map the numbers of capturing groups in a regular expression to their names by calling the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex.GroupNameFromNumber%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Você também pode mapear os números de grupos em uma expressão regular para seus nomes de captura ao chamar o <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex.GroupNameFromNumber%2A?displayProperty=nameWithType&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.String)">
          <source>Individual names from the array can then be passed to the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.GroupCollection.Item%28System.String%29&gt;</ph> property to retrieve the captured string.</source>
          <target state="translated">Os nomes individuais da matriz podem ser passados para o <ph id="ph1">&lt;xref:System.Text.RegularExpressions.GroupCollection.Item%28System.String%29&gt;</ph> propriedade para recuperar a cadeia de caracteres capturada.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.String)">
          <source>If <ph id="ph1">`groupname`</ph> is not the name of a capturing group in the collection, or if <ph id="ph2">`groupname`</ph> is the name of a capturing group that has not been matched in the input string, the method returns a <ph id="ph3">&lt;xref:System.Text.RegularExpressions.Group&gt;</ph> object whose <ph id="ph4">&lt;xref:System.Text.RegularExpressions.Group.Success%2A?displayProperty=nameWithType&gt;</ph> property is <ph id="ph5">`false`</ph> and whose <ph id="ph6">`Group.Value`</ph> property is <ph id="ph7">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Se <ph id="ph1">`groupname`</ph> não é o nome de um grupo de captura na coleção, ou se <ph id="ph2">`groupname`</ph> é o nome de um grupo de captura não foi correspondente na cadeia de entrada, o método retorna um <ph id="ph3">&lt;xref:System.Text.RegularExpressions.Group&gt;</ph> do objeto cuja <ph id="ph4">&lt;xref:System.Text.RegularExpressions.Group.Success%2A?displayProperty=nameWithType&gt;</ph> é de propriedade <ph id="ph5">`false`</ph> e cuja <ph id="ph6">`Group.Value`</ph> é de propriedade <ph id="ph7">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.String)">
          <source>The following example defines a regular expression that consists of two named groups.</source>
          <target state="translated">O exemplo a seguir define uma expressão regular que consiste em dois grupos nomeados.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.String)">
          <source>The first group, <ph id="ph1">`numbers`</ph>, captures one or more consecutive digits.</source>
          <target state="translated">O primeiro grupo, <ph id="ph1">`numbers`</ph>, captura uma ou mais dígitos consecutivos.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.String)">
          <source>The second group, <ph id="ph1">`letter`</ph>, matches a single character.</source>
          <target state="translated">O segundo grupo, <ph id="ph1">`letter`</ph>, corresponde a um único caractere.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.String)">
          <source>Because the regular expression engine looks for zero or one occurrence of the pattern defined by the <ph id="ph1">`numbers`</ph> group, the <ph id="ph2">`numbers`</ph> group is not always present even if a match is successful.</source>
          <target state="translated">Porque o mecanismo de expressão regular procura zero ou uma ocorrência do padrão definido pelo <ph id="ph1">`numbers`</ph> grupo, o <ph id="ph2">`numbers`</ph> grupo não está sempre presente mesmo se uma correspondência for bem-sucedida.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.String)">
          <source>The example then illustrates the result when the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.GroupCollection.Item%28System.String%29&gt;</ph> property is used to retrieve an unmatched group, a matched group, and a group that is not defined in the regular expression.</source>
          <target state="translated">O exemplo ilustra, em seguida, o resultado quando o <ph id="ph1">&lt;xref:System.Text.RegularExpressions.GroupCollection.Item%28System.String%29&gt;</ph> propriedade é usada para recuperar um grupo sem correspondência, um grupo correspondente e um grupo que não está definido na expressão regular.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.String)">
          <source>The example defines a regular expression pattern <ph id="ph1">`(?&lt;numbers&gt;\d+)*(?&lt;letter&gt;\w)\k&lt;letter&gt;`</ph>, which is interpreted as shown in the following table.</source>
          <target state="translated">O exemplo define um padrão de expressão regular <ph id="ph1">`(?&lt;numbers&gt;\d+)*(?&lt;letter&gt;\w)\k&lt;letter&gt;`</ph>, que é interpretado como mostrado na tabela a seguir.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.String)">
          <source>Pattern</source>
          <target state="translated">Padrão</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.String)">
          <source>Description</source>
          <target state="translated">Descrição</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.String)">
          <source>Match one or more occurrence of a decimal digit.</source>
          <target state="translated">Corresponde a uma ou mais ocorrências de um dígito decimal.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.String)">
          <source>Name this the <ph id="ph1">`numbers`</ph> capturing group.</source>
          <target state="translated">O nome de <ph id="ph1">`numbers`</ph> grupo de captura.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.String)">
          <source>Match this pattern either zero or one time.</source>
          <target state="translated">Corresponde a esse padrão de zero ou um tempo.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.String)">
          <source>Match a single word character.</source>
          <target state="translated">Corresponde um caractere de palavra única.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.String)">
          <source>Name this the <ph id="ph1">`letter`</ph> capturing group.</source>
          <target state="translated">O nome de <ph id="ph1">`letter`</ph> grupo de captura.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.String)">
          <source>Match the string captured by the <ph id="ph1">`letter`</ph> capturing group.</source>
          <target state="translated">Corresponde a cadeia de caracteres capturada pelo <ph id="ph1">`letter`</ph> grupo de captura.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="P:System.Text.RegularExpressions.GroupCollection.SyncRoot">
          <source>Gets an object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Text.RegularExpressions.GroupCollection" /&gt;</ph>.</source>
          <target state="translated">Obtém um objeto que pode ser usado para sincronizar o acesso ao <ph id="ph1">&lt;see cref="T:System.Text.RegularExpressions.GroupCollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.SyncRoot">
          <source>A copy of the <ph id="ph1">&lt;see cref="T:System.Text.RegularExpressions.Match" /&gt;</ph> object to synchronize.</source>
          <target state="translated">Uma cópia do <ph id="ph1">&lt;see cref="T:System.Text.RegularExpressions.Match" /&gt;</ph> objeto para sincronizar.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.SyncRoot">
          <source>This member is not present in the <ph id="ph1">[!INCLUDE[net_portable](~/includes/net-portable-md.md)]</ph>.</source>
          <target state="translated">Este membro não está presente no <ph id="ph1">[!INCLUDE[net_portable](~/includes/net-portable-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.SyncRoot">
          <source>If you are developing applications that target the <ph id="ph1">[!INCLUDE[net_portable](~/includes/net-portable-md.md)]</ph>, use the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.GroupCollection.System%23Collections%23ICollection%23SyncRoot%2A?displayProperty=nameWithType&gt;</ph> property instead.</source>
          <target state="translated">Se você estiver desenvolvendo aplicativos direcionados a <ph id="ph1">[!INCLUDE[net_portable](~/includes/net-portable-md.md)]</ph>, use o <ph id="ph2">&lt;xref:System.Text.RegularExpressions.GroupCollection.System%23Collections%23ICollection%23SyncRoot%2A?displayProperty=nameWithType&gt;</ph> propriedade em vez disso.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>