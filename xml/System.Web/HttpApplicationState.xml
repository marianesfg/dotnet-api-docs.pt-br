<Type Name="HttpApplicationState" FullName="System.Web.HttpApplicationState">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="16ebcba2ffe7d8364fbb5d70e8da34d29a40caf5" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37529082" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class HttpApplicationState : System.Collections.Specialized.NameObjectCollectionBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpApplicationState extends System.Collections.Specialized.NameObjectCollectionBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.HttpApplicationState" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpApplicationState&#xA;Inherits NameObjectCollectionBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpApplicationState sealed : System::Collections::Specialized::NameObjectCollectionBase" />
  <TypeSignature Language="F#" Value="type HttpApplicationState = class&#xA;    inherit NameObjectCollectionBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Collections.Specialized.NameObjectCollectionBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="0385a-101">Permite o compartilhamento de informações globais em várias sessões e solicitações em um aplicativo ASP.NET.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0385a-101">Enables sharing of global information across multiple sessions and requests within an ASP.NET application.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0385a-102">Um aplicativo ASP.NET é a soma de todos os arquivos, páginas, manipuladores, módulos e código dentro do escopo de um diretório virtual e seus subdiretórios em um único servidor Web.</span><span class="sxs-lookup"><span data-stu-id="0385a-102">An ASP.NET application is the sum of all files, pages, handlers, modules, and code within the scope of a virtual directory and its subdirectories on a single Web server.</span></span>  
  
 <span data-ttu-id="0385a-103">Uma única instância de um <xref:System.Web.HttpApplicationState> classe é criada na primeira vez que um cliente solicita qualquer recurso de URL de dentro de um diretório virtual do ASP.NET aplicativo específico.</span><span class="sxs-lookup"><span data-stu-id="0385a-103">A single instance of an <xref:System.Web.HttpApplicationState> class is created the first time a client requests any URL resource from within a particular ASP.NET application virtual directory.</span></span> <span data-ttu-id="0385a-104">Uma única instância separada é criada para cada aplicativo ASP.NET em um servidor Web.</span><span class="sxs-lookup"><span data-stu-id="0385a-104">A separate single instance is created for each ASP.NET application on a Web server.</span></span> <span data-ttu-id="0385a-105">Uma referência para cada instância, em seguida, é exposta por meio de intrínseca <xref:System.Web.HttpContext.Application%2A> objeto.</span><span class="sxs-lookup"><span data-stu-id="0385a-105">A reference to each instance is then exposed via the intrinsic <xref:System.Web.HttpContext.Application%2A> object.</span></span>  
  
 <span data-ttu-id="0385a-106">Estado do aplicativo não é compartilhado entre um Web farm (em que um aplicativo está hospedado em vários servidores) ou um ambiente Web (em que um aplicativo está hospedado em vários processos no mesmo computador).</span><span class="sxs-lookup"><span data-stu-id="0385a-106">Application state is not shared across either a Web farm (in which an application is hosted across multiple servers) or a Web garden (in which an application is hosted across multiple processes on the same computer).</span></span>  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="0385a-107">Este tipo é thread-safe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0385a-107">This type is thread safe.</span>
      </span>
    </threadsafe>
    <altmember cref="T:System.Web.HttpContext" />
    <altmember cref="T:System.Web.HttpApplication" />
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplicationState.Add(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (name As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::String ^ name, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.Add : string * obj -&gt; unit" Usage="httpApplicationState.Add (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="0385a-108">O nome do objeto a ser adicionado à coleção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0385a-108">The name of the object to be added to the collection.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="0385a-109">O valor do objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0385a-109">The value of the object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0385a-110">Adiciona um novo objeto à coleção <see cref="T:System.Web.HttpApplicationState" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0385a-110">Adds a new object to the <see cref="T:System.Web.HttpApplicationState" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0385a-111">O exemplo a seguir adiciona duas variáveis de aplicativo denominadas MyAppVar1 e MyAppVar2 à coleção de aplicativo.</span><span class="sxs-lookup"><span data-stu-id="0385a-111">The following example adds two application variables named MyAppVar1 and MyAppVar2 to the Application collection.</span></span>  
  
 [!code-csharp[Classic HttpApplicationState.Add Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpApplicationState.Add Example/CS/source.cs#1)]
 [!code-vb[Classic HttpApplicationState.Add Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpApplicationState.Add Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllKeys">
      <MemberSignature Language="C#" Value="public string[] AllKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] AllKeys" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpApplicationState.AllKeys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllKeys As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ AllKeys { cli::array &lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AllKeys : string[]" Usage="System.Web.HttpApplicationState.AllKeys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0385a-112">Obtém as chaves de acesso na coleção <see cref="T:System.Web.HttpApplicationState" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0385a-112">Gets the access keys in the <see cref="T:System.Web.HttpApplicationState" /> collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0385a-113">Uma matriz de cadeia de caracteres de <see cref="T:System.Web.HttpApplicationState" /> nomes de objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0385a-113">A string array of <see cref="T:System.Web.HttpApplicationState" /> object names.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0385a-114">O exemplo a seguir preenche uma matriz de cadeia de caracteres com todos os nomes de objeto na coleção de estado de aplicativo.</span><span class="sxs-lookup"><span data-stu-id="0385a-114">The following example fills a string array with all the object names in the application state collection.</span></span>  
  
 [!code-csharp[Classic HttpApplicationState.AllKeys Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpApplicationState.AllKeys Example/CS/source.cs#1)]
 [!code-vb[Classic HttpApplicationState.AllKeys Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpApplicationState.AllKeys Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplicationState.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="httpApplicationState.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0385a-115">Remove todos os objetos de uma coleção <see cref="T:System.Web.HttpApplicationState" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0385a-115">Removes all objects from an <see cref="T:System.Web.HttpApplicationState" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0385a-116">O exemplo a seguir remove todos os <xref:System.Web.HttpApplicationState> variáveis da coleção.</span><span class="sxs-lookup"><span data-stu-id="0385a-116">The following example removes all <xref:System.Web.HttpApplicationState> variables from the collection.</span></span>  
  
 [!code-csharp[Classic HttpApplicationState.Clear Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpApplicationState.Clear Example/CS/source.cs#1)]
 [!code-vb[Classic HttpApplicationState.Clear Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpApplicationState.Clear Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contents">
      <MemberSignature Language="C#" Value="public System.Web.HttpApplicationState Contents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpApplicationState Contents" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpApplicationState.Contents" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Contents As HttpApplicationState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpApplicationState ^ Contents { System::Web::HttpApplicationState ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Contents : System.Web.HttpApplicationState" Usage="System.Web.HttpApplicationState.Contents" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpApplicationState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0385a-117">Obtém uma referência ao objeto <see cref="T:System.Web.HttpApplicationState" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0385a-117">Gets a reference to the <see cref="T:System.Web.HttpApplicationState" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0385a-118">Uma referência ao objeto <see cref="T:System.Web.HttpApplicationState" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0385a-118">A reference to the <see cref="T:System.Web.HttpApplicationState" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0385a-119">Esta propriedade fornece compatibilidade com versões anteriores do ASP.</span><span class="sxs-lookup"><span data-stu-id="0385a-119">This property provides compatibility with earlier versions of ASP.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0385a-120">O exemplo a seguir cria um novo <xref:System.Web.HttpApplicationState> objeto que é usado para acessar os nomes de objeto na coleção de estado do aplicativo.</span><span class="sxs-lookup"><span data-stu-id="0385a-120">The following example creates a new <xref:System.Web.HttpApplicationState> object that is used to access the object names in the application state collection.</span></span>  
  
 [!code-csharp[Classic HttpApplicationState.Contents Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpApplicationState.Contents Example/CS/source.cs#1)]
 [!code-vb[Classic HttpApplicationState.Contents Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpApplicationState.Contents Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public override int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpApplicationState.Count" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Web.HttpApplicationState.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0385a-121">Obtém o número de objetos na coleção <see cref="T:System.Web.HttpApplicationState" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0385a-121">Gets the number of objects in the <see cref="T:System.Web.HttpApplicationState" /> collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0385a-122">O número de objetos de item na coleção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0385a-122">The number of item objects in the collection.</span>
          </span>
          <span data-ttu-id="0385a-123">O padrão é 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0385a-123">The default is 0.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0385a-124">O exemplo a seguir executa somente se o número de objetos na coleção maior do que cinco.</span><span class="sxs-lookup"><span data-stu-id="0385a-124">The following example executes only if the number of objects in the collection exceeds five.</span></span>  
  
 [!code-csharp[Classic HttpApplicationState.Count Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpApplicationState.Count Example/CS/source.cs#1)]
 [!code-vb[Classic HttpApplicationState.Count Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpApplicationState.Count Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Get">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0385a-125">Obtém um objeto <see cref="T:System.Web.HttpApplicationState" /> por nome ou índice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0385a-125">Gets an <see cref="T:System.Web.HttpApplicationState" /> object by name or index.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public object Get (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Get(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplicationState.Get(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Get (index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Get(int index);" />
      <MemberSignature Language="F#" Value="member this.Get : int -&gt; obj" Usage="httpApplicationState.Get index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="0385a-126">O índice do objeto de estado do aplicativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0385a-126">The index of the application state object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0385a-127">Obtém um objeto <see cref="T:System.Web.HttpApplicationState" /> por índice numérico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0385a-127">Gets an <see cref="T:System.Web.HttpApplicationState" /> object by numerical index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0385a-128">O objeto referenciado por <paramref name="index" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0385a-128">The object referenced by <paramref name="index" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0385a-129">O exemplo a seguir retorna o primeiro objeto (índice = 0) do <xref:System.Web.HttpApplicationState> coleção de intrínseca <xref:System.Web.HttpContext.Application%2A> do objeto e o copia para uma nova variável de objeto.</span><span class="sxs-lookup"><span data-stu-id="0385a-129">The following example returns the first object (index = 0) from the <xref:System.Web.HttpApplicationState> collection of the intrinsic <xref:System.Web.HttpContext.Application%2A> object and copies it to a new object variable.</span></span>  
  
 [!code-csharp[Classic HttpApplicationState.Get1 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpApplicationState.Get1 Example/CS/source.cs#1)]
 [!code-vb[Classic HttpApplicationState.Get1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpApplicationState.Get1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public object Get (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Get(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplicationState.Get(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Get (name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Get(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.Get : string -&gt; obj" Usage="httpApplicationState.Get name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="0385a-130">O nome do objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0385a-130">The name of the object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0385a-131">Obtém um objeto <see cref="T:System.Web.HttpApplicationState" /> pelo nome.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0385a-131">Gets an <see cref="T:System.Web.HttpApplicationState" /> object by name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0385a-132">O objeto referenciado por <paramref name="name" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0385a-132">The object referenced by <paramref name="name" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0385a-133">O exemplo a seguir retorna um objeto chamado MyAppVar1 do <xref:System.Web.HttpApplicationState> coleção de intrínseca <xref:System.Web.HttpContext.Application%2A> do objeto e o copia para uma nova variável de objeto.</span><span class="sxs-lookup"><span data-stu-id="0385a-133">The following example returns an object named MyAppVar1 from the <xref:System.Web.HttpApplicationState> collection of the intrinsic <xref:System.Web.HttpContext.Application%2A> object and copies it to a new object variable.</span></span>  
  
```vb  
Dim MyObject As Object  
MyObject = Application.Get("MyAppVar1")  
```  
  
```csharp  
Object MyObject;  
MyObject = Application.Get("MyAppVar1");  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKey">
      <MemberSignature Language="C#" Value="public string GetKey (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetKey(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplicationState.GetKey(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetKey (index As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetKey(int index);" />
      <MemberSignature Language="F#" Value="member this.GetKey : int -&gt; string" Usage="httpApplicationState.GetKey index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="0385a-134">O índice do objeto de estado do aplicativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0385a-134">The index of the application state object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0385a-135">Obtém um nome de objeto <see cref="T:System.Web.HttpApplicationState" /> pelo índice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0385a-135">Gets an <see cref="T:System.Web.HttpApplicationState" /> object name by index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0385a-136">O nome sob o qual o objeto de estado do aplicativo foi salvo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0385a-136">The name under which the application state object was saved.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0385a-137">O exemplo a seguir retorna os nomes de todos os objetos na coleção de estado do aplicativo e armazena os nomes em uma matriz de cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="0385a-137">The following example returns the names of all the objects in the application state collection and stores the names in a string array.</span></span>  
  
 [!code-csharp[Classic HttpApplicationState.GetKey Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpApplicationState.GetKey Example/CS/source.cs#1)]
 [!code-vb[Classic HttpApplicationState.GetKey Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpApplicationState.GetKey Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0385a-138">Obtém acesso a um objeto em uma coleção <see cref="T:System.Web.HttpApplicationState" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0385a-138">Gets access to an object in an <see cref="T:System.Web.HttpApplicationState" /> collection.</span>
          </span>
          <span data-ttu-id="0385a-139">Essa propriedade está sobrecarregada para permitir o acesso a um objeto por nome ou por índice numérico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0385a-139">This property is overloaded to allow access to an object by name or numerical index.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpApplicationState.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[int] { System::Object ^ get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : obj" Usage="System.Web.HttpApplicationState.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="0385a-140">O índice numérico do objeto na coleção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0385a-140">The numerical index of the object in the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0385a-141">Obtém um único objeto <see cref="T:System.Web.HttpApplicationState" /> por índice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0385a-141">Gets a single <see cref="T:System.Web.HttpApplicationState" /> object by index.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0385a-142">O objeto referenciado por <paramref name="index" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0385a-142">The object referenced by <paramref name="index" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0385a-143">O exemplo a seguir retorna o primeiro objeto (índice = 0) do <xref:System.Web.HttpApplicationState> coleção de intrínseca <xref:System.Web.HttpContext.Application%2A> do objeto e o copia para uma nova variável de objeto.</span><span class="sxs-lookup"><span data-stu-id="0385a-143">The following example returns the first object (index = 0) from the <xref:System.Web.HttpApplicationState> collection of the intrinsic <xref:System.Web.HttpContext.Application%2A> object and copies it to a new object variable.</span></span>  
  
 [!code-csharp[Classic HttpApplicationState.this1 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpApplicationState.this1 Example/CS/source.cs#1)]
 [!code-vb[Classic HttpApplicationState.this1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpApplicationState.this1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[string name] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpApplicationState.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ name); void set(System::String ^ name, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj with get, set" Usage="System.Web.HttpApplicationState.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="0385a-144">O nome do objeto na coleção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0385a-144">The name of the object in the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0385a-145">Obtém o valor de um único objeto <see cref="T:System.Web.HttpApplicationState" /> pelo nome.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0385a-145">Gets the value of a single <see cref="T:System.Web.HttpApplicationState" /> object by name.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0385a-146">O objeto referenciado por <paramref name="name" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0385a-146">The object referenced by <paramref name="name" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0385a-147">O exemplo a seguir retorna um objeto chamado `MyAppVar1` do <xref:System.Web.HttpApplicationState> coleção o intrínseco <xref:System.Web.HttpContext.Application%2A> do objeto e o copia para uma nova variável de objeto.</span><span class="sxs-lookup"><span data-stu-id="0385a-147">The following example returns an object named `MyAppVar1` from the <xref:System.Web.HttpApplicationState> collection of the intrinsic <xref:System.Web.HttpContext.Application%2A> object and copies it to a new object variable.</span></span>  
  
 [!code-csharp[Classic HttpApplicationState.this Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpApplicationState.this Example/CS/source.cs#1)]
 [!code-vb[Classic HttpApplicationState.this Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpApplicationState.this Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Lock">
      <MemberSignature Language="C#" Value="public void Lock ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Lock() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplicationState.Lock" />
      <MemberSignature Language="VB.NET" Value="Public Sub Lock ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Lock();" />
      <MemberSignature Language="F#" Value="member this.Lock : unit -&gt; unit" Usage="httpApplicationState.Lock " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0385a-148">Bloqueia o acesso a uma variável <see cref="T:System.Web.HttpApplicationState" /> para facilitar a sincronização de acesso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0385a-148">Locks access to an <see cref="T:System.Web.HttpApplicationState" /> variable to facilitate access synchronization.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0385a-149">O <xref:System.Web.HttpApplicationState> classe executa automática de bloqueio e desbloqueio com a <xref:System.Web.HttpApplicationState.AllKeys%2A> e <xref:System.Web.HttpApplicationState.Count%2A> propriedades e o <xref:System.Web.HttpApplicationState.Add%2A>, <xref:System.Web.HttpApplicationState.Clear%2A>, <xref:System.Web.HttpApplicationState.Get%2A>, <xref:System.Web.HttpApplicationState.GetKey%2A>, <xref:System.Web.HttpApplicationState.Remove%2A>, <xref:System.Web.HttpApplicationState.RemoveAt%2A> e <xref:System.Web.HttpApplicationState.Set%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="0385a-149">The <xref:System.Web.HttpApplicationState> class performs automatic locking and unlocking with the <xref:System.Web.HttpApplicationState.AllKeys%2A> and <xref:System.Web.HttpApplicationState.Count%2A> properties and the <xref:System.Web.HttpApplicationState.Add%2A>, <xref:System.Web.HttpApplicationState.Clear%2A>, <xref:System.Web.HttpApplicationState.Get%2A>, <xref:System.Web.HttpApplicationState.GetKey%2A>, <xref:System.Web.HttpApplicationState.Remove%2A>, <xref:System.Web.HttpApplicationState.RemoveAt%2A> and <xref:System.Web.HttpApplicationState.Set%2A> methods.</span></span> <span data-ttu-id="0385a-150">No entanto, explicitamente usando o <xref:System.Web.HttpApplicationState.Lock%2A> e <xref:System.Web.HttpApplicationState.UnLock%2A> métodos quando você tem uma série de operações podem ser mais eficientes.</span><span class="sxs-lookup"><span data-stu-id="0385a-150">However, explicitly using the <xref:System.Web.HttpApplicationState.Lock%2A> and <xref:System.Web.HttpApplicationState.UnLock%2A> methods when you have a series of operations may be more efficient.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0385a-151">O exemplo a seguir usa o <xref:System.Web.HttpApplicationState.Lock%2A> método e <xref:System.Web.HttpApplicationState.UnLock%2A> método para impedir que outras sessões alterando o valor de duas variáveis de aplicativo até depois que a sessão local foi alterado-los.</span><span class="sxs-lookup"><span data-stu-id="0385a-151">The following example uses the <xref:System.Web.HttpApplicationState.Lock%2A> method and <xref:System.Web.HttpApplicationState.UnLock%2A> method to prevent other sessions from changing the value of two application variables until after the local session has changed them.</span></span>  
  
 [!code-csharp[Classic HttpApplicationState.Lock Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpApplicationState.Lock Example/CS/source.cs#1)]
 [!code-vb[Classic HttpApplicationState.Lock Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpApplicationState.Lock Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpApplicationState.UnLock" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplicationState.Remove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.Remove : string -&gt; unit" Usage="httpApplicationState.Remove name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="0385a-152">O nome do objeto a ser removido da coleção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0385a-152">The name of the object to be removed from the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0385a-153">Remove o objeto nomeado de uma coleção <see cref="T:System.Web.HttpApplicationState" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0385a-153">Removes the named object from an <see cref="T:System.Web.HttpApplicationState" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0385a-154">O exemplo a seguir remove uma variável de estado do aplicativo da coleção.</span><span class="sxs-lookup"><span data-stu-id="0385a-154">The following example removes one application state variable from the collection.</span></span>  
  
 [!code-csharp[Classic HttpApplicationState.Remove Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpApplicationState.Remove Example/CS/source.cs#1)]
 [!code-vb[Classic HttpApplicationState.Remove Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpApplicationState.Remove Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAll">
      <MemberSignature Language="C#" Value="public void RemoveAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplicationState.RemoveAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAll();" />
      <MemberSignature Language="F#" Value="member this.RemoveAll : unit -&gt; unit" Usage="httpApplicationState.RemoveAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0385a-155">Remove todos os objetos de uma coleção <see cref="T:System.Web.HttpApplicationState" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0385a-155">Removes all objects from an <see cref="T:System.Web.HttpApplicationState" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0385a-156"><xref:System.Web.HttpApplicationState.RemoveAll%2A> é uma chamada interna para <xref:System.Web.HttpApplicationState.Clear%2A>.</span><span class="sxs-lookup"><span data-stu-id="0385a-156"><xref:System.Web.HttpApplicationState.RemoveAll%2A> is an internal call to <xref:System.Web.HttpApplicationState.Clear%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0385a-157">O exemplo a seguir remove todos os <xref:System.Web.HttpApplicationState> variáveis da coleção.</span><span class="sxs-lookup"><span data-stu-id="0385a-157">The following example removes all <xref:System.Web.HttpApplicationState> variables from the collection.</span></span>  
  
 [!code-csharp[Classic HttpApplicationState.RemoveAll Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpApplicationState.RemoveAll Example/CS/source.cs#1)]
 [!code-vb[Classic HttpApplicationState.RemoveAll Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpApplicationState.RemoveAll Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplicationState.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="member this.RemoveAt : int -&gt; unit" Usage="httpApplicationState.RemoveAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="0385a-158">A posição do item a ser removido na coleção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0385a-158">The position in the collection of the item to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0385a-159">Remove um objeto <see cref="T:System.Web.HttpApplicationState" /> de uma coleção por índice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0385a-159">Removes an <see cref="T:System.Web.HttpApplicationState" /> object from a collection by index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0385a-160">O exemplo de código a seguir demonstra como inserir duas variáveis de aplicativo na coleção e, em seguida, usar o <xref:System.Web.HttpApplicationState.RemoveAt%2A> método para remover a primeira variável em um personalizado <xref:System.Web.HttpApplicationState> objeto.</span><span class="sxs-lookup"><span data-stu-id="0385a-160">The following code example demonstrates how to insert two application variables into the collection, and then use the <xref:System.Web.HttpApplicationState.RemoveAt%2A> method to remove the first variable in a custom <xref:System.Web.HttpApplicationState> object.</span></span>  
  
 [!code-aspx-csharp[HttpApplicationStateRemoveAt#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpApplicationStateRemoveAt/CS/httpapplicationstate_removeatcs.aspx#1)]
 [!code-aspx-vb[HttpApplicationStateRemoveAt#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpApplicationStateRemoveAt/VB/httpapplicationstate_removeatvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public void Set (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Set(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplicationState.Set(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Set (name As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Set(System::String ^ name, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.Set : string * obj -&gt; unit" Usage="httpApplicationState.Set (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="0385a-161">O nome do objeto a atualizar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0385a-161">The name of the object to be updated.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="0385a-162">O valor atualizado do objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0385a-162">The updated value of the object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0385a-163">Atualiza o valor de um objeto em uma coleção <see cref="T:System.Web.HttpApplicationState" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0385a-163">Updates the value of an object in an <see cref="T:System.Web.HttpApplicationState" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0385a-164">O exemplo a seguir atualiza o valor de uma variável de estado do aplicativo existente.</span><span class="sxs-lookup"><span data-stu-id="0385a-164">The following example updates the value of an existing application state variable.</span></span>  
  
 [!code-csharp[Classic HttpApplicationState.Set Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpApplicationState.Set Example/CS/source.cs#1)]
 [!code-vb[Classic HttpApplicationState.Set Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpApplicationState.Set Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StaticObjects">
      <MemberSignature Language="C#" Value="public System.Web.HttpStaticObjectsCollection StaticObjects { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpStaticObjectsCollection StaticObjects" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpApplicationState.StaticObjects" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StaticObjects As HttpStaticObjectsCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpStaticObjectsCollection ^ StaticObjects { System::Web::HttpStaticObjectsCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StaticObjects : System.Web.HttpStaticObjectsCollection" Usage="System.Web.HttpApplicationState.StaticObjects" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpStaticObjectsCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0385a-165">Obtém todos os objetos declarados por uma marca <see langword="&lt;object&gt;" /> em que o escopo é definido como "Application" no aplicativo ASP.NET.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0385a-165">Gets all objects declared by an <see langword="&lt;object&gt;" /> tag where the scope is set to "Application" within the ASP.NET application.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0385a-166">Uma coleção de objetos na página.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0385a-166">A collection of objects on the page.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0385a-167">Objetos de aplicativo são definidos no arquivo global. asax dentro a `<object runat="server" scope="Application"> </object>` marcas.</span><span class="sxs-lookup"><span data-stu-id="0385a-167">Application objects are defined in the Global.asax file inside the `<object runat="server" scope="Application"> </object>` tags.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0385a-168">O exemplo a seguir obtém todos os objetos de aplicativo em um <xref:System.Web.HttpStaticObjectsCollection> variável e executa uma rotina somente se o número de objetos for maior que 0.</span><span class="sxs-lookup"><span data-stu-id="0385a-168">The following example gets all application objects into a <xref:System.Web.HttpStaticObjectsCollection> variable and executes a routine only if the number of objects is greater than 0.</span></span>  
  
 [!code-csharp[Classic HttpApplicationState.StaticObjects Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpApplicationState.StaticObjects Example/CS/source.cs#1)]
 [!code-vb[Classic HttpApplicationState.StaticObjects Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpApplicationState.StaticObjects Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnLock">
      <MemberSignature Language="C#" Value="public void UnLock ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UnLock() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplicationState.UnLock" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnLock ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UnLock();" />
      <MemberSignature Language="F#" Value="member this.UnLock : unit -&gt; unit" Usage="httpApplicationState.UnLock " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0385a-169">Desbloqueia o acesso a uma variável <see cref="T:System.Web.HttpApplicationState" /> para facilitar a sincronização de acesso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0385a-169">Unlocks access to an <see cref="T:System.Web.HttpApplicationState" /> variable to facilitate access synchronization.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0385a-170">O <xref:System.Web.HttpApplicationState> classe executa automática de bloqueio e desbloqueio com a <xref:System.Web.HttpApplicationState.AllKeys%2A> e <xref:System.Web.HttpApplicationState.Count%2A> propriedades e o <xref:System.Web.HttpApplicationState.Add%2A>, <xref:System.Web.HttpApplicationState.Clear%2A>, <xref:System.Web.HttpApplicationState.Get%2A>, <xref:System.Web.HttpApplicationState.GetKey%2A>, <xref:System.Web.HttpApplicationState.Remove%2A>, <xref:System.Web.HttpApplicationState.RemoveAt%2A> e <xref:System.Web.HttpApplicationState.Set%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="0385a-170">The <xref:System.Web.HttpApplicationState> class performs automatic locking and unlocking with the <xref:System.Web.HttpApplicationState.AllKeys%2A> and <xref:System.Web.HttpApplicationState.Count%2A> properties and the <xref:System.Web.HttpApplicationState.Add%2A>, <xref:System.Web.HttpApplicationState.Clear%2A>, <xref:System.Web.HttpApplicationState.Get%2A>, <xref:System.Web.HttpApplicationState.GetKey%2A>, <xref:System.Web.HttpApplicationState.Remove%2A>, <xref:System.Web.HttpApplicationState.RemoveAt%2A> and <xref:System.Web.HttpApplicationState.Set%2A> methods.</span></span> <span data-ttu-id="0385a-171">No entanto, explicitamente usando o <xref:System.Web.HttpApplicationState.Lock%2A> e <xref:System.Web.HttpApplicationState.UnLock%2A> métodos quando você tem uma série de operações podem ser mais eficientes.</span><span class="sxs-lookup"><span data-stu-id="0385a-171">However, explicitly using the <xref:System.Web.HttpApplicationState.Lock%2A> and <xref:System.Web.HttpApplicationState.UnLock%2A> methods when you have a series of operations may be more efficient.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0385a-172">O exemplo a seguir usa o <xref:System.Web.HttpApplicationState.Lock%2A> método e <xref:System.Web.HttpApplicationState.UnLock%2A> método para impedir que outras sessões alterando o valor de duas variáveis de aplicativo até depois que a sessão local foi alterado-los.</span><span class="sxs-lookup"><span data-stu-id="0385a-172">The following example uses the <xref:System.Web.HttpApplicationState.Lock%2A> method and <xref:System.Web.HttpApplicationState.UnLock%2A> method to prevent other sessions from changing the value of two application variables until after the local session has changed them.</span></span>  
  
 [!code-csharp[Classic HttpApplicationState.Lock Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpApplicationState.Lock Example/CS/source.cs#1)]
 [!code-vb[Classic HttpApplicationState.Lock Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpApplicationState.Lock Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpApplicationState.Lock" />
      </Docs>
    </Member>
  </Members>
</Type>