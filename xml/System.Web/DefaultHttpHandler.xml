<Type Name="DefaultHttpHandler" FullName="System.Web.DefaultHttpHandler">
  <TypeSignature Language="C#" Value="public class DefaultHttpHandler : System.Web.IHttpAsyncHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DefaultHttpHandler extends System.Object implements class System.Web.IHttpAsyncHandler, class System.Web.IHttpHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.DefaultHttpHandler" />
  <TypeSignature Language="VB.NET" Value="Public Class DefaultHttpHandler&#xA;Implements IHttpAsyncHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class DefaultHttpHandler : System::Web::IHttpAsyncHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.IHttpAsyncHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="c855a-101">Representa as propriedades e métodos de um manipulador HTTP padrão.</span><span class="sxs-lookup"><span data-stu-id="c855a-101">Represents the properties and methods of a default HTTP handler.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c855a-102">Um <xref:System.Web.DefaultHttpHandler> objeto intercepta solicitações de entrada no pipeline HTTP quando interceptação de solicitação tiver sido configurada por meio de serviços de informações da Internet (IIS) 6.0 e nenhuma associação explícita se aplicam para a extensão solicitada.</span><span class="sxs-lookup"><span data-stu-id="c855a-102">A <xref:System.Web.DefaultHttpHandler> object intercepts incoming requests in the HTTP pipeline when both request interception has been configured through Internet Information Services (IIS) 6.0 and no explicit  bindings apply to the requested extension.</span></span>  
  
 <span data-ttu-id="c855a-103">Interceptação de solicitação pode ser configurada por meio do recurso de mapeamento de aplicativos de caractere curinga, introduzido no IIS 6.0.</span><span class="sxs-lookup"><span data-stu-id="c855a-103">Request interception can be set up through the wildcard application mapping feature introduced in IIS 6.0.</span></span> <span data-ttu-id="c855a-104">Para obter mais informações, pesquise o [MSDN Library](http://go.microsoft.com/fwlink/?linkid=37118) para obter informações sobre como usar mapas de aplicativos de curinga para remapear um URL.</span><span class="sxs-lookup"><span data-stu-id="c855a-104">For more information, search the [MSDN Library](http://go.microsoft.com/fwlink/?linkid=37118) for information about using wildcard application maps to remap a URL.</span></span>  
  
 <span data-ttu-id="c855a-105">O <xref:System.Web.DefaultHttpHandler> classe implementa o <xref:System.Web.IHttpAsyncHandler> interface para fornecer processamento assíncrono da solicitação.</span><span class="sxs-lookup"><span data-stu-id="c855a-105">The <xref:System.Web.DefaultHttpHandler> class implements the <xref:System.Web.IHttpAsyncHandler> interface to provide asynchronous request processing.</span></span> <span data-ttu-id="c855a-106">Para obter informações gerais sobre os manipuladores HTTP, consulte [manipuladores HTTP e visão geral de módulos HTTP](http://msdn.microsoft.com/library/f540bdeb-d22e-4e1d-ba8a-fe6c9926283b).</span><span class="sxs-lookup"><span data-stu-id="c855a-106">For general information about HTTP handlers, see [HTTP Handlers and HTTP Modules Overview](http://msdn.microsoft.com/library/f540bdeb-d22e-4e1d-ba8a-fe6c9926283b).</span></span> <span data-ttu-id="c855a-107">Além disso, para mais informações, consulte o seguinte:</span><span class="sxs-lookup"><span data-stu-id="c855a-107">Additionally, for more information see the following:</span></span>  
  
-   <span data-ttu-id="c855a-108">Sobre a criação de manipuladores HTTP assíncronos, consulte [passo a passo: Criando um manipulador HTTP assíncrono](http://msdn.microsoft.com/library/1b5c4a27-599b-44d0-8a06-72edc6765aa9).</span><span class="sxs-lookup"><span data-stu-id="c855a-108">About creating asynchronous HTTP handlers, see [Walkthrough: Creating an Asynchronous HTTP Handler](http://msdn.microsoft.com/library/1b5c4a27-599b-44d0-8a06-72edc6765aa9).</span></span>  
  
-   <span data-ttu-id="c855a-109">Sobre o registro de manipuladores HTTP, consulte [como: registrar manipuladores de HTTP](http://msdn.microsoft.com/library/d5633f9a-03fb-4ccc-a799-dc67d656fa60).</span><span class="sxs-lookup"><span data-stu-id="c855a-109">About registering HTTP handlers, see [How to: Register HTTP Handlers](http://msdn.microsoft.com/library/d5633f9a-03fb-4ccc-a799-dc67d656fa60).</span></span>  
  
 <span data-ttu-id="c855a-110">Classes podem derivar de <xref:System.Web.DefaultHttpHandler> classe para fornecer tratamento personalizado de solicitações.</span><span class="sxs-lookup"><span data-stu-id="c855a-110">Classes can derive from the <xref:System.Web.DefaultHttpHandler> class to provide customized handling of requests.</span></span> <span data-ttu-id="c855a-111">Um manipulador HTTP assíncrono que deriva de <xref:System.Web.DefaultHttpHandler> pode substituir o <xref:System.Web.DefaultHttpHandler.BeginProcessRequest%2A> método para alterar como as solicitações são processadas.</span><span class="sxs-lookup"><span data-stu-id="c855a-111">An asynchronous HTTP handler that is derived from the <xref:System.Web.DefaultHttpHandler> could override the <xref:System.Web.DefaultHttpHandler.BeginProcessRequest%2A> method to change how requests are processed.</span></span>  
  
 <span data-ttu-id="c855a-112">Um <xref:System.Web.DefaultHttpHandler> não usa os erros ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="c855a-112">A <xref:System.Web.DefaultHttpHandler> does not use ASP.NET errors.</span></span> <span data-ttu-id="c855a-113">Existente conteúdo que usa os erros do IIS ou um mecanismo de erro personalizada de ISAPI de propriedade deve funcionar inalterada.</span><span class="sxs-lookup"><span data-stu-id="c855a-113">Existing content that uses IIS errors or a propriety ISAPI custom error mechanism would work unchanged.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c855a-114">O exemplo de código a seguir demonstra como implementar um manipulador HTTP personalizado derivando de <xref:System.Web.DefaultHttpHandler> classe.</span><span class="sxs-lookup"><span data-stu-id="c855a-114">The following code example demonstrates how to implement a customized HTTP handler by deriving from the <xref:System.Web.DefaultHttpHandler> class.</span></span>  
  
 [!code-csharp[System.Web.DefaultHttpHandler#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DefaultHttpHandler/CS/source.cs#1)]
 [!code-vb[System.Web.DefaultHttpHandler#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DefaultHttpHandler/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DefaultHttpHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DefaultHttpHandler.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DefaultHttpHandler();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c855a-115">Inicializa uma nova instância da classe <see cref="T:System.Web.DefaultHttpHandler" />.</span><span class="sxs-lookup"><span data-stu-id="c855a-115">Initializes a new instance of the <see cref="T:System.Web.DefaultHttpHandler" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginProcessRequest">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginProcessRequest (System.Web.HttpContext context, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginProcessRequest(class System.Web.HttpContext context, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DefaultHttpHandler.BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginProcessRequest (context As HttpContext, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginProcessRequest(System::Web::HttpContext ^ context, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.IHttpAsyncHandler.BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="c855a-116">Um objeto que fornece referências aos objetos intrínsecos do servidor usados para atender a solicitações HTTP.</span><span class="sxs-lookup"><span data-stu-id="c855a-116">An object that provides references to intrinsic server objects that are used to service HTTP requests.</span></span></param>
        <param name="callback"><span data-ttu-id="c855a-117">O método a ser chamado quando a chamada de método assíncrono é concluída.</span><span class="sxs-lookup"><span data-stu-id="c855a-117">The method to call when the asynchronous method call is complete.</span></span> <span data-ttu-id="c855a-118">Se <c>callback</c> for <see langword="null" />, o delegado não será chamado.</span><span class="sxs-lookup"><span data-stu-id="c855a-118">If <c>callback</c> is <see langword="null" />, the delegate is not called.</span></span></param>
        <param name="state"><span data-ttu-id="c855a-119">Quaisquer dados de estado necessários para processar a solicitação.</span><span class="sxs-lookup"><span data-stu-id="c855a-119">Any state data that is needed to process the request.</span></span></param>
        <summary><span data-ttu-id="c855a-120">Inicia uma chamada assíncrona para o manipulador HTTP.</span><span class="sxs-lookup"><span data-stu-id="c855a-120">Initiates an asynchronous call to the HTTP handler.</span></span></summary>
        <returns><span data-ttu-id="c855a-121">Um <see cref="T:System.IAsyncResult" /> que contém informações sobre o status do processo.</span><span class="sxs-lookup"><span data-stu-id="c855a-121">An <see cref="T:System.IAsyncResult" /> that contains information about the status of the process.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c855a-122">Ao criar um manipulador HTTP para uso assíncrono, o manipulador deve implementar assíncrona <xref:System.Web.DefaultHttpHandler.BeginProcessRequest%2A> e <xref:System.Web.DefaultHttpHandler.EndProcessRequest%2A> métodos que são chamados de forma assíncrona pelo ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="c855a-122">When creating an HTTP handler for asynchronous use, your handler must implement the asynchronous <xref:System.Web.DefaultHttpHandler.BeginProcessRequest%2A> and <xref:System.Web.DefaultHttpHandler.EndProcessRequest%2A> methods that are called asynchronously by ASP.NET.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="c855a-123">As pré-condições para o processamento de uma falha de solicitação e o arquivo solicitado tem o sufixo .asp ou a solicitação foi enviada por POST.</span><span class="sxs-lookup"><span data-stu-id="c855a-123">The preconditions for processing a request fail and either the requested file has the suffix .asp or the request was sent through POST.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="protected System.Web.HttpContext Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpContext Context" />
      <MemberSignature Language="DocId" Value="P:System.Web.DefaultHttpHandler.Context" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Context As HttpContext" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::HttpContext ^ Context { System::Web::HttpContext ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c855a-124">Obtém o contexto que está associado ao objeto <see cref="T:System.Web.DefaultHttpHandler" /> atual.</span><span class="sxs-lookup"><span data-stu-id="c855a-124">Gets the context that is associated with the current <see cref="T:System.Web.DefaultHttpHandler" /> object.</span></span></summary>
        <value><span data-ttu-id="c855a-125">Um <see cref="T:System.Web.HttpContext" /> objeto que contém o contexto atual.</span><span class="sxs-lookup"><span data-stu-id="c855a-125">An <see cref="T:System.Web.HttpContext" /> object that contains the current context.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c855a-126">O <xref:System.Web.DefaultHttpHandler.Context%2A> propriedade fornece acesso ao atual <xref:System.Web.HttpContext> objeto para classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="c855a-126">The <xref:System.Web.DefaultHttpHandler.Context%2A> property provides access to the current <xref:System.Web.HttpContext> object for derived classes.</span></span> <span data-ttu-id="c855a-127">Um <xref:System.Web.HttpContext> objeto fornece acesso a intrínseca <xref:System.Web.HttpApplication.Request%2A>, <xref:System.Web.HttpApplication.Response%2A>, e <xref:System.Web.HttpApplication.Server%2A> propriedades para a solicitação.</span><span class="sxs-lookup"><span data-stu-id="c855a-127">An <xref:System.Web.HttpContext> object provides access to the intrinsic <xref:System.Web.HttpApplication.Request%2A>, <xref:System.Web.HttpApplication.Response%2A>, and <xref:System.Web.HttpApplication.Server%2A> properties for the request.</span></span> <span data-ttu-id="c855a-128">Para obter mais informações sobre como acessar as informações contextuais, consulte <xref:System.Web.HttpContext>.</span><span class="sxs-lookup"><span data-stu-id="c855a-128">For more information about accessing contextual information, see <xref:System.Web.HttpContext>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.HttpContext" />
      </Docs>
    </Member>
    <Member MemberName="EndProcessRequest">
      <MemberSignature Language="C#" Value="public virtual void EndProcessRequest (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndProcessRequest(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DefaultHttpHandler.EndProcessRequest(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndProcessRequest (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndProcessRequest(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.IHttpAsyncHandler.EndProcessRequest(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="c855a-129">Um objeto que contém informações sobre o status do processo.</span><span class="sxs-lookup"><span data-stu-id="c855a-129">An object that contains information about the status of the process.</span></span></param>
        <summary><span data-ttu-id="c855a-130">Fornece um método final para um processo assíncrono.</span><span class="sxs-lookup"><span data-stu-id="c855a-130">Provides an end method for an asynchronous process.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c855a-131">Você pode usar o <xref:System.Web.DefaultHttpHandler.EndProcessRequest%2A> método gerar todas as exceções que são detectadas durante o processo assíncrono.</span><span class="sxs-lookup"><span data-stu-id="c855a-131">You can use the <xref:System.Web.DefaultHttpHandler.EndProcessRequest%2A> method to throw any exceptions that are caught during the asynchronous process.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteUrlHeaders">
      <MemberSignature Language="C#" Value="protected System.Collections.Specialized.NameValueCollection ExecuteUrlHeaders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection ExecuteUrlHeaders" />
      <MemberSignature Language="DocId" Value="P:System.Web.DefaultHttpHandler.ExecuteUrlHeaders" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property ExecuteUrlHeaders As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::Specialized::NameValueCollection ^ ExecuteUrlHeaders { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c855a-132">Obtém uma coleção de cabeçalhos de solicitação e valores de solicitação para transferir junto com a solicitação.</span><span class="sxs-lookup"><span data-stu-id="c855a-132">Gets a collection of request headers and request values to transfer along with the request.</span></span></summary>
        <value><span data-ttu-id="c855a-133">Um <see cref="T:System.Collections.Specialized.NameValueCollection" /> que contém cabeçalhos de solicitação e valores.</span><span class="sxs-lookup"><span data-stu-id="c855a-133">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> containing request headers and values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c855a-134">O <xref:System.Web.DefaultHttpHandler.ExecuteUrlHeaders%2A> propriedade retorna uma coleção vazia, a menos que ele é preenchido em uma classe que deriva de <xref:System.Web.DefaultHttpHandler> classe.</span><span class="sxs-lookup"><span data-stu-id="c855a-134">The <xref:System.Web.DefaultHttpHandler.ExecuteUrlHeaders%2A> property returns an empty collection unless it is populated in a class that is derived from the <xref:System.Web.DefaultHttpHandler> class.</span></span> <span data-ttu-id="c855a-135">Os cabeçalhos que são adicionados são adicionados à coleção de cabeçalhos de solicitação antes de passar a solicitação de volta para Internet Information Services (IIS).</span><span class="sxs-lookup"><span data-stu-id="c855a-135">The headers that are added are appended to the collection of headers in the request before passing the request back to Internet Information Services (IIS).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReusable">
      <MemberSignature Language="C#" Value="public virtual bool IsReusable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReusable" />
      <MemberSignature Language="DocId" Value="P:System.Web.DefaultHttpHandler.IsReusable" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsReusable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsReusable { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.IHttpHandler.IsReusable</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c855a-136">Obtém um valor booliano que indica se outra solicitação pode usar a instância atual da classe <see cref="T:System.Web.DefaultHttpHandler" />.</span><span class="sxs-lookup"><span data-stu-id="c855a-136">Gets a Boolean value indicating that another request can use the current instance of the <see cref="T:System.Web.DefaultHttpHandler" /> class.</span></span></summary>
        <value>
          <span data-ttu-id="c855a-137"><see langword="true" /> Se o <see cref="T:System.Web.DefaultHttpHandler" /> for reutilizável; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c855a-137"><see langword="true" /> if the <see cref="T:System.Web.DefaultHttpHandler" /> is reusable; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c855a-138">Para definir explicitamente o <xref:System.Web.DefaultHttpHandler.IsReusable%2A> propriedade `true` ou `false`, substituir o <xref:System.Web.DefaultHttpHandler.IsReusable%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="c855a-138">To explicitly set the <xref:System.Web.DefaultHttpHandler.IsReusable%2A> property to `true` or `false`, override the <xref:System.Web.DefaultHttpHandler.IsReusable%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.DefaultHttpHandler.ProcessRequest(System.Web.HttpContext)" />
      </Docs>
    </Member>
    <Member MemberName="OnExecuteUrlPreconditionFailure">
      <MemberSignature Language="C#" Value="public virtual void OnExecuteUrlPreconditionFailure ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnExecuteUrlPreconditionFailure() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DefaultHttpHandler.OnExecuteUrlPreconditionFailure" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnExecuteUrlPreconditionFailure ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnExecuteUrlPreconditionFailure();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c855a-139">Chamado quando as pré-condições impedem que o objeto <see cref="T:System.Web.DefaultHttpHandler" /> processe uma solicitação.</span><span class="sxs-lookup"><span data-stu-id="c855a-139">Called when preconditions prevent the <see cref="T:System.Web.DefaultHttpHandler" /> object from processing a request.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c855a-140">Pré-condições são especificadas pelo cliente nos campos de cabeçalho de solicitação e são avaliadas no servidor Web.</span><span class="sxs-lookup"><span data-stu-id="c855a-140">Preconditions are specified by the client in the request-header fields and are evaluated on the Web server.</span></span> <span data-ttu-id="c855a-141">Por exemplo, usando pré-condições, os clientes podem impedir um método solicitado (por exemplo, GET) que está sendo aplicada a um recurso diferente da pretendida.</span><span class="sxs-lookup"><span data-stu-id="c855a-141">For example, by using preconditions, clients can prevent a requested method (for example, GET) from being applied to a resource other than the one intended.</span></span> <span data-ttu-id="c855a-142">Para obter mais informações, consulte a seção 14, "Definições de campo de cabeçalho", no [Hypertext Transfer Protocol--HTTP/1.1](http://go.microsoft.com/fwlink/?LinkID=73147) especificação no site da World Wide Web Consortium (W3C).</span><span class="sxs-lookup"><span data-stu-id="c855a-142">For more information, see section 14, "Header Field Definitions," in the [Hypertext Transfer Protocol -- HTTP/1.1](http://go.microsoft.com/fwlink/?LinkID=73147) specification on the World Wide Web Consortium (W3C) Web site.</span></span>  
  
 <span data-ttu-id="c855a-143">O <xref:System.Web.DefaultHttpHandler.OnExecuteUrlPreconditionFailure%2A> método é chamado quando as pré-condições impedem que o <xref:System.Web.DefaultHttpHandler> objeto a partir de uma solicitação de processamento.</span><span class="sxs-lookup"><span data-stu-id="c855a-143">The <xref:System.Web.DefaultHttpHandler.OnExecuteUrlPreconditionFailure%2A> method is called when preconditions prevent the <xref:System.Web.DefaultHttpHandler> object from processing a request.</span></span> <span data-ttu-id="c855a-144">Uma classe derivada pode substituir o <xref:System.Web.DefaultHttpHandler.OnExecuteUrlPreconditionFailure%2A> método para lançar uma exceção quando as pré-condições falharem.</span><span class="sxs-lookup"><span data-stu-id="c855a-144">A deriving class might override the <xref:System.Web.DefaultHttpHandler.OnExecuteUrlPreconditionFailure%2A> method to throw an exception when the preconditions fail.</span></span> <span data-ttu-id="c855a-145">O <xref:System.Web.DefaultHttpHandler> não gerará uma exceção <xref:System.Web.DefaultHttpHandler.OnExecuteUrlPreconditionFailure%2A> método.</span><span class="sxs-lookup"><span data-stu-id="c855a-145">The <xref:System.Web.DefaultHttpHandler> does not throw an exception in the <xref:System.Web.DefaultHttpHandler.OnExecuteUrlPreconditionFailure%2A> method.</span></span>  
  
 <span data-ttu-id="c855a-146">Qualquer um dos seguintes fará com que as pré-condições falha:</span><span class="sxs-lookup"><span data-stu-id="c855a-146">Any of the following will cause the preconditions to fail:</span></span>  
  
-   <span data-ttu-id="c855a-147">Chamando <xref:System.Web.HttpResponse.Write%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c855a-147">Calling <xref:System.Web.HttpResponse.Write%2A?displayProperty=nameWithType>.</span></span>  
  
-   <span data-ttu-id="c855a-148">Chamando <xref:System.Web.HttpResponse.AddHeader%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c855a-148">Calling <xref:System.Web.HttpResponse.AddHeader%2A?displayProperty=nameWithType>.</span></span>  
  
-   <span data-ttu-id="c855a-149">Chamando <xref:System.Web.HttpResponse.Flush%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c855a-149">Calling <xref:System.Web.HttpResponse.Flush%2A?displayProperty=nameWithType>.</span></span>  
  
-   <span data-ttu-id="c855a-150">Alterar a política de cache para a resposta.</span><span class="sxs-lookup"><span data-stu-id="c855a-150">Changing the cache policy for the response.</span></span>  
  
-   <span data-ttu-id="c855a-151">Adicionando um <xref:System.IO.Stream> objeto como um filtro para o <xref:System.Web.HttpResponse.Filter%2A?displayProperty=nameWithType> propriedade.</span><span class="sxs-lookup"><span data-stu-id="c855a-151">Adding a <xref:System.IO.Stream> object as a filter to the <xref:System.Web.HttpResponse.Filter%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OverrideExecuteUrlPath">
      <MemberSignature Language="C#" Value="public virtual string OverrideExecuteUrlPath ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string OverrideExecuteUrlPath() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DefaultHttpHandler.OverrideExecuteUrlPath" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OverrideExecuteUrlPath () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ OverrideExecuteUrlPath();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c855a-152">Substitui a URL de destino para a solicitação atual.</span><span class="sxs-lookup"><span data-stu-id="c855a-152">Overrides the target URL for the current request.</span></span></summary>
        <returns><span data-ttu-id="c855a-153">A URL substituída a ser usada na solicitação ou <see langword="null" />, se uma URL substituída não for fornecida.</span><span class="sxs-lookup"><span data-stu-id="c855a-153">The overridden URL to use in the request; or <see langword="null" /> if an overridden URL is not provided.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c855a-154">O <xref:System.Web.DefaultHttpHandler.OverrideExecuteUrlPath%2A> método retorna `null` , a menos que ele seja substituído em uma classe que deriva de <xref:System.Web.DefaultHttpHandler> classe.</span><span class="sxs-lookup"><span data-stu-id="c855a-154">The <xref:System.Web.DefaultHttpHandler.OverrideExecuteUrlPath%2A> method returns `null` unless it is overridden in a class that is derived from the <xref:System.Web.DefaultHttpHandler> class.</span></span>  
  
 <span data-ttu-id="c855a-155">O <xref:System.Web.DefaultHttpHandler.OverrideExecuteUrlPath%2A> método é chamado somente se estiver em execução no modo de isolamento do processo de trabalho ASP.NET no IIS 6.0, e se a resposta não foi modificado antes do <xref:System.Web.DefaultHttpHandler> objeto foi chamado.</span><span class="sxs-lookup"><span data-stu-id="c855a-155">The <xref:System.Web.DefaultHttpHandler.OverrideExecuteUrlPath%2A> method is called only if ASP.NET is running in worker process isolation mode on IIS 6.0, and if the response was not modified before the <xref:System.Web.DefaultHttpHandler> object was called.</span></span> <span data-ttu-id="c855a-156">A resposta é modificada por qualquer um dos seguintes:</span><span class="sxs-lookup"><span data-stu-id="c855a-156">The response is modified by any of the following:</span></span>  
  
-   <span data-ttu-id="c855a-157">Chamando <xref:System.Web.HttpResponse.Write%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c855a-157">Calling <xref:System.Web.HttpResponse.Write%2A?displayProperty=nameWithType>.</span></span>  
  
-   <span data-ttu-id="c855a-158">Chamando <xref:System.Web.HttpResponse.AddHeader%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c855a-158">Calling <xref:System.Web.HttpResponse.AddHeader%2A?displayProperty=nameWithType>.</span></span>  
  
-   <span data-ttu-id="c855a-159">Chamando <xref:System.Web.HttpResponse.Flush%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c855a-159">Calling <xref:System.Web.HttpResponse.Flush%2A?displayProperty=nameWithType>.</span></span>  
  
-   <span data-ttu-id="c855a-160">Alterar a política de cache para a resposta.</span><span class="sxs-lookup"><span data-stu-id="c855a-160">Changing the cache policy for the response.</span></span>  
  
-   <span data-ttu-id="c855a-161">Adicionando um <xref:System.IO.Stream> objeto como um filtro para o <xref:System.Web.HttpResponse.Filter%2A?displayProperty=nameWithType> propriedade.</span><span class="sxs-lookup"><span data-stu-id="c855a-161">Adding a <xref:System.IO.Stream> object as a filter to the <xref:System.Web.HttpResponse.Filter%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessRequest">
      <MemberSignature Language="C#" Value="public virtual void ProcessRequest (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessRequest(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DefaultHttpHandler.ProcessRequest(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ProcessRequest (context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ProcessRequest(System::Web::HttpContext ^ context);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.IHttpHandler.ProcessRequest(System.Web.HttpContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="c855a-162">Um objeto que fornece referências aos objetos intrínsecos do servidor usados para atender a solicitações HTTP.</span><span class="sxs-lookup"><span data-stu-id="c855a-162">An object that provides references to intrinsic server objects used to service HTTP requests.</span></span></param>
        <summary><span data-ttu-id="c855a-163">Permite que um objeto <see cref="T:System.Web.DefaultHttpHandler" /> processe solicitações da Web HTTP.</span><span class="sxs-lookup"><span data-stu-id="c855a-163">Enables a <see cref="T:System.Web.DefaultHttpHandler" /> object to process of HTTP Web requests.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c855a-164">O <xref:System.Web.DefaultHttpHandler.ProcessRequest%2A> não deve ser chamado o método de forma síncrona.</span><span class="sxs-lookup"><span data-stu-id="c855a-164">The <xref:System.Web.DefaultHttpHandler.ProcessRequest%2A> method should not be called synchronously.</span></span> <span data-ttu-id="c855a-165">Classes que derivam de <xref:System.Web.DefaultHttpHandler> classe pode substituir o <xref:System.Web.DefaultHttpHandler.ProcessRequest%2A> para fornecer processamento de solicitação personalizado.</span><span class="sxs-lookup"><span data-stu-id="c855a-165">Classes that are derived from the <xref:System.Web.DefaultHttpHandler> class can override the <xref:System.Web.DefaultHttpHandler.ProcessRequest%2A> to provide customized request processing.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c855a-166">O <see cref="M:System.Web.DefaultHttpHandler.ProcessRequest(System.Web.HttpContext)" /> é chamado de forma síncrona.</span><span class="sxs-lookup"><span data-stu-id="c855a-166">The <see cref="M:System.Web.DefaultHttpHandler.ProcessRequest(System.Web.HttpContext)" /> is called synchronously.</span></span></exception>
        <altmember cref="M:System.Web.IHttpHandler.ProcessRequest(System.Web.HttpContext)" />
      </Docs>
    </Member>
  </Members>
</Type>