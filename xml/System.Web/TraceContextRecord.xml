<Type Name="TraceContextRecord" FullName="System.Web.TraceContextRecord">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fe544be2279fa289b6685d54b1d4d99179df41ff" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37528314" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class TraceContextRecord" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TraceContextRecord extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.TraceContextRecord" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TraceContextRecord" />
  <TypeSignature Language="C++ CLI" Value="public ref class TraceContextRecord sealed" />
  <TypeSignature Language="F#" Value="type TraceContextRecord = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Representa uma mensagem de rastreamento do ASP.NET e nenhum dado associado.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.TraceContextRecord> objeto encapsula a mensagem de rastreamento, categoria, qualquer associada <xref:System.Exception>, e se o registro de rastreamento foi gravado pelo <xref:System.Web.TraceContext.Warn%2A?displayProperty=nameWithType> método.  
  
 Todas as chamadas para o <xref:System.Web.TraceContext.Write%2A?displayProperty=nameWithType> e <xref:System.Web.TraceContext.Warn%2A?displayProperty=nameWithType> métodos gera um <xref:System.Web.TraceContextRecord> objeto que é adicionado ao <xref:System.Web.TraceContextEventArgs.TraceRecords%2A?displayProperty=nameWithType> coleção de mensagens. Você pode acessar a coleção de registros manipulando o <xref:System.Web.TraceContext.TraceFinished> eventos.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como você pode registrar um <xref:System.Web.TraceContextEventHandler> delegado para manipular o <xref:System.Web.TraceContext.TraceFinished> eventos. Neste exemplo, o `OnTraceFinished` método acessa a coleção de <xref:System.Web.TraceContextRecord> objetos por meio de <xref:System.Web.TraceContextEventArgs.TraceRecords%2A> propriedade, itera-los e os grava no fluxo de resposta.  
  
 [!code-aspx-csharp[System.Web.Trace_3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Trace_3/CS/form3cs.aspx#1)]
 [!code-aspx-vb[System.Web.Trace_3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Trace_3/VB/form3vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.TraceContextEventArgs" />
    <altmember cref="T:System.Web.TraceContextEventHandler" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TraceContextRecord (string category, string msg, bool isWarning, Exception errorInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string category, string msg, bool isWarning, class System.Exception errorInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.TraceContextRecord.#ctor(System.String,System.String,System.Boolean,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (category As String, msg As String, isWarning As Boolean, errorInfo As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TraceContextRecord(System::String ^ category, System::String ^ msg, bool isWarning, Exception ^ errorInfo);" />
      <MemberSignature Language="F#" Value="new System.Web.TraceContextRecord : string * string * bool * Exception -&gt; System.Web.TraceContextRecord" Usage="new System.Web.TraceContextRecord (category, msg, isWarning, errorInfo)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="category" Type="System.String" />
        <Parameter Name="msg" Type="System.String" />
        <Parameter Name="isWarning" Type="System.Boolean" />
        <Parameter Name="errorInfo" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="category">A categoria de rastreamento que recebe a mensagem.</param>
        <param name="msg">A mensagem de rastreamento.</param>
        <param name="isWarning">
          <see langword="true" /> se o método associado ao <see cref="T:System.Web.TraceContextRecord" /> é método <see cref="Overload:System.Web.TraceContext.Warn" />; <see langword="false" /> se o método de rastreamento é o método <see cref="Overload:System.Web.TraceContext.Write" />.</param>
        <param name="errorInfo">Um objeto <see cref="T:System.Exception" /> que contém informações de erro adicionais.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.TraceContextRecord" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Todas as chamadas para o <xref:System.Web.TraceContext.Write%2A?displayProperty=nameWithType> e <xref:System.Web.TraceContext.Warn%2A?displayProperty=nameWithType> métodos gera um <xref:System.Web.TraceContextRecord> objeto que é adicionado ao <xref:System.Web.TraceContextEventArgs.TraceRecords%2A?displayProperty=nameWithType> coleção de mensagens. O <xref:System.Web.TraceContext.Warn%2A> conjuntos de chamada de método de <xref:System.Web.TraceContextRecord.IsWarning%2A> propriedade a ser `true`, enquanto o <xref:System.Web.TraceContext.Write%2A> chamadas de método defini-lo como `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Category">
      <MemberSignature Language="C#" Value="public string Category { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Category" />
      <MemberSignature Language="DocId" Value="P:System.Web.TraceContextRecord.Category" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Category As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Category { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Category : string" Usage="System.Web.TraceContextRecord.Category" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém a categoria definida pelo usuário para o registro de rastreamento.</summary>
        <value>Uma cadeia de caracteres que representa uma categoria para o registro de rastreamento.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A categoria é usada para organizar melhor as mensagens de rastreamento em grupos reconhecíveis, mas pode ser qualquer cadeia de caracteres. O <xref:System.Web.TraceContext> classe usa <xref:System.String.Empty?displayProperty=nameWithType> como sua categoria padrão para métodos que usam apenas um `message` parâmetro. A categoria padrão para o ASP.NET, que grava vários registros de rastreamento quando o rastreamento está habilitado, é "aspx.page".  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como acessar o <xref:System.Web.TraceContextRecord.Category%2A> propriedade de um <xref:System.Web.TraceContextRecord>e imprimi-lo e a mensagem de rastreamento associado ao `Response` stream.  
  
 [!code-aspx-csharp[System.Web.Trace_5#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Trace_5/CS/form5cs.aspx#1)]
 [!code-aspx-vb[System.Web.Trace_5#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Trace_5/VB/form5vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorInfo">
      <MemberSignature Language="C#" Value="public Exception ErrorInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception ErrorInfo" />
      <MemberSignature Language="DocId" Value="P:System.Web.TraceContextRecord.ErrorInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ErrorInfo As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ ErrorInfo { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ErrorInfo : Exception" Usage="System.Web.TraceContextRecord.ErrorInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o <see cref="T:System.Exception" /> associado ao registro de rastreamento, se houver um disponível.</summary>
        <value>Um <see cref="T:System.Exception" /> associado com o registro de rastreamento, se houver um, ou <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Você pode incluir uma exceção em um registro de rastreamento, se você estiver usando o rastreamento para depurar um aplicativo ou para solucionar o erro e tratamento de exceções. O <xref:System.Web.TraceContextRecord.ErrorInfo%2A> é de propriedade `null` quando o registro de rastreamento está associado com um dos <xref:System.Web.TraceContext> métodos que não tem uma explícita `errorInfo` parâmetro ou nenhuma exceção é fornecida.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsWarning">
      <MemberSignature Language="C#" Value="public bool IsWarning { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWarning" />
      <MemberSignature Language="DocId" Value="P:System.Web.TraceContextRecord.IsWarning" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsWarning As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsWarning { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsWarning : bool" Usage="System.Web.TraceContextRecord.IsWarning" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um valor que indica se o registro de rastreamento está associado a uma chamada de método <see cref="Overload:System.Web.TraceContext.Warn" />.</summary>
        <value>
          <see langword="true" /> Se o <see cref="T:System.Web.TraceContextRecord" /> está associado a <see cref="Overload:System.Web.TraceContext.Warn" /> chamada de método; caso contrário, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo de código a seguir demonstra como verificar a <xref:System.Web.TraceContextRecord.IsWarning%2A> propriedade de um <xref:System.Web.TraceContextRecord> para determinar se a mensagem que contém o registro foi escrita por um <xref:System.Web.TraceContext.Warn%2A> ou <xref:System.Web.TraceContext.Write%2A> chamada de método. Se o registro de rastreamento é uma mensagem de aviso, outra ação será executada que se ele for uma mensagem de erro.  
  
 [!code-aspx-csharp[System.Web.Trace_4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Trace_4/CS/form4cs.aspx#1)]
 [!code-aspx-vb[System.Web.Trace_4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Trace_4/VB/form4vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Message">
      <MemberSignature Language="C#" Value="public string Message { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Message" />
      <MemberSignature Language="DocId" Value="P:System.Web.TraceContextRecord.Message" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Message As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Message { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Message : string" Usage="System.Web.TraceContextRecord.Message" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém a mensagem de rastreamento definida pelo usuário.</summary>
        <value>Uma cadeia de caracteres que representa uma mensagem para o registro de rastreamento.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A mensagem pode ser qualquer cadeia de caracteres e é usada para gravar informações de rastreamento detalhadas. Ele corresponde ao parâmetro de mensagem que é passado para o <xref:System.Web.TraceContext.Write%2A?displayProperty=nameWithType> e <xref:System.Web.TraceContext.Warn%2A?displayProperty=nameWithType> métodos. As informações podem ser valores de tempo de execução, as mensagens para orientar você e orientá-lo durante a execução de um programa ou outros dados de diagnóstico.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como acessar o <xref:System.Web.TraceContextRecord.Message%2A> propriedade de um <xref:System.Web.TraceContextRecord>e imprimi-lo para o `Response` stream.  
  
 [!code-aspx-csharp[System.Web.Trace_4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Trace_4/CS/form4cs.aspx#1)]
 [!code-aspx-vb[System.Web.Trace_4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Trace_4/VB/form4vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>