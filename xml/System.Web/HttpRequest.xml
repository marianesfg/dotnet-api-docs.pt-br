<Type Name="HttpRequest" FullName="System.Web.HttpRequest">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="48982b0cd7a40f21c7ebc1535d74a9dc862f068e" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30610620" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class HttpRequest" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpRequest extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.HttpRequest" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpRequest" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpRequest sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="86bc1-101">Permite que o ASP.NET leia os valores HTTP enviados por um cliente durante uma solicitação da Web.</span>
      <span class="sxs-lookup">
        <span data-stu-id="86bc1-101">Enables ASP.NET to read the HTTP values sent by a client during a Web request.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86bc1-102">Os métodos e propriedades do <xref:System.Web.HttpRequest> classe são expostas por meio de `Request` propriedades do <xref:System.Web.HttpApplication>, <xref:System.Web.HttpContext>, <xref:System.Web.UI.Page>, e <xref:System.Web.UI.UserControl> classes.</span><span class="sxs-lookup"><span data-stu-id="86bc1-102">The methods and properties of the <xref:System.Web.HttpRequest> class are exposed through the `Request` properties of the <xref:System.Web.HttpApplication>, <xref:System.Web.HttpContext>, <xref:System.Web.UI.Page>, and <xref:System.Web.UI.UserControl> classes.</span></span>  
  
 <span data-ttu-id="86bc1-103">Para acessar dados do <xref:System.Web.HttpRequest.QueryString%2A>, <xref:System.Web.HttpRequest.Form%2A>, <xref:System.Web.HttpRequest.Cookies%2A>, ou <xref:System.Web.HttpRequest.ServerVariables%2A> coleções, você pode escrever `Request["key"]`, conforme mostrado no exemplo para o <xref:System.Web.HttpRequest.QueryString%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="86bc1-103">To access data from the <xref:System.Web.HttpRequest.QueryString%2A>, <xref:System.Web.HttpRequest.Form%2A>, <xref:System.Web.HttpRequest.Cookies%2A>, or <xref:System.Web.HttpRequest.ServerVariables%2A> collections, you can write `Request["key"]`, as shown in the example for the <xref:System.Web.HttpRequest.QueryString%2A> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="86bc1-104">Suporte a Unicode para <xref:System.Web.HttpRequest> membros de classe requer o IIS versão 6.0 ou posterior.</span><span class="sxs-lookup"><span data-stu-id="86bc1-104">Unicode support for <xref:System.Web.HttpRequest> class members requires IIS version 6.0 or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86bc1-105">Acesso de exemplos a seguir o <xref:System.Web.HttpRequest> instância para a solicitação atual usando o <xref:System.Web.UI.Page.Request%2A> propriedade o <xref:System.Web.UI.Page> classe.</span><span class="sxs-lookup"><span data-stu-id="86bc1-105">The following examples access the <xref:System.Web.HttpRequest> instance for the current request by using the <xref:System.Web.UI.Page.Request%2A> property of the <xref:System.Web.UI.Page> class.</span></span>  
  
 <span data-ttu-id="86bc1-106">Você pode usar a sintaxe simplificada para acessar dados a partir de <xref:System.Web.HttpRequest.QueryString%2A>, <xref:System.Web.HttpRequest.Form%2A>, <xref:System.Web.HttpRequest.Cookies%2A>, ou <xref:System.Web.HttpRequest.ServerVariables%2A> coleções.</span><span class="sxs-lookup"><span data-stu-id="86bc1-106">You can use simplified syntax for accessing data from the <xref:System.Web.HttpRequest.QueryString%2A>, <xref:System.Web.HttpRequest.Form%2A>, <xref:System.Web.HttpRequest.Cookies%2A>, or <xref:System.Web.HttpRequest.ServerVariables%2A> collections.</span></span> <span data-ttu-id="86bc1-107">Você pode escrever `Request["key"]`.</span><span class="sxs-lookup"><span data-stu-id="86bc1-107">You can write `Request["key"]`.</span></span>  
  
 <span data-ttu-id="86bc1-108">O primeiro exemplo mostra como recuperar um valor de cadeia de caracteres de consulta ao carregar uma página.</span><span class="sxs-lookup"><span data-stu-id="86bc1-108">The first example shows how to retrieve a query string value when loading a page.</span></span>  
  
```csharp  
public partial class AddToCart : Page  
{  
    protected void Page_Load(object sender, EventArgs e)  
    {  
        string rawId = Request["ProductID"];  
        int productId;  
        if (!String.IsNullOrEmpty(rawId) && int.TryParse(rawId, out productId))  
        {  
            using (ShoppingCartActions usersShoppingCart = new ShoppingCartActions())  
            {  
                usersShoppingCart.AddToCart(productId);  
            }  
        }  
        else  
        {  
            throw new Exception("Tried to call AddToCart.aspx without setting a ProductId.");  
        }  
        Response.Redirect("ShoppingCart.aspx");  
    }  
}  
```  
  
```vb  
Public Class AddToCart  
    Inherits Page  
  
    Protected Sub Page_Load(ByVal sender As Object, ByVal e As EventArgs) Handles Me.Load  
        Dim rawId = Request("ProductID")  
        Dim productId As Integer  
        If Not String.IsNullOrEmpty(rawId) And Integer.TryParse(rawId, productId) Then  
            Using usersShoppingCart As New ShoppingCartActions()  
                usersShoppingCart.AddToCart(productId)  
            End Using  
  
        Else  
            Throw New Exception("Tried to call AddToCart.aspx without setting a ProductId.")  
        End If  
        Response.Redirect("ShoppingCart.aspx")  
    End Sub  
End Class  
```  
  
 <span data-ttu-id="86bc1-109">O exemplo a seguir mostra como verificar se a solicitação é autenticada e recuperar a URL bruta.</span><span class="sxs-lookup"><span data-stu-id="86bc1-109">The next example shows how to check if the request is authenticated and retrieve the raw URL.</span></span>  
  
```csharp  
public partial class RestrictedPage : Page  
{  
    protected void Page_Load(object sender, EventArgs e)  
    {  
        if (!Request.IsAuthenticated)  
        {  
            var rawUrl = Request.RawUrl;  
            Response.Redirect("/Account/Login?ru=" + Server.HtmlEncode(rawUrl));  
        }  
    }  
}  
```  
  
```vb  
Public Class RestrictedPage  
    Inherits Page  
  
    Protected Sub Page_Load(ByVal sender As Object, ByVal e As EventArgs) Handles Me.Load  
        If Not Request.IsAuthenticated Then  
            Dim rawUrl = Request.RawUrl  
            Response.Redirect("/Account/Login?ru=" + Server.HtmlEncode(rawUrl))  
        End If  
    End Sub  
End Class  
```  
  
 <span data-ttu-id="86bc1-110">Um projeto de site da Web do Visual Studio com o código-fonte está disponível para acompanhar este tópico: [baixar](http://go.microsoft.com/fwlink/?LinkID=191455).</span><span class="sxs-lookup"><span data-stu-id="86bc1-110">A Visual Studio Web site project with source code is available to accompany this topic: [Download](http://go.microsoft.com/fwlink/?LinkID=191455).</span></span>  
  
 <span data-ttu-id="86bc1-111">Este exemplo usa o <xref:System.IO.StreamWriter> classe para gravar os valores de várias <xref:System.Web.HttpRequest> propriedades para um arquivo de classe.</span><span class="sxs-lookup"><span data-stu-id="86bc1-111">This example uses the <xref:System.IO.StreamWriter> class to write the values of several <xref:System.Web.HttpRequest> class properties to a file.</span></span> <span data-ttu-id="86bc1-112">Para propriedades que são do tipo cadeia de caracteres, os valores são HTML codificado como eles são gravados no arquivo.</span><span class="sxs-lookup"><span data-stu-id="86bc1-112">For properties that are of type string, the values are HTML encoded as they are written to the file.</span></span> <span data-ttu-id="86bc1-113">Propriedades que representam uma coleção retornarão pelo e cada par chave/valor que eles contêm é gravado no arquivo.</span><span class="sxs-lookup"><span data-stu-id="86bc1-113">Properties that represent a collection are looped through, and each key/value pair that they contain is written to the file.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="86bc1-114">Este exemplo tem uma caixa de texto que aceita a entrada do usuário, que é uma possível ameaça à segurança.</span><span class="sxs-lookup"><span data-stu-id="86bc1-114">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="86bc1-115">Por padrão, a páginas da Web ASP.NET validam a entrada do usuário não inclui elementos HTML ou script.</span><span class="sxs-lookup"><span data-stu-id="86bc1-115">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="86bc1-116">Para obter mais informações, consulte [Visão geral de explorações de script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span><span class="sxs-lookup"><span data-stu-id="86bc1-116">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpRequest_Sample1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#1)]
 [!code-aspx-vb[System.Web.HttpRequest_Sample1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpRequest (string filename, string url, string queryString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filename, string url, string queryString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filename As String, url As String, queryString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpRequest(System::String ^ filename, System::String ^ url, System::String ^ queryString);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="queryString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename">
          <span data-ttu-id="86bc1-117">O nome do arquivo associado à solicitação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-117">The name of the file associated with the request.</span>
          </span>
        </param>
        <param name="url">
          <span data-ttu-id="86bc1-118">As informações relacionadas à URL da solicitação atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-118">The information regarding the URL of the current request.</span>
          </span>
        </param>
        <param name="queryString">
          <span data-ttu-id="86bc1-119">A cadeia de caracteres de consulta inteira enviada com a solicitação (tudo após o <c>'?'</c>).</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-119">The entire query string sent with the request (everything after the <c>'?'</c>).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86bc1-120">Inicializa uma objeto <see cref="T:System.Web.HttpRequest" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-120">Initializes an <see cref="T:System.Web.HttpRequest" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86bc1-121">Você não precisa criar sua própria instância do <xref:System.Web.HttpRequest> classe.</span><span class="sxs-lookup"><span data-stu-id="86bc1-121">You do not need to create your own instance of the <xref:System.Web.HttpRequest> class.</span></span> <span data-ttu-id="86bc1-122">Os métodos e propriedades do <xref:System.Web.HttpRequest> classe são expostas por meio de `Request` propriedade do <xref:System.Web.HttpApplication>, <xref:System.Web.HttpContext>, <xref:System.Web.UI.Page>, e <xref:System.Web.UI.UserControl> classes.</span><span class="sxs-lookup"><span data-stu-id="86bc1-122">The methods and properties of the <xref:System.Web.HttpRequest> class are exposed through the `Request` property of the <xref:System.Web.HttpApplication>, <xref:System.Web.HttpContext>, <xref:System.Web.UI.Page>, and <xref:System.Web.UI.UserControl> classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.Abort" />
      <MemberSignature Language="VB.NET" Value="Public Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Abort();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="86bc1-123">Termina a conexão TCP subjacente de modo forçado, causando falha em eventuais E/Ss pendentes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-123">Forcibly terminates the underlying TCP connection, causing any outstanding I/O to fail.</span>
          </span>
          <span data-ttu-id="86bc1-124">Você pode usar esse método em resposta a um ataque por um cliente HTTP mal-intencionado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-124">You might use this method in response to an attack by a malicious HTTP client.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86bc1-125">Esse método é thread-safe.</span><span class="sxs-lookup"><span data-stu-id="86bc1-125">This method is thread-safe.</span></span> <span data-ttu-id="86bc1-126">Qualquer thread pode chamá-lo a qualquer momento.</span><span class="sxs-lookup"><span data-stu-id="86bc1-126">Any thread may call it at any time.</span></span>  
  
 <span data-ttu-id="86bc1-127">Esse método só pode ser usado no modo integrado.</span><span class="sxs-lookup"><span data-stu-id="86bc1-127">This method can only be used in integrated mode.</span></span> <span data-ttu-id="86bc1-128">Se você chamá-lo em modo clássico, uma exceção será lançada.</span><span class="sxs-lookup"><span data-stu-id="86bc1-128">If you invoke it in classic mode, an exception is thrown.</span></span> <span data-ttu-id="86bc1-129">Para determinar o modo de pipeline, use <xref:System.Web.HttpRuntime.UsingIntegratedPipeline%2A>.</span><span class="sxs-lookup"><span data-stu-id="86bc1-129">To determine the pipeline mode, use <xref:System.Web.HttpRuntime.UsingIntegratedPipeline%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptTypes">
      <MemberSignature Language="C#" Value="public string[] AcceptTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] AcceptTypes" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.AcceptTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AcceptTypes As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ AcceptTypes { cli::array &lt;System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86bc1-130">Obtém uma matriz de cadeia de caracteres de tipos de aceitação MIME do cliente com suporte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-130">Gets a string array of client-supported MIME accept types.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86bc1-131">Uma matriz de cadeia de caracteres de tipos de aceitação MIME do cliente com suporte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-131">A string array of client-supported MIME accept types.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="86bc1-132">O exemplo de código a seguir captura os vários valores retornados pelo <xref:System.Web.HttpRequest.AcceptTypes%2A> propriedade em uma variável de objeto e grava o número e o nome de cada valueto uma linha separada de HTTP de saída.</span><span class="sxs-lookup"><span data-stu-id="86bc1-132">The following code example captures the multiple values returned by the <xref:System.Web.HttpRequest.AcceptTypes%2A> property into an object variable and writes the number and name of each valueto a separate line of HTTP output.</span></span>  
  
 [!code-csharp[Classic HttpRequest.AcceptTypes Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.AcceptTypes Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.AcceptTypes Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.AcceptTypes Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AnonymousID">
      <MemberSignature Language="C#" Value="public string AnonymousID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AnonymousID" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.AnonymousID" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AnonymousID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AnonymousID { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86bc1-133">Obtém o identificador anônimo para o usuário, se houver.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-133">Gets the anonymous identifier for the user, if present.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86bc1-134">Uma cadeia de caracteres que representa o identificador de usuário anônimo atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-134">A string representing the current anonymous user identifier.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86bc1-135">O <xref:System.Web.HttpRequest.AnonymousID%2A> propriedade atribui um identificador exclusivo de vida útil longa para um usuário não autenticado, o que pode ser usado para acompanhar o usuário ou atribuir propriedades de perfil para o usuário sem armazenar dados em um `Session` objeto.</span><span class="sxs-lookup"><span data-stu-id="86bc1-135">The <xref:System.Web.HttpRequest.AnonymousID%2A> property assigns a long-lived unique identifier to a non-authenticated user, which can be used to track the user or assign profile properties to that user without storing data in a `Session` object.</span></span> <span data-ttu-id="86bc1-136">Por padrão, o <xref:System.Web.HttpRequest.AnonymousID%2A> propriedade é controlada usando um cookie, mas ele pode ser definido para usar o URI quando o <xref:System.Web.Configuration.SessionStateSection.Cookieless%2A> atributo na seção de configuração identificação anônima é definido como o <xref:System.Web.HttpCookieMode.UseUri>, <xref:System.Web.HttpCookieMode.UseDeviceProfile>, ou <xref:System.Web.HttpCookieMode.AutoDetect> valor.</span><span class="sxs-lookup"><span data-stu-id="86bc1-136">By default, the <xref:System.Web.HttpRequest.AnonymousID%2A> property is tracked using a cookie, but it can be set to use the URI when the <xref:System.Web.Configuration.SessionStateSection.Cookieless%2A> attribute in the anonymous identification configuration section is set to either the <xref:System.Web.HttpCookieMode.UseUri>, <xref:System.Web.HttpCookieMode.UseDeviceProfile>, or <xref:System.Web.HttpCookieMode.AutoDetect> value.</span></span> <span data-ttu-id="86bc1-137">Você deve limpar explicitamente o cookie, se você não quiser disponível, por exemplo quando um usuário anônimo é autenticado.</span><span class="sxs-lookup"><span data-stu-id="86bc1-137">You must explicitly clear the cookie if you no longer want it available, for example when an anonymous user is authenticated.</span></span>  
  
 <span data-ttu-id="86bc1-138">Identificação anônima é usada quando é necessário para identificar as entidades que não são autenticadas e autorização é necessária.</span><span class="sxs-lookup"><span data-stu-id="86bc1-138">Anonymous identification is used when there is a need to identify entities that are not authenticated and when authorization is required.</span></span> <span data-ttu-id="86bc1-139">Para obter mais informações, consulte [anonymousIdentification Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/library/2bd927ef-9057-4703-9c55-4cfb6d7d0929)</span><span class="sxs-lookup"><span data-stu-id="86bc1-139">For more information, see [anonymousIdentification Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/library/2bd927ef-9057-4703-9c55-4cfb6d7d0929)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86bc1-140">O exemplo a seguir mostra como usar o <xref:System.Web.HttpRequest.AnonymousID%2A> propriedade manipulando o <xref:System.Web.Security.AnonymousIdentificationModule.Creating> eventos no arquivo global. asax.</span><span class="sxs-lookup"><span data-stu-id="86bc1-140">The following example shows how to use the <xref:System.Web.HttpRequest.AnonymousID%2A> property by handling the <xref:System.Web.Security.AnonymousIdentificationModule.Creating> event in the Global.asax file.</span></span> <span data-ttu-id="86bc1-141">Este exemplo tem duas partes:</span><span class="sxs-lookup"><span data-stu-id="86bc1-141">This example has two parts:</span></span>  
  
-   <span data-ttu-id="86bc1-142">Um método no arquivo global. asax que manipula o <xref:System.Web.Security.AnonymousIdentificationModule.Creating> evento.</span><span class="sxs-lookup"><span data-stu-id="86bc1-142">A method in the Global.asax file that handles the <xref:System.Web.Security.AnonymousIdentificationModule.Creating> event.</span></span>  
  
-   <span data-ttu-id="86bc1-143">Uma página de Web Forms.</span><span class="sxs-lookup"><span data-stu-id="86bc1-143">A Web Forms page.</span></span>  
  
 <span data-ttu-id="86bc1-144">A primeira parte do exemplo de código mostra como definir o <xref:System.Web.HttpRequest.AnonymousID%2A> propriedade manipulando o <xref:System.Web.Security.AnonymousIdentificationModule.Creating> eventos no arquivo global. asax.</span><span class="sxs-lookup"><span data-stu-id="86bc1-144">The first part of the code example shows how to set the <xref:System.Web.HttpRequest.AnonymousID%2A> property by handling the <xref:System.Web.Security.AnonymousIdentificationModule.Creating> event in the Global.asax file.</span></span> <span data-ttu-id="86bc1-145">O método chamado `AnonymousIdentification_Creating` define o <xref:System.Web.HttpRequest.AnonymousID%2A> propriedade quando uma identidade anônima é criada.</span><span class="sxs-lookup"><span data-stu-id="86bc1-145">The method that is named `AnonymousIdentification_Creating` sets the <xref:System.Web.HttpRequest.AnonymousID%2A> property when an anonymous ID is created.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_AnonymousID#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_AnonymousID/CS/global_asax.cs#2)]
 [!code-vb[System.Web.HttpRequest_AnonymousID#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_AnonymousID/vb/global_asax.vb#2)]  
  
 <span data-ttu-id="86bc1-146">A segunda parte do exemplo de código mostra como exibir o novo <xref:System.Web.HttpRequest.AnonymousID%2A> que é criado o `AnonymousIdentification_Creating` manipulador de eventos no exemplo anterior.</span><span class="sxs-lookup"><span data-stu-id="86bc1-146">The second part of the code example shows how to display the new <xref:System.Web.HttpRequest.AnonymousID%2A> that is created by the `AnonymousIdentification_Creating` event handler in the preceding example.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpRequest_AnonymousID#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_AnonymousID/CS/anonid_cs.aspx#1)]
 [!code-aspx-vb[System.Web.HttpRequest_AnonymousID#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_AnonymousID/vb/anonid_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpRequest.IsAuthenticated" />
        <altmember cref="E:System.Web.Security.AnonymousIdentificationModule.Creating" />
      </Docs>
    </Member>
    <Member MemberName="ApplicationPath">
      <MemberSignature Language="C#" Value="public string ApplicationPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.ApplicationPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ApplicationPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ApplicationPath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86bc1-147">Obtém o caminho raiz do aplicativo virtual do aplicativo ASP.NET no servidor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-147">Gets the ASP.NET application's virtual application root path on the server.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86bc1-148">O caminho virtual do aplicativo atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-148">The virtual path of the current application.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86bc1-149">Use essa propriedade para construir uma URL relativa à raiz do aplicativo de uma página ou controle de usuário da Web que não está no diretório raiz.</span><span class="sxs-lookup"><span data-stu-id="86bc1-149">Use this property to construct a URL relative to the application root from a page or Web user control that is not in the root directory.</span></span> <span data-ttu-id="86bc1-150">Isso permite que a páginas e controles compartilhados que existem em diferentes níveis de uma estrutura de diretórios para usar o mesmo código para vincular a recursos locais fixas no aplicativo.</span><span class="sxs-lookup"><span data-stu-id="86bc1-150">This allows pages and shared controls that exist at different levels of a directory structure to use the same code to link to resources at fixed locations in the application.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86bc1-151">O exemplo a seguir usa o <xref:System.IO.StreamWriter.Write%2A> método para a codificação HTML e, em seguida, gravar o valor da <xref:System.Web.HttpRequest.ApplicationPath%2A> propriedade para um arquivo de texto.</span><span class="sxs-lookup"><span data-stu-id="86bc1-151">The following example uses the <xref:System.IO.StreamWriter.Write%2A> method to HTML-encode and then write the value of the <xref:System.Web.HttpRequest.ApplicationPath%2A> property to a text file.</span></span> <span data-ttu-id="86bc1-152">Este exemplo de código é parte de um exemplo maior fornecido para a <xref:System.Web.HttpRequest> classe.</span><span class="sxs-lookup"><span data-stu-id="86bc1-152">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span> <span data-ttu-id="86bc1-153">Ele pressupõe a existência de um <xref:System.IO.StreamWriter> objeto chamado `sw`.</span><span class="sxs-lookup"><span data-stu-id="86bc1-153">It assumes the existence of a <xref:System.IO.StreamWriter> object named `sw`.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#2)]
 [!code-vb[System.Web.HttpRequest_Sample1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#2)]  
  
 <span data-ttu-id="86bc1-154">O exemplo a seguir usa o <xref:System.Web.HttpRequest.ApplicationPath%2A> propriedade programaticamente construir um caminho para um recurso que está em um local fixo no aplicativo.</span><span class="sxs-lookup"><span data-stu-id="86bc1-154">The following example uses the <xref:System.Web.HttpRequest.ApplicationPath%2A> property to programmatically construct a path to a resource that is in a fixed location in the application.</span></span> <span data-ttu-id="86bc1-155">A página que referencia o recurso não precisa estar localizado no mesmo diretório que o recurso.</span><span class="sxs-lookup"><span data-stu-id="86bc1-155">The page that references the resource does not have to be located in the same directory as the resource.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpRequest.ApplicationPath#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest.ApplicationPath/CS/ApplicationPath.aspx#2)]
 [!code-aspx-vb[System.Web.HttpRequest.ApplicationPath#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest.ApplicationPath/VB/ApplicationPath.aspx#2)]  
  
 <span data-ttu-id="86bc1-156">Se você executar esse exemplo em um aplicativo Web chamado WebSite1, `/WebSite1` será exibido como o valor de <xref:System.Web.HttpRequest.ApplicationPath%2A> propriedade e `/WebSite1/images/Image1.gif` será exibido como o caminho completo da imagem.</span><span class="sxs-lookup"><span data-stu-id="86bc1-156">If you run this example in a Web application that is named WebSite1,  `/WebSite1` will be displayed as the value of the <xref:System.Web.HttpRequest.ApplicationPath%2A> property and `/WebSite1/images/Image1.gif` will be displayed as the complete path of the image.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppRelativeCurrentExecutionFilePath">
      <MemberSignature Language="C#" Value="public string AppRelativeCurrentExecutionFilePath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AppRelativeCurrentExecutionFilePath" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AppRelativeCurrentExecutionFilePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AppRelativeCurrentExecutionFilePath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86bc1-157">Obtém o caminho virtual da raiz do aplicativo e o torna relativo usando a notação de til (~) para a raiz do aplicativo (como em “~/page.aspx”).</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-157">Gets the virtual path of the application root and makes it relative by using the tilde (~) notation for the application root (as in "~/page.aspx").</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86bc1-158">O caminho virtual da raiz do aplicativo da solicitação atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-158">The virtual path of the application root for the current request.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86bc1-159">Use essa propriedade para fornecer informações de URL que permanecerão a mesma mesmo se o aplicativo altera o local.</span><span class="sxs-lookup"><span data-stu-id="86bc1-159">Use this property to provide URL information that will stay the same even if the application changes location.</span></span> <span data-ttu-id="86bc1-160">Isso permite que o mesmo código de mapeamento de URL a ser usado em um ambiente de teste e no ambiente de implantação final, ou para ser usado por cópias de aplicativos da Web em domínios diferentes.</span><span class="sxs-lookup"><span data-stu-id="86bc1-160">This allows the same URL-mapping code to be used in a test environment and in the final deployment environment, or to be used by copies of Web applications in different domains.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86bc1-161">O exemplo a seguir usa o <xref:System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath%2A> propriedade para definir a URL de um <xref:System.Web.UI.WebControls.Image> controle a uma imagem no mesmo diretório que a página.</span><span class="sxs-lookup"><span data-stu-id="86bc1-161">The following example uses the <xref:System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath%2A> property to set the URL of an <xref:System.Web.UI.WebControls.Image> control to an image in the same directory as the page.</span></span> <span data-ttu-id="86bc1-162">Execute esta página em diferentes níveis de uma estrutura de diretórios para ver os resultante <xref:System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath%2A> valores de propriedade.</span><span class="sxs-lookup"><span data-stu-id="86bc1-162">Run this page at different levels of a directory structure to see the resulting <xref:System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath%2A> property values.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpRequest.AppRelativeCurrentExecutionPath#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest.AppRelativeCurrentExecutionPath/CS/AppRelativeCurrentExecutionPathCS.aspx#1)]
 [!code-aspx-vb[System.Web.HttpRequest.AppRelativeCurrentExecutionPath#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest.AppRelativeCurrentExecutionPath/VB/AppRelativeCurrentExecutionPathVB.aspx#1)]  
  
 <span data-ttu-id="86bc1-163">O exemplo a seguir usa o <xref:System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath%2A> propriedade para definir o caminho para um recurso, com base no caminho da página atual.</span><span class="sxs-lookup"><span data-stu-id="86bc1-163">The following example uses the <xref:System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath%2A> property to programmatically set the path to a resource, based on the current path of the page.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpRequest.ApplicationPath#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest.ApplicationPath/CS/apprelativecurrentexecutionfilepath.aspx#1)]
 [!code-aspx-vb[System.Web.HttpRequest.ApplicationPath#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest.ApplicationPath/VB/apprelativecurrentexecutionfilepath.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BinaryRead">
      <MemberSignature Language="C#" Value="public byte[] BinaryRead (int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] BinaryRead(int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.BinaryRead(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function BinaryRead (count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ BinaryRead(int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="count">
          <span data-ttu-id="86bc1-164">O número de bytes a serem lidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-164">The number of bytes to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86bc1-165">Executa uma leitura binária de um número especificado de bytes do fluxo de entrada atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-165">Performs a binary read of a specified number of bytes from the current input stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="86bc1-166">Uma matriz de bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-166">A byte array.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86bc1-167">O <xref:System.Web.HttpRequest.BinaryRead%2A> método é fornecido para compatibilidade com o ASP.</span><span class="sxs-lookup"><span data-stu-id="86bc1-167">The <xref:System.Web.HttpRequest.BinaryRead%2A> method is provided for compatibility with ASP.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="86bc1-168">
            <paramref name="count" /> é 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-168">
              <paramref name="count" /> is 0.</span>
          </span>
          <span data-ttu-id="86bc1-169">\- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-169">\- or -</span>
          </span>
          <span data-ttu-id="86bc1-170">
            <paramref name="count" /> é maior que o número de bytes disponível.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-170">
              <paramref name="count" /> is greater than the number of bytes available.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Browser">
      <MemberSignature Language="C#" Value="public System.Web.HttpBrowserCapabilities Browser { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpBrowserCapabilities Browser" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Browser" />
      <MemberSignature Language="VB.NET" Value="Public Property Browser As HttpBrowserCapabilities" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpBrowserCapabilities ^ Browser { System::Web::HttpBrowserCapabilities ^ get(); void set(System::Web::HttpBrowserCapabilities ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpBrowserCapabilities</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86bc1-171">Obtém ou define informações sobre as funcionalidades do navegador do cliente solicitante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-171">Gets or sets information about the requesting client's browser capabilities.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86bc1-172">Um objeto <see cref="T:System.Web.HttpBrowserCapabilities" /> que lista as funcionalidades do navegador do cliente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-172">An <see cref="T:System.Web.HttpBrowserCapabilities" /> object listing the capabilities of the client's browser.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="86bc1-173">O exemplo de código a seguir envia uma lista de recursos do navegador de volta para o cliente em uma página HTML.</span><span class="sxs-lookup"><span data-stu-id="86bc1-173">The following code example sends a list of the browser's capabilities back to the client in an HTML page.</span></span>  
  
 [!code-csharp[Classic HttpRequest.Browser Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.Browser Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.Browser Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.Browser Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Page.ClientTarget" />
        <altmember cref="T:System.Web.HttpBrowserCapabilities" />
        <altmember cref="P:System.Web.HttpRequest.UserAgent" />
      </Docs>
    </Member>
    <Member MemberName="ClientCertificate">
      <MemberSignature Language="C#" Value="public System.Web.HttpClientCertificate ClientCertificate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpClientCertificate ClientCertificate" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.ClientCertificate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientCertificate As HttpClientCertificate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpClientCertificate ^ ClientCertificate { System::Web::HttpClientCertificate ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpClientCertificate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86bc1-174">Obtém a atual certificado de segurança do cliente da solicitação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-174">Gets the current request's client security certificate.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86bc1-175">Um objeto <see cref="T:System.Web.HttpClientCertificate" /> que contém informações sobre as configurações de certificado de segurança do cliente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-175">An <see cref="T:System.Web.HttpClientCertificate" /> object containing information about the client's security certificate settings.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="86bc1-176">O exemplo de código a seguir envia as configurações de certificado do cliente para o cliente em uma página HTML.</span><span class="sxs-lookup"><span data-stu-id="86bc1-176">The following code example sends the client's certificate settings back to the client in an HTML page.</span></span>  
  
 [!code-csharp[Classic HttpRequest.ClientCertificate Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.ClientCertificate Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.ClientCertificate Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.ClientCertificate Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentEncoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding ContentEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding ContentEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.ContentEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property ContentEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ ContentEncoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86bc1-177">Obtém ou define o conjunto de caracteres do corpo da entidade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-177">Gets or sets the character set of the entity-body.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86bc1-178">Um objeto <see cref="T:System.Text.Encoding" /> que representa o conjunto de caracteres do cliente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-178">An <see cref="T:System.Text.Encoding" /> object representing the client's character set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86bc1-179">Codificação de conteúdo padrão pode ser especificado no [globalização Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/library/e2dffc8e-ebd2-439b-a2fd-e3ac5e620da7) de um arquivo de configuração.</span><span class="sxs-lookup"><span data-stu-id="86bc1-179">Default content encoding can be specified in the [globalization Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/library/e2dffc8e-ebd2-439b-a2fd-e3ac5e620da7) of a configuration file.</span></span> <span data-ttu-id="86bc1-180">Se a codificação de conteúdo também é especificado pelo cliente, as configurações padrão serão substituídas.</span><span class="sxs-lookup"><span data-stu-id="86bc1-180">If content encoding is also specified by the client, the default configuration settings are overridden.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86bc1-181">O exemplo de código a seguir atribui um valor que representa a descrição da HTTP codificação atual para uma variável de cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="86bc1-181">The following code example assigns a value representing the description of the current HTTP encoding to a string variable.</span></span>  
  
 [!code-csharp[Classic HttpRequest.ContentEncoding Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.ContentEncoding Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.ContentEncoding Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.ContentEncoding Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentLength">
      <MemberSignature Language="C#" Value="public int ContentLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ContentLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.ContentLength" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ContentLength { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86bc1-182">Especifica o tamanho, em bytes, do conteúdo enviado pelo cliente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-182">Specifies the length, in bytes, of content sent by the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86bc1-183">O tamanho, em bytes, do conteúdo enviado pelo cliente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-183">The length, in bytes, of content sent by the client.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="86bc1-184">O exemplo de código a seguir atribui o valor que representa o comprimento do conteúdo da solicitação de entrada para uma variável de inteiro.</span><span class="sxs-lookup"><span data-stu-id="86bc1-184">The following code example assigns the value representing the content length of the incoming request to an integer variable.</span></span>  
  
 [!code-csharp[Classic HttpRequest.ContentLength Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.ContentLength Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.ContentLength Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.ContentLength Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentType">
      <MemberSignature Language="C#" Value="public string ContentType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentType" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.ContentType" />
      <MemberSignature Language="VB.NET" Value="Public Property ContentType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContentType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86bc1-185">Obtém ou define o tipo de conteúdo MIME da solicitação recebida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-185">Gets or sets the MIME content type of the incoming request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86bc1-186">Uma cadeia de caracteres que representa o tipo de conteúdo MIME da solicitação recebida, por exemplo, "text/html".</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-186">A string representing the MIME content type of the incoming request, for example, "text/html".</span>
          </span>
          <span data-ttu-id="86bc1-187">Tipos MIME comuns adicionais incluem "audio.wav", "image/gif" e "application/pdf".</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-187">Additional common MIME types include "audio.wav", "image/gif", and "application/pdf".</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="86bc1-188">O exemplo de código a seguir atribui o valor que representa o tipo de conteúdo da solicitação de entrada para uma variável de cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="86bc1-188">The following code example assigns the value representing the content type of the incoming request to a string variable.</span></span>  
  
 [!code-csharp[Classic HttpRequest.ContentType Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.ContentType Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.ContentType Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.ContentType Example/VB/source.vb#1)]  
  
 <span data-ttu-id="86bc1-189">O exemplo a seguir mostra a saída que pode ser produzida por este código.</span><span class="sxs-lookup"><span data-stu-id="86bc1-189">The following example shows output that might be produced by this code.</span></span>  
  
 `GET`  
  
 `127.0.0.1`  
  
 `127.0.0.1`  
  
 `GET`  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cookies">
      <MemberSignature Language="C#" Value="public System.Web.HttpCookieCollection Cookies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpCookieCollection Cookies" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Cookies" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Cookies As HttpCookieCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpCookieCollection ^ Cookies { System::Web::HttpCookieCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpCookieCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86bc1-190">Obtém uma coleção de cookies enviados pelo cliente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-190">Gets a collection of cookies sent by the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86bc1-191">Um objeto <see cref="T:System.Web.HttpCookieCollection" /> que representa as variáveis de cookie do cliente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-191">An <see cref="T:System.Web.HttpCookieCollection" /> object representing the client's cookie variables.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86bc1-192">O ASP.NET inclui duas coleções de cookie intrínseco.</span><span class="sxs-lookup"><span data-stu-id="86bc1-192">ASP.NET includes two intrinsic cookie collections.</span></span> <span data-ttu-id="86bc1-193">A coleção acessada por meio de <xref:System.Web.HttpRequest.Cookies%2A> coleção de <xref:System.Web.HttpRequest> contém cookies transmitidos pelo cliente para o servidor no `Cookie` cabeçalho.</span><span class="sxs-lookup"><span data-stu-id="86bc1-193">The collection accessed through the <xref:System.Web.HttpRequest.Cookies%2A> collection of <xref:System.Web.HttpRequest> contains cookies transmitted by the client to the server in the `Cookie` header.</span></span> <span data-ttu-id="86bc1-194">A coleção acessada por meio de <xref:System.Web.HttpResponse.Cookies%2A> coleção de <xref:System.Web.HttpResponse> contém novos cookies criado no servidor e transmitidos para o cliente no `Set-Cookie` cabeçalho.</span><span class="sxs-lookup"><span data-stu-id="86bc1-194">The collection accessed through the <xref:System.Web.HttpResponse.Cookies%2A> collection of <xref:System.Web.HttpResponse> contains new cookies created on the server and transmitted to the client in the `Set-Cookie` header.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="86bc1-195">Depois de adicionar um cookie usando o <xref:System.Web.HttpResponse.Cookies%2A?displayProperty=nameWithType> coleção, o cookie é imediatamente disponível no <xref:System.Web.HttpRequest.Cookies%2A?displayProperty=nameWithType> coleção, mesmo se a resposta não foi enviada ao cliente.</span><span class="sxs-lookup"><span data-stu-id="86bc1-195">After you add a cookie by using the <xref:System.Web.HttpResponse.Cookies%2A?displayProperty=nameWithType> collection, the cookie is immediately available in the <xref:System.Web.HttpRequest.Cookies%2A?displayProperty=nameWithType> collection, even if the response has not been sent to the client.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86bc1-196">O exemplo de código a seguir executa um loop em todos os cookies enviados pelo cliente e envia o nome, data de expiração, o parâmetro de segurança e valores de cada cookie para a saída HTTP.</span><span class="sxs-lookup"><span data-stu-id="86bc1-196">The following code example loops through all cookies sent by the client and sends the name, expiration date, security parameter, and values of each cookie to the HTTP output.</span></span>  
  
 [!code-csharp[Classic HttpRequest.Cookies Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.Cookies Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.Cookies Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.Cookies Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpRequest.ValidateInput" />
        <altmember cref="P:System.Web.HttpRequest.Form" />
        <altmember cref="P:System.Web.HttpRequest.QueryString" />
      </Docs>
    </Member>
    <Member MemberName="CurrentExecutionFilePath">
      <MemberSignature Language="C#" Value="public string CurrentExecutionFilePath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CurrentExecutionFilePath" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.CurrentExecutionFilePath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentExecutionFilePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CurrentExecutionFilePath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86bc1-197">Obtém o caminho virtual da solicitação atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-197">Gets the virtual path of the current request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86bc1-198">O caminho virtual da solicitação atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-198">The virtual path of the current request.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86bc1-199"><xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A> Retorna o caminho do arquivo para o manipulador de página em execução no momento.</span><span class="sxs-lookup"><span data-stu-id="86bc1-199"><xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A> returns the file path to the currently executing page handler.</span></span> <span data-ttu-id="86bc1-200">Para cenários de redirecionamento usando <xref:System.Web.HttpServerUtility.Execute%2A> e <xref:System.Web.HttpServerUtility.Transfer%2A> métodos, isso significa que o <xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A> propriedade retorna o caminho para a página redirecionada para (página filho).</span><span class="sxs-lookup"><span data-stu-id="86bc1-200">For redirect scenarios using <xref:System.Web.HttpServerUtility.Execute%2A> and <xref:System.Web.HttpServerUtility.Transfer%2A> methods this means that the <xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A> property returns the path to the page redirected to (child page).</span></span> <span data-ttu-id="86bc1-201">No entanto, quando o cliente é redirecionado para outra página, o <xref:System.Web.HttpRequest.FilePath%2A> propriedade retorna o caminho para a página original.</span><span class="sxs-lookup"><span data-stu-id="86bc1-201">However, when the client is redirected to another page, the <xref:System.Web.HttpRequest.FilePath%2A> property returns the path to the original page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86bc1-202">O seguinte exemplo de código usa o <xref:System.Web.HttpUtility.HtmlEncode%2A> método para a codificação HTML o valor da <xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A> propriedade e o <xref:System.IO.TextWriter.WriteLine%2A> método para gravar o valor codificado no arquivo.</span><span class="sxs-lookup"><span data-stu-id="86bc1-202">The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the <xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file.</span></span> <span data-ttu-id="86bc1-203">Este exemplo de código é parte de um exemplo maior fornecido para a <xref:System.Web.HttpRequest> classe.</span><span class="sxs-lookup"><span data-stu-id="86bc1-203">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#2)]
 [!code-vb[System.Web.HttpRequest_Sample1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpRequest.FilePath" />
        <altmember cref="P:System.Web.HttpRequest.Path" />
        <altmember cref="P:System.Web.HttpRequest.PathInfo" />
        <altmember cref="M:System.Web.HttpServerUtility.Execute(System.String)" />
        <altmember cref="M:System.Web.HttpServerUtility.Transfer(System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="CurrentExecutionFilePathExtension">
      <MemberSignature Language="C#" Value="public string CurrentExecutionFilePathExtension { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CurrentExecutionFilePathExtension" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.CurrentExecutionFilePathExtension" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentExecutionFilePathExtension As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CurrentExecutionFilePathExtension { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86bc1-204">Obtém a extensão do nome do arquivo especificado na propriedade <see cref="P:System.Web.HttpRequest.CurrentExecutionFilePath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-204">Gets the extension of the file name that is specified in the <see cref="P:System.Web.HttpRequest.CurrentExecutionFilePath" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86bc1-205">A extensão do nome do arquivo especificado no <see cref="P:System.Web.HttpRequest.CurrentExecutionFilePath" /> propriedade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-205">The extension of the file name that is specified in the <see cref="P:System.Web.HttpRequest.CurrentExecutionFilePath" /> property.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FilePath">
      <MemberSignature Language="C#" Value="public string FilePath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FilePath" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.FilePath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FilePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FilePath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86bc1-206">Obtém o caminho virtual da solicitação atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-206">Gets the virtual path of the current request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86bc1-207">O caminho virtual da solicitação atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-207">The virtual path of the current request.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86bc1-208">O <xref:System.Web.HttpRequest.FilePath%2A> propriedade não inclui o <xref:System.Web.HttpRequest.PathInfo%2A> marcador.</span><span class="sxs-lookup"><span data-stu-id="86bc1-208">The <xref:System.Web.HttpRequest.FilePath%2A> property does not include the <xref:System.Web.HttpRequest.PathInfo%2A> trailer.</span></span> <span data-ttu-id="86bc1-209">Por exemplo, para a URL http://www.contoso.com/virdir/page.html/tail, o <xref:System.Web.HttpRequest.FilePath%2A> valor é /virdir/page.html.</span><span class="sxs-lookup"><span data-stu-id="86bc1-209">For example, for the URL http://www.contoso.com/virdir/page.html/tail, the <xref:System.Web.HttpRequest.FilePath%2A> value is /virdir/page.html.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86bc1-210">O seguinte exemplo de código usa o <xref:System.Web.HttpUtility.HtmlEncode%2A> método para a codificação HTML o valor da <xref:System.Web.HttpRequest.FilePath%2A> propriedade e o <xref:System.IO.TextWriter.WriteLine%2A> método para gravar o valor codificado no arquivo.</span><span class="sxs-lookup"><span data-stu-id="86bc1-210">The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the <xref:System.Web.HttpRequest.FilePath%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file.</span></span> <span data-ttu-id="86bc1-211">Este exemplo de código é parte de um exemplo maior fornecido para a <xref:System.Web.HttpRequest> classe.</span><span class="sxs-lookup"><span data-stu-id="86bc1-211">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#2)]
 [!code-vb[System.Web.HttpRequest_Sample1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpRequest.PathInfo" />
        <altmember cref="P:System.Web.HttpRequest.Path" />
      </Docs>
    </Member>
    <Member MemberName="Files">
      <MemberSignature Language="C#" Value="public System.Web.HttpFileCollection Files { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpFileCollection Files" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Files" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Files As HttpFileCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpFileCollection ^ Files { System::Web::HttpFileCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpFileCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86bc1-212">Obtém a coleção de arquivos carregados pelo cliente, no formato MIME de diversas partes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-212">Gets the collection of files uploaded by the client, in multipart MIME format.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86bc1-213">Um objeto <see cref="T:System.Web.HttpFileCollection" /> que representa uma coleção de arquivos carregados pelo cliente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-213">An <see cref="T:System.Web.HttpFileCollection" /> object representing a collection of files uploaded by the client.</span>
          </span>
          <span data-ttu-id="86bc1-214">Os itens do objeto <see cref="T:System.Web.HttpFileCollection" /> são do tipo <see cref="T:System.Web.HttpPostedFile" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-214">The items of the <see cref="T:System.Web.HttpFileCollection" /> object are of type <see cref="T:System.Web.HttpPostedFile" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86bc1-215">A coleção de arquivos é populada somente quando a solicitação HTTP `Content-Type` valor é "multipart/dados de formulário".</span><span class="sxs-lookup"><span data-stu-id="86bc1-215">The file collection is populated only when the HTTP request `Content-Type` value is "multipart/form-data".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86bc1-216">O exemplo de código a seguir exibe os nomes de todos os arquivos de <xref:System.Web.HttpRequest.Files%2A> coleção.</span><span class="sxs-lookup"><span data-stu-id="86bc1-216">The following code example displays the names of all files in the <xref:System.Web.HttpRequest.Files%2A> collection.</span></span>  
  
 [!code-csharp[Classic HttpRequest.Files Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.Files Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.Files Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.Files Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public System.IO.Stream Filter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream Filter" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Filter" />
      <MemberSignature Language="VB.NET" Value="Public Property Filter As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ Filter { System::IO::Stream ^ get(); void set(System::IO::Stream ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86bc1-217">Obtém ou define o filtro a ser usado ao ler o fluxo de entrada atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-217">Gets or sets the filter to use when reading the current input stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86bc1-218">Um objeto <see cref="T:System.IO.Stream" /> a ser usado como o filtro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-218">A <see cref="T:System.IO.Stream" /> object to be used as the filter.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="86bc1-219">O exemplo de código a seguir cria duas novas classes, `QQQ1` e `QQQ2` filtro a <xref:System.Web.HttpRequest.InputStream%2A>.</span><span class="sxs-lookup"><span data-stu-id="86bc1-219">The following code example creates two new classes, `QQQ1` and `QQQ2` that filter the <xref:System.Web.HttpRequest.InputStream%2A>.</span></span> <span data-ttu-id="86bc1-220">Colocar as classes no arquivo global. asax no diretório de um aplicativo ASP.NET para que todas as entradas de todas as páginas da Web ASP.NET no aplicativo serão filtradas.</span><span class="sxs-lookup"><span data-stu-id="86bc1-220">Put the classes into the Global.asax file in an ASP.NET application's directory so that all input for all ASP.NET Web pages in the application will be filtered.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpRequest.Filter#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest.Filter/CS/systemwebhttprequestfilter.cs.aspx#1)]
 [!code-aspx-vb[System.Web.HttpRequest.Filter#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest.Filter/VB/systemwebhttprequestfilter.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="86bc1-221">O <see cref="T:System.IO.Stream" /> especificado é inválido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-221">The specified <see cref="T:System.IO.Stream" /> is invalid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Form">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameValueCollection Form { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection Form" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Form" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Form As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameValueCollection ^ Form { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86bc1-222">Obtém uma coleção de variáveis de formulário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-222">Gets a collection of form variables.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86bc1-223">Um <see cref="T:System.Collections.Specialized.NameValueCollection" /> que representa uma coleção de variáveis de formulário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-223">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> representing a collection of form variables.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86bc1-224">O <xref:System.Web.HttpRequest.Form%2A> propriedade é preenchida quando a solicitação HTTP `Content-Type` valor é "application/x-www-form-urlencoded" ou "multipart/dados de formulário".</span><span class="sxs-lookup"><span data-stu-id="86bc1-224">The <xref:System.Web.HttpRequest.Form%2A> property is populated when the HTTP request `Content-Type` value is either "application/x-www-form-urlencoded" or "multipart/form-data".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86bc1-225">O exemplo a seguir mostra como ler os valores na coleção de formulário postado a partir de um navegador.</span><span class="sxs-lookup"><span data-stu-id="86bc1-225">The following example shows how to read the values in the form collection posted from a browser.</span></span> <span data-ttu-id="86bc1-226">Cada par de nome/valor na coleção representa um controle no formulário e seu valor.</span><span class="sxs-lookup"><span data-stu-id="86bc1-226">Each name/value pair in the collection represents a control in the form and its value.</span></span>  
  
 [!code-csharp[Classic HttpRequest.Form Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.Form Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.Form Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.Form Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpRequest.ValidateInput" />
        <altmember cref="P:System.Web.HttpRequest.Cookies" />
        <altmember cref="P:System.Web.HttpRequest.QueryString" />
      </Docs>
    </Member>
    <Member MemberName="GetBufferedInputStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream GetBufferedInputStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream GetBufferedInputStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.GetBufferedInputStream" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBufferedInputStream () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ GetBufferedInputStream();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="86bc1-227">Obtém um objeto <see cref="T:System.IO.Stream" /> que pode ser usado para ler o corpo da entidade HTTP de entrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-227">Gets a <see cref="T:System.IO.Stream" /> object that can be used to read the incoming HTTP entity body.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="86bc1-228">Um objeto <see cref="T:System.IO.Stream" /> que pode ser usado para ler o corpo da entidade HTTP de entrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-228">A <see cref="T:System.IO.Stream" /> object that can be used to read the incoming HTTP entity body.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86bc1-229">Esse método é idêntico ao <xref:System.Web.HttpRequest.GetBufferlessInputStream%2A> exceto que ele também copia os bytes são lidos para o armazenamento interno que é usado pelo ASP.NET para preencher o <xref:System.Web.HttpRequest.Form%2A>, <xref:System.Web.HttpRequest.Files%2A>, e <xref:System.Web.HttpRequest.InputStream%2A> propriedades.</span><span class="sxs-lookup"><span data-stu-id="86bc1-229">This method is identical to <xref:System.Web.HttpRequest.GetBufferlessInputStream%2A> except that it also copies the bytes that are read to the internal storage that is used by ASP.NET to populate the <xref:System.Web.HttpRequest.Form%2A>, <xref:System.Web.HttpRequest.Files%2A>, and <xref:System.Web.HttpRequest.InputStream%2A> properties.</span></span> <span data-ttu-id="86bc1-230">Como essas informações são preservadas, código downstream como páginas Web Forms do ASP.NET (arquivos .aspx) será executado com êxito.</span><span class="sxs-lookup"><span data-stu-id="86bc1-230">Because this information is preserved, downstream code such as ASP.NET Web Forms pages (.aspx files) will run successfully.</span></span> <span data-ttu-id="86bc1-231">Não é esse o caso do método <xref:System.Web.HttpRequest.GetBufferlessInputStream%2A>.</span><span class="sxs-lookup"><span data-stu-id="86bc1-231">This is not the case with the <xref:System.Web.HttpRequest.GetBufferlessInputStream%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="86bc1-232">O corpo da entidade da solicitação já foi carregado e analisado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-232">The request's entity body has already been loaded and parsed.</span>
          </span>
          <span data-ttu-id="86bc1-233">Veja alguns exemplos de propriedades que fazem o corpo da entidade ser carregado e analisado:</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-233">Examples of properties that cause the entity body to be loaded and parsed include the following:</span>
          </span>  
  
-   <span data-ttu-id="86bc1-234">A propriedade de <see cref="P:System.Web.HttpRequest.Form" /> .</span><span class="sxs-lookup"><span data-stu-id="86bc1-234">The <see cref="P:System.Web.HttpRequest.Form" /> property.</span></span>  
  
-   <span data-ttu-id="86bc1-235">A propriedade de <see cref="P:System.Web.HttpRequest.Files" /> .</span><span class="sxs-lookup"><span data-stu-id="86bc1-235">The <see cref="P:System.Web.HttpRequest.Files" /> property.</span></span>  
  
-   <span data-ttu-id="86bc1-236">A propriedade de <see cref="P:System.Web.HttpRequest.InputStream" /> .</span><span class="sxs-lookup"><span data-stu-id="86bc1-236">The <see cref="P:System.Web.HttpRequest.InputStream" /> property.</span></span>  
  
-   <span data-ttu-id="86bc1-237">O método <see cref="M:System.Web.HttpRequest.GetBufferlessInputStream" />.</span><span class="sxs-lookup"><span data-stu-id="86bc1-237">The <see cref="M:System.Web.HttpRequest.GetBufferlessInputStream" /> method.</span></span><span data-ttu-id="86bc1-238">Para evitar essa exceção, chame o método <see cref="P:System.Web.HttpRequest.ReadEntityBodyMode" /> primeiro.</span><span class="sxs-lookup"><span data-stu-id="86bc1-238">To avoid this exception, call the <see cref="P:System.Web.HttpRequest.ReadEntityBodyMode" /> method first.</span></span><span data-ttu-id="86bc1-239">Essa exceção também será gerada se o cliente se desconectar enquanto o corpo da entidade é lido.</span><span class="sxs-lookup"><span data-stu-id="86bc1-239">This exception is also thrown if the client disconnects while the entity body is being read.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetBufferlessInputStream">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="86bc1-240">Obtém um objeto <see cref="T:System.IO.Stream" /> que pode ser usado para ler o corpo da entidade HTTP de entrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-240">Gets a <see cref="T:System.IO.Stream" /> object that can be used to read the incoming HTTP entity body.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetBufferlessInputStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream GetBufferlessInputStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream GetBufferlessInputStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.GetBufferlessInputStream" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBufferlessInputStream () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ GetBufferlessInputStream();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="86bc1-241">Obtém um objeto <see cref="T:System.IO.Stream" /> que pode ser usado para ler o corpo da entidade HTTP de entrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-241">Gets a <see cref="T:System.IO.Stream" /> object that can be used to read the incoming HTTP entity body.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="86bc1-242">Um objeto <see cref="T:System.IO.Stream" /> que pode ser usado para ler o corpo da entidade HTTP de entrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-242">A <see cref="T:System.IO.Stream" /> object that can be used to read the incoming HTTP entity body.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86bc1-243">Esse método fornece uma alternativa ao uso de <xref:System.Web.HttpRequest.InputStream%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="86bc1-243">This method provides an alternative to using the <xref:System.Web.HttpRequest.InputStream%2A> property.</span></span> <span data-ttu-id="86bc1-244">O <xref:System.Web.HttpRequest.InputStream%2A> propriedade aguarda até que toda a solicitação foi recebida antes de retornar um <xref:System.IO.Stream> objeto.</span><span class="sxs-lookup"><span data-stu-id="86bc1-244">The <xref:System.Web.HttpRequest.InputStream%2A> property waits until the whole request has been received before it returns a <xref:System.IO.Stream> object.</span></span> <span data-ttu-id="86bc1-245">Em contraste, o <xref:System.Web.HttpRequest.GetBufferlessInputStream%2A> método retorna o <xref:System.IO.Stream> objeto imediatamente.</span><span class="sxs-lookup"><span data-stu-id="86bc1-245">In contrast, the <xref:System.Web.HttpRequest.GetBufferlessInputStream%2A> method returns the <xref:System.IO.Stream> object immediately.</span></span> <span data-ttu-id="86bc1-246">Você pode usar o método para iniciar o processamento do corpo da entidade antes de todo o conteúdo do corpo foram recebido.</span><span class="sxs-lookup"><span data-stu-id="86bc1-246">You can use the method to begin processing the entity body before the complete contents of the body have been received.</span></span>  
  
 <span data-ttu-id="86bc1-247">O corpo da entidade (ou máximo você solicitar e foi recebida) é retornado somente quando você usar o objeto que é retornado por este método para ler o fluxo chamando métodos, como o <xref:System.IO.Stream.Read%2A> método.</span><span class="sxs-lookup"><span data-stu-id="86bc1-247">The entity body (or as much of it as you request and has been received) is returned only when you use the object that is returned by this method to read the stream, by calling methods such as the <xref:System.IO.Stream.Read%2A> method.</span></span> <span data-ttu-id="86bc1-248">Usar parâmetros de <xref:System.IO.Stream.Read%2A> método para especificar a quantidade de ler o corpo da entidade.</span><span class="sxs-lookup"><span data-stu-id="86bc1-248">You use parameters of the <xref:System.IO.Stream.Read%2A> method to specify how much of the entity body to read.</span></span>  
  
 <span data-ttu-id="86bc1-249">O <xref:System.IO.Stream> objeto retornado pelo ASP.NET deste método dá suporte a métodos de leitura síncronos e assíncronos.</span><span class="sxs-lookup"><span data-stu-id="86bc1-249">The <xref:System.IO.Stream> object returned by ASP.NET from this method supports both synchronous and asynchronous read methods.</span></span> <span data-ttu-id="86bc1-250">O <xref:System.IO.Stream> objeto implementa ambos o <xref:System.IO.Stream.BeginRead%2A> e <xref:System.IO.Stream.EndRead%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="86bc1-250">The <xref:System.IO.Stream> object implements both the <xref:System.IO.Stream.BeginRead%2A> and <xref:System.IO.Stream.EndRead%2A> methods.</span></span> <span data-ttu-id="86bc1-251">Os métodos assíncronos permitem que você leia assincronamente a entidade de solicitação em partes, ao ASP.NET libera o thread atual entre cada iteração de um loop de leitura assíncrona.</span><span class="sxs-lookup"><span data-stu-id="86bc1-251">The asynchronous methods let you asynchronously read the request entity in chunks, while ASP.NET releases the current thread in between each iteration of an asynchronous read loop.</span></span>  
  
 <span data-ttu-id="86bc1-252">Esse método pode ser útil se a solicitação está carregando um arquivo grande e você deseja começar a acessar o conteúdo do arquivo antes que o carregamento for concluído.</span><span class="sxs-lookup"><span data-stu-id="86bc1-252">This method can be useful if the request is uploading a large file and you want to begin accessing the file contents before the upload is finished.</span></span> <span data-ttu-id="86bc1-253">No entanto, você deve apenas usar esse método para cenários em que você deseja assumir todo o processamento do corpo da entidade.</span><span class="sxs-lookup"><span data-stu-id="86bc1-253">However, you should only use this method for scenarios where you want to take over all processing of the entity body.</span></span> <span data-ttu-id="86bc1-254">Isso significa que você não pode usar esse método em uma página. aspx, porque no momento em que uma página. aspx é executado, o corpo da entidade já foi lido.</span><span class="sxs-lookup"><span data-stu-id="86bc1-254">This means that you cannot use this method from an .aspx page, because by the time an .aspx page runs, the entity body has already been read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="86bc1-255">O corpo da entidade da solicitação já foi carregado e analisado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-255">The request's entity body has already been loaded and parsed.</span>
          </span>
          <span data-ttu-id="86bc1-256">Veja alguns exemplos de propriedades que fazem o corpo da entidade ser carregado e analisado:</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-256">Examples of properties that cause the entity body to be loaded and parsed include the following:</span>
          </span>  
  
-   <see cref="P:System.Web.HttpRequest.Form" />  
  
-   <see cref="P:System.Web.HttpRequest.InputStream" />  
  
-   <see cref="P:System.Web.HttpRequest.Files" />  
  
-   <see cref="M:System.Web.HttpRequest.GetBufferedInputStream" /><span data-ttu-id="86bc1-257">Para evitar essa exceção, chame o método <see cref="P:System.Web.HttpRequest.ReadEntityBodyMode" /> primeiro.</span><span class="sxs-lookup"><span data-stu-id="86bc1-257">To avoid this exception, call the <see cref="P:System.Web.HttpRequest.ReadEntityBodyMode" /> method first.</span></span><span data-ttu-id="86bc1-258">Essa exceção também será gerada se o cliente se desconectar enquanto o corpo da entidade é lido.</span><span class="sxs-lookup"><span data-stu-id="86bc1-258">This exception is also thrown if the client disconnects while the entity body is being read.</span></span></exception>
        <altmember cref="M:System.Web.HttpRequest.GetBufferedInputStream" />
      </Docs>
    </Member>
    <Member MemberName="GetBufferlessInputStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream GetBufferlessInputStream (bool disableMaxRequestLength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream GetBufferlessInputStream(bool disableMaxRequestLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.GetBufferlessInputStream(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBufferlessInputStream (disableMaxRequestLength As Boolean) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ GetBufferlessInputStream(bool disableMaxRequestLength);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disableMaxRequestLength" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disableMaxRequestLength">
          <span data-ttu-id="86bc1-259">
            <see langword="true" /> para desabilitar o limite de tamanho de solicitação, caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-259">
              <see langword="true" /> to disable the request-length limit; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86bc1-260">Obtém um objeto <see cref="T:System.IO.Stream" /> que pode ser usado para ler o corpo da entidade HTTP recebida, opcionalmente desabilitando o limite de tamanho de solicitação definido na propriedade <see cref="P:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-260">Gets a <see cref="T:System.IO.Stream" /> object that can be used to read the incoming HTTP entity body, optionally disabling the request-length limit that is set in the <see cref="P:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength" /> property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="86bc1-261">Um objeto <see cref="T:System.IO.Stream" /> que pode ser usado para ler o corpo da entidade HTTP de entrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-261">A <see cref="T:System.IO.Stream" /> object that can be used to read the incoming HTTP entity body.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86bc1-262">Para obter mais informações sobre esse método, consulte o <xref:System.Web.HttpRequest.GetBufferlessInputStream> de sobrecarga.</span><span class="sxs-lookup"><span data-stu-id="86bc1-262">For more information about this method, see the <xref:System.Web.HttpRequest.GetBufferlessInputStream> overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="86bc1-263">O corpo da entidade da solicitação já foi carregado e analisado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-263">The request's entity body has already been loaded and parsed.</span>
          </span>
          <span data-ttu-id="86bc1-264">Veja alguns exemplos de propriedades que fazem o corpo da entidade ser carregado e analisado:</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-264">Examples of properties that cause the entity body to be loaded and parsed include the following:</span>
          </span>  
  
-   <span data-ttu-id="86bc1-265">A propriedade de <see cref="P:System.Web.HttpRequest.Form" /> .</span><span class="sxs-lookup"><span data-stu-id="86bc1-265">The <see cref="P:System.Web.HttpRequest.Form" /> property.</span></span>  
  
-   <span data-ttu-id="86bc1-266">A propriedade de <see cref="P:System.Web.HttpRequest.Files" /> .</span><span class="sxs-lookup"><span data-stu-id="86bc1-266">The <see cref="P:System.Web.HttpRequest.Files" /> property.</span></span>  
  
-   <span data-ttu-id="86bc1-267">A propriedade de <see cref="P:System.Web.HttpRequest.InputStream" /> .</span><span class="sxs-lookup"><span data-stu-id="86bc1-267">The <see cref="P:System.Web.HttpRequest.InputStream" /> property.</span></span>  
  
-   <span data-ttu-id="86bc1-268">O método <see cref="M:System.Web.HttpRequest.GetBufferedInputStream" />.</span><span class="sxs-lookup"><span data-stu-id="86bc1-268">The <see cref="M:System.Web.HttpRequest.GetBufferedInputStream" /> method.</span></span><span data-ttu-id="86bc1-269">Para evitar essa exceção, chame o método <see cref="P:System.Web.HttpRequest.ReadEntityBodyMode" /> primeiro.</span><span class="sxs-lookup"><span data-stu-id="86bc1-269">To avoid this exception, call the <see cref="P:System.Web.HttpRequest.ReadEntityBodyMode" /> method first.</span></span><span data-ttu-id="86bc1-270">Essa exceção também será gerada se o cliente se desconectar enquanto o corpo da entidade é lido.</span><span class="sxs-lookup"><span data-stu-id="86bc1-270">This exception is also thrown if the client disconnects while the entity body is being read.</span></span></exception>
        <altmember cref="M:System.Web.HttpRequest.GetBufferedInputStream" />
      </Docs>
    </Member>
    <Member MemberName="Headers">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameValueCollection Headers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection Headers" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Headers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Headers As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameValueCollection ^ Headers { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86bc1-271">Obtém uma coleção de cabeçalhos HTTP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-271">Gets a collection of HTTP headers.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86bc1-272">Um <see cref="T:System.Collections.Specialized.NameValueCollection" /> de cabeçalhos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-272">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> of headers.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86bc1-273">Para obter uma lista de todos os cabeçalhos possíveis, consulte [campos de cabeçalho de solicitação](http://go.microsoft.com/fwlink/?LinkId=73147) no site do W3C.</span><span class="sxs-lookup"><span data-stu-id="86bc1-273">For a listing of all possible headers, see [Request Header Fields](http://go.microsoft.com/fwlink/?LinkId=73147) on the W3C Web site.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86bc1-274">O exemplo de código a seguir exibe os nomes e valores de todos os cabeçalhos na solicitação HTTP.</span><span class="sxs-lookup"><span data-stu-id="86bc1-274">The following code example displays the names and values of all headers in the HTTP request.</span></span>  
  
 [!code-csharp[Classic HttpRequest.Headers Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.Headers Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.Headers Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.Headers Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HttpChannelBinding">
      <MemberSignature Language="C#" Value="public System.Security.Authentication.ExtendedProtection.ChannelBinding HttpChannelBinding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Authentication.ExtendedProtection.ChannelBinding HttpChannelBinding" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.HttpChannelBinding" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HttpChannelBinding As ChannelBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Authentication::ExtendedProtection::ChannelBinding ^ HttpChannelBinding { System::Security::Authentication::ExtendedProtection::ChannelBinding ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Authentication.ExtendedProtection.ChannelBinding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86bc1-275">Obtém o objeto <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> da instância de <see cref="T:System.Web.HttpWorkerRequest" /> atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-275">Gets the <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> object of the current <see cref="T:System.Web.HttpWorkerRequest" /> instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86bc1-276">O <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> objeto do atual <see cref="T:System.Web.HttpWorkerRequest" /> instância.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-276">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> object of the current <see cref="T:System.Web.HttpWorkerRequest" /> instance.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="86bc1-277">O objeto <see cref="T:System.Web.HttpWorkerRequest" /> atual não é um objeto <see langword="System.Web.Hosting.IIS7WorkerRequest" /> nem um objeto <see langword="System.Web.Hosting.ISAPIWorkerRequestInProc" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-277">The current <see cref="T:System.Web.HttpWorkerRequest" /> object is not a <see langword="System.Web.Hosting.IIS7WorkerRequest" /> object or a <see langword="System.Web.Hosting.ISAPIWorkerRequestInProc" /> object.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="HttpMethod">
      <MemberSignature Language="C#" Value="public string HttpMethod { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HttpMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.HttpMethod" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HttpMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HttpMethod { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86bc1-278">Obtém ou define o método de transferência de dados HTTP (tal como <see langword="GET" />, <see langword="POST" /> ou <see langword="HEAD" />) usado pelo cliente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-278">Gets the HTTP data transfer method (such as <see langword="GET" />, <see langword="POST" />, or <see langword="HEAD" />) used by the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86bc1-279">O método de transferência de dados HTTP usado pelo cliente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-279">The HTTP data transfer method used by the client.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="86bc1-280">O seguinte exemplo de código usa o <xref:System.Web.HttpUtility.HtmlEncode%2A> método para a codificação HTML o valor da <xref:System.Web.HttpRequest.HttpMethod%2A> propriedade e o <xref:System.IO.TextWriter.WriteLine%2A> método para gravar o valor codificado no arquivo.</span><span class="sxs-lookup"><span data-stu-id="86bc1-280">The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the <xref:System.Web.HttpRequest.HttpMethod%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file.</span></span> <span data-ttu-id="86bc1-281">Este exemplo de código é parte de um exemplo maior fornecido para a <xref:System.Web.HttpRequest> classe.</span><span class="sxs-lookup"><span data-stu-id="86bc1-281">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample1#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#7)]
 [!code-vb[System.Web.HttpRequest_Sample1#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#7)]  
  
 <span data-ttu-id="86bc1-282">O exemplo a seguir mostra a saída que é produzida por esse código.</span><span class="sxs-lookup"><span data-stu-id="86bc1-282">The following example shows output that is produced by this code.</span></span>  
  
 `GET`  
  
 `127.0.0.1`  
  
 `127.0.0.1`  
  
 `GET`  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InputStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream InputStream { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream InputStream" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.InputStream" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InputStream As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ InputStream { System::IO::Stream ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86bc1-283">Obtém o conteúdo do corpo da entidade HTTP recebida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-283">Gets the contents of the incoming HTTP entity body.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86bc1-284">Um objeto <see cref="T:System.IO.Stream" /> que representa o conteúdo do corpo de conteúdo HTTP recebido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-284">A <see cref="T:System.IO.Stream" /> object representing the contents of the incoming HTTP content body.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="86bc1-285">O exemplo de código a seguir copia o conteúdo de um <xref:System.Web.HttpRequest.InputStream%2A> em uma cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="86bc1-285">The following code example copies the contents of an <xref:System.Web.HttpRequest.InputStream%2A> into a string.</span></span>  
  
 [!code-csharp[Classic HttpRequest.InputStream Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.InputStream Example/cs/source.aspx#1)]
 [!code-vb[Classic HttpRequest.InputStream Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.InputStream Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="InsertEntityBody">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="86bc1-286">Fornece um wrapper gerenciado para o método IIS que insere um corpo de entidade de solicitação HTTP na memória.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-286">Provides a managed wrapper for the IIS method that inserts an HTTP request entity body into memory.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86bc1-287">O <xref:System.Web.HttpRequest.InsertEntityBody%2A> sobrecargas do método oferecem acesso gerenciado ao IIS 7 `IHttpRequest::InsertEntityBody` método.</span><span class="sxs-lookup"><span data-stu-id="86bc1-287">The <xref:System.Web.HttpRequest.InsertEntityBody%2A> method overloads provide managed access to the IIS 7 `IHttpRequest::InsertEntityBody` method.</span></span> <span data-ttu-id="86bc1-288">O método IIS insere um corpo de entidade de solicitação HTTP (os dados que são lançados por um cliente) na memória.</span><span class="sxs-lookup"><span data-stu-id="86bc1-288">The IIS method inserts an HTTP request entity body (the data that is posted by a client) into memory.</span></span> <span data-ttu-id="86bc1-289">Isso é útil porque o IIS não manter uma cópia da entidade de solicitação depois que ele foi lido.</span><span class="sxs-lookup"><span data-stu-id="86bc1-289">This is useful because IIS does not maintain a copy of the request entity after it has been read.</span></span> <span data-ttu-id="86bc1-290">O <xref:System.Web.HttpRequest.InsertEntityBody%2A> métodos criar uma cópia dos dados de entidade de solicitação HTTP e disponibilizá-lo para o IIS para manipulação personalizada adicional.</span><span class="sxs-lookup"><span data-stu-id="86bc1-290">The <xref:System.Web.HttpRequest.InsertEntityBody%2A> methods create a copy of the HTTP request entity data and make it available to IIS for additional custom handling.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="86bc1-291">O <xref:System.Web.HttpRequest.InsertEntityBody%2A> sobrecargas do método trabalho apenas no IIS 7.0 ou posterior, porque o `IHttpRequest::InsertEntityBody` método foi adicionado no IIS 7.0.</span><span class="sxs-lookup"><span data-stu-id="86bc1-291">The <xref:System.Web.HttpRequest.InsertEntityBody%2A> method overloads work only on IIS 7.0 or later, because the `IHttpRequest::InsertEntityBody` method was added in IIS 7.0.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="InsertEntityBody">
      <MemberSignature Language="C#" Value="public void InsertEntityBody ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertEntityBody() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.InsertEntityBody" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertEntityBody ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertEntityBody();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="86bc1-292">Fornece ao IIS uma cópia do corpo da entidade de solicitação HTTP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-292">Provides IIS with a copy of the HTTP request entity body.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86bc1-293">IIS não mantém uma cópia da solicitação depois que ele foi lido.</span><span class="sxs-lookup"><span data-stu-id="86bc1-293">IIS does not maintain a copy of the request after it has been read.</span></span> <span data-ttu-id="86bc1-294">Portanto, é recomendável que apenas o manipulador para uma solicitação HTTP deve ler a entidade de solicitação.</span><span class="sxs-lookup"><span data-stu-id="86bc1-294">Therefore, it is recommended that only the handler for an HTTP request should read the request entity.</span></span>  
  
 <span data-ttu-id="86bc1-295">O <xref:System.Web.HttpRequest.InsertEntityBody%2A?displayProperty=nameWithType> sobrecarga do método fornece IIS com uma cópia da entidade de solicitação, se ele foi lido anteriormente pelo ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="86bc1-295">The <xref:System.Web.HttpRequest.InsertEntityBody%2A?displayProperty=nameWithType> method overload provides IIS with a copy of the request entity if it was previously read by ASP.NET.</span></span> <span data-ttu-id="86bc1-296">Essa sobrecarga de método é útil para casos em que o ASP.NET tem ler a solicitação de entidade e deseja reutilizar os dados da solicitação existente.</span><span class="sxs-lookup"><span data-stu-id="86bc1-296">This method overload is useful for cases where ASP.NET has read the entity request and you want to reuse the existing request data.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="86bc1-297">O método foi invocado em uma versão do IIS anterior ao IIS 7.0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-297">The method was invoked on a version of IIS earlier than IIS 7.0.</span>
          </span>
        </exception>
        <permission cref="T:System.Web.AspNetHostingPermission">
          <span data-ttu-id="86bc1-298">Para a operação em um ambiente hospedado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-298">For operating in a hosted environment.</span>
          </span>
          <span data-ttu-id="86bc1-299">Ação de segurança: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-299">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="86bc1-300">Enumeração associada: <see cref="F:System.Web.AspNetHostingPermissionLevel.High" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-300">Associated enumeration: <see cref="F:System.Web.AspNetHostingPermissionLevel.High" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="InsertEntityBody">
      <MemberSignature Language="C#" Value="public void InsertEntityBody (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertEntityBody(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.InsertEntityBody(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertEntityBody (buffer As Byte(), offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertEntityBody(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="86bc1-301">Uma matriz que contém os dados de entidade da solicitação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-301">An array that contains the request entity data.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="86bc1-302">A posição baseada em zero no <c>buffer</c> na qual começar a armazenar os dados de entidade da solicitação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-302">The zero-based position in <c>buffer</c> at which to begin storing the request entity data.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="86bc1-303">O número de bytes a ler na matriz do <c>buffer</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-303">The number of bytes to read into the <c>buffer</c> array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86bc1-304">Fornece ao IIS uma cópia do corpo da entidade da solicitação HTTP e informações sobre o objeto de entidade da solicitação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-304">Provides IIS with a copy of the HTTP request entity body and with information about the request entity object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86bc1-305">IIS não mantém uma cópia da solicitação depois que ele foi lido.</span><span class="sxs-lookup"><span data-stu-id="86bc1-305">IIS does not maintain a copy of the request after it has been read.</span></span> <span data-ttu-id="86bc1-306">Portanto, é recomendável que apenas o manipulador para uma solicitação HTTP deve ler a entidade de solicitação.</span><span class="sxs-lookup"><span data-stu-id="86bc1-306">Therefore, it is recommended that only the handler for an HTTP request should read the request entity.</span></span>  
  
 <span data-ttu-id="86bc1-307">O <xref:System.Web.HttpRequest.InsertEntityBody%2A?displayProperty=nameWithType> sobrecarga do método é útil quando você deseja realizar o processamento personalizado, como a inserção de um corpo de entidade diferente na memória.</span><span class="sxs-lookup"><span data-stu-id="86bc1-307">The <xref:System.Web.HttpRequest.InsertEntityBody%2A?displayProperty=nameWithType> method overload is useful when you want to perform custom processing, such as inserting a different entity body into memory.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="86bc1-308">O método foi invocado em uma versão do IIS anterior ao IIS 7.0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-308">The method was invoked on a version of IIS earlier than IIS 7.0.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="86bc1-309">
            <paramref name="buffer" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-309">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="86bc1-310">
            <paramref name="offset" /> é um valor negativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-310">
              <paramref name="offset" /> is a negative value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="86bc1-311">O número de itens em <paramref name="count" /> é maior do que o espaço disponível em <paramref name="buffer" />, devido ao valor de <paramref name="offset" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-311">The number of items in <paramref name="count" /> is larger than the available space in <paramref name="buffer" />, given the <paramref name="offset" /> value.</span>
          </span>
        </exception>
        <permission cref="T:System.Web.AspNetHostingPermission">
          <span data-ttu-id="86bc1-312">para operação em um ambiente hospedado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-312">for operating in a hosted environment.</span>
          </span>
          <span data-ttu-id="86bc1-313">Ação de segurança: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-313">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="86bc1-314">Enumeração associada: <see cref="F:System.Web.AspNetHostingPermissionLevel.High" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-314">Associated enumeration: <see cref="F:System.Web.AspNetHostingPermissionLevel.High" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="IsAuthenticated">
      <MemberSignature Language="C#" Value="public bool IsAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.IsAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAuthenticated { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86bc1-315">Obtém um valor que indica se a solicitação foi autenticada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-315">Gets a value indicating whether the request has been authenticated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86bc1-316">
            <see langword="true" /> se a solicitação foi autenticada; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-316">
              <see langword="true" /> if the request is authenticated; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="86bc1-317">O seguinte exemplo de código usa o <xref:System.Web.HttpRequest.IsAuthenticated%2A> propriedade para determinar se a solicitação atual foi autenticada.</span><span class="sxs-lookup"><span data-stu-id="86bc1-317">The following code example uses the <xref:System.Web.HttpRequest.IsAuthenticated%2A> property to determine whether the current request has been authenticated.</span></span> <span data-ttu-id="86bc1-318">Se ele não foi autenticado, a solicitação é redirecionada para outra página onde os usuários podem inserir suas credenciais para o aplicativo Web.</span><span class="sxs-lookup"><span data-stu-id="86bc1-318">If it has not been authenticated, the request is redirected to another page where users can enter their credentials into the Web application.</span></span> <span data-ttu-id="86bc1-319">Isso é uma técnica comum usada na página padrão para um aplicativo.</span><span class="sxs-lookup"><span data-stu-id="86bc1-319">This is a common technique used in the default page for an application.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample3/CS/isauthenticatedcs.aspx#1)]
 [!code-vb[System.Web.HttpRequest_Sample3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample3/VB/isauthenticatedvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLocal">
      <MemberSignature Language="C#" Value="public bool IsLocal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLocal" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.IsLocal" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsLocal As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsLocal { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86bc1-320">Obtém um valor que indica se a solicitação é do computador local.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-320">Gets a value indicating whether the request is from the local computer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86bc1-321">
            <see langword="true" /> se a solicitação for do computador local; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-321">
              <see langword="true" /> if the request is from the local computer; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86bc1-322">O <xref:System.Web.HttpRequest.IsLocal%2A> propriedade retorna `true` se o endereço IP do originador de solicitação é 127.0.0.1 ou se o endereço IP da solicitação é o mesmo endereço IP do servidor.</span><span class="sxs-lookup"><span data-stu-id="86bc1-322">The <xref:System.Web.HttpRequest.IsLocal%2A> property returns `true` if the IP address of the request originator is 127.0.0.1 or if the IP address of the request is the same as the server's IP address.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSecureConnection">
      <MemberSignature Language="C#" Value="public bool IsSecureConnection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSecureConnection" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.IsSecureConnection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSecureConnection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSecureConnection { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86bc1-323">Obtém um valor que indica se a conexão HTTP usa SSL (ou seja, HTTPS).</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-323">Gets a value indicating whether the HTTP connection uses secure sockets (that is, HTTPS).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86bc1-324">
            <see langword="true" /> se a conexão for SSL; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-324">
              <see langword="true" /> if the connection is an SSL connection; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="86bc1-325">O exemplo de código a seguir determina se o <xref:System.Web.HttpRequest.IsSecureConnection%2A> estiver definida como false.</span><span class="sxs-lookup"><span data-stu-id="86bc1-325">The following code example determines whether the <xref:System.Web.HttpRequest.IsSecureConnection%2A> property is set to false.</span></span> <span data-ttu-id="86bc1-326">Se for, o <xref:System.Web.HttpResponse.SuppressContent%2A> propriedade é definida como true para interromper a resposta sendo enviada.</span><span class="sxs-lookup"><span data-stu-id="86bc1-326">If it is, the <xref:System.Web.HttpResponse.SuppressContent%2A> property is set to true to stop the response from being sent.</span></span>  
  
 [!code-csharp[System.Web.HttpResponse_Sample5#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse_Sample5/CS/httpresponsesuppresscontentcs.aspx#3)]
 [!code-vb[System.Web.HttpResponse_Sample5#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse_Sample5/VB/httpresponsesuppresscontentvb.aspx#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public string this[string key] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(key As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ default[System::String ^] { System::String ^ get(System::String ^ key); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="86bc1-327">O nome do membro da coleção a ser obtido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-327">The name of the collection member to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86bc1-328">Obtém o objeto especificado das coleções <see cref="P:System.Web.HttpRequest.QueryString" />, <see cref="P:System.Web.HttpRequest.Form" />, <see cref="P:System.Web.HttpRequest.Cookies" /> ou <see cref="P:System.Web.HttpRequest.ServerVariables" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-328">Gets the specified object from the <see cref="P:System.Web.HttpRequest.QueryString" />, <see cref="P:System.Web.HttpRequest.Form" />, <see cref="P:System.Web.HttpRequest.Cookies" />, or <see cref="P:System.Web.HttpRequest.ServerVariables" /> collections.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86bc1-329">O membro da coleção <see cref="P:System.Web.HttpRequest.QueryString" />, <see cref="P:System.Web.HttpRequest.Form" />, <see cref="P:System.Web.HttpRequest.Cookies" /> ou <see cref="P:System.Web.HttpRequest.ServerVariables" /> especificado no parâmetro <paramref name="key" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-329">The <see cref="P:System.Web.HttpRequest.QueryString" />, <see cref="P:System.Web.HttpRequest.Form" />, <see cref="P:System.Web.HttpRequest.Cookies" />, or <see cref="P:System.Web.HttpRequest.ServerVariables" /> collection member specified in the <paramref name="key" /> parameter.</span>
          </span>
          <span data-ttu-id="86bc1-330">Se o <paramref name="key" /> especificado não for encontrada, <see langword="null" /> será retornado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-330">If the specified <paramref name="key" /> is not found, then <see langword="null" /> is returned.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogonUserIdentity">
      <MemberSignature Language="C#" Value="public System.Security.Principal.WindowsIdentity LogonUserIdentity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.WindowsIdentity LogonUserIdentity" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.LogonUserIdentity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LogonUserIdentity As WindowsIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::WindowsIdentity ^ LogonUserIdentity { System::Security::Principal::WindowsIdentity ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.WindowsIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86bc1-331">Obtém o tipo <see cref="T:System.Security.Principal.WindowsIdentity" /> para o usuário atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-331">Gets the <see cref="T:System.Security.Principal.WindowsIdentity" /> type for the current user.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86bc1-332">Um objeto <see cref="T:System.Security.Principal.WindowsIdentity" /> para as configurações de autenticação atuais dos Serviços de Informações da Internet da Microsoft (IIS).</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-332">A <see cref="T:System.Security.Principal.WindowsIdentity" /> object for the current Microsoft Internet Information Services (IIS) authentication settings.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86bc1-333">O <xref:System.Web.HttpRequest.LogonUserIdentity%2A> propriedade expõe as propriedades e métodos do <xref:System.Security.Principal.WindowsIdentity> objeto para o usuário conectado no momento para o Microsoft Internet Information Services (IIS).</span><span class="sxs-lookup"><span data-stu-id="86bc1-333">The <xref:System.Web.HttpRequest.LogonUserIdentity%2A> property exposes the properties and methods of the <xref:System.Security.Principal.WindowsIdentity> object for the currently connected user to Microsoft Internet Information Services (IIS).</span></span> <span data-ttu-id="86bc1-334">A instância do <xref:System.Security.Principal.WindowsIdentity> classe que é exposto pelo <xref:System.Web.HttpRequest.LogonUserIdentity%2A> controla o token de solicitação do IIS e fornece acesso fácil a esse token para a solicitação HTTP atual que está sendo processado dentro de ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="86bc1-334">The instance of the <xref:System.Security.Principal.WindowsIdentity> class that is exposed by <xref:System.Web.HttpRequest.LogonUserIdentity%2A> tracks the IIS request token and provides easy access to this token for the current HTTP request being processed inside of ASP.NET.</span></span> <span data-ttu-id="86bc1-335">Uma instância do <xref:System.Security.Principal.WindowsIdentity> classe é criada automaticamente para que ele não precisa ser construída a fim de obter acesso a seus métodos e propriedades.</span><span class="sxs-lookup"><span data-stu-id="86bc1-335">An instance of the <xref:System.Security.Principal.WindowsIdentity> class is automatically created so it does not need to be constructed to in order to gain access to its methods and properties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86bc1-336">O exemplo de código a seguir mostra como recuperar o <xref:System.Web.HttpRequest.LogonUserIdentity%2A> propriedade para o usuário atual e a gravação, os valores de cada item em um arquivo de texto.</span><span class="sxs-lookup"><span data-stu-id="86bc1-336">The following code example shows how to retrieve the <xref:System.Web.HttpRequest.LogonUserIdentity%2A> property for the current user and write out the values of each item in a text file.</span></span> <span data-ttu-id="86bc1-337">Coloque esse código na página do ASP.NET referenciada pelo formulário de `ACTION` atributo.</span><span class="sxs-lookup"><span data-stu-id="86bc1-337">Place this code on the ASP.NET page referenced by the form's `ACTION` attribute.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpRequest_LogonUserIdentity#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_LogonUserIdentity/CS/logonuseridentity_cs.aspx#1)]
 [!code-aspx-vb[System.Web.HttpRequest_LogonUserIdentity#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_LogonUserIdentity/VB/logonuseridentity_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="86bc1-338">O aplicativo Web está sendo executado no modo integrado do IIS 7 e o evento <see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /> ainda não foi acionado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-338">The Web application is running in IIS 7 integrated mode and the <see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /> event has not yet been raised.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MapImageCoordinates">
      <MemberSignature Language="C#" Value="public int[] MapImageCoordinates (string imageFieldName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32[] MapImageCoordinates(string imageFieldName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.MapImageCoordinates(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function MapImageCoordinates (imageFieldName As String) As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;int&gt; ^ MapImageCoordinates(System::String ^ imageFieldName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="imageFieldName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="imageFieldName">
          <span data-ttu-id="86bc1-339">O nome do mapa de imagem do formulário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-339">The name of the form image map.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86bc1-340">Mapeia um parâmetro de formulário de campo de imagem de entrada para os valores apropriados das coordenadas X e Y.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-340">Maps an incoming image-field form parameter to appropriate x-coordinate and y-coordinate values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="86bc1-341">Uma matriz bidimensional de inteiros.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-341">A two-dimensional array of integers.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="MapPath">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="86bc1-342">Mapeia o caminho virtual na URL solicitada para um caminho físico no servidor para a solicitação atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-342">Maps the virtual path in the requested URL to a physical path on the server for the current request.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MapPath">
      <MemberSignature Language="C#" Value="public string MapPath (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string MapPath(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.MapPath(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function MapPath (virtualPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ MapPath(System::String ^ virtualPath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">
          <span data-ttu-id="86bc1-343">O caminho virtual (absoluto ou relativo) para a solicitação atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-343">The virtual path (absolute or relative) for the current request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86bc1-344">Mapeia o caminho virtual especificado para um caminho físico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-344">Maps the specified virtual path to a physical path.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="86bc1-345">O caminho físico no servidor especificado por <paramref name="virtualPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-345">The physical path on the server specified by <paramref name="virtualPath" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  <span data-ttu-id="86bc1-346">O <xref:System.Web.HttpRequest.MapPath%2A> propriedade potencialmente contém informações importantes sobre o ambiente de hospedagem.</span><span class="sxs-lookup"><span data-stu-id="86bc1-346">The <xref:System.Web.HttpRequest.MapPath%2A> property potentially contains sensitive information about the hosting environment.</span></span> <span data-ttu-id="86bc1-347">O valor de retorno não deve ser exibido aos usuários.</span><span class="sxs-lookup"><span data-stu-id="86bc1-347">The return value should not be displayed to users.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86bc1-348">O seguinte exemplo de código usa o <xref:System.Web.HttpRequest.MapPath%2A> método para converter um caminho virtual para um caminho físico totalmente qualificado do servidor.</span><span class="sxs-lookup"><span data-stu-id="86bc1-348">The following code example uses the <xref:System.Web.HttpRequest.MapPath%2A> method to convert a virtual path to a fully qualified physical path on the server.</span></span> <span data-ttu-id="86bc1-349">Este exemplo tem duas partes:</span><span class="sxs-lookup"><span data-stu-id="86bc1-349">This example has two parts:</span></span>  
  
-   <span data-ttu-id="86bc1-350">Uma página. aspx mapeia o caminho, lê o arquivo e exibe os resultados da operação de leitura.</span><span class="sxs-lookup"><span data-stu-id="86bc1-350">An .aspx page maps the path, reads the file, and displays results of the read operation.</span></span>  
  
-   <span data-ttu-id="86bc1-351">Uma classe, `UpperCaseFilterStream`, que altera todos os caracteres passados em maiusculas.</span><span class="sxs-lookup"><span data-stu-id="86bc1-351">A class, `UpperCaseFilterStream`, that changes all characters passed through it to uppercase.</span></span>  
  
 <span data-ttu-id="86bc1-352">A primeira parte do exemplo mostra como converter um caminho virtual para um caminho físico totalmente qualificado usando o <xref:System.Web.HttpRequest.MapPath%2A> método.</span><span class="sxs-lookup"><span data-stu-id="86bc1-352">The first part of the example shows how to convert a virtual path to a fully qualified physical path using the <xref:System.Web.HttpRequest.MapPath%2A> method.</span></span> <span data-ttu-id="86bc1-353">Esse caminho físico é então passado para um <xref:System.IO.StreamReader> objeto, que obtém o conteúdo do arquivo.</span><span class="sxs-lookup"><span data-stu-id="86bc1-353">This physical path is then passed to a <xref:System.IO.StreamReader> object, which obtains the contents of the file.</span></span> <span data-ttu-id="86bc1-354">O <xref:System.Web.HttpResponse.Write%2A> método é chamado para exibir o conteúdo do arquivo na página.</span><span class="sxs-lookup"><span data-stu-id="86bc1-354">The <xref:System.Web.HttpResponse.Write%2A> method is then called to display the content of the file on the page.</span></span> <span data-ttu-id="86bc1-355">O <xref:System.Web.HttpResponse.Filter%2A> propriedade é usada para anexar um filtro para o fluxo de resposta que faz com que o texto exibido para a página de todas as letras maiusculas.</span><span class="sxs-lookup"><span data-stu-id="86bc1-355">The <xref:System.Web.HttpResponse.Filter%2A> property is used to attach a filter to the response stream that makes the text displayed to the page all uppercase.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpRequest_Samples2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Samples2/CS/requestsamples2cs.aspx#1)]
 [!code-aspx-vb[System.Web.HttpRequest_Samples2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Samples2/VB/requestsamples2vb.aspx#1)]  
  
 <span data-ttu-id="86bc1-356">A segunda parte do exemplo mostra uma classe que herda de <xref:System.IO.Stream> e converte todos os caracteres em um fluxo em maiusculas.</span><span class="sxs-lookup"><span data-stu-id="86bc1-356">The second part of the example shows a class that inherits from <xref:System.IO.Stream> and converts all characters in a stream to uppercase.</span></span> <span data-ttu-id="86bc1-357">Coloque esse código no `App_Code` pasta para o seu aplicativo.</span><span class="sxs-lookup"><span data-stu-id="86bc1-357">Put this code in the `App_Code` folder for your application.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Samples2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Samples2/CS/responsefilter.cs#2)]
 [!code-vb[System.Web.HttpRequest_Samples2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Samples2/VB/responsefilter.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="86bc1-358">Nenhum objeto <see cref="T:System.Web.HttpContext" /> é definido para a solicitação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-358">No <see cref="T:System.Web.HttpContext" /> object is defined for the request.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MapPath">
      <MemberSignature Language="C#" Value="public string MapPath (string virtualPath, string baseVirtualDir, bool allowCrossAppMapping);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string MapPath(string virtualPath, string baseVirtualDir, bool allowCrossAppMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.MapPath(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function MapPath (virtualPath As String, baseVirtualDir As String, allowCrossAppMapping As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ MapPath(System::String ^ virtualPath, System::String ^ baseVirtualDir, bool allowCrossAppMapping);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="baseVirtualDir" Type="System.String" />
        <Parameter Name="allowCrossAppMapping" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="virtualPath">
          <span data-ttu-id="86bc1-359">O caminho virtual (absoluto ou relativo) para a solicitação atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-359">The virtual path (absolute or relative) for the current request.</span>
          </span>
        </param>
        <param name="baseVirtualDir">
          <span data-ttu-id="86bc1-360">O caminho do diretório base virtual usado para resolução relativa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-360">The virtual base directory path used for relative resolution.</span>
          </span>
        </param>
        <param name="allowCrossAppMapping">
          <span data-ttu-id="86bc1-361">
            <see langword="true" /> para indicar que <c>virtualPath</c> pode pertencer a outro aplicativo; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-361">
              <see langword="true" /> to indicate that <c>virtualPath</c> may belong to another application; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86bc1-362">Mapeia o caminho virtual especificado para um caminho físico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-362">Maps the specified virtual path to a physical path.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="86bc1-363">O caminho físico no servidor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-363">The physical path on the server.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  <span data-ttu-id="86bc1-364">O <xref:System.Web.HttpRequest.MapPath%2A> propriedade potencialmente contém informações importantes sobre o ambiente de hospedagem.</span><span class="sxs-lookup"><span data-stu-id="86bc1-364">The <xref:System.Web.HttpRequest.MapPath%2A> property potentially contains sensitive information about the hosting environment.</span></span> <span data-ttu-id="86bc1-365">O valor de retorno não deve ser exibido aos usuários.</span><span class="sxs-lookup"><span data-stu-id="86bc1-365">The return value should not be displayed to users.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="86bc1-366">Nenhum objeto <see cref="T:System.Web.HttpContext" /> é definido para a solicitação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-366">No <see cref="T:System.Web.HttpContext" /> object is defined for the request.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MapRawImageCoordinates">
      <MemberSignature Language="C#" Value="public double[] MapRawImageCoordinates (string imageFieldName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64[] MapRawImageCoordinates(string imageFieldName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.MapRawImageCoordinates(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function MapRawImageCoordinates (imageFieldName As String) As Double()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;double&gt; ^ MapRawImageCoordinates(System::String ^ imageFieldName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="imageFieldName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="imageFieldName">
          <span data-ttu-id="86bc1-367">O nome do campo de imagem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-367">The name of the image field.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86bc1-368">Mapeia um parâmetro de formulário de campo de imagem de entrada nos valores apropriados das coordenadas X e Y.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-368">Maps an incoming image field form parameter into appropriate x and y coordinate values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="86bc1-369">Os valores das coordenadas x e y.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-369">The x and y coordinate values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Params">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameValueCollection Params { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection Params" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Params" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Params As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameValueCollection ^ Params { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86bc1-370">Obtém uma coleção combinada dos itens <see cref="P:System.Web.HttpRequest.QueryString" />, <see cref="P:System.Web.HttpRequest.Form" />, <see cref="P:System.Web.HttpRequest.Cookies" /> e <see cref="P:System.Web.HttpRequest.ServerVariables" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-370">Gets a combined collection of <see cref="P:System.Web.HttpRequest.QueryString" />, <see cref="P:System.Web.HttpRequest.Form" />, <see cref="P:System.Web.HttpRequest.Cookies" />, and <see cref="P:System.Web.HttpRequest.ServerVariables" /> items.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86bc1-371">Um objeto <see cref="T:System.Collections.Specialized.NameValueCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-371">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86bc1-372">Pares de nome-valor são adicionados à coleção na seguinte ordem:</span><span class="sxs-lookup"><span data-stu-id="86bc1-372">Name-value pairs are added to the collection in the following order:</span></span>  
  
1.  <span data-ttu-id="86bc1-373">Parâmetros de cadeia de caracteres de consulta.</span><span class="sxs-lookup"><span data-stu-id="86bc1-373">Query-string parameters.</span></span>  
  
2.  <span data-ttu-id="86bc1-374">Campos do formulário.</span><span class="sxs-lookup"><span data-stu-id="86bc1-374">Form fields.</span></span>  
  
3.  <span data-ttu-id="86bc1-375">Cookies.</span><span class="sxs-lookup"><span data-stu-id="86bc1-375">Cookies.</span></span>  
  
4.  <span data-ttu-id="86bc1-376">Variáveis de servidor.</span><span class="sxs-lookup"><span data-stu-id="86bc1-376">Server variables.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86bc1-377">O exemplo de código a seguir mostra como percorrer o <xref:System.Web.HttpRequest.Params%2A> propriedade para uma página e como exibir cada par chave/valor.</span><span class="sxs-lookup"><span data-stu-id="86bc1-377">The following code example shows how to loop through the <xref:System.Web.HttpRequest.Params%2A> property for a page and how to display each key/value pair.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpRequest.Params#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest.Params/CS/requestparamscs.aspx#1)]
 [!code-aspx-vb[System.Web.HttpRequest.Params#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest.Params/VB/requestparamsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Path" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86bc1-378">Obtém o caminho virtual da solicitação atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-378">Gets the virtual path of the current request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86bc1-379">O caminho virtual da solicitação atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-379">The virtual path of the current request.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86bc1-380">O <xref:System.Web.HttpRequest.Path%2A> é a concatenação do <xref:System.Web.HttpRequest.FilePath%2A> e <xref:System.Web.HttpRequest.PathInfo%2A> marcador.</span><span class="sxs-lookup"><span data-stu-id="86bc1-380">The <xref:System.Web.HttpRequest.Path%2A> is the concatenation of the <xref:System.Web.HttpRequest.FilePath%2A> and the <xref:System.Web.HttpRequest.PathInfo%2A> trailer.</span></span> <span data-ttu-id="86bc1-381">Por exemplo, para a URL http://www.contoso.com/virdir/page.html/tail, o <xref:System.Web.HttpRequest.Path%2A> é /virdir/page.html/tail.</span><span class="sxs-lookup"><span data-stu-id="86bc1-381">For example, for the URL http://www.contoso.com/virdir/page.html/tail, the <xref:System.Web.HttpRequest.Path%2A> is /virdir/page.html/tail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86bc1-382">O seguinte exemplo de código usa o <xref:System.Web.HttpUtility.HtmlEncode%2A> método para a codificação HTML o valor da <xref:System.Web.HttpRequest.Path%2A> propriedade e o <xref:System.IO.TextWriter.WriteLine%2A> método para gravar o valor codificado no arquivo.</span><span class="sxs-lookup"><span data-stu-id="86bc1-382">The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the <xref:System.Web.HttpRequest.Path%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file.</span></span> <span data-ttu-id="86bc1-383">Este exemplo de código é parte de um exemplo maior fornecido para a <xref:System.Web.HttpRequest> classe.</span><span class="sxs-lookup"><span data-stu-id="86bc1-383">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#2)]
 [!code-vb[System.Web.HttpRequest_Sample1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpRequest.FilePath" />
        <altmember cref="P:System.Web.HttpRequest.PathInfo" />
      </Docs>
    </Member>
    <Member MemberName="PathInfo">
      <MemberSignature Language="C#" Value="public string PathInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PathInfo" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.PathInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PathInfo As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PathInfo { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86bc1-384">Obtém as informações adicionais de caminho para um recurso com uma extensão de URL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-384">Gets the additional path information for a resource with a URL extension.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86bc1-385">As informações adicionais de caminho para um recurso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-385">The additional path information for a resource.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86bc1-386">Para a URL Http://www.contoso.com/virdir/page.html/tail, o <xref:System.Web.HttpRequest.PathInfo%2A> valor é /tail.</span><span class="sxs-lookup"><span data-stu-id="86bc1-386">For the URL Http://www.contoso.com/virdir/page.html/tail, the <xref:System.Web.HttpRequest.PathInfo%2A> value is /tail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86bc1-387">O exemplo de código a seguir determina se o <xref:System.Web.HttpRequest.PathInfo%2A> propriedade contém uma cadeia de caracteres vazia.</span><span class="sxs-lookup"><span data-stu-id="86bc1-387">The following code example determines whether the <xref:System.Web.HttpRequest.PathInfo%2A> property contains an empty string.</span></span> <span data-ttu-id="86bc1-388">Se isso acontecer, o <xref:System.IO.StreamWriter.Write%2A> método grava uma cadeia de caracteres indicando isso para um arquivo.</span><span class="sxs-lookup"><span data-stu-id="86bc1-388">If it does, the <xref:System.IO.StreamWriter.Write%2A> method writes a string indicating this to a file.</span></span> <span data-ttu-id="86bc1-389">Se não estiver, o <xref:System.Web.HttpUtility.HtmlEncode%2A> método HTML codifica o valor da <xref:System.Web.HttpRequest.PathInfo%2A> propriedade e o <xref:System.IO.TextWriter.WriteLine%2A> método grava o valor codificado no arquivo.</span><span class="sxs-lookup"><span data-stu-id="86bc1-389">If it does not, the <xref:System.Web.HttpUtility.HtmlEncode%2A> method HTML-encodes the value of the <xref:System.Web.HttpRequest.PathInfo%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method writes the encoded value to the file.</span></span> <span data-ttu-id="86bc1-390">Este exemplo de código é parte de um exemplo maior fornecido para a <xref:System.Web.HttpRequest> classe.</span><span class="sxs-lookup"><span data-stu-id="86bc1-390">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample1#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#4)]
 [!code-vb[System.Web.HttpRequest_Sample1#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpRequest.Path" />
        <altmember cref="P:System.Web.HttpRequest.FilePath" />
      </Docs>
    </Member>
    <Member MemberName="PhysicalApplicationPath">
      <MemberSignature Language="C#" Value="public string PhysicalApplicationPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PhysicalApplicationPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.PhysicalApplicationPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PhysicalApplicationPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PhysicalApplicationPath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86bc1-391">Obtém o caminho do sistema de arquivos físico do diretório raiz do aplicativo para servidores em execução.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-391">Gets the physical file system path of the currently executing server application's root directory.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86bc1-392">O caminho do sistema de arquivos do diretório raiz do aplicativo atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-392">The file system path of the current application's root directory.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="86bc1-393">O seguinte exemplo de código usa o <xref:System.Web.HttpUtility.HtmlEncode%2A> método para a codificação HTML o valor da <xref:System.Web.HttpRequest.PhysicalApplicationPath%2A> propriedade e o <xref:System.IO.TextWriter.WriteLine%2A> método para gravar o valor codificado no arquivo.</span><span class="sxs-lookup"><span data-stu-id="86bc1-393">The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the <xref:System.Web.HttpRequest.PhysicalApplicationPath%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file.</span></span> <span data-ttu-id="86bc1-394">Este exemplo de código é parte de um exemplo maior fornecido para a <xref:System.Web.HttpRequest> classe.</span><span class="sxs-lookup"><span data-stu-id="86bc1-394">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample1#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#5)]
 [!code-vb[System.Web.HttpRequest_Sample1#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PhysicalPath">
      <MemberSignature Language="C#" Value="public string PhysicalPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PhysicalPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.PhysicalPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PhysicalPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PhysicalPath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86bc1-395">Obtém o caminho do sistema de arquivos físico correspondente à URL solicitada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-395">Gets the physical file system path corresponding to the requested URL.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86bc1-396">O caminho do sistema de arquivos da solicitação atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-396">The file system path of the current request.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86bc1-397">Em cenários de redirecionamento usando <xref:System.Web.HttpServerUtility.Execute%2A> e <xref:System.Web.HttpServerUtility.Transfer%2A>, o <xref:System.Web.HttpRequest.PhysicalPath%2A> propriedade retorna o caminho para a página original.</span><span class="sxs-lookup"><span data-stu-id="86bc1-397">In redirect scenarios using <xref:System.Web.HttpServerUtility.Execute%2A> and <xref:System.Web.HttpServerUtility.Transfer%2A>, the <xref:System.Web.HttpRequest.PhysicalPath%2A> property returns the path to the original page.</span></span> <span data-ttu-id="86bc1-398">Para localizar o caminho físico do uso de página em execução no momento o <xref:System.Web.HttpRequest.MapPath%2A> método com o argumento de entrada é definido como o <xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="86bc1-398">To find the physical path of the currently executing page use the <xref:System.Web.HttpRequest.MapPath%2A> method with the input argument set as the <xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86bc1-399">O seguinte exemplo de código usa o <xref:System.Web.HttpUtility.HtmlEncode%2A> método para a codificação HTML o valor da <xref:System.Web.HttpRequest.PhysicalPath%2A> propriedade e o <xref:System.IO.TextWriter.WriteLine%2A> método para gravar o valor codificado no arquivo.</span><span class="sxs-lookup"><span data-stu-id="86bc1-399">The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the <xref:System.Web.HttpRequest.PhysicalPath%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file.</span></span> <span data-ttu-id="86bc1-400">Este exemplo de código é parte de um exemplo maior fornecido para a <xref:System.Web.HttpRequest> classe.</span><span class="sxs-lookup"><span data-stu-id="86bc1-400">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample1#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#5)]
 [!code-vb[System.Web.HttpRequest_Sample1#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpRequest.MapPath(System.String)" />
        <altmember cref="P:System.Web.HttpRequest.CurrentExecutionFilePath" />
      </Docs>
    </Member>
    <Member MemberName="QueryString">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameValueCollection QueryString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection QueryString" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.QueryString" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property QueryString As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameValueCollection ^ QueryString { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86bc1-401">Obtém a coleção de variáveis de cadeia de caracteres de consulta HTTP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-401">Gets the collection of HTTP query string variables.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86bc1-402">As variáveis de cadeia de consulta enviadas pelo cliente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-402">The query string variables sent by the client.</span>
          </span>
          <span data-ttu-id="86bc1-403">Chaves e valores são decodificados para URL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-403">Keys and values are URL-decoded.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="86bc1-404">O exemplo de código a seguir mostra duas maneiras de obter o valor de uma variável de cadeia de caracteres de consulta chamada "fullname".</span><span class="sxs-lookup"><span data-stu-id="86bc1-404">The following code example shows two ways to get the value of a query string variable named "fullname".</span></span> <span data-ttu-id="86bc1-405">Em cada caso, se a URL for `http://www.contoso.com/default.aspx?fullname=Fadi%20Fakhouri`, em seguida, o valor retornado é "Fadi Fakhouri" porque o `%20` é decodificada para URL em um caractere de espaço.</span><span class="sxs-lookup"><span data-stu-id="86bc1-405">In each case, if the URL is `http://www.contoso.com/default.aspx?fullname=Fadi%20Fakhouri`, then the value returned is "Fadi Fakhouri" because the `%20` is URL-decoded into a space character.</span></span> <span data-ttu-id="86bc1-406">Se a URL não tem um `fullname` ID da cadeia de caracteres de consulta, o valor retornado será `null`.</span><span class="sxs-lookup"><span data-stu-id="86bc1-406">If the URL doesn’t have a `fullname` query string ID, the returned value would be `null`.</span></span>  
  
 <span data-ttu-id="86bc1-407">A primeira linha de código procura a chave "fullname" somente na cadeia de caracteres de consulta; a segunda linha procura a chave "fullname" em todas as coleções de solicitação HTTP.</span><span class="sxs-lookup"><span data-stu-id="86bc1-407">The first line of code looks for the key "fullname" only in the query string; the second line looks for the key "fullname" in all of the HTTP request collections.</span></span> <span data-ttu-id="86bc1-408">Para obter mais informações sobre a segunda linha, consulte <xref:System.Web.HttpRequest.Item%2A>.</span><span class="sxs-lookup"><span data-stu-id="86bc1-408">For more information about the second line, see <xref:System.Web.HttpRequest.Item%2A>.</span></span>  
  
```csharp  
string fullname1 = Request.QueryString["fullname"];  
string fullname2 = Request["fullname"];  
  
```  
  
```vb  
Dim fullname1 As String = Request.QueryString("fullname")  
Dim fullname2 As String = Request("fullname")  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpRequest.ValidateInput" />
        <altmember cref="P:System.Web.HttpRequest.Form" />
        <altmember cref="P:System.Web.HttpRequest.Cookies" />
      </Docs>
    </Member>
    <Member MemberName="RawUrl">
      <MemberSignature Language="C#" Value="public string RawUrl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RawUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.RawUrl" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RawUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RawUrl { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86bc1-409">Obtém a URL bruta da solicitação atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-409">Gets the raw URL of the current request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86bc1-410">A URL bruta da solicitação atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-410">The raw URL of the current request.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86bc1-411">A URL bruta é definida como parte da URL a seguir as informações de domínio.</span><span class="sxs-lookup"><span data-stu-id="86bc1-411">The raw URL is defined as the part of the URL following the domain information.</span></span> <span data-ttu-id="86bc1-412">Na cadeia de caracteres de URL http://www.contoso.com/articles/recent.aspx, a URL bruta é /articles/recent.aspx.</span><span class="sxs-lookup"><span data-stu-id="86bc1-412">In the URL string http://www.contoso.com/articles/recent.aspx, the raw URL is /articles/recent.aspx.</span></span> <span data-ttu-id="86bc1-413">A URL bruta inclui a cadeia de caracteres de consulta, se presente.</span><span class="sxs-lookup"><span data-stu-id="86bc1-413">The raw URL includes the query string, if present.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86bc1-414">O seguinte exemplo de código usa o <xref:System.Web.HttpUtility.HtmlEncode%2A> método para a codificação HTML o valor da <xref:System.Web.HttpRequest.RawUrl%2A> propriedade e o <xref:System.IO.TextWriter.WriteLine%2A> método para gravar o valor codificado no arquivo.</span><span class="sxs-lookup"><span data-stu-id="86bc1-414">The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the <xref:System.Web.HttpRequest.RawUrl%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file.</span></span> <span data-ttu-id="86bc1-415">Este exemplo de código é parte de um exemplo maior fornecido para a <xref:System.Web.HttpRequest> classe.</span><span class="sxs-lookup"><span data-stu-id="86bc1-415">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample1#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#5)]
 [!code-vb[System.Web.HttpRequest_Sample1#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadEntityBodyMode">
      <MemberSignature Language="C#" Value="public System.Web.ReadEntityBodyMode ReadEntityBodyMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.ReadEntityBodyMode ReadEntityBodyMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.ReadEntityBodyMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReadEntityBodyMode As ReadEntityBodyMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::ReadEntityBodyMode ReadEntityBodyMode { System::Web::ReadEntityBodyMode get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.ReadEntityBodyMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86bc1-416">Obtém um valor que indica se o corpo da entidade de solicitação foi lido e, em caso afirmativo, como ele foi lido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-416">Gets a value that indicates whether the request entity body has been read, and if so, how it was read.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86bc1-417">O valor que indica como o corpo da entidade de solicitação foi lido ou se ele não foi lido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-417">The value that indicates how the request entity body was read, or that it has not been read.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86bc1-418">Esse método é usado para evitar a exceção que é gerada se o corpo da entidade já foi lido e é feita uma tentativa de lê-lo usando um método incompatível.</span><span class="sxs-lookup"><span data-stu-id="86bc1-418">This method is used to avoid the exception that is thrown if the entity body has already been read and an attempt is made to read it by using an incompatible method.</span></span> <span data-ttu-id="86bc1-419">Métodos e propriedades que ler o corpo da entidade incluem o seguinte:</span><span class="sxs-lookup"><span data-stu-id="86bc1-419">Methods and properties that read the entity body include the following:</span></span>  
  
-   <span data-ttu-id="86bc1-420">A propriedade de <xref:System.Web.HttpRequest.Form%2A> .</span><span class="sxs-lookup"><span data-stu-id="86bc1-420">The <xref:System.Web.HttpRequest.Form%2A> property.</span></span>  
  
-   <span data-ttu-id="86bc1-421">A propriedade de <xref:System.Web.HttpRequest.Files%2A> .</span><span class="sxs-lookup"><span data-stu-id="86bc1-421">The <xref:System.Web.HttpRequest.Files%2A> property.</span></span>  
  
-   <span data-ttu-id="86bc1-422">A propriedade de <xref:System.Web.HttpRequest.InputStream%2A> .</span><span class="sxs-lookup"><span data-stu-id="86bc1-422">The <xref:System.Web.HttpRequest.InputStream%2A> property.</span></span>  
  
-   <span data-ttu-id="86bc1-423">O método <xref:System.Web.HttpRequest.GetBufferedInputStream%2A>.</span><span class="sxs-lookup"><span data-stu-id="86bc1-423">The <xref:System.Web.HttpRequest.GetBufferedInputStream%2A> method.</span></span>  
  
-   <span data-ttu-id="86bc1-424">O método <xref:System.Web.HttpRequest.GetBufferlessInputStream%2A>.</span><span class="sxs-lookup"><span data-stu-id="86bc1-424">The <xref:System.Web.HttpRequest.GetBufferlessInputStream%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestContext">
      <MemberSignature Language="C#" Value="public System.Web.Routing.RequestContext RequestContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Routing.RequestContext RequestContext" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.RequestContext" />
      <MemberSignature Language="VB.NET" Value="Public Property RequestContext As RequestContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Routing::RequestContext ^ RequestContext { System::Web::Routing::RequestContext ^ get(); void set(System::Web::Routing::RequestContext ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Routing.RequestContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86bc1-425">Obtém a instância <see cref="T:System.Web.Routing.RequestContext" /> da solicitação atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-425">Gets the <see cref="T:System.Web.Routing.RequestContext" /> instance of the current request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86bc1-426">A instância <see cref="T:System.Web.Routing.RequestContext" /> da solicitação atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-426">The <see cref="T:System.Web.Routing.RequestContext" /> instance of the current request.</span>
          </span>
          <span data-ttu-id="86bc1-427">Para solicitações não roteadas, um objeto <see cref="T:System.Web.Routing.RequestContext" /> retornado está vazio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-427">For non-routed requests, the <see cref="T:System.Web.Routing.RequestContext" /> object that is returned is empty.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86bc1-428">Esta propriedade fornece acesso para o <xref:System.Web.Routing.RouteData> objeto para a solicitação atual.</span><span class="sxs-lookup"><span data-stu-id="86bc1-428">This property provides access to the <xref:System.Web.Routing.RouteData> object for the current request.</span></span> <span data-ttu-id="86bc1-429">Para obter mais informações sobre roteamento ASP.NET, consulte. [Roteamento ASP.NET](http://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a).</span><span class="sxs-lookup"><span data-stu-id="86bc1-429">For more information about ASP.NET routing, see.[ASP.NET Routing](http://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestType">
      <MemberSignature Language="C#" Value="public string RequestType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RequestType" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.RequestType" />
      <MemberSignature Language="VB.NET" Value="Public Property RequestType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RequestType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86bc1-430">Obtém ou define o método de transferência de dados HTTP (<see langword="GET" /> ou <see langword="POST" />) usado pelo cliente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-430">Gets or sets the HTTP data transfer method (<see langword="GET" /> or <see langword="POST" />) used by the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86bc1-431">Uma cadeia de caracteres que representa o tipo de invocação de HTTP enviado pelo cliente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-431">A string representing the HTTP invocation type sent by the client.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="86bc1-432">O seguinte exemplo de código usa o <xref:System.Web.HttpUtility.HtmlEncode%2A> método para a codificação HTML o valor da <xref:System.Web.HttpRequest.RequestType%2A> propriedade e o <xref:System.IO.TextWriter.WriteLine%2A> método para gravar o valor codificado no arquivo.</span><span class="sxs-lookup"><span data-stu-id="86bc1-432">The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the <xref:System.Web.HttpRequest.RequestType%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file.</span></span> <span data-ttu-id="86bc1-433">Este exemplo de código é parte de um exemplo maior fornecido para a <xref:System.Web.HttpRequest> classe.</span><span class="sxs-lookup"><span data-stu-id="86bc1-433">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample1#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#7)]
 [!code-vb[System.Web.HttpRequest_Sample1#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveAs">
      <MemberSignature Language="C#" Value="public void SaveAs (string filename, bool includeHeaders);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveAs(string filename, bool includeHeaders) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.SaveAs(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveAs (filename As String, includeHeaders As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveAs(System::String ^ filename, bool includeHeaders);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="includeHeaders" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="filename">
          <span data-ttu-id="86bc1-434">O caminho da unidade física.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-434">The physical drive path.</span>
          </span>
        </param>
        <param name="includeHeaders">
          <span data-ttu-id="86bc1-435">Um valor booliano que especifica se um cabeçalho HTTP deve ser salvo em disco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-435">A Boolean value specifying whether an HTTP header should be saved to disk.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86bc1-436">Salva uma solicitação HTTP no disco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-436">Saves an HTTP request to disk.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86bc1-437">Salvar o contexto de solicitação para o disco pode ser útil na depuração.</span><span class="sxs-lookup"><span data-stu-id="86bc1-437">Saving the request context to disk can be useful in debugging.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86bc1-438">O código a seguir exemplo chama o <xref:System.Web.HttpRequest.SaveAs%2A> método quando uma página for carregada.</span><span class="sxs-lookup"><span data-stu-id="86bc1-438">The following code example calls the <xref:System.Web.HttpRequest.SaveAs%2A> method when a page is loaded.</span></span> <span data-ttu-id="86bc1-439">A chamada especifica que a solicitação ser salvo como um arquivo de texto em um diretório em que a identidade do processo ASP.NET tiver recebida permissões de gravação e que qualquer informação de cabeçalho incluída na solicitação é incluída no arquivo.</span><span class="sxs-lookup"><span data-stu-id="86bc1-439">The call specifies that the request be saved as a text file in a directory where the ASP.NET process identity has been granted write permissions, and that any header information included in the request is included in the file.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample6#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample6/cs/requestsample6cs.aspx#1)]
 [!code-vb[System.Web.HttpRequest_Sample6#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample6/vb/requestsample6vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="86bc1-440">A propriedade <see cref="P:System.Web.Configuration.HttpRuntimeSection.RequireRootedSaveAsPath" /> da <see cref="T:System.Web.Configuration.HttpRuntimeSection" /> é definida como <see langword="true" />, mas <paramref name="filename" /> não é um caminho absoluto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-440">The <see cref="P:System.Web.Configuration.HttpRuntimeSection.RequireRootedSaveAsPath" /> property of the <see cref="T:System.Web.Configuration.HttpRuntimeSection" /> is set to <see langword="true" /> but <paramref name="filename" /> is not an absolute path.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ServerVariables">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameValueCollection ServerVariables { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection ServerVariables" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.ServerVariables" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServerVariables As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameValueCollection ^ ServerVariables { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86bc1-441">Obtém uma coleção de variáveis de servidor Web.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-441">Gets a collection of Web server variables.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86bc1-442">Um <see cref="T:System.Collections.Specialized.NameValueCollection" /> de variáveis do servidor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-442">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> of server variables.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86bc1-443">Para obter uma lista de variáveis de servidor com suporte pelo IIS, consulte [variáveis de servidor IIS](http://go.microsoft.com/fwlink/?LinkId=52471).</span><span class="sxs-lookup"><span data-stu-id="86bc1-443">For a list of server variables supported by IIS, see [IIS Server Variables](http://go.microsoft.com/fwlink/?LinkId=52471).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86bc1-444">O exemplo de código a seguir exibe os nomes e valores de todas as variáveis de servidor nomeado.</span><span class="sxs-lookup"><span data-stu-id="86bc1-444">The following code example displays the names and values of all named server variables.</span></span>  
  
 [!code-csharp[Classic HttpRequest.ServerVariables Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.ServerVariables Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.ServerVariables Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.ServerVariables Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TimedOutToken">
      <MemberSignature Language="C#" Value="public System.Threading.CancellationToken TimedOutToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Threading.CancellationToken TimedOutToken" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.TimedOutToken" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TimedOutToken As CancellationToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::CancellationToken TimedOutToken { System::Threading::CancellationToken get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.CancellationToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86bc1-445">Obtém um objeto <see cref="T:System.Threading.CancellationToken" /> que é disparado quando uma solicitação expira.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-445">Gets a <see cref="T:System.Threading.CancellationToken" /> object that is tripped when a request times out.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86bc1-446">O token de cancelamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-446">The cancellation token.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86bc1-447">O período de tempo limite pode ser especificado no arquivo Web. config (consulte <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A?displayProperty=nameWithType>) ou por meio de programação (consulte <xref:System.Web.HttpServerUtility.ScriptTimeout%2A?displayProperty=nameWithType>).</span><span class="sxs-lookup"><span data-stu-id="86bc1-447">The timeout period can be specified in the Web.config file (see <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A?displayProperty=nameWithType>) or programmatically (see <xref:System.Web.HttpServerUtility.ScriptTimeout%2A?displayProperty=nameWithType>).</span></span> <span data-ttu-id="86bc1-448">O período de tempo limite é medido desde o momento em que a solicitação chega.</span><span class="sxs-lookup"><span data-stu-id="86bc1-448">The timeout period is measured from the time the request comes in.</span></span> <span data-ttu-id="86bc1-449">Se o tempo limite padrão de segundos 110 estiver em vigor, o token de cancelamento será retirado não anterior a 110 segundos após o início do processamento da solicitação.</span><span class="sxs-lookup"><span data-stu-id="86bc1-449">If the default timeout of 110 seconds is in effect, the cancellation token will be tripped no earlier than 110 seconds after request processing begins.</span></span> <span data-ttu-id="86bc1-450">Você pode alterar o <xref:System.Web.HttpServerUtility.ScriptTimeout%2A?displayProperty=nameWithType> valor da propriedade, e como esse token de tempo não foi retirado ainda, o novo valor de tempo limite será respeitado.</span><span class="sxs-lookup"><span data-stu-id="86bc1-450">You can change the <xref:System.Web.HttpServerUtility.ScriptTimeout%2A?displayProperty=nameWithType> property value, and as long this token hasn't tripped yet, the new timeout value will be respected.</span></span>  
  
 <span data-ttu-id="86bc1-451">Atualmente o token fornece apenas 15 granularidade segundo, que significa que, se o valor de tempo limite é 110 segundos, o token será ser disparado em algum momento entre 110 e 125 segundos após o início do processamento da solicitação.</span><span class="sxs-lookup"><span data-stu-id="86bc1-451">Currently the token only provides 15 second granularity, which means that if the timeout value is 110 seconds, the token will be tripped sometime between 110 and 125 seconds after request processing begins.</span></span> <span data-ttu-id="86bc1-452">A granularidade pode ser alterado no futuro.</span><span class="sxs-lookup"><span data-stu-id="86bc1-452">The granularity may change in the future.</span></span>  
  
 <span data-ttu-id="86bc1-453">Embora essa propriedade é thread-safe, há restrições sobre seu uso.</span><span class="sxs-lookup"><span data-stu-id="86bc1-453">Even though this property is thread-safe, there are restrictions on its use.</span></span> <span data-ttu-id="86bc1-454">Para obter mais informações, consulte <xref:System.Web.HttpResponse.ClientDisconnectedToken%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="86bc1-454">For more information, see <xref:System.Web.HttpResponse.ClientDisconnectedToken%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="86bc1-455">Essa propriedade não faz sentida se tiver iniciado o processamento da solicitação WebSocket.</span><span class="sxs-lookup"><span data-stu-id="86bc1-455">This property is meaningless if WebSockets request processing has started.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TlsTokenBindingInfo">
      <MemberSignature Language="C#" Value="public System.Web.ITlsTokenBindingInfo TlsTokenBindingInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.ITlsTokenBindingInfo TlsTokenBindingInfo" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.TlsTokenBindingInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TlsTokenBindingInfo As ITlsTokenBindingInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::ITlsTokenBindingInfo ^ TlsTokenBindingInfo { System::Web::ITlsTokenBindingInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.ITlsTokenBindingInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86bc1-456">Obtém as informações de associação de token de TLS.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-456">Gets the TLS token binding information.</span>
          </span>
          <span data-ttu-id="86bc1-457">A propriedade permite que os aplicativos recuperem informações do token de solicitações HTTP de entrada para autenticação avançada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-457">The property enables applications to retrieve token information from incoming HTTP requests for enhanced authentication.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86bc1-458">O token de associação para a conexão atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-458">The binding token for the current connection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86bc1-459">Essa propriedade retorna `null` em plataformas não windows10.</span><span class="sxs-lookup"><span data-stu-id="86bc1-459">This property returns `null` on non-windows10 platforms.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TotalBytes">
      <MemberSignature Language="C#" Value="public int TotalBytes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TotalBytes" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.TotalBytes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TotalBytes As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int TotalBytes { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86bc1-460">Obtém o número de bytes no fluxo de entrada atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-460">Gets the number of bytes in the current input stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86bc1-461">O número de bytes no fluxo de entrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-461">The number of bytes in the input stream.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="86bc1-462">O exemplo de código a seguir determina se o <xref:System.Web.HttpRequest.TotalBytes%2A> o valor da propriedade é maior que 1.000 bytes e grava essas informações em um arquivo.</span><span class="sxs-lookup"><span data-stu-id="86bc1-462">The following code example determines whether the <xref:System.Web.HttpRequest.TotalBytes%2A> property value is greater than 1000 bytes and writes that information to a file.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample1#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#6)]
 [!code-vb[System.Web.HttpRequest_Sample1#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Unvalidated">
      <MemberSignature Language="C#" Value="public System.Web.UnvalidatedRequestValues Unvalidated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UnvalidatedRequestValues Unvalidated" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Unvalidated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Unvalidated As UnvalidatedRequestValues" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UnvalidatedRequestValues ^ Unvalidated { System::Web::UnvalidatedRequestValues ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UnvalidatedRequestValues</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86bc1-463">Obtém os valores de solicitação HTTP sem disparar a validação de solicitação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-463">Gets the HTTP request values without triggering request validation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86bc1-464">Os valores de solicitação HTTP que não foram verificados usando a validação de solicitação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-464">The HTTP request values that have not been checked using request validation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86bc1-465">Solicite verificações de validação de marcação HTML e script que pode indicar um ataque de script entre sites.</span><span class="sxs-lookup"><span data-stu-id="86bc1-465">Request validation checks for HTML markup and script that might indicate a potential cross-site scripting attack.</span></span> <span data-ttu-id="86bc1-466">Por padrão, todos os valores são verificados usando a validação de solicitação e se todos os valores contêm marcação ou script, o ASP.NET gera uma <xref:System.Web.HttpRequestValidationException> exceção.</span><span class="sxs-lookup"><span data-stu-id="86bc1-466">By default, all values are checked using request validation and if any values contain markup or script, ASP.NET throws an <xref:System.Web.HttpRequestValidationException> exception.</span></span> <span data-ttu-id="86bc1-467">Use este método se você prevê que a solicitação contém marcação (por exemplo, está permitindo que os usuários publiquem conteúdo que contém a marcação) e você deseja obter o valor bruto de uma solicitação.</span><span class="sxs-lookup"><span data-stu-id="86bc1-467">Use this method if you anticipate that the request will contain markup (for example, you are allowing users to post content that contains markup) and you want to get the raw value of a request.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="86bc1-468">Se você usar essa propriedade, você deve verificar manualmente os dados para possíveis ataques de script entre sites.</span><span class="sxs-lookup"><span data-stu-id="86bc1-468">If you use this property, you must manually check the data for potential cross-site scripting attacks.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UnvalidatedRequestValues" />
      </Docs>
    </Member>
    <Member MemberName="Url">
      <MemberSignature Language="C#" Value="public Uri Url { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Url" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Url" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Url As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Url { Uri ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86bc1-469">Obtém informações sobre a URL da solicitação atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-469">Gets information about the URL of the current request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86bc1-470">Um objeto <see cref="T:System.Uri" /> que contém a URL da solicitação atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-470">A <see cref="T:System.Uri" /> object that contains the URL of the current request.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="86bc1-471">O código a seguir exemplo atribui o <xref:System.Uri> objeto da solicitação atual para uma variável de objeto e exibe o valor de duas propriedades de URL do objeto para a saída HTTP.</span><span class="sxs-lookup"><span data-stu-id="86bc1-471">The following code example assigns the <xref:System.Uri> object of the current request to an object variable and displays the value of two properties of the URL object to the HTTP output.</span></span>  
  
 [!code-csharp[Classic HttpRequest.Url Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.Url Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.Url Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.Url Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Uri" />
        <altmember cref="P:System.Web.HttpRequest.RawUrl" />
      </Docs>
    </Member>
    <Member MemberName="UrlReferrer">
      <MemberSignature Language="C#" Value="public Uri UrlReferrer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri UrlReferrer" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.UrlReferrer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UrlReferrer As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ UrlReferrer { Uri ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86bc1-472">Obtém informações sobre a URL da solicitação anterior do cliente vinculada à URL atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-472">Gets information about the URL of the client's previous request that linked to the current URL.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86bc1-473">Um objeto <see cref="T:System.Uri" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-473">A <see cref="T:System.Uri" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="86bc1-474">O exemplo de código a seguir exibe o valor de duas propriedades de URL que chamadas, o cliente do aplicativo atual.</span><span class="sxs-lookup"><span data-stu-id="86bc1-474">The following code example displays the value of two properties of the URL that referred the client to the current application.</span></span>  
  
 [!code-csharp[Classic HttpRequest.UrlReferrer Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.UrlReferrer Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.UrlReferrer Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.UrlReferrer Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UriFormatException">
          <span data-ttu-id="86bc1-475">O cabeçalho da solicitação <see langword="Referer" /> HTTP está malformado e não pode ser convertido em um objeto <see cref="T:System.Uri" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-475">The HTTP <see langword="Referer" /> request header is malformed and cannot be converted to a <see cref="T:System.Uri" /> object.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="UserAgent">
      <MemberSignature Language="C#" Value="public string UserAgent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserAgent" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.UserAgent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserAgent As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserAgent { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86bc1-476">Obtém a cadeia de caracteres de agente do usuário bruto do navegador do cliente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-476">Gets the raw user agent string of the client browser.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86bc1-477">A cadeia de caracteres de agente do usuário bruto do navegador do cliente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-477">The raw user agent string of the client browser.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="86bc1-478">O exemplo de código a seguir atribui a identificação de tipo de navegador do solicitante a uma variável de cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="86bc1-478">The following code example assigns the type identification of the requesting browser to a string variable.</span></span>  
  
 [!code-csharp[Classic HttpRequest.UserAgent Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.UserAgent Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.UserAgent Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.UserAgent Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Page.ClientTarget" />
        <altmember cref="T:System.Web.HttpBrowserCapabilities" />
        <altmember cref="P:System.Web.HttpRequest.Browser" />
      </Docs>
    </Member>
    <Member MemberName="UserHostAddress">
      <MemberSignature Language="C#" Value="public string UserHostAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserHostAddress" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.UserHostAddress" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserHostAddress As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserHostAddress { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86bc1-479">Obtém o endereço do host IP do cliente remoto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-479">Gets the IP host address of the remote client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86bc1-480">O endereço IP do cliente remoto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-480">The IP address of the remote client.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="86bc1-481">O seguinte exemplo de código usa o <xref:System.Web.HttpUtility.HtmlEncode%2A> método para a codificação HTML o valor da <xref:System.Web.HttpRequest.UserHostAddress%2A> propriedade e o <xref:System.IO.TextWriter.WriteLine%2A> método para gravar o valor codificado no arquivo.</span><span class="sxs-lookup"><span data-stu-id="86bc1-481">The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the <xref:System.Web.HttpRequest.UserHostAddress%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file.</span></span> <span data-ttu-id="86bc1-482">Este exemplo de código é parte de um exemplo maior fornecido para a <xref:System.Web.HttpRequest> classe.</span><span class="sxs-lookup"><span data-stu-id="86bc1-482">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample1#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#7)]
 [!code-vb[System.Web.HttpRequest_Sample1#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserHostName">
      <MemberSignature Language="C#" Value="public string UserHostName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserHostName" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.UserHostName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserHostName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserHostName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86bc1-483">Obtém o nome DNS do cliente remoto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-483">Gets the DNS name of the remote client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86bc1-484">O nome DNS do cliente remoto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-484">The DNS name of the remote client.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="86bc1-485">O seguinte exemplo de código usa o <xref:System.Web.HttpUtility.HtmlEncode%2A> método para a codificação HTML o valor da <xref:System.Web.HttpRequest.UserHostName%2A> propriedade e o <xref:System.IO.TextWriter.WriteLine%2A> método para gravar o valor codificado no arquivo.</span><span class="sxs-lookup"><span data-stu-id="86bc1-485">The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the <xref:System.Web.HttpRequest.UserHostName%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file.</span></span> <span data-ttu-id="86bc1-486">Este exemplo de código é parte de um exemplo maior fornecido para a <xref:System.Web.HttpRequest> classe.</span><span class="sxs-lookup"><span data-stu-id="86bc1-486">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample1#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#7)]
 [!code-vb[System.Web.HttpRequest_Sample1#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserLanguages">
      <MemberSignature Language="C#" Value="public string[] UserLanguages { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] UserLanguages" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.UserLanguages" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserLanguages As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ UserLanguages { cli::array &lt;System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86bc1-487">Obtém uma matriz de cadeia de caracteres classificada de preferências de idioma do cliente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-487">Gets a sorted string array of client language preferences.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86bc1-488">Obtém uma matriz de cadeia de caracteres classificada das preferências de idioma do cliente ou <see langword="null" /> se vazia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-488">A sorted string array of client language preferences, or <see langword="null" /> if empty.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="86bc1-489">O exemplo de código a seguir captura os vários valores retornados pelo <xref:System.Web.HttpRequest.UserLanguages%2A> propriedade em uma matriz de cadeia de caracteres e grava o nome de cada idioma para uma linha separada de HTTP de saída.</span><span class="sxs-lookup"><span data-stu-id="86bc1-489">The following code example captures the multiple values returned by the <xref:System.Web.HttpRequest.UserLanguages%2A> property into a string array and writes each language name to a separate line of HTTP output.</span></span>  
  
 <span data-ttu-id="86bc1-490">Os nomes de idioma são fornecidos pelo navegador, e não há nenhuma lista definitiva de todas as possíveis códigos.</span><span class="sxs-lookup"><span data-stu-id="86bc1-490">The language names are provided by the browser, and there is no definitive list of all possible codes.</span></span>  <span data-ttu-id="86bc1-491">Normalmente consistem em um códigos de dois caracteres para o idioma, um hífen e um código de dois caracteres para a cultura, como "en-us" para os EUA Inglês e "fr-ca" para francês canadense.</span><span class="sxs-lookup"><span data-stu-id="86bc1-491">Typically these consist of a two-character codes for the language, a hyphen, and a two-character code for the culture, such as "en-us" for U.S. English and "fr-ca" for Canadian French.</span></span>  
  
 [!code-csharp[Classic HttpRequest.UserLanguages Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.UserLanguages Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.UserLanguages Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.UserLanguages Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateInput">
      <MemberSignature Language="C#" Value="public void ValidateInput ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ValidateInput() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.ValidateInput" />
      <MemberSignature Language="VB.NET" Value="Public Sub ValidateInput ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ValidateInput();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="86bc1-492">Faz com que a validação ocorra para as coleções acessadas por meio das propriedades <see cref="P:System.Web.HttpRequest.Cookies" />, <see cref="P:System.Web.HttpRequest.Form" /> e <see cref="P:System.Web.HttpRequest.QueryString" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-492">Causes validation to occur for the collections accessed through the <see cref="P:System.Web.HttpRequest.Cookies" />, <see cref="P:System.Web.HttpRequest.Form" />, and <see cref="P:System.Web.HttpRequest.QueryString" /> properties.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86bc1-493">O <xref:System.Web.HttpRequest> classe usa sinalizadores de validação de entrada para controlar se deseja executar a validação nas coleções de solicitação acessadas por meio de <xref:System.Web.HttpRequest.Cookies%2A>, <xref:System.Web.HttpRequest.Form%2A>, e <xref:System.Web.HttpRequest.QueryString%2A> propriedades.</span><span class="sxs-lookup"><span data-stu-id="86bc1-493">The <xref:System.Web.HttpRequest> class uses input validation flags to track whether to perform validation on the request collections accessed through the <xref:System.Web.HttpRequest.Cookies%2A>, <xref:System.Web.HttpRequest.Form%2A>, and <xref:System.Web.HttpRequest.QueryString%2A> properties.</span></span> <span data-ttu-id="86bc1-494">O <xref:System.Web.HttpRequest.ValidateInput%2A> método define esses sinalizadores isso que, quando os acessadores get para a <xref:System.Web.HttpRequest.Cookies%2A>, <xref:System.Web.HttpRequest.Form%2A>, ou <xref:System.Web.HttpRequest.QueryString%2A> propriedade são invocados, validação de entrada é executada.</span><span class="sxs-lookup"><span data-stu-id="86bc1-494">The <xref:System.Web.HttpRequest.ValidateInput%2A> method sets these flags so that when the get accessors for the <xref:System.Web.HttpRequest.Cookies%2A>, <xref:System.Web.HttpRequest.Form%2A>, or <xref:System.Web.HttpRequest.QueryString%2A> property are invoked, input validation is performed.</span></span> <span data-ttu-id="86bc1-495">Validação funciona verificando todos os dados de entrada em uma lista codificada de dados potencialmente perigosos.</span><span class="sxs-lookup"><span data-stu-id="86bc1-495">Validation works by checking all input data against a hard-coded list of potentially dangerous data.</span></span>  
  
 <span data-ttu-id="86bc1-496">Se o recurso de validação é habilitado pela diretiva de página ou de configuração, este método é chamado durante a página `ProcessRequest` fase de processamento.</span><span class="sxs-lookup"><span data-stu-id="86bc1-496">If the validation feature is enabled by page directive or configuration, this method is called during the page's `ProcessRequest` processing phase.</span></span> <span data-ttu-id="86bc1-497">O <xref:System.Web.HttpRequest.ValidateInput%2A> método pode ser chamado pelo seu código, se o recurso de validação não está habilitado.</span><span class="sxs-lookup"><span data-stu-id="86bc1-497">The <xref:System.Web.HttpRequest.ValidateInput%2A> method can be called by your code if the validation feature is not enabled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpRequestValidationException">
          <span data-ttu-id="86bc1-498">Dados potencialmente perigosos foram recebidos do cliente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bc1-498">Potentially dangerous data was received from the client.</span>
          </span>
        </exception>
        <altmember cref="P:System.Web.HttpRequest.Cookies" />
        <altmember cref="P:System.Web.HttpRequest.Form" />
        <altmember cref="P:System.Web.HttpRequest.QueryString" />
      </Docs>
    </Member>
  </Members>
</Type>