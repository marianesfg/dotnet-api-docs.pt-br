<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="TraceContextEventArgs.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5e4699ca0084a1e4531d3dbf87db9ac86e6264d1a.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e4699ca0084a1e4531d3dbf87db9ac86e6264d1a</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Web.TraceContextEventArgs">
          <source>Provides a collection of trace records to any method that handles the <ph id="ph1">&lt;see cref="E:System.Web.TraceContext.TraceFinished" /&gt;</ph> event.</source>
          <target state="translated">Fornece um conjunto de registros de rastreamento para qualquer método que manipula o evento <ph id="ph1">&lt;see cref="E:System.Web.TraceContext.TraceFinished" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Web.TraceContextEventArgs">
          <source>This class cannot be inherited.</source>
          <target state="translated">Essa classe não pode ser herdada.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.TraceContextEventArgs">
          <source>The <ph id="ph1">&lt;xref:System.Web.TraceContextEventArgs&gt;</ph> class is used by the <ph id="ph2">&lt;xref:System.Web.TraceContext&gt;</ph> class to provide access to trace records after all the tracing information is gathered during HTTP request processing.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.TraceContextEventArgs&gt;</ph> classe é usada pelo <ph id="ph2">&lt;xref:System.Web.TraceContext&gt;</ph> classe para fornecer acesso a registros de rastreamento depois que todas as informações de rastreamento é coletada durante o processamento de solicitação HTTP.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.TraceContextEventArgs">
          <source>By adding an event handler delegate to handle the <ph id="ph1">&lt;xref:System.Web.TraceContext.TraceFinished&gt;</ph> event, you can process the records, record them to your own data store, or provide them as input to a profiling tool.</source>
          <target state="translated">Adicionando um delegado de manipulador de eventos para lidar com o <ph id="ph1">&lt;xref:System.Web.TraceContext.TraceFinished&gt;</ph> eventos, você pode processar os registros, registrá-los para seu próprio repositório de dados ou fornecê-los como entrada para uma ferramenta de criação de perfil.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.TraceContextEventArgs">
          <source>The following code example demonstrates how you can register a <ph id="ph1">&lt;xref:System.Web.TraceContextEventHandler&gt;</ph> delegate to handle the <ph id="ph2">&lt;xref:System.Web.TraceContext.TraceFinished&gt;</ph> event.</source>
          <target state="translated">O exemplo de código a seguir demonstra como você pode registrar um <ph id="ph1">&lt;xref:System.Web.TraceContextEventHandler&gt;</ph> delegado para manipular o <ph id="ph2">&lt;xref:System.Web.TraceContext.TraceFinished&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.TraceContextEventArgs">
          <source>In this example, the <ph id="ph1">`OnTraceFinished`</ph> method accesses the collection of <ph id="ph2">&lt;xref:System.Web.TraceContextRecord&gt;</ph> objects through the <ph id="ph3">&lt;xref:System.Web.TraceContextEventArgs.TraceRecords%2A&gt;</ph> property, iterates through them, and writes them to the response stream.</source>
          <target state="translated">Neste exemplo, o <ph id="ph1">`OnTraceFinished`</ph> método acessa a coleção de <ph id="ph2">&lt;xref:System.Web.TraceContextRecord&gt;</ph> objetos por meio de <ph id="ph3">&lt;xref:System.Web.TraceContextEventArgs.TraceRecords%2A&gt;</ph> propriedade, itera-los e os grava no fluxo de resposta.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Web.TraceContextEventArgs.#ctor(System.Collections.ICollection)">
          <source>A collection of <ph id="ph1">&lt;see cref="T:System.Web.TraceContextRecord" /&gt;</ph> objects that represent all the trace records logged for the current request.</source>
          <target state="translated">Uma coleção de objetos <ph id="ph1">&lt;see cref="T:System.Web.TraceContextRecord" /&gt;</ph> que representam todos os registros de rastreamento registrados para a solicitação atual.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Web.TraceContextEventArgs.#ctor(System.Collections.ICollection)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.TraceContextEventArgs" /&gt;</ph> class, using the provided collection of trace records.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Web.TraceContextEventArgs" /&gt;</ph> usando a coleção de registros de rastreamento fornecida.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="P:System.Web.TraceContextEventArgs.TraceRecords">
          <source>Gets a collection of <ph id="ph1">&lt;see cref="T:System.Web.TraceContextRecord" /&gt;</ph> messages that are associated with the current request.</source>
          <target state="translated">Obtém uma coleção de mensagens <ph id="ph1">&lt;see cref="T:System.Web.TraceContextRecord" /&gt;</ph> associadas à solicitação atual.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.TraceContextEventArgs.TraceRecords">
          <source>A collection of trace records that are associated with the current request.</source>
          <target state="translated">Uma coleção de registros de rastreamento que estão associados com a solicitação atual.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.TraceContextEventArgs.TraceRecords">
          <source>Every call to the <ph id="ph1">&lt;xref:System.Web.TraceContext.Write%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.TraceContext.Warn%2A?displayProperty=nameWithType&gt;</ph> methods generates a <ph id="ph3">&lt;xref:System.Web.TraceContextRecord&gt;</ph> object that is added to the <ph id="ph4">&lt;xref:System.Web.TraceContextEventArgs.TraceRecords%2A&gt;</ph> messages collection.</source>
          <target state="translated">Todas as chamadas para o <ph id="ph1">&lt;xref:System.Web.TraceContext.Write%2A?displayProperty=nameWithType&gt;</ph> e <ph id="ph2">&lt;xref:System.Web.TraceContext.Warn%2A?displayProperty=nameWithType&gt;</ph> métodos gera um <ph id="ph3">&lt;xref:System.Web.TraceContextRecord&gt;</ph> objeto que é adicionado ao <ph id="ph4">&lt;xref:System.Web.TraceContextEventArgs.TraceRecords%2A&gt;</ph> mensagens de coleção.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.TraceContextEventArgs.TraceRecords">
          <source>The <ph id="ph1">&lt;xref:System.Web.TraceContext.Warn%2A&gt;</ph> method call sets the <ph id="ph2">&lt;xref:System.Web.TraceContextRecord.IsWarning%2A&gt;</ph> property to <ph id="ph3">`true`</ph>, while the other method calls set it to <ph id="ph4">`false`</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.TraceContext.Warn%2A&gt;</ph> conjuntos de chamada do método de <ph id="ph2">&lt;xref:System.Web.TraceContextRecord.IsWarning%2A&gt;</ph> propriedade <ph id="ph3">`true`</ph>, enquanto outras chamadas de método defini-lo como <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.TraceContextEventArgs.TraceRecords">
          <source>You can iterate through the <ph id="ph1">&lt;xref:System.Web.TraceContextEventArgs.TraceRecords%2A&gt;</ph> messages and examine records with specific categories or messages, and whether they are warnings.</source>
          <target state="translated">Você pode iterar por meio de <ph id="ph1">&lt;xref:System.Web.TraceContextEventArgs.TraceRecords%2A&gt;</ph> mensagens e examinar os registros com categorias específicas ou mensagens, e se eles são avisos.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.TraceContextEventArgs.TraceRecords">
          <source>The following code example demonstrates how you can register a <ph id="ph1">&lt;xref:System.Web.TraceContextEventHandler&gt;</ph> delegate to handle the <ph id="ph2">&lt;xref:System.Web.TraceContext.TraceFinished&gt;</ph> event.</source>
          <target state="translated">O exemplo de código a seguir demonstra como você pode registrar um <ph id="ph1">&lt;xref:System.Web.TraceContextEventHandler&gt;</ph> delegado para manipular o <ph id="ph2">&lt;xref:System.Web.TraceContext.TraceFinished&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.TraceContextEventArgs.TraceRecords">
          <source>In this example, the <ph id="ph1">`OnTraceFinished`</ph> method accesses the collection of <ph id="ph2">&lt;xref:System.Web.TraceContextRecord&gt;</ph> objects through the <ph id="ph3">&lt;xref:System.Web.TraceContextEventArgs.TraceRecords%2A&gt;</ph> property, iterates through them, and writes them to the response stream.</source>
          <target state="translated">Neste exemplo, o <ph id="ph1">`OnTraceFinished`</ph> método acessa a coleção de <ph id="ph2">&lt;xref:System.Web.TraceContextRecord&gt;</ph> objetos por meio de <ph id="ph3">&lt;xref:System.Web.TraceContextEventArgs.TraceRecords%2A&gt;</ph> propriedade, itera-los e os grava no fluxo de resposta.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>