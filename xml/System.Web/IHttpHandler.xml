<Type Name="IHttpHandler" FullName="System.Web.IHttpHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="98b2f8e81292b161daf8dee4c4562f466a977207" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IHttpHandler" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IHttpHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.IHttpHandler" />
  <TypeSignature Language="VB.NET" Value="Public Interface IHttpHandler" />
  <TypeSignature Language="C++ CLI" Value="public interface class IHttpHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="f08a4-101">Define o contrato que o ASP.NET implementa para processar de forma síncrona as solicitações Web HTTP usando manipuladores HTTP personalizados.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f08a4-101">Defines the contract that ASP.NET implements to synchronously process HTTP Web requests using custom HTTP handlers.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f08a4-102">Você pode escrever manipuladores HTTP personalizados para processar específicos e predefinidos de tipos de solicitações HTTP em qualquer linguagem compatível com Common Language Specification (CLS).</span><span class="sxs-lookup"><span data-stu-id="f08a4-102">You can write custom HTTP handlers to process specific, predefined types of HTTP requests in any Common Language Specification (CLS) compliant language.</span></span> <span data-ttu-id="f08a4-103">Código executável definido no `HttpHandler` classes, em vez de páginas ASP ou da Web do ASP.NET convencionais, responde a essas solicitações específicas.</span><span class="sxs-lookup"><span data-stu-id="f08a4-103">Executable code defined in the `HttpHandler` classes, rather than conventional ASP or ASP.NET Web pages, responds to these specific requests.</span></span> <span data-ttu-id="f08a4-104">Manipuladores HTTP oferecem uma maneira de interagir com os serviços de resposta do servidor Web do IIS e a solicitação de baixo nível e fornecem funcionalidade muito como extensões ISAPI, mas com um modelo de programação mais simples.</span><span class="sxs-lookup"><span data-stu-id="f08a4-104">HTTP handlers give you a means of interacting with the low-level request and response services of the IIS Web server and provide functionality much like ISAPI extensions but with a simpler programming model.</span></span>  
  
 <span data-ttu-id="f08a4-105">Se o manipulador de acessarem os valores de estado de sessão, ele deve implementar o <xref:System.Web.SessionState.IRequiresSessionState> interface (uma interface de marcador sem métodos).</span><span class="sxs-lookup"><span data-stu-id="f08a4-105">If your handler will access session state values, it must implement the <xref:System.Web.SessionState.IRequiresSessionState> interface (a marker interface with no methods).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="IsReusable">
      <MemberSignature Language="C#" Value="public bool IsReusable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReusable" />
      <MemberSignature Language="DocId" Value="P:System.Web.IHttpHandler.IsReusable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReusable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReusable { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f08a4-106">Obtém um valor que indica se outra solicitação pode usar a instância de <see cref="T:System.Web.IHttpHandler" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f08a4-106">Gets a value indicating whether another request can use the <see cref="T:System.Web.IHttpHandler" /> instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f08a4-107">
            <see langword="true" /> se a instância de <see cref="T:System.Web.IHttpHandler" /> for reutilizável; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f08a4-107">
              <see langword="true" /> if the <see cref="T:System.Web.IHttpHandler" /> instance is reusable; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f08a4-108">Definir explicitamente o <xref:System.Web.IHttpHandler.IsReusable%2A> propriedade `true` ou `false` pelo código que você fornecer que substitui o <xref:System.Web.IHttpHandler.IsReusable%2A> acessador de propriedade (getter).</span><span class="sxs-lookup"><span data-stu-id="f08a4-108">You explicitly set the <xref:System.Web.IHttpHandler.IsReusable%2A> property to `true` or `false` by code you provide that overrides the <xref:System.Web.IHttpHandler.IsReusable%2A> property accessor (getter).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f08a4-109">O exemplo de código a seguir grava o fluxo de saída HTTP em resposta a uma solicitação de cliente para uma página chamada handler.aspx quatro linhas de texto.</span><span class="sxs-lookup"><span data-stu-id="f08a4-109">The following code example writes four lines of text to the HTTP output stream in response to a client request for a page named handler.aspx.</span></span> <span data-ttu-id="f08a4-110">Todas as solicitações de handler.aspx são atendidas pelo `MyHttpHandler` classe no namespace `HandlerExample` contidos no assembly HandlerTest.dll.</span><span class="sxs-lookup"><span data-stu-id="f08a4-110">All requests for handler.aspx are serviced by the `MyHttpHandler` class in the namespace `HandlerExample` contained in the assembly HandlerTest.dll.</span></span>  
  
 [!code-csharp[Classic IHttpHandler.ProcessRequest Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic IHttpHandler.ProcessRequest Example/CS/source.cs#1)]
 [!code-vb[Classic IHttpHandler.ProcessRequest Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic IHttpHandler.ProcessRequest Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessRequest">
      <MemberSignature Language="C#" Value="public void ProcessRequest (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessRequest(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.IHttpHandler.ProcessRequest(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ProcessRequest (context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ProcessRequest(System::Web::HttpContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="f08a4-111">Um objeto <see cref="T:System.Web.HttpContext" /> que fornece referências aos objetos intrínsecos do servidor (por exemplo, <see langword="Request" />, <see langword="Response" />, <see langword="Session" /> e <see langword="Server" />) usados para atender a solicitações HTTP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f08a4-111">An <see cref="T:System.Web.HttpContext" /> object that provides references to the intrinsic server objects (for example, <see langword="Request" />, <see langword="Response" />, <see langword="Session" />, and <see langword="Server" />) used to service HTTP requests.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f08a4-112">Permite o processamento de solicitações HTTP da Web por um <see langword="HttpHandler" /> personalizado que implementa a interface <see cref="T:System.Web.IHttpHandler" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f08a4-112">Enables processing of HTTP Web requests by a custom <see langword="HttpHandler" /> that implements the <see cref="T:System.Web.IHttpHandler" /> interface.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f08a4-113">Colocar personalizados `HttpHandler` código de <xref:System.Web.IHttpHandler.ProcessRequest%2A> método virtual, conforme mostrado no exemplo a seguir.</span><span class="sxs-lookup"><span data-stu-id="f08a4-113">Place your custom `HttpHandler` code in the <xref:System.Web.IHttpHandler.ProcessRequest%2A> virtual method, as shown in the following example.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f08a4-114">O exemplo de código a seguir grava o fluxo de saída HTTP em resposta a uma solicitação de cliente para uma página chamada handler.aspx quatro linhas de texto.</span><span class="sxs-lookup"><span data-stu-id="f08a4-114">The following code example writes four lines of text to the HTTP output stream in response to a client request for a page named handler.aspx.</span></span> <span data-ttu-id="f08a4-115">Todas as solicitações de handler.aspx são atendidas pelo `MyHttpHandler` classe no namespace `HandlerExample` contidos no assembly HandlerTest.dll.</span><span class="sxs-lookup"><span data-stu-id="f08a4-115">All requests for handler.aspx are serviced by the `MyHttpHandler` class in the namespace `HandlerExample` contained in the assembly HandlerTest.dll.</span></span>  
  
 [!code-csharp[Classic IHttpHandler.ProcessRequest Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic IHttpHandler.ProcessRequest Example/CS/source.cs#1)]
 [!code-vb[Classic IHttpHandler.ProcessRequest Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic IHttpHandler.ProcessRequest Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>