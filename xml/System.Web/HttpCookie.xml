<Type Name="HttpCookie" FullName="System.Web.HttpCookie">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6507c2b8ae511c931a4425a1b84ca9ace48e8c19" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57931968" /></Metadata><TypeSignature Language="C#" Value="public sealed class HttpCookie" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpCookie extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.HttpCookie" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpCookie" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpCookie sealed" />
  <TypeSignature Language="F#" Value="type HttpCookie = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="d8ba1-101">Fornece uma maneira fortemente tipada de criar e manipular cookies HTTP individuais.</span><span class="sxs-lookup"><span data-stu-id="d8ba1-101">Provides a type-safe way to create and manipulate individual HTTP cookies.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8ba1-102">O <xref:System.Web.HttpCookie> classe obtém e define as propriedades de cookies individuais.</span><span class="sxs-lookup"><span data-stu-id="d8ba1-102">The <xref:System.Web.HttpCookie> class gets and sets properties of individual cookies.</span></span> <span data-ttu-id="d8ba1-103">O <xref:System.Web.HttpCookieCollection> classe fornece métodos para armazenar, recuperar e gerenciar vários cookies.</span><span class="sxs-lookup"><span data-stu-id="d8ba1-103">The <xref:System.Web.HttpCookieCollection> class provides methods to store, retrieve, and manage multiple cookies.</span></span>  
  
 <span data-ttu-id="d8ba1-104">O ASP.NET inclui duas coleções de cookies intrínsecos.</span><span class="sxs-lookup"><span data-stu-id="d8ba1-104">ASP.NET includes two intrinsic cookie collections.</span></span> <span data-ttu-id="d8ba1-105">Coleção acessada por meio de <xref:System.Web.HttpRequest.Cookies%2A> coleção do <xref:System.Web.HttpRequest> objeto contém os cookies transmitidos pelo cliente para o servidor no `Cookie` cabeçalho.</span><span class="sxs-lookup"><span data-stu-id="d8ba1-105">The collection accessed through the <xref:System.Web.HttpRequest.Cookies%2A> collection of the <xref:System.Web.HttpRequest> object contains cookies transmitted by the client to the server in the `Cookie` header.</span></span> <span data-ttu-id="d8ba1-106">A coleção acessada por meio das <xref:System.Web.HttpResponse.Cookies%2A> coleção do <xref:System.Web.HttpResponse> objeto contém os novos cookies criados no servidor e transmitidos para o cliente no `Set-Cookie` cabeçalho de resposta HTTP.</span><span class="sxs-lookup"><span data-stu-id="d8ba1-106">The collection accessed through the <xref:System.Web.HttpResponse.Cookies%2A> collection of the <xref:System.Web.HttpResponse> object contains new cookies created on the server and transmitted to the client in the `Set-Cookie` HTTP response header.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d8ba1-107">O exemplo de código a seguir demonstra como verificar se há um cookie chamado `DateCookieExample` no <xref:System.Web.HttpRequest> objeto.</span><span class="sxs-lookup"><span data-stu-id="d8ba1-107">The following code example demonstrates how to check for a cookie named `DateCookieExample` in the <xref:System.Web.HttpRequest> object.</span></span> <span data-ttu-id="d8ba1-108">Se o cookie não for encontrado, ele é criado e adicionado ao <xref:System.Web.HttpResponse> objeto.</span><span class="sxs-lookup"><span data-stu-id="d8ba1-108">If the cookie is not found, it is created and added to the <xref:System.Web.HttpResponse> object.</span></span> <span data-ttu-id="d8ba1-109">O cookie é definido para expirar em 10 minutos.</span><span class="sxs-lookup"><span data-stu-id="d8ba1-109">The cookie is set to expire in 10 minutes.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpCookie#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpCookie/cs/HttpCookie.cs.aspx#1)]
 [!code-aspx-vb[System.Web.HttpCookie#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpCookie/vb/HttpCookie.vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.HttpResponse" />
    <altmember cref="T:System.Web.HttpRequest" />
    <altmember cref="T:System.Web.HttpCookieCollection" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d8ba1-110">Inicializa uma nova instância da classe <see cref="T:System.Web.HttpCookie" />.</span><span class="sxs-lookup"><span data-stu-id="d8ba1-110">Initializes a new instance of the <see cref="T:System.Web.HttpCookie" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpCookie (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCookie.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpCookie(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Web.HttpCookie : string -&gt; System.Web.HttpCookie" Usage="new System.Web.HttpCookie name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="d8ba1-111">O nome do novo cookie.</span><span class="sxs-lookup"><span data-stu-id="d8ba1-111">The name of the new cookie.</span></span></param>
        <summary><span data-ttu-id="d8ba1-112">Cria e nomeia um novo cookie.</span><span class="sxs-lookup"><span data-stu-id="d8ba1-112">Creates and names a new cookie.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d8ba1-113">O exemplo de código a seguir cria e nomeia um novo cookie.</span><span class="sxs-lookup"><span data-stu-id="d8ba1-113">The following code example creates and names a new cookie.</span></span>  
  
 [!code-csharp[Classic HttpCookie.HttpCookie Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookie.HttpCookie Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookie.HttpCookie Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookie.HttpCookie Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpCookie (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCookie.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpCookie(System::String ^ name, System::String ^ value);" />
      <MemberSignature Language="F#" Value="new System.Web.HttpCookie : string * string -&gt; System.Web.HttpCookie" Usage="new System.Web.HttpCookie (name, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="d8ba1-114">O nome do novo cookie.</span><span class="sxs-lookup"><span data-stu-id="d8ba1-114">The name of the new cookie.</span></span></param>
        <param name="value"><span data-ttu-id="d8ba1-115">O valor do novo cookie.</span><span class="sxs-lookup"><span data-stu-id="d8ba1-115">The value of the new cookie.</span></span></param>
        <summary><span data-ttu-id="d8ba1-116">Cria, nomeia e atribui um valor a um novo cookie.</span><span class="sxs-lookup"><span data-stu-id="d8ba1-116">Creates, names, and assigns a value to a new cookie.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d8ba1-117">O exemplo de código a seguir cria, nomeia e define o valor de um novo cookie.</span><span class="sxs-lookup"><span data-stu-id="d8ba1-117">The following code example creates, names, and sets the value of a new cookie.</span></span>  
  
 [!code-csharp[Classic HttpCookie.HttpCookie1 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookie.HttpCookie1 Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookie.HttpCookie1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookie.HttpCookie1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Domain">
      <MemberSignature Language="C#" Value="public string Domain { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Domain" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.Domain" />
      <MemberSignature Language="VB.NET" Value="Public Property Domain As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Domain { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Domain : string with get, set" Usage="System.Web.HttpCookie.Domain" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d8ba1-118">Obtém ou define o domínio a ser associado ao cookie.</span><span class="sxs-lookup"><span data-stu-id="d8ba1-118">Gets or sets the domain to associate the cookie with.</span></span></summary>
        <value><span data-ttu-id="d8ba1-119">O nome do domínio a ser associado ao cookie.</span><span class="sxs-lookup"><span data-stu-id="d8ba1-119">The name of the domain to associate the cookie with.</span></span> <span data-ttu-id="d8ba1-120">O valor padrão é o domínio atual.</span><span class="sxs-lookup"><span data-stu-id="d8ba1-120">The default value is the current domain.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8ba1-121">Definindo o `Domain` atributo limita a transmissão do cookie para clientes que solicitam um recurso desse domínio.</span><span class="sxs-lookup"><span data-stu-id="d8ba1-121">Setting the `Domain` attribute limits transmission of the cookie to clients requesting a resource from that domain.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d8ba1-122">O exemplo de código a seguir define o domínio do cookie.</span><span class="sxs-lookup"><span data-stu-id="d8ba1-122">The following code example sets the cookie's domain.</span></span>  
  
 [!code-csharp[Classic HttpCookie.Domain Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookie.Domain Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookie.Domain Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookie.Domain Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Expires">
      <MemberSignature Language="C#" Value="public DateTime Expires { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime Expires" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.Expires" />
      <MemberSignature Language="VB.NET" Value="Public Property Expires As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime Expires { DateTime get(); void set(DateTime value); };" />
      <MemberSignature Language="F#" Value="member this.Expires : DateTime with get, set" Usage="System.Web.HttpCookie.Expires" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d8ba1-123">Obtém ou define a data e hora de expiração do cookie.</span><span class="sxs-lookup"><span data-stu-id="d8ba1-123">Gets or sets the expiration date and time for the cookie.</span></span></summary>
        <value><span data-ttu-id="d8ba1-124">A hora do dia (no cliente) na qual o cookie expira.</span><span class="sxs-lookup"><span data-stu-id="d8ba1-124">The time of day (on the client) at which the cookie expires.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d8ba1-125">O exemplo de código a seguir define o tempo de expiração do cookie para 10 minutos da hora atual.</span><span class="sxs-lookup"><span data-stu-id="d8ba1-125">The following code example sets the expiration time of the cookie to 10 minutes from the current time.</span></span>  
  
 [!code-csharp[Classic HttpCookie.Expires Example#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookie.Expires Example/CS/default.aspx#2)]
 [!code-vb[Classic HttpCookie.Expires Example#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookie.Expires Example/VB/default.aspx#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasKeys">
      <MemberSignature Language="C#" Value="public bool HasKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasKeys" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.HasKeys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasKeys As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasKeys { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasKeys : bool" Usage="System.Web.HttpCookie.HasKeys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d8ba1-126">Obtém um valor que indica se o um cookie tem subchaves.</span><span class="sxs-lookup"><span data-stu-id="d8ba1-126">Gets a value indicating whether a cookie has subkeys.</span></span></summary>
        <value><span data-ttu-id="d8ba1-127"><see langword="true" /> se o cookie tiver subchaves, caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d8ba1-127"><see langword="true" /> if the cookie has subkeys, otherwise, <see langword="false" />.</span></span> <span data-ttu-id="d8ba1-128">O valor padrão é <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d8ba1-128">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d8ba1-129">O exemplo de código a seguir examina cada membro de uma coleção de cookie para vários valores.</span><span class="sxs-lookup"><span data-stu-id="d8ba1-129">The following code example examines each member of a cookie collection for multiple values.</span></span> <span data-ttu-id="d8ba1-130">Se um cookie <xref:System.Web.HttpCookie.HasKeys%2A> é de propriedade `true`, indicando que vários valores estiverem presentes, este exemplo copia os nomes de valor para a matriz de uma cadeia de caracteres e os valores correspondentes em outra matriz de cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="d8ba1-130">If a cookie's <xref:System.Web.HttpCookie.HasKeys%2A> property is `true`, indicating that multiple values are present, this example copies the value names into one string array and the corresponding values into another string array.</span></span> <span data-ttu-id="d8ba1-131">Para obter um exemplo de como criar vários valores para um cookie, consulte <xref:System.Web.HttpCookie.Values%2A>.</span><span class="sxs-lookup"><span data-stu-id="d8ba1-131">For an example of how to create multiple values for a cookie, see <xref:System.Web.HttpCookie.Values%2A>.</span></span>  
  
 [!code-csharp[Classic HttpCookie.HasKeys Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookie.HasKeys Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookie.HasKeys Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookie.HasKeys Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Specialized.NameValueCollection" />
        <altmember cref="P:System.Web.HttpCookie.Value" />
      </Docs>
    </Member>
    <Member MemberName="HttpOnly">
      <MemberSignature Language="C#" Value="public bool HttpOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HttpOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.HttpOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property HttpOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HttpOnly { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HttpOnly : bool with get, set" Usage="System.Web.HttpCookie.HttpOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d8ba1-132">Obtém ou define um valor que especifica se um cookie é acessível pelo script do lado do cliente.</span><span class="sxs-lookup"><span data-stu-id="d8ba1-132">Gets or sets a value that specifies whether a cookie is accessible by client-side script.</span></span></summary>
        <value><span data-ttu-id="d8ba1-133"><see langword="true" /> se o cookie tiver o atributo <see langword="HttpOnly" /> e não puder ser acessado por meio de um script do lado do cliente; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d8ba1-133"><see langword="true" /> if the cookie has the <see langword="HttpOnly" /> attribute and cannot be accessed through a client-side script; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="d8ba1-134">O padrão é <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d8ba1-134">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8ba1-135">Versão do Microsoft Internet Explorer 6 Service Pack 1 e posterior dá suporte a uma propriedade do cookie, <xref:System.Web.HttpCookie.HttpOnly%2A>, que podem ajudar a atenuar ameaças de scripts entre sites que resultam em cookies roubados.</span><span class="sxs-lookup"><span data-stu-id="d8ba1-135">Microsoft Internet Explorer version 6 Service Pack 1 and later supports a cookie property, <xref:System.Web.HttpCookie.HttpOnly%2A>, that can help mitigate cross-site scripting threats that result in stolen cookies.</span></span> <span data-ttu-id="d8ba1-136">Roubo de cookies podem conter informações confidenciais, identificando o usuário para o site, como o ASP.NET sessão formulários ou a ID do tíquete de autenticação e podem ser reproduzidos pelo invasor para se mascarar como o usuário ou obter informações confidenciais.</span><span class="sxs-lookup"><span data-stu-id="d8ba1-136">Stolen cookies can contain sensitive information identifying the user to the site, such as the ASP.NET session ID or forms authentication ticket, and can be replayed by the attacker in order to masquerade as the user or obtain sensitive information.</span></span> <span data-ttu-id="d8ba1-137">Quando um `HttpOnly` cookie é recebido por um navegador em conformidade, é inacessível para o script do lado do cliente.</span><span class="sxs-lookup"><span data-stu-id="d8ba1-137">When an `HttpOnly` cookie is received by a compliant browser, it is inaccessible to client-side script.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="d8ba1-138">Definindo o <xref:System.Web.HttpCookie.HttpOnly%2A> propriedade para `true` não impede que um invasor com acesso ao canal de rede acessem diretamente o cookie.</span><span class="sxs-lookup"><span data-stu-id="d8ba1-138">Setting the <xref:System.Web.HttpCookie.HttpOnly%2A> property to `true` does not prevent an attacker with access to the network channel from accessing the cookie directly.</span></span> <span data-ttu-id="d8ba1-139">Considere o uso de Secure Sockets Layer (SSL) para ajudar a proteger contra isso.</span><span class="sxs-lookup"><span data-stu-id="d8ba1-139">Consider using Secure Sockets Layer (SSL) to help protect against this.</span></span> <span data-ttu-id="d8ba1-140">Segurança da estação de trabalho também é importante, pois um usuário mal-intencionado pode usar uma janela de navegador aberto ou em um computador que contém os cookies persistentes para obter acesso a um site da Web com a identidade de um usuário legítimo.</span><span class="sxs-lookup"><span data-stu-id="d8ba1-140">Workstation security is also important, as a malicious user could use an open browser window or a computer containing persistent cookies to obtain access to a Web site with a legitimate user's identity.</span></span>  
  
 <span data-ttu-id="d8ba1-141">Para obter mais informações sobre possíveis ataques e como essa propriedade pode ajudar a reduzi-las, consulte [mitigação Cross-site Scripting com Cookies HTTP-only](https://go.microsoft.com/fwlink/?LinkId=41580).</span><span class="sxs-lookup"><span data-stu-id="d8ba1-141">For more information on possible attacks and how this property can help mitigate them, see [Mitigating Cross-site Scripting With HTTP-only Cookies](https://go.microsoft.com/fwlink/?LinkId=41580).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d8ba1-142">O exemplo de código a seguir demonstra como escrever um `HttpOnly` cookie e mostra como não é acessível pelo cliente por meio do ECMAScript.</span><span class="sxs-lookup"><span data-stu-id="d8ba1-142">The following code example demonstrates how to write an `HttpOnly` cookie and shows how it is not accessible by the client through ECMAScript.</span></span>  
  
 [!code-aspx-csharp[HttpOnlyCookie#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpOnlyCookie/CS/httponlycookiecs.aspx#1)]
 [!code-aspx-vb[HttpOnlyCookie#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpOnlyCookie/vb/httponlycookievb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public string this[string key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(key As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ default[System::String ^] { System::String ^ get(System::String ^ key); void set(System::String ^ key, System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : string with get, set" Usage="System.Web.HttpCookie.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="d8ba1-143">A chave (índice) do valor do cookie.</span><span class="sxs-lookup"><span data-stu-id="d8ba1-143">The key (index) of the cookie value.</span></span></param>
        <summary><span data-ttu-id="d8ba1-144">Obtém um atalho para a propriedade <see cref="P:System.Web.HttpCookie.Values" />.</span><span class="sxs-lookup"><span data-stu-id="d8ba1-144">Gets a shortcut to the <see cref="P:System.Web.HttpCookie.Values" /> property.</span></span> <span data-ttu-id="d8ba1-145">Esta propriedade é fornecida para compatibilidade com versões anteriores de ASP (Active Server Pages).</span><span class="sxs-lookup"><span data-stu-id="d8ba1-145">This property is provided for compatibility with previous versions of Active Server Pages (ASP).</span></span></summary>
        <value><span data-ttu-id="d8ba1-146">O valor do cookie.</span><span class="sxs-lookup"><span data-stu-id="d8ba1-146">The cookie value.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.HttpCookie.Value" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Web.HttpCookie.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d8ba1-147">Obtém ou define o nome de um cookie.</span><span class="sxs-lookup"><span data-stu-id="d8ba1-147">Gets or sets the name of a cookie.</span></span></summary>
        <value><span data-ttu-id="d8ba1-148">O valor padrão é uma referência nula (<see langword="Nothing" /> no Visual Basic), a menos que o construtor especifique o contrário.</span><span class="sxs-lookup"><span data-stu-id="d8ba1-148">The default value is a null reference (<see langword="Nothing" /> in Visual Basic) unless the constructor specifies otherwise.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d8ba1-149">O exemplo de código a seguir recebe uma coleção de cookie do cliente no `Cookie` cabeçalho e loops pela coleção procurando um cookie com o nome específico.</span><span class="sxs-lookup"><span data-stu-id="d8ba1-149">The following code example receives a cookie collection from the client in the `Cookie` header and loops through the collection looking for a cookie with the specific name.</span></span>  
  
 [!code-csharp[Classic HttpCookie.Name Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookie.Name Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookie.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookie.Name Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpCookie.Value" />
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.Path" />
      <MemberSignature Language="VB.NET" Value="Public Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Path : string with get, set" Usage="System.Web.HttpCookie.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d8ba1-150">Obtém ou define o caminho virtual para transmitir com o cookie atual.</span><span class="sxs-lookup"><span data-stu-id="d8ba1-150">Gets or sets the virtual path to transmit with the current cookie.</span></span></summary>
        <value><span data-ttu-id="d8ba1-151">O caminho virtual para transmitir com o cookie.</span><span class="sxs-lookup"><span data-stu-id="d8ba1-151">The virtual path to transmit with the cookie.</span></span> <span data-ttu-id="d8ba1-152">O padrão é <see langword="/" />, que é a raiz do servidor.</span><span class="sxs-lookup"><span data-stu-id="d8ba1-152">The default is <see langword="/" />, which is the server root.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8ba1-153">O <xref:System.Web.HttpCookie.Path%2A> propriedade estende o <xref:System.Web.HttpCookie.Domain%2A> propriedade para descrever completamente a URL específica para o qual o cookie aplica-se.</span><span class="sxs-lookup"><span data-stu-id="d8ba1-153">The <xref:System.Web.HttpCookie.Path%2A> property extends the <xref:System.Web.HttpCookie.Domain%2A> property to completely describe the specific URL to which the cookie applies.</span></span> <span data-ttu-id="d8ba1-154">Por exemplo, em que a URL http:/ www.microsoft.com/asp, o domínio é www.microsoft.com e o caminho é /asp.</span><span class="sxs-lookup"><span data-stu-id="d8ba1-154">For example, in the URL http:/www.microsoft.com/asp, the domain is www.microsoft.com and the path is /asp.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d8ba1-155">O seguinte exemplo de código define o <xref:System.Web.HttpCookie.Path%2A> propriedade de um novo cookie.</span><span class="sxs-lookup"><span data-stu-id="d8ba1-155">The following code example sets the <xref:System.Web.HttpCookie.Path%2A> property of a new cookie.</span></span>  
  
 [!code-csharp[Classic HttpCookie.Path Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookie.Path Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookie.Path Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookie.Path Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpCookie.Domain" />
      </Docs>
    </Member>
    <Member MemberName="SameSite">
      <MemberSignature Language="C#" Value="public System.Web.SameSiteMode SameSite { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.SameSiteMode SameSite" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.SameSite" />
      <MemberSignature Language="VB.NET" Value="Public Property SameSite As SameSiteMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::SameSiteMode SameSite { System::Web::SameSiteMode get(); void set(System::Web::SameSiteMode value); };" />
      <MemberSignature Language="F#" Value="member this.SameSite : System.Web.SameSiteMode with get, set" Usage="System.Web.HttpCookie.SameSite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SameSiteMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d8ba1-156">Obtém ou define o valor do atributo SameSite do cookie.</span><span class="sxs-lookup"><span data-stu-id="d8ba1-156">Gets or sets the value for the SameSite attribute of the cookie.</span></span></summary>
        <value><span data-ttu-id="d8ba1-157">Um dos valores de enumeração que representa o modo de imposição do cookie.</span><span class="sxs-lookup"><span data-stu-id="d8ba1-157">One of the enumeration values that represents the enforcement mode of the cookie.</span></span> <span data-ttu-id="d8ba1-158">Se o aplicativo se destina ao .NET Framework 4.7.2 ou versões posteriores, o valor padrão é <see cref="F:System.Web.SameSiteMode.Lax" />; caso contrário, o valor padrão é <see cref="F:System.Web.SameSiteMode.None" />.</span><span class="sxs-lookup"><span data-stu-id="d8ba1-158">If the application targets the .NET Framework 4.7.2 or later versions, the default value is <see cref="F:System.Web.SameSiteMode.Lax" />; otherwise, the default value is <see cref="F:System.Web.SameSiteMode.None" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Secure">
      <MemberSignature Language="C#" Value="public bool Secure { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Secure" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.Secure" />
      <MemberSignature Language="VB.NET" Value="Public Property Secure As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Secure { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Secure : bool with get, set" Usage="System.Web.HttpCookie.Secure" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d8ba1-159">Obtém ou define um valor indicando se deve transmitir o cookie usando o protocolo SSL, isto é, apenas via HTTPS.</span><span class="sxs-lookup"><span data-stu-id="d8ba1-159">Gets or sets a value indicating whether to transmit the cookie using Secure Sockets Layer (SSL)--that is, over HTTPS only.</span></span></summary>
        <value><span data-ttu-id="d8ba1-160"><see langword="true" /> para transmitir o cookie por uma conexão SSL (HTTP); caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d8ba1-160"><see langword="true" /> to transmit the cookie over an SSL connection (HTTPS); otherwise, <see langword="false" />.</span></span> <span data-ttu-id="d8ba1-161">O valor padrão é <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d8ba1-161">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8ba1-162">Para definir a transmissão de cookies usando SSL para um aplicativo inteiro, habilitá-la no arquivo de configuração do aplicativo, Web. config, que reside no diretório raiz do aplicativo.</span><span class="sxs-lookup"><span data-stu-id="d8ba1-162">To set the transmission of cookies using SSL for an entire application, enable it in the application's configuration file, Web.config, which resides in the root directory of the application.</span></span> <span data-ttu-id="d8ba1-163">Para obter mais informações, consulte [httpCookies Element (ASP.NET Settings Schema)](https://msdn.microsoft.com/library/74790718-bfa3-4935-bc9a-59c88797e08f).</span><span class="sxs-lookup"><span data-stu-id="d8ba1-163">For more information, see [httpCookies Element (ASP.NET Settings Schema)](https://msdn.microsoft.com/library/74790718-bfa3-4935-bc9a-59c88797e08f).</span></span> <span data-ttu-id="d8ba1-164">Valores definidos de forma programática, usando o <xref:System.Web.HttpCookie.Secure%2A> propriedade substituem os valores definidos no arquivo Web. config.</span><span class="sxs-lookup"><span data-stu-id="d8ba1-164">Values set programmatically using the <xref:System.Web.HttpCookie.Secure%2A> property override values set in the Web.config file.</span></span>  
  
 <span data-ttu-id="d8ba1-165">Ao lidar com informações confidenciais, é altamente recomendável que você use o protocolo HTTPS com criptografia SSL.</span><span class="sxs-lookup"><span data-stu-id="d8ba1-165">When dealing with sensitive information, it is strongly recommended that you use HTTPS protocol with SSL encryption.</span></span> <span data-ttu-id="d8ba1-166">SSL protege os dados sejam alterados (integridade de dados), protege a identidade do usuário (confidencialidade) e garante que os dados são originados de cliente esperado (autenticação).</span><span class="sxs-lookup"><span data-stu-id="d8ba1-166">SSL protects against data being altered (data integrity), protects a user's identity (confidentiality), and assures that data originates from the expected client (authentication).</span></span> <span data-ttu-id="d8ba1-167">Para obter mais informações sobre os benefícios da criptografia, consulte [serviços de criptografia](~/docs/standard/security/cryptographic-services.md).</span><span class="sxs-lookup"><span data-stu-id="d8ba1-167">For more information on the benefits of encryption, see [Cryptographic Services](~/docs/standard/security/cryptographic-services.md).</span></span> <span data-ttu-id="d8ba1-168">Para obter mais informações sobre como configurar SSL em um servidor Web de serviços de informações da Internet (IIS), consulte [Configurando o SSL em um servidor Web ou um Site da Web](https://go.microsoft.com/fwlink/?LinkId=38553).</span><span class="sxs-lookup"><span data-stu-id="d8ba1-168">For more information about configuring SSL on an Internet Information Services (IIS) Web server, see [Configuring SSL on a Web Server or a Web Site](https://go.microsoft.com/fwlink/?LinkId=38553).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d8ba1-169">O exemplo de código a seguir entrará em ação se o cookie é definido para transmitir usando SSL.</span><span class="sxs-lookup"><span data-stu-id="d8ba1-169">The following code example takes action if the cookie is set to transmit using SSL.</span></span>  
  
 [!code-csharp[Classic HttpCookie.Secure Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookie.Secure Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookie.Secure Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookie.Secure Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6e4289e6-d1b7-4e82-ab0d-e83e3b6063ed"><span data-ttu-id="d8ba1-170">Usando o protocolo SSL</span><span class="sxs-lookup"><span data-stu-id="d8ba1-170">Using Secure Sockets Layer</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Shareable">
      <MemberSignature Language="C#" Value="public bool Shareable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Shareable" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.Shareable" />
      <MemberSignature Language="VB.NET" Value="Public Property Shareable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Shareable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Shareable : bool with get, set" Usage="System.Web.HttpCookie.Shareable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d8ba1-171">Determina se o cookie tem permissão para participar do cache de saída.</span><span class="sxs-lookup"><span data-stu-id="d8ba1-171">Determines whether the cookie is allowed to participate in output caching.</span></span></summary>
        <value><span data-ttu-id="d8ba1-172"><see langword="true" /> para especificar que o cache de saída não será suprimido para determinado <see cref="T:System.Web.HttpResponse" /> que contém um ou mais cookies de saída; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d8ba1-172"><see langword="true" /> to specify that output caching will not be suppressed for a give <see cref="T:System.Web.HttpResponse" /> containing one or more outbound cookies; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8ba1-173">Se um determinado <xref:System.Web.HttpResponse> contém um ou mais cookies de saída com <xref:System.Web.HttpCookie.Shareable%2A> é definido como `false` (o valor padrão), armazenamento em cache será suprimido para a resposta de saída.</span><span class="sxs-lookup"><span data-stu-id="d8ba1-173">If a given <xref:System.Web.HttpResponse> contains one or more outbound cookies with <xref:System.Web.HttpCookie.Shareable%2A> is set to `false` (the default value), output caching will be suppressed for the response.</span></span> <span data-ttu-id="d8ba1-174">Isso impede que os cookies que contêm informações potencialmente confidenciais sejam armazenadas em cache na resposta e enviados a vários clientes.</span><span class="sxs-lookup"><span data-stu-id="d8ba1-174">This prevents cookies that contain potentially sensitive information from being cached in the response and sent to multiple clients.</span></span>  <span data-ttu-id="d8ba1-175">Para permitir que uma resposta que contém os cookies sejam armazenados em cache, configure o cache normalmente para a resposta, como o uso de `OutputCache` diretiva ou MVC [OutputCache] de atributo e definir todos os cookies de saída ter <xref:System.Web.HttpCookie.Shareable%2A> definido como `true`.</span><span class="sxs-lookup"><span data-stu-id="d8ba1-175">To allow a response containing cookies to be cached, configure caching normally for the response, such as using the `OutputCache` directive or MVC's [OutputCache] attribute, and set all outbound cookies to have <xref:System.Web.HttpCookie.Shareable%2A> set to `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string input, out System.Web.HttpCookie result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string input, [out] class System.Web.HttpCookie&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCookie.TryParse(System.String,System.Web.HttpCookie@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (input As String, ByRef result As HttpCookie) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ input, [Runtime::InteropServices::Out] System::Web::HttpCookie ^ % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string *  -&gt; bool" Usage="System.Web.HttpCookie.TryParse (input, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" Index="0" FrameworkAlternate="netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="result" Type="System.Web.HttpCookie" RefType="out" Index="1" FrameworkAlternate="netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="d8ba1-176">A representação de cadeia de caracteres de um cookie.</span><span class="sxs-lookup"><span data-stu-id="d8ba1-176">The string representation of a cookie.</span></span></param>
        <param name="result"><span data-ttu-id="d8ba1-177">Se a conversão for bem-sucedida, conterá o valor <see cref="T:System.Web.HttpCookie" /> equivalente ao cookie contido em <paramref name="input" />.</span><span class="sxs-lookup"><span data-stu-id="d8ba1-177">If the conversion succeeded, contains the <see cref="T:System.Web.HttpCookie" /> value equivalent to the cookie contained in <paramref name="input" />.</span></span> <span data-ttu-id="d8ba1-178">Caso a conversão falhe, <paramref name="result" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d8ba1-178">If the conversion failed, <paramref name="result" /> is <see langword="null" />.</span></span> <span data-ttu-id="d8ba1-179">A conversão falhará se o parâmetro <paramref name="input" /> for <see langword="null" /> ou vazio ou se um nome de cookie não puder ser determinado <paramref name="input" />.</span><span class="sxs-lookup"><span data-stu-id="d8ba1-179">The conversion fails if the <paramref name="input" /> parameter is <see langword="null" /> or empty or if a cookie name can't be determined from <paramref name="input" />.</span></span> <span data-ttu-id="d8ba1-180">O valor desse parâmetro é substituído pelo método; o parâmetro é passado por referência e definido como nulo assim que o método é inserido.</span><span class="sxs-lookup"><span data-stu-id="d8ba1-180">This parameter's value is overwritten by the method; the parameter is passed by reference and set to null as soon as the method is entered.</span></span></param>
        <summary><span data-ttu-id="d8ba1-181">Converte a representação de cadeia de caracteres especificada de um cookie em seu <see cref="T:System.Web.HttpCookie" /> equivalente e retorna um valor que indica se a conversão foi bem-sucedida.</span><span class="sxs-lookup"><span data-stu-id="d8ba1-181">Converts the specified string representation of a cookie into its <see cref="T:System.Web.HttpCookie" /> equivalent and returns a value that indicates whether the conversion succeeded.</span></span></summary>
        <returns><span data-ttu-id="d8ba1-182"><see langword="true" /> caso <paramref name="input" /> tenha sido convertido com êxito; do contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d8ba1-182"><see langword="true" /> if <paramref name="input" /> was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Value { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Value : string with get, set" Usage="System.Web.HttpCookie.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d8ba1-183">Obtém ou define um valor de cookie individual.</span><span class="sxs-lookup"><span data-stu-id="d8ba1-183">Gets or sets an individual cookie value.</span></span></summary>
        <value><span data-ttu-id="d8ba1-184">O valor do cookie.</span><span class="sxs-lookup"><span data-stu-id="d8ba1-184">The value of the cookie.</span></span> <span data-ttu-id="d8ba1-185">O valor padrão é uma referência nula (<see langword="Nothing" /> no Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="d8ba1-185">The default value is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d8ba1-186">O exemplo de código a seguir define o valor de um cookie existente para "abc123".</span><span class="sxs-lookup"><span data-stu-id="d8ba1-186">The following code example sets the value of an existing cookie to "abc123".</span></span>  
  
 [!code-csharp[Classic HttpCookie.Value Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookie.Value Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookie.Value Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookie.Value Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameValueCollection Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection Values" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.Values" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Values As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameValueCollection ^ Values { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Values : System.Collections.Specialized.NameValueCollection" Usage="System.Web.HttpCookie.Values" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d8ba1-187">Obtém uma coleção de pares chave-valor que estão contidos em um único objeto de cookie.</span><span class="sxs-lookup"><span data-stu-id="d8ba1-187">Gets a collection of key/value pairs that are contained within a single cookie object.</span></span></summary>
        <value><span data-ttu-id="d8ba1-188">Uma coleção de valores de cookie.</span><span class="sxs-lookup"><span data-stu-id="d8ba1-188">A collection of cookie values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d8ba1-189">O exemplo de código a seguir cria um novo cookie e adiciona vários valores a ele.</span><span class="sxs-lookup"><span data-stu-id="d8ba1-189">The following code example creates a new cookie and adds several values to it.</span></span> <span data-ttu-id="d8ba1-190">Para obter um exemplo de como extrair vários valores de um cookie, consulte <xref:System.Web.HttpCookie.HasKeys%2A>.</span><span class="sxs-lookup"><span data-stu-id="d8ba1-190">For an example of how to extract multiple values from one cookie, see <xref:System.Web.HttpCookie.HasKeys%2A>.</span></span>  
  
 [!code-csharp[Classic HttpCookie.Values Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookie.Values Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookie.Values Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookie.Values Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpCookie.Value" />
      </Docs>
    </Member>
  </Members>
</Type>