<Type Name="HttpCookieCollection" FullName="System.Web.HttpCookieCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9c98b921e92d44583d18de7e81f3caa10dce2c2d" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39813595" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class HttpCookieCollection : System.Collections.Specialized.NameObjectCollectionBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpCookieCollection extends System.Collections.Specialized.NameObjectCollectionBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.HttpCookieCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpCookieCollection&#xA;Inherits NameObjectCollectionBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpCookieCollection sealed : System::Collections::Specialized::NameObjectCollectionBase" />
  <TypeSignature Language="F#" Value="type HttpCookieCollection = class&#xA;    inherit NameObjectCollectionBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Collections.Specialized.NameObjectCollectionBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornece uma maneira fortemente tipada de manipular cookies HTTP.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo de código a seguir demonstra como ler cookies usando o <xref:System.Web.HttpRequest.Cookies%2A> propriedade do <xref:System.Web.HttpRequest> do objeto e gravar cookies usando o <xref:System.Web.HttpResponse.Cookies%2A> propriedade do <xref:System.Web.HttpResponse> objeto. Ambas as propriedades retornam <xref:System.Web.HttpCookieCollection> objetos. Se qualquer um dos dois cookies nomeado `userName` e `lastVisit` não estão na solicitação HTTP, em seguida, eles são criados na resposta HTTP. Se existirem dois cookies, as propriedades dos cookies são exibidas.  
  
 [!code-aspx-csharp[System.Web.HttpCookieCollection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpCookieCollection/cs/HttpCookieCollection.cs.aspx#1)]
 [!code-aspx-vb[System.Web.HttpCookieCollection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpCookieCollection/vb/HttpCookieCollection.vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.HttpCookie" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpCookieCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCookieCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpCookieCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.HttpCookieCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O ASP.NET inclui duas coleções de cookies intrínsecos. A coleção acessível por meio <xref:System.Web.HttpRequest.Cookies%2A> contém os cookies transmitidos pelo cliente para o servidor no `Cookie` cabeçalho. A coleção acessível por meio <xref:System.Web.HttpResponse.Cookies%2A> contém os cookies gerado no servidor e transmitidos para o cliente no `Set-Cookie` cabeçalho.  
  
   
  
## Examples  
 O exemplo a seguir cria um novo objeto de coleção do cookie e o preenche com os cookies recebidos do cliente.  
  
 [!code-csharp[Classic HttpCookieCollection.HttpCookieCollection Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookieCollection.HttpCookieCollection Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookieCollection.HttpCookieCollection Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookieCollection.HttpCookieCollection Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.HttpRequest" />
        <altmember cref="T:System.Web.HttpResponse" />
        <altmember cref="T:System.Web.HttpCookie" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Web.HttpCookie cookie);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Web.HttpCookie cookie) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCookieCollection.Add(System.Web.HttpCookie)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (cookie As HttpCookie)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Web::HttpCookie ^ cookie);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Web.HttpCookie -&gt; unit" Usage="httpCookieCollection.Add cookie" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cookie" Type="System.Web.HttpCookie" />
      </Parameters>
      <Docs>
        <param name="cookie">O <see cref="T:System.Web.HttpCookie" /> a adicionar à coleção.</param>
        <summary>Adiciona o cookie especificado à coleção de cookies.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Qualquer número de coleções de cookie pode existir dentro de um aplicativo, mas apenas a coleção referenciada pelo intrínseca <xref:System.Web.HttpResponse.Cookies%2A> o objeto é enviado ao cliente.  
  
 O <xref:System.Web.HttpCookieCollection.Add%2A> método permite que os cookies duplicados na coleção de cookies. Use o <xref:System.Web.HttpCookieCollection.Set%2A> método para garantir a exclusividade de cookies na coleção de cookies.  
  
   
  
## Examples  
 O exemplo a seguir cria uma nova coleção de cookie e um novo cookie chamado "LastVisit", define o valor do cookie para a data e hora atual e adiciona o cookie para a nova coleção.  
  
 [!code-csharp[Classic HttpCookieCollection.Add Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookieCollection.Add Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookieCollection.Add Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookieCollection.Add Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpCookieCollection.Clear" />
        <altmember cref="M:System.Web.HttpCookieCollection.Set(System.Web.HttpCookie)" />
      </Docs>
    </Member>
    <Member MemberName="AllKeys">
      <MemberSignature Language="C#" Value="public string[] AllKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] AllKeys" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookieCollection.AllKeys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllKeys As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ AllKeys { cli::array &lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AllKeys : string[]" Usage="System.Web.HttpCookieCollection.AllKeys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém uma matriz de cadeias de caracteres que contém todas as chaves (nomes de cookies) na coleção de cookies.</summary>
        <value>Uma matriz de nomes de cookies.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir cria uma matriz de cadeia de caracteres que contém os nomes dos cookies na coleção de cookie do cliente.  
  
 [!code-csharp[Classic HttpCookieCollection.AllKeys Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookieCollection.AllKeys Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookieCollection.AllKeys Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookieCollection.AllKeys Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.HttpCookieCollection.Item" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCookieCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="httpCookieCollection.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Limpa todos os cookies da coleção de cookies.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir exclui todos os cookies de uma coleção de cookie.  
  
 [!code-csharp[Classic HttpCookieCollection.Clear Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookieCollection.Clear Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookieCollection.Clear Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookieCollection.Clear Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpCookieCollection.Add(System.Web.HttpCookie)" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array dest, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Array dest, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCookieCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (dest As Array, index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(Array ^ dest, int index);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : Array * int -&gt; unit" Usage="httpCookieCollection.CopyTo (dest, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dest" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dest">O <see cref="T:System.Array" /> de destino.</param>
        <param name="index">O índice da matriz de destino em que a cópia inicia.</param>
        <summary>Copia membros da coleção de cookies para uma <see cref="T:System.Array" />, começando no índice especificado da matriz.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir copia a coleção de cookies inteira em um novo objeto de matriz.  
  
 [!code-csharp[Classic HttpCookieCollection.CopyTo Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookieCollection.CopyTo Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookieCollection.CopyTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookieCollection.CopyTo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpCookieCollection.Clear" />
        <altmember cref="M:System.Web.HttpCookieCollection.Add(System.Web.HttpCookie)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Get">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Retorna um objeto <see cref="T:System.Web.HttpCookie" /> individual da coleção de cookies. Essa propriedade está sobrecarregada para permitir a recuperação de cookies por nome ou por índice numérico.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public System.Web.HttpCookie Get (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.HttpCookie Get(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCookieCollection.Get(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Get (index As Integer) As HttpCookie" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::HttpCookie ^ Get(int index);" />
      <MemberSignature Language="F#" Value="member this.Get : int -&gt; System.Web.HttpCookie" Usage="httpCookieCollection.Get index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpCookie</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">O índice do cookie a retornar da coleção.</param>
        <summary>Retorna o item <see cref="T:System.Web.HttpCookie" /> com o índice especificado da coleção de cookies.</summary>
        <returns>O <see cref="T:System.Web.HttpCookie" /> especificado por <paramref name="index" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir retorna cada cookie da coleção de cookies, verifica se ele é denominado "LastVisit" e, se "LastVisit" for encontrado, atualizará seu valor para a data e hora atuais.  
  
 [!code-csharp[Classic HttpCookieCollection.Get1 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookieCollection.Get1 Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookieCollection.Get1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookieCollection.Get1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpCookieCollection.Set(System.Web.HttpCookie)" />
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public System.Web.HttpCookie Get (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.HttpCookie Get(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCookieCollection.Get(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Get (name As String) As HttpCookie" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::HttpCookie ^ Get(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.Get : string -&gt; System.Web.HttpCookie" Usage="httpCookieCollection.Get name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpCookie</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">O nome do cookie a ser recuperado da coleção.</param>
        <summary>Retorna o cookie com o nome especificado da coleção de cookies.</summary>
        <returns>O <see cref="T:System.Web.HttpCookie" /> especificado por <paramref name="name" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se o cookie nomeado não existir, esse método cria um novo cookie com esse nome.  
  
   
  
## Examples  
 O exemplo a seguir captura a coleção de cookies enviada pelo cliente em uma nova coleção de cookie, recupera o cookie denominado "LastVisit" da nova coleção e atualiza o valor do cookie para a data e hora atuais.  
  
 [!code-csharp[Classic HttpCookieCollection.Get Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookieCollection.Get Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookieCollection.Get Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookieCollection.Get Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpCookieCollection.Set(System.Web.HttpCookie)" />
      </Docs>
    </Member>
    <Member MemberName="GetKey">
      <MemberSignature Language="C#" Value="public string GetKey (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetKey(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCookieCollection.GetKey(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetKey (index As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetKey(int index);" />
      <MemberSignature Language="F#" Value="member this.GetKey : int -&gt; string" Usage="httpCookieCollection.GetKey index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">O índice da chave a ser recuperada da coleção.</param>
        <summary>Retorna a chave (nome) do cookie no índice numérico especificado.</summary>
        <returns>O nome do cookie especificado por <paramref name="index" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir retorna cada cookie da coleção de cookies, verifica se ele é denominado "LastVisit" e, se "LastVisit" for encontrado, atualizará seu valor para a data e hora atuais.  
  
 [!code-csharp[Classic HttpCookieCollection.GetKey Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookieCollection.GetKey Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookieCollection.GetKey Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookieCollection.GetKey Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Obtém o cookie com o nome especificado da coleção de cookies. Essa propriedade está sobrecarregada para permitir a recuperação de cookies por nome ou por índice numérico.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Web.HttpCookie this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpCookie Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookieCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As HttpCookie" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpCookie ^ default[int] { System::Web::HttpCookie ^ get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Web.HttpCookie" Usage="System.Web.HttpCookieCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpCookie</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">O índice do cookie a ser recuperado da coleção.</param>
        <summary>Obtém o cookie com o índice numérico especificado da coleção de cookies.</summary>
        <value>O <see cref="T:System.Web.HttpCookie" /> especificado por <paramref name="index" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir armazena o nome do primeiro cookie como uma variável de cadeia de caracteres (índice = 0) em uma coleção de cookie.  
  
 [!code-csharp[Classic HttpCookieCollection.this1 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookieCollection.this1 Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookieCollection.this1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookieCollection.this1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.HttpCookieCollection.Get" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Web.HttpCookie this[string name] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpCookie Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookieCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(name As String) As HttpCookie" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpCookie ^ default[System::String ^] { System::Web::HttpCookie ^ get(System::String ^ name); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : System.Web.HttpCookie" Usage="System.Web.HttpCookieCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpCookie</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nome do cookie a ser recuperado.</param>
        <summary>Obtém o cookie com o nome especificado da coleção de cookies.</summary>
        <value>O <see cref="T:System.Web.HttpCookie" /> especificado por <paramref name="name." /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir obtém o cookie com o nome "LastVisit" e extrai o seu valor.  
  
 [!code-csharp[Classic HttpCookieCollection.this Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookieCollection.this Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookieCollection.this Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookieCollection.this Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.HttpCookieCollection.Get" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCookieCollection.Remove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.Remove : string -&gt; unit" Usage="httpCookieCollection.Remove name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">O nome do cookie a ser removido da coleção.</param>
        <summary>Remove o cookie com o nome especificado da coleção.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se um cookie com especificado `name` não existe na coleção, nenhuma exceção é lançada.  
  
   
  
## Examples  
 O exemplo a seguir remove um cookie da coleção.  
  
 [!code-csharp[Classic HttpCookieCollection.Remove Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookieCollection.Remove Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookieCollection.Remove Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookieCollection.Remove Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpCookieCollection.Add(System.Web.HttpCookie)" />
        <altmember cref="M:System.Web.HttpCookieCollection.Set(System.Web.HttpCookie)" />
      </Docs>
    </Member>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public void Set (System.Web.HttpCookie cookie);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Set(class System.Web.HttpCookie cookie) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCookieCollection.Set(System.Web.HttpCookie)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Set (cookie As HttpCookie)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Set(System::Web::HttpCookie ^ cookie);" />
      <MemberSignature Language="F#" Value="member this.Set : System.Web.HttpCookie -&gt; unit" Usage="httpCookieCollection.Set cookie" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cookie" Type="System.Web.HttpCookie" />
      </Parameters>
      <Docs>
        <param name="cookie">O objeto <see cref="T:System.Web.HttpCookie" /> a ser atualizado.</param>
        <summary>Atualiza o valor de um cookie existente em uma coleção de cookie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.HttpCookieCollection.Set%2A> método primeiro verifica para ver se um cookie já existe na coleção e o atualiza nesse caso. O <xref:System.Web.HttpCookieCollection.Set%2A> método não permite cookies duplicados na coleção de cookies. Para adicionar cookies duplicados na coleção de cookies, use o <xref:System.Web.HttpCookieCollection.Add%2A> método.  
  
   
  
## Examples  
 O exemplo a seguir atualiza o valor de um cookie existente.  
  
 [!code-csharp[Classic HttpCookieCollection.Set Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookieCollection.Set Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookieCollection.Set Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookieCollection.Set Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.HttpCookieCollection.Get" />
        <altmember cref="M:System.Web.HttpCookieCollection.Add(System.Web.HttpCookie)" />
      </Docs>
    </Member>
  </Members>
</Type>