<Type Name="HttpContextBase" FullName="System.Web.HttpContextBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7eced3f09ed80bb5b2027bdd68e4550f0e5d27e4" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class HttpContextBase : IServiceProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit HttpContextBase extends System.Object implements class System.IServiceProvider" />
  <TypeSignature Language="DocId" Value="T:System.Web.HttpContextBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class HttpContextBase&#xA;Implements IServiceProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpContextBase abstract : IServiceProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IServiceProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.Web.Abstractions, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="d0c1a-101">Serve como a classe base para as classes que contêm informações específicas de HTTP sobre uma solicitação HTTP individual.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d0c1a-101">Serves as the base class for classes that contain HTTP-specific information about an individual HTTP request.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0c1a-102">O <xref:System.Web.HttpContextBase> classe é uma classe abstrata que contém os mesmos membros como o <xref:System.Web.HttpContext> classe.</span><span class="sxs-lookup"><span data-stu-id="d0c1a-102">The <xref:System.Web.HttpContextBase> class is an abstract class that contains the same members as the <xref:System.Web.HttpContext> class.</span></span> <span data-ttu-id="d0c1a-103">O <xref:System.Web.HttpContextBase> classe permite que você criar classes derivadas que são semelhantes a <xref:System.Web.HttpContext> classe, mas que você pode personalizar e que trabalham fora o pipeline do ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="d0c1a-103">The <xref:System.Web.HttpContextBase> class enables you to create derived classes that are like the <xref:System.Web.HttpContext> class, but that you can customize and that work outside the ASP.NET pipeline.</span></span> <span data-ttu-id="d0c1a-104">Quando você executa testes de unidade, você normalmente usar uma classe derivada para implementar membros com comportamento personalizado que atende o cenário que você está testando.</span><span class="sxs-lookup"><span data-stu-id="d0c1a-104">When you perform unit testing, you typically use a derived class to implement members with customized behavior that fulfills the scenario you are testing.</span></span>  
  
 <span data-ttu-id="d0c1a-105">O <xref:System.Web.HttpContextWrapper> classe deriva de <xref:System.Web.HttpContextBase> classe.</span><span class="sxs-lookup"><span data-stu-id="d0c1a-105">The <xref:System.Web.HttpContextWrapper> class derives from the <xref:System.Web.HttpContextBase> class.</span></span> <span data-ttu-id="d0c1a-106">O <xref:System.Web.HttpContextWrapper> classe serve como um wrapper para o <xref:System.Web.HttpContext> classe.</span><span class="sxs-lookup"><span data-stu-id="d0c1a-106">The <xref:System.Web.HttpContextWrapper> class serves as a wrapper for the <xref:System.Web.HttpContext> class.</span></span> <span data-ttu-id="d0c1a-107">Em tempo de execução, você normalmente usa uma instância do <xref:System.Web.HttpContextWrapper> classe para chamar membros no <xref:System.Web.HttpContext> objeto.</span><span class="sxs-lookup"><span data-stu-id="d0c1a-107">At run time, you typically use an instance of the <xref:System.Web.HttpContextWrapper> class to call members on the <xref:System.Web.HttpContext> object.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HttpContextBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; HttpContextBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d0c1a-108">Inicializa a classe para uso por uma instância de classe herdada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-108">Initializes the class for use by an inherited class instance.</span>
          </span>
          <span data-ttu-id="d0c1a-109">Esse construtor só pode ser chamado por uma classe herdada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-109">This constructor can only be called by an inherited class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AcceptWebSocketRequest">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d0c1a-110">Quando implementada em uma classe derivada, aceita uma solicitação <see cref="T:System.Web.WebSockets.AspNetWebSocket" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-110">When implemented in a derived class, accepts an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> request.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AcceptWebSocketRequest">
      <MemberSignature Language="C#" Value="public virtual void AcceptWebSocketRequest (Func&lt;System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task&gt; userFunc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AcceptWebSocketRequest(class System.Func`2&lt;class System.Web.WebSockets.AspNetWebSocketContext, class System.Threading.Tasks.Task&gt; userFunc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.AcceptWebSocketRequest(System.Func{System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AcceptWebSocketRequest (userFunc As Func(Of AspNetWebSocketContext, Task))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AcceptWebSocketRequest(Func&lt;System::Web::WebSockets::AspNetWebSocketContext ^, System::Threading::Tasks::Task ^&gt; ^ userFunc);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userFunc" Type="System.Func&lt;System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task&gt;" />
      </Parameters>
      <Docs>
        <param name="userFunc">
          <span data-ttu-id="d0c1a-111">A função de usuário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-111">The user function.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d0c1a-112">Quando implementada em uma classe derivada, aceita uma solicitação <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> usando a função de usuário especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-112">When implemented in a derived class, accepts an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> request using the specified user function.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptWebSocketRequest">
      <MemberSignature Language="C#" Value="public virtual void AcceptWebSocketRequest (Func&lt;System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task&gt; userFunc, System.Web.WebSockets.AspNetWebSocketOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AcceptWebSocketRequest(class System.Func`2&lt;class System.Web.WebSockets.AspNetWebSocketContext, class System.Threading.Tasks.Task&gt; userFunc, class System.Web.WebSockets.AspNetWebSocketOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.AcceptWebSocketRequest(System.Func{System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task},System.Web.WebSockets.AspNetWebSocketOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AcceptWebSocketRequest (userFunc As Func(Of AspNetWebSocketContext, Task), options As AspNetWebSocketOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AcceptWebSocketRequest(Func&lt;System::Web::WebSockets::AspNetWebSocketContext ^, System::Threading::Tasks::Task ^&gt; ^ userFunc, System::Web::WebSockets::AspNetWebSocketOptions ^ options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userFunc" Type="System.Func&lt;System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task&gt;" />
        <Parameter Name="options" Type="System.Web.WebSockets.AspNetWebSocketOptions" />
      </Parameters>
      <Docs>
        <param name="userFunc">
          <span data-ttu-id="d0c1a-113">A função de usuário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-113">The user function.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="d0c1a-114">O objeto de opções.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-114">The options object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d0c1a-115">Quando implementada em uma classe derivada, aceita uma solicitação <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> usando a função de usuário especificada e o objeto options.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-115">When implemented in a derived class, accepts an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> request using the specified user function and options object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddError">
      <MemberSignature Language="C#" Value="public virtual void AddError (Exception errorInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddError(class System.Exception errorInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.AddError(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddError (errorInfo As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddError(Exception ^ errorInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errorInfo" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="errorInfo">
          <span data-ttu-id="d0c1a-116">A exceção a ser adicionada à coleção de exceções.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-116">The exception to add to the exception collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d0c1a-117">Quando substituída em uma classe derivada, adiciona uma exceção à coleção de exceções da solicitação HTTP atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-117">When overridden in a derived class, adds an exception to the exception collection for the current HTTP request.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="d0c1a-118">Sempre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-118">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddOnRequestCompleted">
      <MemberSignature Language="C#" Value="public virtual System.Web.ISubscriptionToken AddOnRequestCompleted (Action&lt;System.Web.HttpContextBase&gt; callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.ISubscriptionToken AddOnRequestCompleted(class System.Action`1&lt;class System.Web.HttpContextBase&gt; callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.AddOnRequestCompleted(System.Action{System.Web.HttpContextBase})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddOnRequestCompleted (callback As Action(Of HttpContextBase)) As ISubscriptionToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::ISubscriptionToken ^ AddOnRequestCompleted(Action&lt;System::Web::HttpContextBase ^&gt; ^ callback);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.ISubscriptionToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Action&lt;System.Web.HttpContextBase&gt;" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="d0c1a-119">O objeto de contexto HTTP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-119">The HTTP context object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d0c1a-120">Quando implementada em uma classe derivada, aciona um evento virtual que ocorre quando a parte HTTP da solicitação está terminando.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-120">When implemented in a derived class, raises a virtual event that occurs when the HTTP part of the request is ending.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d0c1a-121">O token de assinatura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-121">The subscription token.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0c1a-122">Esse evento ocorre antes do <xref:System.Web.WebSockets.AspNetWebSocket> começa a conexão.</span><span class="sxs-lookup"><span data-stu-id="d0c1a-122">This event occurs before the <xref:System.Web.WebSockets.AspNetWebSocket> connection begins.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllErrors">
      <MemberSignature Language="C#" Value="public virtual Exception[] AllErrors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception[] AllErrors" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.AllErrors" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AllErrors As Exception()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;Exception ^&gt; ^ AllErrors { cli::array &lt;Exception ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d0c1a-123">Quando substituída em uma classe derivada, obtém uma matriz de erros (se houver) que foram acumulados quando uma solicitação HTTP estava sendo processada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-123">When overridden in a derived class, gets an array of errors (if any) that accumulated when an HTTP request was being processed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d0c1a-124">Uma matriz de <see cref="T:System.Exception" /> objetos para a solicitação HTTP atual, ou <see langword="null" /> se nenhum erro acumulados durante o processamento de solicitação HTTP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-124">An array of <see cref="T:System.Exception" /> objects for the current HTTP request, or <see langword="null" /> if no errors accumulated during the HTTP request processing.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="d0c1a-125">Sempre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-125">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AllowAsyncDuringSyncStages">
      <MemberSignature Language="C#" Value="public virtual bool AllowAsyncDuringSyncStages { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowAsyncDuringSyncStages" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.AllowAsyncDuringSyncStages" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AllowAsyncDuringSyncStages As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowAsyncDuringSyncStages { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d0c1a-126">Quando implementada em uma classe derivada, obtém ou define um valor que indica se as operações assíncronas são permitidas durante partes do processamento da solicitação ASP.NET quando elas não são esperadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-126">When implemented in a derived class, gets or sets a value that indicates whether asynchronous operations are allowed during parts of ASP.NET request processing when they are not expected.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d0c1a-127">
            <see langword="false" /> Se o ASP.NET gera uma exceção quando a API assíncrona é usada em um tempo quando não é esperado; Caso contrário, <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-127">
              <see langword="false" /> if ASP.NET will throw an exception when the asynchronous API is used at a time when it is not expected; otherwise, <see langword="true" />.</span>
          </span>
          <span data-ttu-id="d0c1a-128">O valor padrão é <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-128">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0c1a-129">Para obter mais informações, consulte <xref:System.Web.HttpContext.AllowAsyncDuringSyncStages%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d0c1a-129">For more information, see <xref:System.Web.HttpContext.AllowAsyncDuringSyncStages%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public virtual System.Web.HttpApplicationStateBase Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpApplicationStateBase Application" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.Application" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Application As HttpApplicationStateBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::HttpApplicationStateBase ^ Application { System::Web::HttpApplicationStateBase ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpApplicationStateBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d0c1a-130">Quando substituído em uma classe derivada, obtém o objeto <see cref="T:System.Web.HttpApplicationState" /> da solicitação HTTP atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-130">When overridden in a derived class, gets the <see cref="T:System.Web.HttpApplicationState" /> object for the current HTTP request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d0c1a-131">O objeto de estado do aplicativo para a solicitação HTTP atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-131">The application state object for the current HTTP request.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="d0c1a-132">Sempre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-132">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ApplicationInstance">
      <MemberSignature Language="C#" Value="public virtual System.Web.HttpApplication ApplicationInstance { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpApplication ApplicationInstance" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.ApplicationInstance" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ApplicationInstance As HttpApplication" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::HttpApplication ^ ApplicationInstance { System::Web::HttpApplication ^ get(); void set(System::Web::HttpApplication ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpApplication</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d0c1a-133">Quando substituída em uma classe derivada, obtém ou define o objeto <see cref="T:System.Web.HttpApplication" /> da solicitação HTTP atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-133">When overridden in a derived class, gets or sets the <see cref="T:System.Web.HttpApplication" /> object for the current HTTP request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d0c1a-134">O objeto para a solicitação HTTP atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-134">The object for the current HTTP request.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="d0c1a-135">Sempre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-135">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AsyncPreloadMode">
      <MemberSignature Language="C#" Value="public virtual System.Web.Configuration.AsyncPreloadModeFlags AsyncPreloadMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Configuration.AsyncPreloadModeFlags AsyncPreloadMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.AsyncPreloadMode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AsyncPreloadMode As AsyncPreloadModeFlags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::Configuration::AsyncPreloadModeFlags AsyncPreloadMode { System::Web::Configuration::AsyncPreloadModeFlags get(); void set(System::Web::Configuration::AsyncPreloadModeFlags value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.AsyncPreloadModeFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d0c1a-136">Quando implementada em uma classe derivada, obtém ou define um objeto que contém sinalizadores que pertencem ao modo de pré-carregamento assíncrono.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-136">When implemented in a derived class, gets or sets an object that contains flags that pertain to asynchronous preload mode.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d0c1a-137">Um objeto que contém os sinalizadores que pertencem ao modo de pré-carregamento assíncrono.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-137">An object that contains flags that pertain to asynchronous preload mode.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Cache">
      <MemberSignature Language="C#" Value="public virtual System.Web.Caching.Cache Cache { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Caching.Cache Cache" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.Cache" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Cache As Cache" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::Caching::Cache ^ Cache { System::Web::Caching::Cache ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Caching.Cache</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d0c1a-138">Quando substituída em uma classe derivada, obtém o objeto <see cref="T:System.Web.Caching.Cache" /> do domínio do aplicativo atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-138">When overridden in a derived class, gets the <see cref="T:System.Web.Caching.Cache" /> object for the current application domain.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d0c1a-139">O cache para o domínio de aplicativo atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-139">The cache for the current application domain.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="d0c1a-140">Sempre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-140">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ClearError">
      <MemberSignature Language="C#" Value="public virtual void ClearError ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearError() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.ClearError" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ClearError ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ClearError();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d0c1a-141">Quando substituída em uma classe derivada, limpa todos os erros da solicitação HTTP atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-141">When overridden in a derived class, clears all errors for the current HTTP request.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="d0c1a-142">Sempre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-142">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CurrentHandler">
      <MemberSignature Language="C#" Value="public virtual System.Web.IHttpHandler CurrentHandler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.IHttpHandler CurrentHandler" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.CurrentHandler" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CurrentHandler As IHttpHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::IHttpHandler ^ CurrentHandler { System::Web::IHttpHandler ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHttpHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d0c1a-143">Quando substituída em uma classe derivada, obtém o objeto <see cref="T:System.Web.IHttpHandler" /> que representa o manipulador que está sendo executado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-143">When overridden in a derived class, gets the <see cref="T:System.Web.IHttpHandler" /> object that represents the handler that is currently executing.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d0c1a-144">Um objeto que representa o manipulador atualmente em execução.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-144">An object that represents the currently executing handler.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="d0c1a-145">Sempre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-145">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CurrentNotification">
      <MemberSignature Language="C#" Value="public virtual System.Web.RequestNotification CurrentNotification { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.RequestNotification CurrentNotification" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.CurrentNotification" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CurrentNotification As RequestNotification" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::RequestNotification CurrentNotification { System::Web::RequestNotification get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.RequestNotification</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d0c1a-146">Quando substituída em uma classe derivada, obtém um valor <see cref="T:System.Web.RequestNotification" /> que indica que o evento <see cref="T:System.Web.HttpApplication" /> está em processamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-146">When overridden in a derived class, gets a <see cref="T:System.Web.RequestNotification" /> value that indicates the <see cref="T:System.Web.HttpApplication" /> event that is currently processing.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d0c1a-147">Um dos valores de <see cref="T:System.Web.RequestNotification" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-147">One of the <see cref="T:System.Web.RequestNotification" /> values.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="d0c1a-148">Sempre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-148">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DisposeOnPipelineCompleted">
      <MemberSignature Language="C#" Value="public virtual System.Web.ISubscriptionToken DisposeOnPipelineCompleted (IDisposable target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.ISubscriptionToken DisposeOnPipelineCompleted(class System.IDisposable target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.DisposeOnPipelineCompleted(System.IDisposable)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DisposeOnPipelineCompleted (target As IDisposable) As ISubscriptionToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::ISubscriptionToken ^ DisposeOnPipelineCompleted(IDisposable ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.ISubscriptionToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.IDisposable" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="d0c1a-149">O objeto cujo método <see cref="M:System.IDisposable.Dispose" /> deve ser chamado quando a parte da conexão <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> da solicitação é concluída.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-149">The object whose <see cref="M:System.IDisposable.Dispose" /> method must be called when the <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> connection part of the request is completed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d0c1a-150">Quando implementada em uma classe derivada, permite que o método <see cref="M:System.IDisposable.Dispose" /> de um objeto seja chamado quando a parte de conexão <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> dessa solicitação é concluída.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-150">When implemented in a derived class, enables an object's <see cref="M:System.IDisposable.Dispose" /> method to be called when the <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> connection part of this request is completed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d0c1a-151">O token de assinatura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-151">The subscription token.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Error">
      <MemberSignature Language="C#" Value="public virtual Exception Error { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Error" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.Error" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Error As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Exception ^ Error { Exception ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d0c1a-152">Quando substituída em uma classe derivada, obtém o primeiro erro (se houver) que foi acumulado quando uma solicitação HTTP estava sendo processada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-152">When overridden in a derived class, gets the first error (if any) that accumulated when an HTTP request was being processed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d0c1a-153">A primeira exceção para o processo de solicitação/resposta HTTP atual, ou <see langword="null" /> se nenhum erro acumulados durante o processamento de solicitação HTTP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-153">The first exception for the current HTTP request/response process, or <see langword="null" /> if no errors accumulated during the HTTP request processing.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="d0c1a-154">Sempre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-154">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetGlobalResourceObject">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d0c1a-155">Quando substituída em uma classe derivada, obtém um recurso no nível de aplicativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-155">When overridden in a derived class, gets an application-level resource.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetGlobalResourceObject">
      <MemberSignature Language="C#" Value="public virtual object GetGlobalResourceObject (string classKey, string resourceKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetGlobalResourceObject(string classKey, string resourceKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.GetGlobalResourceObject(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGlobalResourceObject (classKey As String, resourceKey As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetGlobalResourceObject(System::String ^ classKey, System::String ^ resourceKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="classKey" Type="System.String" />
        <Parameter Name="resourceKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="classKey">
          <span data-ttu-id="d0c1a-156">Uma cadeia de caracteres que representa a propriedade <see cref="P:System.Web.Compilation.ResourceExpressionFields.ClassKey" /> do objeto de recurso solicitado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-156">A string that represents the <see cref="P:System.Web.Compilation.ResourceExpressionFields.ClassKey" /> property of the requested resource object.</span>
          </span>
        </param>
        <param name="resourceKey">
          <span data-ttu-id="d0c1a-157">Uma cadeia de caracteres que representa a propriedade <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> do objeto de recurso solicitado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-157">A string that represents the <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> property of the requested resource object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d0c1a-158">Quando substituída em uma classe derivada, obtém um objeto de recurso no nível de aplicativo baseado nas propriedades <see cref="P:System.Web.Compilation.ResourceExpressionFields.ClassKey" /> e <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> especificadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-158">When overridden in a derived class, gets an application-level resource object based on the specified <see cref="P:System.Web.Compilation.ResourceExpressionFields.ClassKey" /> and <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> properties.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d0c1a-159">O objeto de recurso no nível de aplicativo solicitado ou <see langword="null" />, se nenhum objeto de recurso correspondente foi encontrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-159">The requested application-level resource object, or <see langword="null" /> if no matching resource object is found.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="d0c1a-160">Sempre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-160">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetGlobalResourceObject">
      <MemberSignature Language="C#" Value="public virtual object GetGlobalResourceObject (string classKey, string resourceKey, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetGlobalResourceObject(string classKey, string resourceKey, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.GetGlobalResourceObject(System.String,System.String,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGlobalResourceObject (classKey As String, resourceKey As String, culture As CultureInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetGlobalResourceObject(System::String ^ classKey, System::String ^ resourceKey, System::Globalization::CultureInfo ^ culture);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="classKey" Type="System.String" />
        <Parameter Name="resourceKey" Type="System.String" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="classKey">
          <span data-ttu-id="d0c1a-161">Uma cadeia de caracteres que representa a propriedade <see cref="P:System.Web.Compilation.ResourceExpressionFields.ClassKey" /> do objeto de recurso solicitado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-161">A string that represents the <see cref="P:System.Web.Compilation.ResourceExpressionFields.ClassKey" /> property of the requested resource object.</span>
          </span>
        </param>
        <param name="resourceKey">
          <span data-ttu-id="d0c1a-162">Uma cadeia de caracteres que representa a propriedade <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> do objeto de recurso solicitado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-162">A string that represents the <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> property of the requested resource object.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="d0c1a-163">Uma cadeia de caracteres que representa o objeto <see cref="T:System.Globalization.CultureInfo" /> do recurso solicitado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-163">A string that represents the <see cref="T:System.Globalization.CultureInfo" /> object of the requested resource.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d0c1a-164">Quando substituída em uma classe derivada, obtém um objeto de recurso no nível de aplicativo, baseado nas propriedades <see cref="P:System.Web.Compilation.ResourceExpressionFields.ClassKey" /> e <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> especificadas e no objeto <see cref="T:System.Globalization.CultureInfo" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-164">When overridden in a derived class, gets an application-level resource object based on the specified <see cref="P:System.Web.Compilation.ResourceExpressionFields.ClassKey" /> and <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> properties, and on the <see cref="T:System.Globalization.CultureInfo" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d0c1a-165">O objeto de recurso no nível de aplicativo solicitado, que é localizado para a cultura especificada ou <see langword="null" />, se nenhum objeto de recurso correspondente foi encontrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-165">The requested application-level resource object, which is localized for the specified culture, or <see langword="null" /> if no matching resource object is found.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="d0c1a-166">Sempre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-166">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetLocalResourceObject">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d0c1a-167">Quando substituída em uma classe derivada, obtém um recurso no nível de página.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-167">When overridden in a derived class, gets a page-level resource.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetLocalResourceObject">
      <MemberSignature Language="C#" Value="public virtual object GetLocalResourceObject (string virtualPath, string resourceKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetLocalResourceObject(string virtualPath, string resourceKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.GetLocalResourceObject(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLocalResourceObject (virtualPath As String, resourceKey As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetLocalResourceObject(System::String ^ virtualPath, System::String ^ resourceKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="resourceKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">
          <span data-ttu-id="d0c1a-168">Uma cadeia de caracteres que representa a propriedade <see cref="P:System.Web.Compilation.ExpressionBuilderContext.VirtualPath" /> do objeto de recurso local.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-168">A string that represents the <see cref="P:System.Web.Compilation.ExpressionBuilderContext.VirtualPath" /> property of the local resource object.</span>
          </span>
        </param>
        <param name="resourceKey">
          <span data-ttu-id="d0c1a-169">Uma cadeia de caracteres que representa a propriedade <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> do objeto de recurso solicitado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-169">A string that represents the <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> property of the requested resource object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d0c1a-170">Quando substituída em uma classe derivada, obtém um objeto de recurso no nível de página, baseado nas propriedades <see cref="P:System.Web.Compilation.ExpressionBuilderContext.VirtualPath" /> e <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> especificadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-170">When overridden in a derived class, gets a page-level resource object based on the specified <see cref="P:System.Web.Compilation.ExpressionBuilderContext.VirtualPath" /> and <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> properties.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d0c1a-171">O objeto de recurso no nível de página solicitado ou <see langword="null" />, se nenhum objeto de recurso correspondente foi encontrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-171">The requested page-level resource object, or <see langword="null" /> if no matching resource object is found.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="d0c1a-172">Sempre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-172">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetLocalResourceObject">
      <MemberSignature Language="C#" Value="public virtual object GetLocalResourceObject (string virtualPath, string resourceKey, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetLocalResourceObject(string virtualPath, string resourceKey, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.GetLocalResourceObject(System.String,System.String,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLocalResourceObject (virtualPath As String, resourceKey As String, culture As CultureInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetLocalResourceObject(System::String ^ virtualPath, System::String ^ resourceKey, System::Globalization::CultureInfo ^ culture);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="resourceKey" Type="System.String" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="virtualPath">
          <span data-ttu-id="d0c1a-173">Uma cadeia de caracteres que representa a propriedade <see cref="P:System.Web.Compilation.ExpressionBuilderContext.VirtualPath" /> do objeto de recurso local.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-173">A string that represents the <see cref="P:System.Web.Compilation.ExpressionBuilderContext.VirtualPath" /> property of the local resource object.</span>
          </span>
        </param>
        <param name="resourceKey">
          <span data-ttu-id="d0c1a-174">Uma cadeia de caracteres que representa a propriedade <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> do objeto de recurso solicitado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-174">A string that represents the <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> property of the requested resource object.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="d0c1a-175">Uma cadeia de caracteres que representa o objeto <see cref="T:System.Globalization.CultureInfo" /> do objeto de recurso solicitado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-175">A string that represents the <see cref="T:System.Globalization.CultureInfo" /> object of the requested resource object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d0c1a-176">Quando substituída em uma classe derivada, obtém um objeto de recurso no nível de página, baseado nas propriedades <see cref="P:System.Web.Compilation.ExpressionBuilderContext.VirtualPath" /> e <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> especificadas e no objeto <see cref="T:System.Globalization.CultureInfo" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-176">When overridden in a derived class, gets a page-level resource object based on the specified <see cref="P:System.Web.Compilation.ExpressionBuilderContext.VirtualPath" /> and <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> properties, and on the <see cref="T:System.Globalization.CultureInfo" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d0c1a-177">O objeto de recurso local solicitado, que é localizado para a cultura especificada ou <see langword="null" />, se nenhum objeto de recurso correspondente foi encontrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-177">The requested local resource object, which is localized for the specified culture, or <see langword="null" /> if no matching resource object is found.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="d0c1a-178">Sempre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-178">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSection">
      <MemberSignature Language="C#" Value="public virtual object GetSection (string sectionName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetSection(string sectionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.GetSection(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSection (sectionName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetSection(System::String ^ sectionName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sectionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sectionName">
          <span data-ttu-id="d0c1a-179">O caminho da seção de configuração (no formato XPath) e o nome do elemento de configuração.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-179">The configuration section path (in XPath format) and the configuration element name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d0c1a-180">Quando substituída em uma classe derivada, obtém a seção de configuração especificada da configuração de padrão do aplicativo atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-180">When overridden in a derived class, gets the specified configuration section of the current application's default configuration.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d0c1a-181">A seção especificada ou <see langword="null" />, se a seção não existir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-181">The specified section, or <see langword="null" /> if the section does not exist.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="d0c1a-182">Sempre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-182">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="public virtual object GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetService (serviceType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetService(Type ^ serviceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType">
          <span data-ttu-id="d0c1a-183">O tipo de objeto de serviço a obter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-183">The type of service object to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d0c1a-184">Quando substituída em uma classe derivada, retorna um objeto para o tipo de serviço atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-184">When overridden in a derived class, returns an object for the current service type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d0c1a-185">O tipo de serviço atual ou <see langword="null" />, se nenhum serviço foi encontrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-185">The current service type, or <see langword="null" /> if no service is found.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="d0c1a-186">Sempre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-186">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Handler">
      <MemberSignature Language="C#" Value="public virtual System.Web.IHttpHandler Handler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.IHttpHandler Handler" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.Handler" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Handler As IHttpHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::IHttpHandler ^ Handler { System::Web::IHttpHandler ^ get(); void set(System::Web::IHttpHandler ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHttpHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d0c1a-187">Quando substituída em uma classe derivada, obtém ou define o objeto <see cref="T:System.Web.IHttpHandler" /> que é responsável por processar a solicitação HTTP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-187">When overridden in a derived class, gets or sets the <see cref="T:System.Web.IHttpHandler" /> object that is responsible for processing the HTTP request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d0c1a-188">O objeto que é responsável por processar a solicitação HTTP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-188">The object that is responsible for processing the HTTP request.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="d0c1a-189">Sempre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-189">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsCustomErrorEnabled">
      <MemberSignature Language="C#" Value="public virtual bool IsCustomErrorEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCustomErrorEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.IsCustomErrorEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsCustomErrorEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsCustomErrorEnabled { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d0c1a-190">Quando substituída em uma classe derivada, obtém um valor que indica se erros personalizados estão habilitados para a solicitação HTTP atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-190">When overridden in a derived class, gets a value that indicates whether custom errors are enabled for the current HTTP request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d0c1a-191">
            <see langword="true" /> se os erros personalizados estiverem habilitados; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-191">
              <see langword="true" /> if custom errors are enabled; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="d0c1a-192">Sempre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-192">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsDebuggingEnabled">
      <MemberSignature Language="C#" Value="public virtual bool IsDebuggingEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDebuggingEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.IsDebuggingEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsDebuggingEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsDebuggingEnabled { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d0c1a-193">Quando substituída em uma classe derivada, obtém um valor que indica se a solicitação HTTP atual está em modo de depuração.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-193">When overridden in a derived class, gets a value that indicates whether the current HTTP request is in debug mode.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d0c1a-194">
            <see langword="true" /> se a solicitação está no modo de depuração, caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-194">
              <see langword="true" /> if the request is in debug mode; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="d0c1a-195">Sempre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-195">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsPostNotification">
      <MemberSignature Language="C#" Value="public virtual bool IsPostNotification { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPostNotification" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.IsPostNotification" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsPostNotification As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsPostNotification { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d0c1a-196">Quando substituída em uma classe derivada, obtém um valor que indica se o processamento de um evento <see cref="T:System.Web.HttpApplication" /> foi concluído.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-196">When overridden in a derived class, gets a value that indicates whether an <see cref="T:System.Web.HttpApplication" /> event has finished processing.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d0c1a-197">
            <see langword="true" /> Se o evento concluiu o processamento; Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-197">
              <see langword="true" /> if the event has finished processing; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="d0c1a-198">Sempre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-198">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsWebSocketRequest">
      <MemberSignature Language="C#" Value="public virtual bool IsWebSocketRequest { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWebSocketRequest" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.IsWebSocketRequest" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsWebSocketRequest As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsWebSocketRequest { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d0c1a-199">Quando implementada em uma classe derivada, obtém um valor que indica se a solicitação é uma solicitação de conexão <see cref="T:System.Web.WebSockets.AspNetWebSocket" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-199">When implemented in a derived class, gets a value that indicates whether the request is an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> connection request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d0c1a-200">
            <see langword="true" /> se a solicitação for uma solicitação <see cref="T:System.Web.WebSockets.AspNetWebSocket" />; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-200">
              <see langword="true" /> if the request is an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> request; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsWebSocketRequestUpgrading">
      <MemberSignature Language="C#" Value="public virtual bool IsWebSocketRequestUpgrading { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWebSocketRequestUpgrading" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.IsWebSocketRequestUpgrading" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsWebSocketRequestUpgrading As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsWebSocketRequestUpgrading { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d0c1a-201">Quando implementado em uma classe derivada, obtém um valor que indica se a conexão está atualizando de uma conexão HTTP para uma conexão <see cref="T:System.Web.WebSockets.AspNetWebSocket" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-201">When implemented in a derived class, gets a value that indicates whether the connection is upgrading from an HTTP connection to an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> connection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d0c1a-202">
            <see langword="true" /> Se a conexão está sendo atualizado; Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-202">
              <see langword="true" /> if the connection is upgrading; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IDictionary Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IDictionary Items" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.Items" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Items As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::IDictionary ^ Items { System::Collections::IDictionary ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d0c1a-203">Quando substituído em uma classe derivada, obtém uma coleção de chave/valor que pode ser usada para organizar e compartilhar dados entre um módulo e um manipulador durante uma solicitação HTTP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-203">When overridden in a derived class, gets a key/value collection that can be used to organize and share data between a module and a handler during an HTTP request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d0c1a-204">Uma coleção de chave/valor que fornece acesso a um valor individual na coleção pelo uso de uma chave especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-204">A key/value collection that provides access to an individual value in the collection by using a specified key.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="d0c1a-205">Sempre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-205">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="PageInstrumentation">
      <MemberSignature Language="C#" Value="public virtual System.Web.Instrumentation.PageInstrumentationService PageInstrumentation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Instrumentation.PageInstrumentationService PageInstrumentation" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.PageInstrumentation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PageInstrumentation As PageInstrumentationService" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::Instrumentation::PageInstrumentationService ^ PageInstrumentation { System::Web::Instrumentation::PageInstrumentationService ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Instrumentation.PageInstrumentationService</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d0c1a-206">Quando implementada em uma classe derivada, obtém uma referência à instância de serviço de instrumentação de página para essa solicitação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-206">When implemented in a derived class, gets a reference to the page-instrumentation service instance for this request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d0c1a-207">A instância do serviço de instrumentação de página para esta solicitação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-207">The page-instrumentation service instance for this request.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviousHandler">
      <MemberSignature Language="C#" Value="public virtual System.Web.IHttpHandler PreviousHandler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.IHttpHandler PreviousHandler" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.PreviousHandler" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PreviousHandler As IHttpHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::IHttpHandler ^ PreviousHandler { System::Web::IHttpHandler ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHttpHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d0c1a-208">Quando substituída em uma classe derivada, obtém o objeto <see cref="T:System.Web.IHttpHandler" /> do manipulador pai.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-208">When overridden in a derived class, gets the <see cref="T:System.Web.IHttpHandler" /> object for the parent handler.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d0c1a-209">Um <see cref="T:System.Web.IHttpHandler" /> objeto que representa o manipulador de pai, ou <see langword="null" /> se nenhum manipulador pai foi encontrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-209">An <see cref="T:System.Web.IHttpHandler" /> object that represents the parent handler, or <see langword="null" /> if no parent handler was found.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="d0c1a-210">Sempre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-210">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Profile">
      <MemberSignature Language="C#" Value="public virtual System.Web.Profile.ProfileBase Profile { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Profile.ProfileBase Profile" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.Profile" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Profile As ProfileBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::Profile::ProfileBase ^ Profile { System::Web::Profile::ProfileBase ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d0c1a-211">Quando substituída em uma classe derivada, obtém o objeto <see cref="T:System.Web.Profile.ProfileBase" /> do perfil do usuário atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-211">When overridden in a derived class, gets the <see cref="T:System.Web.Profile.ProfileBase" /> object for the current user profile.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d0c1a-212">Se as propriedades de perfil são definidas no arquivo de configuração do aplicativo e perfis estão habilitados para o aplicativo, um objeto que representa o perfil do usuário atual; Caso contrário, <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-212">If the profile properties are defined in the application configuration file and profiles are enabled for the application, an object that represents the current user profile; otherwise, <see langword="null" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="d0c1a-213">Sempre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-213">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RemapHandler">
      <MemberSignature Language="C#" Value="public virtual void RemapHandler (System.Web.IHttpHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemapHandler(class System.Web.IHttpHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.RemapHandler(System.Web.IHttpHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemapHandler (handler As IHttpHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemapHandler(System::Web::IHttpHandler ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="System.Web.IHttpHandler" />
      </Parameters>
      <Docs>
        <param name="handler">
          <span data-ttu-id="d0c1a-214">O objeto que deve processar a solicitação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-214">The object that should process the request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d0c1a-215">Quando substituída em uma classe derivada, especifica um manipulador para a solicitação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-215">When overridden in a derived class, specifies a handler for the request.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0c1a-216">Se você definir `handler` para `null`, o manipulador padrão é usado para processar a solicitação.</span><span class="sxs-lookup"><span data-stu-id="d0c1a-216">If you set `handler` to `null`, the default handler is used to process the request.</span></span> <span data-ttu-id="d0c1a-217">Você pode definir `handler` para um manipulador de assíncrono ou para um manipulador síncrono.</span><span class="sxs-lookup"><span data-stu-id="d0c1a-217">You can set `handler` to either an asynchronous handler or to an synchronous handler.</span></span> <span data-ttu-id="d0c1a-218">O manipulador deve implementar o <xref:System.Web.IHttpHandler> interface.</span><span class="sxs-lookup"><span data-stu-id="d0c1a-218">The handler must implement the <xref:System.Web.IHttpHandler> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="d0c1a-219">Um tipo derivado falha ao implementar esse método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-219">A derived type fails to implement this method.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Request">
      <MemberSignature Language="C#" Value="public virtual System.Web.HttpRequestBase Request { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpRequestBase Request" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.Request" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Request As HttpRequestBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::HttpRequestBase ^ Request { System::Web::HttpRequestBase ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpRequestBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d0c1a-220">Quando substituído em uma classe derivada, obtém o objeto <see cref="T:System.Web.HttpRequest" /> da solicitação HTTP atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-220">When overridden in a derived class, gets the <see cref="T:System.Web.HttpRequest" /> object for the current HTTP request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d0c1a-221">A solicitação HTTP atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-221">The current HTTP request.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="d0c1a-222">Sempre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-222">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Response">
      <MemberSignature Language="C#" Value="public virtual System.Web.HttpResponseBase Response { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpResponseBase Response" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.Response" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Response As HttpResponseBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::HttpResponseBase ^ Response { System::Web::HttpResponseBase ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpResponseBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d0c1a-223">Quando substituída em uma classe derivada, obtém o objeto <see cref="T:System.Web.HttpResponse" /> da resposta HTTP atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-223">When overridden in a derived class, gets the <see cref="T:System.Web.HttpResponse" /> object for the current HTTP response.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d0c1a-224">A resposta HTTP atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-224">The current HTTP response.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="d0c1a-225">Sempre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-225">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="RewritePath">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d0c1a-226">Quando substituída em uma classe derivada, atribui um caminho de regravação interno, que permite que a URL de solicitação seja diferente do caminho interno do recurso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-226">When overridden in a derived class, assigns an internal rewrite path, which lets the request URL differ from the internal path of the resource.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RewritePath">
      <MemberSignature Language="C#" Value="public virtual void RewritePath (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RewritePath(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.RewritePath(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RewritePath (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RewritePath(System::String ^ path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="d0c1a-227">O caminho de substituição.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-227">The replacement path.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d0c1a-228">Quando substituída em uma classe derivada, regrava a URL usando o caminho especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-228">When overridden in a derived class, rewrites the URL by using the specified path.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="d0c1a-229">Sempre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-229">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RewritePath">
      <MemberSignature Language="C#" Value="public virtual void RewritePath (string path, bool rebaseClientPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RewritePath(string path, bool rebaseClientPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.RewritePath(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RewritePath (path As String, rebaseClientPath As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RewritePath(System::String ^ path, bool rebaseClientPath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="rebaseClientPath" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="d0c1a-230">O caminho de substituição.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-230">The replacement path.</span>
          </span>
        </param>
        <param name="rebaseClientPath">
          <span data-ttu-id="d0c1a-231">
            <see langword="true" /> para redefinir o caminho virtual; <see langword="false" /> para manter o caminho virtual inalterado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-231">
              <see langword="true" /> to reset the virtual path; <see langword="false" /> to keep the virtual path unchanged.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d0c1a-232">Quando substituída em uma classe derivada, regrava a URL usando o caminho especificado e um valor booliano que especifica se o caminho virtual para recursos de servidor é modificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-232">When overridden in a derived class, rewrites the URL by using the specified path and a value that specifies whether the virtual path for server resources is modified.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="d0c1a-233">Sempre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-233">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RewritePath">
      <MemberSignature Language="C#" Value="public virtual void RewritePath (string filePath, string pathInfo, string queryString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RewritePath(string filePath, string pathInfo, string queryString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.RewritePath(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RewritePath (filePath As String, pathInfo As String, queryString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RewritePath(System::String ^ filePath, System::String ^ pathInfo, System::String ^ queryString);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filePath" Type="System.String" />
        <Parameter Name="pathInfo" Type="System.String" />
        <Parameter Name="queryString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filePath">
          <span data-ttu-id="d0c1a-234">O caminho de substituição.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-234">The replacement path.</span>
          </span>
        </param>
        <param name="pathInfo">
          <span data-ttu-id="d0c1a-235">Informações adicionais de caminho para um recurso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-235">Additional path information for a resource.</span>
          </span>
        </param>
        <param name="queryString">
          <span data-ttu-id="d0c1a-236">A cadeia de caracteres de consulta da solicitação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-236">The request query string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d0c1a-237">Quando substituída em uma classe derivada, regrava a URL usando o caminho, as informações de caminho e as informações de cadeia de caracteres de consulta especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-237">When overridden in a derived class, rewrites the URL by using the specified path, path information, and query string information.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="d0c1a-238">Sempre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-238">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RewritePath">
      <MemberSignature Language="C#" Value="public virtual void RewritePath (string filePath, string pathInfo, string queryString, bool setClientFilePath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RewritePath(string filePath, string pathInfo, string queryString, bool setClientFilePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.RewritePath(System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RewritePath (filePath As String, pathInfo As String, queryString As String, setClientFilePath As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RewritePath(System::String ^ filePath, System::String ^ pathInfo, System::String ^ queryString, bool setClientFilePath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filePath" Type="System.String" />
        <Parameter Name="pathInfo" Type="System.String" />
        <Parameter Name="queryString" Type="System.String" />
        <Parameter Name="setClientFilePath" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="filePath">
          <span data-ttu-id="d0c1a-239">O caminho de substituição.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-239">The replacement path.</span>
          </span>
        </param>
        <param name="pathInfo">
          <span data-ttu-id="d0c1a-240">Informações adicionais de caminho para um recurso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-240">Additional path information for a resource.</span>
          </span>
        </param>
        <param name="queryString">
          <span data-ttu-id="d0c1a-241">A cadeia de caracteres de consulta da solicitação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-241">The request query string.</span>
          </span>
        </param>
        <param name="setClientFilePath">
          <span data-ttu-id="d0c1a-242">
            <see langword="true" /> para definir o caminho do arquivo usado para os recursos de cliente para o valor do parâmetro <c>filePath</c>; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-242">
              <see langword="true" /> to set the file path used for client resources to the value of the <c>filePath</c> parameter; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d0c1a-243">Quando substituída em uma classe derivada, regrava a URL usando as informações de caminho, as informações de cadeia de caracteres de consulta e o caminho especificados, além de um valor que especifica se o caminho do arquivo de cliente é definido como o caminho de regravação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-243">When overridden in a derived class, rewrites the URL by using the specified path, path information, query string information, and a value that specifies whether the client file path is set to the rewrite path.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="d0c1a-244">Sempre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-244">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Server">
      <MemberSignature Language="C#" Value="public virtual System.Web.HttpServerUtilityBase Server { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpServerUtilityBase Server" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.Server" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Server As HttpServerUtilityBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::HttpServerUtilityBase ^ Server { System::Web::HttpServerUtilityBase ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpServerUtilityBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d0c1a-245">Quando substituída em uma classe derivada, obtém o objeto <see cref="T:System.Web.HttpServerUtility" /> que fornece métodos que são usados quando solicitações da Web estão sendo processadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-245">When overridden in a derived class, gets the <see cref="T:System.Web.HttpServerUtility" /> object that provides methods that are used when Web requests are being processed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d0c1a-246">O objeto do utilitário de servidor para a solicitação HTTP atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-246">The server utility object for the current HTTP request.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="d0c1a-247">Sempre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-247">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Session">
      <MemberSignature Language="C#" Value="public virtual System.Web.HttpSessionStateBase Session { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpSessionStateBase Session" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.Session" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Session As HttpSessionStateBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::HttpSessionStateBase ^ Session { System::Web::HttpSessionStateBase ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpSessionStateBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d0c1a-248">Quando substituído em uma classe derivada, obtém o objeto <see cref="T:System.Web.SessionState.HttpSessionState" /> da solicitação HTTP atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-248">When overridden in a derived class, gets the <see cref="T:System.Web.SessionState.HttpSessionState" /> object for the current HTTP request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d0c1a-249">O objeto de estado da sessão para a solicitação HTTP atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-249">The session-state object for the current HTTP request.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="d0c1a-250">Sempre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-250">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetSessionStateBehavior">
      <MemberSignature Language="C#" Value="public virtual void SetSessionStateBehavior (System.Web.SessionState.SessionStateBehavior sessionStateBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetSessionStateBehavior(valuetype System.Web.SessionState.SessionStateBehavior sessionStateBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.SetSessionStateBehavior(System.Web.SessionState.SessionStateBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetSessionStateBehavior(System::Web::SessionState::SessionStateBehavior sessionStateBehavior);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sessionStateBehavior" Type="System.Web.SessionState.SessionStateBehavior" />
      </Parameters>
      <Docs>
        <param name="sessionStateBehavior">
          <span data-ttu-id="d0c1a-251">Um dos valores de enumeração que especifica qual o tipo de comportamento de estado de sessão necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-251">One of the enumeration values that specifies what type of session state behavior is required.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d0c1a-252">Quando substituída em uma classe derivada, define o tipo de comportamento de estado de sessão que é necessário para dar suporte a uma solicitação HTTP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-252">When overridden in a derived class, sets the type of session state behavior that is required to support an HTTP request.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0c1a-253">O <xref:System.Web.HttpContextBase.SetSessionStateBehavior%2A> método fornece um método de base que deve ser implementado por classes que herdam deste tipo.</span><span class="sxs-lookup"><span data-stu-id="d0c1a-253">The <xref:System.Web.HttpContextBase.SetSessionStateBehavior%2A> method provides a base method that must be implemented by classes that inherit from this type.</span></span> <span data-ttu-id="d0c1a-254">O ASP.NET implementa este método no <xref:System.Web.HttpContextWrapper> e <xref:System.Web.HttpContext> classes.</span><span class="sxs-lookup"><span data-stu-id="d0c1a-254">ASP.NET implements this method in the <xref:System.Web.HttpContextWrapper> and <xref:System.Web.HttpContext> classes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="d0c1a-255">Um tipo derivado falha ao implementar esse método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-255">A derived type fails to implement this method.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.HttpContext.SetSessionStateBehavior(System.Web.SessionState.SessionStateBehavior)" />
      </Docs>
    </Member>
    <Member MemberName="SkipAuthorization">
      <MemberSignature Language="C#" Value="public virtual bool SkipAuthorization { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SkipAuthorization" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.SkipAuthorization" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SkipAuthorization As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SkipAuthorization { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d0c1a-256">Quando substituída em uma classe derivada, obtém ou define um valor que especifica se o objeto <see cref="T:System.Web.Security.UrlAuthorizationModule" /> deve ignorar a verificação de autorização da solicitação atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-256">When overridden in a derived class, gets or sets a value that specifies whether the <see cref="T:System.Web.Security.UrlAuthorizationModule" /> object should skip the authorization check for the current request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d0c1a-257">
            <see langword="true" /> se <see cref="T:System.Web.Security.UrlAuthorizationModule" /> precisar ignorar a verificação de autorização; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-257">
              <see langword="true" /> if <see cref="T:System.Web.Security.UrlAuthorizationModule" /> should skip the authorization check; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="d0c1a-258">Sempre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-258">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ThreadAbortOnTimeout">
      <MemberSignature Language="C#" Value="public virtual bool ThreadAbortOnTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ThreadAbortOnTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.ThreadAbortOnTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ThreadAbortOnTimeout As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ThreadAbortOnTimeout { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d0c1a-259">Quando implementada em uma classe derivada, obtém ou define um valor que especifica se o tempo de execução do ASP.NET deve chamar <see cref="M:System.Threading.Thread.Abort" /> no thread que está atendendo a essa solicitação quando a solicitação expira.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-259">When implemented in a derived class, gets or sets a value that specifies whether the ASP.NET runtime should call <see cref="M:System.Threading.Thread.Abort" /> on the thread that is servicing this request when the request times out.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d0c1a-260">
            <see langword="true" /> se <see cref="M:System.Threading.Thread.Abort" /> for chamado quando a thread expirar; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-260">
              <see langword="true" /> if <see cref="M:System.Threading.Thread.Abort" /> will be called when the thread times out; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="d0c1a-261">O padrão é <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-261">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0c1a-262">Para obter mais informações, consulte <xref:System.Web.HttpContext.ThreadAbortOnTimeout%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d0c1a-262">For more information, see <xref:System.Web.HttpContext.ThreadAbortOnTimeout%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Timestamp">
      <MemberSignature Language="C#" Value="public virtual DateTime Timestamp { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime Timestamp" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.Timestamp" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Timestamp As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property DateTime Timestamp { DateTime get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d0c1a-263">Quando substituída em uma classe derivada, obtém o carimbo de data/hora inicial da solicitação HTTP atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-263">When overridden in a derived class, gets the initial timestamp of the current HTTP request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d0c1a-264">O carimbo de data/hora da solicitação HTTP atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-264">The timestamp of the current HTTP request.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="d0c1a-265">Sempre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-265">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Trace">
      <MemberSignature Language="C#" Value="public virtual System.Web.TraceContext Trace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.TraceContext Trace" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.Trace" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Trace As TraceContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::TraceContext ^ Trace { System::Web::TraceContext ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.TraceContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d0c1a-266">Quando substituída em uma classe derivada, obtém o objeto <see cref="T:System.Web.TraceContext" /> da resposta HTTP atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-266">When overridden in a derived class, gets the <see cref="T:System.Web.TraceContext" /> object for the current HTTP response.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d0c1a-267">O objeto de rastreamento para a resposta HTTP atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-267">The trace object for the current HTTP response.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="d0c1a-268">Sempre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-268">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="User">
      <MemberSignature Language="C#" Value="public virtual System.Security.Principal.IPrincipal User { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.IPrincipal User" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.User" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property User As IPrincipal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Principal::IPrincipal ^ User { System::Security::Principal::IPrincipal ^ get(); void set(System::Security::Principal::IPrincipal ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IPrincipal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d0c1a-269">Quando substituído em uma classe derivada, obtém ou define informações de segurança para a solicitação HTTP atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-269">When overridden in a derived class, gets or sets security information for the current HTTP request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d0c1a-270">Um objeto que contém informações de segurança para a solicitação HTTP atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-270">An object that contains security information for the current HTTP request.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="d0c1a-271">Sempre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-271">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WebSocketNegotiatedProtocol">
      <MemberSignature Language="C#" Value="public virtual string WebSocketNegotiatedProtocol { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string WebSocketNegotiatedProtocol" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.WebSocketNegotiatedProtocol" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property WebSocketNegotiatedProtocol As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ WebSocketNegotiatedProtocol { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d0c1a-272">Quando implementada em uma classe derivada, obtém o protocolo negociado que foi enviado do servidor para o cliente para uma conexão <see cref="T:System.Web.WebSockets.AspNetWebSocket" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-272">When implemented in a derived class, gets the negotiated protocol that was sent from the server to the client for an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> connection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d0c1a-273">O protocolo negociado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-273">The negotiated protocol.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WebSocketRequestedProtocols">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;string&gt; WebSocketRequestedProtocols { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;string&gt; WebSocketRequestedProtocols" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.WebSocketRequestedProtocols" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property WebSocketRequestedProtocols As IList(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IList&lt;System::String ^&gt; ^ WebSocketRequestedProtocols { System::Collections::Generic::IList&lt;System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d0c1a-274">Quando implementada em uma classe derivada, obtém a lista ordenada de protocolos que foram solicitados pelo cliente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-274">When implemented in a derived class, gets the ordered list of protocols that were requested by the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d0c1a-275">Os protocolos solicitados, ou <see langword="null" /> se não for um <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> solicitação ou se nenhuma lista está presente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0c1a-275">The requested protocols, or <see langword="null" /> if this is not an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> request or if no list is present.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>