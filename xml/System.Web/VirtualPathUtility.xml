<Type Name="VirtualPathUtility" FullName="System.Web.VirtualPathUtility">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e458b033648dd257a9cd90aa518fef7f1ceff568" />
    <Meta Name="ms.sourcegitcommit" Value="c902e847cd05ac37d93eca981b0fb009aae0a790" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="11/28/2018" />
    <Meta Name="ms.locfileid" Value="52454218" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class VirtualPathUtility" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit VirtualPathUtility extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.VirtualPathUtility" />
  <TypeSignature Language="VB.NET" Value="Public Class VirtualPathUtility" />
  <TypeSignature Language="C++ CLI" Value="public ref class VirtualPathUtility abstract sealed" />
  <TypeSignature Language="F#" Value="type VirtualPathUtility = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornece métodos de utilitário para operações comuns de caminho virtual.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.VirtualPathUtility> classe fornece métodos de utilitário para operações comuns que envolvem caminhos virtuais. Para controles de servidor ASP.NET e o código do servidor, os caminhos virtuais usando o operador de raiz do aplicativo Web, o til (~), normalmente são usados em vez de caminhos absolutos e relativos. Para obter mais informações, consulte [caminhos de projeto do ASP.NET Web](https://msdn.microsoft.com/library/2447f50c-b849-483c-8093-85ed53e7a5bd).  
  
 Use o <xref:System.Web.VirtualPathUtility> classe quando você precisa converter caminhos relativos de aplicativo para os caminhos virtuais absolutos, como pode ser o caso no desenvolvimento de um manipulador de serviço da Web personalizado.  
  
 Um caminho virtual absoluto inicia com a marca de literal de barra (/). Um caminho virtual relativo é relativo ao diretório raiz do aplicativo, se for apenas um til (\~) ou inicie com o til e uma barra invertida dupla (\~\\\\) ou o til e uma barra (\~/). Tornar um caminho virtual relativo torna o caminho independente do aplicativo.  
  
 O diretório virtual para o aplicativo pode ser obtido de <xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A> e <xref:System.Web.HttpRequest.ApplicationPath%2A> propriedades.  
  
> [!NOTE]
>  O <xref:System.Web.VirtualPathUtility> classe não é apenas para fins de segurança ou de conversão em formato canônico. Para obter mais informações sobre a segurança de aplicativo Web, consulte [visão geral do Web Application ameaças à segurança](https://msdn.microsoft.com/library/88d61678-f84e-4622-ae80-53128821855a). Para funcionalidade genérica do processamento de URL, consulte <xref:System.Uri>.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.VirtualPathUtility> classe e alguns de seus métodos. Primeiro, o <xref:System.Web.HttpRequest.FilePath%2A> propriedade gerará o caminho virtual para a página da Web. O <xref:System.Web.VirtualPathUtility.GetFileName%2A>, <xref:System.Web.VirtualPathUtility.GetExtension%2A>, e <xref:System.Web.VirtualPathUtility.GetDirectory%2A> métodos retornam informações sobre o caminho virtual. Em seguida, o <xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A> propriedade gera um caminho virtual da solicitação atual, que pode ser diferente de <xref:System.Web.HttpRequest.FilePath%2A> propriedade, se um <xref:System.Web.HttpResponse.Redirect%2A> método foi chamado. O <xref:System.Web.VirtualPathUtility.IsAbsolute%2A>, <xref:System.Web.VirtualPathUtility.IsAppRelative%2A>, e <xref:System.Web.VirtualPathUtility.ToAppRelative%2A> métodos retornam informações sobre o caminho virtual.  
  
 [!code-aspx-csharp[System.Web.VirtualPathUtility#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.VirtualPathUtility/cs/virtualpathutilitycs.aspx#1)]
 [!code-aspx-vb[System.Web.VirtualPathUtility#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.VirtualPathUtility/vb/virtualpathutilityvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.HttpRequest" />
    <related type="Article" href="https://msdn.microsoft.com/library/2447f50c-b849-483c-8093-85ed53e7a5bd">Caminhos de Site da Web do ASP.NET</related>
  </Docs>
  <Members>
    <Member MemberName="AppendTrailingSlash">
      <MemberSignature Language="C#" Value="public static string AppendTrailingSlash (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string AppendTrailingSlash(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.VirtualPathUtility.AppendTrailingSlash(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AppendTrailingSlash (virtualPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ AppendTrailingSlash(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="static member AppendTrailingSlash : string -&gt; string" Usage="System.Web.VirtualPathUtility.AppendTrailingSlash virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">O caminho virtual ao qual a barra “/” será acrescentada.</param>
        <summary>Acrescenta a barra “/” literal ao final do caminho virtual se ainda não existe.</summary>
        <returns>O caminho virtual modificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se o literal barra (/) existe no final do caminho virtual, o caminho virtual não será modificado.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.VirtualPathUtility.RemoveTrailingSlash(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Combine">
      <MemberSignature Language="C#" Value="public static string Combine (string basePath, string relativePath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Combine(string basePath, string relativePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.VirtualPathUtility.Combine(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Combine (basePath As String, relativePath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Combine(System::String ^ basePath, System::String ^ relativePath);" />
      <MemberSignature Language="F#" Value="static member Combine : string * string -&gt; string" Usage="System.Web.VirtualPathUtility.Combine (basePath, relativePath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="basePath" Type="System.String" />
        <Parameter Name="relativePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="basePath">O caminho base.</param>
        <param name="relativePath">O caminho relativo.</param>
        <summary>Combina um caminho base e um caminho relativo.</summary>
        <returns>Os caminhos <paramref name="basePath" /> e <paramref name="relativePath" /> combinados.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.VirtualPathUtility.Combine%2A> método retorna o valor da <xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A> propriedade se o caminho relativo é exatamente um til (~).  
  
 O <xref:System.Web.VirtualPathUtility.Combine%2A> usa o <xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A> valor de propriedade em vez do caminho base, se o caminho relativo começa com um til e uma barra (~ /); caso contrário, o <xref:System.Web.VirtualPathUtility.Combine%2A> método usa o caminho base.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">O <paramref name="relativePath" /> é um caminho físico.  
  
- ou - 
 O <paramref name="relativePath" /> inclui um ou mais dois pontos.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="relativePath" /> é <see langword="null" /> ou é uma cadeia de caracteres vazia.  
  
- ou - 
 <paramref name="basePath" /> é <see langword="null" /> ou é uma cadeia de caracteres vazia.</exception>
        <altmember cref="P:System.Web.HttpRuntime.AppDomainAppVirtualPath" />
        <altmember cref="M:System.Web.Hosting.VirtualPathProvider.CombineVirtualPaths(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetDirectory">
      <MemberSignature Language="C#" Value="public static string GetDirectory (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetDirectory(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.VirtualPathUtility.GetDirectory(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDirectory (virtualPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetDirectory(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="static member GetDirectory : string -&gt; string" Usage="System.Web.VirtualPathUtility.GetDirectory virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">O caminho virtual.</param>
        <summary>Retorna a parte do diretório de um caminho virtual.</summary>
        <returns>O diretório referenciado no caminho virtual.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se `virtualPath` não tem raiz; ou seja, ele não é igual o operador raiz (o til [\~]), não começa com um til (\~), como um til e uma barra (\~/) ou um til e uma barra invertida dupla (\~/ /), ou não começar com uma barra (/), um <xref:System.ArgumentException> exceção é lançada.  
  
 Se o caminho virtual que é passado para o <xref:System.Web.VirtualPathUtility.GetDirectory%2A> método for `"/images/image1.gif"`, o diretório retornado é `"/images"`.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.VirtualPathUtility.GetFileName%2A>, <xref:System.Web.VirtualPathUtility.GetExtension%2A>, e <xref:System.Web.VirtualPathUtility.GetDirectory%2A> métodos.  
  
 [!code-csharp[System.Web.VirtualPathUtility#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.VirtualPathUtility/cs/virtualpathutilitycs.aspx#2)]
 [!code-vb[System.Web.VirtualPathUtility#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.VirtualPathUtility/vb/virtualpathutilityvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">O <paramref name="virtualPath" /> não tem raiz.  
  
\- ou - 
 <paramref name="virtualPath" /> é <see langword="null" /> ou é uma cadeia de caracteres vazia.</exception>
        <altmember cref="M:System.Web.VirtualPathUtility.GetExtension(System.String)" />
        <altmember cref="M:System.Web.VirtualPathUtility.GetFileName(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetExtension">
      <MemberSignature Language="C#" Value="public static string GetExtension (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetExtension(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.VirtualPathUtility.GetExtension(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetExtension (virtualPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetExtension(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="static member GetExtension : string -&gt; string" Usage="System.Web.VirtualPathUtility.GetExtension virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">O caminho virtual.</param>
        <summary>Recupera a extensão do arquivo referenciado no caminho virtual.</summary>
        <returns>O literal de cadeia de caracteres de extensão de nome de arquivo, incluindo o ponto (.), <see langword="null" /> ou uma cadeia de caracteres vazia ("").</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se o caminho virtual que é passado para o <xref:System.Web.VirtualPathUtility.GetExtension%2A> método for `"/images/image1.gif"`, a extensão retornada é `".gif"`.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.VirtualPathUtility.GetFileName%2A>, <xref:System.Web.VirtualPathUtility.GetExtension%2A>, e <xref:System.Web.VirtualPathUtility.GetDirectory%2A> métodos.  
  
 [!code-csharp[System.Web.VirtualPathUtility#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.VirtualPathUtility/cs/virtualpathutilitycs.aspx#2)]
 [!code-vb[System.Web.VirtualPathUtility#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.VirtualPathUtility/vb/virtualpathutilityvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="virtualPath" /> contém um ou mais caracteres que não são válidos, conforme definido em <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
        <altmember cref="M:System.Web.VirtualPathUtility.GetDirectory(System.String)" />
        <altmember cref="M:System.Web.VirtualPathUtility.GetFileName(System.String)" />
        <altmember cref="M:System.IO.Path.GetExtension(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetFileName">
      <MemberSignature Language="C#" Value="public static string GetFileName (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetFileName(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.VirtualPathUtility.GetFileName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFileName (virtualPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetFileName(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="static member GetFileName : string -&gt; string" Usage="System.Web.VirtualPathUtility.GetFileName virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">O caminho virtual.</param>
        <summary>Recupera o nome do arquivo referenciado no caminho virtual.</summary>
        <returns>O literal do nome do arquivo após o último caractere de diretório em <paramref name="virtualPath" />; caso contrário, o último nome de diretório se o último caractere de <paramref name="virtualPath" /> for um diretório ou um caractere separador de volume.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se o caminho virtual que é passado para o <xref:System.Web.VirtualPathUtility.GetFileName%2A> método for `"/images/image1.gif"`, o nome de arquivo retornado é `"image1.gif"`.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.VirtualPathUtility.GetFileName%2A>, <xref:System.Web.VirtualPathUtility.GetExtension%2A>, e <xref:System.Web.VirtualPathUtility.GetDirectory%2A> métodos.  
  
 [!code-csharp[System.Web.VirtualPathUtility#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.VirtualPathUtility/cs/virtualpathutilitycs.aspx#2)]
 [!code-vb[System.Web.VirtualPathUtility#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.VirtualPathUtility/vb/virtualpathutilityvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="virtualPath" /> contém um ou mais caracteres que não são válidos, conforme definido em <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
        <altmember cref="M:System.Web.VirtualPathUtility.GetExtension(System.String)" />
        <altmember cref="M:System.Web.VirtualPathUtility.GetDirectory(System.String)" />
        <altmember cref="M:System.IO.Path.GetFileName(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="IsAbsolute">
      <MemberSignature Language="C#" Value="public static bool IsAbsolute (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsAbsolute(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.VirtualPathUtility.IsAbsolute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsAbsolute (virtualPath As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsAbsolute(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="static member IsAbsolute : string -&gt; bool" Usage="System.Web.VirtualPathUtility.IsAbsolute virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">O caminho virtual a ser verificado.</param>
        <summary>Retorna um valor booliano que indica se o caminho virtual especificado é absoluto; ou seja, se ele começa com uma barra (/) literal.</summary>
        <returns>
          <see langword="true" /> se <paramref name="virtualPath" /> for um caminho absoluto e não for <see langword="null" /> ou uma cadeia de caracteres vazia (""); caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um caminho virtual é absoluto se ele começa com uma literal de barra (/). Por exemplo, o <xref:System.Web.HttpRequest.Path%2A> propriedade retorna um caminho virtual absoluto.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.VirtualPathUtility.IsAbsolute%2A>, <xref:System.Web.VirtualPathUtility.IsAppRelative%2A>, e <xref:System.Web.VirtualPathUtility.ToAppRelative%2A> métodos.  
  
 [!code-csharp[System.Web.VirtualPathUtility#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.VirtualPathUtility/cs/virtualpathutilitycs.aspx#3)]
 [!code-vb[System.Web.VirtualPathUtility#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.VirtualPathUtility/vb/virtualpathutilityvb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="virtualPath" /> é <see langword="null" />.</exception>
        <altmember cref="P:System.Web.HttpRequest.Path" />
        <altmember cref="M:System.Web.VirtualPathUtility.IsAppRelative(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="IsAppRelative">
      <MemberSignature Language="C#" Value="public static bool IsAppRelative (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsAppRelative(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.VirtualPathUtility.IsAppRelative(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsAppRelative (virtualPath As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsAppRelative(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="static member IsAppRelative : string -&gt; bool" Usage="System.Web.VirtualPathUtility.IsAppRelative virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">O caminho virtual a ser verificado.</param>
        <summary>Retorna um valor booliano que indica se o caminho virtual especificado é relativo ao aplicativo.</summary>
        <returns>
          <see langword="true" /> se <paramref name="virtualPath" /> for relativo ao aplicativo; caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O caminho virtual pode ser apenas o operador raiz (o til [~]), ou ele pode começar com o operador raiz. Se `virtualPath` está `null`, um <xref:System.ArgumentNullException> exceção será gerada. Se `virtualPath` é uma cadeia de caracteres vazia (""), o <xref:System.Web.VirtualPathUtility.IsAppRelative%2A> retorno do método `false`.  
  
> [!NOTE]
>  `"~` `filename` `"` não é um caminho virtual válido e retorna `false` para o <xref:System.Web.VirtualPathUtility.IsAppRelative%2A> método.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.VirtualPathUtility.IsAbsolute%2A>, <xref:System.Web.VirtualPathUtility.IsAppRelative%2A>, e <xref:System.Web.VirtualPathUtility.ToAppRelative%2A> métodos.  
  
 [!code-csharp[System.Web.VirtualPathUtility#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.VirtualPathUtility/cs/virtualpathutilitycs.aspx#3)]
 [!code-vb[System.Web.VirtualPathUtility#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.VirtualPathUtility/vb/virtualpathutilityvb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="virtualPath" /> é <see langword="null" />.</exception>
        <altmember cref="M:System.Web.VirtualPathUtility.IsAbsolute(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="MakeRelative">
      <MemberSignature Language="C#" Value="public static string MakeRelative (string fromPath, string toPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string MakeRelative(string fromPath, string toPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.VirtualPathUtility.MakeRelative(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MakeRelative (fromPath As String, toPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ MakeRelative(System::String ^ fromPath, System::String ^ toPath);" />
      <MemberSignature Language="F#" Value="static member MakeRelative : string * string -&gt; string" Usage="System.Web.VirtualPathUtility.MakeRelative (fromPath, toPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fromPath" Type="System.String" />
        <Parameter Name="toPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fromPath">O caminho virtual inicial do qual o caminho virtual relativo é retornado.</param>
        <param name="toPath">O caminho virtual final para o qual o caminho virtual relativo é retornado.</param>
        <summary>Retorna o caminho virtual relativo de um caminho virtual que contém o operador raiz (o til [~]) para outro.</summary>
        <returns>O caminho virtual relativo de <paramref name="fromPath" /> para <paramref name="toPath" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se o `fromPath` e `toPath` parâmetros não estão vinculados; ou seja, eles não são iguais o operador raiz (o til [\~]), não começam com um til (\~), como um til e uma barra (\~/) ou um til e um valor double barra invertida (\~/ /), ou não começar com uma barra (/), um <xref:System.ArgumentException> exceção é lançada.  
  
 Não são usadas parâmetros de cadeia de caracteres de consulta e as âncoras HTML que são usadas no URI de determinar o caminho relativo.  
  
 Se `fromPath` está `"/directory1/file1.aspx"` e `toPath` é `"/directory2/file2.aspx"`, o <xref:System.Web.VirtualPathUtility.MakeRelative%2A> retorno do método `"../directory2/file2.aspx"`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">O <paramref name="fromPath" /> não tem raiz.  
  
\- ou - 
 O <paramref name="toPath" /> não tem raiz.</exception>
        <altmember cref="M:System.Uri.MakeRelative(System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveTrailingSlash">
      <MemberSignature Language="C#" Value="public static string RemoveTrailingSlash (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string RemoveTrailingSlash(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.VirtualPathUtility.RemoveTrailingSlash(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RemoveTrailingSlash (virtualPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ RemoveTrailingSlash(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="static member RemoveTrailingSlash : string -&gt; string" Usage="System.Web.VirtualPathUtility.RemoveTrailingSlash virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">O caminho virtual do qual remover qualquer barra “/” à direita.</param>
        <summary>Remover uma barra “/” à direita de um caminho virtual.</summary>
        <returns>Um caminho virtual sem uma barra “/” à direita, se o caminho virtual já não é o diretório raiz ("/"); caso contrário, <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.VirtualPathUtility.RemoveTrailingSlash%2A> método Remove uma barra (/) a partir do final do caminho virtual. Se o caminho virtual já é o diretório raiz (`"/"`), nenhuma ação será tomada. Se o caminho virtual é `null` ou uma cadeia de caracteres vazia (""), o <xref:System.Web.VirtualPathUtility.RemoveTrailingSlash%2A> retorno do método `null`.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.VirtualPathUtility.AppendTrailingSlash(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToAbsolute">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Converte um caminho virtual em um caminho absoluto do aplicativo.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToAbsolute">
      <MemberSignature Language="C#" Value="public static string ToAbsolute (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToAbsolute(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.VirtualPathUtility.ToAbsolute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToAbsolute (virtualPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToAbsolute(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="static member ToAbsolute : string -&gt; string" Usage="System.Web.VirtualPathUtility.ToAbsolute virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">O caminho virtual a ser convertido em um caminho relativo do aplicativo.</param>
        <summary>Converte um caminho virtual em um caminho absoluto do aplicativo.</summary>
        <returns>A representação de caminho absoluto do caminho virtual especificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um caminho absoluto do aplicativo é-um em que o caminho do aplicativo é usado em vez do operador raiz (o til [~]).  
  
 Se `virtualPath` é:  
  
-   Absoluto, o <xref:System.Web.VirtualPathUtility.ToAbsolute%2A> método retorna o caminho virtual inalterado.  
  
-   Relativo ao aplicativo, o <xref:System.Web.VirtualPathUtility.ToAbsolute%2A> método anexa o caminho de diretório virtual do aplicativo atual para o início do `virtualPath`. Por exemplo, o caminho de diretório virtual do aplicativo atual pode ser acessado do <xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A> propriedade.  
  
-   Não tem raiz, o <xref:System.Web.VirtualPathUtility.ToAbsolute%2A> método gera um <xref:System.ArgumentOutOfRangeException> exceção.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">O <paramref name="virtualPath" /> não tem raiz.</exception>
        <exception cref="T:System.Web.HttpException">Um ponto duplo à esquerda (..) é usado para sair acima do diretório superior.</exception>
        <altmember cref="P:System.Web.HttpRuntime.AppDomainAppVirtualPath" />
      </Docs>
    </Member>
    <Member MemberName="ToAbsolute">
      <MemberSignature Language="C#" Value="public static string ToAbsolute (string virtualPath, string applicationPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToAbsolute(string virtualPath, string applicationPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.VirtualPathUtility.ToAbsolute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToAbsolute (virtualPath As String, applicationPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToAbsolute(System::String ^ virtualPath, System::String ^ applicationPath);" />
      <MemberSignature Language="F#" Value="static member ToAbsolute : string * string -&gt; string" Usage="System.Web.VirtualPathUtility.ToAbsolute (virtualPath, applicationPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="applicationPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">O caminho virtual a ser convertido em um caminho relativo do aplicativo.</param>
        <param name="applicationPath">O caminho do aplicativo a ser usado para converter <paramref name="virtualPath" /> em um caminho relativo.</param>
        <summary>Converte um caminho virtual em um caminho absoluto do aplicativo usando o caminho de aplicativo especificado.</summary>
        <returns>A representação de caminho virtual absoluta do <paramref name="virtualPath" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.VirtualPathUtility.ToAbsolute%2A> sobrecarga da <xref:System.Web.VirtualPathUtility.ToAbsolute%2A> método usa o caminho do aplicativo fornecido em vez do caminho do aplicativo atual.  
  
 Se `virtualPath` é:  
  
-   Absoluto, o <xref:System.Web.VirtualPathUtility.ToAbsolute%2A> método retorna o caminho virtual sem alterações.  
  
-   Relativo ao aplicativo, o <xref:System.Web.VirtualPathUtility.ToAbsolute%2A> método adiciona `applicationPath` ao início do caminho virtual.  
  
-   Não tem raiz, o <xref:System.Web.VirtualPathUtility.ToAbsolute%2A> método gera um <xref:System.ArgumentOutOfRangeException> exceção.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">O <paramref name="applicationPath" /> não tem raiz.</exception>
        <exception cref="T:System.Web.HttpException">Um ponto duplo à esquerda (.) é usado no caminho do aplicativo para sair acima do diretório superior.</exception>
        <altmember cref="P:System.Web.HttpRuntime.AppDomainAppVirtualPath" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToAppRelative">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Converte um caminho virtual em um caminho relativo de aplicativo.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToAppRelative">
      <MemberSignature Language="C#" Value="public static string ToAppRelative (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToAppRelative(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.VirtualPathUtility.ToAppRelative(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToAppRelative (virtualPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToAppRelative(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="static member ToAppRelative : string -&gt; string" Usage="System.Web.VirtualPathUtility.ToAppRelative virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">O caminho virtual a ser convertido em um caminho relativo do aplicativo.</param>
        <summary>Converte um caminho virtual em um caminho relativo do aplicativo usando o caminho virtual do aplicativo que está na propriedade <see cref="P:System.Web.HttpRuntime.AppDomainAppVirtualPath" />.</summary>
        <returns>A representação de caminho relativo do aplicativo de <paramref name="virtualPath" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se o caminho virtual para o aplicativo estiver `"myapp"` e o caminho virtual `"/myApp/sub/default.asp"` é passado para o <xref:System.Web.VirtualPathUtility.ToAppRelative%2A> método, o caminho relativo do aplicativo resultante é `"~/sub/default.aspx"`.  
  
 Se `virtualPath` não inicia com o caminho do aplicativo atual, o <xref:System.Web.VirtualPathUtility.ToAppRelative%2A> método retorna o caminho virtual inalterado.  
  
 Se `virtualPath` é o mesmo que o caminho do aplicativo, o operador raiz (o til [~]), será retornado. Por exemplo, o caminho de diretório virtual do aplicativo atual pode ser acessado do <xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A> propriedade.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.VirtualPathUtility.IsAbsolute%2A>, <xref:System.Web.VirtualPathUtility.IsAppRelative%2A>, e <xref:System.Web.VirtualPathUtility.ToAppRelative%2A> métodos.  
  
 [!code-csharp[System.Web.VirtualPathUtility#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.VirtualPathUtility/cs/virtualpathutilitycs.aspx#3)]
 [!code-vb[System.Web.VirtualPathUtility#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.VirtualPathUtility/vb/virtualpathutilityvb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="virtualPath" /> é <see langword="null" />.</exception>
        <altmember cref="M:System.Web.VirtualPathUtility.ToAppRelative(System.String,System.String)" />
        <altmember cref="P:System.Web.HttpRuntime.AppDomainAppVirtualPath" />
      </Docs>
    </Member>
    <Member MemberName="ToAppRelative">
      <MemberSignature Language="C#" Value="public static string ToAppRelative (string virtualPath, string applicationPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToAppRelative(string virtualPath, string applicationPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.VirtualPathUtility.ToAppRelative(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToAppRelative (virtualPath As String, applicationPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToAppRelative(System::String ^ virtualPath, System::String ^ applicationPath);" />
      <MemberSignature Language="F#" Value="static member ToAppRelative : string * string -&gt; string" Usage="System.Web.VirtualPathUtility.ToAppRelative (virtualPath, applicationPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="applicationPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">O caminho virtual a ser convertido em um caminho relativo do aplicativo.</param>
        <param name="applicationPath">O caminho do aplicativo a ser usado para converter <paramref name="virtualPath" /> em um caminho relativo.</param>
        <summary>Converte um caminho virtual em um caminho relativo do aplicativo usando um caminho de aplicativo especificado.</summary>
        <returns>A representação de caminho relativo do aplicativo de <paramref name="virtualPath" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.VirtualPathUtility.ToAppRelative%2A> sobrecarga da <xref:System.Web.VirtualPathUtility.ToAppRelative%2A> método usa `applicationPath` em vez do caminho do aplicativo atual. Se `virtualPath` não inicia com `applicationPath`, o <xref:System.Web.VirtualPathUtility.ToAppRelative%2A> método retorna o caminho virtual inalterado.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.VirtualPathUtility.ToAppRelative(System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>