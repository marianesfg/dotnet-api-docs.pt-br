<Type Name="HttpPostedFile" FullName="System.Web.HttpPostedFile">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7b5f62f8871ee32c9fc3a853b7ca969414a5987d" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51862299" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class HttpPostedFile" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpPostedFile extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.HttpPostedFile" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpPostedFile" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpPostedFile sealed" />
  <TypeSignature Language="F#" Value="type HttpPostedFile = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornece acesso a arquivos individuais que foram carregados por um cliente.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.HttpFileCollection> classe fornece acesso a todos os arquivos que são carregados de um cliente como uma coleção de arquivos. O <xref:System.Web.HttpPostedFile> classe fornece propriedades e métodos para obter informações sobre um arquivo individual e para ler e salvar o arquivo.  
  
 O <xref:System.Web.UI.HtmlControls.HtmlInputFile> controle pode ser usado para selecionar e carregar arquivos de um cliente.  
  
 Arquivos são carregados no formato MIME de várias partes/dados de formulário. Por padrão, todas as solicitações, incluindo campos de formulário e maiores que 256 KB, de arquivos carregados são armazenados em buffer no disco, em vez de mantidos na memória do servidor.  
  
 Você pode especificar o tamanho máximo permitido de solicitação, acessando o <xref:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength%2A> propriedade ou definindo o `maxRequestLength` atributo da [httpRuntime Element (ASP.NET Settings Schema)](https://msdn.microsoft.com/library/e9b81350-8aaf-47cc-9843-5f7d0c59f369) elemento dentro do Machine. config ou Arquivo Web. config. O padrão é 4 MB.  
  
 A quantidade de dados que é armazenada em buffer na memória do servidor para uma solicitação, o que inclui os carregamentos de arquivos, pode ser especificada, acessando o <xref:System.Web.Configuration.HttpRuntimeSection.RequestLengthDiskThreshold%2A> propriedade ou definindo o `requestLengthDiskThreshold` atributo do [httpRuntime (configurações do ASP.NET Esquema)](https://msdn.microsoft.com/library/e9b81350-8aaf-47cc-9843-5f7d0c59f369) elemento dentro do arquivo Machine. config ou Web. config.  
  
 Ajustando o <xref:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength%2A> e <xref:System.Web.Configuration.HttpRuntimeSection.RequestLengthDiskThreshold%2A> propriedades, você pode ajustar o desempenho do seu servidor. Além disso, você deve considerar a configuração de <xref:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength%2A> para impedir ataques negação de serviço causados por usuários que enviam arquivos grandes para o servidor.  
  
 Recursos de servidor que são alocados para o arquivo carregado do buffer serão destruídos quando o término da solicitação. Para salvar uma cópia durável do arquivo, use o <xref:System.Web.HttpPostedFile.SaveAs%2A> método.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlInputFile" />
    <altmember cref="T:System.Web.HttpFileCollection" />
  </Docs>
  <Members>
    <Member MemberName="ContentLength">
      <MemberSignature Language="C#" Value="public int ContentLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ContentLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpPostedFile.ContentLength" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ContentLength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentLength : int" Usage="System.Web.HttpPostedFile.ContentLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o tamanho de um arquivo carregado, em bytes.</summary>
        <value>O tamanho do arquivo, em bytes.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.HttpPostedFile.ContentType" />
      </Docs>
    </Member>
    <Member MemberName="ContentType">
      <MemberSignature Language="C#" Value="public string ContentType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentType" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpPostedFile.ContentType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContentType { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentType : string" Usage="System.Web.HttpPostedFile.ContentType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o tipo de conteúdo MIME de um arquivo enviado por um cliente.</summary>
        <value>O tipo de conteúdo MIME do arquivo carregado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo de código a seguir mostra como executar um loop por meio de todos os arquivos na coleção de arquivo carregado e tomar uma ação quando o tipo MIME de um arquivo é `US-ASCII`.  
  
 [!code-csharp[Classic HttpPostedFile.ContentType Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpPostedFile.ContentType Example/CS/source.cs#1)]
 [!code-vb[Classic HttpPostedFile.ContentType Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpPostedFile.ContentType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpPostedFile.FileName" />
        <altmember cref="P:System.Web.HttpPostedFile.ContentLength" />
      </Docs>
    </Member>
    <Member MemberName="FileName">
      <MemberSignature Language="C#" Value="public string FileName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FileName" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpPostedFile.FileName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FileName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FileName : string" Usage="System.Web.HttpPostedFile.FileName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o nome totalmente qualificado do arquivo no cliente.</summary>
        <value>O nome do arquivo do cliente, incluindo o caminho do diretório.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo de código a seguir demonstra como atribuir o nome de um arquivo carregado (o primeiro arquivo da coleção de arquivos) a uma variável de cadeia de caracteres.  
  
 [!code-csharp[Classic HttpPostedFile.FileName Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpPostedFile.FileName Example/CS/source.cs#1)]
 [!code-vb[Classic HttpPostedFile.FileName Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpPostedFile.FileName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpPostedFile.ContentType" />
      </Docs>
    </Member>
    <Member MemberName="InputStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream InputStream { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream InputStream" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpPostedFile.InputStream" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InputStream As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ InputStream { System::IO::Stream ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InputStream : System.IO.Stream" Usage="System.Web.HttpPostedFile.InputStream" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um objeto <see cref="T:System.IO.Stream" /> que aponta para um arquivo carregado para se preparar para a leitura do conteúdo do arquivo.</summary>
        <value>Um <see cref="T:System.IO.Stream" /> que aponta para um arquivo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo de código a seguir mostra como ler o conteúdo do primeiro arquivo na coleção de arquivos do cliente em uma matriz de bytes e, em seguida, copie a matriz de bytes em uma cadeia de caracteres.  
  
 [!code-csharp[Classic HttpPostedFile.InputStream Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpPostedFile.InputStream Example/CS/source.cs#1)]
 [!code-vb[Classic HttpPostedFile.InputStream Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpPostedFile.InputStream Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveAs">
      <MemberSignature Language="C#" Value="public void SaveAs (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveAs(string filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpPostedFile.SaveAs(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveAs (filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveAs(System::String ^ filename);" />
      <MemberSignature Language="F#" Value="member this.SaveAs : string -&gt; unit" Usage="httpPostedFile.SaveAs filename" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename">O nome do arquivo salvo.</param>
        <summary>Salva o conteúdo de um arquivo carregado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O tamanho máximo permitido para uma solicitação, o que inclui os arquivos carregados, é 4 MB, por padrão. Tamanho máximo da solicitação pode ser especificado no arquivo Machine. config ou Web. config na `maxRequestLength` atributo o [httpRuntime Element (ASP.NET Settings Schema)](https://msdn.microsoft.com/library/e9b81350-8aaf-47cc-9843-5f7d0c59f369) elemento. O tamanho máximo de solicitação para uma página específica pode ser especificado usando o [local Element (ASP.NET Settings Schema)](https://msdn.microsoft.com/library/922ef7d5-da38-4661-b1c6-5b9e5ceda1d5) elemento em um arquivo Web. config.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como salvar todos os arquivos que são carregados pelo cliente para a pasta de C:\TempFiles no disco local do servidor de Web.  
  
 [!code-csharp[Classic HttpPostedFile.SaveAs Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpPostedFile.SaveAs Example/CS/source.cs#1)]
 [!code-vb[Classic HttpPostedFile.SaveAs Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpPostedFile.SaveAs Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">A propriedade <see cref="P:System.Web.Configuration.HttpRuntimeSection.RequireRootedSaveAsPath" /> do objeto <see cref="T:System.Web.Configuration.HttpRuntimeSection" /> é definida como <see langword="true" />, mas <paramref name="filename" /> não é um caminho absoluto.</exception>
      </Docs>
    </Member>
  </Members>
</Type>