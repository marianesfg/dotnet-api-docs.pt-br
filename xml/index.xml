<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="index.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5a83ea4b-dd12-480b-bfc8-267272ef1864d07304351083e52285e1cc5a3896d545de4e3833.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d07304351083e52285e1cc5a3896d545de4e3833</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">df6cf590aa3087f6c7c202712eee781c6a3c8f96</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/10/2018</xliffext:ms.lasthandoff>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.Model.ModelItemExtensions.Focus(System.Activities.Presentation.Model.ModelItem)">
          <source>The designer item to set focus on.</source>
          <target state="translated">O item de designer no qual definir o foco.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.Model.ModelItemExtensions.Focus(System.Activities.Presentation.Model.ModelItem)">
          <source>Sets the keyboard focus on the specified designer item.</source>
          <target state="translated">Define o foco do teclado no item de designer especificado.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.Model.ModelItemExtensions.Focus(System.Activities.Presentation.Model.ModelItem,System.Int32)">
          <source>The designer item to set focus on.</source>
          <target state="translated">O item de designer no qual definir o foco.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.Model.ModelItemExtensions.Focus(System.Activities.Presentation.Model.ModelItem,System.Int32)">
          <source>The maximum number of levels used to set a limit on the expansion of the model tree if the specified designer item is not visible.</source>
          <target state="translated">O número máximo de níveis usado para definir um limite à expansão da árvore de modelo se o item de designer especificado não estiver visível.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.Model.ModelItemExtensions.Focus(System.Activities.Presentation.Model.ModelItem,System.Int32)">
          <source>Sets the keyboard focus on the specified designer item.</source>
          <target state="translated">Define o foco do teclado no item de designer especificado.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.Model.ModelItemExtensions.GetEditingContext(System.Activities.Presentation.Model.ModelItem)">
          <source>The model item.</source>
          <target state="translated">O item de modelo.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.Model.ModelItemExtensions.GetEditingContext(System.Activities.Presentation.Model.ModelItem)">
          <source>Retrieves the editing context of the specified model item.</source>
          <target state="translated">Recupera o contexto de edição do item de modelo especificado.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.Model.ModelItemExtensions.GetModelPath(System.Activities.Presentation.Model.ModelItem)">
          <source>The model item.</source>
          <target state="translated">O item de modelo.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.Model.ModelItemExtensions.GetModelPath(System.Activities.Presentation.Model.ModelItem)">
          <source>Retrieves the path of the specified model item.</source>
          <target state="translated">Recupera o caminho do item de modelo especificado.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.Model.ModelItemExtensions.IsParentOf(System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem)">
          <source>The parent designer item to check.</source>
          <target state="translated">O item de designer pai a verificar.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.Model.ModelItemExtensions.IsParentOf(System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem)">
          <source>The child designer item to check.</source>
          <target state="translated">O item de designer filho a verificar.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.Model.ModelItemExtensions.IsParentOf(System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem)">
          <source>Returns a value that indicates whether the first specified designer item is a parent of the second specified designer item.</source>
          <target state="translated">Retorna um valor que indica se o primeiro item de designer especificado é um pai do segundo item designer especificado.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableArray.BinarySearch``1(System.Collections.Immutable.ImmutableArray{``0},``0)">
          <source>The type of element stored in the array.</source>
          <target state="translated">O tipo de elemento armazenado na matriz.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableArray.BinarySearch``1(System.Collections.Immutable.ImmutableArray{``0},``0)">
          <source>The sorted array to search.</source>
          <target state="translated">A matriz classificada para pesquisar.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableArray.BinarySearch``1(System.Collections.Immutable.ImmutableArray{``0},``0)">
          <source>The object to search for.</source>
          <target state="translated">O objeto a ser procurado.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableArray.BinarySearch``1(System.Collections.Immutable.ImmutableArray{``0},``0)">
          <source>Searches the sorted immutable array for a specified element using the default comparer and returns the zero-based index of the element, if it’s found.</source>
          <target state="translated">Pesquisa um elemento especificado na matriz classificada imutável usando o comparador padrão e retorna o índice baseado em zero do elemento, se ele for encontrado.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableArray.BinarySearch``1(System.Collections.Immutable.ImmutableArray{``0},``0,System.Collections.Generic.IComparer{``0})">
          <source>The type of element stored in the array.</source>
          <target state="translated">O tipo de elemento armazenado na matriz.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableArray.BinarySearch``1(System.Collections.Immutable.ImmutableArray{``0},``0,System.Collections.Generic.IComparer{``0})">
          <source>The sorted array to search.</source>
          <target state="translated">A matriz classificada para pesquisar.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableArray.BinarySearch``1(System.Collections.Immutable.ImmutableArray{``0},``0,System.Collections.Generic.IComparer{``0})">
          <source>The object to search for.</source>
          <target state="translated">O objeto a ser procurado.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableArray.BinarySearch``1(System.Collections.Immutable.ImmutableArray{``0},``0,System.Collections.Generic.IComparer{``0})">
          <source>The comparer implementation to use when comparing elements, or null to use the default comparer.</source>
          <target state="translated">A implementação de comparador a ser usada na comparação de elementos ou nulo para usar o comparador padrão.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableArray.BinarySearch``1(System.Collections.Immutable.ImmutableArray{``0},``0,System.Collections.Generic.IComparer{``0})">
          <source>Searches a sorted immutable array for a specified element and returns the zero-based index of the element, if it’s found.</source>
          <target state="translated">Pesquisa um elemento especificado em uma matriz classificada imutável e retorna o índice baseado em zero do elemento, se ele for encontrado.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableArray.BinarySearch``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32,System.Int32,``0)">
          <source>The type of element stored in the array.</source>
          <target state="translated">O tipo de elemento armazenado na matriz.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableArray.BinarySearch``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32,System.Int32,``0)">
          <source>The sorted array to search.</source>
          <target state="translated">A matriz classificada para pesquisar.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableArray.BinarySearch``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32,System.Int32,``0)">
          <source>The starting index of the range to search.</source>
          <target state="translated">O índice inicial do intervalo a ser procurado.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableArray.BinarySearch``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32,System.Int32,``0)">
          <source>The length of the range to search.</source>
          <target state="translated">O tamanho do intervalo a ser procurado.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableArray.BinarySearch``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32,System.Int32,``0)">
          <source>The object to search for.</source>
          <target state="translated">O objeto a ser procurado.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableArray.BinarySearch``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32,System.Int32,``0)">
          <source>Searches a sorted immutable array for a specified element and returns the zero-based index of the element, if it’s found.</source>
          <target state="translated">Pesquisa um elemento especificado em uma matriz classificada imutável e retorna o índice baseado em zero do elemento, se ele for encontrado.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableArray.BinarySearch``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32,System.Int32,``0,System.Collections.Generic.IComparer{``0})">
          <source>The type of element stored in the array.</source>
          <target state="translated">O tipo de elemento armazenado na matriz.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableArray.BinarySearch``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32,System.Int32,``0,System.Collections.Generic.IComparer{``0})">
          <source>The sorted array to search.</source>
          <target state="translated">A matriz classificada para pesquisar.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableArray.BinarySearch``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32,System.Int32,``0,System.Collections.Generic.IComparer{``0})">
          <source>The starting index of the range to search.</source>
          <target state="translated">O índice inicial do intervalo a ser procurado.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableArray.BinarySearch``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32,System.Int32,``0,System.Collections.Generic.IComparer{``0})">
          <source>The length of the range to search.</source>
          <target state="translated">O tamanho do intervalo a ser procurado.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableArray.BinarySearch``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32,System.Int32,``0,System.Collections.Generic.IComparer{``0})">
          <source>The object to search for.</source>
          <target state="translated">O objeto a ser procurado.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableArray.BinarySearch``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32,System.Int32,``0,System.Collections.Generic.IComparer{``0})">
          <source>The comparer to use when comparing elements for equality or <ph id="ph1">&lt;see langword="null" /&gt;</ph> to use the default comparer.</source>
          <target state="translated">O comparador a ser usado na comparação da igualdade de elementos ou <ph id="ph1">&lt;see langword="null" /&gt;</ph> para usar o comparador padrão.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableArray.BinarySearch``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32,System.Int32,``0,System.Collections.Generic.IComparer{``0})">
          <source>Searches a sorted immutable array for a specified element and returns the zero-based index of the element.</source>
          <target state="translated">Pesquisa um elemento especificado em uma matriz classificada imutável e retorna o índice baseado em zero do elemento.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableArray.ToImmutableArray``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The type of elements contained in <bpt id="p1">&lt;c&gt;</bpt>items<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo de elementos contidos na <bpt id="p1">&lt;c&gt;</bpt>itens<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableArray.ToImmutableArray``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The collection of objects to copy to the immutable array.</source>
          <target state="translated">A coleção de objetos a serem copiados na matriz imutável.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableArray.ToImmutableArray``1(System.Collections.Generic.IEnumerable{``0})">
          <source>Creates an immutable array from the specified collection.</source>
          <target state="translated">Cria uma matriz imutável com base na coleção especificada.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableDictionary.Contains``2(System.Collections.Immutable.IImmutableDictionary{``0,``1},``0,``1)">
          <source>The type of the keys in the immutable dictionary.</source>
          <target state="translated">O tipo das chaves no dicionário imutável.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableDictionary.Contains``2(System.Collections.Immutable.IImmutableDictionary{``0,``1},``0,``1)">
          <source>The type of the values in the immutable dictionary.</source>
          <target state="translated">O tipo dos valores no dicionário imutável.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary.Contains``2(System.Collections.Immutable.IImmutableDictionary{``0,``1},``0,``1)">
          <source>The immutable dictionary to search.</source>
          <target state="translated">O dicionário imutável a ser pesquisado.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary.Contains``2(System.Collections.Immutable.IImmutableDictionary{``0,``1},``0,``1)">
          <source>The key to locate in the immutable dictionary.</source>
          <target state="translated">A chave a ser localizada no dicionário imutável.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary.Contains``2(System.Collections.Immutable.IImmutableDictionary{``0,``1},``0,``1)">
          <source>The value to locate on the specified key, if the key is found.</source>
          <target state="translated">O valor a ser localizado na chave especificada, se a chave for encontrada.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary.Contains``2(System.Collections.Immutable.IImmutableDictionary{``0,``1},``0,``1)">
          <source>Determines whether the specified immutable dictionary contains the specified key/value pair.</source>
          <target state="translated">Determina se o dicionário imutável especificado contém o par chave/valor especificado.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableDictionary.GetValueOrDefault``2(System.Collections.Immutable.IImmutableDictionary{``0,``1},``0)">
          <source>The type of the key.</source>
          <target state="translated">Tipo da chave.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableDictionary.GetValueOrDefault``2(System.Collections.Immutable.IImmutableDictionary{``0,``1},``0)">
          <source>The type of the value.</source>
          <target state="translated">Tipo do valor.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary.GetValueOrDefault``2(System.Collections.Immutable.IImmutableDictionary{``0,``1},``0)">
          <source>The dictionary to retrieve the value from.</source>
          <target state="translated">O dicionário do qual recuperar o valor.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary.GetValueOrDefault``2(System.Collections.Immutable.IImmutableDictionary{``0,``1},``0)">
          <source>The key to search for.</source>
          <target state="translated">A chave a ser pesquisada.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary.GetValueOrDefault``2(System.Collections.Immutable.IImmutableDictionary{``0,``1},``0)">
          <source>Gets the value for a given key if a matching key exists in the dictionary.</source>
          <target state="translated">Obtém o valor de uma determinada chave, se uma chave correspondente existir no dicionário.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableDictionary.GetValueOrDefault``2(System.Collections.Immutable.IImmutableDictionary{``0,``1},``0,``1)">
          <source>The type of the key.</source>
          <target state="translated">Tipo da chave.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableDictionary.GetValueOrDefault``2(System.Collections.Immutable.IImmutableDictionary{``0,``1},``0,``1)">
          <source>The type of the value.</source>
          <target state="translated">Tipo do valor.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary.GetValueOrDefault``2(System.Collections.Immutable.IImmutableDictionary{``0,``1},``0,``1)">
          <source>The dictionary to retrieve the value from.</source>
          <target state="translated">O dicionário do qual recuperar o valor.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary.GetValueOrDefault``2(System.Collections.Immutable.IImmutableDictionary{``0,``1},``0,``1)">
          <source>The key to search for.</source>
          <target state="translated">A chave a ser pesquisada.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary.GetValueOrDefault``2(System.Collections.Immutable.IImmutableDictionary{``0,``1},``0,``1)">
          <source>The default value to return if no matching key is found in the dictionary.</source>
          <target state="translated">O valor padrão a ser retornado se nenhuma chave correspondente for encontrada no dicionário.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary.GetValueOrDefault``2(System.Collections.Immutable.IImmutableDictionary{``0,``1},``0,``1)">
          <source>Gets the value for a given key if a matching key exists in the dictionary.</source>
          <target state="translated">Obtém o valor de uma determinada chave, se uma chave correspondente existir no dicionário.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
          <source>The type of element in the source collection.</source>
          <target state="translated">O tipo de elemento na coleção de origem.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
          <source>The type of key in the resulting immutable dictionary.</source>
          <target state="translated">O tipo de chave no dicionário imutável resultante.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
          <source>The source collection used to generate the immutable dictionary.</source>
          <target state="translated">A coleção de origem usada para gerar o dicionário imutável.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
          <source>The function used to transform keys for the immutable dictionary.</source>
          <target state="translated">A função usada para transformar chaves para o dicionário imutável.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
          <source>Constructs an immutable dictionary from an existing collection of elements, applying a transformation function to the source keys.</source>
          <target state="translated">Constrói um dicionário imutável de uma coleção existente de elementos, aplicando uma função de transformação nas chaves de origem.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of element in the source collection.</source>
          <target state="translated">O tipo de elemento na coleção de origem.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of key in the resulting immutable dictionary.</source>
          <target state="translated">O tipo de chave no dicionário imutável resultante.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The source collection used to generate the immutable dictionary.</source>
          <target state="translated">A coleção de origem usada para gerar o dicionário imutável.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The function used to transform keys for the immutable dictionary.</source>
          <target state="translated">A função usada para transformar chaves para o dicionário imutável.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The key comparer to use for the dictionary.</source>
          <target state="translated">O comparador de chave a ser usado para o dicionário.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>Constructs an immutable dictionary based on some transformation of a sequence.</source>
          <target state="translated">Constrói um dicionário imutável com base em alguma transformação de uma sequência.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})">
          <source>The type of the keys in the dictionary.</source>
          <target state="translated">O tipo das chaves no dicionário.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})">
          <source>The type of the values in the dictionary.</source>
          <target state="translated">O tipo dos valores no dicionário.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})">
          <source>The sequence of key/value pairs to enumerate.</source>
          <target state="translated">A sequência de pares chave/valor a ser enumerada.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})">
          <source>Enumerates a sequence of key/value pairs and produces an immutable dictionary of its contents.</source>
          <target state="translated">Enumera uma sequência de pares chave/valor e produz um dicionário imutável de seu conteúdo.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The type of the keys in the dictionary.</source>
          <target state="translated">O tipo das chaves no dicionário.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The type of the values in the dictionary.</source>
          <target state="translated">O tipo dos valores no dicionário.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The sequence of key/value pairs to enumerate.</source>
          <target state="translated">A sequência de pares chave/valor a ser enumerada.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The key comparer to use when building the immutable dictionary.</source>
          <target state="translated">O comparador de chave a ser usado ao criar o dicionário imutável.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0})">
          <source>Enumerates a sequence of key/value pairs and produces an immutable dictionary of its contents by using the specified key comparer.</source>
          <target state="translated">Enumera uma sequência de pares chave/valor e produz um dicionário imutável de seu conteúdo, usando o comparador de chave especificado.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the keys in the dictionary.</source>
          <target state="translated">O tipo das chaves no dicionário.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the values in the dictionary.</source>
          <target state="translated">O tipo dos valores no dicionário.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The sequence of key/value pairs to enumerate.</source>
          <target state="translated">A sequência de pares chave/valor a ser enumerada.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The key comparer to use when building the immutable dictionary.</source>
          <target state="translated">O comparador de chave a ser usado ao criar o dicionário imutável.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The value comparer to use for the immutable dictionary.</source>
          <target state="translated">O comparador de valor a ser usado para o dicionário imutável.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1})">
          <source>Enumerates a sequence of key/value pairs and produces an immutable dictionary of its contents by using the specified key and value comparers.</source>
          <target state="translated">Enumera uma sequência de pares chave/valor e produz um dicionário imutável de seu conteúdo, usando os comparadores de chave e valor especificados.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>The type of the elements in the sequence.</source>
          <target state="translated">O tipo dos elementos na sequência.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>The type of the keys in the resulting dictionary.</source>
          <target state="translated">O tipo das chaves no dicionário resultante.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>The type of the values in the resulting dictionary.</source>
          <target state="translated">O tipo dos valores no dicionário resultante.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>The sequence to enumerate to generate the dictionary.</source>
          <target state="translated">A sequência a ser enumerada para gerar o dicionário.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>The function that will produce the key for the dictionary from each sequence element.</source>
          <target state="translated">A função que produzirá a chave para o dicionário de cada elemento de sequência.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>The function that will produce the value for the dictionary from each sequence element.</source>
          <target state="translated">A função que produzirá o valor para o dicionário de cada elemento de sequência.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>Enumerates and transforms a sequence, and produces an immutable dictionary of its contents.</source>
          <target state="translated">Enumera e transforma uma sequência e produz um dicionário imutável com base em seu conteúdo.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the elements in the sequence.</source>
          <target state="translated">O tipo dos elementos na sequência.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the keys in the resulting dictionary.</source>
          <target state="translated">O tipo das chaves no dicionário resultante.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the values in the resulting dictionary.</source>
          <target state="translated">O tipo dos valores no dicionário resultante.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The sequence to enumerate to generate the dictionary.</source>
          <target state="translated">A sequência a ser enumerada para gerar o dicionário.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The function that will produce the key for the dictionary from each sequence element.</source>
          <target state="translated">A função que produzirá a chave para o dicionário de cada elemento de sequência.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The function that will produce the value for the dictionary from each sequence element.</source>
          <target state="translated">A função que produzirá o valor para o dicionário de cada elemento de sequência.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The key comparer to use for the dictionary.</source>
          <target state="translated">O comparador de chave a ser usado para o dicionário.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>Enumerates and transforms a sequence, and produces an immutable dictionary of its contents by using the specified key comparer.</source>
          <target state="translated">Enumera e transforma uma sequência e produz um dicionário imutável com base em seu conteúdo usando o comparador de chave especificado.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The type of the elements in the sequence.</source>
          <target state="translated">O tipo dos elementos na sequência.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The type of the keys in the resulting dictionary.</source>
          <target state="translated">O tipo das chaves no dicionário resultante.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The type of the values in the resulting dictionary.</source>
          <target state="translated">O tipo dos valores no dicionário resultante.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The sequence to enumerate to generate the dictionary.</source>
          <target state="translated">A sequência a ser enumerada para gerar o dicionário.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The function that will produce the key for the dictionary from each sequence element.</source>
          <target state="translated">A função que produzirá a chave para o dicionário de cada elemento de sequência.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The function that will produce the value for the dictionary from each sequence element.</source>
          <target state="translated">A função que produzirá o valor para o dicionário de cada elemento de sequência.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The key comparer to use for the dictionary.</source>
          <target state="translated">O comparador de chave a ser usado para o dicionário.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The value comparer to use for the dictionary.</source>
          <target state="translated">O comparador de valor a ser usado para o dicionário.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEqualityComparer{``2})">
          <source>Enumerates and transforms a sequence, and produces an immutable dictionary of its contents by using the specified key and value comparers.</source>
          <target state="translated">Enumera e transforma uma sequência e produz um dicionário imutável com base em seu conteúdo usando os comparadores de chave e valor especificados.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The type of the elements in the sequence.</source>
          <target state="translated">O tipo dos elementos na sequência.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The sequence to enumerate.</source>
          <target state="translated">A sequência a ser enumerada.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0})">
          <source>Enumerates a sequence and produces an immutable hash set of its contents.</source>
          <target state="translated">Enumera uma sequência e produz um conjunto de hash imutável de seu conteúdo.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The type of the elements in the sequence.</source>
          <target state="translated">O tipo dos elementos na sequência.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The sequence to enumerate.</source>
          <target state="translated">A sequência a ser enumerada.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The object to use for comparing objects in the set for equality.</source>
          <target state="translated">O objeto a ser usado para a comparação dos objetos no conjunto quanto à igualdade.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>Enumerates a sequence, produces an immutable hash set of its contents, and uses the specified equality comparer for the set type.</source>
          <target state="translated">Enumera uma sequência, produz um conjunto de hash imutável de seu conteúdo e usa o comparador de igualdade especificado para o tipo de conjunto.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0)">
          <source>The type of items in the list.</source>
          <target state="translated">O tipo de itens na lista.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0)">
          <source>The list to search.</source>
          <target state="translated">A lista a ser pesquisada.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0)">
          <source>The object to locate in the list.</source>
          <target state="translated">O objeto a ser localizado na lista.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0)">
          <source>The value can be null for reference types.</source>
          <target state="translated">O valor pode ser nulo para tipos de referência.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0)">
          <source>Searches for the specified object and returns the zero-based index of the first occurrence within the list.</source>
          <target state="translated">Pesquisa o objeto especificado e retorna o índice baseado em zero da primeira ocorrência dentro da lista.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Collections.Generic.IEqualityComparer{``0})">
          <source>The type of items in the list.</source>
          <target state="translated">O tipo de itens na lista.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Collections.Generic.IEqualityComparer{``0})">
          <source>The list to search.</source>
          <target state="translated">A lista a ser pesquisada.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Collections.Generic.IEqualityComparer{``0})">
          <source>The object to locate in the Immutable list.</source>
          <target state="translated">O objeto a ser localizado na lista imutável.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Collections.Generic.IEqualityComparer{``0})">
          <source>The value can be null for reference types.</source>
          <target state="translated">O valor pode ser nulo para tipos de referência.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Collections.Generic.IEqualityComparer{``0})">
          <source>The equality comparer to use in the search.</source>
          <target state="translated">O comparador de igualdade a ser usado na pesquisa.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Collections.Generic.IEqualityComparer{``0})">
          <source>Searches for the specified object and returns the zero-based index of the first occurrence within the list.</source>
          <target state="translated">Pesquisa o objeto especificado e retorna o índice baseado em zero da primeira ocorrência dentro da lista.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32)">
          <source>The type of items in the list.</source>
          <target state="translated">O tipo de itens na lista.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32)">
          <source>The list to search.</source>
          <target state="translated">A lista a ser pesquisada.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32)">
          <source>The object to locate in the Immutable list.</source>
          <target state="translated">O objeto a ser localizado na lista imutável.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32)">
          <source>The value can be null for reference types.</source>
          <target state="translated">O valor pode ser nulo para tipos de referência.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32)">
          <source>The zero-based starting index of the search.</source>
          <target state="translated">O índice inicial com base em zero da pesquisa.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32)">
          <source>0 (zero) is valid in an empty list.</source>
          <target state="translated">0 (zero) é válido em uma lista vazia.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32)">
          <source>Searches for the specified object and returns the zero-based index of the first occurrence within the range of elements in the immutable list that extends from the specified index to the last element.</source>
          <target state="translated">Procura o objeto especificado e retorna o índice baseado em zero da primeira ocorrência dentro do intervalo de elementos na lista imutável que se estende do índice especificado até o último elemento.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32,System.Int32)">
          <source>The type of items in the list.</source>
          <target state="translated">O tipo de itens na lista.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32,System.Int32)">
          <source>The list to search.</source>
          <target state="translated">A lista a ser pesquisada.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32,System.Int32)">
          <source>The object to locate in the Immutable list.</source>
          <target state="translated">O objeto a ser localizado na lista imutável.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32,System.Int32)">
          <source>The value can be null for reference types.</source>
          <target state="translated">O valor pode ser nulo para tipos de referência.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32,System.Int32)">
          <source>The zero-based starting index of the search.</source>
          <target state="translated">O índice inicial com base em zero da pesquisa.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32,System.Int32)">
          <source>0 (zero) is valid in an empty list.</source>
          <target state="translated">0 (zero) é válido em uma lista vazia.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32,System.Int32)">
          <source>The number of elements in the section to search.</source>
          <target state="translated">O número de elementos na seção a ser pesquisada.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32,System.Int32)">
          <source>Searches for the specified object and returns the zero-based index of the first occurrence within the range of elements in the immutable list that extends from the specified index to the last element.</source>
          <target state="translated">Procura o objeto especificado e retorna o índice baseado em zero da primeira ocorrência dentro do intervalo de elementos na lista imutável que se estende do índice especificado até o último elemento.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0)">
          <source>The type of items in the list.</source>
          <target state="translated">O tipo de itens na lista.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0)">
          <source>The list to search.</source>
          <target state="translated">A lista a ser pesquisada.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0)">
          <source>The object to locate in the Immutable list.</source>
          <target state="translated">O objeto a ser localizado na lista imutável.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0)">
          <source>The value can be null for reference types.</source>
          <target state="translated">O valor pode ser nulo para tipos de referência.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0)">
          <source>Searches for the specified object and returns the zero-based index of the last occurrence within the entire immutable list.</source>
          <target state="translated">Pesquisa o objeto especificado e retorna o índice baseado em zero da última ocorrência dentro de toda a lista imutável.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Collections.Generic.IEqualityComparer{``0})">
          <source>The type of items in the list.</source>
          <target state="translated">O tipo de itens na lista.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Collections.Generic.IEqualityComparer{``0})">
          <source>The list to search.</source>
          <target state="translated">A lista a ser pesquisada.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Collections.Generic.IEqualityComparer{``0})">
          <source>The object to locate in the Immutable list.</source>
          <target state="translated">O objeto a ser localizado na lista imutável.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Collections.Generic.IEqualityComparer{``0})">
          <source>The value can be null for reference types.</source>
          <target state="translated">O valor pode ser nulo para tipos de referência.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Collections.Generic.IEqualityComparer{``0})">
          <source>The equality comparer to use in the search.</source>
          <target state="translated">O comparador de igualdade a ser usado na pesquisa.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Collections.Generic.IEqualityComparer{``0})">
          <source>Searches for the specified object and returns the zero-based index of the last occurrence within the entire immutable list.</source>
          <target state="translated">Pesquisa o objeto especificado e retorna o índice baseado em zero da última ocorrência dentro de toda a lista imutável.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32)">
          <source>The type of items in the list.</source>
          <target state="translated">O tipo de itens na lista.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32)">
          <source>The list to search.</source>
          <target state="translated">A lista a ser pesquisada.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32)">
          <source>The object to locate in the Immutable list.</source>
          <target state="translated">O objeto a ser localizado na lista imutável.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32)">
          <source>The value can be null for reference types.</source>
          <target state="translated">O valor pode ser nulo para tipos de referência.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32)">
          <source>The zero-based starting index of the backward search.</source>
          <target state="translated">O índice inicial com base em zero da pesquisa inversa.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32)">
          <source>Searches for the specified object and returns the zero-based index of the last occurrence within the range of elements in the immutable list that extends from the first element to the specified index.</source>
          <target state="translated">Procura o objeto especificado e retorna o índice baseado em zero da última ocorrência dentro do intervalo de elementos na lista imutável que se estende do primeiro elemento ao índice especificado.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32,System.Int32)">
          <source>The type of items in the list.</source>
          <target state="translated">O tipo de itens na lista.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32,System.Int32)">
          <source>The list to search.</source>
          <target state="translated">A lista a ser pesquisada.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32,System.Int32)">
          <source>The object to locate in the Immutable list.</source>
          <target state="translated">O objeto a ser localizado na lista imutável.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32,System.Int32)">
          <source>The value can be null for reference types.</source>
          <target state="translated">O valor pode ser nulo para tipos de referência.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32,System.Int32)">
          <source>The zero-based starting index of the backward search.</source>
          <target state="translated">O índice inicial com base em zero da pesquisa inversa.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32,System.Int32)">
          <source>The number of elements in the section to search.</source>
          <target state="translated">O número de elementos na seção a ser pesquisada.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32,System.Int32)">
          <source>Searches for the specified object and returns the zero-based index of the last occurrence within the range of elements in the immutable list that extends from the first element to the specified index.</source>
          <target state="translated">Procura o objeto especificado e retorna o índice baseado em zero da última ocorrência dentro do intervalo de elementos na lista imutável que se estende do primeiro elemento ao índice especificado.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList.Remove``1(System.Collections.Immutable.IImmutableList{``0},``0)">
          <source>The type of items in the list.</source>
          <target state="translated">O tipo de itens na lista.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.Remove``1(System.Collections.Immutable.IImmutableList{``0},``0)">
          <source>The list to search.</source>
          <target state="translated">A lista a ser pesquisada.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.Remove``1(System.Collections.Immutable.IImmutableList{``0},``0)">
          <source>The value to remove.</source>
          <target state="translated">O valor a ser removido.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.Remove``1(System.Collections.Immutable.IImmutableList{``0},``0)">
          <source>Removes the specified value from this list.</source>
          <target state="translated">Remove o valor especificado dessa lista.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList.RemoveRange``1(System.Collections.Immutable.IImmutableList{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>The type of items in the list.</source>
          <target state="translated">O tipo de itens na lista.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.RemoveRange``1(System.Collections.Immutable.IImmutableList{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>The list to search.</source>
          <target state="translated">A lista a ser pesquisada.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.RemoveRange``1(System.Collections.Immutable.IImmutableList{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>The items to remove if matches are found in this list.</source>
          <target state="translated">Os itens a serem removidos se correspondências forem encontradas nessa lista.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.RemoveRange``1(System.Collections.Immutable.IImmutableList{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>Removes the specified values from this list.</source>
          <target state="translated">Remove os valores especificados dessa lista.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList.Replace``1(System.Collections.Immutable.IImmutableList{``0},``0,``0)">
          <source>The type of items in the list.</source>
          <target state="translated">O tipo de itens na lista.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.Replace``1(System.Collections.Immutable.IImmutableList{``0},``0,``0)">
          <source>The list to search.</source>
          <target state="translated">A lista a ser pesquisada.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.Replace``1(System.Collections.Immutable.IImmutableList{``0},``0,``0)">
          <source>The element to replace.</source>
          <target state="translated">O elemento a ser substituído.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.Replace``1(System.Collections.Immutable.IImmutableList{``0},``0,``0)">
          <source>The element to replace the old element with.</source>
          <target state="translated">O elemento pelo qual substituir o elemento antigo.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.Replace``1(System.Collections.Immutable.IImmutableList{``0},``0,``0)">
          <source>Replaces the first equal element in the list with the specified element.</source>
          <target state="translated">Substitui o primeiro elemento igual na lista pelo elemento especificado.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList.ToImmutableList``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The type of the elements in the sequence.</source>
          <target state="translated">O tipo dos elementos na sequência.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.ToImmutableList``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The sequence to enumerate.</source>
          <target state="translated">A sequência a ser enumerada.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.ToImmutableList``1(System.Collections.Generic.IEnumerable{``0})">
          <source>Enumerates a sequence and produces an immutable list of its contents.</source>
          <target state="translated">Enumera uma sequência e produz uma lista imutável de seu conteúdo.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableQueue.Dequeue``1(System.Collections.Immutable.IImmutableQueue{``0},``0@)">
          <source>The type of elements in the immutable queue.</source>
          <target state="translated">O tipo dos elementos na fila imutável.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableQueue.Dequeue``1(System.Collections.Immutable.IImmutableQueue{``0},``0@)">
          <source>The queue to remove the item from.</source>
          <target state="translated">A fila da qual remover o item.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableQueue.Dequeue``1(System.Collections.Immutable.IImmutableQueue{``0},``0@)">
          <source>When this method returns, contains the item from the beginning of the queue.</source>
          <target state="translated">Quando este método retorna, ele contém o item do início da fila.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableQueue.Dequeue``1(System.Collections.Immutable.IImmutableQueue{``0},``0@)">
          <source>Removes the item at the beginning of the immutable queue, and returns the new queue.</source>
          <target state="translated">Remove o item no início da fila imutável e retorna a nova fila.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})">
          <source>The type of the keys in the dictionary.</source>
          <target state="translated">O tipo das chaves no dicionário.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})">
          <source>The type of the values in the dictionary.</source>
          <target state="translated">O tipo dos valores no dicionário.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})">
          <source>The sequence of key/value pairs to enumerate.</source>
          <target state="translated">A sequência de pares chave/valor a ser enumerada.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})">
          <source>Enumerates a sequence of key/value pairs and produces an immutable sorted dictionary of its contents.</source>
          <target state="translated">Enumera uma sequência de pares chave/valor e produz um dicionário classificado imutável de seu conteúdo.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0})">
          <source>The type of the keys in the dictionary.</source>
          <target state="translated">O tipo das chaves no dicionário.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0})">
          <source>The type of the values in the dictionary.</source>
          <target state="translated">O tipo dos valores no dicionário.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0})">
          <source>The sequence of key/value pairs to enumerate.</source>
          <target state="translated">A sequência de pares chave/valor a ser enumerada.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0})">
          <source>The key comparer to use when building the immutable dictionary.</source>
          <target state="translated">O comparador de chave a ser usado ao criar o dicionário imutável.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0})">
          <source>Enumerates a sequence of key/value pairs and produces an immutable dictionary of its contents by using the specified key comparer.</source>
          <target state="translated">Enumera uma sequência de pares chave/valor e produz um dicionário imutável de seu conteúdo, usando o comparador de chave especificado.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the keys in the dictionary.</source>
          <target state="translated">O tipo das chaves no dicionário.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the values in the dictionary.</source>
          <target state="translated">O tipo dos valores no dicionário.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The sequence of key/value pairs to enumerate.</source>
          <target state="translated">A sequência de pares chave/valor a ser enumerada.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The key comparer to use when building the immutable dictionary.</source>
          <target state="translated">O comparador de chave a ser usado ao criar o dicionário imutável.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The value comparer to use for the immutable dictionary.</source>
          <target state="translated">O comparador de valor a ser usado para o dicionário imutável.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEqualityComparer{``1})">
          <source>Enumerates a sequence of key/value pairs and produces an immutable sorted dictionary of its contents by using the specified key and value comparers.</source>
          <target state="translated">Enumera uma sequência de pares chave/valor e produz um dicionário classificado imutável de seu conteúdo, usando os comparadores de chave e valor especificados.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>The type of the elements in the sequence.</source>
          <target state="translated">O tipo dos elementos na sequência.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>The type of the keys in the resulting dictionary.</source>
          <target state="translated">O tipo das chaves no dicionário resultante.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>The type of the values in the resulting dictionary.</source>
          <target state="translated">O tipo dos valores no dicionário resultante.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>The sequence to enumerate to generate the dictionary.</source>
          <target state="translated">A sequência a ser enumerada para gerar o dicionário.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>The function that will produce the key for the dictionary from each sequence element.</source>
          <target state="translated">A função que produzirá a chave para o dicionário de cada elemento de sequência.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>The function that will produce the value for the dictionary from each sequence element.</source>
          <target state="translated">A função que produzirá o valor para o dicionário de cada elemento de sequência.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>Enumerates and transforms a sequence, and produces an immutable sorted dictionary of its contents.</source>
          <target state="translated">Enumera e transforma uma sequência e produz um dicionário classificado imutável com base em seu conteúdo.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1})">
          <source>The type of the elements in the sequence.</source>
          <target state="translated">O tipo dos elementos na sequência.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1})">
          <source>The type of the keys in the resulting dictionary.</source>
          <target state="translated">O tipo das chaves no dicionário resultante.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1})">
          <source>The type of the values in the resulting dictionary.</source>
          <target state="translated">O tipo dos valores no dicionário resultante.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1})">
          <source>The sequence to enumerate to generate the dictionary.</source>
          <target state="translated">A sequência a ser enumerada para gerar o dicionário.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1})">
          <source>The function that will produce the key for the dictionary from each sequence element.</source>
          <target state="translated">A função que produzirá a chave para o dicionário de cada elemento de sequência.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1})">
          <source>The function that will produce the value for the dictionary from each sequence element.</source>
          <target state="translated">A função que produzirá o valor para o dicionário de cada elemento de sequência.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1})">
          <source>The key comparer to use for the dictionary.</source>
          <target state="translated">O comparador de chave a ser usado para o dicionário.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1})">
          <source>Enumerates and transforms a sequence, and produces an immutable sorted dictionary of its contents by using the specified key comparer.</source>
          <target state="translated">Enumera e transforma uma sequência e produz um dicionário classificado imutável com base em seu conteúdo usando o comparador de chave especificado.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The type of the elements in the sequence.</source>
          <target state="translated">O tipo dos elementos na sequência.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The type of the keys in the resulting dictionary.</source>
          <target state="translated">O tipo das chaves no dicionário resultante.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The type of the values in the resulting dictionary.</source>
          <target state="translated">O tipo dos valores no dicionário resultante.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The sequence to enumerate to generate the dictionary.</source>
          <target state="translated">A sequência a ser enumerada para gerar o dicionário.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The function that will produce the key for the dictionary from each sequence element.</source>
          <target state="translated">A função que produzirá a chave para o dicionário de cada elemento de sequência.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The function that will produce the value for the dictionary from each sequence element.</source>
          <target state="translated">A função que produzirá o valor para o dicionário de cada elemento de sequência.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The key comparer to use for the dictionary.</source>
          <target state="translated">O comparador de chave a ser usado para o dicionário.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The value comparer to use for the dictionary.</source>
          <target state="translated">O comparador de valor a ser usado para o dicionário.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1},System.Collections.Generic.IEqualityComparer{``2})">
          <source>Enumerates and transforms a sequence, and produces an immutable sorted dictionary of its contents by using the specified key and value comparers.</source>
          <target state="translated">Enumera e transforma uma sequência e produz um dicionário classificado imutável com base em seu conteúdo usando os comparadores de chave e valor especificados.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The type of the elements in the sequence.</source>
          <target state="translated">O tipo dos elementos na sequência.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The sequence to enumerate.</source>
          <target state="translated">A sequência a ser enumerada.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0})">
          <source>Enumerates a sequence and produces an immutable sorted set of its contents.</source>
          <target state="translated">Enumera uma sequência e produz um conjunto classificado imutável de seu conteúdo.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IComparer{``0})">
          <source>The type of the elements in the sequence.</source>
          <target state="translated">O tipo dos elementos na sequência.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IComparer{``0})">
          <source>The sequence to enumerate.</source>
          <target state="translated">A sequência a ser enumerada.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IComparer{``0})">
          <source>The comparer to use for initializing and adding members to the sorted set.</source>
          <target state="translated">O comparador a ser usado para inicializar e adicionar membros ao conjunto classificado.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IComparer{``0})">
          <source>Enumerates a sequence, produces an immutable sorted set of its contents, and uses the specified comparer.</source>
          <target state="translated">Enumera uma sequência, produz um conjunto classificado imutável de seu conteúdo e usa o comparador especificado.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableStack.Pop``1(System.Collections.Immutable.IImmutableStack{``0},``0@)">
          <source>The type of items contained in the stack.</source>
          <target state="translated">O tipo de itens contidos na pilha.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableStack.Pop``1(System.Collections.Immutable.IImmutableStack{``0},``0@)">
          <source>The stack to modify.</source>
          <target state="translated">A pilha a ser modificada.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableStack.Pop``1(System.Collections.Immutable.IImmutableStack{``0},``0@)">
          <source>The item to remove from the stack.</source>
          <target state="translated">O item a ser removido da pilha.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableStack.Pop``1(System.Collections.Immutable.IImmutableStack{``0},``0@)">
          <source>Removes the specified item from an immutable stack.</source>
          <target state="translated">Remove o item especificado de uma pilha imutável.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.AttributedModelServices.AddExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionBatch,``0)">
          <source>The type of the new part.</source>
          <target state="translated">O tipo da nova parte.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.AttributedModelServices.AddExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionBatch,``0)">
          <source>The batch to add to.</source>
          <target state="translated">O lote ao qual adicionar.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.AttributedModelServices.AddExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionBatch,``0)">
          <source>The value to add.</source>
          <target state="translated">O valor a ser adicionado.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.AttributedModelServices.AddExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionBatch,``0)">
          <source>Creates a part from the specified value and adds it to the specified batch.</source>
          <target state="translated">Cria uma parte do valor especificado e a adiciona ao lote especificado.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.AttributedModelServices.AddExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionBatch,System.String,``0)">
          <source>The type of the new part.</source>
          <target state="translated">O tipo da nova parte.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.AttributedModelServices.AddExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionBatch,System.String,``0)">
          <source>The batch to add to.</source>
          <target state="translated">O lote ao qual adicionar.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.AttributedModelServices.AddExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionBatch,System.String,``0)">
          <source>The contract name of the export.</source>
          <target state="translated">O nome do contrato da exportação.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.AttributedModelServices.AddExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionBatch,System.String,``0)">
          <source>The value to add.</source>
          <target state="translated">O valor a ser adicionado.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.AttributedModelServices.AddExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionBatch,System.String,``0)">
          <source>Creates a part from the specified value and adds it to the specified batch with the specified contract name.</source>
          <target state="translated">Cria uma parte do valor especificado e a adiciona ao lote especificado com o nome de contrato especificado.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.AttributedModelServices.AddPart(System.ComponentModel.Composition.Hosting.CompositionBatch,System.Object)">
          <source>The batch to add to.</source>
          <target state="translated">O lote ao qual adicionar.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.AttributedModelServices.AddPart(System.ComponentModel.Composition.Hosting.CompositionBatch,System.Object)">
          <source>The object to add.</source>
          <target state="translated">O objeto a adicionar.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.AttributedModelServices.AddPart(System.ComponentModel.Composition.Hosting.CompositionBatch,System.Object)">
          <source>Creates a composable part from the specified attributed object, and adds it to the specified composition batch.</source>
          <target state="translated">Cria uma parte combinável usando o objeto atribuído especificado e a adiciona ao lote de composição especificado.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.AttributedModelServices.ComposeExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionContainer,``0)">
          <source>The type of the new part.</source>
          <target state="translated">O tipo da nova parte.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.AttributedModelServices.ComposeExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionContainer,``0)">
          <source>The composition container to perform composition in.</source>
          <target state="translated">O contêiner de combinação no qual a combinação será realizada.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.AttributedModelServices.ComposeExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionContainer,``0)">
          <source>The value to compose.</source>
          <target state="translated">O valor a ser combinado.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.AttributedModelServices.ComposeExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionContainer,``0)">
          <source>Creates a part from the specified value and composes it in the specified composition container.</source>
          <target state="translated">Cria uma parte do valor especificado e a combina no contêiner de combinação especificado.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.AttributedModelServices.ComposeExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionContainer,System.String,``0)">
          <source>The type of the new part.</source>
          <target state="translated">O tipo da nova parte.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.AttributedModelServices.ComposeExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionContainer,System.String,``0)">
          <source>The composition container to perform composition in.</source>
          <target state="translated">O contêiner de combinação no qual a combinação será realizada.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.AttributedModelServices.ComposeExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionContainer,System.String,``0)">
          <source>The contract name to export the part under.</source>
          <target state="translated">O nome do contrato sob o qual exportar a parte.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.AttributedModelServices.ComposeExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionContainer,System.String,``0)">
          <source>The value to compose.</source>
          <target state="translated">O valor a ser combinado.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.AttributedModelServices.ComposeExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionContainer,System.String,``0)">
          <source>Creates a part from the specified object under the specified contract name and composes it in the specified composition container.</source>
          <target state="translated">Cria uma parte do objeto especificado sob o nome de contrato especificado e a compõe no contêiner de composição especificado.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.AttributedModelServices.ComposeParts(System.ComponentModel.Composition.Hosting.CompositionContainer,System.Object[])">
          <source>The composition container to perform composition in.</source>
          <target state="translated">O contêiner de combinação no qual a combinação será realizada.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.AttributedModelServices.ComposeParts(System.ComponentModel.Composition.Hosting.CompositionContainer,System.Object[])">
          <source>An array of attributed objects to compose.</source>
          <target state="translated">Uma matriz de objetos atribuídos a serem combinados.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.AttributedModelServices.ComposeParts(System.ComponentModel.Composition.Hosting.CompositionContainer,System.Object[])">
          <source>Creates composable parts from an array of attributed objects and composes them in the specified composition container.</source>
          <target state="translated">Cria partes combináveis de uma matriz de objetos atribuídos e as combina no contêiner de combinação especificado.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.AttributedModelServices.Exports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Type)">
          <source>The part to search.</source>
          <target state="translated">A parte a ser pesquisada.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.AttributedModelServices.Exports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Type)">
          <source>The contract type.</source>
          <target state="translated">O tipo de contrato.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.AttributedModelServices.Exports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Type)">
          <source>Returns a value that indicates whether the specified part contains an export that matches the specified contract type.</source>
          <target state="translated">Retorna um valor que indica se a parte especificada contém uma exportação que corresponde ao tipo de contrato especificado.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.AttributedModelServices.Exports``1(System.ComponentModel.Composition.Primitives.ComposablePartDefinition)">
          <source>The contract type.</source>
          <target state="translated">O tipo de contrato.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.AttributedModelServices.Exports``1(System.ComponentModel.Composition.Primitives.ComposablePartDefinition)">
          <source>The part to search.</source>
          <target state="translated">A parte a ser pesquisada.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.AttributedModelServices.Exports``1(System.ComponentModel.Composition.Primitives.ComposablePartDefinition)">
          <source>Returns a value that indicates whether the specified part contains an export that matches the specified contract type.</source>
          <target state="translated">Retorna um valor que indica se a parte especificada contém uma exportação que corresponde ao tipo de contrato especificado.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.AttributedModelServices.Imports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Type)">
          <source>The part to search.</source>
          <target state="translated">A parte a ser pesquisada.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.AttributedModelServices.Imports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Type)">
          <source>The contract type.</source>
          <target state="translated">O tipo de contrato.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.AttributedModelServices.Imports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Type)">
          <source>Returns a value that indicates whether the specified part contains an import that matches the specified contract type.</source>
          <target state="translated">Retorna um valor que indica se a parte especificada contém uma importação que corresponde ao tipo de contrato especificado.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.AttributedModelServices.Imports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Type,System.ComponentModel.Composition.Primitives.ImportCardinality)">
          <source>The part to search.</source>
          <target state="translated">A parte a ser pesquisada.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.AttributedModelServices.Imports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Type,System.ComponentModel.Composition.Primitives.ImportCardinality)">
          <source>The contract type.</source>
          <target state="translated">O tipo de contrato.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.AttributedModelServices.Imports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Type,System.ComponentModel.Composition.Primitives.ImportCardinality)">
          <source>The import cardinality.</source>
          <target state="translated">A cardinalidade de importação.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.AttributedModelServices.Imports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Type,System.ComponentModel.Composition.Primitives.ImportCardinality)">
          <source>Returns a value that indicates whether the specified part contains an import that matches the specified contract type and import cardinality.</source>
          <target state="translated">Retorna um valor que indica se a parte especificada contém uma exportação que corresponde ao tipo de contrato especificado e à cardinalidade da importação.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.AttributedModelServices.Imports``1(System.ComponentModel.Composition.Primitives.ComposablePartDefinition)">
          <source>The contract type.</source>
          <target state="translated">O tipo de contrato.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.AttributedModelServices.Imports``1(System.ComponentModel.Composition.Primitives.ComposablePartDefinition)">
          <source>The part to search.</source>
          <target state="translated">A parte a ser pesquisada.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.AttributedModelServices.Imports``1(System.ComponentModel.Composition.Primitives.ComposablePartDefinition)">
          <source>Returns a value that indicates whether the specified part contains an import that matches the specified contract type.</source>
          <target state="translated">Retorna um valor que indica se a parte especificada contém uma importação que corresponde ao tipo de contrato especificado.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.AttributedModelServices.Imports``1(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.ComponentModel.Composition.Primitives.ImportCardinality)">
          <source>The contract type.</source>
          <target state="translated">O tipo de contrato.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.AttributedModelServices.Imports``1(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.ComponentModel.Composition.Primitives.ImportCardinality)">
          <source>The part to search.</source>
          <target state="translated">A parte a ser pesquisada.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.AttributedModelServices.Imports``1(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.ComponentModel.Composition.Primitives.ImportCardinality)">
          <source>The import cardinality.</source>
          <target state="translated">A cardinalidade de importação.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.AttributedModelServices.Imports``1(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.ComponentModel.Composition.Primitives.ImportCardinality)">
          <source>Returns a value that indicates whether the specified part contains an import that matches the specified contract type and import cardinality.</source>
          <target state="translated">Retorna um valor que indica se a parte especificada contém uma exportação que corresponde ao tipo de contrato especificado e à cardinalidade da importação.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.AttributedModelServices.SatisfyImportsOnce(System.ComponentModel.Composition.ICompositionService,System.Object)">
          <source>The composition service to use.</source>
          <target state="translated">O serviço de composição a usar.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.AttributedModelServices.SatisfyImportsOnce(System.ComponentModel.Composition.ICompositionService,System.Object)">
          <source>The part to compose.</source>
          <target state="translated">A parte a ser composta.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.AttributedModelServices.SatisfyImportsOnce(System.ComponentModel.Composition.ICompositionService,System.Object)">
          <source>Composes the specified part by using the specified composition service, with recomposition disabled.</source>
          <target state="translated">Compõe a parte especificada usando o serviço de composição especificado, com recomposição desabilitada.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.AttributedModelServices.SatisfyImportsOnce(System.ComponentModel.Composition.ICompositionService,System.Object,System.Reflection.ReflectionContext)">
          <source>The composition service to use.</source>
          <target state="translated">O serviço de composição a usar.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.AttributedModelServices.SatisfyImportsOnce(System.ComponentModel.Composition.ICompositionService,System.Object,System.Reflection.ReflectionContext)">
          <source>The part to compose.</source>
          <target state="translated">A parte a ser composta.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.AttributedModelServices.SatisfyImportsOnce(System.ComponentModel.Composition.ICompositionService,System.Object,System.Reflection.ReflectionContext)">
          <source>The reflection context for the part.</source>
          <target state="translated">O contexto de reflexão para a parte.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.AttributedModelServices.SatisfyImportsOnce(System.ComponentModel.Composition.ICompositionService,System.Object,System.Reflection.ReflectionContext)">
          <source>Composes the specified part by using the specified composition service, with recomposition disabled and using the specified reflection context.</source>
          <target state="translated">Compõe a parte especificada usando o serviço de composição especificado, com recomposição desabilitada e usando o contexto de reflexão especificado.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CatalogExtensions.CreateCompositionService(System.ComponentModel.Composition.Primitives.ComposablePartCatalog)">
          <source>The catalog that will provide exports.</source>
          <target state="translated">O catálogo que fornecerá exportações.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CatalogExtensions.CreateCompositionService(System.ComponentModel.Composition.Primitives.ComposablePartCatalog)">
          <source>Creates a new composition service by using the specified catalog as a source for exports.</source>
          <target state="translated">Cria um novo serviço de composição usando o catálogo especificado como uma origem para exportações.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.Hosting.ScopingExtensions.ContainsPartMetadata``1(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.String,``0)">
          <source>The type of the metadata value.</source>
          <target state="translated">O tipo do valor de metadados.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.ScopingExtensions.ContainsPartMetadata``1(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.String,``0)">
          <source>The part to search.</source>
          <target state="translated">A parte a ser pesquisada.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.ScopingExtensions.ContainsPartMetadata``1(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.String,``0)">
          <source>The metadata key.</source>
          <target state="translated">A chave de metadados.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.ScopingExtensions.ContainsPartMetadata``1(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.String,``0)">
          <source>The metadata value.</source>
          <target state="translated">O valor de metadados.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.ScopingExtensions.ContainsPartMetadata``1(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.String,``0)">
          <source>Gets a value that indicates whether the specified part contains metadata that has the specified key and value.</source>
          <target state="translated">Obtém um valor que indica se a parte especificada contém metadados que têm a chave e o valor especificados.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.ScopingExtensions.ContainsPartMetadataWithKey(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.String)">
          <source>The part to search.</source>
          <target state="translated">A parte a ser pesquisada.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.ScopingExtensions.ContainsPartMetadataWithKey(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.String)">
          <source>The metadata key.</source>
          <target state="translated">A chave de metadados.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.ScopingExtensions.ContainsPartMetadataWithKey(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.String)">
          <source>Gets a value that indicates whether the specified part contains metadata that has the specified key.</source>
          <target state="translated">Obtém um valor que indica se a parte especificada contém metadados que têm a chave especificada.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.ScopingExtensions.Exports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.String)">
          <source>The part to search.</source>
          <target state="translated">A parte a ser pesquisada.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.ScopingExtensions.Exports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.String)">
          <source>The name of the contract.</source>
          <target state="translated">O nome do contrato.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.ScopingExtensions.Exports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.String)">
          <source>Gets a value that indicates whether the specified part exports the specified contract.</source>
          <target state="translated">Obtém um valor que indica se a parte especificada exporta o contrato especificado.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.ScopingExtensions.Filter(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Func{System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Boolean})">
          <source>The catalog to filter.</source>
          <target state="translated">O catálogo a ser filtrado.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.ScopingExtensions.Filter(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Func{System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Boolean})">
          <source>The filter function.</source>
          <target state="translated">A função de filtro.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.ScopingExtensions.Filter(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Func{System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Boolean})">
          <source>Filters the specified catalog with the specified filter function.</source>
          <target state="translated">Filtra o catálogo especificado com a função de filtro especificada.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.ScopingExtensions.Imports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.String)">
          <source>The part to search.</source>
          <target state="translated">A parte a ser pesquisada.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.ScopingExtensions.Imports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.String)">
          <source>The name of the contract.</source>
          <target state="translated">O nome do contrato.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.ScopingExtensions.Imports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.String)">
          <source>Determines whether the specified part imports the specified contract.</source>
          <target state="translated">Determina se a parte especificada importa o contrato especificado.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.ScopingExtensions.Imports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.String,System.ComponentModel.Composition.Primitives.ImportCardinality)">
          <source>The part to search.</source>
          <target state="translated">A parte a ser pesquisada.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.ScopingExtensions.Imports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.String,System.ComponentModel.Composition.Primitives.ImportCardinality)">
          <source>The name of the contract.</source>
          <target state="translated">O nome do contrato.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.ScopingExtensions.Imports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.String,System.ComponentModel.Composition.Primitives.ImportCardinality)">
          <source>The cardinality of the contract.</source>
          <target state="translated">A cardinalidade do contrato.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.ScopingExtensions.Imports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.String,System.ComponentModel.Composition.Primitives.ImportCardinality)">
          <source>Determines whether the specified part imports the specified contract with the specified cardinality.</source>
          <target state="translated">Determina se a parte especificada importa o contrato especificado com a cardinalidade especificada.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" uid="M:System.Composition.CompositionContextExtensions.SatisfyImports(System.Composition.CompositionContext,System.Object)">
          <source>The context to draw exports from.</source>
          <target state="translated">O contexto do qual extrair exportações.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" uid="M:System.Composition.CompositionContextExtensions.SatisfyImports(System.Composition.CompositionContext,System.Object)">
          <source>The object to satisfy imports on.</source>
          <target state="translated">O objeto no qual satisfazer as importações.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" uid="M:System.Composition.CompositionContextExtensions.SatisfyImports(System.Composition.CompositionContext,System.Object)">
          <source>Satisfies the imports of the specified object from the specified context.</source>
          <target state="translated">Satisfaz as importações do objeto especificado do contexto especificado.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" uid="M:System.Composition.CompositionContextExtensions.SatisfyImports(System.Composition.CompositionContext,System.Object,System.Composition.Convention.AttributedModelProvider)">
          <source>The context to draw exports from.</source>
          <target state="translated">O contexto do qual extrair exportações.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="M:System.Composition.CompositionContextExtensions.SatisfyImports(System.Composition.CompositionContext,System.Object,System.Composition.Convention.AttributedModelProvider)">
          <source>The object to satisfy imports on.</source>
          <target state="translated">O objeto no qual satisfazer as importações.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="M:System.Composition.CompositionContextExtensions.SatisfyImports(System.Composition.CompositionContext,System.Object,System.Composition.Convention.AttributedModelProvider)">
          <source>Conventions to use when satisfying imports.</source>
          <target state="translated">Convenções para usar ao satisfazer importações.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" uid="M:System.Composition.CompositionContextExtensions.SatisfyImports(System.Composition.CompositionContext,System.Object,System.Composition.Convention.AttributedModelProvider)">
          <source>Satisfies the imports of the specified object from the specified context, using the specified conventions.</source>
          <target state="translated">Satisfaz as importações do objeto especificado do contexto especificado, usando as convenções especificadas.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Aggregate(System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression)">
          <source>The function that defines the aggregate operation.</source>
          <target state="translated">A função que define a operação de agregação.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Aggregate(System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression)">
          <source>The argument over which the aggregate function should be calculated.</source>
          <target state="translated">O argumento pelo qual a função de agregação deve ser calculada.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Aggregate(System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionAggregate" /&gt;</ph>.</source>
          <target state="translated">Cria um novo <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionAggregate" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.AggregateDistinct(System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression)">
          <source>The function that defines the aggregate operation.</source>
          <target state="translated">A função que define a operação de agregação.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.AggregateDistinct(System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression)">
          <source>The argument over which the aggregate function should be calculated.</source>
          <target state="translated">O argumento pelo qual a função de agregação deve ser calculada.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.AggregateDistinct(System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionAggregate" /&gt;</ph> that is applied in a distinct fashion.</source>
          <target state="translated">Cria um novo <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionAggregate" /&gt;</ph> que é aplicado de modo distinto.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>An expression that specifies the input set.</source>
          <target state="translated">Uma expressão que especifica o conjunto de entrada.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>A method representing a predicate to evaluate for each member of the input set.</source>
          <target state="translated">Um método que representa um predicado a ser avaliado para cada membro do conjunto de entrada.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>This method must produce an expression with a Boolean result type that provides the predicate logic.</source>
          <target state="translated">Este método deve produzir uma expressão com um tipo de resultado booliano que fornece a lógica de predicado.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /&gt;</ph> that determines whether the given predicate holds for all elements of the input set.</source>
          <target state="translated">Cria uma nova <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /&gt;</ph> que determina se o predicado em questão mantém todos os elementos do conjunto de entrada.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression binding that specifies the input set.</source>
          <target state="translated">Uma expressão de associação que especifica o conjunto de entrada.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression representing a predicate to evaluate for each member of the input set.</source>
          <target state="translated">Uma expressão que representa um predicado a ser avaliado para cada membro do conjunto de entrada.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /&gt;</ph> that determines whether the given predicate holds for all elements of the input set.</source>
          <target state="translated">Cria uma nova <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /&gt;</ph> que determina se o predicado em questão mantém todos os elementos do conjunto de entrada.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.And(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A Boolean expression that specifies the left argument.</source>
          <target state="translated">Uma expressão booliana que especifica o argumento left.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.And(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A Boolean expression that specifies the right argument.</source>
          <target state="translated">Uma expressão booliana que especifica o argumento direito.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.And(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates an <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbAndExpression" /&gt;</ph> that performs the logical And of the left and right arguments.</source>
          <target state="translated">Cria uma <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbAndExpression" /&gt;</ph> que executa a AND lógica dos argumentos left e right.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the input set.</source>
          <target state="translated">Uma expressão que especifica o conjunto de entrada.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph> that determines whether the specified set argument is non-empty.</source>
          <target state="translated">Cria uma nova <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph> que determina se o argumento de conjunto especificado é não vazio.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>An expression that specifies the input set.</source>
          <target state="translated">Uma expressão que especifica o conjunto de entrada.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>A method representing the predicate to evaluate for each member of the input set.</source>
          <target state="translated">Um método que representa o predicado a ser avaliado para cada membro do conjunto de entrada.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>This method must produce an expression with a Boolean result type that provides the predicate logic.</source>
          <target state="translated">Este método deve produzir uma expressão com um tipo de resultado booliano que fornece a lógica de predicado.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /&gt;</ph> that determines whether the given predicate holds for any element of the input set.</source>
          <target state="translated">Cria uma nova <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /&gt;</ph> que determina se o predicado em questão mantém algum elemento do conjunto de entrada.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression binding that specifies the input set.</source>
          <target state="translated">Uma expressão de associação que especifica o conjunto de entrada.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression representing a predicate to evaluate for each member of the input set.</source>
          <target state="translated">Uma expressão que representa um predicado a ser avaliado para cada membro do conjunto de entrada.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /&gt;</ph> that determines whether the given predicate holds for any element of the input set.</source>
          <target state="translated">Cria uma nova <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /&gt;</ph> que determina se o predicado em questão mantém algum elemento do conjunto de entrada.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(System.Data.Common.CommandTrees.DbAggregate,System.String)">
          <source>The value in the key/value pair.</source>
          <target state="translated">O valor no par chave/valor.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(System.Data.Common.CommandTrees.DbAggregate,System.String)">
          <source>The key in the key/value pair.</source>
          <target state="translated">A chave do par chave/valor.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(System.Data.Common.CommandTrees.DbAggregate,System.String)">
          <source>Returns the specified arguments as a key/value pair object.</source>
          <target state="translated">Retorna os argumentos especificados como um objeto do par chave-valor.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(System.Data.Common.CommandTrees.DbExpression,System.String)">
          <source>The value in the key/value pair.</source>
          <target state="translated">O valor no par chave/valor.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(System.Data.Common.CommandTrees.DbExpression,System.String)">
          <source>The key in the key/value pair.</source>
          <target state="translated">A chave do par chave/valor.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(System.Data.Common.CommandTrees.DbExpression,System.String)">
          <source>Returns the specified arguments as a key/value pair object.</source>
          <target state="translated">Retorna os argumentos especificados como um objeto do par chave-valor.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Bind(System.Data.Common.CommandTrees.DbExpression)">
          <source>The expression to bind.</source>
          <target state="translated">A expressão a ser associada.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Bind(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /&gt;</ph> that uses a generated variable name to bind the given expression.</source>
          <target state="translated">Cria uma nova <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /&gt;</ph> que usa um nome de variável gerado para associar a expressão fornecida.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.BindAs(System.Data.Common.CommandTrees.DbExpression,System.String)">
          <source>The expression to bind.</source>
          <target state="translated">A expressão a ser associada.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.BindAs(System.Data.Common.CommandTrees.DbExpression,System.String)">
          <source>The variable name that should be used for the binding.</source>
          <target state="translated">O nome da variável deve ser usado para a associação.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.BindAs(System.Data.Common.CommandTrees.DbExpression,System.String)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /&gt;</ph> that uses the specified variable name to bind the given expression</source>
          <target state="translated">Cria uma nova <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /&gt;</ph> que usa o nome de variável especificado para associar a expressão fornecida</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CastTo(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
          <source>The argument to which the cast should be applied.</source>
          <target state="translated">O argumento para o qual a conversão deve ser aplicada.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CastTo(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
          <source>Type metadata that specifies the type to cast to.</source>
          <target state="translated">Metadados de tipo que especificam o tipo para o qual converter.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CastTo(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbCastExpression" /&gt;</ph> that applies a cast operation to a polymorphic argument.</source>
          <target state="translated">Cria uma nova <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbCastExpression" /&gt;</ph> que aplica uma operação de conversão a um argumento polimórfico.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(System.Data.Metadata.Edm.TypeUsage,System.Object)">
          <source>The type of the constant value.</source>
          <target state="translated">O tipo do valor constante.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(System.Data.Metadata.Edm.TypeUsage,System.Object)">
          <source>The constant value to represent.</source>
          <target state="translated">O valor constante a ser representado.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(System.Data.Metadata.Edm.TypeUsage,System.Object)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /&gt;</ph> of the specified primitive type with the given constant value.</source>
          <target state="translated">Cria um novo <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /&gt;</ph> do tipo primitivo especificado com o valor constante fornecido.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
          <source>The entity set in which the referenced element resides.</source>
          <target state="translated">O conjunto de entidades em que o elemento referenciado reside.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
          <source>A collection of <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph>s that provide the key values.</source>
          <target state="translated">Uma coleção de <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph>s que fornece os valores de chave.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
          <source>These expressions must match (in number, type, and order) the key properties of the referenced entity type.</source>
          <target state="translated">Essas expressões devem corresponder (em número, tipo e ordem) às propriedades de chave do tipo de entidade referenciado.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /&gt;</ph> that encodes a reference to a specific entity based on key values.</source>
          <target state="translated">Cria uma nova <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /&gt;</ph> que codifica uma referência a uma entidade específica com base em valores de chave.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression[])">
          <source>The entity set in which the referenced element resides.</source>
          <target state="translated">O conjunto de entidades em que o elemento referenciado reside.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression[])">
          <source>A collection of <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph>s that provide the key values.</source>
          <target state="translated">Uma coleção de <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph>s que fornece os valores de chave.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression[])">
          <source>These expressions must match (in number, type, and order) the key properties of the referenced entity type.</source>
          <target state="translated">Essas expressões devem corresponder (em número, tipo e ordem) às propriedades de chave do tipo de entidade referenciado.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression[])">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /&gt;</ph> that encodes a reference to a specific entity based on key values.</source>
          <target state="translated">Cria uma nova <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /&gt;</ph> que codifica uma referência a uma entidade específica com base em valores de chave.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.EntityType,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
          <source>The entity set in which the referenced element resides.</source>
          <target state="translated">O conjunto de entidades em que o elemento referenciado reside.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.EntityType,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
          <source>The specific type of the referenced entity.</source>
          <target state="translated">O tipo específico da entidade referenciada.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.EntityType,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
          <source>This must be an entity type from the same hierarchy as the entity set's element type.</source>
          <target state="translated">Isso deve ser um tipo de entidade da mesma hierarquia que o tipo de elemento do conjunto de entidades.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.EntityType,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
          <source>A collection of <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph>s that provide the key values.</source>
          <target state="translated">Uma coleção de <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph>s que fornece os valores de chave.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.EntityType,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
          <source>These expressions must match (in number, type, and order) the key properties of the referenced entity type.</source>
          <target state="translated">Essas expressões devem corresponder (em número, tipo e ordem) às propriedades de chave do tipo de entidade referenciado.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.EntityType,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /&gt;</ph> that encodes a reference to a specific entity of a given type based on key values.</source>
          <target state="translated">Cria uma nova <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /&gt;</ph> que codifica uma referência a uma entidade específica de um tipo fornecido com base em valores de chave.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.EntityType,System.Data.Common.CommandTrees.DbExpression[])">
          <source>The entity set in which the referenced element resides.</source>
          <target state="translated">O conjunto de entidades em que o elemento referenciado reside.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.EntityType,System.Data.Common.CommandTrees.DbExpression[])">
          <source>The specific type of the referenced entity.</source>
          <target state="translated">O tipo específico da entidade referenciada.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.EntityType,System.Data.Common.CommandTrees.DbExpression[])">
          <source>This must be an entity type from the same hierarchy as the entity set's element type.</source>
          <target state="translated">Isso deve ser um tipo de entidade da mesma hierarquia que o tipo de elemento do conjunto de entidades.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.EntityType,System.Data.Common.CommandTrees.DbExpression[])">
          <source>A collection of <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph>s that provide the key values.</source>
          <target state="translated">Uma coleção de <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph>s que fornece os valores de chave.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.EntityType,System.Data.Common.CommandTrees.DbExpression[])">
          <source>These expressions must match (in number, type, and order) the key properties of the referenced entity type.</source>
          <target state="translated">Essas expressões devem corresponder (em número, tipo e ordem) às propriedades de chave do tipo de entidade referenciado.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.EntityType,System.Data.Common.CommandTrees.DbExpression[])">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /&gt;</ph> that encodes a reference to a specific entity of a given type based on key values.</source>
          <target state="translated">Cria uma nova <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /&gt;</ph> que codifica uma referência a uma entidade específica de um tipo fornecido com base em valores de chave.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph> that specifies the input set.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph> que especifica o conjunto de entrada.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})">
          <source>A method that specifies the logic to evaluate once for each member of the input set.</source>
          <target state="translated">Um método que especifica a lógica a ser avaliada uma vez para cada membro do conjunto de entrada.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /&gt;</ph> that evaluates the given <ph id="ph2">&lt;paramref name="apply" /&gt;</ph> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.</source>
          <target state="translated">Cria uma nova <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /&gt;</ph> que avalia a expressão <ph id="ph2">&lt;paramref name="apply" /&gt;</ph> fornecida uma vez para cada elemento de um determinado conjunto de entrada, produzindo um conjunto de linhas com colunas input e apply correspondentes.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})">
          <source>Rows for which <ph id="ph1">&lt;paramref name="apply" /&gt;</ph> evaluates to an empty set are not included.</source>
          <target state="translated">Linhas para as quais <ph id="ph1">&lt;paramref name="apply" /&gt;</ph> é avaliado para um conjunto vazio não são incluídas.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /&gt;</ph> that specifies the input set.</source>
          <target state="translated">Uma <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /&gt;</ph> que especifica o conjunto de entrada.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /&gt;</ph> that specifies logic to evaluate once for each member of the input set.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /&gt;</ph> que especifica a lógica a ser avaliada uma vez para cada membro do conjunto de entrada.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /&gt;</ph> that evaluates the given <ph id="ph2">&lt;paramref name="apply" /&gt;</ph> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.</source>
          <target state="translated">Cria uma nova <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /&gt;</ph> que avalia a expressão <ph id="ph2">&lt;paramref name="apply" /&gt;</ph> fornecida uma vez para cada elemento de um determinado conjunto de entrada, produzindo um conjunto de linhas com colunas input e apply correspondentes.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding)">
          <source>Rows for which <ph id="ph1">&lt;paramref name="apply" /&gt;</ph> evaluates to an empty set are not included.</source>
          <target state="translated">Linhas para as quais <ph id="ph1">&lt;paramref name="apply" /&gt;</ph> é avaliado para um conjunto vazio não são incluídas.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Deref(System.Data.Common.CommandTrees.DbExpression)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph> that provides the reference.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph> que fornece a referência.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Deref(System.Data.Common.CommandTrees.DbExpression)">
          <source>This expression must have a reference Type.</source>
          <target state="translated">Esta expressão deve ter um tipo de referência.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Deref(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbDerefExpression" /&gt;</ph> that retrieves a specific Entity given a reference expression.</source>
          <target state="translated">Cria uma nova <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbDerefExpression" /&gt;</ph> que recupera uma entidade específica com base em uma expressão de referência fornecida.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Distinct(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that defines the set over which to perfom the distinct operation.</source>
          <target state="translated">Uma expressão que define o conjunto no qual executar a operação distinta.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Distinct(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbDistinctExpression" /&gt;</ph> that removes duplicates from the given set argument.</source>
          <target state="translated">Cria uma nova <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbDistinctExpression" /&gt;</ph> que remove duplicatas do argumento de conjunto fornecido.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Divide(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the left argument.</source>
          <target state="translated">Uma expressão que especifica o argumento left.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Divide(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the right argument.</source>
          <target state="translated">Uma expressão que especifica o argumento direito.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Divide(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /&gt;</ph> that divides the left argument by the right argument.</source>
          <target state="translated">Cria uma nova <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /&gt;</ph> que divide o argumento left pelo argumento right.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Element(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the input set.</source>
          <target state="translated">Uma expressão que especifica o conjunto de entrada.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Element(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbElementExpression" /&gt;</ph> that converts a set into a singleton.</source>
          <target state="translated">Cria uma nova <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbElementExpression" /&gt;</ph> que converte um conjunto em um singleton.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Equal(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the left argument.</source>
          <target state="translated">Uma expressão que especifica o argumento left.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Equal(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the right argument.</source>
          <target state="translated">Uma expressão que especifica o argumento direito.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Equal(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /&gt;</ph> that compares the left and right arguments for equality.</source>
          <target state="translated">Cria uma nova <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /&gt;</ph> que compara os argumentos left e right quanto à igualdade.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Except(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that defines the left set argument.</source>
          <target state="translated">Uma expressão que define o argumento de conjunto left.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Except(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that defines the right set argument.</source>
          <target state="translated">Uma expressão que define o argumento de conjunto direito.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Except(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExceptExpression" /&gt;</ph> that computes the subtraction of the right set argument from the left set argument.</source>
          <target state="translated">Cria uma nova <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExceptExpression" /&gt;</ph> que calcula a subtração do argumento de conjunto right do argumento de conjunto left.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Exists(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the input set.</source>
          <target state="translated">Uma expressão que especifica o conjunto de entrada.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Exists(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph> that determines whether the specified set argument is non-empty.</source>
          <target state="translated">Cria uma nova <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph> que determina se o argumento de conjunto especificado é não vazio.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Filter(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression binding that specifies the input set.</source>
          <target state="translated">Uma expressão de associação que especifica o conjunto de entrada.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Filter(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression representing a predicate to evaluate for each member of the input set.</source>
          <target state="translated">Uma expressão que representa um predicado a ser avaliado para cada membro do conjunto de entrada.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Filter(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFilterExpression" /&gt;</ph> that filters the elements in the given input set using the specified predicate.</source>
          <target state="translated">Cria uma nova <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFilterExpression" /&gt;</ph> que filtra os elementos no conjunto de entrada fornecido usando o predicado especificado.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph> that specifies the left set argument.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph> que especifica o argumento de conjunto left.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph> that specifies the right set argument.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph> que especifica o argumento de conjunto direito.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>A method representing the condition on which to join.</source>
          <target state="translated">Um método que representa a condição na qual se unir.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>This method must produce an expression with a Boolean result type that provides the logic of the join condition.</source>
          <target state="translated">Este método deve produzir uma expressão com um tipo de resultado booliano que fornece a lógica da condição de junção.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /&gt;</ph> that joins the sets specified by the left and right expressions, on the specified join condition, using FullOuterJoin as the <ph id="ph2">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /&gt;</ph>.</source>
          <target state="translated">Cria uma nova <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /&gt;</ph> que une os conjuntos especificados pelas expressões left e right, na condição de junção especificada, usando FullOuterJoin como o <ph id="ph2">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /&gt;</ph> that specifies the left set argument.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /&gt;</ph> que especifica o argumento de conjunto left.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /&gt;</ph> that specifies the right set argument.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /&gt;</ph> que especifica o argumento de conjunto direito.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the condition on which to join.</source>
          <target state="translated">Uma expressão que especifica a condição na qual se unir.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /&gt;</ph> that joins the sets specified by the left and right expression bindings, on the specified join condition, using FullOuterJoin as the <ph id="ph2">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /&gt;</ph>.</source>
          <target state="translated">Cria uma nova <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /&gt;</ph> que une os conjuntos especificados pelas associações de expressão left e right, na condição de junção especificada, usando FullOuterJoin como o <ph id="ph2">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetEntityRef(System.Data.Common.CommandTrees.DbExpression)">
          <source>The expression that provides the entity.</source>
          <target state="translated">A expressão que fornece a entidade.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetEntityRef(System.Data.Common.CommandTrees.DbExpression)">
          <source>This expression must have an entity result type.</source>
          <target state="translated">Essa expressão deve ter um tipo de resultado de entidade.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetEntityRef(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbEntityRefExpression" /&gt;</ph> that retrieves the ref of the specifed entity in structural form.</source>
          <target state="translated">Cria uma nova <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbEntityRefExpression" /&gt;</ph> que recupera a referência da entidade especificada no formulário estrutural.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetRefKey(System.Data.Common.CommandTrees.DbExpression)">
          <source>The expression that provides the reference.</source>
          <target state="translated">A expressão que fornece a referência.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetRefKey(System.Data.Common.CommandTrees.DbExpression)">
          <source>This expression must have a reference Type with an Entity element type.</source>
          <target state="translated">Essa expressão deve ter um tipo de referência com um tipo de elemento de entidade.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetRefKey(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbRefKeyExpression" /&gt;</ph> that retrieves the key values of the specifed reference in structural form.</source>
          <target state="translated">Cria uma nova <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbRefKeyExpression" /&gt;</ph> que recupera os valores de chave da referência especificada de forma estrutural.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThan(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the left argument.</source>
          <target state="translated">Uma expressão que especifica o argumento left.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThan(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the right argument.</source>
          <target state="translated">Uma expressão que especifica o argumento direito.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThan(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /&gt;</ph> that determines whether the left argument is greater than the right argument.</source>
          <target state="translated">Cria uma nova <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /&gt;</ph> que determina se o argumento left é maior que o argumento right.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThanOrEqual(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the left argument.</source>
          <target state="translated">Uma expressão que especifica o argumento left.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThanOrEqual(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the right argument.</source>
          <target state="translated">Uma expressão que especifica o argumento direito.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThanOrEqual(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /&gt;</ph> that determines whether the left argument is greater than or equal to the right argument.</source>
          <target state="translated">Cria uma nova <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /&gt;</ph> que determina se o argumento left é maior ou igual ao argumento right.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBind(System.Data.Common.CommandTrees.DbExpression)">
          <source>The expression to bind.</source>
          <target state="translated">A expressão a ser associada.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBind(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new group expression binding that uses generated variable and group variable names to bind the given expression.</source>
          <target state="translated">Cria uma nova associação de expressão de grupo que usa a variável gerada e nomes de variáveis de grupo para associar à expressão fornecida.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBindAs(System.Data.Common.CommandTrees.DbExpression,System.String,System.String)">
          <source>The expression to bind.</source>
          <target state="translated">A expressão a ser associada.</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBindAs(System.Data.Common.CommandTrees.DbExpression,System.String,System.String)">
          <source>The variable name that should be used for the binding.</source>
          <target state="translated">O nome da variável deve ser usado para a associação.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBindAs(System.Data.Common.CommandTrees.DbExpression,System.String,System.String)">
          <source>The variable name that should be used to refer to the group when the new group expression binding is used in a group-by expression.</source>
          <target state="translated">O nome de variável deve ser usado para fazer referência ao grupo quando a nova associação de expressão de grupo é usada em uma expressão group-by.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBindAs(System.Data.Common.CommandTrees.DbExpression,System.String,System.String)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbGroupExpressionBinding" /&gt;</ph> that uses the specified variable name and group variable names to bind the given expression.</source>
          <target state="translated">Cria uma nova <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbGroupExpressionBinding" /&gt;</ph> que usa o nome de variável e os nomes de variáveis de grupo especificados para associar a expressão fornecida.</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBy(System.Data.Common.CommandTrees.DbGroupExpressionBinding,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbAggregate}})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbGroupExpressionBinding" /&gt;</ph> that specifies the input set.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbGroupExpressionBinding" /&gt;</ph> que especifica o conjunto de entrada.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBy(System.Data.Common.CommandTrees.DbGroupExpressionBinding,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbAggregate}})">
          <source>A list of string-expression pairs that define the grouping columns.</source>
          <target state="translated">Uma lista de pares de expressão de cadeia de caracteres que definem as colunas de agrupamento.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBy(System.Data.Common.CommandTrees.DbGroupExpressionBinding,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbAggregate}})">
          <source>A list of expressions that specify aggregates to apply.</source>
          <target state="translated">Uma lista de expressões que especificam agregações a serem aplicadas.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBy(System.Data.Common.CommandTrees.DbGroupExpressionBinding,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbAggregate}})">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbGroupByExpression" /&gt;</ph> that groups the elements of the input set according to the specified group keys and applies the given aggregates.</source>
          <target state="translated">Cria uma nova <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbGroupByExpression" /&gt;</ph> que agrupa os elementos do conjunto de entrada de acordo com as chaves de grupo especificadas e aplica as agregações fornecidas.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph> that specifies the left set argument.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph> que especifica o argumento de conjunto left.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph> that specifies the right set argument.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph> que especifica o argumento de conjunto direito.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>A method representing the condition on which to join.</source>
          <target state="translated">Um método que representa a condição na qual se unir.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>This method must produce an expression with a Boolean result type that provides the logic of the join condition.</source>
          <target state="translated">Este método deve produzir uma expressão com um tipo de resultado booliano que fornece a lógica da condição de junção.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /&gt;</ph> that joins the sets specified by the left and right expressions, on the specified join condition, using InnerJoin as the <ph id="ph2">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /&gt;</ph>.</source>
          <target state="translated">Cria uma nova <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /&gt;</ph> que une os conjuntos especificados pelas expressões left e right, na condição de junção especificada, usando InnerJoin como o <ph id="ph2">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /&gt;</ph> that specifies the left set argument.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /&gt;</ph> que especifica o argumento de conjunto left.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /&gt;</ph> that specifies the right set argument.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /&gt;</ph> que especifica o argumento de conjunto direito.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the condition on which to join.</source>
          <target state="translated">Uma expressão que especifica a condição na qual se unir.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /&gt;</ph> that joins the sets specified by the left and right expression bindings, on the specified join condition, using InnerJoin as the <ph id="ph2">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /&gt;</ph>.</source>
          <target state="translated">Cria uma nova <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /&gt;</ph> que une os conjuntos especificados pelas associações de expressão left e right, na condição de junção especificada, usando InnerJoin como o <ph id="ph2">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Intersect(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that defines the left set argument.</source>
          <target state="translated">Uma expressão que define o argumento de conjunto left.</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Intersect(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that defines the right set argument.</source>
          <target state="translated">Uma expressão que define o argumento de conjunto direito.</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Intersect(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbIntersectExpression" /&gt;</ph> that computes the intersection of the left and right set arguments.</source>
          <target state="translated">Cria uma nova <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbIntersectExpression" /&gt;</ph> que calcula a interseção dos argumentos de conjunto left e right.</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Common.CommandTrees.DbLambda,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbLambda" /&gt;</ph> instance representing the Lambda function to apply.</source>
          <target state="translated">Uma instância de <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbLambda" /&gt;</ph> que representa a função Lambda a ser aplicada.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Common.CommandTrees.DbLambda,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
          <source>A list of expressions that provide the arguments.</source>
          <target state="translated">Uma lista de expressões que fornecem os argumentos.</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Common.CommandTrees.DbLambda,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbLambdaExpression" /&gt;</ph> representing the application of the specified Lambda function to the given arguments.</source>
          <target state="translated">Cria uma nova <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbLambdaExpression" /&gt;</ph> que representa a aplicação da função Lambda especificada aos argumentos fornecidos.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Common.CommandTrees.DbLambda,System.Data.Common.CommandTrees.DbExpression[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbLambda" /&gt;</ph> instance representing the Lambda function to apply.</source>
          <target state="translated">Uma instância de <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbLambda" /&gt;</ph> que representa a função Lambda a ser aplicada.</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Common.CommandTrees.DbLambda,System.Data.Common.CommandTrees.DbExpression[])">
          <source>Expressions that provide the arguments.</source>
          <target state="translated">Expressões que fornecem os argumentos.</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Common.CommandTrees.DbLambda,System.Data.Common.CommandTrees.DbExpression[])">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbLambdaExpression" /&gt;</ph> representing the application of the specified Lambda function to the given arguments.</source>
          <target state="translated">Cria uma nova <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbLambdaExpression" /&gt;</ph> que representa a aplicação da função Lambda especificada aos argumentos fornecidos.</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Metadata.Edm.EdmFunction,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
          <source>Metadata for the function to invoke.</source>
          <target state="translated">Metadados para a função a ser invocada.</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Metadata.Edm.EdmFunction,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
          <source>A list of expressions that provide the arguments to the function.</source>
          <target state="translated">Uma lista de expressões que fornecem os argumentos à função.</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Metadata.Edm.EdmFunction,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> representing the invocation of the specified function with the given arguments.</source>
          <target state="translated">Cria uma nova <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que representa a invocação da função especificada com os argumentos fornecidos.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression[])">
          <source>Metadata for the function to invoke.</source>
          <target state="translated">Metadados para a função a ser invocada.</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression[])">
          <source>Expressions that provide the arguments to the function.</source>
          <target state="translated">Expressões que fornecem os argumentos à função.</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression[])">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> representing the invocation of the specified function with the given arguments.</source>
          <target state="translated">Cria uma nova <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que representa a invocação da função especificada com os argumentos fornecidos.</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsEmpty(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the input set.</source>
          <target state="translated">Uma expressão que especifica o conjunto de entrada.</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsEmpty(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" /&gt;</ph> that determines whether the specified set argument is an empty set.</source>
          <target state="translated">Cria uma nova <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" /&gt;</ph> que determina se o argumento de conjunto especificado é um conjunto vazio.</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsNull(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the argument.</source>
          <target state="translated">Uma expressão que especifica o argumento.</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsNull(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbIsNullExpression" /&gt;</ph> that determines whether the specified argument is null.</source>
          <target state="translated">Cria uma nova <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbIsNullExpression" /&gt;</ph> que determina se o argumento especificado é nulo.</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOf(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
          <source>An expression that specifies the instance.</source>
          <target state="translated">Uma expressão que especifica a instância.</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOf(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
          <source>Type metadata that specifies the type that the instance's result type should be compared to.</source>
          <target state="translated">Metadados de tipo que especificam o tipo ao qual o tipo de resultado da instância deve ser comparado.</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOf(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbIsOfExpression" /&gt;</ph> that determines whether the given argument is of the specified type or a subtype.</source>
          <target state="translated">Cria uma nova <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbIsOfExpression" /&gt;</ph> que determina se o argumento fornecido é do tipo especificado ou um de seus subtipos.</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOfOnly(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
          <source>An expression that specifies the instance.</source>
          <target state="translated">Uma expressão que especifica a instância.</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOfOnly(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
          <source>Type metadata that specifies the type that the instance's result type should be compared to.</source>
          <target state="translated">Metadados de tipo que especificam o tipo ao qual o tipo de resultado da instância deve ser comparado.</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOfOnly(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbIsOfExpression" /&gt;</ph> expression that determines whether the given argument is of the specified type, and only that type (not a subtype).</source>
          <target state="translated">Cria uma nova expressão <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbIsOfExpression" /&gt;</ph> que determina se o argumento fornecido é somente do tipo especificado (e não um subtipo).</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph> that specifies the outer set argument.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph> que especifica o argumento de conjunto externo.</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph> that specifies the inner set argument.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph> que especifica o argumento de conjunto interno.</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>A method that specifies how the outer key value should be derived from an element of the outer set.</source>
          <target state="translated">Um método que especifica como o valor de chave externo deve ser derivado de um elemento da coleção externa.</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>A method that specifies how the inner key value should be derived from an element of the inner set.</source>
          <target state="translated">Um método que especifica como o valor de chave interno deve ser derivado de um elemento da coleção interna.</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /&gt;</ph> that joins the sets specified by the outer and inner expressions, on an equality condition between the specified outer and inner keys, using InnerJoin as the <ph id="ph2">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /&gt;</ph>.</source>
          <target state="translated">Cria uma nova <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /&gt;</ph> que une os conjuntos especificados pelas expressões inner e outer, reunidas em uma condição de igualdade entre as chaves inner e outer especificadas usando InnerJoin como o <ph id="ph2">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join``1(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})">
          <source>The type of the <bpt id="p1">&lt;c&gt;</bpt>selector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo do <bpt id="p1">&lt;c&gt;</bpt>seletor<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join``1(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph> that specifies the outer set argument.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph> que especifica o argumento de conjunto externo.</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join``1(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph> that specifies the inner set argument.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph> que especifica o argumento de conjunto interno.</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join``1(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})">
          <source>A method that specifies how the outer key value should be derived from an element of the outer set.</source>
          <target state="translated">Um método que especifica como o valor de chave externo deve ser derivado de um elemento da coleção externa.</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join``1(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})">
          <source>A method that specifies how the inner key value should be derived from an element of the inner set.</source>
          <target state="translated">Um método que especifica como o valor de chave interno deve ser derivado de um elemento da coleção interna.</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join``1(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})">
          <source>A method that specifies how an element of the result set should be derived from elements of the inner and outer sets.</source>
          <target state="translated">Um método que especifica como um elemento do conjunto de resultados deve ser derivado de elementos dos conjuntos interno e externo.</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join``1(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})">
          <source>This method must produce an instance of a type that is compatible with Join and can be resolved into a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph>.</source>
          <target state="translated">Esse método deve produzir uma instância de um tipo compatível com Join e pode ser resolvido em um <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join``1(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})">
          <source>Compatibility requirements for <bpt id="p1">&lt;c&gt;</bpt>TSelector<ept id="p1">&lt;/c&gt;</ept> are described in remarks.</source>
          <target state="translated">Os requisitos de compatibilidade para <bpt id="p1">&lt;c&gt;</bpt>TSelector<ept id="p1">&lt;/c&gt;</ept> estão descritos nos comentários.</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join``1(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /&gt;</ph> that projects the specified selector over the sets specified by the outer and inner expressions, joined on an equality condition between the specified outer and inner keys, using InnerJoin as the <ph id="ph2">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /&gt;</ph>.</source>
          <target state="translated">Cria um novo <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /&gt;</ph> que projeta o seletor especificado nos conjuntos especificados pelas expressões externas e internas, reunidas em uma condição de igualdade entre as chaves externas e internas especificadas usando InnerJoin como o <ph id="ph2">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph> that specifies the left set argument.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph> que especifica o argumento de conjunto left.</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph> that specifies the right set argument.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph> que especifica o argumento de conjunto direito.</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>A method representing the condition on which to join.</source>
          <target state="translated">Um método que representa a condição na qual se unir.</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>This method must produce an expression with a Boolean result type that provides the logic of the join condition.</source>
          <target state="translated">Este método deve produzir uma expressão com um tipo de resultado booliano que fornece a lógica da condição de junção.</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /&gt;</ph> that joins the sets specified by the left and right expressions, on the specified join condition, using LeftOuterJoin as the <ph id="ph2">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /&gt;</ph>.</source>
          <target state="translated">Cria uma nova <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /&gt;</ph> que une os conjuntos especificados pelas expressões left e right, na condição de junção especificada, usando LeftOuterJoin como o <ph id="ph2">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /&gt;</ph> that specifies the left set argument.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /&gt;</ph> que especifica o argumento de conjunto left.</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /&gt;</ph> that specifies the right set argument.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /&gt;</ph> que especifica o argumento de conjunto direito.</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the condition on which to join.</source>
          <target state="translated">Uma expressão que especifica a condição na qual se unir.</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /&gt;</ph> that joins the sets specified by the left and right expression bindings, on the specified join condition, using LeftOuterJoin as the <ph id="ph2">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /&gt;</ph>.</source>
          <target state="translated">Cria uma nova <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /&gt;</ph> que une os conjuntos especificados pelas associações de expressão left e right, na condição de junção especificada, usando LeftOuterJoin como o <ph id="ph2">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThan(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the left argument.</source>
          <target state="translated">Uma expressão que especifica o argumento left.</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThan(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the right argument.</source>
          <target state="translated">Uma expressão que especifica o argumento direito.</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThan(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /&gt;</ph> that determines whether the left argument is less than the right argument.</source>
          <target state="translated">Cria uma nova <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /&gt;</ph> que determina se o argumento left é menor que o argumento right.</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThanOrEqual(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the left argument.</source>
          <target state="translated">Uma expressão que especifica o argumento left.</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThanOrEqual(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the right argument.</source>
          <target state="translated">Uma expressão que especifica o argumento direito.</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThanOrEqual(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /&gt;</ph> that determines whether the left argument is less than or equal to the right argument.</source>
          <target state="translated">Cria uma nova <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /&gt;</ph> que determina se o argumento left é menor ou igual ao argumento right.</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the input string.</source>
          <target state="translated">Uma expressão que especifica a cadeia de caracteres de entrada.</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the pattern string.</source>
          <target state="translated">Uma expressão que especifica a cadeia de caracteres de padrão.</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" /&gt;</ph> that compares the specified input string to the given pattern.</source>
          <target state="translated">Cria uma nova <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" /&gt;</ph> que compara a cadeia de caracteres de entrada especificada ao padrão fornecido.</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the input string.</source>
          <target state="translated">Uma expressão que especifica a cadeia de caracteres de entrada.</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the pattern string.</source>
          <target state="translated">Uma expressão que especifica a cadeia de caracteres de padrão.</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An optional expression that specifies the escape string.</source>
          <target state="translated">Uma expressão opcional que especifica a cadeia de caracteres de escape.</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" /&gt;</ph> that compares the specified input string to the given pattern using the optional escape.</source>
          <target state="translated">Cria uma nova <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" /&gt;</ph> que compara a cadeia de caracteres de entrada especificada usando o escape opcional.</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Limit(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the input collection.</source>
          <target state="translated">Uma expressão que especifica a coleção de entrada.</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Limit(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the limit value.</source>
          <target state="translated">Uma expressão que especifica o valor do limite.</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Limit(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbLimitExpression" /&gt;</ph> that restricts the number of elements in the Argument collection to the specified count Limit value.</source>
          <target state="translated">Cria uma nova <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbLimitExpression" /&gt;</ph> que restringe o número de elementos na coleção de argumentos para o valor do limite da contagem especificada.</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Limit(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Tied results are not included in the output.</source>
          <target state="translated">Resultados vinculados não são incluídos na saída.</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Minus(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the left argument.</source>
          <target state="translated">Uma expressão que especifica o argumento left.</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Minus(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the right argument.</source>
          <target state="translated">Uma expressão que especifica o argumento direito.</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Minus(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /&gt;</ph> that subtracts the right argument from the left argument.</source>
          <target state="translated">Cria uma nova <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /&gt;</ph> que subtrai o argumento right do argumento left.</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Modulo(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the left argument.</source>
          <target state="translated">Uma expressão que especifica o argumento left.</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Modulo(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the right argument.</source>
          <target state="translated">Uma expressão que especifica o argumento direito.</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Modulo(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /&gt;</ph> that computes the remainder of the left argument divided by the right argument.</source>
          <target state="translated">Cria uma nova <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /&gt;</ph> que calcula o restante do argumento left dividido pelo argumento right.</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Multiply(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the left argument.</source>
          <target state="translated">Uma expressão que especifica o argumento left.</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Multiply(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the right argument.</source>
          <target state="translated">Uma expressão que especifica o argumento direito.</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Multiply(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /&gt;</ph> that multiplies the left argument by the right argument.</source>
          <target state="translated">Cria uma nova <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /&gt;</ph> que multiplica o argumento left pelo argumento right.</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.RelationshipEndMember,System.Data.Metadata.Edm.RelationshipEndMember)">
          <source>An expression that specifies the instance from which navigation should occur.</source>
          <target state="translated">Uma expressão que especifica a instância da qual a navegação deve ocorrer.</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.RelationshipEndMember,System.Data.Metadata.Edm.RelationshipEndMember)">
          <source>Metadata for the property that represents the end of the relationship from which navigation should occur.</source>
          <target state="translated">Metadados para a propriedade que representa a extremidade da relação da qual a navegação deve ocorrer.</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.RelationshipEndMember,System.Data.Metadata.Edm.RelationshipEndMember)">
          <source>Metadata for the property that represents the end of the relationship to which navigation should occur.</source>
          <target state="translated">Metadados para a propriedade que representa a extremidade da relação para a qual a navegação deve ocorrer.</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.RelationshipEndMember,System.Data.Metadata.Edm.RelationshipEndMember)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" /&gt;</ph> representing the navigation of a composition or association relationship.</source>
          <target state="translated">Cria uma nova <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" /&gt;</ph> que representa o painel de navegação de uma relação de composição ou de associação.</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Metadata.Edm.RelationshipType,System.String,System.String,System.Data.Common.CommandTrees.DbExpression)">
          <source>Metadata for the relation type that represents the relationship.</source>
          <target state="translated">Metadados para o tipo de relação que representa a relação.</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Metadata.Edm.RelationshipType,System.String,System.String,System.Data.Common.CommandTrees.DbExpression)">
          <source>The name of the property of the relation type that represents the end of the relationship from which navigation should occur.</source>
          <target state="translated">O nome da propriedade do tipo de relação que representa a extremidade da relação da qual a navegação deve ocorrer.</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Metadata.Edm.RelationshipType,System.String,System.String,System.Data.Common.CommandTrees.DbExpression)">
          <source>The name of the property of the relation type that represents the end of the relationship to which navigation should occur.</source>
          <target state="translated">O nome da propriedade do tipo de relação que representa a extremidade da relação para a qual a navegação deve ocorrer.</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Metadata.Edm.RelationshipType,System.String,System.String,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression the specifies the instance from which naviagtion should occur.</source>
          <target state="translated">Uma expressão que especifica a instância da qual a navegação deve ocorrer.</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Metadata.Edm.RelationshipType,System.String,System.String,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" /&gt;</ph> representing the navigation of a composition or association relationship.</source>
          <target state="translated">Cria uma nova <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" /&gt;</ph> que representa o painel de navegação de uma relação de composição ou de associação.</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Negate(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the argument.</source>
          <target state="translated">Uma expressão que especifica o argumento.</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Negate(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /&gt;</ph> that negates the value of the argument.</source>
          <target state="translated">Cria uma nova <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /&gt;</ph> que nega o valor do argumento.</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
          <source>The type of the new instance.</source>
          <target state="translated">O tipo da nova instância.</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
          <source>Expressions that specify values of the new instances, interpreted according to the instance's type.</source>
          <target state="translated">Expressões que especificam valores de novas instâncias, interpretadas de acordo com o tipo da instância.</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /&gt;</ph>.</source>
          <target state="translated">Cria um novo <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
          <source>If the type argument is a collection type, the arguments specify the elements of the collection.</source>
          <target state="translated">Se o argumento de tipo é um tipo de coleção, os argumentos especificam os elementos da coleção.</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
          <source>Otherwise the arguments are used as property or column values in the new instance.</source>
          <target state="translated">Caso contrário, os argumentos são usados como valores de propriedade ou de coluna na nova instância.</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage,System.Data.Common.CommandTrees.DbExpression[])">
          <source>The type of the new instance.</source>
          <target state="translated">O tipo da nova instância.</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage,System.Data.Common.CommandTrees.DbExpression[])">
          <source>Expressions that specify values of the new instances, interpreted according to the instance's type.</source>
          <target state="translated">Expressões que especificam valores de novas instâncias, interpretadas de acordo com o tipo da instância.</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage,System.Data.Common.CommandTrees.DbExpression[])">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /&gt;</ph>.</source>
          <target state="translated">Cria um novo <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage,System.Data.Common.CommandTrees.DbExpression[])">
          <source>If the type argument is a collection type, the arguments specify the elements of the collection.</source>
          <target state="translated">Se o argumento de tipo é um tipo de coleção, os argumentos especificam os elementos da coleção.</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage,System.Data.Common.CommandTrees.DbExpression[])">
          <source>Otherwise the arguments are used as property or column values in the new instance.</source>
          <target state="translated">Caso contrário, os argumentos são usados como valores de propriedade ou de coluna na nova instância.</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewEmptyCollection(System.Data.Metadata.Edm.TypeUsage)">
          <source>The type metadata for the collection to create</source>
          <target state="translated">Os metadados de tipo da coleção a ser criada</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewEmptyCollection(System.Data.Metadata.Edm.TypeUsage)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /&gt;</ph> that constructs an empty collection of the specified collection type.</source>
          <target state="translated">Cria uma nova <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /&gt;</ph> que constrói uma coleção vazia do tipo de coleção especificado.</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Not(System.Data.Common.CommandTrees.DbExpression)">
          <source>A Boolean expression that specifies the argument.</source>
          <target state="translated">Uma expressão booliana que especifica o argumento.</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Not(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbNotExpression" /&gt;</ph> that performs the logical negation of the given argument.</source>
          <target state="translated">Cria um <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbNotExpression" /&gt;</ph> que executa a negação lógica do argumento fornecido.</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NotEqual(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the left argument.</source>
          <target state="translated">Uma expressão que especifica o argumento left.</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NotEqual(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the right argument.</source>
          <target state="translated">Uma expressão que especifica o argumento direito.</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NotEqual(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /&gt;</ph> that compares the left and right arguments for inequality.</source>
          <target state="translated">Cria uma nova <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /&gt;</ph> que compara os argumentos left e right quanto à desigualdade.</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Null(System.Data.Metadata.Edm.TypeUsage)">
          <source>The type of the null value.</source>
          <target state="translated">O tipo do valor nulo.</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Null(System.Data.Metadata.Edm.TypeUsage)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbNullExpression" /&gt;</ph>, which represents a typed null value.</source>
          <target state="translated">Cria uma nova <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbNullExpression" /&gt;</ph> que representa um valor nulo com tipo.</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfType(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph> that specifies the input set.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph> que especifica o conjunto de entrada.</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfType(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
          <source>Type metadata for the type that elements of the input set must have to be included in the resulting set.</source>
          <target state="translated">Os metadados de tipo para o tipo que os elementos do conjunto de entrada devem ter para serem incluídos no conjunto resultante.</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfType(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbOfTypeExpression" /&gt;</ph> that produces a set consisting of the elements of the given input set that are of the specified type.</source>
          <target state="translated">Cria uma nova <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbOfTypeExpression" /&gt;</ph> que produz um conjunto que consiste dos elementos do conjunto de entrada fornecido que são do tipo especificado.</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfTypeOnly(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph> that specifies the input set.</source>
          <target state="translated">Uma <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph> que especifica o conjunto de entrada.</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfTypeOnly(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
          <source>Type metadata for the type that elements of the input set must match exactly to be included in the resulting set.</source>
          <target state="translated">Os metadados de tipo para o tipo ao qual os elementos do conjunto de entrada devem corresponder exatamente para serem incluídos no conjunto resultante.</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfTypeOnly(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbOfTypeExpression" /&gt;</ph> that produces a set consisting of the elements of the given input set that are of exactly the specified type.</source>
          <target state="translated">Cria uma nova <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbOfTypeExpression" /&gt;</ph> que produz um conjunto que consiste dos elementos do conjunto de entrada fornecido que são exatamente do tipo especificado.</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Or(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A Boolean expression that specifies the left argument.</source>
          <target state="translated">Uma expressão booliana que especifica o argumento left.</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Or(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A Boolean expression that specifies the right argument.</source>
          <target state="translated">Uma expressão booliana que especifica o argumento direito.</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Or(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates an <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbOrExpression" /&gt;</ph> that performs the logical Or of the left and right arguments.</source>
          <target state="translated">Cria uma <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbOrExpression" /&gt;</ph> que executa a Or lógica dos argumentos left e right.</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>An expression that specifies the input set.</source>
          <target state="translated">Uma expressão que especifica o conjunto de entrada.</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>A method that specifies how to derive the sort key expression given a member of the input set.</source>
          <target state="translated">Um método que especifica como derivar a expressão de chave de classificação fornecida a um membro do conjunto de entrada.</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>This method must produce an expression with an order-comparable result type that provides the sort key definition.</source>
          <target state="translated">Este método deve produzir uma expressão com um tipo de resultado comparável quanto à ordem que fornece a definição da chave de classificação.</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /&gt;</ph> that sorts the given input set by the specified sort key, with ascending sort order and default collation.</source>
          <target state="translated">Cria uma nova <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /&gt;</ph> que classifica o conjunto de entrada fornecido pela chave de classificação especificada, com ordem de classificação crescente e agrupamento padrão.</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)">
          <source>An expression that specifies the input set.</source>
          <target state="translated">Uma expressão que especifica o conjunto de entrada.</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)">
          <source>A method that specifies how to derive the sort key expression given a member of the input set.</source>
          <target state="translated">Um método que especifica como derivar a expressão de chave de classificação fornecida a um membro do conjunto de entrada.</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)">
          <source>This method must produce an expression with an order-comparable result type that provides the sort key definition.</source>
          <target state="translated">Este método deve produzir uma expressão com um tipo de resultado comparável quanto à ordem que fornece a definição da chave de classificação.</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)">
          <source>The collation to sort under.</source>
          <target state="translated">O agrupamento sob o qual classificar.</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /&gt;</ph> that sorts the given input set by the specified sort key, with ascending sort order and the specified collation.</source>
          <target state="translated">Cria uma nova <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /&gt;</ph> que classifica o conjunto de entrada fornecido pela chave de classificação especificada, com ordem de classificação crescente e o agrupamento especificado.</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>An expression that specifies the input set.</source>
          <target state="translated">Uma expressão que especifica o conjunto de entrada.</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>A method that specifies how to derive the sort key expression given a member of the input set.</source>
          <target state="translated">Um método que especifica como derivar a expressão de chave de classificação fornecida a um membro do conjunto de entrada.</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>This method must produce an expression with an order-comparable result type that provides the sort key definition.</source>
          <target state="translated">Este método deve produzir uma expressão com um tipo de resultado comparável quanto à ordem que fornece a definição da chave de classificação.</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /&gt;</ph> that sorts the given input set by the specified sort key, with descending sort order and default collation.</source>
          <target state="translated">Cria uma nova <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /&gt;</ph> que classifica o conjunto de entrada fornecido pela chave de classificação especificada, com ordem de classificação decrescente e agrupamento padrão.</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)">
          <source>An expression that specifies the input set.</source>
          <target state="translated">Uma expressão que especifica o conjunto de entrada.</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)">
          <source>A method that specifies how to derive the sort key expression given a member of the input set.</source>
          <target state="translated">Um método que especifica como derivar a expressão de chave de classificação fornecida a um membro do conjunto de entrada.</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)">
          <source>This method must produce an expression with an order-comparable result type that provides the sort key definition.</source>
          <target state="translated">Este método deve produzir uma expressão com um tipo de resultado comparável quanto à ordem que fornece a definição da chave de classificação.</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)">
          <source>The collation to sort under.</source>
          <target state="translated">O agrupamento sob o qual classificar.</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /&gt;</ph> that sorts the given input set by the specified sort key, with descending sort order and the specified collation.</source>
          <target state="translated">Cria uma nova <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /&gt;</ph> que classifica o conjunto de entrada fornecido pela chave de classificação especificada, com ordem de classificação decrescente e o agrupamento especificado.</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph> that specifies the input set.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph> que especifica o conjunto de entrada.</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})">
          <source>A method that specifies the logic to evaluate once for each member of the input set.</source>
          <target state="translated">Um método que especifica a lógica a ser avaliada uma vez para cada membro do conjunto de entrada.</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /&gt;</ph> that evaluates the given <ph id="ph2">&lt;paramref name="apply" /&gt;</ph> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.</source>
          <target state="translated">Cria uma nova <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /&gt;</ph> que avalia a expressão <ph id="ph2">&lt;paramref name="apply" /&gt;</ph> fornecida uma vez para cada elemento de um determinado conjunto de entrada, produzindo um conjunto de linhas com colunas input e apply correspondentes.</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})">
          <source>Rows for which <ph id="ph1">&lt;paramref name="apply" /&gt;</ph> evaluates to an empty set have an apply column value of <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Linhas para as quais <ph id="ph1">&lt;paramref name="apply" /&gt;</ph> é avaliada para um conjunto vazio têm um valor de coluna apply de <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /&gt;</ph> that specifies the input set.</source>
          <target state="translated">Uma <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /&gt;</ph> que especifica o conjunto de entrada.</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /&gt;</ph> that specifies logic to evaluate once for each member of the input set.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /&gt;</ph> que especifica a lógica a ser avaliada uma vez para cada membro do conjunto de entrada.</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /&gt;</ph> that evaluates the given <ph id="ph2">&lt;paramref name="apply" /&gt;</ph> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.</source>
          <target state="translated">Cria uma nova <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /&gt;</ph> que avalia a expressão <ph id="ph2">&lt;paramref name="apply" /&gt;</ph> fornecida uma vez para cada elemento de um determinado conjunto de entrada, produzindo um conjunto de linhas com colunas input e apply correspondentes.</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding)">
          <source>Rows for which <ph id="ph1">&lt;paramref name="apply" /&gt;</ph> evaluates to an empty set have an apply column value of <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Linhas para as quais <ph id="ph1">&lt;paramref name="apply" /&gt;</ph> é avaliada para um conjunto vazio têm um valor de coluna apply de <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Parameter(System.Data.Metadata.Edm.TypeUsage,System.String)">
          <source>The type of the referenced parameter.</source>
          <target state="translated">O tipo do parâmetro referenciado.</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Parameter(System.Data.Metadata.Edm.TypeUsage,System.String)">
          <source>The name of the referenced parameter.</source>
          <target state="translated">O nome do parâmetro referenciado.</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Parameter(System.Data.Metadata.Edm.TypeUsage,System.String)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" /&gt;</ph> that references a parameter with the specified name and type.</source>
          <target state="translated">Cria uma nova <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" /&gt;</ph> que faz referência a um parâmetro com o nome e o tipo especificados.</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Plus(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the left argument.</source>
          <target state="translated">Uma expressão que especifica o argumento left.</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Plus(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the right argument.</source>
          <target state="translated">Uma expressão que especifica o argumento direito.</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Plus(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /&gt;</ph> that adds the left argument to the right argument.</source>
          <target state="translated">Cria uma nova <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /&gt;</ph> que adiciona o argumento left ao argumento right.</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Project(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression binding that specifies the input set.</source>
          <target state="translated">Uma expressão de associação que especifica o conjunto de entrada.</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Project(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression to project over the set.</source>
          <target state="translated">Uma expressão a projetar sobre o conjunto.</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Project(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /&gt;</ph> that projects the specified expression over the given input set.</source>
          <target state="translated">Cria uma nova <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /&gt;</ph> que projeta a expressão especificada no conjunto de entrada fornecido.</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EdmProperty)">
          <source>The instance from which to retrieve the property.</source>
          <target state="translated">A instância da qual recuperar a propriedade.</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EdmProperty)">
          <source>May be null if the property is static.</source>
          <target state="translated">Pode ser nulo se a propriedade é estática.</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EdmProperty)">
          <source>Metadata for the property to retrieve.</source>
          <target state="translated">Os metadados da propriedade a ser recuperada.</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EdmProperty)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /&gt;</ph> representing the retrieval of the specified property.</source>
          <target state="translated">Cria uma nova <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /&gt;</ph> que representa a recuperação da propriedade especificada.</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.NavigationProperty)">
          <source>The instance from which to retrieve the navigation property.</source>
          <target state="translated">A instância da qual recuperar a propriedade de navegação.</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.NavigationProperty)">
          <source>Metadata for the navigation property to retrieve.</source>
          <target state="translated">Metadados da propriedade de navegação a ser recuperada.</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.NavigationProperty)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /&gt;</ph> representing the retrieval of the specified navigation property.</source>
          <target state="translated">Cria uma nova <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /&gt;</ph> que representa a recuperação da propriedade de navegação especificada.</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.RelationshipEndMember)">
          <source>The instance from which to retrieve the relationship end member.</source>
          <target state="translated">A instância da qual recuperar o membro de extremidade da relação.</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.RelationshipEndMember)">
          <source>Metadata for the relationship end member to retrieve.</source>
          <target state="translated">Metadados para o membro de extremidade da relação a ser recuperado.</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.RelationshipEndMember)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /&gt;</ph> representing the retrieval of the specified relationship end member.</source>
          <target state="translated">Cria uma nova <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /&gt;</ph> que representa a recuperação do membro de extremidade da relação especificado.</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.String)">
          <source>The instance from which to retrieve the property.</source>
          <target state="translated">A instância da qual recuperar a propriedade.</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.String)">
          <source>The name of the property to retrieve.</source>
          <target state="translated">O nome da propriedade a ser recuperada.</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.String)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /&gt;</ph> representing the retrieval of the instance property with the specified name from the given instance.</source>
          <target state="translated">Cria uma nova <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /&gt;</ph> que representa a recuperação de propriedade da instância com o nome especificado da instância fornecida.</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression)">
          <source>The Entity set in which the referenced element resides.</source>
          <target state="translated">O conjunto de entidades em que o elemento referenciado reside.</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph> that constructs a record with columns that match (in number, type, and order) the Key properties of the referenced Entity type.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph> que constrói um registro com colunas que correspondem (em número, tipo e ordem) às propriedades de chave do tipo de entidade referenciado.</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /&gt;</ph> that encodes a reference to a specific Entity based on key values.</source>
          <target state="translated">Cria uma nova <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /&gt;</ph> que codifica uma referência a uma entidade específica com base em valores de chave.</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EntityType)">
          <source>The Entity set in which the referenced element resides.</source>
          <target state="translated">O conjunto de entidades em que o elemento referenciado reside.</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EntityType)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph> that constructs a record with columns that match (in number, type, and order) the Key properties of the referenced Entity type.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph> que constrói um registro com colunas que correspondem (em número, tipo e ordem) às propriedades de chave do tipo de entidade referenciado.</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EntityType)">
          <source>The type of the Entity that the reference should refer to.</source>
          <target state="translated">O tipo da entidade à qual a referência deve referenciar.</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EntityType)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /&gt;</ph> that encodes a reference to a specific Entity based on key values.</source>
          <target state="translated">Cria uma nova <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /&gt;</ph> que codifica uma referência a uma entidade específica com base em valores de chave.</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Scan(System.Data.Metadata.Edm.EntitySetBase)">
          <source>Metadata for the entity or relationship set to reference.</source>
          <target state="translated">Metadados para o conjunto de entidades ou de relações a ser referenciado.</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Scan(System.Data.Metadata.Edm.EntitySetBase)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbScanExpression" /&gt;</ph> that references the specified entity or relationship set.</source>
          <target state="translated">Cria uma nova <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbScanExpression" /&gt;</ph> que referencia o conjunto de entidades ou de relações especificado.</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Select``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,``0})">
          <source>The method result type of <bpt id="p1">&lt;c&gt;</bpt>projection<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo de resultado do método de <bpt id="p1">&lt;c&gt;</bpt>projeção<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Select``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,``0})">
          <source>An expression that specifies the input set.</source>
          <target state="translated">Uma expressão que especifica o conjunto de entrada.</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Select``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,``0})">
          <source>A method that specifies how to derive the projected expression given a member of the input set.</source>
          <target state="translated">Um método que especifica como derivar a expressão projetada fornecida a um membro do conjunto de entrada.</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Select``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,``0})">
          <source>This method must produce an instance of a type that is compatible with Select and can be resolved into a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph>.</source>
          <target state="translated">Este método deve produzir uma instância de um tipo compatível com Select e pode ser resolvido em um <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Select``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,``0})">
          <source>Compatibility requirements for <bpt id="p1">&lt;c&gt;</bpt>TProjection<ept id="p1">&lt;/c&gt;</ept> are described in remarks.</source>
          <target state="translated">Requisitos de compatibilidade para <bpt id="p1">&lt;c&gt;</bpt>TProjection<ept id="p1">&lt;/c&gt;</ept> são descritos nos comentários.</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Select``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,``0})">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /&gt;</ph> that selects the specified expression over the given input set.</source>
          <target state="translated">Cria uma nova <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /&gt;</ph> que seleciona a expressão especificada no conjunto de entrada fornecido.</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph> that specifies the input set.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph> que especifica o conjunto de entrada.</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>A method that represents the logic to evaluate once for each member of the input set.</source>
          <target state="translated">Um método que representa a lógica a ser avaliada uma vez para cada membro do conjunto de entrada.</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /&gt;</ph> that evaluates the given <ph id="ph2">&lt;paramref name="apply" /&gt;</ph> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.</source>
          <target state="translated">Cria uma nova <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /&gt;</ph> que avalia a expressão <ph id="ph2">&lt;paramref name="apply" /&gt;</ph> fornecida uma vez para cada elemento de um determinado conjunto de entrada, produzindo um conjunto de linhas com colunas input e apply correspondentes.</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>Rows for which <ph id="ph1">&lt;paramref name="apply" /&gt;</ph> evaluates to an empty set are not included.</source>
          <target state="translated">Linhas para as quais <ph id="ph1">&lt;paramref name="apply" /&gt;</ph> é avaliado para um conjunto vazio não são incluídas.</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /&gt;</ph> is then created that selects the <ph id="ph2">&lt;paramref name="apply" /&gt;</ph> column from each row, producing the overall collection of <ph id="ph3">&lt;paramref name="apply" /&gt;</ph> results.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /&gt;</ph> é criado, o qual seleciona a coluna <ph id="ph2">&lt;paramref name="apply" /&gt;</ph> de cada linha, produzindo a coleção geral de resultados <ph id="ph3">&lt;paramref name="apply" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})">
          <source>The method result type of <bpt id="p1">&lt;c&gt;</bpt>selector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo de resultado do método de <bpt id="p1">&lt;c&gt;</bpt>seletor<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph> that specifies the input set.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph> que especifica o conjunto de entrada.</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})">
          <source>A method that represents the logic to evaluate once for each member of the input set.</source>
          <target state="translated">Um método que representa a lógica a ser avaliada uma vez para cada membro do conjunto de entrada.</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})">
          <source>A method that specifies how an element of the result set should be derived given an element of the input and apply sets.</source>
          <target state="translated">Um método que especifica como um elemento do conjunto de resultados deve ser derivado de um elemento fornecido dos conjuntos input e apply.</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})">
          <source>This method must produce an instance of a type that is compatible with SelectMany and can be resolved into a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph>.</source>
          <target state="translated">Este método deve produzir uma instância de um tipo compatível com SelectMany e pode ser resolvido em um <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})">
          <source>Compatibility requirements for <bpt id="p1">&lt;c&gt;</bpt>TSelector<ept id="p1">&lt;/c&gt;</ept> are described in remarks.</source>
          <target state="translated">Os requisitos de compatibilidade para <bpt id="p1">&lt;c&gt;</bpt>TSelector<ept id="p1">&lt;/c&gt;</ept> estão descritos nos comentários.</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /&gt;</ph> that evaluates the given <ph id="ph2">&lt;paramref name="apply" /&gt;</ph> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.</source>
          <target state="translated">Cria uma nova <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /&gt;</ph> que avalia a expressão <ph id="ph2">&lt;paramref name="apply" /&gt;</ph> fornecida uma vez para cada elemento de um determinado conjunto de entrada, produzindo um conjunto de linhas com colunas input e apply correspondentes.</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})">
          <source>Rows for which <ph id="ph1">&lt;paramref name="apply" /&gt;</ph> evaluates to an empty set are not included.</source>
          <target state="translated">Linhas para as quais <ph id="ph1">&lt;paramref name="apply" /&gt;</ph> é avaliado para um conjunto vazio não são incluídas.</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /&gt;</ph> is then created that selects the specified <ph id="ph2">&lt;paramref name="selector" /&gt;</ph> over each row, producing the overall collection of results.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /&gt;</ph> é então criado, o qual seleciona o <ph id="ph2">&lt;paramref name="selector" /&gt;</ph> especificado sobre cada linha, produzindo a coleção geral de resultados.</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(System.Data.Common.CommandTrees.DbExpressionBinding,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause},System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression binding that specifies the input set.</source>
          <target state="translated">Uma expressão de associação que especifica o conjunto de entrada.</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(System.Data.Common.CommandTrees.DbExpressionBinding,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause},System.Data.Common.CommandTrees.DbExpression)">
          <source>A list of sort specifications that determine how the elements of the input set should be sorted.</source>
          <target state="translated">Uma lista de especificações de classificação que determinam como os elementos do conjunto de entrada devem ser classificados.</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(System.Data.Common.CommandTrees.DbExpressionBinding,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause},System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression the specifies how many elements of the ordered set to skip.</source>
          <target state="translated">Uma expressão que especifica quantos elementos do conjunto ordenado devem ser ignorados.</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(System.Data.Common.CommandTrees.DbExpressionBinding,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause},System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSkipExpression" /&gt;</ph> that sorts the given input set by the given sort specifications before skipping the specified number of elements.</source>
          <target state="translated">Cria uma nova <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSkipExpression" /&gt;</ph> que classifica o conjunto de entrada fornecido pelas especificações de classificação fornecidas antes de ignorar o número de elementos especificado.</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(System.Data.Common.CommandTrees.DbSortExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /&gt;</ph> that specifies the sorted input set.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /&gt;</ph> que especifica o conjunto de entrada classificado.</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(System.Data.Common.CommandTrees.DbSortExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression the specifies how many elements of the ordered set to skip.</source>
          <target state="translated">Uma expressão que especifica quantos elementos do conjunto ordenado devem ser ignorados.</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(System.Data.Common.CommandTrees.DbSortExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSkipExpression" /&gt;</ph> that skips the specified number of elements from the given sorted input set.</source>
          <target state="translated">Cria uma nova <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSkipExpression" /&gt;</ph> que ignora o número especificado de elementos do conjunto de entrada classificado fornecido.</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Sort(System.Data.Common.CommandTrees.DbExpressionBinding,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause})">
          <source>An expression binding that specifies the input set.</source>
          <target state="translated">Uma expressão de associação que especifica o conjunto de entrada.</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Sort(System.Data.Common.CommandTrees.DbExpressionBinding,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause})">
          <source>A list of sort specifications that determine how the elements of the input set should be sorted.</source>
          <target state="translated">Uma lista de especificações de classificação que determinam como os elementos do conjunto de entrada devem ser classificados.</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Sort(System.Data.Common.CommandTrees.DbExpressionBinding,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause})">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /&gt;</ph> that sorts the given input set by the specified sort specifications.</source>
          <target state="translated">Cria um novo <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /&gt;</ph> que classifica o conjunto de entrada fornecido pelas especificações de classificação especificadas.</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Take(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the input collection.</source>
          <target state="translated">Uma expressão que especifica a coleção de entrada.</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Take(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the limit value.</source>
          <target state="translated">Uma expressão que especifica o valor do limite.</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Take(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbLimitExpression" /&gt;</ph> that restricts the number of elements in the Argument collection to the specified count Limit value.</source>
          <target state="translated">Cria uma nova <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbLimitExpression" /&gt;</ph> que restringe o número de elementos na coleção de argumentos para o valor do limite da contagem especificada.</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Take(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Tied results are not included in the output.</source>
          <target state="translated">Resultados vinculados não são incluídos na saída.</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>A DbSortExpression that specifies the ordered input set.</source>
          <target state="translated">Uma DbSortExpression que especifica o conjunto de entrada ordenado.</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>A method that specifies how to derive the additional sort key expression given a member of the input set.</source>
          <target state="translated">Um método que especifica como derivar a expressão de chave de classificação adicional fornecida a um membro do conjunto de entrada.</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>This method must produce an expression with an order-comparable result type that provides the sort key definition.</source>
          <target state="translated">Este método deve produzir uma expressão com um tipo de resultado comparável quanto à ordem que fornece a definição da chave de classificação.</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /&gt;</ph> that with a sort order that includes the sort order of the given order input set together with the specified sort key in ascending sort order and  with default collation.</source>
          <target state="translated">Cria uma nova <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /&gt;</ph> que, com uma ordem de classificação que inclui a ordem de classificação do conjunto de entrada de classificação fornecido, juntamente com a chave de classificação especificada em ordem de classificação crescente e com o agrupamento padrão.</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)">
          <source>A DbSortExpression that specifies the ordered input set.</source>
          <target state="translated">Uma DbSortExpression que especifica o conjunto de entrada ordenado.</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)">
          <source>A method that specifies how to derive the additional sort key expression given a member of the input set.</source>
          <target state="translated">Um método que especifica como derivar a expressão de chave de classificação adicional fornecida a um membro do conjunto de entrada.</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)">
          <source>This method must produce an expression with an order-comparable result type that provides the sort key definition.</source>
          <target state="translated">Este método deve produzir uma expressão com um tipo de resultado comparável quanto à ordem que fornece a definição da chave de classificação.</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)">
          <source>The collation to sort under.</source>
          <target state="translated">O agrupamento sob o qual classificar.</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /&gt;</ph> that with a sort order that includes the sort order of the given order input set together with the specified sort key in ascending sort order and  with the specified collation.</source>
          <target state="translated">Cria uma nova <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /&gt;</ph> que, com uma ordem de classificação que inclui a ordem de classificação do conjunto de entrada de classificação fornecido, juntamente com a chave de classificação especificada em ordem de classificação crescente e com o agrupamento especificado.</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>A DbSortExpression that specifies the ordered input set.</source>
          <target state="translated">Uma DbSortExpression que especifica o conjunto de entrada ordenado.</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>A method that specifies how to derive the additional sort key expression given a member of the input set.</source>
          <target state="translated">Um método que especifica como derivar a expressão de chave de classificação adicional fornecida a um membro do conjunto de entrada.</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>This method must produce an expression with an order-comparable result type that provides the sort key definition.</source>
          <target state="translated">Este método deve produzir uma expressão com um tipo de resultado comparável quanto à ordem que fornece a definição da chave de classificação.</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /&gt;</ph> that with a sort order that includes the sort order of the given order input set together with the specified sort key in descending sort order and  with default collation.</source>
          <target state="translated">Cria uma nova <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /&gt;</ph> que, com uma ordem de classificação que inclui a ordem de classificação do conjunto de entrada de classificação fornecido, juntamente com a chave de classificação especificada em ordem de classificação decrescente e com o agrupamento padrão.</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)">
          <source>A DbSortExpression that specifies the ordered input set.</source>
          <target state="translated">Uma DbSortExpression que especifica o conjunto de entrada ordenado.</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)">
          <source>A method that specifies how to derive the additional sort key expression given a member of the input set.</source>
          <target state="translated">Um método que especifica como derivar a expressão de chave de classificação adicional fornecida a um membro do conjunto de entrada.</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)">
          <source>This method must produce an expression with an order-comparable result type that provides the sort key definition.</source>
          <target state="translated">Este método deve produzir uma expressão com um tipo de resultado comparável quanto à ordem que fornece a definição da chave de classificação.</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)">
          <source>The collation to sort under.</source>
          <target state="translated">O agrupamento sob o qual classificar.</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /&gt;</ph> that with a sort order that includes the sort order of the given order input set together with the specified sort key in descending sort order and  with the specified collation.</source>
          <target state="translated">Cria uma nova <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /&gt;</ph> que, com uma ordem de classificação que inclui a ordem de classificação do conjunto de entrada de classificação fornecido, juntamente com a chave de classificação especificada em ordem de classificação decrescente e com o agrupamento especificado.</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(System.Data.Common.CommandTrees.DbExpression)">
          <source>The expression that defines the sort key.</source>
          <target state="translated">A expressão que define a chave de classificação.</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSortClause" /&gt;</ph> with an ascending sort order and default collation.</source>
          <target state="translated">Cria uma nova <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSortClause" /&gt;</ph> com ordem de classificação crescente e agrupamento padrão.</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(System.Data.Common.CommandTrees.DbExpression,System.String)">
          <source>The expression that defines the sort key.</source>
          <target state="translated">A expressão que define a chave de classificação.</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(System.Data.Common.CommandTrees.DbExpression,System.String)">
          <source>The collation to sort under.</source>
          <target state="translated">O agrupamento sob o qual classificar.</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(System.Data.Common.CommandTrees.DbExpression,System.String)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSortClause" /&gt;</ph> with an ascending sort order and the specified collation.</source>
          <target state="translated">Cria uma nova <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSortClause" /&gt;</ph> com uma ordem de classificação crescente e agrupamento padrão.</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression)">
          <source>The expression that defines the sort key.</source>
          <target state="translated">A expressão que define a chave de classificação.</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSortClause" /&gt;</ph> with a descending sort order and default collation.</source>
          <target state="translated">Cria uma nova <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSortClause" /&gt;</ph> com ordem de classificação decrescente e agrupamento padrão.</target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression,System.String)">
          <source>The expression that defines the sort key.</source>
          <target state="translated">A expressão que define a chave de classificação.</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression,System.String)">
          <source>The collation to sort under.</source>
          <target state="translated">O agrupamento sob o qual classificar.</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression,System.String)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSortClause" /&gt;</ph> with a descending sort order and the specified collation.</source>
          <target state="translated">Cria uma nova <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSortClause" /&gt;</ph> com ordem de classificação decrescente e agrupamento especificado.</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.TreatAs(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
          <source>An expression that specifies the instance.</source>
          <target state="translated">Uma expressão que especifica a instância.</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.TreatAs(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
          <source>Type metadata for the treat-as type.</source>
          <target state="translated">Tipo de metadados para o tipo tratar-como.</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.TreatAs(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbTreatExpression" /&gt;</ph>.</source>
          <target state="translated">Cria um novo <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbTreatExpression" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnaryMinus(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the argument.</source>
          <target state="translated">Uma expressão que especifica o argumento.</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnaryMinus(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /&gt;</ph> that negates the value of the argument.</source>
          <target state="translated">Cria uma nova <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /&gt;</ph> que nega o valor do argumento.</target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Union(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that defines the left set argument.</source>
          <target state="translated">Uma expressão que define o argumento de conjunto left.</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Union(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that defines the right set argument.</source>
          <target state="translated">Uma expressão que define o argumento de conjunto direito.</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Union(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph> that computes the union of the left and right set arguments with duplicates removed.</source>
          <target state="translated">Cria uma nova <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph> que calcula a união dos argumentos de conjunto left e right, removendo as duplicatas.</target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnionAll(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that defines the left set argument.</source>
          <target state="translated">Uma expressão que define o argumento de conjunto left.</target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnionAll(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that defines the right set argument.</source>
          <target state="translated">Uma expressão que define o argumento de conjunto direito.</target>       </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnionAll(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbUnionAllExpression" /&gt;</ph> that computes the union of the left and right set arguments and does not remove duplicates.</source>
          <target state="translated">Cria uma nova <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbUnionAllExpression" /&gt;</ph> que calcula a união dos argumentos de conjunto left e right e não remove as duplicatas.</target>       </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Variable(System.Data.Metadata.Edm.TypeUsage,System.String)">
          <source>The type of the referenced variable.</source>
          <target state="translated">O tipo da variável referenciada.</target>       </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Variable(System.Data.Metadata.Edm.TypeUsage,System.String)">
          <source>The name of the referenced variable.</source>
          <target state="translated">O nome da variável referenciada.</target>       </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Variable(System.Data.Metadata.Edm.TypeUsage,System.String)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" /&gt;</ph> that references a variable with the specified name and type.</source>
          <target state="translated">Cria uma nova <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" /&gt;</ph> que faz referência a uma variável com o nome e o tipo especificados.</target>       </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Where(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>An expression that specifies the input set.</source>
          <target state="translated">Uma expressão que especifica o conjunto de entrada.</target>       </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Where(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>A method representing the predicate to evaluate for each member of the input set.</source>
          <target state="translated">Um método que representa o predicado a ser avaliado para cada membro do conjunto de entrada.</target>       </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Where(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>This method must produce an expression with a Boolean result type that provides the predicate logic.</source>
          <target state="translated">Este método deve produzir uma expressão com um tipo de resultado booliano que fornece a lógica de predicado.</target>       </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Where(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFilterExpression" /&gt;</ph> that filters the elements in the given input set using the specified predicate.</source>
          <target state="translated">Cria uma nova <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFilterExpression" /&gt;</ph> que filtra os elementos no conjunto de entrada fornecido usando o predicado especificado.</target>       </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Abs(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the numeric value.</source>
          <target state="translated">Uma expressão que especifica o valor numérico.</target>       </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Abs(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Abs' function with the specified argument, which must each have a numeric result type.</source>
          <target state="translated">Cria um <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função 'Abs' canônica com o argumento especificado, que cada um deve ter um tipo de resultado numérico.</target>       </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Abs(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the result type of <bpt id="p1">**</bpt>value<ept id="p1">**</ept>.</source>
          <target state="translated">O tipo de resultado da expressão é o mesmo que o tipo de resultado de <bpt id="p1">**</bpt>value<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddDays(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the value to which <bpt id="p1">**</bpt>addValue<ept id="p1">**</ept>should be added.</source>
          <target state="translated">Uma expressão que especifica o valor ao qual <bpt id="p1">**</bpt>addValue<ept id="p1">**</ept> deve ser adicionado.</target>       </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddDays(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the number of days to add to <bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept>.</source>
          <target state="translated">Uma expressão que especifica o número de dias a ser adicionado a <bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddDays(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'AddDays' function with the specified arguments, which must have DateTime or DateTimeOffset and integer result types.</source>
          <target state="translated">Cria um <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função 'AddDays' canônica com os argumentos especificados, que deve ter os tipos de resultado de inteiro e DateTime ou DateTimeOffset.</target>       </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddDays(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the result type of <bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept>.</source>
          <target state="translated">O tipo de resultado da expressão é o mesmo que o tipo de resultado de <bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddHours(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the value to which <bpt id="p1">**</bpt>addValue<ept id="p1">**</ept>should be added.</source>
          <target state="translated">Uma expressão que especifica o valor ao qual <bpt id="p1">**</bpt>addValue<ept id="p1">**</ept> deve ser adicionado.</target>       </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddHours(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the number of hours to add to <bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept>.</source>
          <target state="translated">Uma expressão que especifica o número de horas a serem adicionadas a <bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddHours(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'AddHours' function with the specified arguments, which must have DateTime, DateTimeOffset or Time, and integer result types.</source>
          <target state="translated">Cria um <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função 'AddHours' canônica com os argumentos especificados, que deve ter os tipos de resultado de inteiro e DateTime, DateTimeOffset ou Time.</target>       </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddHours(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the result type of <bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept>.</source>
          <target state="translated">O tipo de resultado da expressão é o mesmo que o tipo de resultado de <bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMicroseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the value to which <bpt id="p1">**</bpt>addValue<ept id="p1">**</ept>should be added.</source>
          <target state="translated">Uma expressão que especifica o valor ao qual <bpt id="p1">**</bpt>addValue<ept id="p1">**</ept> deve ser adicionado.</target>       </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMicroseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the number of microseconds to add to <bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept>.</source>
          <target state="translated">Uma expressão que especifica o número de microssegundos a serem adicionadas a <bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMicroseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'AddMicroseconds' function with the specified arguments, which must have DateTime, DateTimeOffset or Time, and integer result types.</source>
          <target state="translated">Cria um <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função 'AddMicroseconds' canônica com os argumentos especificados, que deve ter os tipos de resultado de inteiro e DateTime, DateTimeOffset ou Time.</target>       </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMicroseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the result type of <bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept>.</source>
          <target state="translated">O tipo de resultado da expressão é o mesmo que o tipo de resultado de <bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMilliseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the value to which <bpt id="p1">**</bpt>addValue<ept id="p1">**</ept>should be added.</source>
          <target state="translated">Uma expressão que especifica o valor ao qual <bpt id="p1">**</bpt>addValue<ept id="p1">**</ept> deve ser adicionado.</target>       </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMilliseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the number of milliseconds to add to <bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept>.</source>
          <target state="translated">Uma expressão que especifica o número de milissegundos a serem adicionadas a <bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMilliseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'AddMilliseconds' function with the specified arguments, which must have DateTime, DateTimeOffset or Time, and integer result types.</source>
          <target state="translated">Cria um <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função 'AddMilliseconds' canônica com os argumentos especificados, que deve ter os tipos de resultado de inteiro e DateTime, DateTimeOffset ou Time.</target>       </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMilliseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the result type of <bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept>.</source>
          <target state="translated">O tipo de resultado da expressão é o mesmo que o tipo de resultado de <bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMinutes(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the value to which <bpt id="p1">**</bpt>addValue<ept id="p1">**</ept>should be added.</source>
          <target state="translated">Uma expressão que especifica o valor ao qual <bpt id="p1">**</bpt>addValue<ept id="p1">**</ept> deve ser adicionado.</target>       </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMinutes(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the number of minutes to add to <bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept>.</source>
          <target state="translated">Uma expressão que especifica o número de minutos a serem adicionadas a <bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMinutes(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'AddMinutes' function with the specified arguments, which must have DateTime, DateTimeOffset or Time, and integer result types.</source>
          <target state="translated">Cria um <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função 'AddMinutes' canônica com os argumentos especificados, que deve ter os tipos de resultado de inteiro e DateTime, DateTimeOffset ou Time.</target>       </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMinutes(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the result type of <bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept>.</source>
          <target state="translated">O tipo de resultado da expressão é o mesmo que o tipo de resultado de <bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMonths(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the value to which <bpt id="p1">**</bpt>addValue<ept id="p1">**</ept>should be added.</source>
          <target state="translated">Uma expressão que especifica o valor ao qual <bpt id="p1">**</bpt>addValue<ept id="p1">**</ept> deve ser adicionado.</target>       </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMonths(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the number of months to add to <bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept>.</source>
          <target state="translated">Uma expressão que especifica o número de meses a ser adicionado a <bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMonths(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'AddMonths' function with the specified arguments, which must have DateTime or DateTimeOffset and integer result types.</source>
          <target state="translated">Cria um <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função 'AddMonths' canônica com os argumentos especificados, que deve ter os tipos de resultado de inteiro e DateTime ou DateTimeOffset.</target>       </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMonths(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the result type of <bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept>.</source>
          <target state="translated">O tipo de resultado da expressão é o mesmo que o tipo de resultado de <bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddNanoseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the value to which <bpt id="p1">**</bpt>addValue<ept id="p1">**</ept>should be added.</source>
          <target state="translated">Uma expressão que especifica o valor ao qual <bpt id="p1">**</bpt>addValue<ept id="p1">**</ept> deve ser adicionado.</target>       </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddNanoseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the number of nanoseconds to add to <bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept>.</source>
          <target state="translated">Uma expressão que especifica o número de nanossegundos a serem adicionadas a <bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddNanoseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'AddNanoseconds' function with the specified arguments, which must have DateTime, DateTimeOffset or Time, and integer result types.</source>
          <target state="translated">Cria um <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função 'AddNanoseconds' canônica com os argumentos especificados, que deve ter os tipos de resultado de inteiro e DateTime, DateTimeOffset ou Time.</target>       </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddNanoseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the result type of <bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept>.</source>
          <target state="translated">O tipo de resultado da expressão é o mesmo que o tipo de resultado de <bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddSeconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the value to which <bpt id="p1">**</bpt>addValue<ept id="p1">**</ept>should be added.</source>
          <target state="translated">Uma expressão que especifica o valor ao qual <bpt id="p1">**</bpt>addValue<ept id="p1">**</ept> deve ser adicionado.</target>       </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddSeconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the number of seconds to add to <bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept>.</source>
          <target state="translated">Uma expressão que especifica o número de segundos a serem adicionadas a <bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddSeconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'AddSeconds' function with the specified arguments, which must have DateTime, DateTimeOffset or Time, and integer result types.</source>
          <target state="translated">Cria um <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função 'AddSeconds' canônica com os argumentos especificados, que deve ter os tipos de resultado de inteiro e DateTime, DateTimeOffset ou Time.</target>       </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddSeconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the result type of <bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept>.</source>
          <target state="translated">O tipo de resultado da expressão é o mesmo que o tipo de resultado de <bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddYears(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the value to which <bpt id="p1">**</bpt>addValue<ept id="p1">**</ept>should be added.</source>
          <target state="translated">Uma expressão que especifica o valor ao qual <bpt id="p1">**</bpt>addValue<ept id="p1">**</ept> deve ser adicionado.</target>       </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddYears(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the number of years to add to <bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept>.</source>
          <target state="translated">Uma expressão que especifica o número de anos a ser adicionado a <bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddYears(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'AddYears' function with the specified arguments, which must have DateTime or DateTimeOffset and integer result types.</source>
          <target state="translated">Cria um <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função 'AddYears' canônica com os argumentos especificados, que deve ter os tipos de resultado de inteiro e DateTime ou DateTimeOffset.</target>       </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddYears(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the result type of <bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept>.</source>
          <target state="translated">O tipo de resultado da expressão é o mesmo que o tipo de resultado de <bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Average(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the collection from which the average value should be computed.</source>
          <target state="translated">Uma expressão que especifica a coleção com base na qual o valor médio deve ser calculado.</target>       </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Average(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Avg' function over the specified collection.</source>
          <target state="translated">Cria um <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função 'Avg' canônica na coleção especificada.</target>       </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Average(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the element type of the collection.</source>
          <target state="translated">O tipo de resultado da expressão é o mesmo que o tipo de elemento da coleção.</target>       </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseAnd(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the first operand.</source>
          <target state="translated">Uma expressão que especifica o primeiro operando.</target>       </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseAnd(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the second operand.</source>
          <target state="translated">Uma expressão que especifica o segundo operando.</target>       </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseAnd(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'BitwiseAnd' function with the specified arguments, which must have the same integer numeric result type.</source>
          <target state="translated">Cria um <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função 'BitwiseAnd' canônica com os argumentos especificados, que deve ter o mesmo tipo de resultado numérico inteiro.</target>       </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseAnd(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the type of the arguments.</source>
          <target state="translated">O tipo de resultado da expressão é o mesmo que o tipo dos argumentos.</target>       </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseNot(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the first operand.</source>
          <target state="translated">Uma expressão que especifica o primeiro operando.</target>       </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseNot(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'BitwiseNot' function with the specified argument, which must have an integer numeric result type.</source>
          <target state="translated">Cria um <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função 'BitwiseNot' canônica com o argumento especificado, que deve ter um tipo de resultado numérico inteiro.</target>       </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseNot(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the type of the arguments.</source>
          <target state="translated">O tipo de resultado da expressão é o mesmo que o tipo dos argumentos.</target>       </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseOr(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the first operand.</source>
          <target state="translated">Uma expressão que especifica o primeiro operando.</target>       </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseOr(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the second operand.</source>
          <target state="translated">Uma expressão que especifica o segundo operando.</target>       </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseOr(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'BitwiseOr' function with the specified arguments, which must have the same integer numeric result type.</source>
          <target state="translated">Cria um <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função 'BitwiseOr' canônica com os argumentos especificados, que deve ter o mesmo tipo de resultado numérico inteiro.</target>       </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseOr(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the type of the arguments.</source>
          <target state="translated">O tipo de resultado da expressão é o mesmo que o tipo dos argumentos.</target>       </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseXor(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the first operand.</source>
          <target state="translated">Uma expressão que especifica o primeiro operando.</target>       </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseXor(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the second operand.</source>
          <target state="translated">Uma expressão que especifica o segundo operando.</target>       </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseXor(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'BitwiseXor' function with the specified arguments, which must have the same integer numeric result type.</source>
          <target state="translated">Cria um <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função 'BitwiseXor' canônica com os argumentos especificados, que deve ter o mesmo tipo de resultado numérico inteiro.</target>       </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseXor(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the type of the arguments.</source>
          <target state="translated">O tipo de resultado da expressão é o mesmo que o tipo dos argumentos.</target>       </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Ceiling(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the numeric value.</source>
          <target state="translated">Uma expressão que especifica o valor numérico.</target>       </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Ceiling(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Ceiling' function with the specified argument, which must each have a single, double or decimal result type.</source>
          <target state="translated">Cria um <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função 'Ceiling' canônica com o argumento especificado, que cada um deve ter um tipo de resultado simples, duplo ou decimal.</target>       </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Ceiling(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the result type of <bpt id="p1">**</bpt>value<ept id="p1">**</ept>.</source>
          <target state="translated">O tipo de resultado da expressão é o mesmo que o tipo de resultado de <bpt id="p1">**</bpt>value<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Concat(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the string that should appear first in the concatenated result string.</source>
          <target state="translated">Uma expressão que especifica a cadeia de caracteres que deve aparecer primeiro na cadeia de caracteres de resultado concatenado.</target>       </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Concat(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the string that should appear second in the concatenated result string.</source>
          <target state="translated">Uma expressão que especifica a cadeia de caracteres que deve aparecer em segundo na cadeia de caracteres de resultado concatenado.</target>       </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Concat(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Concat' function with the specified arguments, which must each have a string result type.</source>
          <target state="translated">Cria um <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função 'Concat' canônica com o argumento especificado, que cada um deve ter um tipo de resultado de cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Concat(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is string.</source>
          <target state="translated">O tipo de resultado da expressão é uma cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Contains(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the string to search for any occurence of <bpt id="p1">**</bpt>searchedForString<ept id="p1">**</ept>.</source>
          <target state="translated">Uma expressão que especifica a cadeia de caracteres a ser pesquisada quanto a qualquer ocorrência de <bpt id="p1">**</bpt>searchedForString<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Contains(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the string to search for in <bpt id="p1">**</bpt>searchedString<ept id="p1">**</ept>.</source>
          <target state="translated">Uma expressão que especifica a cadeia de caracteres a ser pesquisada quanto a <bpt id="p1">**</bpt>searchedString<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Contains(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Contains' function with the specified arguments, which must each have a string result type.</source>
          <target state="translated">Cria um <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função 'Contains' canônica com o argumento especificado, que cada um deve ter um tipo de resultado de cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Contains(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Boolean.</source>
          <target state="translated">O tipo de resultado da expressão é um booliano.</target>       </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Count(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the collection over which the count value should be computed.</source>
          <target state="translated">Uma expressão que especifica a coleção pela qual o valor da contagem deve ser calculado.</target>       </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Count(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Count' function over the specified collection.</source>
          <target state="translated">Cria um <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função 'Count' canônica na coleção especificada.</target>       </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Count(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Int32.</source>
          <target state="translated">O tipo de resultado da expressão é Edm.Int32.</target>       </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Day(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the value from which the day should be retrieved.</source>
          <target state="translated">Uma expressão que especifica o valor do qual o dia deve ser recuperado.</target>       </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Day(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Day' function with the specified argument, which must have a DateTime or DateTimeOffset result type.</source>
          <target state="translated">Cria um <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função 'Day' canônica com o argumento especificado, que deve ter um tipo de resultado DateTime ou DateTimeOffset.</target>       </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Day(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Int32.</source>
          <target state="translated">O tipo de resultado da expressão é Edm.Int32.</target>       </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DayOfYear(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the value from which the day within the year should be retrieved.</source>
          <target state="translated">Uma expressão que especifica o valor do qual o dia dentro do ano deve ser recuperado.</target>       </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DayOfYear(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'DayOfYear' function with the specified argument, which must have a DateTime or DateTimeOffset result type.</source>
          <target state="translated">Cria um <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função 'DayOfYear' canônica com o argumento especificado, que deve ter um tipo de resultado DateTime ou DateTimeOffset.</target>       </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DayOfYear(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Int32.</source>
          <target state="translated">O tipo de resultado da expressão é Edm.Int32.</target>       </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffDays(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the first date value argument.</source>
          <target state="translated">Uma expressão que especifica o primeiro argumento de valor de data.</target>       </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffDays(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the second date value argument.</source>
          <target state="translated">Uma expressão que especifica o segundo argumento de valor de data.</target>       </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffDays(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'DiffDays' function with the specified arguments, which must each have DateTime or DateTimeOffset result type.</source>
          <target state="translated">Cria um <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função 'DiffDays' canônica com os argumentos especificados, que cada um deve ter um tipo de resultado de DateTime ou DateTimeOffset.</target>       </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffDays(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Int32.</source>
          <target state="translated">O tipo de resultado da expressão é Edm.Int32.</target>       </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffHours(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the first time value argument.</source>
          <target state="translated">Uma expressão que especifica o primeiro argumento de valor temporal.</target>       </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffHours(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the second time value argument.</source>
          <target state="translated">Uma expressão que especifica o segundo argumento de valor temporal.</target>       </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffHours(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'DiffHours' function with the specified arguments, which must each have DateTime, DateTimeOffset or Time result type.</source>
          <target state="translated">Cria um <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função 'DiffHours' canônica com os argumentos especificados, que cada um deve ter um tipo de resultado de DateTime, DateTimeOffset ou Time.</target>       </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffHours(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Int32.</source>
          <target state="translated">O tipo de resultado da expressão é Edm.Int32.</target>       </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMicroseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the first time value argument.</source>
          <target state="translated">Uma expressão que especifica o primeiro argumento de valor temporal.</target>       </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMicroseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the second time value argument.</source>
          <target state="translated">Uma expressão que especifica o segundo argumento de valor temporal.</target>       </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMicroseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'DiffMicroseconds' function with the specified arguments, which must each have DateTime, DateTimeOffset or Time result type.</source>
          <target state="translated">Cria um <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função 'DiffMicroseconds' canônica com os argumentos especificados, que cada um deve ter um tipo de resultado de DateTime, DateTimeOffset ou Time.</target>       </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMicroseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Int32.</source>
          <target state="translated">O tipo de resultado da expressão é Edm.Int32.</target>       </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMilliseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the first time value argument.</source>
          <target state="translated">Uma expressão que especifica o primeiro argumento de valor temporal.</target>       </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMilliseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the second time value argument.</source>
          <target state="translated">Uma expressão que especifica o segundo argumento de valor temporal.</target>       </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMilliseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'DiffMilliseconds' function with the specified arguments, which must each have DateTime, DateTimeOffset or Time result type.</source>
          <target state="translated">Cria um <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função 'DiffMilliseconds' canônica com os argumentos especificados, que cada um deve ter um tipo de resultado de DateTime, DateTimeOffset ou Time.</target>       </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMilliseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Int32.</source>
          <target state="translated">O tipo de resultado da expressão é Edm.Int32.</target>       </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMinutes(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the first time value argument.</source>
          <target state="translated">Uma expressão que especifica o primeiro argumento de valor temporal.</target>       </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMinutes(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the second time value argument.</source>
          <target state="translated">Uma expressão que especifica o segundo argumento de valor temporal.</target>       </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMinutes(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'DiffMinutes' function with the specified arguments, which must each have DateTime, DateTimeOffset or Time result type.</source>
          <target state="translated">Cria um <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função 'DiffMinutes' canônica com os argumentos especificados, que cada um deve ter um tipo de resultado de DateTime, DateTimeOffset ou Time.</target>       </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMinutes(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Int32.</source>
          <target state="translated">O tipo de resultado da expressão é Edm.Int32.</target>       </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMonths(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the first date value argument.</source>
          <target state="translated">Uma expressão que especifica o primeiro argumento de valor de data.</target>       </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMonths(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the second date value argument.</source>
          <target state="translated">Uma expressão que especifica o segundo argumento de valor de data.</target>       </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMonths(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'DiffMonths' function with the specified arguments, which must each have DateTime or DateTimeOffset result type.</source>
          <target state="translated">Cria um <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função 'DiffMonths' canônica com os argumentos especificados, que cada um deve ter um tipo de resultado de DateTime, DateTimeOffset ou Time.</target>       </trans-unit>
        <trans-unit id="894" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMonths(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Int32.</source>
          <target state="translated">O tipo de resultado da expressão é Edm.Int32.</target>       </trans-unit>
        <trans-unit id="895" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffNanoseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the first time value argument.</source>
          <target state="translated">Uma expressão que especifica o primeiro argumento de valor temporal.</target>       </trans-unit>
        <trans-unit id="896" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffNanoseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the second time value argument.</source>
          <target state="translated">Uma expressão que especifica o segundo argumento de valor temporal.</target>       </trans-unit>
        <trans-unit id="897" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffNanoseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'DiffNanoseconds' function with the specified arguments, which must each have DateTime, DateTimeOffset or Time result type.</source>
          <target state="translated">Cria um <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função 'DiffNanoseconds' canônica com os argumentos especificados, que cada um deve ter um tipo de resultado de DateTime, DateTimeOffset ou Time.</target>       </trans-unit>
        <trans-unit id="898" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffNanoseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Int32.</source>
          <target state="translated">O tipo de resultado da expressão é Edm.Int32.</target>       </trans-unit>
        <trans-unit id="899" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffSeconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the first time value argument.</source>
          <target state="translated">Uma expressão que especifica o primeiro argumento de valor temporal.</target>       </trans-unit>
        <trans-unit id="900" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffSeconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the second time value argument.</source>
          <target state="translated">Uma expressão que especifica o segundo argumento de valor temporal.</target>       </trans-unit>
        <trans-unit id="901" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffSeconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'DiffSeconds' function with the specified arguments, which must each have DateTime, DateTimeOffset or Time result type.</source>
          <target state="translated">Cria um <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função 'DiffSeconds' canônica com os argumentos especificados, que cada um deve ter um tipo de resultado de DateTime, DateTimeOffset ou Time.</target>       </trans-unit>
        <trans-unit id="902" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffSeconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Int32.</source>
          <target state="translated">O tipo de resultado da expressão é Edm.Int32.</target>       </trans-unit>
        <trans-unit id="903" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffYears(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the first date value argument.</source>
          <target state="translated">Uma expressão que especifica o primeiro argumento de valor de data.</target>       </trans-unit>
        <trans-unit id="904" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffYears(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the second date value argument.</source>
          <target state="translated">Uma expressão que especifica o segundo argumento de valor de data.</target>       </trans-unit>
        <trans-unit id="905" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffYears(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'DiffYears' function with the specified arguments, which must each have DateTime or DateTimeOffset result type.</source>
          <target state="translated">Cria um <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função 'DiffYears' canônica com os argumentos especificados, que cada um deve ter um tipo de resultado de DateTime ou DateTimeOffset.</target>       </trans-unit>
        <trans-unit id="906" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffYears(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Int32.</source>
          <target state="translated">O tipo de resultado da expressão é Edm.Int32.</target>       </trans-unit>
        <trans-unit id="907" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.EndsWith(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the string that is searched at the end for string <bpt id="p1">**</bpt>suffix<ept id="p1">**</ept>.</source>
          <target state="translated">Uma expressão que especifica a cadeia de caracteres que é pesquisada no final quanto ao <bpt id="p1">**</bpt>sufixo<ept id="p1">**</ept> da cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="908" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.EndsWith(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the target string that is searched for at the end of <bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept>.</source>
          <target state="translated">Uma expressão que especifica a cadeia de caracteres de destino que é pesquisada no final de <bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="909" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.EndsWith(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'EndsWith' function with the specified arguments, which must each have a string result type.</source>
          <target state="translated">Cria um <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função 'EndsWith' canônica com o argumento especificado, que cada um deve ter um tipo de resultado de cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="910" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.EndsWith(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Boolean.</source>
          <target state="translated">O tipo de resultado da expressão é um booliano.</target>       </trans-unit>
        <trans-unit id="911" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Floor(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the numeric value.</source>
          <target state="translated">Uma expressão que especifica o valor numérico.</target>       </trans-unit>
        <trans-unit id="912" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Floor(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Floor' function with the specified argument, which must each have a single, double or decimal result type.</source>
          <target state="translated">Cria um <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função 'Floor' canônica com o argumento especificado, que cada um deve ter um tipo de resultado simples, duplo ou decimal.</target>       </trans-unit>
        <trans-unit id="913" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Floor(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the result type of <bpt id="p1">**</bpt>value<ept id="p1">**</ept>.</source>
          <target state="translated">O tipo de resultado da expressão é o mesmo que o tipo de resultado de <bpt id="p1">**</bpt>value<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="914" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.GetTotalOffsetMinutes(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the DateTimeOffset value from which the minute offset from GMT should be retrieved.</source>
          <target state="translated">Uma expressão que especifica o valor de DateTimeOffset em que o deslocamento de minuto de GMT deve ser recuperado.</target>       </trans-unit>
        <trans-unit id="915" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.GetTotalOffsetMinutes(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'GetTotalOffsetMinutes' function with the specified argument, which must have a DateTimeOffset result type.</source>
          <target state="translated">Cria um <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função 'GetTotalOffsetMinutes' canônica com o argumento especificado, que deve ter um tipo de resultado DateTimeOffset.</target>       </trans-unit>
        <trans-unit id="916" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.GetTotalOffsetMinutes(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Int32.</source>
          <target state="translated">O tipo de resultado da expressão é Edm.Int32.</target>       </trans-unit>
        <trans-unit id="917" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Hour(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the value from which the hour should be retrieved.</source>
          <target state="translated">Uma expressão que especifica o valor do qual a hora deve ser recuperada.</target>       </trans-unit>
        <trans-unit id="918" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Hour(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Hour' function with the specified argument, which must have a DateTime, DateTimeOffset or Time result type.</source>
          <target state="translated">Cria um <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função 'Hour' canônica com o argumento especificado, que deve ter um tipo de resultado DateTime, DateTimeOffset ou Time.</target>       </trans-unit>
        <trans-unit id="919" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Hour(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Int32.</source>
          <target state="translated">O tipo de resultado da expressão é Edm.Int32.</target>       </trans-unit>
        <trans-unit id="920" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.IndexOf(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the string to search for <bpt id="p1">**</bpt>stringToFind<ept id="p1">**</ept>.</source>
          <target state="translated">Uma expressão que especifica a cadeia de caracteres a ser pesquisada quanto a <bpt id="p1">**</bpt>stringToFind<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="921" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.IndexOf(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the string to locate within <bpt id="p1">**</bpt>searchString<ept id="p1">**</ept> should be checked.</source>
          <target state="translated">Uma expressão que especifica a cadeia de caracteres a ser localizada em <bpt id="p1">**</bpt>searchString<ept id="p1">**</ept> deve ser verificada.</target>       </trans-unit>
        <trans-unit id="922" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.IndexOf(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'IndexOf' function with the specified arguments, which must each have a string result type.</source>
          <target state="translated">Cria um <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função 'IndexOf' canônica com o argumento especificado, que cada um deve ter um tipo de resultado de cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="923" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.IndexOf(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Int32.</source>
          <target state="translated">O tipo de resultado da expressão é Edm.Int32.</target>       </trans-unit>
        <trans-unit id="924" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Left(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the string from which to extract the leftmost substring.</source>
          <target state="translated">Uma expressão que especifica a cadeia de caracteres da qual extrair a subcadeia de caracteres mais à esquerda.</target>       </trans-unit>
        <trans-unit id="925" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Left(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the length of the leftmost substring to extract from <bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept>.</source>
          <target state="translated">Uma expressão que especifica o comprimento da subcadeia de caracteres mais à esquerda a ser extraída de <bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="926" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Left(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Left' function with the specified arguments, which must have a string and integer numeric result type.</source>
          <target state="translated">Cria um <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função 'Left' canônica com os argumentos especificados, que deve ter um tipo de resultado numérico inteiro e de cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="927" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Left(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is string.</source>
          <target state="translated">O tipo de resultado da expressão é uma cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="928" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Length(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the string for which the length should be computed.</source>
          <target state="translated">Uma expressão que especifica a cadeia de caracteres para a qual o comprimento deve ser calculado.</target>       </trans-unit>
        <trans-unit id="929" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Length(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Length' function with the specified argument, which must have a string result type.</source>
          <target state="translated">Cria um <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função 'Length' canônica com o argumento especificado, que deve ter um tipo de resultado de cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="930" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Length(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Int32.</source>
          <target state="translated">O tipo de resultado da expressão é Edm.Int32.</target>       </trans-unit>
        <trans-unit id="931" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.LongCount(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the collection over which the count value should be computed.</source>
          <target state="translated">Uma expressão que especifica a coleção pela qual o valor da contagem deve ser calculado.</target>       </trans-unit>
        <trans-unit id="932" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.LongCount(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'BigCount' function over the specified collection.</source>
          <target state="translated">Cria um <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função 'BigCount' canônica na coleção especificada.</target>       </trans-unit>
        <trans-unit id="933" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.LongCount(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Int64.</source>
          <target state="translated">O tipo de resultado da expressão é Edm.Int64.</target>       </trans-unit>
        <trans-unit id="934" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Max(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the collection from which the maximum value should be retrieved</source>
          <target state="translated">Uma expressão que especifica a coleção com base na qual o valor máximo deve ser recuperado</target>       </trans-unit>
        <trans-unit id="935" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Max(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Max' function over the specified collection.</source>
          <target state="translated">Cria um <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função 'Max' canônica na coleção especificada.</target>       </trans-unit>
        <trans-unit id="936" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Max(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the element type of the collection.</source>
          <target state="translated">O tipo de resultado da expressão é o mesmo que o tipo de elemento da coleção.</target>       </trans-unit>
        <trans-unit id="937" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Millisecond(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the value from which the millisecond should be retrieved.</source>
          <target state="translated">Uma expressão que especifica o valor do qual o milissegundo deve ser recuperado.</target>       </trans-unit>
        <trans-unit id="938" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Millisecond(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Millisecond' function with the specified argument, which must have a DateTime, DateTimeOffset or Time result type.</source>
          <target state="translated">Cria um <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função 'Millisecond' canônica com o argumento especificado, que deve ter um tipo de resultado DateTime, DateTimeOffset ou Time.</target>       </trans-unit>
        <trans-unit id="939" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Millisecond(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Int32.</source>
          <target state="translated">O tipo de resultado da expressão é Edm.Int32.</target>       </trans-unit>
        <trans-unit id="940" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Min(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the collection from which the minimum value should be retrieved.</source>
          <target state="translated">Uma expressão que especifica a coleção com base na qual o valor mínimo deve ser recuperado.</target>       </trans-unit>
        <trans-unit id="941" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Min(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Min' function over the specified collection.</source>
          <target state="translated">Cria um <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função 'Min' canônica na coleção especificada.</target>       </trans-unit>
        <trans-unit id="942" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Min(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the element type of the collection.</source>
          <target state="translated">O tipo de resultado da expressão é o mesmo que o tipo de elemento da coleção.</target>       </trans-unit>
        <trans-unit id="943" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Minute(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the value from which the minute should be retrieved.</source>
          <target state="translated">Uma expressão que especifica o valor do qual o minuto deve ser recuperado.</target>       </trans-unit>
        <trans-unit id="944" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Minute(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Minute' function with the specified argument, which must have a DateTime, DateTimeOffset or Time result type.</source>
          <target state="translated">Cria um <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função 'Minute' canônica com o argumento especificado, que deve ter um tipo de resultado DateTime, DateTimeOffset ou Time.</target>       </trans-unit>
        <trans-unit id="945" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Minute(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Int32.</source>
          <target state="translated">O tipo de resultado da expressão é Edm.Int32.</target>       </trans-unit>
        <trans-unit id="946" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Month(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the value from which the month should be retrieved.</source>
          <target state="translated">Uma expressão que especifica o valor do qual o mês deve ser recuperado.</target>       </trans-unit>
        <trans-unit id="947" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Month(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Month' function with the specified argument, which must have a DateTime or DateTimeOffset result type.</source>
          <target state="translated">Cria um <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função 'Month' canônica com o argumento especificado, que deve ter um tipo de resultado DateTime ou DateTimeOffset.</target>       </trans-unit>
        <trans-unit id="948" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Month(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Int32.</source>
          <target state="translated">O tipo de resultado da expressão é Edm.Int32.</target>       </trans-unit>
        <trans-unit id="949" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Power(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the numeric value to raise to the given power.</source>
          <target state="translated">Uma expressão que especifica o valor numérico a ser elevado à potência especificada.</target>       </trans-unit>
        <trans-unit id="950" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Power(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the power to which <bpt id="p1">**</bpt>baseArgument<ept id="p1">**</ept> should be raised.</source>
          <target state="translated">Uma expressão que especifica a potência à qual <bpt id="p1">**</bpt>baseArgument<ept id="p1">**</ept> deve ser elevado.</target>       </trans-unit>
        <trans-unit id="951" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Power(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Power' function with the specified arguments, which must have numeric result types.</source>
          <target state="translated">Cria um <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função 'Power' canônica com o argumento especificado, que deve ter tipos de resultado numéricos.</target>       </trans-unit>
        <trans-unit id="952" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Power(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the result type of <bpt id="p1">**</bpt>baseArgument<ept id="p1">**</ept>.</source>
          <target state="translated">O tipo de resultado da expressão é o mesmo que o tipo de resultado de <bpt id="p1">**</bpt>baseArgument<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="953" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Replace(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the string in which to perform the replacement operation.</source>
          <target state="translated">Uma expressão que especifica a cadeia de caracteres na qual realizar a operação de substituição.</target>       </trans-unit>
        <trans-unit id="954" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Replace(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the string that is replaced.</source>
          <target state="translated">Uma expressão que especifica a cadeia de caracteres substituída.</target>       </trans-unit>
        <trans-unit id="955" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Replace(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the replacement string.</source>
          <target state="translated">Uma expressão que especifica a cadeia de caracteres de substituição.</target>       </trans-unit>
        <trans-unit id="956" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Replace(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Replace' function with the specified arguments, which must each have a string result type.</source>
          <target state="translated">Cria um <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função 'Replace' canônica com o argumento especificado, que cada um deve ter um tipo de resultado de cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="957" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Replace(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is also string.</source>
          <target state="translated">O tipo de resultado da expressão também é uma cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="958" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Reverse(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the string to reverse.</source>
          <target state="translated">Uma expressão que especifica a cadeia de caracteres a ser revertida.</target>       </trans-unit>
        <trans-unit id="959" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Reverse(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Reverse' function with the specified argument, which must have a string result type.</source>
          <target state="translated">Cria um <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função 'Reverse' canônica com o argumento especificado, que deve ter um tipo de resultado de cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="960" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Reverse(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is also string.</source>
          <target state="translated">O tipo de resultado da expressão também é uma cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="961" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Right(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the string from which to extract the rightmost substring.</source>
          <target state="translated">Uma expressão que especifica a cadeia de caracteres da qual extrair a subcadeia de caracteres mais à direita.</target>       </trans-unit>
        <trans-unit id="962" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Right(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the length of the rightmost substring to extract from <bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept>.</source>
          <target state="translated">Uma expressão que especifica o comprimento da subcadeia de caracteres mais à direita a ser extraída de <bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="963" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Right(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Right' function with the specified arguments, which must have a string and integer numeric result type.</source>
          <target state="translated">Cria um <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função 'Right' canônica com os argumentos especificados, que deve ter um tipo de resultado numérico inteiro e de cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="964" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Right(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is string.</source>
          <target state="translated">O tipo de resultado da expressão é uma cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="965" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the numeric value to round.</source>
          <target state="translated">Uma expressão que especifica o valor numérico a ser arredondado.</target>       </trans-unit>
        <trans-unit id="966" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Round' function with the specified argument, which must each have a single, double or decimal result type.</source>
          <target state="translated">Cria um <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função 'Round' canônica com o argumento especificado, que cada um deve ter um tipo de resultado simples, duplo ou decimal.</target>       </trans-unit>
        <trans-unit id="967" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the result type of <bpt id="p1">**</bpt>value<ept id="p1">**</ept>.</source>
          <target state="translated">O tipo de resultado da expressão é o mesmo que o tipo de resultado de <bpt id="p1">**</bpt>value<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="968" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the numeric value to round.</source>
          <target state="translated">Uma expressão que especifica o valor numérico a ser arredondado.</target>       </trans-unit>
        <trans-unit id="969" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the number of digits of precision to use when rounding.</source>
          <target state="translated">Uma expressão que especifica o número de dígitos de precisão a ser usado ao arredondar.</target>       </trans-unit>
        <trans-unit id="970" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Round' function with the specified arguments, which must have a single, double or decimal, and integer result types.</source>
          <target state="translated">Cria um <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função 'Round' canônica com os argumentos especificados, que deve ter tipos de resultado simples, duplo ou decimal e inteiro.</target>       </trans-unit>
        <trans-unit id="971" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the result type of <bpt id="p1">**</bpt>value<ept id="p1">**</ept>.</source>
          <target state="translated">O tipo de resultado da expressão é o mesmo que o tipo de resultado de <bpt id="p1">**</bpt>value<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="972" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Second(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the value from which the second should be retrieved.</source>
          <target state="translated">Uma expressão que especifica o valor do qual o segundo deve ser recuperado.</target>       </trans-unit>
        <trans-unit id="973" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Second(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Second' function with the specified argument, which must have a DateTime, DateTimeOffset or Time result type.</source>
          <target state="translated">Cria um <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função 'Second' canônica com o argumento especificado, que deve ter um tipo de resultado DateTime, DateTimeOffset ou Time.</target>       </trans-unit>
        <trans-unit id="974" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Second(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Int32.</source>
          <target state="translated">O tipo de resultado da expressão é Edm.Int32.</target>       </trans-unit>
        <trans-unit id="975" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StartsWith(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the string that is searched at the start for string <bpt id="p1">**</bpt>prefix<ept id="p1">**</ept>.</source>
          <target state="translated">Uma expressão que especifica a cadeia de caracteres que é pesquisada no início quanto ao <bpt id="p1">**</bpt>prefixo<ept id="p1">**</ept> da cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="976" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StartsWith(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the target string that is searched for at the start of <bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept>.</source>
          <target state="translated">Uma expressão que especifica a cadeia de caracteres de destino que é pesquisada no início de <bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="977" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StartsWith(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'StartsWith' function with the specified arguments, which must each have a string result type.</source>
          <target state="translated">Cria um <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função 'StartsWith' canônica com o argumento especificado, que cada um deve ter um tipo de resultado de cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="978" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StartsWith(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Boolean.</source>
          <target state="translated">O tipo de resultado da expressão é um booliano.</target>       </trans-unit>
        <trans-unit id="979" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDev(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the collection for which the standard deviation should be computed.</source>
          <target state="translated">Uma expressão que especifica a coleção para a qual o desvio padrão deve ser calculado.</target>       </trans-unit>
        <trans-unit id="980" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDev(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'StDev' function over the non-null members of the specified collection.</source>
          <target state="translated">Cria um <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função 'StDev' canônica nos membros não nulos da coleção especificada.</target>       </trans-unit>
        <trans-unit id="981" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDev(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Double.</source>
          <target state="translated">O tipo de resultado da expressão é Edm.Double.</target>       </trans-unit>
        <trans-unit id="982" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDevP(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the collection for which the standard deviation should be computed.</source>
          <target state="translated">Uma expressão que especifica a coleção para a qual o desvio padrão deve ser calculado.</target>       </trans-unit>
        <trans-unit id="983" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDevP(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'StDevP' function over the population of the specified collection.</source>
          <target state="translated">Cria um <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função 'StDevP' canônica na população da coleção especificada.</target>       </trans-unit>
        <trans-unit id="984" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDevP(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Double.</source>
          <target state="translated">O tipo de resultado da expressão é Edm.Double.</target>       </trans-unit>
        <trans-unit id="985" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Substring(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the string from which to extract the substring.</source>
          <target state="translated">Uma expressão que especifica a cadeia de caracteres da qual extrair a subcadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="986" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Substring(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the starting index from which the substring should be taken.</source>
          <target state="translated">Uma expressão que especifica o índice inicial do qual a subcadeia de caracteres deve ser obtida.</target>       </trans-unit>
        <trans-unit id="987" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Substring(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the length of the substring.</source>
          <target state="translated">Uma expressão que especifica o tamanho da subcadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="988" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Substring(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Substring' function with the specified arguments, which must have a string and integer numeric result types.</source>
          <target state="translated">Cria um <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função 'Substring' canônica com os argumentos especificados, que deve ter tipos de resultados numérico inteiro e de cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="989" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Substring(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is string.</source>
          <target state="translated">O tipo de resultado da expressão é uma cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="990" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Sum(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the collection from which the sum should be computed.</source>
          <target state="translated">Uma expressão que especifica a coleção com base na qual a soma deve ser calculada.</target>       </trans-unit>
        <trans-unit id="991" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Sum(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Sum' function over the specified collection.</source>
          <target state="translated">Cria um <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função 'Sum' canônica na coleção especificada.</target>       </trans-unit>
        <trans-unit id="992" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Sum(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the element type of the collection.</source>
          <target state="translated">O tipo de resultado da expressão é o mesmo que o tipo de elemento da coleção.</target>       </trans-unit>
        <trans-unit id="993" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToLower(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the string that should be converted to lower case.</source>
          <target state="translated">Uma expressão que especifica a cadeia de caracteres que deve ser convertida em letras minúsculas.</target>       </trans-unit>
        <trans-unit id="994" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToLower(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'ToLower' function with the specified argument, which must have a string result type.</source>
          <target state="translated">Cria um <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função 'ToLower' canônica com o argumento especificado, que deve ter um tipo de resultado de cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="995" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToLower(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is also string.</source>
          <target state="translated">O tipo de resultado da expressão também é uma cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="996" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToUpper(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the string that should be converted to upper case.</source>
          <target state="translated">Uma expressão que especifica a cadeia de caracteres que deve ser convertida em letras maiúsculas.</target>       </trans-unit>
        <trans-unit id="997" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToUpper(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'ToUpper' function with the specified argument, which must have a string result type.</source>
          <target state="translated">Cria um <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função 'ToUpper' canônica com o argumento especificado, que deve ter um tipo de resultado de cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="998" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToUpper(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is also string.</source>
          <target state="translated">O tipo de resultado da expressão também é uma cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="999" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Trim(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the string from which leading and trailing space should be removed.</source>
          <target state="translated">Uma expressão que especifica a cadeia de caracteres da qual o espaço à esquerda e o espaço à direita devem ser removidos.</target>       </trans-unit>
        <trans-unit id="1000" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Trim(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Trim' function with the specified argument, which must have a string result type.</source>
          <target state="translated">Cria um <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função 'Trim' canônica com o argumento especificado, que deve ter um tipo de resultado de cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="1001" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Trim(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is also string.</source>
          <target state="translated">O tipo de resultado da expressão também é uma cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="1002" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimEnd(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the string from which trailing space should be removed.</source>
          <target state="translated">Uma expressão que especifica a cadeia de caracteres da qual o espaço à direita deve ser removido.</target>       </trans-unit>
        <trans-unit id="1003" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimEnd(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'RTrim' function with the specified argument, which must have a string result type.</source>
          <target state="translated">Cria um <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função 'RTrim' canônica com o argumento especificado, que deve ter um tipo de resultado de cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="1004" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimEnd(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is also string.</source>
          <target state="translated">O tipo de resultado da expressão também é uma cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="1005" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimStart(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the string from which leading space should be removed.</source>
          <target state="translated">Uma expressão que especifica a cadeia de caracteres da qual o espaço à esquerda deve ser removido.</target>       </trans-unit>
        <trans-unit id="1006" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimStart(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'LTrim' function with the specified argument, which must have a string result type.</source>
          <target state="translated">Cria um <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função 'LTrim' canônica com o argumento especificado, que deve ter um tipo de resultado de cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="1007" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimStart(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is also string.</source>
          <target state="translated">O tipo de resultado da expressão também é uma cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="1008" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Truncate(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the numeric value to truncate.</source>
          <target state="translated">Uma expressão que especifica o valor numérico a ser truncado.</target>       </trans-unit>
        <trans-unit id="1009" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Truncate(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the number of digits of precision to use when truncating.</source>
          <target state="translated">Uma expressão que especifica o número de dígitos de precisão a ser usado ao truncar.</target>       </trans-unit>
        <trans-unit id="1010" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Truncate(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Truncate' function with the specified arguments, which must have a single, double or decimal, and integer result types.</source>
          <target state="translated">Cria um <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função 'Truncate' canônica com os argumentos especificados, que deve ter tipos de resultado simples, duplo ou decimal e inteiro.</target>       </trans-unit>
        <trans-unit id="1011" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Truncate(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the result type of <bpt id="p1">**</bpt>value<ept id="p1">**</ept>.</source>
          <target state="translated">O tipo de resultado da expressão é o mesmo que o tipo de resultado de <bpt id="p1">**</bpt>value<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="1012" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TruncateTime(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the value for which the time portion should be truncated.</source>
          <target state="translated">Uma expressão que especifica o valor para o qual a parte de hora deve ser truncada.</target>       </trans-unit>
        <trans-unit id="1013" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TruncateTime(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'TruncateTime' function with the specified argument, which must have a DateTime or DateTimeOffset result type.</source>
          <target state="translated">Cria um <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função 'TruncateTime' canônica com o argumento especificado, que deve ter um tipo de resultado DateTime ou DateTimeOffset.</target>       </trans-unit>
        <trans-unit id="1014" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TruncateTime(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the result type of <bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept>.</source>
          <target state="translated">O tipo de resultado da expressão é o mesmo que o tipo de resultado de <bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="1015" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Var(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the collection for which the statistical variance should be computed.</source>
          <target state="translated">Uma expressão que especifica a coleção para a qual a variação estatística deve ser calculada.</target>       </trans-unit>
        <trans-unit id="1016" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Var(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Var' function over the non-null members of the specified collection.</source>
          <target state="translated">Cria um <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função 'Var' canônica nos membros não nulos da coleção especificada.</target>       </trans-unit>
        <trans-unit id="1017" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Var(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Double.</source>
          <target state="translated">O tipo de resultado da expressão é Edm.Double.</target>       </trans-unit>
        <trans-unit id="1018" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.VarP(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the collection for which the statistical variance should be computed.</source>
          <target state="translated">Uma expressão que especifica a coleção para a qual a variação estatística deve ser calculada.</target>       </trans-unit>
        <trans-unit id="1019" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.VarP(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'VarP' function over the population of the specified collection.</source>
          <target state="translated">Cria um <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função 'VarP' canônica na população da coleção especificada.</target>       </trans-unit>
        <trans-unit id="1020" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.VarP(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression Edm.Double.</source>
          <target state="translated">O tipo de resultado da expressão Edm.Double.</target>       </trans-unit>
        <trans-unit id="1021" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Year(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the value from which the year should be retrieved.</source>
          <target state="translated">Uma expressão que especifica o valor do qual o ano deve ser recuperado.</target>       </trans-unit>
        <trans-unit id="1022" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Year(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Year' function with the specified argument, which must have a DateTime or DateTimeOffset result type.</source>
          <target state="translated">Cria um <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função 'Year' canônica com o argumento especificado, que deve ter um tipo de resultado DateTime ou DateTimeOffset.</target>       </trans-unit>
        <trans-unit id="1023" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Year(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Int32.</source>
          <target state="translated">O tipo de resultado da expressão é Edm.Int32.</target>       </trans-unit>
        <trans-unit id="1024" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.Area(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the spatial surface value for which the area should be calculated.</source>
          <target state="translated">Uma expressão que especifica o valor da superfície espacial para o qual a área deve ser calculada.</target>       </trans-unit>
        <trans-unit id="1025" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.Area(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Area' function with the specified argument, which must have an Edm.Geography or Edm.Geometry result type.</source>
          <target state="translated">Cria uma <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função "Area" canônica com o argumento especificado, que deve ter um tipo de resultado Edm.Geography ou Edm.Geometry.</target>       </trans-unit>
        <trans-unit id="1026" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.Area(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Double.</source>
          <target state="translated">O tipo de resultado da expressão é Edm.Double.</target>       </trans-unit>
        <trans-unit id="1027" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.AsBinary(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the spatial value from which the well known binary representation should be produced.</source>
          <target state="translated">Uma expressão que especifica o valor espacial do qual a representação binária conhecida deve ser produzida.</target>       </trans-unit>
        <trans-unit id="1028" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.AsBinary(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'AsBinary' function with the specified argument, which must have an Edm.Geography or Edm.Geometry result type.</source>
          <target state="translated">Cria uma <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função "AsBinary" canônica com o argumento especificado, que deve ter um tipo de resultado Edm.Geography ou Edm.Geometry.</target>       </trans-unit>
        <trans-unit id="1029" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.AsBinary(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Binary.</source>
          <target state="translated">O tipo de resultado da expressão é Edm.Binary.</target>       </trans-unit>
        <trans-unit id="1030" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.AsGml(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the spatial value from which the Geography Markup Language (GML) representation should be produced.</source>
          <target state="translated">Uma expressão que especifica o valor espacial do qual a representação GML (Geography Markup Language) deve ser produzida.</target>       </trans-unit>
        <trans-unit id="1031" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.AsGml(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'AsGml' function with the specified argument, which must have an Edm.Geography or Edm.Geometry result type.</source>
          <target state="translated">Cria uma <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função "AsGml" canônica com o argumento especificado, que deve ter um tipo de resultado Edm.Geography ou Edm.Geometry.</target>       </trans-unit>
        <trans-unit id="1032" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.AsGml(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.String.</source>
          <target state="translated">O tipo de resultado da expressão é Edm.String.</target>       </trans-unit>
        <trans-unit id="1033" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.AsText(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the spatial value from which the well known text representation should be produced.</source>
          <target state="translated">Uma expressão que especifica o valor espacial do qual a representação de texto conhecida deve ser produzida.</target>       </trans-unit>
        <trans-unit id="1034" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.AsText(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'AsText' function with the specified argument, which must have an Edm.Geography or Edm.Geometry result type.</source>
          <target state="translated">Cria uma <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função "AsText" canônica com o argumento especificado, que deve ter um tipo de resultado Edm.Geography ou Edm.Geometry.</target>       </trans-unit>
        <trans-unit id="1035" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.AsText(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.String.</source>
          <target state="translated">O tipo de resultado da expressão é Edm.String.</target>       </trans-unit>
        <trans-unit id="1036" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.Centroid(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the geometry surface value from which the centroid should be retrieved.</source>
          <target state="translated">Uma expressão que especifica o valor de superfície de geometria do qual o centroide deve ser recuperado.</target>       </trans-unit>
        <trans-unit id="1037" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.Centroid(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Centroid' function with the specified argument, which must have an Edm.Geometry result type.</source>
          <target state="translated">Cria uma <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função "Centroid" canônica com o argumento especificado, que deve ter um tipo de resultado Edm.Geometry.</target>       </trans-unit>
        <trans-unit id="1038" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.Centroid(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Geometry.</source>
          <target state="translated">O tipo de resultado da expressão é Edm.Geometry.</target>       </trans-unit>
        <trans-unit id="1039" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.CoordinateSystemId(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the value from which the coordinate system id (SRID) should be retrieved.</source>
          <target state="translated">Uma expressão que especifica o valor do qual a SRID (ID do sistema de coordenadas) deve ser recuperada.</target>       </trans-unit>
        <trans-unit id="1040" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.CoordinateSystemId(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'CoordinateSystemId' function with the specified argument, which must have an Edm.Geography or Edm.Geometry result type.</source>
          <target state="translated">Cria uma <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função "CoordinateSystemId" canônica com o argumento especificado, que deve ter um tipo de resultado Edm.Geography ou Edm.Geometry.</target>       </trans-unit>
        <trans-unit id="1041" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.CoordinateSystemId(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Int32.</source>
          <target state="translated">O tipo de resultado da expressão é Edm.Int32.</target>       </trans-unit>
        <trans-unit id="1042" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.Distance(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the first spatial value.</source>
          <target state="translated">Uma expressão que especifica o primeiro valor espacial.</target>       </trans-unit>
        <trans-unit id="1043" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.Distance(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the spatial value from which the distance from <bpt id="p1">&lt;c&gt;</bpt>spatialValue1<ept id="p1">&lt;/c&gt;</ept> should be measured.</source>
          <target state="translated">Uma expressão que especifica o valor espacial do qual a distância de <bpt id="p1">&lt;c&gt;</bpt>spatialValue1<ept id="p1">&lt;/c&gt;</ept> deve ser medida.</target>       </trans-unit>
        <trans-unit id="1044" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.Distance(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Distance' function with the specified arguments, which must each have an Edm.Geography or Edm.Geometry result type.</source>
          <target state="translated">Cria uma <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função "Distance" canônica com os argumentos especificados, os quais devem ter um tipo de resultado Edm.Geography ou Edm.Geometry.</target>       </trans-unit>
        <trans-unit id="1045" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.Distance(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of <ph id="ph1">&lt;paramref name="spatialValue1" /&gt;</ph> must match the result type of <ph id="ph2">&lt;paramref name="spatialValue2" /&gt;</ph>.</source>
          <target state="translated">O tipo de resultado de <ph id="ph1">&lt;paramref name="spatialValue1" /&gt;</ph> deve corresponder ao tipo de resultado de <ph id="ph2">&lt;paramref name="spatialValue2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1046" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.Distance(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Double.</source>
          <target state="translated">O tipo de resultado da expressão é Edm.Double.</target>       </trans-unit>
        <trans-unit id="1047" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.Elevation(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the spatial point value from which the elevation (Z co-ordinate) value should be retrieved.</source>
          <target state="translated">Uma expressão que especifica o valor do ponto espacial do qual o valor de elevação (coordenada Z) deve ser recuperado.</target>       </trans-unit>
        <trans-unit id="1048" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.Elevation(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Elevation' function with the specified argument, which must have an Edm.Geography or Edm.Geometry result type.</source>
          <target state="translated">Cria uma <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função "Elevation" canônica com o argumento especificado, que deve ter um tipo de resultado Edm.Geography ou Edm.Geometry.</target>       </trans-unit>
        <trans-unit id="1049" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.Elevation(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Double.</source>
          <target state="translated">O tipo de resultado da expressão é Edm.Double.</target>       </trans-unit>
        <trans-unit id="1050" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.EndPoint(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the spatial curve value from which the end point should be retrieved.</source>
          <target state="translated">Uma expressão que especifica o valor da curva espacial da qual o ponto da extremidade deve ser recuperado.</target>       </trans-unit>
        <trans-unit id="1051" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.EndPoint(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'EndPoint' function with the specified argument, which must have an Edm.Geography or Edm.Geometry result type.</source>
          <target state="translated">Cria uma <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função "EndPoint" canônica com o argumento especificado, que deve ter um tipo de resultado Edm.Geography ou Edm.Geometry.</target>       </trans-unit>
        <trans-unit id="1052" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.EndPoint(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type is the same as that of <ph id="ph1">&lt;paramref name="spatialValue" /&gt;</ph>.</source>
          <target state="translated">O tipo de resultado é o mesmo de <ph id="ph1">&lt;paramref name="spatialValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1053" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.ExteriorRing(System.Data.Common.CommandTrees.DbExpression)">
          <source>The geometry value.</source>
          <target state="translated">O valor de geometria.</target>       </trans-unit>
        <trans-unit id="1054" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.ExteriorRing(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'ExteriorRing' function with the specified argument, which must have an Edm.Geometry result type.</source>
          <target state="translated">Cria uma <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função "ExteriorRing" canônica com o argumento especificado, que deve ter um tipo de resultado Edm.Geometry.</target>       </trans-unit>
        <trans-unit id="1055" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.ExteriorRing(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Geometry.</source>
          <target state="translated">O tipo de resultado da expressão é Edm.Geometry.</target>       </trans-unit>
        <trans-unit id="1056" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.InteriorRingAt(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The geometry value.</source>
          <target state="translated">O valor de geometria.</target>       </trans-unit>
        <trans-unit id="1057" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.InteriorRingAt(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the position of the interior ring to be retrieved from within the polygon.</source>
          <target state="translated">Uma expressão que especifica a posição do anel interior a ser recuperado de dentro do polígono.</target>       </trans-unit>
        <trans-unit id="1058" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.InteriorRingAt(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'InteriorRingAt' function with the specified arguments.</source>
          <target state="translated">Cria uma <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função "InteriorRingAt" canônica com os argumentos especificados.</target>       </trans-unit>
        <trans-unit id="1059" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.InteriorRingAt(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The first argument must have an Edm.Geometry result type.</source>
          <target state="translated">O primeiro argumento deve ter um tipo de resultado Edm.Geometry.</target>       </trans-unit>
        <trans-unit id="1060" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.InteriorRingAt(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The second argument must have an integer numeric result types.</source>
          <target state="translated">O segundo argumento deve ter um tipo de resultado numérico inteiro.</target>       </trans-unit>
        <trans-unit id="1061" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.InteriorRingAt(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Geometry.</source>
          <target state="translated">O tipo de resultado da expressão é Edm.Geometry.</target>       </trans-unit>
        <trans-unit id="1062" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.InteriorRingCount(System.Data.Common.CommandTrees.DbExpression)">
          <source>The geometry value.</source>
          <target state="translated">O valor de geometria.</target>       </trans-unit>
        <trans-unit id="1063" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.InteriorRingCount(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'InteriorRingCount' function with the specified argument, which must have an Edm.Geometry result type.</source>
          <target state="translated">Cria uma <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função "InteriorRingCount" canônica com o argumento especificado, que deve ter um tipo de resultado Edm.Geometry.</target>       </trans-unit>
        <trans-unit id="1064" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.InteriorRingCount(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Int32.</source>
          <target state="translated">O tipo de resultado da expressão é Edm.Int32.</target>       </trans-unit>
        <trans-unit id="1065" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.IsClosedSpatial(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the spatial curve value from which the IsClosedSpatial value should be retrieved.</source>
          <target state="translated">Uma expressão que especifica o valor da curva espacial da qual o valor IsClosedSpatial deve ser recuperado.</target>       </trans-unit>
        <trans-unit id="1066" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.IsClosedSpatial(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'IsClosedSpatial' function with the specified argument, which must have an Edm.Geography or Edm.Geometry result type.</source>
          <target state="translated">Cria uma <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função "IsClosedSpatial" canônica com o argumento especificado, que deve ter um tipo de resultado Edm.Geography ou Edm.Geometry.</target>       </trans-unit>
        <trans-unit id="1067" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.IsClosedSpatial(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type is Edm.Boolean.</source>
          <target state="translated">O tipo de resultado é Edm.Boolean.</target>       </trans-unit>
        <trans-unit id="1068" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.IsEmptySpatial(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the spatial value from which the IsEmptySptiaal value should be retrieved.</source>
          <target state="translated">Uma expressão que especifica o valor espacial do qual o valor IsEmptySptiaal deve ser recuperado.</target>       </trans-unit>
        <trans-unit id="1069" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.IsEmptySpatial(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'IsEmptySpatial' function with the specified argument, which must have an Edm.Geography or Edm.Geometry result type.</source>
          <target state="translated">Cria uma <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função "IsEmptySpatial" canônica com o argumento especificado, que deve ter um tipo de resultado Edm.Geography ou Edm.Geometry.</target>       </trans-unit>
        <trans-unit id="1070" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.IsEmptySpatial(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Boolean.</source>
          <target state="translated">O tipo de resultado da expressão é Edm.Boolean.</target>       </trans-unit>
        <trans-unit id="1071" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.IsRing(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the geometry curve value from which the IsRing value should be retrieved.</source>
          <target state="translated">Uma expressão que especifica o valor de curva de geometria do qual o valor IsRing deve ser recuperado.</target>       </trans-unit>
        <trans-unit id="1072" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.IsRing(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'IsRing' function with the specified argument, which must have an Edm.Geometry result type.</source>
          <target state="translated">Cria uma <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função "IsRing" canônica com o argumento especificado, que deve ter um tipo de resultado Edm.Geometry.</target>       </trans-unit>
        <trans-unit id="1073" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.IsRing(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type is Edm.Boolean.</source>
          <target state="translated">O tipo de resultado é Edm.Boolean.</target>       </trans-unit>
        <trans-unit id="1074" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.IsSimpleGeometry(System.Data.Common.CommandTrees.DbExpression)">
          <source>The geometry value.</source>
          <target state="translated">O valor de geometria.</target>       </trans-unit>
        <trans-unit id="1075" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.IsSimpleGeometry(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'IsSimpleGeometry' function with the specified argument, which must have an Edm.Geometry result type.</source>
          <target state="translated">Cria uma <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função "IsSimpleGeometry" canônica com o argumento especificado, que deve ter um tipo de resultado Edm.Geometry.</target>       </trans-unit>
        <trans-unit id="1076" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.IsSimpleGeometry(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Boolean.</source>
          <target state="translated">O tipo de resultado da expressão é Edm.Boolean.</target>       </trans-unit>
        <trans-unit id="1077" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.IsValidGeometry(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the geometry value which should be tested for spatial validity.</source>
          <target state="translated">Uma expressão que especifica o valor de geometria que deve ser testado quanto à validade espacial.</target>       </trans-unit>
        <trans-unit id="1078" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.IsValidGeometry(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'IsValidGeometry' function with the specified argument, which must have an Edm.Geometry result type.</source>
          <target state="translated">Cria uma <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função "IsValidGeometry" canônica com o argumento especificado, que deve ter um tipo de resultado Edm.Geometry.</target>       </trans-unit>
        <trans-unit id="1079" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.IsValidGeometry(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Boolean.</source>
          <target state="translated">O tipo de resultado da expressão é Edm.Boolean.</target>       </trans-unit>
        <trans-unit id="1080" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.Latitude(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the geography point value from which the Latitude value should be retrieved.</source>
          <target state="translated">Uma expressão que especifica o valor de ponto de geografia do qual o valor de Latitude deve ser recuperado.</target>       </trans-unit>
        <trans-unit id="1081" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.Latitude(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Latitude' function with the specified argument, which must have an Edm.Geography result type.</source>
          <target state="translated">Cria uma <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função "Latitude" canônica com o argumento especificado, que deve ter um tipo de resultado Edm.Geography.</target>       </trans-unit>
        <trans-unit id="1082" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.Latitude(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Double.</source>
          <target state="translated">O tipo de resultado da expressão é Edm.Double.</target>       </trans-unit>
        <trans-unit id="1083" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.Longitude(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the geography point value from which the Longitude value should be retrieved.</source>
          <target state="translated">Uma expressão que especifica o valor de ponto de geografia do qual o valor de Longitude deve ser recuperado.</target>       </trans-unit>
        <trans-unit id="1084" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.Longitude(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Longitude' function with the specified argument, which must have an Edm.Geography result type.</source>
          <target state="translated">Cria uma <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função "Longitude" canônica com o argumento especificado, que deve ter um tipo de resultado Edm.Geography.</target>       </trans-unit>
        <trans-unit id="1085" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.Longitude(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Double.</source>
          <target state="translated">O tipo de resultado da expressão é Edm.Double.</target>       </trans-unit>
        <trans-unit id="1086" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.Measure(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the spatial point value from which the Measure (M) co-ordinate value should be retrieved.</source>
          <target state="translated">Uma expressão que especifica o valor do ponto espacial do qual o valor de coordenada de M (Measure) deve ser recuperado.</target>       </trans-unit>
        <trans-unit id="1087" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.Measure(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Measure' function with the specified argument, which must have an Edm.Geography or Edm.Geometry result type.</source>
          <target state="translated">Cria uma <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função "Measure" canônica com o argumento especificado, que deve ter um tipo de resultado Edm.Geography ou Edm.Geometry.</target>       </trans-unit>
        <trans-unit id="1088" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.Measure(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Double.</source>
          <target state="translated">O tipo de resultado da expressão é Edm.Double.</target>       </trans-unit>
        <trans-unit id="1089" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.PointAt(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the spatial line string value.</source>
          <target state="translated">Uma expressão que especifica o valor de cadeia de caracteres da linha espacial.</target>       </trans-unit>
        <trans-unit id="1090" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.PointAt(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the position of the point to be retrieved from within the line string.</source>
          <target state="translated">Uma expressão que especifica a posição do ponto a ser recuperado de dentro da cadeia de linha.</target>       </trans-unit>
        <trans-unit id="1091" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.PointAt(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'PointAt' function with the specified arguments.</source>
          <target state="translated">Cria uma <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função "PointAt" canônica com os argumentos especificados.</target>       </trans-unit>
        <trans-unit id="1092" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.PointAt(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The first argument must have an Edm.Geography or Edm.Geometry result type.</source>
          <target state="translated">O primeiro argumento deve ter um tipo de resultado Edm.Geography ou Edm.Geometry.</target>       </trans-unit>
        <trans-unit id="1093" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.PointAt(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The second argument must have an integer numeric result type.</source>
          <target state="translated">O segundo argumento deve ter um tipo de resultado numérico inteiro.</target>       </trans-unit>
        <trans-unit id="1094" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.PointAt(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as that of <ph id="ph1">&lt;paramref name="spatialValue" /&gt;</ph>.</source>
          <target state="translated">O tipo de resultado da expressão é o mesmo que o de <ph id="ph1">&lt;paramref name="spatialValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1095" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.PointCount(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the spatial line string value from which the number of points should be retrieved.</source>
          <target state="translated">Uma expressão que especifica o valor da cadeia de linha espacial da qual o número de pontos deve ser recuperado.</target>       </trans-unit>
        <trans-unit id="1096" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.PointCount(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'PointCount' function with the specified argument, which must have an Edm.Geography or Edm.Geometry result type.</source>
          <target state="translated">Cria uma <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função "PointCount" canônica com o argumento especificado, que deve ter um tipo de resultado Edm.Geography ou Edm.Geometry.</target>       </trans-unit>
        <trans-unit id="1097" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.PointCount(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Int32.</source>
          <target state="translated">O tipo de resultado da expressão é Edm.Int32.</target>       </trans-unit>
        <trans-unit id="1098" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.PointOnSurface(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the geometry surface value from which the point should be retrieved.</source>
          <target state="translated">Uma expressão que especifica o valor de superfície de geometria do qual o ponto deve ser recuperado.</target>       </trans-unit>
        <trans-unit id="1099" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.PointOnSurface(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'PointOnSurface' function with the specified argument, which must have an Edm.Geometry result type.</source>
          <target state="translated">Cria uma <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função "PointOnSurface" canônica com o argumento especificado, que deve ter um tipo de resultado Edm.Geometry.</target>       </trans-unit>
        <trans-unit id="1100" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.PointOnSurface(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Geometry.</source>
          <target state="translated">O tipo de resultado da expressão é Edm.Geometry.</target>       </trans-unit>
        <trans-unit id="1101" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialBoundary(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the geometry value from which the SpatialBoundary value should be retrieved.</source>
          <target state="translated">Uma expressão que especifica o valor de geometria do qual o valor SpatialBoundary deve ser recuperado.</target>       </trans-unit>
        <trans-unit id="1102" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialBoundary(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'SpatialBoundary' function with the specified argument, which must have an Edm.Geometry result type.</source>
          <target state="translated">Cria uma <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função "SpatialBoundary" canônica com o argumento especificado, que deve ter um tipo de resultado Edm.Geometry.</target>       </trans-unit>
        <trans-unit id="1103" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialBoundary(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Geometry.</source>
          <target state="translated">O tipo de resultado da expressão é Edm.Geometry.</target>       </trans-unit>
        <trans-unit id="1104" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialBuffer(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the spatial value.</source>
          <target state="translated">Uma expressão que especifica o valor espacial.</target>       </trans-unit>
        <trans-unit id="1105" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialBuffer(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the buffer distance.</source>
          <target state="translated">Uma expressão que especifica a distância do buffer.</target>       </trans-unit>
        <trans-unit id="1106" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialBuffer(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'SpatialBuffer' function with the specified arguments, which must have a Edm.Geography or Edm.Geometry and Edm.Double result types.</source>
          <target state="translated">Cria uma <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função "SpatialBuffer" canônica com os argumentos especificados, os quais devem ter tipos de resultado Edm.Geography ou Edm.Geometry e Edm.Double.</target>       </trans-unit>
        <trans-unit id="1107" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialBuffer(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Geometry.</source>
          <target state="translated">O tipo de resultado da expressão é Edm.Geometry.</target>       </trans-unit>
        <trans-unit id="1108" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialContains(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the first geometry value.</source>
          <target state="translated">Uma expressão que especifica o primeiro valor de geometria.</target>       </trans-unit>
        <trans-unit id="1109" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialContains(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the geometry value that should be compared with <bpt id="p1">&lt;c&gt;</bpt>geometryValue1<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Uma expressão que especifica o valor de geometria que deve ser comparado com <bpt id="p1">&lt;c&gt;</bpt>geometryValue1<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1110" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialContains(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'SpatialContains' function with the specified arguments, which must each have an Edm.Geometry result type.</source>
          <target state="translated">Cria uma <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função "SpatialContains" canônica com os argumentos especificados, os quais devem ter um tipo de resultado Edm.Geometry.</target>       </trans-unit>
        <trans-unit id="1111" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialContains(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Boolean.</source>
          <target state="translated">O tipo de resultado da expressão é Edm.Boolean.</target>       </trans-unit>
        <trans-unit id="1112" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialConvexHull(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the geometry value from which the convex hull value should be retrieved.</source>
          <target state="translated">Uma expressão que especifica o valor de geometria do qual o valor da envoltória convexa deve ser recuperado.</target>       </trans-unit>
        <trans-unit id="1113" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialConvexHull(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'SpatialConvexHull' function with the specified argument, which must have an Edm.Geometry result type.</source>
          <target state="translated">Cria uma <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função "SpatialConvexHull" canônica com o argumento especificado, que deve ter um tipo de resultado Edm.Geometry.</target>       </trans-unit>
        <trans-unit id="1114" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialConvexHull(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Geometry.</source>
          <target state="translated">O tipo de resultado da expressão é Edm.Geometry.</target>       </trans-unit>
        <trans-unit id="1115" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialCrosses(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the first geometry value.</source>
          <target state="translated">Uma expressão que especifica o primeiro valor de geometria.</target>       </trans-unit>
        <trans-unit id="1116" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialCrosses(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the geometry value that should be compared with <bpt id="p1">&lt;c&gt;</bpt>geometryValue1<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Uma expressão que especifica o valor de geometria que deve ser comparado com <bpt id="p1">&lt;c&gt;</bpt>geometryValue1<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1117" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialCrosses(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'SpatialCrosses' function with the specified arguments, which must each have an Edm.Geometry result type.</source>
          <target state="translated">Cria uma <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função "SpatialCrosses" canônica com os argumentos especificados, os quais devem ter um tipo de resultado Edm.Geometry.</target>       </trans-unit>
        <trans-unit id="1118" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialCrosses(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Boolean.</source>
          <target state="translated">O tipo de resultado da expressão é Edm.Boolean.</target>       </trans-unit>
        <trans-unit id="1119" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialDifference(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the first spatial value.</source>
          <target state="translated">Uma expressão que especifica o primeiro valor espacial.</target>       </trans-unit>
        <trans-unit id="1120" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialDifference(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the spatial value for which the difference with <bpt id="p1">&lt;c&gt;</bpt>spatialValue1<ept id="p1">&lt;/c&gt;</ept> should be computed.</source>
          <target state="translated">Uma expressão que especifica o valor espacial para o qual a diferença com <bpt id="p1">&lt;c&gt;</bpt>spatialValue1<ept id="p1">&lt;/c&gt;</ept> deve ser computada.</target>       </trans-unit>
        <trans-unit id="1121" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialDifference(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'SpatialDifference' function with the specified arguments, which must each have an Edm.Geography or Edm.Geometry result type.</source>
          <target state="translated">Cria uma <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função "SpatialDifference" canônica com os argumentos especificados, os quais devem ter um tipo de resultado Edm.Geography ou Edm.Geometry.</target>       </trans-unit>
        <trans-unit id="1122" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialDifference(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of <ph id="ph1">&lt;paramref name="spatialValue1" /&gt;</ph> must match the result type of <ph id="ph2">&lt;paramref name="spatialValue2" /&gt;</ph>.</source>
          <target state="translated">O tipo de resultado de <ph id="ph1">&lt;paramref name="spatialValue1" /&gt;</ph> deve corresponder ao tipo de resultado de <ph id="ph2">&lt;paramref name="spatialValue2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1123" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialDifference(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the type of <ph id="ph1">&lt;paramref name="spatialValue1" /&gt;</ph> and <ph id="ph2">&lt;paramref name="spatialValue2" /&gt;</ph>.</source>
          <target state="translated">O tipo de resultado da expressão é o mesmo que o tipo de <ph id="ph1">&lt;paramref name="spatialValue1" /&gt;</ph> e <ph id="ph2">&lt;paramref name="spatialValue2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1124" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialDimension(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the value from which the Dimension value should be retrieved.</source>
          <target state="translated">Uma expressão que especifica o valor do qual o valor Dimension deve ser recuperado.</target>       </trans-unit>
        <trans-unit id="1125" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialDimension(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'SpatialDimension' function with the specified argument, which must have an Edm.Geography or Edm.Geometry result type.</source>
          <target state="translated">Cria uma <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função "SpatialDimension" canônica com o argumento especificado, que deve ter um tipo de resultado Edm.Geography ou Edm.Geometry.</target>       </trans-unit>
        <trans-unit id="1126" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialDimension(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Int32.</source>
          <target state="translated">O tipo de resultado da expressão é Edm.Int32.</target>       </trans-unit>
        <trans-unit id="1127" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialDisjoint(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the first spatial value.</source>
          <target state="translated">Uma expressão que especifica o primeiro valor espacial.</target>       </trans-unit>
        <trans-unit id="1128" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialDisjoint(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the spatial value that should be compared with <bpt id="p1">&lt;c&gt;</bpt>spatialValue1<ept id="p1">&lt;/c&gt;</ept> for disjointness.</source>
          <target state="translated">Uma expressão que especifica o valor espacial que deve ser comparado com <bpt id="p1">&lt;c&gt;</bpt>spatialValue1<ept id="p1">&lt;/c&gt;</ept> quanto à disjunção.</target>       </trans-unit>
        <trans-unit id="1129" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialDisjoint(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'SpatialDisjoint' function with the specified arguments, which must each have an Edm.Geography or Edm.Geometry result type.</source>
          <target state="translated">Cria uma <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função "SpatialDisjoint" canônica com os argumentos especificados, os quais devem ter um tipo de resultado Edm.Geography ou Edm.Geometry.</target>       </trans-unit>
        <trans-unit id="1130" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialDisjoint(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of <ph id="ph1">&lt;paramref name="spatialValue1" /&gt;</ph> must match the result type of <ph id="ph2">&lt;paramref name="spatialValue2" /&gt;</ph>.</source>
          <target state="translated">O tipo de resultado de <ph id="ph1">&lt;paramref name="spatialValue1" /&gt;</ph> deve corresponder ao tipo de resultado de <ph id="ph2">&lt;paramref name="spatialValue2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1131" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialDisjoint(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Boolean.</source>
          <target state="translated">O tipo de resultado da expressão é Edm.Boolean.</target>       </trans-unit>
        <trans-unit id="1132" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialElementAt(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the geography or geometry collection value.</source>
          <target state="translated">Uma expressão que especifica o valor de coleção de geometria ou geografia.</target>       </trans-unit>
        <trans-unit id="1133" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialElementAt(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the position of the element to be retrieved from within the geometry or geography collection.</source>
          <target state="translated">Uma expressão que especifica a posição do elemento a ser recuperado de dentro da coleção de geometria ou geografia.</target>       </trans-unit>
        <trans-unit id="1134" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialElementAt(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'SpatialElementAt' function with the specified arguments.</source>
          <target state="translated">Cria uma <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função "SpatialElementAt" canônica com os argumentos especificados.</target>       </trans-unit>
        <trans-unit id="1135" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialElementAt(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The first argument must have an Edm.Geography or Edm.Geometry result type.</source>
          <target state="translated">O primeiro argumento deve ter um tipo de resultado Edm.Geography ou Edm.Geometry.</target>       </trans-unit>
        <trans-unit id="1136" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialElementAt(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The second argument must have an integer numeric result type.</source>
          <target state="translated">O segundo argumento deve ter um tipo de resultado numérico inteiro.</target>       </trans-unit>
        <trans-unit id="1137" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialElementAt(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as that of <ph id="ph1">&lt;paramref name="spatialValue" /&gt;</ph>.</source>
          <target state="translated">O tipo de resultado da expressão é o mesmo que o de <ph id="ph1">&lt;paramref name="spatialValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1138" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialElementCount(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the geography or geometry collection value from which the number of elements should be retrieved.</source>
          <target state="translated">Uma expressão que especifica valor de coleção de geometria ou geografia do qual o número de elementos deve ser recuperado.</target>       </trans-unit>
        <trans-unit id="1139" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialElementCount(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'SpatialElementCount' function with the specified argument, which must have an Edm.Geography or Edm.Geometry result type.</source>
          <target state="translated">Cria uma <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função "SpatialElementCount" canônica com o argumento especificado, que deve ter um tipo de resultado Edm.Geography ou Edm.Geometry.</target>       </trans-unit>
        <trans-unit id="1140" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialElementCount(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Int32.</source>
          <target state="translated">O tipo de resultado da expressão é Edm.Int32.</target>       </trans-unit>
        <trans-unit id="1141" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialEnvelope(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the value from which the Envelope value should be retrieved.</source>
          <target state="translated">Uma expressão que especifica o valor do qual o valor Envelope deve ser recuperado.</target>       </trans-unit>
        <trans-unit id="1142" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialEnvelope(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'SpatialEnvelope' function with the specified argument, which must have an Edm.Geometry result type.</source>
          <target state="translated">Cria uma <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função "SpatialEnvelope" canônica com o argumento especificado, que deve ter um tipo de resultado Edm.Geometry.</target>       </trans-unit>
        <trans-unit id="1143" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialEnvelope(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Geometry.</source>
          <target state="translated">O tipo de resultado da expressão é Edm.Geometry.</target>       </trans-unit>
        <trans-unit id="1144" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialEquals(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the first spatial value.</source>
          <target state="translated">Uma expressão que especifica o primeiro valor espacial.</target>       </trans-unit>
        <trans-unit id="1145" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialEquals(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the spatial value that should be compared with <bpt id="p1">&lt;c&gt;</bpt>spatialValue1<ept id="p1">&lt;/c&gt;</ept> for equality.</source>
          <target state="translated">Uma expressão que especifica o valor espacial que deve ser comparado com <bpt id="p1">&lt;c&gt;</bpt>spatialValue1<ept id="p1">&lt;/c&gt;</ept> quanto à igualdade.</target>       </trans-unit>
        <trans-unit id="1146" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialEquals(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'SpatialEquals' function with the specified arguments, which must each have an Edm.Geography or Edm.Geometry result type.</source>
          <target state="translated">Cria uma <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função "SpatialEquals" canônica com os argumentos especificados, os quais devem ter um tipo de resultado Edm.Geography ou Edm.Geometry.</target>       </trans-unit>
        <trans-unit id="1147" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialEquals(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of <ph id="ph1">&lt;paramref name="spatialValue1" /&gt;</ph> must match the result type of <ph id="ph2">&lt;paramref name="spatialValue2" /&gt;</ph>.</source>
          <target state="translated">O tipo de resultado de <ph id="ph1">&lt;paramref name="spatialValue1" /&gt;</ph> deve corresponder ao tipo de resultado de <ph id="ph2">&lt;paramref name="spatialValue2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1148" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialEquals(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Boolean.</source>
          <target state="translated">O tipo de resultado da expressão é Edm.Boolean.</target>       </trans-unit>
        <trans-unit id="1149" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialIntersection(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the first spatial value.</source>
          <target state="translated">Uma expressão que especifica o primeiro valor espacial.</target>       </trans-unit>
        <trans-unit id="1150" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialIntersection(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the spatial value for which the intersection with <bpt id="p1">&lt;c&gt;</bpt>spatialValue1<ept id="p1">&lt;/c&gt;</ept> should be computed.</source>
          <target state="translated">Uma expressão que especifica o valor espacial para o qual a intersecção com <bpt id="p1">&lt;c&gt;</bpt>spatialValue1<ept id="p1">&lt;/c&gt;</ept> deve ser computada.</target>       </trans-unit>
        <trans-unit id="1151" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialIntersection(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'SpatialIntersection' function with the specified arguments, which must each have an Edm.Geography or Edm.Geometry result type.</source>
          <target state="translated">Cria uma <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função "SpatialIntersection" canônica com os argumentos especificados, os quais devem ter um tipo de resultado Edm.Geography ou Edm.Geometry.</target>       </trans-unit>
        <trans-unit id="1152" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialIntersection(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of <ph id="ph1">&lt;paramref name="spatialValue1" /&gt;</ph> must match the result type of <ph id="ph2">&lt;paramref name="spatialValue2" /&gt;</ph>.</source>
          <target state="translated">O tipo de resultado de <ph id="ph1">&lt;paramref name="spatialValue1" /&gt;</ph> deve corresponder ao tipo de resultado de <ph id="ph2">&lt;paramref name="spatialValue2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1153" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialIntersection(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the type of <ph id="ph1">&lt;paramref name="spatialValue1" /&gt;</ph> and <ph id="ph2">&lt;paramref name="spatialValue2" /&gt;</ph>.</source>
          <target state="translated">O tipo de resultado da expressão é o mesmo que o tipo de <ph id="ph1">&lt;paramref name="spatialValue1" /&gt;</ph> e <ph id="ph2">&lt;paramref name="spatialValue2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1154" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialIntersects(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the first spatial value.</source>
          <target state="translated">Uma expressão que especifica o primeiro valor espacial.</target>       </trans-unit>
        <trans-unit id="1155" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialIntersects(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the spatial value that should be compared with <bpt id="p1">&lt;c&gt;</bpt>spatialValue1<ept id="p1">&lt;/c&gt;</ept> for intersection.</source>
          <target state="translated">Uma expressão que especifica o valor espacial que deve ser comparado com <bpt id="p1">&lt;c&gt;</bpt>spatialValue1<ept id="p1">&lt;/c&gt;</ept> quanto à interseção.</target>       </trans-unit>
        <trans-unit id="1156" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialIntersects(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'SpatialIntersects' function with the specified arguments, which must each have an Edm.Geography or Edm.Geometry result type.</source>
          <target state="translated">Cria uma <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função "SpatialIntersects" canônica com os argumentos especificados, os quais devem ter um tipo de resultado Edm.Geography ou Edm.Geometry.</target>       </trans-unit>
        <trans-unit id="1157" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialIntersects(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of <ph id="ph1">&lt;paramref name="spatialValue1" /&gt;</ph> must match the result type of <ph id="ph2">&lt;paramref name="spatialValue2" /&gt;</ph>.</source>
          <target state="translated">O tipo de resultado de <ph id="ph1">&lt;paramref name="spatialValue1" /&gt;</ph> deve corresponder ao tipo de resultado de <ph id="ph2">&lt;paramref name="spatialValue2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1158" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialIntersects(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Boolean.</source>
          <target state="translated">O tipo de resultado da expressão é Edm.Boolean.</target>       </trans-unit>
        <trans-unit id="1159" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialLength(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the spatial curve value from which the length should be retrieved.</source>
          <target state="translated">Uma expressão que especifica o valor da curva espacial da qual o comprimento deve ser recuperado.</target>       </trans-unit>
        <trans-unit id="1160" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialLength(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'SpatialLength' function with the specified argument, which must have an Edm.Geography or Edm.Geometry result type.</source>
          <target state="translated">Cria uma <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função "SpatialLength" canônica com o argumento especificado, que deve ter um tipo de resultado Edm.Geography ou Edm.Geometry.</target>       </trans-unit>
        <trans-unit id="1161" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialLength(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Double.</source>
          <target state="translated">O tipo de resultado da expressão é Edm.Double.</target>       </trans-unit>
        <trans-unit id="1162" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialOverlaps(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the first geometry value.</source>
          <target state="translated">Uma expressão que especifica o primeiro valor de geometria.</target>       </trans-unit>
        <trans-unit id="1163" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialOverlaps(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the geometry value that should be compared with <bpt id="p1">&lt;c&gt;</bpt>geometryValue1<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Uma expressão que especifica o valor de geometria que deve ser comparado com <bpt id="p1">&lt;c&gt;</bpt>geometryValue1<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1164" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialOverlaps(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'SpatialOverlaps' function with the specified arguments, which must each have an Edm.Geometry result type.</source>
          <target state="translated">Cria uma <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função "SpatialOverlaps" canônica com os argumentos especificados, os quais devem ter um tipo de resultado Edm.Geometry.</target>       </trans-unit>
        <trans-unit id="1165" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialOverlaps(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Boolean.</source>
          <target state="translated">O tipo de resultado da expressão é Edm.Boolean.</target>       </trans-unit>
        <trans-unit id="1166" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialRelate(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the first geometry value.</source>
          <target state="translated">Uma expressão que especifica o primeiro valor de geometria.</target>       </trans-unit>
        <trans-unit id="1167" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialRelate(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the geometry value that should be compared with <bpt id="p1">&lt;c&gt;</bpt>geometryValue1<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Uma expressão que especifica o valor de geometria que deve ser comparado com <bpt id="p1">&lt;c&gt;</bpt>geometryValue1<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1168" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialRelate(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the text representation of the Dimensionally Extended Nine-Intersection Model (DE-9IM) intersection pattern used to compare <bpt id="p1">&lt;c&gt;</bpt>geometryValue1<ept id="p1">&lt;/c&gt;</ept> and <bpt id="p2">&lt;c&gt;</bpt>geometryValue2<ept id="p2">&lt;/c&gt;</ept>.</source>
          <target state="translated">Uma expressão que especifica a representação de texto do padrão de interseção DE-9IM (Dimensionally Extended Nine-Intersection Model) usado para comparar <bpt id="p1">&lt;c&gt;</bpt>geometryValue1<ept id="p1">&lt;/c&gt;</ept> e <bpt id="p2">&lt;c&gt;</bpt>geometryValue2<ept id="p2">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1169" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialRelate(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'SpatialRelate' function with the specified arguments, which must have Edm.Geometry and string result types.</source>
          <target state="translated">Cria uma <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função "SpatialRelate" canônica com os argumentos especificados, os quais devem ter tipos de resultados Edm.Geometry e cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="1170" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialRelate(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Boolean.</source>
          <target state="translated">O tipo de resultado da expressão é Edm.Boolean.</target>       </trans-unit>
        <trans-unit id="1171" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialSymmetricDifference(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the first spatial value.</source>
          <target state="translated">Uma expressão que especifica o primeiro valor espacial.</target>       </trans-unit>
        <trans-unit id="1172" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialSymmetricDifference(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the spatial value for which the symmetric difference with <bpt id="p1">&lt;c&gt;</bpt>spatialValue1<ept id="p1">&lt;/c&gt;</ept> should be computed.</source>
          <target state="translated">Uma expressão que especifica o valor espacial para o qual a diferença simétrica com <bpt id="p1">&lt;c&gt;</bpt>spatialValue1<ept id="p1">&lt;/c&gt;</ept> deve ser computada.</target>       </trans-unit>
        <trans-unit id="1173" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialSymmetricDifference(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'SpatialSymmetricDifference' function with the specified arguments, which must each have an Edm.Geography or Edm.Geometry result type.</source>
          <target state="translated">Cria uma <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função "SpatialSymmetricDifference" canônica com os argumentos especificados, os quais devem ter um tipo de resultado Edm.Geography ou Edm.Geometry.</target>       </trans-unit>
        <trans-unit id="1174" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialSymmetricDifference(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of <ph id="ph1">&lt;paramref name="spatialValue1" /&gt;</ph> must match the result type of <ph id="ph2">&lt;paramref name="spatialValue2" /&gt;</ph>.</source>
          <target state="translated">O tipo de resultado de <ph id="ph1">&lt;paramref name="spatialValue1" /&gt;</ph> deve corresponder ao tipo de resultado de <ph id="ph2">&lt;paramref name="spatialValue2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1175" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialSymmetricDifference(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the type of <ph id="ph1">&lt;paramref name="spatialValue1" /&gt;</ph> and <ph id="ph2">&lt;paramref name="spatialValue2" /&gt;</ph>.</source>
          <target state="translated">O tipo de resultado da expressão é o mesmo que o tipo de <ph id="ph1">&lt;paramref name="spatialValue1" /&gt;</ph> e <ph id="ph2">&lt;paramref name="spatialValue2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1176" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialTouches(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the first geometry value.</source>
          <target state="translated">Uma expressão que especifica o primeiro valor de geometria.</target>       </trans-unit>
        <trans-unit id="1177" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialTouches(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the geometry value that should be compared with <bpt id="p1">&lt;c&gt;</bpt>geometryValue1<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Uma expressão que especifica o valor de geometria que deve ser comparado com <bpt id="p1">&lt;c&gt;</bpt>geometryValue1<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1178" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialTouches(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'SpatialTouches' function with the specified arguments, which must each have an Edm.Geometry result type.</source>
          <target state="translated">Cria uma <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função "SpatialTouches" canônica com os argumentos especificados, os quais devem ter um tipo de resultado Edm.Geometry.</target>       </trans-unit>
        <trans-unit id="1179" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialTouches(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Boolean.</source>
          <target state="translated">O tipo de resultado da expressão é Edm.Boolean.</target>       </trans-unit>
        <trans-unit id="1180" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialTypeName(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the value from which the Geometry Type name should be retrieved.</source>
          <target state="translated">Uma expressão que especifica o valor do qual o nome de Geometry Type deve ser recuperado.</target>       </trans-unit>
        <trans-unit id="1181" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialTypeName(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'SpatialTypeName' function with the specified argument, which must have an Edm.Geography or Edm.Geometry result type.</source>
          <target state="translated">Cria uma <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função "SpatialTypeName" canônica com o argumento especificado, que deve ter um tipo de resultado Edm.Geography ou Edm.Geometry.</target>       </trans-unit>
        <trans-unit id="1182" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialTypeName(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.String.</source>
          <target state="translated">O tipo de resultado da expressão é Edm.String.</target>       </trans-unit>
        <trans-unit id="1183" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialUnion(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the first spatial value.</source>
          <target state="translated">Uma expressão que especifica o primeiro valor espacial.</target>       </trans-unit>
        <trans-unit id="1184" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialUnion(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the spatial value for which the union with <bpt id="p1">&lt;c&gt;</bpt>spatialValue1<ept id="p1">&lt;/c&gt;</ept> should be computed.</source>
          <target state="translated">Uma expressão que especifica o valor espacial para o qual a união com <bpt id="p1">&lt;c&gt;</bpt>spatialValue1<ept id="p1">&lt;/c&gt;</ept> deve ser computada.</target>       </trans-unit>
        <trans-unit id="1185" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialUnion(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'SpatialUnion' function with the specified arguments, which must each have an Edm.Geography or Edm.Geometry result type.</source>
          <target state="translated">Cria uma <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função "SpatialUnion" canônica com os argumentos especificados, os quais devem ter um tipo de resultado Edm.Geography ou Edm.Geometry.</target>       </trans-unit>
        <trans-unit id="1186" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialUnion(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of <ph id="ph1">&lt;paramref name="spatialValue1" /&gt;</ph> must match the result type of <ph id="ph2">&lt;paramref name="spatialValue2" /&gt;</ph>.</source>
          <target state="translated">O tipo de resultado de <ph id="ph1">&lt;paramref name="spatialValue1" /&gt;</ph> deve corresponder ao tipo de resultado de <ph id="ph2">&lt;paramref name="spatialValue2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1187" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialUnion(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the type of <ph id="ph1">&lt;paramref name="spatialValue1" /&gt;</ph> and <ph id="ph2">&lt;paramref name="spatialValue2" /&gt;</ph>.</source>
          <target state="translated">O tipo de resultado da expressão é o mesmo que o tipo de <ph id="ph1">&lt;paramref name="spatialValue1" /&gt;</ph> e <ph id="ph2">&lt;paramref name="spatialValue2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1188" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialWithin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the first geometry value.</source>
          <target state="translated">Uma expressão que especifica o primeiro valor de geometria.</target>       </trans-unit>
        <trans-unit id="1189" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialWithin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the geometry value that should be compared with <bpt id="p1">&lt;c&gt;</bpt>geometryValue1<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Uma expressão que especifica o valor de geometria que deve ser comparado com <bpt id="p1">&lt;c&gt;</bpt>geometryValue1<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1190" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialWithin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'SpatialWithin' function with the specified arguments, which must each have an Edm.Geometry result type.</source>
          <target state="translated">Cria uma <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função "SpatialWithin" canônica com os argumentos especificados, os quais devem ter um tipo de resultado Edm.Geometry.</target>       </trans-unit>
        <trans-unit id="1191" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialWithin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Boolean.</source>
          <target state="translated">O tipo de resultado da expressão é Edm.Boolean.</target>       </trans-unit>
        <trans-unit id="1192" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.StartPoint(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the spatial curve value from which the start point should be retrieved.</source>
          <target state="translated">Uma expressão que especifica o valor da curva espacial da qual o ponto de início deve ser recuperado.</target>       </trans-unit>
        <trans-unit id="1193" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.StartPoint(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'StartPoint' function with the specified argument, which must have an Edm.Geography or Edm.Geometry result type.</source>
          <target state="translated">Cria uma <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função "StartPoint" canônica com o argumento especificado, que deve ter um tipo de resultado Edm.Geography ou Edm.Geometry.</target>       </trans-unit>
        <trans-unit id="1194" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.StartPoint(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type is the same as that of <ph id="ph1">&lt;paramref name="spatialValue" /&gt;</ph>.</source>
          <target state="translated">O tipo de resultado é o mesmo de <ph id="ph1">&lt;paramref name="spatialValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1195" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.XCoordinate(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the geometry point value from which the X co-ordinate value should be retrieved.</source>
          <target state="translated">Uma expressão que especifica o valor do ponto de geometria do qual o valor da coordenada X deve ser recuperado.</target>       </trans-unit>
        <trans-unit id="1196" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.XCoordinate(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'XCoordinate' function with the specified argument, which must have an Edm.Geometry result type.</source>
          <target state="translated">Cria uma <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função "XCoordinate" canônica com o argumento especificado, que deve ter um tipo de resultado Edm.Geometry.</target>       </trans-unit>
        <trans-unit id="1197" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.XCoordinate(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Double.</source>
          <target state="translated">O tipo de resultado da expressão é Edm.Double.</target>       </trans-unit>
        <trans-unit id="1198" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.YCoordinate(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the geometry point value from which the Y co-ordinate value should be retrieved.</source>
          <target state="translated">Uma expressão que especifica o valor do ponto de geometria do qual o valor da coordenada Y deve ser recuperado.</target>       </trans-unit>
        <trans-unit id="1199" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.YCoordinate(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'YCoordinate' function with the specified argument, which must have an Edm.Geometry result type.</source>
          <target state="translated">Cria uma <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> que invoca a função "YCoordinate" canônica com o argumento especificado, que deve ter um tipo de resultado Edm.Geometry.</target>       </trans-unit>
        <trans-unit id="1200" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.YCoordinate(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Double.</source>
          <target state="translated">O tipo de resultado da expressão é Edm.Double.</target>       </trans-unit>
        <trans-unit id="1201" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataReaderExtensions.CanGetColumnSchema(System.Data.Common.DbDataReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataReader" /&gt;</ph> to be checked for column schema support.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataReader" /&gt;</ph> a ser verificado para suporte de esquema de coluna.</target>       </trans-unit>
        <trans-unit id="1202" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataReaderExtensions.CanGetColumnSchema(System.Data.Common.DbDataReader)">
          <source>Gets a value that indicates whether a <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataReader" /&gt;</ph> can get a column schema.</source>
          <target state="translated">Obtém um valor que indica se um <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataReader" /&gt;</ph> pode obter um esquema de coluna.</target>       </trans-unit>
        <trans-unit id="1203" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataReaderExtensions.GetColumnSchema(System.Data.Common.DbDataReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataReader" /&gt;</ph> to return the column schema.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataReader" /&gt;</ph> para retornar o esquema de coluna.</target>       </trans-unit>
        <trans-unit id="1204" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataReaderExtensions.GetColumnSchema(System.Data.Common.DbDataReader)">
          <source>Gets the column schema (<ph id="ph1">&lt;see cref="T:System.Data.Common.DbColumn" /&gt;</ph> collection) for a <ph id="ph2">&lt;see cref="T:System.Data.Common.DbDataReader" /&gt;</ph>.</source>
          <target state="translated">Obtém o esquema da coluna (coleção <ph id="ph1">&lt;see cref="T:System.Data.Common.DbColumn" /&gt;</ph>) para um <ph id="ph2">&lt;see cref="T:System.Data.Common.DbDataReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn)">
          <source>A generic parameter that specifies the return type of the column.</source>
          <target state="translated">Um parâmetro genérico que especifica o tipo de retorno da coluna.</target>       </trans-unit>
        <trans-unit id="1206" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn)">
          <source>The input <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>, which acts as the <ph id="ph2">&lt;see langword="this" /&gt;</ph> instance for the extension method.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> de entrada, que funciona como a instância <ph id="ph2">&lt;see langword="this" /&gt;</ph> do método de extensão.</target>       </trans-unit>
        <trans-unit id="1207" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn)">
          <source>The input <ph id="ph1">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph> object that specifies the column to return the value of.</source>
          <target state="translated">O objeto <ph id="ph1">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph> de entrada que especifica a coluna cujo valor deverá ser retornado.</target>       </trans-unit>
        <trans-unit id="1208" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn)">
          <source>Provides strongly-typed access to each of the column values in the specified row.</source>
          <target state="translated">Fornece acesso fortemente tipado a cada um dos valores da coluna na linha especificada.</target>       </trans-unit>
        <trans-unit id="1209" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn)">
          <source>The <ph id="ph1">&lt;see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn)" /&gt;</ph> method also supports nullable types.</source>
          <target state="translated">O método <ph id="ph1">&lt;see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn)" /&gt;</ph> também dá suporte a tipos que permitem valor nulo.</target>       </trans-unit>
        <trans-unit id="1210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)">
          <source>A generic parameter that specifies the return type of the column.</source>
          <target state="translated">Um parâmetro genérico que especifica o tipo de retorno da coluna.</target>       </trans-unit>
        <trans-unit id="1211" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)">
          <source>The input <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>, which acts as the <ph id="ph2">&lt;see langword="this" /&gt;</ph> instance for the extension method.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> de entrada, que funciona como a instância <ph id="ph2">&lt;see langword="this" /&gt;</ph> do método de extensão.</target>       </trans-unit>
        <trans-unit id="1212" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)">
          <source>The input <ph id="ph1">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph> object that specifies the column to return the value of.</source>
          <target state="translated">O objeto <ph id="ph1">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph> de entrada que especifica a coluna cujo valor deverá ser retornado.</target>       </trans-unit>
        <trans-unit id="1213" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataRowVersion" /&gt;</ph> enumeration that specifies the version of the column value to return, such as <ph id="ph2">&lt;see langword="Current" /&gt;</ph> or <ph id="ph3">&lt;see langword="Original" /&gt;</ph> version.</source>
          <target state="translated">Uma enumeração <ph id="ph1">&lt;see cref="T:System.Data.DataRowVersion" /&gt;</ph> que especifica a versão do valor da coluna a ser retornada, como a versão <ph id="ph2">&lt;see langword="Current" /&gt;</ph> ou <ph id="ph3">&lt;see langword="Original" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1214" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)">
          <source>Provides strongly-typed access to each of the column values in the specified row.</source>
          <target state="translated">Fornece acesso fortemente tipado a cada um dos valores da coluna na linha especificada.</target>       </trans-unit>
        <trans-unit id="1215" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)">
          <source>The <ph id="ph1">&lt;see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)" /&gt;</ph> method also supports nullable types.</source>
          <target state="translated">O método <ph id="ph1">&lt;see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)" /&gt;</ph> também dá suporte a tipos que permitem valor nulo.</target>       </trans-unit>
        <trans-unit id="1216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32)">
          <source>A generic parameter that specifies the return type of the column.</source>
          <target state="translated">Um parâmetro genérico que especifica o tipo de retorno da coluna.</target>       </trans-unit>
        <trans-unit id="1217" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32)">
          <source>The input <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>, which acts as the <ph id="ph2">&lt;see langword="this" /&gt;</ph> instance for the extension method.</source>
          <target state="translated">A entrada <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>, que funciona como a instância <ph id="ph2">&lt;see langword="this" /&gt;</ph> do método de extensão.</target>       </trans-unit>
        <trans-unit id="1218" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32)">
          <source>The column index.</source>
          <target state="translated">O índice da coluna.</target>       </trans-unit>
        <trans-unit id="1219" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32)">
          <source>Provides strongly-typed access to each of the column values in the specified row.</source>
          <target state="translated">Fornece acesso fortemente tipado a cada um dos valores da coluna na linha especificada.</target>       </trans-unit>
        <trans-unit id="1220" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32)" /&gt;</ph> method also supports nullable types.</source>
          <target state="translated">O método <ph id="ph1">&lt;see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32)" /&gt;</ph> também dá suporte a tipos que permitem valor nulo.</target>       </trans-unit>
        <trans-unit id="1221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)">
          <source>A generic parameter that specifies the return type of the column.</source>
          <target state="translated">Um parâmetro genérico que especifica o tipo de retorno da coluna.</target>       </trans-unit>
        <trans-unit id="1222" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)">
          <source>The input <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>, which acts as the <ph id="ph2">&lt;see langword="this" /&gt;</ph> instance for the extension method.</source>
          <target state="translated">A entrada <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>, que funciona como a instância <ph id="ph2">&lt;see langword="this" /&gt;</ph> do método de extensão.</target>       </trans-unit>
        <trans-unit id="1223" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)">
          <source>The zero-based ordinal of the column to return the value of.</source>
          <target state="translated">A posição ordinal baseada em zero da coluna da qual retornar o valor.</target>       </trans-unit>
        <trans-unit id="1224" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataRowVersion" /&gt;</ph> enumeration that specifies the version of the column value to return, such as <ph id="ph2">&lt;see langword="Current" /&gt;</ph> or <ph id="ph3">&lt;see langword="Original" /&gt;</ph> version.</source>
          <target state="translated">Uma enumeração <ph id="ph1">&lt;see cref="T:System.Data.DataRowVersion" /&gt;</ph> que especifica a versão do valor da coluna a ser retornada, como a versão <ph id="ph2">&lt;see langword="Current" /&gt;</ph> ou <ph id="ph3">&lt;see langword="Original" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1225" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)">
          <source>Provides strongly-typed access to each of the column values in the specified row.</source>
          <target state="translated">Fornece acesso fortemente tipado a cada um dos valores da coluna na linha especificada.</target>       </trans-unit>
        <trans-unit id="1226" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)">
          <source>The <ph id="ph1">&lt;see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)" /&gt;</ph> method also supports nullable types.</source>
          <target state="translated">O método <ph id="ph1">&lt;see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)" /&gt;</ph> também dá suporte a tipos que permitem valor nulo.</target>       </trans-unit>
        <trans-unit id="1227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String)">
          <source>A generic parameter that specifies the return type of the column.</source>
          <target state="translated">Um parâmetro genérico que especifica o tipo de retorno da coluna.</target>       </trans-unit>
        <trans-unit id="1228" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String)">
          <source>The input <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>, which acts as the <ph id="ph2">&lt;see langword="this" /&gt;</ph> instance for the extension method.</source>
          <target state="translated">A entrada <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>, que funciona como a instância <ph id="ph2">&lt;see langword="this" /&gt;</ph> do método de extensão.</target>       </trans-unit>
        <trans-unit id="1229" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String)">
          <source>The name of the column to return the value of.</source>
          <target state="translated">O nome da coluna para o qual o valor será retornado.</target>       </trans-unit>
        <trans-unit id="1230" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String)">
          <source>Provides strongly-typed access to each of the column values in the specified row.</source>
          <target state="translated">Fornece acesso fortemente tipado a cada um dos valores da coluna na linha especificada.</target>       </trans-unit>
        <trans-unit id="1231" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String)">
          <source>The <ph id="ph1">&lt;see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String)" /&gt;</ph> method also supports nullable types.</source>
          <target state="translated">O método <ph id="ph1">&lt;see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String)" /&gt;</ph> também dá suporte a tipos que permitem valor nulo.</target>       </trans-unit>
        <trans-unit id="1232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)">
          <source>A generic parameter that specifies the return type of the column.</source>
          <target state="translated">Um parâmetro genérico que especifica o tipo de retorno da coluna.</target>       </trans-unit>
        <trans-unit id="1233" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)">
          <source>The input <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>, which acts as the <ph id="ph2">&lt;see langword="this" /&gt;</ph> instance for the extension method.</source>
          <target state="translated">A entrada <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>, que funciona como a instância <ph id="ph2">&lt;see langword="this" /&gt;</ph> do método de extensão.</target>       </trans-unit>
        <trans-unit id="1234" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)">
          <source>The name of the column to return the value of.</source>
          <target state="translated">O nome da coluna para o qual o valor será retornado.</target>       </trans-unit>
        <trans-unit id="1235" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataRowVersion" /&gt;</ph> enumeration that specifies the version of the column value to return, such as <ph id="ph2">&lt;see langword="Current" /&gt;</ph> or <ph id="ph3">&lt;see langword="Original" /&gt;</ph> version.</source>
          <target state="translated">Uma enumeração <ph id="ph1">&lt;see cref="T:System.Data.DataRowVersion" /&gt;</ph> que especifica a versão do valor da coluna a ser retornada, como a versão <ph id="ph2">&lt;see langword="Current" /&gt;</ph> ou <ph id="ph3">&lt;see langword="Original" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1236" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)">
          <source>Provides strongly-typed access to each of the column values in the specified row.</source>
          <target state="translated">Fornece acesso fortemente tipado a cada um dos valores da coluna na linha especificada.</target>       </trans-unit>
        <trans-unit id="1237" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)">
          <source>The <ph id="ph1">&lt;see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)" /&gt;</ph> method also supports nullable types.</source>
          <target state="translated">O método <ph id="ph1">&lt;see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)" /&gt;</ph> também dá suporte a tipos que permitem valor nulo.</target>       </trans-unit>
        <trans-unit id="1238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)">
          <source>A generic parameter that specifies the value type of the column.</source>
          <target state="translated">Um parâmetro genérico que especifica o tipo de valor da coluna.</target>       </trans-unit>
        <trans-unit id="1239" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)">
          <source>The input <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>, which acts as the <ph id="ph2">&lt;see langword="this" /&gt;</ph> instance for the extension method.</source>
          <target state="translated">A entrada <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>, que funciona como a instância <ph id="ph2">&lt;see langword="this" /&gt;</ph> do método de extensão.</target>       </trans-unit>
        <trans-unit id="1240" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)">
          <source>The input <ph id="ph1">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph> specifies which row value to retrieve.</source>
          <target state="translated">A entrada <ph id="ph1">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph> especifica qual valor de linha a ser recuperado.</target>       </trans-unit>
        <trans-unit id="1241" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)">
          <source>The new row value for the specified column, of type <bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O novo valor de linha para a coluna especificada, do tipo <bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1242" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)">
          <source>Sets a new value for the specified column in the <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</source>
          <target state="translated">Define um novo valor para a coluna especificada no <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1243" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)">
          <source>The <ph id="ph1">&lt;see cref="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)" /&gt;</ph> method also supports nullable types.</source>
          <target state="translated">O método <ph id="ph1">&lt;see cref="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)" /&gt;</ph> também dá suporte a tipos anuláveis.</target>       </trans-unit>
        <trans-unit id="1244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)">
          <source>A generic parameter that specifies the value type of the column.</source>
          <target state="translated">Um parâmetro genérico que especifica o tipo de valor da coluna.</target>       </trans-unit>
        <trans-unit id="1245" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)">
          <source>The input <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>, which acts as the <ph id="ph2">&lt;see langword="this" /&gt;</ph> instance for the extension method.</source>
          <target state="translated">A entrada <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>, que funciona como a instância <ph id="ph2">&lt;see langword="this" /&gt;</ph> do método de extensão.</target>       </trans-unit>
        <trans-unit id="1246" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)">
          <source>The zero-based ordinal of the column to set the value of.</source>
          <target state="translated">A posição ordinal baseada em zero da coluna da qual definir o valor.</target>       </trans-unit>
        <trans-unit id="1247" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)">
          <source>The new row value for the specified column, of type <bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O novo valor de linha para a coluna especificada, do tipo <bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1248" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)">
          <source>Sets a new value for the specified column in the <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> the method is called on.</source>
          <target state="translated">Define um novo valor para a coluna especificada na <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> em que o método é chamado.</target>       </trans-unit>
        <trans-unit id="1249" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)">
          <source>The <ph id="ph1">&lt;see cref="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)" /&gt;</ph> method also supports nullable types.</source>
          <target state="translated">O método <ph id="ph1">&lt;see cref="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)" /&gt;</ph> também dá suporte a tipos que permitem valor nulo.</target>       </trans-unit>
        <trans-unit id="1250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)">
          <source>A generic parameter that specifies the value type of the column.</source>
          <target state="translated">Um parâmetro genérico que especifica o tipo de valor da coluna.</target>       </trans-unit>
        <trans-unit id="1251" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)">
          <source>The input <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>, which acts as the <ph id="ph2">&lt;see langword="this" /&gt;</ph> instance for the extension method.</source>
          <target state="translated">A entrada <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>, que funciona como a instância <ph id="ph2">&lt;see langword="this" /&gt;</ph> do método de extensão.</target>       </trans-unit>
        <trans-unit id="1252" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)">
          <source>The name of the column to set the value of.</source>
          <target state="translated">O nome da coluna para o qual o valor será definido.</target>       </trans-unit>
        <trans-unit id="1253" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)">
          <source>The new row value for the specified column, of type <bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O novo valor de linha para a coluna especificada, do tipo <bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1254" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)">
          <source>Sets a new value for the specified column in the <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</source>
          <target state="translated">Define um novo valor para a coluna especificada no <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1255" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)">
          <source>The <ph id="ph1">&lt;see cref="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)" /&gt;</ph> method also supports nullable types.</source>
          <target state="translated">O método <ph id="ph1">&lt;see cref="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)" /&gt;</ph> também dá suporte a tipos que permitem valor nulo.</target>       </trans-unit>
        <trans-unit id="1256" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableExtensions.AsDataView(System.Data.DataTable)">
          <source>The source <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> from which the LINQ-enabled <ph id="ph2">&lt;see cref="T:System.Data.DataView" /&gt;</ph> is created.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> de origem com base no qual o <ph id="ph2">&lt;see cref="T:System.Data.DataView" /&gt;</ph> habilitado para LINQ é criado.</target>       </trans-unit>
        <trans-unit id="1257" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableExtensions.AsDataView(System.Data.DataTable)">
          <source>Creates and returns a LINQ-enabled <ph id="ph1">&lt;see cref="T:System.Data.DataView" /&gt;</ph> object.</source>
          <target state="translated">Cria e retorna um objeto <ph id="ph1">&lt;see cref="T:System.Data.DataView" /&gt;</ph> habilitado para LINQ.</target>       </trans-unit>
        <trans-unit id="1258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableExtensions.AsDataView``1(System.Data.EnumerableRowCollection{``0})">
          <source>The type of objects in the source sequence, typically <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</source>
          <target state="translated">O tipo de objetos na sequência de origem, normalmente <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1259" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableExtensions.AsDataView``1(System.Data.EnumerableRowCollection{``0})">
          <source>The source <ph id="ph1">[!INCLUDE[linq_dataset](~/includes/linq-dataset-md.md)]</ph> query from which the LINQ-enabled <ph id="ph2">&lt;see cref="T:System.Data.DataView" /&gt;</ph> is created.</source>
          <target state="translated">A consulta <ph id="ph1">[!INCLUDE[linq_dataset](~/includes/linq-dataset-md.md)]</ph> de origem com base na qual o <ph id="ph2">&lt;see cref="T:System.Data.DataView" /&gt;</ph> habilitado para LINQ é criado.</target>       </trans-unit>
        <trans-unit id="1260" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableExtensions.AsDataView``1(System.Data.EnumerableRowCollection{``0})">
          <source>Creates and returns a LINQ-enabled <ph id="ph1">&lt;see cref="T:System.Data.DataView" /&gt;</ph> object representing the <ph id="ph2">[!INCLUDE[linq_dataset](~/includes/linq-dataset-md.md)]</ph> query.</source>
          <target state="translated">Cria e retorna um objeto <ph id="ph1">&lt;see cref="T:System.Data.DataView" /&gt;</ph> habilitado para LINQ que representa a consulta <ph id="ph2">[!INCLUDE[linq_dataset](~/includes/linq-dataset-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="1261" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableExtensions.AsEnumerable(System.Data.DataTable)">
          <source>The source <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> to make enumerable.</source>
          <target state="translated">A origem <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> a ser tornada enumerável.</target>       </trans-unit>
        <trans-unit id="1262" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableExtensions.AsEnumerable(System.Data.DataTable)">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> object, where the generic parameter <ph id="ph2">&lt;paramref name="T" /&gt;</ph> is <ph id="ph3">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</source>
          <target state="translated">Retorna um objeto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> em que o parâmetro genérico <ph id="ph2">&lt;paramref name="T" /&gt;</ph> é <ph id="ph3">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1263" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableExtensions.AsEnumerable(System.Data.DataTable)">
          <source>This object can be used in a <ph id="ph1">[!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)]</ph> expression or method query.</source>
          <target state="translated">Esse objeto pode ser usado em uma expressão <ph id="ph1">[!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)]</ph> ou um método de consulta.</target>       </trans-unit>
        <trans-unit id="1264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The type of objects in the source sequence, typically <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</source>
          <target state="translated">O tipo de objetos na sequência de origem, normalmente <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1265" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The source <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> sequence.</source>
          <target state="translated">A sequência de origem <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1266" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0})">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> that contains copies of the <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects, given an input <ph id="ph3">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> object where the generic parameter <ph id="ph4">&lt;paramref name="T" /&gt;</ph> is <ph id="ph5">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</source>
          <target state="translated">Retorna um <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> que contém cópias dos objetos <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>, dado um objeto <ph id="ph3">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> de entrada em que o parâmetro genérico <ph id="ph4">&lt;paramref name="T" /&gt;</ph> é <ph id="ph5">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption)">
          <source>The type of objects in the source sequence, typically <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</source>
          <target state="translated">O tipo de objetos na sequência de origem, normalmente <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1268" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption)">
          <source>The source <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> sequence.</source>
          <target state="translated">A sequência de origem <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1269" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption)">
          <source>The destination <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> de destino.</target>       </trans-unit>
        <trans-unit id="1270" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.LoadOption" /&gt;</ph> enumeration that specifies the <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> load options.</source>
          <target state="translated">Uma enumeração <ph id="ph1">&lt;see cref="T:System.Data.LoadOption" /&gt;</ph> que especifica as opções de carga do <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1271" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption)">
          <source>Copies <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects to the specified <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>, given an input <ph id="ph3">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> object where the generic parameter <ph id="ph4">&lt;paramref name="T" /&gt;</ph> is <ph id="ph5">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</source>
          <target state="translated">Copia objetos <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> no <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> especificado, dado um objeto <ph id="ph3">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> de entrada em que o parâmetro genérico <ph id="ph4">&lt;paramref name="T" /&gt;</ph> é <ph id="ph5">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>The type of objects in the source sequence, typically <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</source>
          <target state="translated">O tipo de objetos na sequência de origem, normalmente <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1273" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>The source <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> sequence.</source>
          <target state="translated">A sequência de origem <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1274" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>The destination <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> de destino.</target>       </trans-unit>
        <trans-unit id="1275" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.LoadOption" /&gt;</ph> enumeration that specifies the <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> load options.</source>
          <target state="translated">Uma enumeração <ph id="ph1">&lt;see cref="T:System.Data.LoadOption" /&gt;</ph> que especifica as opções de carga do <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1276" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.FillErrorEventHandler" /&gt;</ph> delegate that represents the method that will handle an error.</source>
          <target state="translated">Um delegado <ph id="ph1">&lt;see cref="T:System.Data.FillErrorEventHandler" /&gt;</ph> que representa o método que vai manipular um erro.</target>       </trans-unit>
        <trans-unit id="1277" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Copies <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects to the specified <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>, given an input <ph id="ph3">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> object where the generic parameter <ph id="ph4">&lt;paramref name="T" /&gt;</ph> is <ph id="ph5">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</source>
          <target state="translated">Copia objetos <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> no <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> especificado, dado um objeto <ph id="ph3">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> de entrada em que o parâmetro genérico <ph id="ph4">&lt;paramref name="T" /&gt;</ph> é <ph id="ph5">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1278" translate="yes" xml:space="preserve" uid="M:System.Data.Entity.Design.MetadataExtensionMethods.GetPrimitiveTypes(System.Data.Metadata.Edm.EdmItemCollection,System.Version)">
          <source>The item collection from which to retrieve the list of primitive types</source>
          <target state="translated">A coleção de itens da qual recuperar a lista de tipos primitivos</target>       </trans-unit>
        <trans-unit id="1279" translate="yes" xml:space="preserve" uid="M:System.Data.Entity.Design.MetadataExtensionMethods.GetPrimitiveTypes(System.Data.Metadata.Edm.EdmItemCollection,System.Version)">
          <source>The version of edm to use</source>
          <target state="translated">A versão de EDM a ser usada</target>       </trans-unit>
        <trans-unit id="1280" translate="yes" xml:space="preserve" uid="M:System.Data.Entity.Design.MetadataExtensionMethods.GetPrimitiveTypes(System.Data.Metadata.Edm.EdmItemCollection,System.Version)">
          <source>Get the list of primitive types for the given version of Edm</source>
          <target state="translated">Obter a lista de tipos primitivos para a versão do EDM fornecida</target>       </trans-unit>
        <trans-unit id="1281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EnumerableRowCollectionExtensions.Cast``1(System.Data.EnumerableRowCollection)">
          <source>The type to convert the elements of source to.</source>
          <target state="translated">O tipo para converter os elementos de origem para.</target>       </trans-unit>
        <trans-unit id="1282" translate="yes" xml:space="preserve" uid="M:System.Data.EnumerableRowCollectionExtensions.Cast``1(System.Data.EnumerableRowCollection)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.EnumerableRowCollection" /&gt;</ph> that contains the elements to be converted.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Data.EnumerableRowCollection" /&gt;</ph> que contém os elementos a serem convertidos.</target>       </trans-unit>
        <trans-unit id="1283" translate="yes" xml:space="preserve" uid="M:System.Data.EnumerableRowCollectionExtensions.Cast``1(System.Data.EnumerableRowCollection)">
          <source>Converts the elements of an <ph id="ph1">&lt;see cref="T:System.Data.EnumerableRowCollection" /&gt;</ph> to the specified type.</source>
          <target state="translated">Converte os elementos de um <ph id="ph1">&lt;see cref="T:System.Data.EnumerableRowCollection" /&gt;</ph> para o tipo especificado.</target>       </trans-unit>
        <trans-unit id="1284" translate="yes" xml:space="preserve" uid="M:System.Data.EnumerableRowCollectionExtensions.Cast``1(System.Data.EnumerableRowCollection)">
          <source>This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</source>
          <target state="translated">Essa API dá suporte à infraestrutura do .NET Framework e não deve ser usada diretamente no código.</target>       </trans-unit>
        <trans-unit id="1285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})">
          <source>The type of the row elements in <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>, typically <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</source>
          <target state="translated">O tipo dos elementos de linha no <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>, normalmente <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo de chave retornada pelo <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1287" translate="yes" xml:space="preserve" uid="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.EnumerableRowCollection" /&gt;</ph> containing the <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> elements to be ordered.</source>
          <target state="translated">Uma <ph id="ph1">&lt;see cref="T:System.Data.EnumerableRowCollection" /&gt;</ph> contendo os elementos <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> a serem ordenados.</target>       </trans-unit>
        <trans-unit id="1288" translate="yes" xml:space="preserve" uid="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})">
          <source>A function to extract a key from an element.</source>
          <target state="translated">Uma função para extrair uma chave de um elemento.</target>       </trans-unit>
        <trans-unit id="1289" translate="yes" xml:space="preserve" uid="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})">
          <source>Sorts the rows of a <ph id="ph1">&lt;see cref="T:System.Data.EnumerableRowCollection" /&gt;</ph> in ascending order according to the specified key.</source>
          <target state="translated">Classifica as linhas de uma <ph id="ph1">&lt;see cref="T:System.Data.EnumerableRowCollection" /&gt;</ph> em ordem crescente de acordo com a chave especificada.</target>       </trans-unit>
        <trans-unit id="1290" translate="yes" xml:space="preserve" uid="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})">
          <source>This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</source>
          <target state="translated">Essa API dá suporte à infraestrutura do .NET Framework e não deve ser usada diretamente no código.</target>       </trans-unit>
        <trans-unit id="1291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>The type of the row elements in <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>, typically <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</source>
          <target state="translated">O tipo dos elementos de linha no <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>, normalmente <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo de chave retornada pelo <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1293" translate="yes" xml:space="preserve" uid="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.EnumerableRowCollection" /&gt;</ph> containing the <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> elements to be ordered.</source>
          <target state="translated">Uma <ph id="ph1">&lt;see cref="T:System.Data.EnumerableRowCollection" /&gt;</ph> contendo os elementos <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> a serem ordenados.</target>       </trans-unit>
        <trans-unit id="1294" translate="yes" xml:space="preserve" uid="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>A function to extract a key from an element.</source>
          <target state="translated">Uma função para extrair uma chave de um elemento.</target>       </trans-unit>
        <trans-unit id="1295" translate="yes" xml:space="preserve" uid="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph> to compare keys.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph> para comparar chaves.</target>       </trans-unit>
        <trans-unit id="1296" translate="yes" xml:space="preserve" uid="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>Sorts the rows of a <ph id="ph1">&lt;see cref="T:System.Data.EnumerableRowCollection" /&gt;</ph> in ascending order according to the specified key and comparer.</source>
          <target state="translated">Classifica as linhas de uma <ph id="ph1">&lt;see cref="T:System.Data.EnumerableRowCollection" /&gt;</ph> em ordem crescente de acordo com a chave e o comparador especificados.</target>       </trans-unit>
        <trans-unit id="1297" translate="yes" xml:space="preserve" uid="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</source>
          <target state="translated">Essa API dá suporte à infraestrutura do .NET Framework e não deve ser usada diretamente no código.</target>       </trans-unit>
        <trans-unit id="1298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})">
          <source>The type of the row elements in <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>, typically <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</source>
          <target state="translated">O tipo dos elementos de linha no <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>, normalmente <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo de chave retornada pelo <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1300" translate="yes" xml:space="preserve" uid="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.EnumerableRowCollection" /&gt;</ph> containing the <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> elements to be ordered.</source>
          <target state="translated">Uma <ph id="ph1">&lt;see cref="T:System.Data.EnumerableRowCollection" /&gt;</ph> contendo os elementos <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> a serem ordenados.</target>       </trans-unit>
        <trans-unit id="1301" translate="yes" xml:space="preserve" uid="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})">
          <source>A function to extract a key from an element.</source>
          <target state="translated">Uma função para extrair uma chave de um elemento.</target>       </trans-unit>
        <trans-unit id="1302" translate="yes" xml:space="preserve" uid="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})">
          <source>Sorts the rows of a <ph id="ph1">&lt;see cref="T:System.Data.EnumerableRowCollection" /&gt;</ph> in descending order according to the specified key.</source>
          <target state="translated">Classifica as linhas de uma <ph id="ph1">&lt;see cref="T:System.Data.EnumerableRowCollection" /&gt;</ph> em ordem decrescente de acordo com a chave especificada.</target>       </trans-unit>
        <trans-unit id="1303" translate="yes" xml:space="preserve" uid="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})">
          <source>This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</source>
          <target state="translated">Essa API dá suporte à infraestrutura do .NET Framework e não deve ser usada diretamente no código.</target>       </trans-unit>
        <trans-unit id="1304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>The type of the row elements in <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>, typically <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</source>
          <target state="translated">O tipo dos elementos de linha no <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>, normalmente <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo de chave retornada pelo <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1306" translate="yes" xml:space="preserve" uid="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.EnumerableRowCollection" /&gt;</ph> containing the <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> elements to be ordered.</source>
          <target state="translated">Uma <ph id="ph1">&lt;see cref="T:System.Data.EnumerableRowCollection" /&gt;</ph> contendo os elementos <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> a serem ordenados.</target>       </trans-unit>
        <trans-unit id="1307" translate="yes" xml:space="preserve" uid="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>A function to extract a key from an element.</source>
          <target state="translated">Uma função para extrair uma chave de um elemento.</target>       </trans-unit>
        <trans-unit id="1308" translate="yes" xml:space="preserve" uid="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph> to compare keys.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph> para comparar chaves.</target>       </trans-unit>
        <trans-unit id="1309" translate="yes" xml:space="preserve" uid="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>Sorts the rows of a <ph id="ph1">&lt;see cref="T:System.Data.EnumerableRowCollection" /&gt;</ph> in descending order according to the specified key and comparer.</source>
          <target state="translated">Classifica as linhas de uma <ph id="ph1">&lt;see cref="T:System.Data.EnumerableRowCollection" /&gt;</ph> em ordem decrescente de acordo com a chave e o comparador especificados.</target>       </trans-unit>
        <trans-unit id="1310" translate="yes" xml:space="preserve" uid="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</source>
          <target state="translated">Essa API dá suporte à infraestrutura do .NET Framework e não deve ser usada diretamente no código.</target>       </trans-unit>
        <trans-unit id="1311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})">
          <source>The type of the row elements in <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>, typically <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</source>
          <target state="translated">O tipo dos elementos de linha no <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>, normalmente <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})">
          <source>The type that <bpt id="p1">&lt;c&gt;</bpt>TRow<ept id="p1">&lt;/c&gt;</ept> will be transformed into.</source>
          <target state="translated">O tipo que <bpt id="p1">&lt;c&gt;</bpt>TRow<ept id="p1">&lt;/c&gt;</ept> será transformado em.</target>       </trans-unit>
        <trans-unit id="1313" translate="yes" xml:space="preserve" uid="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.EnumerableRowCollection`1" /&gt;</ph> containing the <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> elements to invoke a transform function upon.</source>
          <target state="translated">Uma <ph id="ph1">&lt;see cref="T:System.Data.EnumerableRowCollection`1" /&gt;</ph> que contém os elementos <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> para os quais invocar uma função de transformação.</target>       </trans-unit>
        <trans-unit id="1314" translate="yes" xml:space="preserve" uid="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Uma função de transformação a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="1315" translate="yes" xml:space="preserve" uid="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})">
          <source>Projects each element of an <ph id="ph1">&lt;see cref="T:System.Data.EnumerableRowCollection`1" /&gt;</ph> into a new form.</source>
          <target state="translated">Projeta cada elemento de uma <ph id="ph1">&lt;see cref="T:System.Data.EnumerableRowCollection`1" /&gt;</ph> em um novo formulário.</target>       </trans-unit>
        <trans-unit id="1316" translate="yes" xml:space="preserve" uid="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})">
          <source>This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</source>
          <target state="translated">Essa API dá suporte à infraestrutura do .NET Framework e não deve ser usada diretamente no código.</target>       </trans-unit>
        <trans-unit id="1317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})">
          <source>The type of the row elements in <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>, typically <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</source>
          <target state="translated">O tipo dos elementos de linha no <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>, normalmente <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo de chave retornada pelo <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1319" translate="yes" xml:space="preserve" uid="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.EnumerableRowCollection" /&gt;</ph> containing the <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> elements to be ordered.</source>
          <target state="translated">Uma <ph id="ph1">&lt;see cref="T:System.Data.EnumerableRowCollection" /&gt;</ph> contendo os elementos <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> a serem ordenados.</target>       </trans-unit>
        <trans-unit id="1320" translate="yes" xml:space="preserve" uid="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})">
          <source>A function to extract a key from an element.</source>
          <target state="translated">Uma função para extrair uma chave de um elemento.</target>       </trans-unit>
        <trans-unit id="1321" translate="yes" xml:space="preserve" uid="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})">
          <source>Performs a secondary ordering of the rows of a <ph id="ph1">&lt;see cref="T:System.Data.EnumerableRowCollection" /&gt;</ph> in ascending order according to the specified key.</source>
          <target state="translated">Realiza uma classificação secundária das linhas de uma <ph id="ph1">&lt;see cref="T:System.Data.EnumerableRowCollection" /&gt;</ph> em ordem crescente de acordo com a chave especificada.</target>       </trans-unit>
        <trans-unit id="1322" translate="yes" xml:space="preserve" uid="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})">
          <source>This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</source>
          <target state="translated">Essa API dá suporte à infraestrutura do .NET Framework e não deve ser usada diretamente no código.</target>       </trans-unit>
        <trans-unit id="1323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>The type of the row elements in <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>, typically <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</source>
          <target state="translated">O tipo dos elementos de linha no <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>, normalmente <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo de chave retornada pelo <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1325" translate="yes" xml:space="preserve" uid="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.EnumerableRowCollection" /&gt;</ph> containing the <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> elements to be ordered.</source>
          <target state="translated">Uma <ph id="ph1">&lt;see cref="T:System.Data.EnumerableRowCollection" /&gt;</ph> contendo os elementos <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> a serem ordenados.</target>       </trans-unit>
        <trans-unit id="1326" translate="yes" xml:space="preserve" uid="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>A function to extract a key from an element.</source>
          <target state="translated">Uma função para extrair uma chave de um elemento.</target>       </trans-unit>
        <trans-unit id="1327" translate="yes" xml:space="preserve" uid="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph> to compare keys.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph> para comparar chaves.</target>       </trans-unit>
        <trans-unit id="1328" translate="yes" xml:space="preserve" uid="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>Performs a secondary ordering of the rows of a <ph id="ph1">&lt;see cref="T:System.Data.EnumerableRowCollection" /&gt;</ph> in ascending order according to the specified key and comparer.</source>
          <target state="translated">Realiza uma classificação secundária das linhas de uma <ph id="ph1">&lt;see cref="T:System.Data.EnumerableRowCollection" /&gt;</ph> em ordem crescente de acordo com a chave e o comparador especificados.</target>       </trans-unit>
        <trans-unit id="1329" translate="yes" xml:space="preserve" uid="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</source>
          <target state="translated">Essa API dá suporte à infraestrutura do .NET Framework e não deve ser usada diretamente no código.</target>       </trans-unit>
        <trans-unit id="1330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})">
          <source>The type of the row elements in <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>, typically <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</source>
          <target state="translated">O tipo dos elementos de linha no <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>, normalmente <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo de chave retornada pelo <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1332" translate="yes" xml:space="preserve" uid="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.EnumerableRowCollection" /&gt;</ph> containing the <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> elements to be ordered.</source>
          <target state="translated">Uma <ph id="ph1">&lt;see cref="T:System.Data.EnumerableRowCollection" /&gt;</ph> contendo os elementos <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> a serem ordenados.</target>       </trans-unit>
        <trans-unit id="1333" translate="yes" xml:space="preserve" uid="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})">
          <source>A function to extract a key from an element.</source>
          <target state="translated">Uma função para extrair uma chave de um elemento.</target>       </trans-unit>
        <trans-unit id="1334" translate="yes" xml:space="preserve" uid="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})">
          <source>Performs a secondary ordering of the rows of a <ph id="ph1">&lt;see cref="T:System.Data.EnumerableRowCollection" /&gt;</ph> in descending order according to the specified key.</source>
          <target state="translated">Realiza uma classificação secundária das linhas de uma <ph id="ph1">&lt;see cref="T:System.Data.EnumerableRowCollection" /&gt;</ph> em ordem decrescente de acordo com a chave especificada.</target>       </trans-unit>
        <trans-unit id="1335" translate="yes" xml:space="preserve" uid="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})">
          <source>This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</source>
          <target state="translated">Essa API dá suporte à infraestrutura do .NET Framework e não deve ser usada diretamente no código.</target>       </trans-unit>
        <trans-unit id="1336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>The type of the row elements in <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>, typically <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</source>
          <target state="translated">O tipo dos elementos de linha no <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>, normalmente <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo de chave retornada pelo <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1338" translate="yes" xml:space="preserve" uid="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.EnumerableRowCollection" /&gt;</ph> containing the <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> elements to be ordered.</source>
          <target state="translated">Uma <ph id="ph1">&lt;see cref="T:System.Data.EnumerableRowCollection" /&gt;</ph> contendo os elementos <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> a serem ordenados.</target>       </trans-unit>
        <trans-unit id="1339" translate="yes" xml:space="preserve" uid="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>A function to extract a key from an element.</source>
          <target state="translated">Uma função para extrair uma chave de um elemento.</target>       </trans-unit>
        <trans-unit id="1340" translate="yes" xml:space="preserve" uid="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph> to compare keys.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph> para comparar chaves.</target>       </trans-unit>
        <trans-unit id="1341" translate="yes" xml:space="preserve" uid="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>Performs a secondary ordering of the rows of a <ph id="ph1">&lt;see cref="T:System.Data.EnumerableRowCollection" /&gt;</ph> in descending order according to the specified key and comparer.</source>
          <target state="translated">Realiza uma classificação secundária das linhas de uma <ph id="ph1">&lt;see cref="T:System.Data.EnumerableRowCollection" /&gt;</ph> em ordem decrescente de acordo com a chave e o comparador especificados.</target>       </trans-unit>
        <trans-unit id="1342" translate="yes" xml:space="preserve" uid="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</source>
          <target state="translated">Essa API dá suporte à infraestrutura do .NET Framework e não deve ser usada diretamente no código.</target>       </trans-unit>
        <trans-unit id="1343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EnumerableRowCollectionExtensions.Where``1(System.Data.EnumerableRowCollection{``0},System.Func{``0,System.Boolean})">
          <source>The type of the row elements in <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>, typically <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</source>
          <target state="translated">O tipo dos elementos de linha no <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>, normalmente <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1344" translate="yes" xml:space="preserve" uid="M:System.Data.EnumerableRowCollectionExtensions.Where``1(System.Data.EnumerableRowCollection{``0},System.Func{``0,System.Boolean})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.EnumerableRowCollection" /&gt;</ph> containing the <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> elements to filter.</source>
          <target state="translated">Uma <ph id="ph1">&lt;see cref="T:System.Data.EnumerableRowCollection" /&gt;</ph> contendo os elementos <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> a filtrar.</target>       </trans-unit>
        <trans-unit id="1345" translate="yes" xml:space="preserve" uid="M:System.Data.EnumerableRowCollectionExtensions.Where``1(System.Data.EnumerableRowCollection{``0},System.Func{``0,System.Boolean})">
          <source>A function to test each element for a condition.</source>
          <target state="translated">Uma função para testar cada elemento em relação a uma condição.</target>       </trans-unit>
        <trans-unit id="1346" translate="yes" xml:space="preserve" uid="M:System.Data.EnumerableRowCollectionExtensions.Where``1(System.Data.EnumerableRowCollection{``0},System.Func{``0,System.Boolean})">
          <source>Filters a sequence of rows based on the specified predicate.</source>
          <target state="translated">Filtra uma sequência de linhas com base no predicado especificado.</target>       </trans-unit>
        <trans-unit id="1347" translate="yes" xml:space="preserve" uid="M:System.Data.EnumerableRowCollectionExtensions.Where``1(System.Data.EnumerableRowCollection{``0},System.Func{``0,System.Boolean})">
          <source>This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</source>
          <target state="translated">Essa API dá suporte à infraestrutura do .NET Framework e não deve ser usada diretamente no código.</target>       </trans-unit>
        <trans-unit id="1348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.TypedTableBaseExtensions.AsEnumerable``1(System.Data.TypedTableBase{``0})">
          <source>The type to convert the elements of the source to.</source>
          <target state="translated">O tipo para converter os elementos de origem para.</target>       </trans-unit>
        <trans-unit id="1349" translate="yes" xml:space="preserve" uid="M:System.Data.TypedTableBaseExtensions.AsEnumerable``1(System.Data.TypedTableBase{``0})">
          <source>The source <ph id="ph1">&lt;see cref="T:System.Data.TypedTableBase`1" /&gt;</ph> to make enumerable.</source>
          <target state="translated">A origem <ph id="ph1">&lt;see cref="T:System.Data.TypedTableBase`1" /&gt;</ph> a ser tornada enumerável.</target>       </trans-unit>
        <trans-unit id="1350" translate="yes" xml:space="preserve" uid="M:System.Data.TypedTableBaseExtensions.AsEnumerable``1(System.Data.TypedTableBase{``0})">
          <source>Enumerates the data row elements of the <ph id="ph1">&lt;see cref="T:System.Data.TypedTableBase`1" /&gt;</ph> and returns an <ph id="ph2">&lt;see cref="T:System.Data.EnumerableRowCollection`1" /&gt;</ph> object, where the generic parameter <ph id="ph3">&lt;paramref name="T" /&gt;</ph> is <ph id="ph4">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</source>
          <target state="translated">Enumera os elementos de linha de dados do <ph id="ph1">&lt;see cref="T:System.Data.TypedTableBase`1" /&gt;</ph> e retorna um objeto <ph id="ph2">&lt;see cref="T:System.Data.EnumerableRowCollection`1" /&gt;</ph>, em que o parâmetro genérico <ph id="ph3">&lt;paramref name="T" /&gt;</ph> é <ph id="ph4">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1351" translate="yes" xml:space="preserve" uid="M:System.Data.TypedTableBaseExtensions.AsEnumerable``1(System.Data.TypedTableBase{``0})">
          <source>This object can be used in a <ph id="ph1">[!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)]</ph> expression or method query.</source>
          <target state="translated">Esse objeto pode ser usado em uma expressão <ph id="ph1">[!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)]</ph> ou um método de consulta.</target>       </trans-unit>
        <trans-unit id="1352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.TypedTableBaseExtensions.ElementAtOrDefault``1(System.Data.TypedTableBase{``0},System.Int32)">
          <source>The type of the elements or the row.</source>
          <target state="translated">O tipo de elementos ou da linha.</target>       </trans-unit>
        <trans-unit id="1353" translate="yes" xml:space="preserve" uid="M:System.Data.TypedTableBaseExtensions.ElementAtOrDefault``1(System.Data.TypedTableBase{``0},System.Int32)">
          <source>An enumerable object to return an element from.</source>
          <target state="translated">Um objeto enumerável em que se retorna um elemento.</target>       </trans-unit>
        <trans-unit id="1354" translate="yes" xml:space="preserve" uid="M:System.Data.TypedTableBaseExtensions.ElementAtOrDefault``1(System.Data.TypedTableBase{``0},System.Int32)">
          <source>The zero-based index of the element to retrieve.</source>
          <target state="translated">O índice baseado em zero do elemento a ser recuperado.</target>       </trans-unit>
        <trans-unit id="1355" translate="yes" xml:space="preserve" uid="M:System.Data.TypedTableBaseExtensions.ElementAtOrDefault``1(System.Data.TypedTableBase{``0},System.Int32)">
          <source>Returns the element at a specified row in a sequence or a default value if the row is out of range.</source>
          <target state="translated">Retorna o elemento em uma linha especificada em uma sequência ou um valor padrão se a linha estiver fora do intervalo.</target>       </trans-unit>
        <trans-unit id="1356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})">
          <source>The type of the row elements in <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>, typically <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</source>
          <target state="translated">O tipo dos elementos de linha no <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>, normalmente <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo de chave retornada pelo <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1358" translate="yes" xml:space="preserve" uid="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.TypedTableBase`1" /&gt;</ph> that contains the <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> elements to be ordered.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Data.TypedTableBase`1" /&gt;</ph> que contém os elementos <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> a serem ordenados.</target>       </trans-unit>
        <trans-unit id="1359" translate="yes" xml:space="preserve" uid="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})">
          <source>A function to extract a key from an element.</source>
          <target state="translated">Uma função para extrair uma chave de um elemento.</target>       </trans-unit>
        <trans-unit id="1360" translate="yes" xml:space="preserve" uid="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})">
          <source>Sorts the rows of a <ph id="ph1">&lt;see cref="T:System.Data.TypedTableBase`1" /&gt;</ph> in ascending order according to the specified key.</source>
          <target state="translated">Classifica as linhas de uma <ph id="ph1">&lt;see cref="T:System.Data.TypedTableBase`1" /&gt;</ph> em ordem crescente de acordo com a chave especificada.</target>       </trans-unit>
        <trans-unit id="1361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>The type of the row elements in <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>, typically <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</source>
          <target state="translated">O tipo dos elementos de linha no <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>, normalmente <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo de chave retornada pelo <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1363" translate="yes" xml:space="preserve" uid="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.TypedTableBase`1" /&gt;</ph> that contains the <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> elements to be ordered.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Data.TypedTableBase`1" /&gt;</ph> que contém os elementos <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> a serem ordenados.</target>       </trans-unit>
        <trans-unit id="1364" translate="yes" xml:space="preserve" uid="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>A function to extract a key from an element.</source>
          <target state="translated">Uma função para extrair uma chave de um elemento.</target>       </trans-unit>
        <trans-unit id="1365" translate="yes" xml:space="preserve" uid="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph> to compare keys.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph> para comparar chaves.</target>       </trans-unit>
        <trans-unit id="1366" translate="yes" xml:space="preserve" uid="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>Sorts the rows of a <ph id="ph1">&lt;see cref="T:System.Data.TypedTableBase`1" /&gt;</ph> in ascending order according to the specified key and comparer.</source>
          <target state="translated">Classifica as linhas de uma <ph id="ph1">&lt;see cref="T:System.Data.TypedTableBase`1" /&gt;</ph> em ordem crescente de acordo com a chave e o comparador especificados.</target>       </trans-unit>
        <trans-unit id="1367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})">
          <source>The type of the row elements in <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>, typically <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</source>
          <target state="translated">O tipo dos elementos de linha no <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>, normalmente <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo de chave retornada pelo <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1369" translate="yes" xml:space="preserve" uid="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.TypedTableBase`1" /&gt;</ph> that contains the <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> elements to be ordered.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Data.TypedTableBase`1" /&gt;</ph> que contém os elementos <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> a serem ordenados.</target>       </trans-unit>
        <trans-unit id="1370" translate="yes" xml:space="preserve" uid="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})">
          <source>A function to extract a key from an element.</source>
          <target state="translated">Uma função para extrair uma chave de um elemento.</target>       </trans-unit>
        <trans-unit id="1371" translate="yes" xml:space="preserve" uid="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})">
          <source>Sorts the rows of a <ph id="ph1">&lt;see cref="T:System.Data.TypedTableBase`1" /&gt;</ph> in descending order according to the specified key.</source>
          <target state="translated">Classifica as linhas de uma <ph id="ph1">&lt;see cref="T:System.Data.TypedTableBase`1" /&gt;</ph> em ordem decrescente de acordo com a chave especificada.</target>       </trans-unit>
        <trans-unit id="1372" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>The type of the row elements in <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>, typically <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</source>
          <target state="translated">O tipo dos elementos de linha no <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>, normalmente <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1373" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo de chave retornada pelo <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1374" translate="yes" xml:space="preserve" uid="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.TypedTableBase`1" /&gt;</ph> that contains the <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> elements to be ordered.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Data.TypedTableBase`1" /&gt;</ph> que contém os elementos <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> a serem ordenados.</target>       </trans-unit>
        <trans-unit id="1375" translate="yes" xml:space="preserve" uid="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>A function to extract a key from an element.</source>
          <target state="translated">Uma função para extrair uma chave de um elemento.</target>       </trans-unit>
        <trans-unit id="1376" translate="yes" xml:space="preserve" uid="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph> to compare keys.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph> para comparar chaves.</target>       </trans-unit>
        <trans-unit id="1377" translate="yes" xml:space="preserve" uid="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>Sorts the rows of a <ph id="ph1">&lt;see cref="T:System.Data.TypedTableBase`1" /&gt;</ph> in descending order according to the specified key and comparer.</source>
          <target state="translated">Classifica as linhas de uma <ph id="ph1">&lt;see cref="T:System.Data.TypedTableBase`1" /&gt;</ph> em ordem decrescente de acordo com a chave e o comparador especificados.</target>       </trans-unit>
        <trans-unit id="1378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.TypedTableBaseExtensions.Select``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})">
          <source>The type of the row elements in <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>, <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</source>
          <target state="translated">O tipo dos elementos de linha no <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>, <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1379" translate="yes" xml:space="preserve" uid="M:System.Data.TypedTableBaseExtensions.Select``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.TypedTableBase`1" /&gt;</ph> that contains the <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> elements to invoke a transformation function upon.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Data.TypedTableBase`1" /&gt;</ph> que contém os elementos <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> nos quais invocar uma função de transformação.</target>       </trans-unit>
        <trans-unit id="1380" translate="yes" xml:space="preserve" uid="M:System.Data.TypedTableBaseExtensions.Select``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})">
          <source>A transformation function to apply to each element.</source>
          <target state="translated">Uma função de transformação a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="1381" translate="yes" xml:space="preserve" uid="M:System.Data.TypedTableBaseExtensions.Select``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})">
          <source>Projects each element of a <ph id="ph1">&lt;see cref="T:System.Data.TypedTableBase`1" /&gt;</ph> into a new form.</source>
          <target state="translated">Projeta cada elemento de um <ph id="ph1">&lt;see cref="T:System.Data.TypedTableBase`1" /&gt;</ph> em um novo formulário.</target>       </trans-unit>
        <trans-unit id="1382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.TypedTableBaseExtensions.Where``1(System.Data.TypedTableBase{``0},System.Func{``0,System.Boolean})">
          <source>The type of the row elements in <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>, <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</source>
          <target state="translated">O tipo dos elementos de linha no <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>, <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1383" translate="yes" xml:space="preserve" uid="M:System.Data.TypedTableBaseExtensions.Where``1(System.Data.TypedTableBase{``0},System.Func{``0,System.Boolean})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.TypedTableBase`1" /&gt;</ph> that contains the <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> elements to filter.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Data.TypedTableBase`1" /&gt;</ph> que contém os elementos <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> a serem filtrados.</target>       </trans-unit>
        <trans-unit id="1384" translate="yes" xml:space="preserve" uid="M:System.Data.TypedTableBaseExtensions.Where``1(System.Data.TypedTableBase{``0},System.Func{``0,System.Boolean})">
          <source>A function to test each element for a condition.</source>
          <target state="translated">Uma função para testar cada elemento em relação a uma condição.</target>       </trans-unit>
        <trans-unit id="1385" translate="yes" xml:space="preserve" uid="M:System.Data.TypedTableBaseExtensions.Where``1(System.Data.TypedTableBase{``0},System.Func{``0,System.Boolean})">
          <source>Filters a sequence of rows based on the specified predicate.</source>
          <target state="translated">Filtra uma sequência de linhas com base no predicado especificado.</target>       </trans-unit>
        <trans-unit id="1386" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrameExtensions.GetNativeImageBase(System.Diagnostics.StackFrame)">
          <source>A stack frame.</source>
          <target state="translated">Um registro de ativação.</target>       </trans-unit>
        <trans-unit id="1387" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrameExtensions.GetNativeImageBase(System.Diagnostics.StackFrame)">
          <source>Returns a pointer to the base address of the native image that this stack frame is executing.</source>
          <target state="translated">Retorna um ponteiro para o endereço básico da imagem nativa na qual esse registro de ativação está sendo executado.</target>       </trans-unit>
        <trans-unit id="1388" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrameExtensions.GetNativeIP(System.Diagnostics.StackFrame)">
          <source>A stack frame.</source>
          <target state="translated">Um registro de ativação.</target>       </trans-unit>
        <trans-unit id="1389" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrameExtensions.GetNativeIP(System.Diagnostics.StackFrame)">
          <source>Gets an interface pointer to the start of the native code for the method that is being executed.</source>
          <target state="translated">Obtém um ponteiro de interface para o início do código nativo para o método que está sendo executado.</target>       </trans-unit>
        <trans-unit id="1390" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrameExtensions.HasILOffset(System.Diagnostics.StackFrame)">
          <source>A stack frame.</source>
          <target state="translated">Um registro de ativação.</target>       </trans-unit>
        <trans-unit id="1391" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrameExtensions.HasILOffset(System.Diagnostics.StackFrame)">
          <source>Indicates whether an offset from the start of the IL code for the method that is executing is available.</source>
          <target state="translated">Indica se um deslocamento do início do código do nível de integridade para o método que está sendo executado está disponível.</target>       </trans-unit>
        <trans-unit id="1392" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrameExtensions.HasMethod(System.Diagnostics.StackFrame)">
          <source>A stack frame.</source>
          <target state="translated">Um registro de ativação.</target>       </trans-unit>
        <trans-unit id="1393" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrameExtensions.HasMethod(System.Diagnostics.StackFrame)">
          <source>Indicates whether information about the method in which the specified frame is executing is available.</source>
          <target state="translated">Indica se as informações sobre o método no qual o quadro especificado está em execução estão disponíveis.</target>       </trans-unit>
        <trans-unit id="1394" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrameExtensions.HasNativeImage(System.Diagnostics.StackFrame)">
          <source>A stack frame.</source>
          <target state="translated">Um registro de ativação.</target>       </trans-unit>
        <trans-unit id="1395" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrameExtensions.HasNativeImage(System.Diagnostics.StackFrame)">
          <source>Indicates whether the native image is available for the specified stack frame.</source>
          <target state="translated">Indica se a imagem nativa está disponível para o registro de ativação especificado.</target>       </trans-unit>
        <trans-unit id="1396" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrameExtensions.HasSource(System.Diagnostics.StackFrame)">
          <source>A stack frame.</source>
          <target state="translated">Um registro de ativação.</target>       </trans-unit>
        <trans-unit id="1397" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrameExtensions.HasSource(System.Diagnostics.StackFrame)">
          <source>Indicates whether the file that contains the code that the specified stack frame is executing is available.</source>
          <target state="translated">Indica se o arquivo que contém o código que o registro de ativação especificado está executando está disponível.</target>       </trans-unit>
        <trans-unit id="1398" translate="yes" xml:space="preserve" uid="M:System.Globalization.GlobalizationExtensions.GetStringComparer(System.Globalization.CompareInfo,System.Globalization.CompareOptions)">
          <source>An object that supports culture-sensitive string comparison.</source>
          <target state="translated">Um objeto que dá suporte à comparação de cadeia de caracteres que faz distinção entre culturas.</target>       </trans-unit>
        <trans-unit id="1399" translate="yes" xml:space="preserve" uid="M:System.Globalization.GlobalizationExtensions.GetStringComparer(System.Globalization.CompareInfo,System.Globalization.CompareOptions)">
          <source>A value that defines how strings should be compared.</source>
          <target state="translated">Um valor que define como as cadeias de caracteres devem ser comparadas.</target>       </trans-unit>
        <trans-unit id="1400" translate="yes" xml:space="preserve" uid="M:System.Globalization.GlobalizationExtensions.GetStringComparer(System.Globalization.CompareInfo,System.Globalization.CompareOptions)">
          <source><ph id="ph1">&lt;paramref name="options" /&gt;</ph> is either the enumeration value <ph id="ph2">&lt;see cref="F:System.Globalization.CompareOptions.Ordinal" /&gt;</ph>, the enumeration value <ph id="ph3">&lt;see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /&gt;</ph>, or a bitwise combination of one or more of the following values: <ph id="ph4">&lt;see cref="F:System.Globalization.CompareOptions.IgnoreCase" /&gt;</ph>, <ph id="ph5">&lt;see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" /&gt;</ph>, <ph id="ph6">&lt;see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" /&gt;</ph>, <ph id="ph7">&lt;see cref="F:System.Globalization.CompareOptions.IgnoreWidth" /&gt;</ph>, <ph id="ph8">&lt;see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" /&gt;</ph>, and <ph id="ph9">&lt;see cref="F:System.Globalization.CompareOptions.StringSort" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="options" /&gt;</ph> é o valor de enumeração <ph id="ph2">&lt;see cref="F:System.Globalization.CompareOptions.Ordinal" /&gt;</ph>, o valor de enumeração <ph id="ph3">&lt;see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /&gt;</ph> ou uma combinação bit a bit de um ou mais dos seguintes valores: <ph id="ph4">&lt;see cref="F:System.Globalization.CompareOptions.IgnoreCase" /&gt;</ph>, <ph id="ph5">&lt;see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" /&gt;</ph>, <ph id="ph6">&lt;see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" /&gt;</ph>, <ph id="ph7">&lt;see cref="F:System.Globalization.CompareOptions.IgnoreWidth" /&gt;</ph>, <ph id="ph8">&lt;see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" /&gt;</ph> e <ph id="ph9">&lt;see cref="F:System.Globalization.CompareOptions.StringSort" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1401" translate="yes" xml:space="preserve" uid="M:System.Globalization.GlobalizationExtensions.GetStringComparer(System.Globalization.CompareInfo,System.Globalization.CompareOptions)">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.StringComparer" /&gt;</ph> object based on the culture-sensitive string comparison rules of a specified <ph id="ph2">&lt;see cref="T:System.Globalization.CompareInfo" /&gt;</ph> object.</source>
          <target state="translated">Retorna um objeto <ph id="ph1">&lt;see cref="T:System.StringComparer" /&gt;</ph> com base nas regras de comparação de cadeia de caracteres que fazem distinção entre culturas de um objeto <ph id="ph2">&lt;see cref="T:System.Globalization.CompareInfo" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="1402" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile(System.IO.Compression.ZipArchive,System.String,System.String)">
          <source>The zip archive to add the file to.</source>
          <target state="translated">O arquivo zip ao qual o arquivo será adicionado.</target>       </trans-unit>
        <trans-unit id="1403" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile(System.IO.Compression.ZipArchive,System.String,System.String)">
          <source>The path to the file to be archived.</source>
          <target state="translated">O caminho para o arquivo a ser arquivado.</target>       </trans-unit>
        <trans-unit id="1404" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile(System.IO.Compression.ZipArchive,System.String,System.String)">
          <source>You can specify either a relative or an absolute path.</source>
          <target state="translated">Você pode especificar um caminho absoluto ou relativo.</target>       </trans-unit>
        <trans-unit id="1405" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile(System.IO.Compression.ZipArchive,System.String,System.String)">
          <source>A relative path is interpreted as relative to the current working directory.</source>
          <target state="translated">Um caminho relativo é interpretado como relativo ao diretório de trabalho atual.</target>       </trans-unit>
        <trans-unit id="1406" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile(System.IO.Compression.ZipArchive,System.String,System.String)">
          <source>The name of the entry to create in the zip archive.</source>
          <target state="translated">O nome da entrada a ser criada no arquivo zip.</target>       </trans-unit>
        <trans-unit id="1407" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile(System.IO.Compression.ZipArchive,System.String,System.String)">
          <source>Archives a file by compressing it and adding it to the zip archive.</source>
          <target state="translated">Arquiva um arquivo compactando-o e adicionando-o ao arquivo zip.</target>       </trans-unit>
        <trans-unit id="1408" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile(System.IO.Compression.ZipArchive,System.String,System.String,System.IO.Compression.CompressionLevel)">
          <source>The zip archive to add the file to.</source>
          <target state="translated">O arquivo zip ao qual o arquivo será adicionado.</target>       </trans-unit>
        <trans-unit id="1409" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile(System.IO.Compression.ZipArchive,System.String,System.String,System.IO.Compression.CompressionLevel)">
          <source>The path to the file to be archived.</source>
          <target state="translated">O caminho para o arquivo a ser arquivado.</target>       </trans-unit>
        <trans-unit id="1410" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile(System.IO.Compression.ZipArchive,System.String,System.String,System.IO.Compression.CompressionLevel)">
          <source>You can specify either a relative or an absolute path.</source>
          <target state="translated">Você pode especificar um caminho absoluto ou relativo.</target>       </trans-unit>
        <trans-unit id="1411" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile(System.IO.Compression.ZipArchive,System.String,System.String,System.IO.Compression.CompressionLevel)">
          <source>A relative path is interpreted as relative to the current working directory.</source>
          <target state="translated">Um caminho relativo é interpretado como relativo ao diretório de trabalho atual.</target>       </trans-unit>
        <trans-unit id="1412" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile(System.IO.Compression.ZipArchive,System.String,System.String,System.IO.Compression.CompressionLevel)">
          <source>The name of the entry to create in the zip archive.</source>
          <target state="translated">O nome da entrada a ser criada no arquivo zip.</target>       </trans-unit>
        <trans-unit id="1413" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile(System.IO.Compression.ZipArchive,System.String,System.String,System.IO.Compression.CompressionLevel)">
          <source>One of the enumeration values that indicates whether to emphasize speed or compression effectiveness when creating the entry.</source>
          <target state="translated">Um dos valores de enumeração que indica se é necessário enfatizar a eficiência de compactação ou velocidade ao criar a entrada.</target>       </trans-unit>
        <trans-unit id="1414" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile(System.IO.Compression.ZipArchive,System.String,System.String,System.IO.Compression.CompressionLevel)">
          <source>Archives a file by compressing it using the specified compression level and adding it to the zip archive.</source>
          <target state="translated">Arquiva um arquivo, compactando-o usando o nível de compactação especificado e adicionando-o ao arquivo zip.</target>       </trans-unit>
        <trans-unit id="1415" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.ZipFileExtensions.ExtractToDirectory(System.IO.Compression.ZipArchive,System.String)">
          <source>The zip archive to extract files from.</source>
          <target state="translated">O arquivo zip de onde extrair os arquivos.</target>       </trans-unit>
        <trans-unit id="1416" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.ZipFileExtensions.ExtractToDirectory(System.IO.Compression.ZipArchive,System.String)">
          <source>The path to the directory to place the extracted files in.</source>
          <target state="translated">O caminho para o diretório para colocar os arquivos extraídos.</target>       </trans-unit>
        <trans-unit id="1417" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.ZipFileExtensions.ExtractToDirectory(System.IO.Compression.ZipArchive,System.String)">
          <source>You can specify either a relative or an absolute path.</source>
          <target state="translated">Você pode especificar um caminho absoluto ou relativo.</target>       </trans-unit>
        <trans-unit id="1418" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.ZipFileExtensions.ExtractToDirectory(System.IO.Compression.ZipArchive,System.String)">
          <source>A relative path is interpreted as relative to the current working directory.</source>
          <target state="translated">Um caminho relativo é interpretado como relativo ao diretório de trabalho atual.</target>       </trans-unit>
        <trans-unit id="1419" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.ZipFileExtensions.ExtractToDirectory(System.IO.Compression.ZipArchive,System.String)">
          <source>Extracts all the files in the zip archive to a directory on the file system.</source>
          <target state="translated">Extrai todos os arquivos no arquivo zip especificado para um diretório do sistema de arquivos.</target>       </trans-unit>
        <trans-unit id="1420" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.ZipFileExtensions.ExtractToFile(System.IO.Compression.ZipArchiveEntry,System.String)">
          <source>The zip archive entry to extract a file from.</source>
          <target state="translated">A entrada do arquivo zip da qual um arquivo será extraído.</target>       </trans-unit>
        <trans-unit id="1421" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.ZipFileExtensions.ExtractToFile(System.IO.Compression.ZipArchiveEntry,System.String)">
          <source>The path of the file to create from the contents of the entry.</source>
          <target state="translated">O caminho do arquivo a ser criado do conteúdo da entrada.</target>       </trans-unit>
        <trans-unit id="1422" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.ZipFileExtensions.ExtractToFile(System.IO.Compression.ZipArchiveEntry,System.String)">
          <source>You can  specify either a relative or an absolute path.</source>
          <target state="translated">Você pode especificar um caminho absoluto ou relativo.</target>       </trans-unit>
        <trans-unit id="1423" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.ZipFileExtensions.ExtractToFile(System.IO.Compression.ZipArchiveEntry,System.String)">
          <source>A relative path is interpreted as relative to the current working directory.</source>
          <target state="translated">Um caminho relativo é interpretado como relativo ao diretório de trabalho atual.</target>       </trans-unit>
        <trans-unit id="1424" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.ZipFileExtensions.ExtractToFile(System.IO.Compression.ZipArchiveEntry,System.String)">
          <source>Extracts an entry in the zip archive to a file.</source>
          <target state="translated">Extrai uma entrada no arquivo zip para um arquivo.</target>       </trans-unit>
        <trans-unit id="1425" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.ZipFileExtensions.ExtractToFile(System.IO.Compression.ZipArchiveEntry,System.String,System.Boolean)">
          <source>The zip archive entry to extract a file from.</source>
          <target state="translated">A entrada do arquivo zip da qual um arquivo será extraído.</target>       </trans-unit>
        <trans-unit id="1426" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.ZipFileExtensions.ExtractToFile(System.IO.Compression.ZipArchiveEntry,System.String,System.Boolean)">
          <source>The path of the file to create from the contents of the entry.</source>
          <target state="translated">O caminho do arquivo a ser criado do conteúdo da entrada.</target>       </trans-unit>
        <trans-unit id="1427" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.ZipFileExtensions.ExtractToFile(System.IO.Compression.ZipArchiveEntry,System.String,System.Boolean)">
          <source>You can specify either a relative or an absolute path.</source>
          <target state="translated">Você pode especificar um caminho absoluto ou relativo.</target>       </trans-unit>
        <trans-unit id="1428" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.ZipFileExtensions.ExtractToFile(System.IO.Compression.ZipArchiveEntry,System.String,System.Boolean)">
          <source>A relative path is interpreted as relative to the current working directory.</source>
          <target state="translated">Um caminho relativo é interpretado como relativo ao diretório de trabalho atual.</target>       </trans-unit>
        <trans-unit id="1429" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.ZipFileExtensions.ExtractToFile(System.IO.Compression.ZipArchiveEntry,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to overwrite an existing file that has the same name as the destination file; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para substituir um arquivo existente que tem o mesmo nome do arquivo de destino; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1430" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.ZipFileExtensions.ExtractToFile(System.IO.Compression.ZipArchiveEntry,System.String,System.Boolean)">
          <source>Extracts an entry in the zip archive to a file, and optionally overwrites an existing file that has the same name.</source>
          <target state="translated">Extrai uma entrada do arquivo zip para um arquivo e, opcionalmente, substitui um arquivo existente que tem o mesmo nome.</target>       </trans-unit>
        <trans-unit id="1431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1432" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> to aggregate over.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> no qual será feita a agregação.</target>       </trans-unit>
        <trans-unit id="1433" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})">
          <source>An accumulator function to be invoked on each element.</source>
          <target state="translated">Uma função de acumulador a ser invocada em cada elemento.</target>       </trans-unit>
        <trans-unit id="1434" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})">
          <source>Applies an accumulator function over a sequence.</source>
          <target state="translated">Aplica uma função de acumulador a uma sequência.</target>       </trans-unit>
        <trans-unit id="1435" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1436" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})">
          <source>The type of the accumulator value.</source>
          <target state="translated">O tipo do valor do acumulador.</target>       </trans-unit>
        <trans-unit id="1437" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> to aggregate over.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> no qual será feita a agregação.</target>       </trans-unit>
        <trans-unit id="1438" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})">
          <source>The initial accumulator value.</source>
          <target state="translated">O valor inicial do acumulador.</target>       </trans-unit>
        <trans-unit id="1439" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})">
          <source>An accumulator function to be invoked on each element.</source>
          <target state="translated">Uma função de acumulador a ser invocada em cada elemento.</target>       </trans-unit>
        <trans-unit id="1440" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})">
          <source>Applies an accumulator function over a sequence.</source>
          <target state="translated">Aplica uma função de acumulador a uma sequência.</target>       </trans-unit>
        <trans-unit id="1441" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})">
          <source>The specified seed value is used as the initial accumulator value.</source>
          <target state="translated">O valor de semente especificado é usado como o valor inicial do acumulador.</target>       </trans-unit>
        <trans-unit id="1442" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1443" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})">
          <source>The type of the accumulator value.</source>
          <target state="translated">O tipo do valor do acumulador.</target>       </trans-unit>
        <trans-unit id="1444" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})">
          <source>The type of the resulting value.</source>
          <target state="translated">O tipo do valor resultante.</target>       </trans-unit>
        <trans-unit id="1445" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> to aggregate over.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> no qual será feita a agregação.</target>       </trans-unit>
        <trans-unit id="1446" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})">
          <source>The initial accumulator value.</source>
          <target state="translated">O valor inicial do acumulador.</target>       </trans-unit>
        <trans-unit id="1447" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})">
          <source>An accumulator function to be invoked on each element.</source>
          <target state="translated">Uma função de acumulador a ser invocada em cada elemento.</target>       </trans-unit>
        <trans-unit id="1448" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})">
          <source>A function to transform the final accumulator value into the result value.</source>
          <target state="translated">Uma função para transformar o valor final do acumulador no valor de resultado.</target>       </trans-unit>
        <trans-unit id="1449" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})">
          <source>Applies an accumulator function over a sequence.</source>
          <target state="translated">Aplica uma função de acumulador a uma sequência.</target>       </trans-unit>
        <trans-unit id="1450" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})">
          <source>The specified seed value is used as the initial accumulator value, and the specified function is used to select the result value.</source>
          <target state="translated">O valor de semente especificado é usado como o valor inicial do acumulador e a função especificada é usada para selecionar o valor do resultado.</target>       </trans-unit>
        <trans-unit id="1451" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1452" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> that contains the elements to apply the predicate to.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> que contém os elementos aos quais o predicado será aplicado.</target>       </trans-unit>
        <trans-unit id="1453" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
          <source>A function to test each element for a condition.</source>
          <target state="translated">Uma função para testar cada elemento em relação a uma condição.</target>       </trans-unit>
        <trans-unit id="1454" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
          <source>Determines whether all elements of a sequence satisfy a condition.</source>
          <target state="translated">Determina se todos os elementos de uma sequência atendem a uma condição.</target>       </trans-unit>
        <trans-unit id="1455" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1456" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> to check for emptiness.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> a ser verificado se está vazio.</target>       </trans-unit>
        <trans-unit id="1457" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})">
          <source>Determines whether a sequence contains any elements.</source>
          <target state="translated">Determina se uma sequência contém elementos.</target>       </trans-unit>
        <trans-unit id="1458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1459" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> whose elements to apply the predicate to.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> a cujos elementos o predicado será aplicado.</target>       </trans-unit>
        <trans-unit id="1460" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
          <source>A function to test each element for a condition.</source>
          <target state="translated">Uma função para testar cada elemento em relação a uma condição.</target>       </trans-unit>
        <trans-unit id="1461" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
          <source>Determines whether any element of a sequence satisfies a condition.</source>
          <target state="translated">Determina se algum elemento de uma sequência atende a uma condição.</target>       </trans-unit>
        <trans-unit id="1462" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)">
          <source>The type of the elements of <ph id="ph1">&lt;paramref name="source" /&gt;</ph>.</source>
          <target state="translated">O tipo dos elementos de <ph id="ph1">&lt;paramref name="source" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1463" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)">
          <source>A sequence of values.</source>
          <target state="translated">Uma sequência de valores.</target>       </trans-unit>
        <trans-unit id="1464" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)">
          <source>The value to append to <ph id="ph1">&lt;paramref name="source" /&gt;</ph>.</source>
          <target state="translated">O valor a ser acrescentado a <ph id="ph1">&lt;paramref name="source" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1465" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)">
          <source>Appends a value to the end of the sequence.</source>
          <target state="translated">Acrescenta um valor ao final da sequência.</target>       </trans-unit>
        <trans-unit id="1466" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1467" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The sequence to type as <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>.</source>
          <target state="translated">A sequência a ser digitada como <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1468" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})">
          <source>Returns the input typed as <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>.</source>
          <target state="translated">Retorna a entrada digitada como <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1469" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Decimal})">
          <source>A sequence of <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> values to calculate the average of.</source>
          <target state="translated">Uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> para realizar o cálculo da média.</target>       </trans-unit>
        <trans-unit id="1470" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Decimal})">
          <source>Computes the average of a sequence of <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> values.</source>
          <target state="translated">Computa a média de uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1471" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Double})">
          <source>A sequence of <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> values to calculate the average of.</source>
          <target state="translated">Uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> para realizar o cálculo da média.</target>       </trans-unit>
        <trans-unit id="1472" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Double})">
          <source>Computes the average of a sequence of <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> values.</source>
          <target state="translated">Computa a média de uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1473" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int32})">
          <source>A sequence of <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> values to calculate the average of.</source>
          <target state="translated">Uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> para realizar o cálculo da média.</target>       </trans-unit>
        <trans-unit id="1474" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int32})">
          <source>Computes the average of a sequence of <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> values.</source>
          <target state="translated">Computa a média de uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1475" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int64})">
          <source>A sequence of <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> values to calculate the average of.</source>
          <target state="translated">Uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> para realizar o cálculo da média.</target>       </trans-unit>
        <trans-unit id="1476" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int64})">
          <source>Computes the average of a sequence of <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> values.</source>
          <target state="translated">Computa a média de uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1477" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})">
          <source>A sequence of nullable <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> values to calculate the average of.</source>
          <target state="translated">Uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> que permitem valores nulos para cálculo da média.</target>       </trans-unit>
        <trans-unit id="1478" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})">
          <source>Computes the average of a sequence of nullable <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> values.</source>
          <target state="translated">Computa a média de uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> que permitem valores nulos.</target>       </trans-unit>
        <trans-unit id="1479" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})">
          <source>A sequence of nullable <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> values to calculate the average of.</source>
          <target state="translated">Uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> que permitem valores nulos para cálculo da média.</target>       </trans-unit>
        <trans-unit id="1480" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})">
          <source>Computes the average of a sequence of nullable <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> values.</source>
          <target state="translated">Computa a média de uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> que permitem valores nulos.</target>       </trans-unit>
        <trans-unit id="1481" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})">
          <source>A sequence of nullable <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> values to calculate the average of.</source>
          <target state="translated">Uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> que permitem valores nulos para cálculo da média.</target>       </trans-unit>
        <trans-unit id="1482" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})">
          <source>Computes the average of a sequence of nullable <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> values.</source>
          <target state="translated">Computa a média de uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> que permitem valores nulos.</target>       </trans-unit>
        <trans-unit id="1483" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})">
          <source>A sequence of nullable <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> values to calculate the average of.</source>
          <target state="translated">Uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> que permitem valores nulos para cálculo da média.</target>       </trans-unit>
        <trans-unit id="1484" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})">
          <source>Computes the average of a sequence of nullable <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> values.</source>
          <target state="translated">Computa a média de uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> que permitem valores nulos.</target>       </trans-unit>
        <trans-unit id="1485" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})">
          <source>A sequence of nullable <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> values to calculate the average of.</source>
          <target state="translated">Uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> que permitem valores nulos para cálculo da média.</target>       </trans-unit>
        <trans-unit id="1486" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})">
          <source>Computes the average of a sequence of nullable <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> values.</source>
          <target state="translated">Computa a média de uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> que permitem valores nulos.</target>       </trans-unit>
        <trans-unit id="1487" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Single})">
          <source>A sequence of <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> values to calculate the average of.</source>
          <target state="translated">Uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> para realizar o cálculo da média.</target>       </trans-unit>
        <trans-unit id="1488" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Single})">
          <source>Computes the average of a sequence of <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> values.</source>
          <target state="translated">Computa a média de uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1489" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1490" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})">
          <source>A sequence of values that are used to calculate an average.</source>
          <target state="translated">Uma sequência de valores usados para calcular uma média.</target>       </trans-unit>
        <trans-unit id="1491" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Uma função de transformação a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="1492" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})">
          <source>Computes the average of a sequence of <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> values that are obtained by invoking a transform function on each element of the input sequence.</source>
          <target state="translated">Calcula a média de uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> obtidos pela invocação de uma função de transformação em cada elemento da sequência de entrada.</target>       </trans-unit>
        <trans-unit id="1493" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1494" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})">
          <source>A sequence of values to calculate the average of.</source>
          <target state="translated">Uma sequência de valores para cálculo da média.</target>       </trans-unit>
        <trans-unit id="1495" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Uma função de transformação a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="1496" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})">
          <source>Computes the average of a sequence of <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> values that are obtained by invoking a transform function on each element of the input sequence.</source>
          <target state="translated">Calcula a média de uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> obtidos pela invocação de uma função de transformação em cada elemento da sequência de entrada.</target>       </trans-unit>
        <trans-unit id="1497" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1498" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})">
          <source>A sequence of values to calculate the average of.</source>
          <target state="translated">Uma sequência de valores para cálculo da média.</target>       </trans-unit>
        <trans-unit id="1499" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Uma função de transformação a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="1500" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})">
          <source>Computes the average of a sequence of <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> values that are obtained by invoking a transform function on each element of the input sequence.</source>
          <target state="translated">Calcula a média de uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> obtidos pela invocação de uma função de transformação em cada elemento da sequência de entrada.</target>       </trans-unit>
        <trans-unit id="1501" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})">
          <source>The type of the elements of source.</source>
          <target state="translated">O tipo dos elementos da fonte.</target>       </trans-unit>
        <trans-unit id="1502" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})">
          <source>A sequence of values to calculate the average of.</source>
          <target state="translated">Uma sequência de valores para cálculo da média.</target>       </trans-unit>
        <trans-unit id="1503" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Uma função de transformação a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="1504" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})">
          <source>Computes the average of a sequence of <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> values that are obtained by invoking a transform function on each element of the input sequence.</source>
          <target state="translated">Calcula a média de uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> obtidos pela invocação de uma função de transformação em cada elemento da sequência de entrada.</target>       </trans-unit>
        <trans-unit id="1505" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1506" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})">
          <source>A sequence of values to calculate the average of.</source>
          <target state="translated">Uma sequência de valores para cálculo da média.</target>       </trans-unit>
        <trans-unit id="1507" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Uma função de transformação a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="1508" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})">
          <source>Computes the average of a sequence of nullable <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> values that are obtained by invoking a transform function on each element of the input sequence.</source>
          <target state="translated">Calcula a média de uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> que permitem valor nulo obtidos pela invocação de uma função de transformação em cada elemento da sequência de entrada.</target>       </trans-unit>
        <trans-unit id="1509" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1510" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})">
          <source>A sequence of values to calculate the average of.</source>
          <target state="translated">Uma sequência de valores para cálculo da média.</target>       </trans-unit>
        <trans-unit id="1511" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Uma função de transformação a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="1512" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})">
          <source>Computes the average of a sequence of nullable <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> values that are obtained by invoking a transform function on each element of the input sequence.</source>
          <target state="translated">Calcula a média de uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> que permitem valor nulo obtidos pela invocação de uma função de transformação em cada elemento da sequência de entrada.</target>       </trans-unit>
        <trans-unit id="1513" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1514" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})">
          <source>A sequence of values to calculate the average of.</source>
          <target state="translated">Uma sequência de valores para cálculo da média.</target>       </trans-unit>
        <trans-unit id="1515" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Uma função de transformação a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="1516" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})">
          <source>Computes the average of a sequence of nullable <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> values that are obtained by invoking a transform function on each element of the input sequence.</source>
          <target state="translated">Calcula a média de uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> que permitem valor nulo obtidos pela invocação de uma função de transformação em cada elemento da sequência de entrada.</target>       </trans-unit>
        <trans-unit id="1517" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1518" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})">
          <source>A sequence of values to calculate the average of.</source>
          <target state="translated">Uma sequência de valores para cálculo da média.</target>       </trans-unit>
        <trans-unit id="1519" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Uma função de transformação a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="1520" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})">
          <source>Computes the average of a sequence of nullable <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> values that are obtained by invoking a transform function on each element of the input sequence.</source>
          <target state="translated">Calcula a média de uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> que permitem valor nulo obtidos pela invocação de uma função de transformação em cada elemento da sequência de entrada.</target>       </trans-unit>
        <trans-unit id="1521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1522" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})">
          <source>A sequence of values to calculate the average of.</source>
          <target state="translated">Uma sequência de valores para cálculo da média.</target>       </trans-unit>
        <trans-unit id="1523" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Uma função de transformação a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="1524" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})">
          <source>Computes the average of a sequence of nullable <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> values that are obtained by invoking a transform function on each element of the input sequence.</source>
          <target state="translated">Calcula a média de uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> que permitem valor nulo obtidos pela invocação de uma função de transformação em cada elemento da sequência de entrada.</target>       </trans-unit>
        <trans-unit id="1525" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1526" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})">
          <source>A sequence of values to calculate the average of.</source>
          <target state="translated">Uma sequência de valores para cálculo da média.</target>       </trans-unit>
        <trans-unit id="1527" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Uma função de transformação a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="1528" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})">
          <source>Computes the average of a sequence of <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> values that are obtained by invoking a transform function on each element of the input sequence.</source>
          <target state="translated">Calcula a média de uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> obtidos pela invocação de uma função de transformação em cada elemento da sequência de entrada.</target>       </trans-unit>
        <trans-unit id="1529" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)">
          <source>The type to cast the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept> to.</source>
          <target state="translated">O tipo para converter os elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept> para.</target>       </trans-unit>
        <trans-unit id="1530" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerable" /&gt;</ph> that contains the elements to be cast to type <bpt id="p1">&lt;c&gt;</bpt>TResult<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerable" /&gt;</ph> que contém os elementos a serem convertidos no tipo <bpt id="p1">&lt;c&gt;</bpt>TResult<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1531" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)">
          <source>Casts the elements of an <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerable" /&gt;</ph> to the specified type.</source>
          <target state="translated">Converte os elementos de um <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerable" /&gt;</ph> para o tipo especificado.</target>       </trans-unit>
        <trans-unit id="1532" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>The type of the elements of the input sequences.</source>
          <target state="translated">O tipo dos elementos das sequências de entrada.</target>       </trans-unit>
        <trans-unit id="1533" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>The first sequence to concatenate.</source>
          <target state="translated">A primeira sequência a ser concatenada.</target>       </trans-unit>
        <trans-unit id="1534" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>The sequence to concatenate to the first sequence.</source>
          <target state="translated">A sequência a ser concatenada com a primeira sequência.</target>       </trans-unit>
        <trans-unit id="1535" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>Concatenates two sequences.</source>
          <target state="translated">Concatena duas sequências.</target>       </trans-unit>
        <trans-unit id="1536" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1537" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)">
          <source>A sequence in which to locate a value.</source>
          <target state="translated">Uma sequência na qual um valor será localizado.</target>       </trans-unit>
        <trans-unit id="1538" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)">
          <source>The value to locate in the sequence.</source>
          <target state="translated">O valor a ser localizado na sequência.</target>       </trans-unit>
        <trans-unit id="1539" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)">
          <source>Determines whether a sequence contains a specified element by using the default equality comparer.</source>
          <target state="translated">Determina se uma sequência contém um elemento especificado usando o comparador de igualdade padrão.</target>       </trans-unit>
        <trans-unit id="1540" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1541" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})">
          <source>A sequence in which to locate a value.</source>
          <target state="translated">Uma sequência na qual um valor será localizado.</target>       </trans-unit>
        <trans-unit id="1542" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})">
          <source>The value to locate in the sequence.</source>
          <target state="translated">O valor a ser localizado na sequência.</target>       </trans-unit>
        <trans-unit id="1543" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})">
          <source>An equality comparer to compare values.</source>
          <target state="translated">Um comparador de igualdade para comparar valores.</target>       </trans-unit>
        <trans-unit id="1544" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})">
          <source>Determines whether a sequence contains a specified element by using a specified <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>.</source>
          <target state="translated">Determina se uma sequência contém um elemento especificado usando um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="1545" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1546" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})">
          <source>A sequence that contains elements to be counted.</source>
          <target state="translated">Uma sequência que contém os elementos a serem contados.</target>       </trans-unit>
        <trans-unit id="1547" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})">
          <source>Returns the number of elements in a sequence.</source>
          <target state="translated">Retorna o número de elementos em uma sequência.</target>       </trans-unit>
        <trans-unit id="1548" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1549" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
          <source>A sequence that contains elements to be tested and counted.</source>
          <target state="translated">Uma sequência que contém os elementos a serem testados e contados.</target>       </trans-unit>
        <trans-unit id="1550" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
          <source>A function to test each element for a condition.</source>
          <target state="translated">Uma função para testar cada elemento em relação a uma condição.</target>       </trans-unit>
        <trans-unit id="1551" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
          <source>Returns a number that represents how many elements in the specified sequence satisfy a condition.</source>
          <target state="translated">Retorna um número que representa quantos elementos na sequência especificada atendem a uma condição.</target>       </trans-unit>
        <trans-unit id="1552" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1553" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The sequence to return a default value for if it is empty.</source>
          <target state="translated">A sequência para a qual será retornado um valor padrão se ela estiver vazia.</target>       </trans-unit>
        <trans-unit id="1554" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})">
          <source>Returns the elements of the specified sequence or the type parameter's default value in a singleton collection if the sequence is empty.</source>
          <target state="translated">Retornará os elementos da sequência especificada ou o valor padrão do parâmetro de tipo em uma coleção de singletons se a sequência estiver vazia.</target>       </trans-unit>
        <trans-unit id="1555" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1556" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)">
          <source>The sequence to return the specified value for if it is empty.</source>
          <target state="translated">A sequência para a qual será retornado o valor especificado se ela estiver vazia.</target>       </trans-unit>
        <trans-unit id="1557" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)">
          <source>The value to return if the sequence is empty.</source>
          <target state="translated">O valor a ser retornado se a sequência estiver vazia.</target>       </trans-unit>
        <trans-unit id="1558" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)">
          <source>Returns the elements of the specified sequence or the specified value in a singleton collection if the sequence is empty.</source>
          <target state="translated">Retorna os elementos da sequência especificada ou o valor especificado em uma coleção de singletons se a sequência está vazia.</target>       </trans-unit>
        <trans-unit id="1559" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1560" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The sequence to remove duplicate elements from.</source>
          <target state="translated">A sequência da qual os elementos duplicados serão removidos.</target>       </trans-unit>
        <trans-unit id="1561" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})">
          <source>Returns distinct elements from a sequence by using the default equality comparer to compare values.</source>
          <target state="translated">Retorna os elementos distintos de uma sequência usando o comparador de igualdade padrão para comparar valores.</target>       </trans-unit>
        <trans-unit id="1562" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1563" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The sequence to remove duplicate elements from.</source>
          <target state="translated">A sequência da qual os elementos duplicados serão removidos.</target>       </trans-unit>
        <trans-unit id="1564" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to compare values.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> para comparar valores.</target>       </trans-unit>
        <trans-unit id="1565" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>Returns distinct elements from a sequence by using a specified <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to compare values.</source>
          <target state="translated">Retorna os elementos distintos de uma sequência usando um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> especificado para comparar valores.</target>       </trans-unit>
        <trans-unit id="1566" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1567" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> to return an element from.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> do qual um elemento será retornado.</target>       </trans-unit>
        <trans-unit id="1568" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
          <source>The zero-based index of the element to retrieve.</source>
          <target state="translated">O índice baseado em zero do elemento a ser recuperado.</target>       </trans-unit>
        <trans-unit id="1569" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
          <source>Returns the element at a specified index in a sequence.</source>
          <target state="translated">Retorna o elemento de um índice especificado em uma sequência.</target>       </trans-unit>
        <trans-unit id="1570" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1571" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> to return an element from.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> do qual um elemento será retornado.</target>       </trans-unit>
        <trans-unit id="1572" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
          <source>The zero-based index of the element to retrieve.</source>
          <target state="translated">O índice baseado em zero do elemento a ser recuperado.</target>       </trans-unit>
        <trans-unit id="1573" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
          <source>Returns the element at a specified index in a sequence or a default value if the index is out of range.</source>
          <target state="translated">Retorna o elemento em um índice especificado em uma sequência ou um valor padrão se o índice estiver fora do intervalo.</target>       </trans-unit>
        <trans-unit id="1574" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>The type of the elements of the input sequences.</source>
          <target state="translated">O tipo dos elementos das sequências de entrada.</target>       </trans-unit>
        <trans-unit id="1575" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> whose elements that are not also in <bpt id="p1">&lt;c&gt;</bpt>second<ept id="p1">&lt;/c&gt;</ept> will be returned.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> cujos elementos que não estão presentes também em <bpt id="p1">&lt;c&gt;</bpt>second<ept id="p1">&lt;/c&gt;</ept> serão retornados.</target>       </trans-unit>
        <trans-unit id="1576" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> whose elements that also occur in the first sequence will cause those elements to be removed from the returned sequence.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> cujos elementos que também ocorrem na primeira sequência farão com que esses elementos sejam removidos da sequência retornada.</target>       </trans-unit>
        <trans-unit id="1577" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>Produces the set difference of two sequences by using the default equality comparer to compare values.</source>
          <target state="translated">Produz a diferença de conjunto de duas sequências usando o comparador de igualdade padrão para comparar os valores.</target>       </trans-unit>
        <trans-unit id="1578" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The type of the elements of the input sequences.</source>
          <target state="translated">O tipo dos elementos das sequências de entrada.</target>       </trans-unit>
        <trans-unit id="1579" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> whose elements that are not also in <bpt id="p1">&lt;c&gt;</bpt>second<ept id="p1">&lt;/c&gt;</ept> will be returned.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> cujos elementos que não estão presentes também em <bpt id="p1">&lt;c&gt;</bpt>second<ept id="p1">&lt;/c&gt;</ept> serão retornados.</target>       </trans-unit>
        <trans-unit id="1580" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> whose elements that also occur in the first sequence will cause those elements to be removed from the returned sequence.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> cujos elementos que também ocorrem na primeira sequência farão com que esses elementos sejam removidos da sequência retornada.</target>       </trans-unit>
        <trans-unit id="1581" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to compare values.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> para comparar valores.</target>       </trans-unit>
        <trans-unit id="1582" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>Produces the set difference of two sequences by using the specified <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to compare values.</source>
          <target state="translated">Produz a diferença de conjunto de duas sequências usando o <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> especificado para comparar os valores.</target>       </trans-unit>
        <trans-unit id="1583" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1584" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> to return the first element of.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> do qual o primeiro elemento será retornado.</target>       </trans-unit>
        <trans-unit id="1585" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})">
          <source>Returns the first element of a sequence.</source>
          <target state="translated">Retorna o primeiro elemento de uma sequência.</target>       </trans-unit>
        <trans-unit id="1586" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1587" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> to return an element from.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> do qual um elemento será retornado.</target>       </trans-unit>
        <trans-unit id="1588" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
          <source>A function to test each element for a condition.</source>
          <target state="translated">Uma função para testar cada elemento em relação a uma condição.</target>       </trans-unit>
        <trans-unit id="1589" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
          <source>Returns the first element in a sequence that satisfies a specified condition.</source>
          <target state="translated">Retorna o primeiro elemento em uma sequência que satisfaz uma condição especificada.</target>       </trans-unit>
        <trans-unit id="1590" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1591" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> to return the first element of.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> do qual o primeiro elemento será retornado.</target>       </trans-unit>
        <trans-unit id="1592" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})">
          <source>Returns the first element of a sequence, or a default value if the sequence contains no elements.</source>
          <target state="translated">Retorna o primeiro elemento de uma sequência ou um valor padrão se a sequência não contém elementos.</target>       </trans-unit>
        <trans-unit id="1593" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1594" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> to return an element from.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> do qual um elemento será retornado.</target>       </trans-unit>
        <trans-unit id="1595" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
          <source>A function to test each element for a condition.</source>
          <target state="translated">Uma função para testar cada elemento em relação a uma condição.</target>       </trans-unit>
        <trans-unit id="1596" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
          <source>Returns the first element of the sequence that satisfies a condition or a default value if no such element is found.</source>
          <target state="translated">Retorna o primeiro elemento da sequência que satisfaz uma condição ou um valor padrão, caso esse elemento não seja encontrado.</target>       </trans-unit>
        <trans-unit id="1597" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1598" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo de chave retornada pelo <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1599" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> whose elements to group.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> cujos elementos serão agrupados.</target>       </trans-unit>
        <trans-unit id="1600" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
          <source>A function to extract the key for each element.</source>
          <target state="translated">Uma função para extrair a chave de cada elemento.</target>       </trans-unit>
        <trans-unit id="1601" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
          <source>Groups the elements of a sequence according to a specified key selector function.</source>
          <target state="translated">Agrupa os elementos de uma sequência de acordo com uma função de seletor de chave especificada.</target>       </trans-unit>
        <trans-unit id="1602" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1603" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo de chave retornada pelo <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1604" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> whose elements to group.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> cujos elementos serão agrupados.</target>       </trans-unit>
        <trans-unit id="1605" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A function to extract the key for each element.</source>
          <target state="translated">Uma função para extrair a chave de cada elemento.</target>       </trans-unit>
        <trans-unit id="1606" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to compare keys.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> para comparar chaves.</target>       </trans-unit>
        <trans-unit id="1607" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>Groups the elements of a sequence according to a specified key selector function and compares the keys by using a specified comparer.</source>
          <target state="translated">Agrupa os elementos de uma sequência de acordo com uma função do seletor de chave especificada e compara as chaves usando um comparador especificado.</target>       </trans-unit>
        <trans-unit id="1608" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1609" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo de chave retornada pelo <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1610" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>The type of the elements in the <ph id="ph1">&lt;see cref="T:System.Linq.IGrouping`2" /&gt;</ph>.</source>
          <target state="translated">O tipo dos elementos no <ph id="ph1">&lt;see cref="T:System.Linq.IGrouping`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1611" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> whose elements to group.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> cujos elementos serão agrupados.</target>       </trans-unit>
        <trans-unit id="1612" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>A function to extract the key for each element.</source>
          <target state="translated">Uma função para extrair a chave de cada elemento.</target>       </trans-unit>
        <trans-unit id="1613" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>A function to map each source element to an element in the <ph id="ph1">&lt;see cref="T:System.Linq.IGrouping`2" /&gt;</ph>.</source>
          <target state="translated">Uma função para mapear cada elemento de origem para um elemento no <ph id="ph1">&lt;see cref="T:System.Linq.IGrouping`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1614" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>Groups the elements of a sequence according to a specified key selector function and projects the elements for each group by using a specified function.</source>
          <target state="translated">Agrupa os elementos de uma sequência de acordo com a função de seletor de chave especificada e projeta os elementos de cada grupo usando uma função especificada.</target>       </trans-unit>
        <trans-unit id="1615" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1616" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo de chave retornada pelo <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1617" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the elements in the <ph id="ph1">&lt;see cref="T:System.Linq.IGrouping`2" /&gt;</ph>.</source>
          <target state="translated">O tipo dos elementos no <ph id="ph1">&lt;see cref="T:System.Linq.IGrouping`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1618" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> whose elements to group.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> cujos elementos serão agrupados.</target>       </trans-unit>
        <trans-unit id="1619" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A function to extract the key for each element.</source>
          <target state="translated">Uma função para extrair a chave de cada elemento.</target>       </trans-unit>
        <trans-unit id="1620" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A function to map each source element to an element in an <ph id="ph1">&lt;see cref="T:System.Linq.IGrouping`2" /&gt;</ph>.</source>
          <target state="translated">Uma função para mapear cada elemento de origem para um elemento em um <ph id="ph1">&lt;see cref="T:System.Linq.IGrouping`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1621" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to compare keys.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> para comparar chaves.</target>       </trans-unit>
        <trans-unit id="1622" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>Groups the elements of a sequence according to a key selector function.</source>
          <target state="translated">Agrupa os elementos de uma sequência de acordo com uma função de seletor de chave.</target>       </trans-unit>
        <trans-unit id="1623" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The keys are compared by using a comparer and each group's elements are projected by using a specified function.</source>
          <target state="translated">As chaves são comparadas usando um comparador e os elementos de cada grupo são projetados usando uma função especificada.</target>       </trans-unit>
        <trans-unit id="1624" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1625" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo de chave retornada pelo <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1626" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})">
          <source>The type of the result value returned by <bpt id="p1">&lt;c&gt;</bpt>resultSelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo do valor de resultado retornado por <bpt id="p1">&lt;c&gt;</bpt>resultSelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1627" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> whose elements to group.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> cujos elementos serão agrupados.</target>       </trans-unit>
        <trans-unit id="1628" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})">
          <source>A function to extract the key for each element.</source>
          <target state="translated">Uma função para extrair a chave de cada elemento.</target>       </trans-unit>
        <trans-unit id="1629" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})">
          <source>A function to create a result value from each group.</source>
          <target state="translated">Uma função para criar um valor de resultado de cada grupo.</target>       </trans-unit>
        <trans-unit id="1630" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})">
          <source>Groups the elements of a sequence according to a specified key selector function and creates a result value from each group and its key.</source>
          <target state="translated">Agrupa os elementos de uma sequência de acordo com uma função do seletor de chave especificada e cria um valor de resultado de cada grupo e sua chave.</target>       </trans-unit>
        <trans-unit id="1631" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1632" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo de chave retornada pelo <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1633" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the result value returned by <bpt id="p1">&lt;c&gt;</bpt>resultSelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo do valor de resultado retornado por <bpt id="p1">&lt;c&gt;</bpt>resultSelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1634" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> whose elements to group.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> cujos elementos serão agrupados.</target>       </trans-unit>
        <trans-unit id="1635" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A function to extract the key for each element.</source>
          <target state="translated">Uma função para extrair a chave de cada elemento.</target>       </trans-unit>
        <trans-unit id="1636" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A function to create a result value from each group.</source>
          <target state="translated">Uma função para criar um valor de resultado de cada grupo.</target>       </trans-unit>
        <trans-unit id="1637" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to compare keys with.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> com o qual as chaves serão comparadas.</target>       </trans-unit>
        <trans-unit id="1638" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>Groups the elements of a sequence according to a specified key selector function and creates a result value from each group and its key.</source>
          <target state="translated">Agrupa os elementos de uma sequência de acordo com uma função do seletor de chave especificada e cria um valor de resultado de cada grupo e sua chave.</target>       </trans-unit>
        <trans-unit id="1639" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The keys are compared by using a specified comparer.</source>
          <target state="translated">As chaves são comparadas usando um comparador especificado.</target>       </trans-unit>
        <trans-unit id="1640" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1641" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo de chave retornada pelo <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1642" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})">
          <source>The type of the elements in each <ph id="ph1">&lt;see cref="T:System.Linq.IGrouping`2" /&gt;</ph>.</source>
          <target state="translated">O tipo dos elementos em cada <ph id="ph1">&lt;see cref="T:System.Linq.IGrouping`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1643" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})">
          <source>The type of the result value returned by <bpt id="p1">&lt;c&gt;</bpt>resultSelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo do valor de resultado retornado por <bpt id="p1">&lt;c&gt;</bpt>resultSelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1644" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> whose elements to group.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> cujos elementos serão agrupados.</target>       </trans-unit>
        <trans-unit id="1645" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})">
          <source>A function to extract the key for each element.</source>
          <target state="translated">Uma função para extrair a chave de cada elemento.</target>       </trans-unit>
        <trans-unit id="1646" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})">
          <source>A function to map each source element to an element in an <ph id="ph1">&lt;see cref="T:System.Linq.IGrouping`2" /&gt;</ph>.</source>
          <target state="translated">Uma função para mapear cada elemento de origem para um elemento em um <ph id="ph1">&lt;see cref="T:System.Linq.IGrouping`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1647" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})">
          <source>A function to create a result value from each group.</source>
          <target state="translated">Uma função para criar um valor de resultado de cada grupo.</target>       </trans-unit>
        <trans-unit id="1648" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})">
          <source>Groups the elements of a sequence according to a specified key selector function and creates a result value from each group and its key.</source>
          <target state="translated">Agrupa os elementos de uma sequência de acordo com uma função do seletor de chave especificada e cria um valor de resultado de cada grupo e sua chave.</target>       </trans-unit>
        <trans-unit id="1649" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})">
          <source>The elements of each group are projected by using a specified function.</source>
          <target state="translated">Os elementos de cada grupo são projetados usando uma função especificada.</target>       </trans-unit>
        <trans-unit id="1650" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1651" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo de chave retornada pelo <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1652" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the elements in each <ph id="ph1">&lt;see cref="T:System.Linq.IGrouping`2" /&gt;</ph>.</source>
          <target state="translated">O tipo dos elementos em cada <ph id="ph1">&lt;see cref="T:System.Linq.IGrouping`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1653" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the result value returned by <bpt id="p1">&lt;c&gt;</bpt>resultSelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo do valor de resultado retornado por <bpt id="p1">&lt;c&gt;</bpt>resultSelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1654" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> whose elements to group.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> cujos elementos serão agrupados.</target>       </trans-unit>
        <trans-unit id="1655" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A function to extract the key for each element.</source>
          <target state="translated">Uma função para extrair a chave de cada elemento.</target>       </trans-unit>
        <trans-unit id="1656" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A function to map each source element to an element in an <ph id="ph1">&lt;see cref="T:System.Linq.IGrouping`2" /&gt;</ph>.</source>
          <target state="translated">Uma função para mapear cada elemento de origem para um elemento em um <ph id="ph1">&lt;see cref="T:System.Linq.IGrouping`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1657" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A function to create a result value from each group.</source>
          <target state="translated">Uma função para criar um valor de resultado de cada grupo.</target>       </trans-unit>
        <trans-unit id="1658" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to compare keys with.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> com o qual as chaves serão comparadas.</target>       </trans-unit>
        <trans-unit id="1659" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})">
          <source>Groups the elements of a sequence according to a specified key selector function and creates a result value from each group and its key.</source>
          <target state="translated">Agrupa os elementos de uma sequência de acordo com uma função do seletor de chave especificada e cria um valor de resultado de cada grupo e sua chave.</target>       </trans-unit>
        <trans-unit id="1660" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})">
          <source>Key values are compared by using a specified comparer, and the elements of each group are projected by using a specified function.</source>
          <target state="translated">Os valores da chave são comparados usando um comparador especificado e os elementos de cada grupo são projetados usando uma função especificada.</target>       </trans-unit>
        <trans-unit id="1661" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
          <source>The type of the elements of the first sequence.</source>
          <target state="translated">O tipo dos elementos da primeira sequência.</target>       </trans-unit>
        <trans-unit id="1662" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
          <source>The type of the elements of the second sequence.</source>
          <target state="translated">O tipo dos elementos da segunda sequência.</target>       </trans-unit>
        <trans-unit id="1663" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
          <source>The type of the keys returned by the key selector functions.</source>
          <target state="translated">O tipo das chaves retornadas pelas funções de seletor de chave.</target>       </trans-unit>
        <trans-unit id="1664" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
          <source>The type of the result elements.</source>
          <target state="translated">O tipo dos elementos de resultado.</target>       </trans-unit>
        <trans-unit id="1665" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
          <source>The first sequence to join.</source>
          <target state="translated">A primeira sequência a ser ingressada.</target>       </trans-unit>
        <trans-unit id="1666" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
          <source>The sequence to join to the first sequence.</source>
          <target state="translated">A sequência a ser ingressada à primeira sequência.</target>       </trans-unit>
        <trans-unit id="1667" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
          <source>A function to extract the join key from each element of the first sequence.</source>
          <target state="translated">Uma função para extrair a chave de junção de cada elemento da primeira sequência.</target>       </trans-unit>
        <trans-unit id="1668" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
          <source>A function to extract the join key from each element of the second sequence.</source>
          <target state="translated">Uma função para extrair a chave de junção de cada elemento da segunda sequência.</target>       </trans-unit>
        <trans-unit id="1669" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
          <source>A function to create a result element from an element from the first sequence and a collection of matching elements from the second sequence.</source>
          <target state="translated">Uma função para criar um elemento de resultado de um elemento da primeira sequência e uma coleção de elementos correspondentes da segunda sequência.</target>       </trans-unit>
        <trans-unit id="1670" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
          <source>Correlates the elements of two sequences based on equality of keys and groups the results.</source>
          <target state="translated">Correlaciona os elementos de duas sequências com base na igualdade de chaves e agrupa os resultados.</target>       </trans-unit>
        <trans-unit id="1671" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
          <source>The default equality comparer is used to compare keys.</source>
          <target state="translated">O comparador de igualdade padrão é usado para comparar chaves.</target>       </trans-unit>
        <trans-unit id="1672" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The type of the elements of the first sequence.</source>
          <target state="translated">O tipo dos elementos da primeira sequência.</target>       </trans-unit>
        <trans-unit id="1673" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The type of the elements of the second sequence.</source>
          <target state="translated">O tipo dos elementos da segunda sequência.</target>       </trans-unit>
        <trans-unit id="1674" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The type of the keys returned by the key selector functions.</source>
          <target state="translated">O tipo das chaves retornadas pelas funções de seletor de chave.</target>       </trans-unit>
        <trans-unit id="1675" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The type of the result elements.</source>
          <target state="translated">O tipo dos elementos de resultado.</target>       </trans-unit>
        <trans-unit id="1676" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The first sequence to join.</source>
          <target state="translated">A primeira sequência a ser ingressada.</target>       </trans-unit>
        <trans-unit id="1677" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The sequence to join to the first sequence.</source>
          <target state="translated">A sequência a ser ingressada à primeira sequência.</target>       </trans-unit>
        <trans-unit id="1678" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>A function to extract the join key from each element of the first sequence.</source>
          <target state="translated">Uma função para extrair a chave de junção de cada elemento da primeira sequência.</target>       </trans-unit>
        <trans-unit id="1679" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>A function to extract the join key from each element of the second sequence.</source>
          <target state="translated">Uma função para extrair a chave de junção de cada elemento da segunda sequência.</target>       </trans-unit>
        <trans-unit id="1680" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>A function to create a result element from an element from the first sequence and a collection of matching elements from the second sequence.</source>
          <target state="translated">Uma função para criar um elemento de resultado de um elemento da primeira sequência e uma coleção de elementos correspondentes da segunda sequência.</target>       </trans-unit>
        <trans-unit id="1681" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to hash and compare keys.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> para executar hash e comparar chaves.</target>       </trans-unit>
        <trans-unit id="1682" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>Correlates the elements of two sequences based on key equality and groups the results.</source>
          <target state="translated">Correlaciona os elementos de duas sequências com base na igualdade de chaves e agrupa os resultados.</target>       </trans-unit>
        <trans-unit id="1683" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>A specified <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> is used to compare keys.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> especificado é usado para comparar chaves.</target>       </trans-unit>
        <trans-unit id="1684" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>The type of the elements of the input sequences.</source>
          <target state="translated">O tipo dos elementos das sequências de entrada.</target>       </trans-unit>
        <trans-unit id="1685" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> whose distinct elements that also appear in <bpt id="p1">&lt;c&gt;</bpt>second<ept id="p1">&lt;/c&gt;</ept> will be returned.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> cujos elementos distintos que também aparecem em <bpt id="p1">&lt;c&gt;</bpt>second<ept id="p1">&lt;/c&gt;</ept> serão retornados.</target>       </trans-unit>
        <trans-unit id="1686" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> whose distinct elements that also appear in the first sequence will be returned.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> cujos elementos distintos que também aparecem na primeira sequência serão retornados.</target>       </trans-unit>
        <trans-unit id="1687" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>Produces the set intersection of two sequences by using the default equality comparer to compare values.</source>
          <target state="translated">Produz a interseção de conjunto de duas sequências usando o comparador de igualdade padrão para comparar os valores.</target>       </trans-unit>
        <trans-unit id="1688" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The type of the elements of the input sequences.</source>
          <target state="translated">O tipo dos elementos das sequências de entrada.</target>       </trans-unit>
        <trans-unit id="1689" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> whose distinct elements that also appear in <bpt id="p1">&lt;c&gt;</bpt>second<ept id="p1">&lt;/c&gt;</ept> will be returned.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> cujos elementos distintos que também aparecem em <bpt id="p1">&lt;c&gt;</bpt>second<ept id="p1">&lt;/c&gt;</ept> serão retornados.</target>       </trans-unit>
        <trans-unit id="1690" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> whose distinct elements that also appear in the first sequence will be returned.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> cujos elementos distintos que também aparecem na primeira sequência serão retornados.</target>       </trans-unit>
        <trans-unit id="1691" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to compare values.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> para comparar valores.</target>       </trans-unit>
        <trans-unit id="1692" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>Produces the set intersection of two sequences by using the specified <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to compare values.</source>
          <target state="translated">Produz a interseção de conjunto de duas sequências usando o <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> especificado para comparar os valores.</target>       </trans-unit>
        <trans-unit id="1693" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
          <source>The type of the elements of the first sequence.</source>
          <target state="translated">O tipo dos elementos da primeira sequência.</target>       </trans-unit>
        <trans-unit id="1694" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
          <source>The type of the elements of the second sequence.</source>
          <target state="translated">O tipo dos elementos da segunda sequência.</target>       </trans-unit>
        <trans-unit id="1695" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
          <source>The type of the keys returned by the key selector functions.</source>
          <target state="translated">O tipo das chaves retornadas pelas funções de seletor de chave.</target>       </trans-unit>
        <trans-unit id="1696" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
          <source>The type of the result elements.</source>
          <target state="translated">O tipo dos elementos de resultado.</target>       </trans-unit>
        <trans-unit id="1697" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
          <source>The first sequence to join.</source>
          <target state="translated">A primeira sequência a ser ingressada.</target>       </trans-unit>
        <trans-unit id="1698" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
          <source>The sequence to join to the first sequence.</source>
          <target state="translated">A sequência a ser ingressada à primeira sequência.</target>       </trans-unit>
        <trans-unit id="1699" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
          <source>A function to extract the join key from each element of the first sequence.</source>
          <target state="translated">Uma função para extrair a chave de junção de cada elemento da primeira sequência.</target>       </trans-unit>
        <trans-unit id="1700" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
          <source>A function to extract the join key from each element of the second sequence.</source>
          <target state="translated">Uma função para extrair a chave de junção de cada elemento da segunda sequência.</target>       </trans-unit>
        <trans-unit id="1701" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
          <source>A function to create a result element from two matching elements.</source>
          <target state="translated">Uma função para criar um elemento de resultado de dois elementos correspondentes.</target>       </trans-unit>
        <trans-unit id="1702" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
          <source>Correlates the elements of two sequences based on matching keys.</source>
          <target state="translated">Correlaciona os elementos de duas sequências com base em chaves de correspondência.</target>       </trans-unit>
        <trans-unit id="1703" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
          <source>The default equality comparer is used to compare keys.</source>
          <target state="translated">O comparador de igualdade padrão é usado para comparar chaves.</target>       </trans-unit>
        <trans-unit id="1704" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The type of the elements of the first sequence.</source>
          <target state="translated">O tipo dos elementos da primeira sequência.</target>       </trans-unit>
        <trans-unit id="1705" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The type of the elements of the second sequence.</source>
          <target state="translated">O tipo dos elementos da segunda sequência.</target>       </trans-unit>
        <trans-unit id="1706" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The type of the keys returned by the key selector functions.</source>
          <target state="translated">O tipo das chaves retornadas pelas funções de seletor de chave.</target>       </trans-unit>
        <trans-unit id="1707" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The type of the result elements.</source>
          <target state="translated">O tipo dos elementos de resultado.</target>       </trans-unit>
        <trans-unit id="1708" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The first sequence to join.</source>
          <target state="translated">A primeira sequência a ser ingressada.</target>       </trans-unit>
        <trans-unit id="1709" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The sequence to join to the first sequence.</source>
          <target state="translated">A sequência a ser ingressada à primeira sequência.</target>       </trans-unit>
        <trans-unit id="1710" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>A function to extract the join key from each element of the first sequence.</source>
          <target state="translated">Uma função para extrair a chave de junção de cada elemento da primeira sequência.</target>       </trans-unit>
        <trans-unit id="1711" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>A function to extract the join key from each element of the second sequence.</source>
          <target state="translated">Uma função para extrair a chave de junção de cada elemento da segunda sequência.</target>       </trans-unit>
        <trans-unit id="1712" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>A function to create a result element from two matching elements.</source>
          <target state="translated">Uma função para criar um elemento de resultado de dois elementos correspondentes.</target>       </trans-unit>
        <trans-unit id="1713" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to hash and compare keys.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> para executar hash e comparar chaves.</target>       </trans-unit>
        <trans-unit id="1714" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>Correlates the elements of two sequences based on matching keys.</source>
          <target state="translated">Correlaciona os elementos de duas sequências com base em chaves de correspondência.</target>       </trans-unit>
        <trans-unit id="1715" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>A specified <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> is used to compare keys.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> especificado é usado para comparar chaves.</target>       </trans-unit>
        <trans-unit id="1716" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1717" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> to return the last element of.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> do qual o último elemento será retornado.</target>       </trans-unit>
        <trans-unit id="1718" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})">
          <source>Returns the last element of a sequence.</source>
          <target state="translated">Retorna o último elemento de uma sequência.</target>       </trans-unit>
        <trans-unit id="1719" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1720" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> to return an element from.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> do qual um elemento será retornado.</target>       </trans-unit>
        <trans-unit id="1721" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
          <source>A function to test each element for a condition.</source>
          <target state="translated">Uma função para testar cada elemento em relação a uma condição.</target>       </trans-unit>
        <trans-unit id="1722" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
          <source>Returns the last element of a sequence that satisfies a specified condition.</source>
          <target state="translated">Retorna o último elemento de uma sequência que satisfaz uma condição especificada.</target>       </trans-unit>
        <trans-unit id="1723" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1724" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> to return the last element of.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> do qual o último elemento será retornado.</target>       </trans-unit>
        <trans-unit id="1725" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})">
          <source>Returns the last element of a sequence, or a default value if the sequence contains no elements.</source>
          <target state="translated">Retorna o último elemento de uma sequência ou um valor padrão se a sequência não contém elementos.</target>       </trans-unit>
        <trans-unit id="1726" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1727" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> to return an element from.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> do qual um elemento será retornado.</target>       </trans-unit>
        <trans-unit id="1728" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
          <source>A function to test each element for a condition.</source>
          <target state="translated">Uma função para testar cada elemento em relação a uma condição.</target>       </trans-unit>
        <trans-unit id="1729" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
          <source>Returns the last element of a sequence that satisfies a condition or a default value if no such element is found.</source>
          <target state="translated">Retorna o último elemento de uma sequência que satisfaz uma condição ou um valor padrão, caso esse elemento não seja encontrado.</target>       </trans-unit>
        <trans-unit id="1730" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1731" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> that contains the elements to be counted.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> que contém os elementos a serem contados.</target>       </trans-unit>
        <trans-unit id="1732" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> that represents the total number of elements in a sequence.</source>
          <target state="translated">Retorna um <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> que representa o número total de elementos em uma sequência.</target>       </trans-unit>
        <trans-unit id="1733" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1734" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> that contains the elements to be counted.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> que contém os elementos a serem contados.</target>       </trans-unit>
        <trans-unit id="1735" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
          <source>A function to test each element for a condition.</source>
          <target state="translated">Uma função para testar cada elemento em relação a uma condição.</target>       </trans-unit>
        <trans-unit id="1736" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> that represents how many elements in a sequence satisfy a condition.</source>
          <target state="translated">Retorna um <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> que representa quantos elementos na sequência atendem a uma condição.</target>       </trans-unit>
        <trans-unit id="1737" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Decimal})">
          <source>A sequence of <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> values to determine the maximum value of.</source>
          <target state="translated">Uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> da qual será determinado o valor máximo.</target>       </trans-unit>
        <trans-unit id="1738" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Decimal})">
          <source>Returns the maximum value in a sequence of <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> values.</source>
          <target state="translated">Retorna o valor máximo em uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1739" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Double})">
          <source>A sequence of <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> values to determine the maximum value of.</source>
          <target state="translated">Uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> da qual será determinado o valor máximo.</target>       </trans-unit>
        <trans-unit id="1740" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Double})">
          <source>Returns the maximum value in a sequence of <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> values.</source>
          <target state="translated">Retorna o valor máximo em uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1741" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int32})">
          <source>A sequence of <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> values to determine the maximum value of.</source>
          <target state="translated">Uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> da qual será determinado o valor máximo.</target>       </trans-unit>
        <trans-unit id="1742" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int32})">
          <source>Returns the maximum value in a sequence of <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> values.</source>
          <target state="translated">Retorna o valor máximo em uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1743" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int64})">
          <source>A sequence of <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> values to determine the maximum value of.</source>
          <target state="translated">Uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> da qual será determinado o valor máximo.</target>       </trans-unit>
        <trans-unit id="1744" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int64})">
          <source>Returns the maximum value in a sequence of <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> values.</source>
          <target state="translated">Retorna o valor máximo em uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1745" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})">
          <source>A sequence of nullable <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> values to determine the maximum value of.</source>
          <target state="translated">Uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> anuláveis para determinar o valor máximo.</target>       </trans-unit>
        <trans-unit id="1746" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})">
          <source>Returns the maximum value in a sequence of nullable <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> values.</source>
          <target state="translated">Retorna o valor máximo em uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> anuláveis.</target>       </trans-unit>
        <trans-unit id="1747" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})">
          <source>A sequence of nullable <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> values to determine the maximum value of.</source>
          <target state="translated">Uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> anuláveis para determinar o valor máximo.</target>       </trans-unit>
        <trans-unit id="1748" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})">
          <source>Returns the maximum value in a sequence of nullable <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> values.</source>
          <target state="translated">Retorna o valor máximo em uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> anuláveis.</target>       </trans-unit>
        <trans-unit id="1749" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})">
          <source>A sequence of nullable <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> values to determine the maximum value of.</source>
          <target state="translated">Uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> anuláveis para determinar o valor máximo.</target>       </trans-unit>
        <trans-unit id="1750" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})">
          <source>Returns the maximum value in a sequence of nullable <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> values.</source>
          <target state="translated">Retorna o valor máximo em uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> anuláveis.</target>       </trans-unit>
        <trans-unit id="1751" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})">
          <source>A sequence of nullable <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> values to determine the maximum value of.</source>
          <target state="translated">Uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> anuláveis para determinar o valor máximo.</target>       </trans-unit>
        <trans-unit id="1752" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})">
          <source>Returns the maximum value in a sequence of nullable <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> values.</source>
          <target state="translated">Retorna o valor máximo em uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> anuláveis.</target>       </trans-unit>
        <trans-unit id="1753" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})">
          <source>A sequence of nullable <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> values to determine the maximum value of.</source>
          <target state="translated">Uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> anuláveis para determinar o valor máximo.</target>       </trans-unit>
        <trans-unit id="1754" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})">
          <source>Returns the maximum value in a sequence of nullable <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> values.</source>
          <target state="translated">Retorna o valor máximo em uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> anuláveis.</target>       </trans-unit>
        <trans-unit id="1755" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Single})">
          <source>A sequence of <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> values to determine the maximum value of.</source>
          <target state="translated">Uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> da qual será determinado o valor máximo.</target>       </trans-unit>
        <trans-unit id="1756" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Single})">
          <source>Returns the maximum value in a sequence of <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> values.</source>
          <target state="translated">Retorna o valor máximo em uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1757" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1758" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})">
          <source>A sequence of values to determine the maximum value of.</source>
          <target state="translated">Uma sequência de valores para determinação do valor máximo.</target>       </trans-unit>
        <trans-unit id="1759" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})">
          <source>Returns the maximum value in a generic sequence.</source>
          <target state="translated">Retorna o valor máximo em uma sequência genérica.</target>       </trans-unit>
        <trans-unit id="1760" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1761" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})">
          <source>A sequence of values to determine the maximum value of.</source>
          <target state="translated">Uma sequência de valores para determinação do valor máximo.</target>       </trans-unit>
        <trans-unit id="1762" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Uma função de transformação a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="1763" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})">
          <source>Invokes a transform function on each element of a sequence and returns the maximum <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> value.</source>
          <target state="translated">Invoca uma função de transformação em cada elemento de uma sequência e retorna o valor <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> máximo.</target>       </trans-unit>
        <trans-unit id="1764" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1765" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})">
          <source>A sequence of values to determine the maximum value of.</source>
          <target state="translated">Uma sequência de valores para determinação do valor máximo.</target>       </trans-unit>
        <trans-unit id="1766" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Uma função de transformação a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="1767" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})">
          <source>Invokes a transform function on each element of a sequence and returns the maximum <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> value.</source>
          <target state="translated">Invoca uma função de transformação em cada elemento de uma sequência e retorna o valor <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> máximo.</target>       </trans-unit>
        <trans-unit id="1768" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1769" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})">
          <source>A sequence of values to determine the maximum value of.</source>
          <target state="translated">Uma sequência de valores para determinação do valor máximo.</target>       </trans-unit>
        <trans-unit id="1770" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Uma função de transformação a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="1771" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})">
          <source>Invokes a transform function on each element of a sequence and returns the maximum <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> value.</source>
          <target state="translated">Invoca uma função de transformação em cada elemento de uma sequência e retorna o valor <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> máximo.</target>       </trans-unit>
        <trans-unit id="1772" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1773" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})">
          <source>A sequence of values to determine the maximum value of.</source>
          <target state="translated">Uma sequência de valores para determinação do valor máximo.</target>       </trans-unit>
        <trans-unit id="1774" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Uma função de transformação a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="1775" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})">
          <source>Invokes a transform function on each element of a sequence and returns the maximum <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> value.</source>
          <target state="translated">Invoca uma função de transformação em cada elemento de uma sequência e retorna o valor <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> máximo.</target>       </trans-unit>
        <trans-unit id="1776" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1777" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})">
          <source>A sequence of values to determine the maximum value of.</source>
          <target state="translated">Uma sequência de valores para determinação do valor máximo.</target>       </trans-unit>
        <trans-unit id="1778" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Uma função de transformação a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="1779" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})">
          <source>Invokes a transform function on each element of a sequence and returns the maximum nullable <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> value.</source>
          <target state="translated">Invoca uma função de transformação em cada elemento de uma sequência e retorna o valor <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> máximo que permite valor nulo.</target>       </trans-unit>
        <trans-unit id="1780" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1781" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})">
          <source>A sequence of values to determine the maximum value of.</source>
          <target state="translated">Uma sequência de valores para determinação do valor máximo.</target>       </trans-unit>
        <trans-unit id="1782" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Uma função de transformação a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="1783" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})">
          <source>Invokes a transform function on each element of a sequence and returns the maximum nullable <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> value.</source>
          <target state="translated">Invoca uma função de transformação em cada elemento de uma sequência e retorna o valor <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> máximo que permite valor nulo.</target>       </trans-unit>
        <trans-unit id="1784" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1785" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})">
          <source>A sequence of values to determine the maximum value of.</source>
          <target state="translated">Uma sequência de valores para determinação do valor máximo.</target>       </trans-unit>
        <trans-unit id="1786" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Uma função de transformação a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="1787" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})">
          <source>Invokes a transform function on each element of a sequence and returns the maximum nullable <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> value.</source>
          <target state="translated">Invoca uma função de transformação em cada elemento de uma sequência e retorna o valor <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> máximo que permite valor nulo.</target>       </trans-unit>
        <trans-unit id="1788" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1789" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})">
          <source>A sequence of values to determine the maximum value of.</source>
          <target state="translated">Uma sequência de valores para determinação do valor máximo.</target>       </trans-unit>
        <trans-unit id="1790" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Uma função de transformação a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="1791" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})">
          <source>Invokes a transform function on each element of a sequence and returns the maximum nullable <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> value.</source>
          <target state="translated">Invoca uma função de transformação em cada elemento de uma sequência e retorna o valor <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> máximo que permite valor nulo.</target>       </trans-unit>
        <trans-unit id="1792" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1793" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})">
          <source>A sequence of values to determine the maximum value of.</source>
          <target state="translated">Uma sequência de valores para determinação do valor máximo.</target>       </trans-unit>
        <trans-unit id="1794" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Uma função de transformação a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="1795" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})">
          <source>Invokes a transform function on each element of a sequence and returns the maximum nullable <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> value.</source>
          <target state="translated">Invoca uma função de transformação em cada elemento de uma sequência e retorna o valor <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> máximo que permite valor nulo.</target>       </trans-unit>
        <trans-unit id="1796" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1797" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})">
          <source>A sequence of values to determine the maximum value of.</source>
          <target state="translated">Uma sequência de valores para determinação do valor máximo.</target>       </trans-unit>
        <trans-unit id="1798" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Uma função de transformação a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="1799" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})">
          <source>Invokes a transform function on each element of a sequence and returns the maximum <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> value.</source>
          <target state="translated">Invoca uma função de transformação em cada elemento de uma sequência e retorna o valor <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> máximo.</target>       </trans-unit>
        <trans-unit id="1800" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1801" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
          <source>The type of the value returned by <bpt id="p1">&lt;c&gt;</bpt>selector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo do valor retornado por <bpt id="p1">&lt;c&gt;</bpt>seletor<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1802" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
          <source>A sequence of values to determine the maximum value of.</source>
          <target state="translated">Uma sequência de valores para determinação do valor máximo.</target>       </trans-unit>
        <trans-unit id="1803" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Uma função de transformação a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="1804" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
          <source>Invokes a transform function on each element of a generic sequence and returns the maximum resulting value.</source>
          <target state="translated">Invoca uma função de transformação em cada elemento de uma sequência genérica e retorna o maior valor resultante.</target>       </trans-unit>
        <trans-unit id="1805" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Decimal})">
          <source>A sequence of <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> values to determine the minimum value of.</source>
          <target state="translated">Uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> para determinação do valor mínimo.</target>       </trans-unit>
        <trans-unit id="1806" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Decimal})">
          <source>Returns the minimum value in a sequence of <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> values.</source>
          <target state="translated">Retorna o valor mínimo em uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1807" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Double})">
          <source>A sequence of <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> values to determine the minimum value of.</source>
          <target state="translated">Uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> para determinação do valor mínimo.</target>       </trans-unit>
        <trans-unit id="1808" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Double})">
          <source>Returns the minimum value in a sequence of <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> values.</source>
          <target state="translated">Retorna o valor mínimo em uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1809" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int32})">
          <source>A sequence of <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> values to determine the minimum value of.</source>
          <target state="translated">Uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> para determinação do valor mínimo.</target>       </trans-unit>
        <trans-unit id="1810" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int32})">
          <source>Returns the minimum value in a sequence of <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> values.</source>
          <target state="translated">Retorna o valor mínimo em uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1811" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int64})">
          <source>A sequence of <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> values to determine the minimum value of.</source>
          <target state="translated">Uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> para determinação do valor mínimo.</target>       </trans-unit>
        <trans-unit id="1812" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int64})">
          <source>Returns the minimum value in a sequence of <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> values.</source>
          <target state="translated">Retorna o valor mínimo em uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1813" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})">
          <source>A sequence of nullable <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> values to determine the minimum value of.</source>
          <target state="translated">Uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> anuláveis dos quais determinar o valor mínimo.</target>       </trans-unit>
        <trans-unit id="1814" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})">
          <source>Returns the minimum value in a sequence of nullable <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> values.</source>
          <target state="translated">Retorna o valor mínimo em uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> anuláveis.</target>       </trans-unit>
        <trans-unit id="1815" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})">
          <source>A sequence of nullable <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> values to determine the minimum value of.</source>
          <target state="translated">Uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> anuláveis dos quais determinar o valor mínimo.</target>       </trans-unit>
        <trans-unit id="1816" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})">
          <source>Returns the minimum value in a sequence of nullable <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> values.</source>
          <target state="translated">Retorna o valor mínimo em uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> anuláveis.</target>       </trans-unit>
        <trans-unit id="1817" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})">
          <source>A sequence of nullable <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> values to determine the minimum value of.</source>
          <target state="translated">Uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> anuláveis dos quais determinar o valor mínimo.</target>       </trans-unit>
        <trans-unit id="1818" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})">
          <source>Returns the minimum value in a sequence of nullable <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> values.</source>
          <target state="translated">Retorna o valor mínimo em uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> anuláveis.</target>       </trans-unit>
        <trans-unit id="1819" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})">
          <source>A sequence of nullable <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> values to determine the minimum value of.</source>
          <target state="translated">Uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> anuláveis dos quais determinar o valor mínimo.</target>       </trans-unit>
        <trans-unit id="1820" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})">
          <source>Returns the minimum value in a sequence of nullable <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> values.</source>
          <target state="translated">Retorna o valor mínimo em uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> anuláveis.</target>       </trans-unit>
        <trans-unit id="1821" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})">
          <source>A sequence of nullable <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> values to determine the minimum value of.</source>
          <target state="translated">Uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> anuláveis dos quais determinar o valor mínimo.</target>       </trans-unit>
        <trans-unit id="1822" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})">
          <source>Returns the minimum value in a sequence of nullable <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> values.</source>
          <target state="translated">Retorna o valor mínimo em uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> anuláveis.</target>       </trans-unit>
        <trans-unit id="1823" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Single})">
          <source>A sequence of <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> values to determine the minimum value of.</source>
          <target state="translated">Uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> para determinação do valor mínimo.</target>       </trans-unit>
        <trans-unit id="1824" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Single})">
          <source>Returns the minimum value in a sequence of <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> values.</source>
          <target state="translated">Retorna o valor mínimo em uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1825" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1826" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})">
          <source>A sequence of values to determine the minimum value of.</source>
          <target state="translated">Uma sequência de valores para determinação do valor mínimo.</target>       </trans-unit>
        <trans-unit id="1827" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})">
          <source>Returns the minimum value in a generic sequence.</source>
          <target state="translated">Retorna o valor mínimo em uma sequência genérica.</target>       </trans-unit>
        <trans-unit id="1828" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1829" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})">
          <source>A sequence of values to determine the minimum value of.</source>
          <target state="translated">Uma sequência de valores para determinação do valor mínimo.</target>       </trans-unit>
        <trans-unit id="1830" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Uma função de transformação a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="1831" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})">
          <source>Invokes a transform function on each element of a sequence and returns the minimum <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> value.</source>
          <target state="translated">Invoca uma função de transformação em cada elemento de uma sequência e retorna o valor <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> mínimo.</target>       </trans-unit>
        <trans-unit id="1832" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1833" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})">
          <source>A sequence of values to determine the minimum value of.</source>
          <target state="translated">Uma sequência de valores para determinação do valor mínimo.</target>       </trans-unit>
        <trans-unit id="1834" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Uma função de transformação a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="1835" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})">
          <source>Invokes a transform function on each element of a sequence and returns the minimum <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> value.</source>
          <target state="translated">Invoca uma função de transformação em cada elemento de uma sequência e retorna o valor <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> mínimo.</target>       </trans-unit>
        <trans-unit id="1836" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1837" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})">
          <source>A sequence of values to determine the minimum value of.</source>
          <target state="translated">Uma sequência de valores para determinação do valor mínimo.</target>       </trans-unit>
        <trans-unit id="1838" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Uma função de transformação a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="1839" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})">
          <source>Invokes a transform function on each element of a sequence and returns the minimum <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> value.</source>
          <target state="translated">Invoca uma função de transformação em cada elemento de uma sequência e retorna o valor <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> mínimo.</target>       </trans-unit>
        <trans-unit id="1840" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1841" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})">
          <source>A sequence of values to determine the minimum value of.</source>
          <target state="translated">Uma sequência de valores para determinação do valor mínimo.</target>       </trans-unit>
        <trans-unit id="1842" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Uma função de transformação a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="1843" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})">
          <source>Invokes a transform function on each element of a sequence and returns the minimum <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> value.</source>
          <target state="translated">Invoca uma função de transformação em cada elemento de uma sequência e retorna o valor <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> mínimo.</target>       </trans-unit>
        <trans-unit id="1844" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1845" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})">
          <source>A sequence of values to determine the minimum value of.</source>
          <target state="translated">Uma sequência de valores para determinação do valor mínimo.</target>       </trans-unit>
        <trans-unit id="1846" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Uma função de transformação a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="1847" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})">
          <source>Invokes a transform function on each element of a sequence and returns the minimum nullable <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> value.</source>
          <target state="translated">Invoca uma função de transformação em cada elemento de uma sequência e retorna o valor <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> mínimo que permite valor nulo.</target>       </trans-unit>
        <trans-unit id="1848" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1849" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})">
          <source>A sequence of values to determine the minimum value of.</source>
          <target state="translated">Uma sequência de valores para determinação do valor mínimo.</target>       </trans-unit>
        <trans-unit id="1850" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Uma função de transformação a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="1851" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})">
          <source>Invokes a transform function on each element of a sequence and returns the minimum nullable <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> value.</source>
          <target state="translated">Invoca uma função de transformação em cada elemento de uma sequência e retorna o valor <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> mínimo que permite valor nulo.</target>       </trans-unit>
        <trans-unit id="1852" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1853" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})">
          <source>A sequence of values to determine the minimum value of.</source>
          <target state="translated">Uma sequência de valores para determinação do valor mínimo.</target>       </trans-unit>
        <trans-unit id="1854" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Uma função de transformação a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="1855" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})">
          <source>Invokes a transform function on each element of a sequence and returns the minimum nullable <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> value.</source>
          <target state="translated">Invoca uma função de transformação em cada elemento de uma sequência e retorna o valor <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> mínimo que permite valor nulo.</target>       </trans-unit>
        <trans-unit id="1856" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1857" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})">
          <source>A sequence of values to determine the minimum value of.</source>
          <target state="translated">Uma sequência de valores para determinação do valor mínimo.</target>       </trans-unit>
        <trans-unit id="1858" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Uma função de transformação a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="1859" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})">
          <source>Invokes a transform function on each element of a sequence and returns the minimum nullable <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> value.</source>
          <target state="translated">Invoca uma função de transformação em cada elemento de uma sequência e retorna o valor <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> mínimo que permite valor nulo.</target>       </trans-unit>
        <trans-unit id="1860" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1861" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})">
          <source>A sequence of values to determine the minimum value of.</source>
          <target state="translated">Uma sequência de valores para determinação do valor mínimo.</target>       </trans-unit>
        <trans-unit id="1862" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Uma função de transformação a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="1863" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})">
          <source>Invokes a transform function on each element of a sequence and returns the minimum nullable <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> value.</source>
          <target state="translated">Invoca uma função de transformação em cada elemento de uma sequência e retorna o valor <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> mínimo que permite valor nulo.</target>       </trans-unit>
        <trans-unit id="1864" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1865" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})">
          <source>A sequence of values to determine the minimum value of.</source>
          <target state="translated">Uma sequência de valores para determinação do valor mínimo.</target>       </trans-unit>
        <trans-unit id="1866" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Uma função de transformação a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="1867" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})">
          <source>Invokes a transform function on each element of a sequence and returns the minimum <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> value.</source>
          <target state="translated">Invoca uma função de transformação em cada elemento de uma sequência e retorna o valor <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> mínimo.</target>       </trans-unit>
        <trans-unit id="1868" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1869" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
          <source>The type of the value returned by <bpt id="p1">&lt;c&gt;</bpt>selector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo do valor retornado por <bpt id="p1">&lt;c&gt;</bpt>seletor<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1870" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
          <source>A sequence of values to determine the minimum value of.</source>
          <target state="translated">Uma sequência de valores para determinação do valor mínimo.</target>       </trans-unit>
        <trans-unit id="1871" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Uma função de transformação a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="1872" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
          <source>Invokes a transform function on each element of a generic sequence and returns the minimum resulting value.</source>
          <target state="translated">Invoca uma função de transformação em cada elemento de uma sequência genérica e retorna o menor valor resultante.</target>       </trans-unit>
        <trans-unit id="1873" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)">
          <source>The type to filter the elements of the sequence on.</source>
          <target state="translated">O tipo no qual filtrar os elementos da sequência.</target>       </trans-unit>
        <trans-unit id="1874" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerable" /&gt;</ph> whose elements to filter.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerable" /&gt;</ph> cujos elementos serão filtrados.</target>       </trans-unit>
        <trans-unit id="1875" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)">
          <source>Filters the elements of an <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerable" /&gt;</ph> based on a specified type.</source>
          <target state="translated">Filtra os elementos de um <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerable" /&gt;</ph> com base em um tipo especificado.</target>       </trans-unit>
        <trans-unit id="1876" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1877" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo de chave retornada pelo <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1878" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
          <source>A sequence of values to order.</source>
          <target state="translated">Uma sequência de valores a serem ordenados.</target>       </trans-unit>
        <trans-unit id="1879" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
          <source>A function to extract a key from an element.</source>
          <target state="translated">Uma função para extrair uma chave de um elemento.</target>       </trans-unit>
        <trans-unit id="1880" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
          <source>Sorts the elements of a sequence in ascending order according to a key.</source>
          <target state="translated">Classifica os elementos de uma sequência em ordem crescente de acordo com uma chave.</target>       </trans-unit>
        <trans-unit id="1881" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1882" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo de chave retornada pelo <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1883" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>A sequence of values to order.</source>
          <target state="translated">Uma sequência de valores a serem ordenados.</target>       </trans-unit>
        <trans-unit id="1884" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>A function to extract a key from an element.</source>
          <target state="translated">Uma função para extrair uma chave de um elemento.</target>       </trans-unit>
        <trans-unit id="1885" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph> to compare keys.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph> para comparar chaves.</target>       </trans-unit>
        <trans-unit id="1886" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>Sorts the elements of a sequence in ascending order by using a specified comparer.</source>
          <target state="translated">Classifica os elementos de uma sequência em ordem crescente usando um comparador especificado.</target>       </trans-unit>
        <trans-unit id="1887" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1888" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo de chave retornada pelo <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1889" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
          <source>A sequence of values to order.</source>
          <target state="translated">Uma sequência de valores a serem ordenados.</target>       </trans-unit>
        <trans-unit id="1890" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
          <source>A function to extract a key from an element.</source>
          <target state="translated">Uma função para extrair uma chave de um elemento.</target>       </trans-unit>
        <trans-unit id="1891" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
          <source>Sorts the elements of a sequence in descending order according to a key.</source>
          <target state="translated">Classifica os elementos de uma sequência em ordem decrescente de acordo com uma chave.</target>       </trans-unit>
        <trans-unit id="1892" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1893" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo de chave retornada pelo <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1894" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>A sequence of values to order.</source>
          <target state="translated">Uma sequência de valores a serem ordenados.</target>       </trans-unit>
        <trans-unit id="1895" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>A function to extract a key from an element.</source>
          <target state="translated">Uma função para extrair uma chave de um elemento.</target>       </trans-unit>
        <trans-unit id="1896" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph> to compare keys.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph> para comparar chaves.</target>       </trans-unit>
        <trans-unit id="1897" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>Sorts the elements of a sequence in descending order by using a specified comparer.</source>
          <target state="translated">Classifica os elementos de uma sequência em ordem decrescente usando um comparador especificado.</target>       </trans-unit>
        <trans-unit id="1898" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)">
          <source>The type of the elements of <ph id="ph1">&lt;paramref name="source" /&gt;</ph>.</source>
          <target state="translated">O tipo dos elementos de <ph id="ph1">&lt;paramref name="source" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1899" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)">
          <source>A sequence of values.</source>
          <target state="translated">Uma sequência de valores.</target>       </trans-unit>
        <trans-unit id="1900" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)">
          <source>The value to prepend to <ph id="ph1">&lt;paramref name="source" /&gt;</ph>.</source>
          <target state="translated">O valor a ser precedido a <ph id="ph1">&lt;paramref name="source" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1901" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)">
          <source>Adds a value to the beginning of the sequence.</source>
          <target state="translated">Adiciona um valor ao início da sequência.</target>       </trans-unit>
        <trans-unit id="1902" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1903" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})">
          <source>A sequence of values to reverse.</source>
          <target state="translated">Uma sequência de valores a ser revertida.</target>       </trans-unit>
        <trans-unit id="1904" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})">
          <source>Inverts the order of the elements in a sequence.</source>
          <target state="translated">Inverte a ordem dos elementos em uma sequência.</target>       </trans-unit>
        <trans-unit id="1905" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1906" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
          <source>The type of the value returned by <bpt id="p1">&lt;c&gt;</bpt>selector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo do valor retornado por <bpt id="p1">&lt;c&gt;</bpt>seletor<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1907" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
          <source>A sequence of values to invoke a transform function on.</source>
          <target state="translated">Uma sequência de valores na qual uma função de transformação será invocada.</target>       </trans-unit>
        <trans-unit id="1908" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Uma função de transformação a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="1909" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
          <source>Projects each element of a sequence into a new form.</source>
          <target state="translated">Projeta cada elemento de uma sequência em um novo formulário.</target>       </trans-unit>
        <trans-unit id="1910" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1911" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})">
          <source>The type of the value returned by <bpt id="p1">&lt;c&gt;</bpt>selector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo do valor retornado por <bpt id="p1">&lt;c&gt;</bpt>seletor<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1912" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})">
          <source>A sequence of values to invoke a transform function on.</source>
          <target state="translated">Uma sequência de valores na qual uma função de transformação será invocada.</target>       </trans-unit>
        <trans-unit id="1913" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})">
          <source>A transform function to apply to each source element; the second parameter of the function represents the index of the source element.</source>
          <target state="translated">Uma função de transformação para aplicar a cada elemento de origem; o segundo parâmetro da função representa o índice do elemento de origem.</target>       </trans-unit>
        <trans-unit id="1914" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})">
          <source>Projects each element of a sequence into a new form by incorporating the element's index.</source>
          <target state="translated">Projeta cada elemento de uma sequência em um novo formulário, incorporando o índice do elemento.</target>       </trans-unit>
        <trans-unit id="1915" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1916" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})">
          <source>The type of the elements of the sequence returned by <bpt id="p1">&lt;c&gt;</bpt>selector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos da sequência retornado por <bpt id="p1">&lt;c&gt;</bpt>seletor<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1917" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})">
          <source>A sequence of values to project.</source>
          <target state="translated">Uma sequência de valores a serem projetados.</target>       </trans-unit>
        <trans-unit id="1918" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Uma função de transformação a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="1919" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})">
          <source>Projects each element of a sequence to an <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> and flattens the resulting sequences into one sequence.</source>
          <target state="translated">Projeta cada elemento de uma sequência em um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> e nivela as sequências resultantes em uma sequência.</target>       </trans-unit>
        <trans-unit id="1920" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1921" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})">
          <source>The type of the elements of the sequence returned by <bpt id="p1">&lt;c&gt;</bpt>selector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos da sequência retornado por <bpt id="p1">&lt;c&gt;</bpt>seletor<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1922" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})">
          <source>A sequence of values to project.</source>
          <target state="translated">Uma sequência de valores a serem projetados.</target>       </trans-unit>
        <trans-unit id="1923" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})">
          <source>A transform function to apply to each source element; the second parameter of the function represents the index of the source element.</source>
          <target state="translated">Uma função de transformação para aplicar a cada elemento de origem; o segundo parâmetro da função representa o índice do elemento de origem.</target>       </trans-unit>
        <trans-unit id="1924" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})">
          <source>Projects each element of a sequence to an <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>, and flattens the resulting sequences into one sequence.</source>
          <target state="translated">Projeta cada elemento de uma sequência em um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> e nivela as sequências resultantes em uma sequência.</target>       </trans-unit>
        <trans-unit id="1925" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})">
          <source>The index of each source element is used in the projected form of that element.</source>
          <target state="translated">O índice de cada elemento de origem é usado no formulário projetado desse elemento.</target>       </trans-unit>
        <trans-unit id="1926" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1927" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>The type of the intermediate elements collected by <bpt id="p1">&lt;c&gt;</bpt>collectionSelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos intermediários coletados pelo <bpt id="p1">&lt;c&gt;</bpt>collectionSelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1928" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>The type of the elements of the resulting sequence.</source>
          <target state="translated">O tipo dos elementos da sequência resultante.</target>       </trans-unit>
        <trans-unit id="1929" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>A sequence of values to project.</source>
          <target state="translated">Uma sequência de valores a serem projetados.</target>       </trans-unit>
        <trans-unit id="1930" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>A transform function to apply to each element of the input sequence.</source>
          <target state="translated">Uma função de transformação a ser aplicada a cada elemento da sequência de entrada.</target>       </trans-unit>
        <trans-unit id="1931" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>A transform function to apply to each element of the intermediate sequence.</source>
          <target state="translated">Uma função de transformação a ser aplicada a cada elemento da sequência intermediária.</target>       </trans-unit>
        <trans-unit id="1932" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>Projects each element of a sequence to an <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>, flattens the resulting sequences into one sequence, and invokes a result selector function on each element therein.</source>
          <target state="translated">Projeta cada elemento de uma sequência em um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>, mescla as sequências resultantes em uma sequência e chama uma função de seletor de resultado em cada elemento contido nele.</target>       </trans-unit>
        <trans-unit id="1933" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1934" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>The type of the intermediate elements collected by <bpt id="p1">&lt;c&gt;</bpt>collectionSelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos intermediários coletados pelo <bpt id="p1">&lt;c&gt;</bpt>collectionSelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1935" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>The type of the elements of the resulting sequence.</source>
          <target state="translated">O tipo dos elementos da sequência resultante.</target>       </trans-unit>
        <trans-unit id="1936" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>A sequence of values to project.</source>
          <target state="translated">Uma sequência de valores a serem projetados.</target>       </trans-unit>
        <trans-unit id="1937" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>A transform function to apply to each source element; the second parameter of the function represents the index of the source element.</source>
          <target state="translated">Uma função de transformação para aplicar a cada elemento de origem; o segundo parâmetro da função representa o índice do elemento de origem.</target>       </trans-unit>
        <trans-unit id="1938" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>A transform function to apply to each element of the intermediate sequence.</source>
          <target state="translated">Uma função de transformação a ser aplicada a cada elemento da sequência intermediária.</target>       </trans-unit>
        <trans-unit id="1939" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>Projects each element of a sequence to an <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>, flattens the resulting sequences into one sequence, and invokes a result selector function on each element therein.</source>
          <target state="translated">Projeta cada elemento de uma sequência em um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>, mescla as sequências resultantes em uma sequência e chama uma função de seletor de resultado em cada elemento contido nele.</target>       </trans-unit>
        <trans-unit id="1940" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>The index of each source element is used in the intermediate projected form of that element.</source>
          <target state="translated">O índice de cada elemento de origem é usado no formulário projetado intermediário do elemento.</target>       </trans-unit>
        <trans-unit id="1941" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>The type of the elements of the input sequences.</source>
          <target state="translated">O tipo dos elementos das sequências de entrada.</target>       </trans-unit>
        <trans-unit id="1942" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> to compare to <bpt id="p1">&lt;c&gt;</bpt>second<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> para comparar com <bpt id="p1">&lt;c&gt;</bpt>second<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1943" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> to compare to the first sequence.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> para comparar com a primeira sequência.</target>       </trans-unit>
        <trans-unit id="1944" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>Determines whether two sequences are equal by comparing the elements by using the default equality comparer for their type.</source>
          <target state="translated">Determina se duas sequências são iguais comparando os elementos usando o comparador de igualdade padrão para o tipo.</target>       </trans-unit>
        <trans-unit id="1945" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The type of the elements of the input sequences.</source>
          <target state="translated">O tipo dos elementos das sequências de entrada.</target>       </trans-unit>
        <trans-unit id="1946" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> to compare to <bpt id="p1">&lt;c&gt;</bpt>second<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> para comparar com <bpt id="p1">&lt;c&gt;</bpt>second<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1947" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> to compare to the first sequence.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> para comparar com a primeira sequência.</target>       </trans-unit>
        <trans-unit id="1948" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to use to compare elements.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> a ser usado para comparar elementos.</target>       </trans-unit>
        <trans-unit id="1949" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>Determines whether two sequences are equal by comparing their elements by using a specified <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>.</source>
          <target state="translated">Determina se duas sequências são iguais, comparando seus elementos usando um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="1950" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1951" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> to return the single element of.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> do qual o único elemento será retornado.</target>       </trans-unit>
        <trans-unit id="1952" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})">
          <source>Returns the only element of a sequence, and throws an exception if there is not exactly one element in the sequence.</source>
          <target state="translated">Retornará o único elemento de uma sequência e lançará uma exceção se não houver exatamente um elemento na sequência.</target>       </trans-unit>
        <trans-unit id="1953" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1954" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> to return a single element from.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> do qual retornar um único elemento.</target>       </trans-unit>
        <trans-unit id="1955" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
          <source>A function to test an element for a condition.</source>
          <target state="translated">Uma função para testar um elemento em relação a uma condição.</target>       </trans-unit>
        <trans-unit id="1956" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
          <source>Returns the only element of a sequence that satisfies a specified condition, and throws an exception if more than one such element exists.</source>
          <target state="translated">Retorna o único elemento de uma sequência que satisfaz uma condição especificada e gera uma exceção se houver mais de um tal elemento.</target>       </trans-unit>
        <trans-unit id="1957" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1958" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> to return the single element of.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> do qual o único elemento será retornado.</target>       </trans-unit>
        <trans-unit id="1959" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})">
          <source>Returns the only element of a sequence, or a default value if the sequence is empty; this method throws an exception if there is more than one element in the sequence.</source>
          <target state="translated">Retorna o único elemento de uma sequência ou um valor padrão se a sequência é vazia; esse método gera uma exceção se há mais de um elemento na sequência.</target>       </trans-unit>
        <trans-unit id="1960" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1961" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> to return a single element from.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> do qual retornar um único elemento.</target>       </trans-unit>
        <trans-unit id="1962" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
          <source>A function to test an element for a condition.</source>
          <target state="translated">Uma função para testar um elemento em relação a uma condição.</target>       </trans-unit>
        <trans-unit id="1963" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
          <source>Returns the only element of a sequence that satisfies a specified condition or a default value if no such element exists; this method throws an exception if more than one element satisfies the condition.</source>
          <target state="translated">Retorna o único elemento de uma sequência que satisfaz uma condição especificada ou um valor padrão se esse elemento não existir. Esse método lança uma exceção se mais de um elemento satisfizer a condição.</target>       </trans-unit>
        <trans-unit id="1964" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1965" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> to return elements from.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> do qual os elementos serão retornados.</target>       </trans-unit>
        <trans-unit id="1966" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
          <source>The number of elements to skip before returning the remaining elements.</source>
          <target state="translated">O número de elementos a serem ignorados antes de retornar os elementos restantes.</target>       </trans-unit>
        <trans-unit id="1967" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
          <source>Bypasses a specified number of elements in a sequence and then returns the remaining elements.</source>
          <target state="translated">Ignora um número especificado de elementos em uma sequência e retorna os elementos restantes.</target>       </trans-unit>
        <trans-unit id="1968" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1969" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> to return elements from.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> do qual os elementos serão retornados.</target>       </trans-unit>
        <trans-unit id="1970" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
          <source>A function to test each element for a condition.</source>
          <target state="translated">Uma função para testar cada elemento em relação a uma condição.</target>       </trans-unit>
        <trans-unit id="1971" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
          <source>Bypasses elements in a sequence as long as a specified condition is true and then returns the remaining elements.</source>
          <target state="translated">Ignora elementos em uma sequência, contanto que uma condição especificada seja verdadeira e retorne os elementos restantes.</target>       </trans-unit>
        <trans-unit id="1972" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1973" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> to return elements from.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> do qual os elementos serão retornados.</target>       </trans-unit>
        <trans-unit id="1974" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})">
          <source>A function to test each source element for a condition; the second parameter of the function represents the index of the source element.</source>
          <target state="translated">Uma função para testar cada elemento de origem em relação a uma condição; o segundo parâmetro da função representa o índice do elemento de origem.</target>       </trans-unit>
        <trans-unit id="1975" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})">
          <source>Bypasses elements in a sequence as long as a specified condition is true and then returns the remaining elements.</source>
          <target state="translated">Ignora elementos em uma sequência, contanto que uma condição especificada seja verdadeira e retorne os elementos restantes.</target>       </trans-unit>
        <trans-unit id="1976" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})">
          <source>The element's index is used in the logic of the predicate function.</source>
          <target state="translated">O índice do elemento é usado na lógica da função de predicado.</target>       </trans-unit>
        <trans-unit id="1977" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Decimal})">
          <source>A sequence of <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> values to calculate the sum of.</source>
          <target state="translated">Uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> para cálculo da soma.</target>       </trans-unit>
        <trans-unit id="1978" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Decimal})">
          <source>Computes the sum of a sequence of <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> values.</source>
          <target state="translated">Calcula a soma de uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1979" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Double})">
          <source>A sequence of <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> values to calculate the sum of.</source>
          <target state="translated">Uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> para cálculo da soma.</target>       </trans-unit>
        <trans-unit id="1980" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Double})">
          <source>Computes the sum of a sequence of <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> values.</source>
          <target state="translated">Calcula a soma de uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1981" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int32})">
          <source>A sequence of <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> values to calculate the sum of.</source>
          <target state="translated">Uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> para cálculo da soma.</target>       </trans-unit>
        <trans-unit id="1982" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int32})">
          <source>Computes the sum of a sequence of <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> values.</source>
          <target state="translated">Calcula a soma de uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1983" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int64})">
          <source>A sequence of <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> values to calculate the sum of.</source>
          <target state="translated">Uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> para cálculo da soma.</target>       </trans-unit>
        <trans-unit id="1984" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int64})">
          <source>Computes the sum of a sequence of <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> values.</source>
          <target state="translated">Calcula a soma de uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1985" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})">
          <source>A sequence of nullable <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> values to calculate the sum of.</source>
          <target state="translated">Uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> que permitem valores nulos para cálculo da soma.</target>       </trans-unit>
        <trans-unit id="1986" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})">
          <source>Computes the sum of a sequence of nullable <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> values.</source>
          <target state="translated">Computa a soma de uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> que permitem valores nulos.</target>       </trans-unit>
        <trans-unit id="1987" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})">
          <source>A sequence of nullable <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> values to calculate the sum of.</source>
          <target state="translated">Uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> que permitem valores nulos para cálculo da soma.</target>       </trans-unit>
        <trans-unit id="1988" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})">
          <source>Computes the sum of a sequence of nullable <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> values.</source>
          <target state="translated">Computa a soma de uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> que permitem valores nulos.</target>       </trans-unit>
        <trans-unit id="1989" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})">
          <source>A sequence of nullable <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> values to calculate the sum of.</source>
          <target state="translated">Uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> que permitem valores nulos para cálculo da soma.</target>       </trans-unit>
        <trans-unit id="1990" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})">
          <source>Computes the sum of a sequence of nullable <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> values.</source>
          <target state="translated">Computa a soma de uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> que permitem valores nulos.</target>       </trans-unit>
        <trans-unit id="1991" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})">
          <source>A sequence of nullable <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> values to calculate the sum of.</source>
          <target state="translated">Uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> que permitem valores nulos para cálculo da soma.</target>       </trans-unit>
        <trans-unit id="1992" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})">
          <source>Computes the sum of a sequence of nullable <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> values.</source>
          <target state="translated">Computa a soma de uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> que permitem valores nulos.</target>       </trans-unit>
        <trans-unit id="1993" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})">
          <source>A sequence of nullable <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> values to calculate the sum of.</source>
          <target state="translated">Uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> que permitem valores nulos para cálculo da soma.</target>       </trans-unit>
        <trans-unit id="1994" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})">
          <source>Computes the sum of a sequence of nullable <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> values.</source>
          <target state="translated">Computa a soma de uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> que permitem valores nulos.</target>       </trans-unit>
        <trans-unit id="1995" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Single})">
          <source>A sequence of <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> values to calculate the sum of.</source>
          <target state="translated">Uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> para cálculo da soma.</target>       </trans-unit>
        <trans-unit id="1996" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Single})">
          <source>Computes the sum of a sequence of <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> values.</source>
          <target state="translated">Calcula a soma de uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1997" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1998" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})">
          <source>A sequence of values that are used to calculate a sum.</source>
          <target state="translated">Uma sequência de valores usados para calcular uma soma.</target>       </trans-unit>
        <trans-unit id="1999" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Uma função de transformação a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="2000" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})">
          <source>Computes the sum of the sequence of <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> values that are obtained by invoking a transform function on each element of the input sequence.</source>
          <target state="translated">Calcula a soma da sequência de valores <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> obtidos pela invocação de uma função de transformação em cada elemento da sequência de entrada.</target>       </trans-unit>
        <trans-unit id="2001" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2002" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})">
          <source>A sequence of values that are used to calculate a sum.</source>
          <target state="translated">Uma sequência de valores usados para calcular uma soma.</target>       </trans-unit>
        <trans-unit id="2003" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Uma função de transformação a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="2004" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})">
          <source>Computes the sum of the sequence of <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> values that are obtained by invoking a transform function on each element of the input sequence.</source>
          <target state="translated">Calcula a soma da sequência de valores <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> obtidos pela invocação de uma função de transformação em cada elemento da sequência de entrada.</target>       </trans-unit>
        <trans-unit id="2005" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2006" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})">
          <source>A sequence of values that are used to calculate a sum.</source>
          <target state="translated">Uma sequência de valores usados para calcular uma soma.</target>       </trans-unit>
        <trans-unit id="2007" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Uma função de transformação a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="2008" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})">
          <source>Computes the sum of the sequence of <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> values that are obtained by invoking a transform function on each element of the input sequence.</source>
          <target state="translated">Calcula a soma da sequência de valores <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> obtidos pela invocação de uma função de transformação em cada elemento da sequência de entrada.</target>       </trans-unit>
        <trans-unit id="2009" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2010" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})">
          <source>A sequence of values that are used to calculate a sum.</source>
          <target state="translated">Uma sequência de valores usados para calcular uma soma.</target>       </trans-unit>
        <trans-unit id="2011" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Uma função de transformação a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="2012" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})">
          <source>Computes the sum of the sequence of <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> values that are obtained by invoking a transform function on each element of the input sequence.</source>
          <target state="translated">Calcula a soma da sequência de valores <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> obtidos pela invocação de uma função de transformação em cada elemento da sequência de entrada.</target>       </trans-unit>
        <trans-unit id="2013" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2014" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})">
          <source>A sequence of values that are used to calculate a sum.</source>
          <target state="translated">Uma sequência de valores usados para calcular uma soma.</target>       </trans-unit>
        <trans-unit id="2015" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Uma função de transformação a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="2016" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})">
          <source>Computes the sum of the sequence of nullable <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> values that are obtained by invoking a transform function on each element of the input sequence.</source>
          <target state="translated">Calcula a soma da sequência de valores <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> anuláveis obtidos pela invocação de uma função de transformação em cada elemento da sequência de entrada.</target>       </trans-unit>
        <trans-unit id="2017" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2018" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})">
          <source>A sequence of values that are used to calculate a sum.</source>
          <target state="translated">Uma sequência de valores usados para calcular uma soma.</target>       </trans-unit>
        <trans-unit id="2019" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Uma função de transformação a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="2020" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})">
          <source>Computes the sum of the sequence of nullable <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> values that are obtained by invoking a transform function on each element of the input sequence.</source>
          <target state="translated">Calcula a soma da sequência de valores <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> anuláveis obtidos pela invocação de uma função de transformação em cada elemento da sequência de entrada.</target>       </trans-unit>
        <trans-unit id="2021" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2022" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})">
          <source>A sequence of values that are used to calculate a sum.</source>
          <target state="translated">Uma sequência de valores usados para calcular uma soma.</target>       </trans-unit>
        <trans-unit id="2023" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Uma função de transformação a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="2024" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})">
          <source>Computes the sum of the sequence of nullable <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> values that are obtained by invoking a transform function on each element of the input sequence.</source>
          <target state="translated">Calcula a soma da sequência de valores <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> anuláveis obtidos pela invocação de uma função de transformação em cada elemento da sequência de entrada.</target>       </trans-unit>
        <trans-unit id="2025" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2026" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})">
          <source>A sequence of values that are used to calculate a sum.</source>
          <target state="translated">Uma sequência de valores usados para calcular uma soma.</target>       </trans-unit>
        <trans-unit id="2027" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Uma função de transformação a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="2028" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})">
          <source>Computes the sum of the sequence of nullable <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> values that are obtained by invoking a transform function on each element of the input sequence.</source>
          <target state="translated">Calcula a soma da sequência de valores <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> anuláveis obtidos pela invocação de uma função de transformação em cada elemento da sequência de entrada.</target>       </trans-unit>
        <trans-unit id="2029" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2030" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})">
          <source>A sequence of values that are used to calculate a sum.</source>
          <target state="translated">Uma sequência de valores usados para calcular uma soma.</target>       </trans-unit>
        <trans-unit id="2031" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Uma função de transformação a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="2032" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})">
          <source>Computes the sum of the sequence of nullable <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> values that are obtained by invoking a transform function on each element of the input sequence.</source>
          <target state="translated">Calcula a soma da sequência de valores <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> anuláveis obtidos pela invocação de uma função de transformação em cada elemento da sequência de entrada.</target>       </trans-unit>
        <trans-unit id="2033" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2034" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})">
          <source>A sequence of values that are used to calculate a sum.</source>
          <target state="translated">Uma sequência de valores usados para calcular uma soma.</target>       </trans-unit>
        <trans-unit id="2035" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Uma função de transformação a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="2036" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})">
          <source>Computes the sum of the sequence of <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> values that are obtained by invoking a transform function on each element of the input sequence.</source>
          <target state="translated">Calcula a soma da sequência de valores <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> obtidos pela invocação de uma função de transformação em cada elemento da sequência de entrada.</target>       </trans-unit>
        <trans-unit id="2037" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2038" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
          <source>The sequence to return elements from.</source>
          <target state="translated">A sequência da qual os elementos serão retornados.</target>       </trans-unit>
        <trans-unit id="2039" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
          <source>The number of elements to return.</source>
          <target state="translated">O número de elementos a serem retornados.</target>       </trans-unit>
        <trans-unit id="2040" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
          <source>Returns a specified number of contiguous elements from the start of a sequence.</source>
          <target state="translated">Retorna um número especificado de elementos contíguos do início de uma sequência.</target>       </trans-unit>
        <trans-unit id="2041" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2042" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
          <source>A sequence to return elements from.</source>
          <target state="translated">Uma sequência a qual retornar os elementos.</target>       </trans-unit>
        <trans-unit id="2043" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
          <source>A function to test each element for a condition.</source>
          <target state="translated">Uma função para testar cada elemento em relação a uma condição.</target>       </trans-unit>
        <trans-unit id="2044" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
          <source>Returns elements from a sequence as long as a specified condition is true.</source>
          <target state="translated">Retorna os elementos de uma sequência contanto que uma condição especificada seja verdadeira.</target>       </trans-unit>
        <trans-unit id="2045" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2046" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})">
          <source>The sequence to return elements from.</source>
          <target state="translated">A sequência da qual os elementos serão retornados.</target>       </trans-unit>
        <trans-unit id="2047" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})">
          <source>A function to test each source element for a condition; the second parameter of the function represents the index of the source element.</source>
          <target state="translated">Uma função para testar cada elemento de origem em relação a uma condição; o segundo parâmetro da função representa o índice do elemento de origem.</target>       </trans-unit>
        <trans-unit id="2048" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})">
          <source>Returns elements from a sequence as long as a specified condition is true.</source>
          <target state="translated">Retorna os elementos de uma sequência contanto que uma condição especificada seja verdadeira.</target>       </trans-unit>
        <trans-unit id="2049" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})">
          <source>The element's index is used in the logic of the predicate function.</source>
          <target state="translated">O índice do elemento é usado na lógica da função de predicado.</target>       </trans-unit>
        <trans-unit id="2050" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.ThenBy``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2051" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.ThenBy``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo de chave retornada pelo <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2052" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ThenBy``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Linq.IOrderedEnumerable`1" /&gt;</ph> that contains elements to sort.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Linq.IOrderedEnumerable`1" /&gt;</ph> que contém elementos a ser classificados.</target>       </trans-unit>
        <trans-unit id="2053" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ThenBy``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1})">
          <source>A function to extract a key from each element.</source>
          <target state="translated">Uma função para extrair uma chave de cada elemento.</target>       </trans-unit>
        <trans-unit id="2054" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ThenBy``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1})">
          <source>Performs a subsequent ordering of the elements in a sequence in ascending order according to a key.</source>
          <target state="translated">Executa uma ordenação posterior dos elementos em uma sequência em ordem crescente de acordo com uma chave.</target>       </trans-unit>
        <trans-unit id="2055" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.ThenBy``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2056" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.ThenBy``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo de chave retornada pelo <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2057" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ThenBy``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Linq.IOrderedEnumerable`1" /&gt;</ph> that contains elements to sort.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Linq.IOrderedEnumerable`1" /&gt;</ph> que contém elementos a ser classificados.</target>       </trans-unit>
        <trans-unit id="2058" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ThenBy``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>A function to extract a key from each element.</source>
          <target state="translated">Uma função para extrair uma chave de cada elemento.</target>       </trans-unit>
        <trans-unit id="2059" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ThenBy``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph> to compare keys.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph> para comparar chaves.</target>       </trans-unit>
        <trans-unit id="2060" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ThenBy``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>Performs a subsequent ordering of the elements in a sequence in ascending order by using a specified comparer.</source>
          <target state="translated">Executa uma ordenação posterior dos elementos em uma sequência em ordem crescente usando um comparador especificado.</target>       </trans-unit>
        <trans-unit id="2061" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.ThenByDescending``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2062" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.ThenByDescending``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo de chave retornada pelo <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2063" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ThenByDescending``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Linq.IOrderedEnumerable`1" /&gt;</ph> that contains elements to sort.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Linq.IOrderedEnumerable`1" /&gt;</ph> que contém elementos a ser classificados.</target>       </trans-unit>
        <trans-unit id="2064" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ThenByDescending``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1})">
          <source>A function to extract a key from each element.</source>
          <target state="translated">Uma função para extrair uma chave de cada elemento.</target>       </trans-unit>
        <trans-unit id="2065" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ThenByDescending``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1})">
          <source>Performs a subsequent ordering of the elements in a sequence in descending order, according to a key.</source>
          <target state="translated">Executa uma ordenação posterior dos elementos em uma sequência em ordem decrescente, de acordo com uma chave.</target>       </trans-unit>
        <trans-unit id="2066" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.ThenByDescending``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2067" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.ThenByDescending``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo de chave retornada pelo <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2068" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ThenByDescending``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Linq.IOrderedEnumerable`1" /&gt;</ph> that contains elements to sort.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Linq.IOrderedEnumerable`1" /&gt;</ph> que contém elementos a ser classificados.</target>       </trans-unit>
        <trans-unit id="2069" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ThenByDescending``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>A function to extract a key from each element.</source>
          <target state="translated">Uma função para extrair uma chave de cada elemento.</target>       </trans-unit>
        <trans-unit id="2070" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ThenByDescending``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph> to compare keys.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph> para comparar chaves.</target>       </trans-unit>
        <trans-unit id="2071" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ThenByDescending``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>Performs a subsequent ordering of the elements in a sequence in descending order by using a specified comparer.</source>
          <target state="translated">Executa uma ordenação posterior dos elementos em uma sequência em ordem decrescente usando um comparador especificado.</target>       </trans-unit>
        <trans-unit id="2072" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2073" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> to create an array from.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> para criar uma matriz.</target>       </trans-unit>
        <trans-unit id="2074" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})">
          <source>Creates an array from a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>.</source>
          <target state="translated">Cria uma matriz de um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2075" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2076" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo de chave retornada pelo <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2077" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> to create a <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> from.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> por meio do qual um <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> será criado.</target>       </trans-unit>
        <trans-unit id="2078" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
          <source>A function to extract a key from each element.</source>
          <target state="translated">Uma função para extrair uma chave de cada elemento.</target>       </trans-unit>
        <trans-unit id="2079" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> from an <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> according to a specified key selector function.</source>
          <target state="translated">Cria um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> de um <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>, de acordo com uma função de seletor de chave especificada.</target>       </trans-unit>
        <trans-unit id="2080" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2081" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the keys returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo das chaves retornado por <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2082" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> to create a <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> from.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> por meio do qual um <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> será criado.</target>       </trans-unit>
        <trans-unit id="2083" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A function to extract a key from each element.</source>
          <target state="translated">Uma função para extrair uma chave de cada elemento.</target>       </trans-unit>
        <trans-unit id="2084" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to compare keys.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> para comparar chaves.</target>       </trans-unit>
        <trans-unit id="2085" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> from an <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> according to a specified key selector function and key comparer.</source>
          <target state="translated">Cria um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> de um <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>, de acordo com uma função de seletor de chave especificada e um comparador de chaves.</target>       </trans-unit>
        <trans-unit id="2086" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2087" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo de chave retornada pelo <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2088" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>The type of the value returned by <bpt id="p1">&lt;c&gt;</bpt>elementSelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo do valor retornado por <bpt id="p1">&lt;c&gt;</bpt>elementSelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2089" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> to create a <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> from.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> por meio do qual um <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> será criado.</target>       </trans-unit>
        <trans-unit id="2090" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>A function to extract a key from each element.</source>
          <target state="translated">Uma função para extrair uma chave de cada elemento.</target>       </trans-unit>
        <trans-unit id="2091" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>A transform function to produce a result element value from each element.</source>
          <target state="translated">Uma função de transformação para produzir um valor de elemento de resultado de cada elemento.</target>       </trans-unit>
        <trans-unit id="2092" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> from an <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> according to specified key selector and element selector functions.</source>
          <target state="translated">Cria um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> de um <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>, de acordo com as funções especificadas de seletor de chave e seletor de elemento.</target>       </trans-unit>
        <trans-unit id="2093" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2094" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo de chave retornada pelo <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2095" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the value returned by <bpt id="p1">&lt;c&gt;</bpt>elementSelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo do valor retornado por <bpt id="p1">&lt;c&gt;</bpt>elementSelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2096" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> to create a <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> from.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> por meio do qual um <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> será criado.</target>       </trans-unit>
        <trans-unit id="2097" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A function to extract a key from each element.</source>
          <target state="translated">Uma função para extrair uma chave de cada elemento.</target>       </trans-unit>
        <trans-unit id="2098" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A transform function to produce a result element value from each element.</source>
          <target state="translated">Uma função de transformação para produzir um valor de elemento de resultado de cada elemento.</target>       </trans-unit>
        <trans-unit id="2099" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to compare keys.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> para comparar chaves.</target>       </trans-unit>
        <trans-unit id="2100" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> from an <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> according to a specified key selector function, a comparer, and an element selector function.</source>
          <target state="translated">Cria um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> de um <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> de acordo com uma função de seletor de chave, um comparador e uma função de seletor de elemento especificados.</target>       </trans-unit>
        <trans-unit id="2101" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2102" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> to create a <ph id="ph2">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> from.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> por meio do qual um <ph id="ph2">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> será criado.</target>       </trans-unit>
        <trans-unit id="2103" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0})">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> from an <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>.</source>
          <target state="translated">Cria um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> de um <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2104" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2105" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> to create a <ph id="ph2">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> from.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> por meio do qual um <ph id="ph2">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> será criado.</target>       </trans-unit>
        <trans-unit id="2106" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to compare keys.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> para comparar chaves.</target>       </trans-unit>
        <trans-unit id="2107" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> from an <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> using the <ph id="ph3">&lt;paramref name="comparer" /&gt;</ph> to compare keys</source>
          <target state="translated">Cria um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> de um <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> usando o <ph id="ph3">&lt;paramref name="comparer" /&gt;</ph> para comparar chaves</target>       </trans-unit>
        <trans-unit id="2108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2109" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> to create a <ph id="ph2">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> from.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> por meio do qual um <ph id="ph2">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> será criado.</target>       </trans-unit>
        <trans-unit id="2110" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> from an <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>.</source>
          <target state="translated">Cria um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> de um <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo de chave retornada pelo <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2113" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> to create a <ph id="ph2">&lt;see cref="T:System.Linq.Lookup`2" /&gt;</ph> from.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> por meio do qual um <ph id="ph2">&lt;see cref="T:System.Linq.Lookup`2" /&gt;</ph> será criado.</target>       </trans-unit>
        <trans-unit id="2114" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
          <source>A function to extract a key from each element.</source>
          <target state="translated">Uma função para extrair uma chave de cada elemento.</target>       </trans-unit>
        <trans-unit id="2115" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Linq.Lookup`2" /&gt;</ph> from an <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> according to a specified key selector function.</source>
          <target state="translated">Cria um <ph id="ph1">&lt;see cref="T:System.Linq.Lookup`2" /&gt;</ph> de um <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>, de acordo com uma função de seletor de chave especificada.</target>       </trans-unit>
        <trans-unit id="2116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo de chave retornada pelo <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2118" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> to create a <ph id="ph2">&lt;see cref="T:System.Linq.Lookup`2" /&gt;</ph> from.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> por meio do qual um <ph id="ph2">&lt;see cref="T:System.Linq.Lookup`2" /&gt;</ph> será criado.</target>       </trans-unit>
        <trans-unit id="2119" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A function to extract a key from each element.</source>
          <target state="translated">Uma função para extrair uma chave de cada elemento.</target>       </trans-unit>
        <trans-unit id="2120" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to compare keys.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> para comparar chaves.</target>       </trans-unit>
        <trans-unit id="2121" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Linq.Lookup`2" /&gt;</ph> from an <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> according to a specified key selector function and key comparer.</source>
          <target state="translated">Cria um <ph id="ph1">&lt;see cref="T:System.Linq.Lookup`2" /&gt;</ph> de um <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>, de acordo com uma função de seletor de chave especificada e um comparador de chaves.</target>       </trans-unit>
        <trans-unit id="2122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo de chave retornada pelo <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>The type of the value returned by <bpt id="p1">&lt;c&gt;</bpt>elementSelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo do valor retornado por <bpt id="p1">&lt;c&gt;</bpt>elementSelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2125" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> to create a <ph id="ph2">&lt;see cref="T:System.Linq.Lookup`2" /&gt;</ph> from.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> por meio do qual um <ph id="ph2">&lt;see cref="T:System.Linq.Lookup`2" /&gt;</ph> será criado.</target>       </trans-unit>
        <trans-unit id="2126" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>A function to extract a key from each element.</source>
          <target state="translated">Uma função para extrair uma chave de cada elemento.</target>       </trans-unit>
        <trans-unit id="2127" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>A transform function to produce a result element value from each element.</source>
          <target state="translated">Uma função de transformação para produzir um valor de elemento de resultado de cada elemento.</target>       </trans-unit>
        <trans-unit id="2128" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Linq.Lookup`2" /&gt;</ph> from an <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> according to specified key selector and element selector functions.</source>
          <target state="translated">Cria um <ph id="ph1">&lt;see cref="T:System.Linq.Lookup`2" /&gt;</ph> de um <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>, de acordo com as funções especificadas de seletor de chave e seletor de elemento.</target>       </trans-unit>
        <trans-unit id="2129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo de chave retornada pelo <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the value returned by <bpt id="p1">&lt;c&gt;</bpt>elementSelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo do valor retornado por <bpt id="p1">&lt;c&gt;</bpt>elementSelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2132" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> to create a <ph id="ph2">&lt;see cref="T:System.Linq.Lookup`2" /&gt;</ph> from.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> por meio do qual um <ph id="ph2">&lt;see cref="T:System.Linq.Lookup`2" /&gt;</ph> será criado.</target>       </trans-unit>
        <trans-unit id="2133" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A function to extract a key from each element.</source>
          <target state="translated">Uma função para extrair uma chave de cada elemento.</target>       </trans-unit>
        <trans-unit id="2134" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A transform function to produce a result element value from each element.</source>
          <target state="translated">Uma função de transformação para produzir um valor de elemento de resultado de cada elemento.</target>       </trans-unit>
        <trans-unit id="2135" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to compare keys.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> para comparar chaves.</target>       </trans-unit>
        <trans-unit id="2136" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Linq.Lookup`2" /&gt;</ph> from an <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> according to a specified key selector function, a comparer and an element selector function.</source>
          <target state="translated">Cria um <ph id="ph1">&lt;see cref="T:System.Linq.Lookup`2" /&gt;</ph> de um <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> de acordo com uma função de seletor de chave, um comparador e uma função de seletor de elemento especificados.</target>       </trans-unit>
        <trans-unit id="2137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>The type of the elements of the input sequences.</source>
          <target state="translated">O tipo dos elementos das sequências de entrada.</target>       </trans-unit>
        <trans-unit id="2138" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> whose distinct elements form the first set for the union.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> cujos elementos distintos formam o primeiro conjunto da união.</target>       </trans-unit>
        <trans-unit id="2139" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> whose distinct elements form the second set for the union.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> cujos elementos distintos formam o segundo conjunto da união.</target>       </trans-unit>
        <trans-unit id="2140" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>Produces the set union of two sequences by using the default equality comparer.</source>
          <target state="translated">Produz a união de conjunto de duas sequências usando o comparador de igualdade padrão.</target>       </trans-unit>
        <trans-unit id="2141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The type of the elements of the input sequences.</source>
          <target state="translated">O tipo dos elementos das sequências de entrada.</target>       </trans-unit>
        <trans-unit id="2142" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> whose distinct elements form the first set for the union.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> cujos elementos distintos formam o primeiro conjunto da união.</target>       </trans-unit>
        <trans-unit id="2143" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> whose distinct elements form the second set for the union.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> cujos elementos distintos formam o segundo conjunto da união.</target>       </trans-unit>
        <trans-unit id="2144" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to compare values.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> para comparar valores.</target>       </trans-unit>
        <trans-unit id="2145" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>Produces the set union of two sequences by using a specified <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>.</source>
          <target state="translated">Produz a união de conjunto de duas sequências usando o <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="2146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2147" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> to filter.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> a ser filtrado.</target>       </trans-unit>
        <trans-unit id="2148" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
          <source>A function to test each element for a condition.</source>
          <target state="translated">Uma função para testar cada elemento em relação a uma condição.</target>       </trans-unit>
        <trans-unit id="2149" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
          <source>Filters a sequence of values based on a predicate.</source>
          <target state="translated">Filtra uma sequência de valores com base em um predicado.</target>       </trans-unit>
        <trans-unit id="2150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2151" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> to filter.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> a ser filtrado.</target>       </trans-unit>
        <trans-unit id="2152" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})">
          <source>A function to test each source element for a condition; the second parameter of the function represents the index of the source element.</source>
          <target state="translated">Uma função para testar cada elemento de origem em relação a uma condição; o segundo parâmetro da função representa o índice do elemento de origem.</target>       </trans-unit>
        <trans-unit id="2153" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})">
          <source>Filters a sequence of values based on a predicate.</source>
          <target state="translated">Filtra uma sequência de valores com base em um predicado.</target>       </trans-unit>
        <trans-unit id="2154" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})">
          <source>Each element's index is used in the logic of the predicate function.</source>
          <target state="translated">O índice de cada elemento é usado na lógica da função de predicado.</target>       </trans-unit>
        <trans-unit id="2155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})">
          <source>The type of the elements of the first input sequence.</source>
          <target state="translated">O tipo de elementos na primeira sequência de entrada.</target>       </trans-unit>
        <trans-unit id="2156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})">
          <source>The type of the elements of the second input sequence.</source>
          <target state="translated">O tipo de elementos na segunda sequência de entrada.</target>       </trans-unit>
        <trans-unit id="2157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})">
          <source>The type of the elements of the result sequence.</source>
          <target state="translated">O tipo de elementos na sequência de resultado.</target>       </trans-unit>
        <trans-unit id="2158" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})">
          <source>The first sequence to merge.</source>
          <target state="translated">A primeira sequência a ser mesclada.</target>       </trans-unit>
        <trans-unit id="2159" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})">
          <source>The second sequence to merge.</source>
          <target state="translated">A segunda sequência a ser mesclada.</target>       </trans-unit>
        <trans-unit id="2160" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})">
          <source>A function that specifies how to merge the elements from the two sequences.</source>
          <target state="translated">Uma função que especifica como mesclar os elementos das duas sequências.</target>       </trans-unit>
        <trans-unit id="2161" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})">
          <source>Applies a specified function to the corresponding elements of two sequences, producing a sequence of the results.</source>
          <target state="translated">Aplica uma função especificada para os elementos correspondentes de duas sequências, produzindo uma sequência dos resultados.</target>       </trans-unit>
        <trans-unit id="2162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.Aggregate``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,``0,``0})">
          <source>The type of element contained by the collection.</source>
          <target state="translated">O tipo de elemento contido na coleção.</target>       </trans-unit>
        <trans-unit id="2163" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Aggregate``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,``0,``0})">
          <source>The collection to apply the function to.</source>
          <target state="translated">A coleção à qual aplicar a função.</target>       </trans-unit>
        <trans-unit id="2164" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Aggregate``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,``0,``0})">
          <source>A function to be invoked on each element, in a cumulative way.</source>
          <target state="translated">Uma função a ser invocada em cada elemento, de modo cumulativo.</target>       </trans-unit>
        <trans-unit id="2165" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Aggregate``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,``0,``0})">
          <source>Applies a function to a sequence of elements in a cumulative way.</source>
          <target state="translated">Aplica uma função a uma sequência de elementos de uma maneira cumulativa.</target>       </trans-unit>
        <trans-unit id="2166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.Aggregate``2(System.Collections.Immutable.ImmutableArray{``1},``0,System.Func{``0,``1,``0})">
          <source>The type of the accumulated value.</source>
          <target state="translated">O tipo do valor acumulado.</target>       </trans-unit>
        <trans-unit id="2167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.Aggregate``2(System.Collections.Immutable.ImmutableArray{``1},``0,System.Func{``0,``1,``0})">
          <source>The type of element contained by the collection.</source>
          <target state="translated">O tipo de elemento contido na coleção.</target>       </trans-unit>
        <trans-unit id="2168" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Aggregate``2(System.Collections.Immutable.ImmutableArray{``1},``0,System.Func{``0,``1,``0})">
          <source>The collection to apply the function to.</source>
          <target state="translated">A coleção à qual aplicar a função.</target>       </trans-unit>
        <trans-unit id="2169" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Aggregate``2(System.Collections.Immutable.ImmutableArray{``1},``0,System.Func{``0,``1,``0})">
          <source>The initial accumulator value.</source>
          <target state="translated">O valor inicial do acumulador.</target>       </trans-unit>
        <trans-unit id="2170" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Aggregate``2(System.Collections.Immutable.ImmutableArray{``1},``0,System.Func{``0,``1,``0})">
          <source>A function to be invoked on each element, in a cumulative way.</source>
          <target state="translated">Uma função a ser invocada em cada elemento, de modo cumulativo.</target>       </trans-unit>
        <trans-unit id="2171" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Aggregate``2(System.Collections.Immutable.ImmutableArray{``1},``0,System.Func{``0,``1,``0})">
          <source>Applies a function to a sequence of elements in a cumulative way.</source>
          <target state="translated">Aplica uma função a uma sequência de elementos de uma maneira cumulativa.</target>       </trans-unit>
        <trans-unit id="2172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.Aggregate``3(System.Collections.Immutable.ImmutableArray{``2},``0,System.Func{``0,``2,``0},System.Func{``0,``1})">
          <source>The type of the accumulated value.</source>
          <target state="translated">O tipo do valor acumulado.</target>       </trans-unit>
        <trans-unit id="2173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.Aggregate``3(System.Collections.Immutable.ImmutableArray{``2},``0,System.Func{``0,``2,``0},System.Func{``0,``1})">
          <source>The type of result returned by the result selector.</source>
          <target state="translated">O tipo de resultado retornado pelo seletor de resultado.</target>       </trans-unit>
        <trans-unit id="2174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.Aggregate``3(System.Collections.Immutable.ImmutableArray{``2},``0,System.Func{``0,``2,``0},System.Func{``0,``1})">
          <source>The type of element contained by the collection.</source>
          <target state="translated">O tipo de elemento contido na coleção.</target>       </trans-unit>
        <trans-unit id="2175" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Aggregate``3(System.Collections.Immutable.ImmutableArray{``2},``0,System.Func{``0,``2,``0},System.Func{``0,``1})">
          <source>The collection to apply the function to.</source>
          <target state="translated">A coleção à qual aplicar a função.</target>       </trans-unit>
        <trans-unit id="2176" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Aggregate``3(System.Collections.Immutable.ImmutableArray{``2},``0,System.Func{``0,``2,``0},System.Func{``0,``1})">
          <source>The initial accumulator value.</source>
          <target state="translated">O valor inicial do acumulador.</target>       </trans-unit>
        <trans-unit id="2177" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Aggregate``3(System.Collections.Immutable.ImmutableArray{``2},``0,System.Func{``0,``2,``0},System.Func{``0,``1})">
          <source>A function to be invoked on each element, in a cumulative way.</source>
          <target state="translated">Uma função a ser invocada em cada elemento, de modo cumulativo.</target>       </trans-unit>
        <trans-unit id="2178" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Aggregate``3(System.Collections.Immutable.ImmutableArray{``2},``0,System.Func{``0,``2,``0},System.Func{``0,``1})">
          <source>Applies a function to a sequence of elements in a cumulative way.</source>
          <target state="translated">Aplica uma função a uma sequência de elementos de uma maneira cumulativa.</target>       </trans-unit>
        <trans-unit id="2179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.All``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>The type of element contained by the collection.</source>
          <target state="translated">O tipo de elemento contido na coleção.</target>       </trans-unit>
        <trans-unit id="2180" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.All``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>The array to check for matches.</source>
          <target state="translated">A matriz na qual verificar se há correspondências.</target>       </trans-unit>
        <trans-unit id="2181" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.All``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>The predicate.</source>
          <target state="translated">O predicado.</target>       </trans-unit>
        <trans-unit id="2182" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.All``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>Gets a value indicating whether all elements in this array match a given condition.</source>
          <target state="translated">Obtém um valor que indica se todos os elementos nesta matriz correspondem a uma determinada condição.</target>       </trans-unit>
        <trans-unit id="2183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.Any``1(System.Collections.Immutable.ImmutableArray{``0})">
          <source>The type of element contained by the collection.</source>
          <target state="translated">O tipo de elemento contido na coleção.</target>       </trans-unit>
        <trans-unit id="2184" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Any``1(System.Collections.Immutable.ImmutableArray{``0})">
          <source>The array to check for elements.</source>
          <target state="translated">A matriz na qual verificar se há elementos.</target>       </trans-unit>
        <trans-unit id="2185" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Any``1(System.Collections.Immutable.ImmutableArray{``0})">
          <source>Gets a value indicating whether the array contains any elements.</source>
          <target state="translated">Obtém um valor que indica se a matriz contém elementos.</target>       </trans-unit>
        <trans-unit id="2186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.Any``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>The type of element contained by the collection.</source>
          <target state="translated">O tipo de elemento contido na coleção.</target>       </trans-unit>
        <trans-unit id="2187" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Any``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>The array to check for elements.</source>
          <target state="translated">A matriz na qual verificar se há elementos.</target>       </trans-unit>
        <trans-unit id="2188" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Any``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>The delegate that defines the condition to match to an element.</source>
          <target state="translated">O delegado que define a condição para corresponder a um elemento.</target>       </trans-unit>
        <trans-unit id="2189" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Any``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>Gets a value indicating whether the array contains any elements that match a specified condition.</source>
          <target state="translated">Obtém um valor que indica se a matriz contém elementos correspondentes a uma condição especificada.</target>       </trans-unit>
        <trans-unit id="2190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.Any``1(System.Collections.Immutable.ImmutableArray`1.Builder{``0})">
          <source>The type of elements in the array.</source>
          <target state="translated">O tipo dos elementos na matriz.</target>       </trans-unit>
        <trans-unit id="2191" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Any``1(System.Collections.Immutable.ImmutableArray`1.Builder{``0})">
          <source>The builder to check for matches.</source>
          <target state="translated">O construtor no qual verificar se há correspondências.</target>       </trans-unit>
        <trans-unit id="2192" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Any``1(System.Collections.Immutable.ImmutableArray`1.Builder{``0})">
          <source>Returns a value indicating whether this collection contains any elements.</source>
          <target state="translated">Retorna um valor que indica se esta coleção contém quaisquer elementos.</target>       </trans-unit>
        <trans-unit id="2193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.ElementAt``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32)">
          <source>The type of element contained by the collection.</source>
          <target state="translated">O tipo de elemento contido na coleção.</target>       </trans-unit>
        <trans-unit id="2194" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.ElementAt``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32)">
          <source>The array to find an element in.</source>
          <target state="translated">A matriz na qual localizar um elemento.</target>       </trans-unit>
        <trans-unit id="2195" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.ElementAt``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32)">
          <source>The index for the element to retrieve.</source>
          <target state="translated">O índice do elemento a se recuperar.</target>       </trans-unit>
        <trans-unit id="2196" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.ElementAt``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32)">
          <source>Returns the element at a specified index in the array.</source>
          <target state="translated">Retorna o elemento de um índice especificado na matriz.</target>       </trans-unit>
        <trans-unit id="2197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.ElementAtOrDefault``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32)">
          <source>The type of element contained by the collection.</source>
          <target state="translated">O tipo de elemento contido na coleção.</target>       </trans-unit>
        <trans-unit id="2198" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.ElementAtOrDefault``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32)">
          <source>The array to find an element in.</source>
          <target state="translated">A matriz na qual localizar um elemento.</target>       </trans-unit>
        <trans-unit id="2199" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.ElementAtOrDefault``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32)">
          <source>The index for the element to retrieve.</source>
          <target state="translated">O índice do elemento a se recuperar.</target>       </trans-unit>
        <trans-unit id="2200" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.ElementAtOrDefault``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32)">
          <source>Returns the element at a specified index in a sequence or a default value if the index is out of range.</source>
          <target state="translated">Retorna o elemento em um índice especificado em uma sequência ou um valor padrão se o índice estiver fora do intervalo.</target>       </trans-unit>
        <trans-unit id="2201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.First``1(System.Collections.Immutable.ImmutableArray{``0})">
          <source>The type of element contained by the collection.</source>
          <target state="translated">O tipo de elemento contido na coleção.</target>       </trans-unit>
        <trans-unit id="2202" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.First``1(System.Collections.Immutable.ImmutableArray{``0})">
          <source>The array to get an item from.</source>
          <target state="translated">A matriz da qual obter um item.</target>       </trans-unit>
        <trans-unit id="2203" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.First``1(System.Collections.Immutable.ImmutableArray{``0})">
          <source>Returns the first element in an array.</source>
          <target state="translated">Retorna o primeiro elemento em uma matriz.</target>       </trans-unit>
        <trans-unit id="2204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.First``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>The type of element contained by the collection.</source>
          <target state="translated">O tipo de elemento contido na coleção.</target>       </trans-unit>
        <trans-unit id="2205" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.First``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>The array to get an item from.</source>
          <target state="translated">A matriz da qual obter um item.</target>       </trans-unit>
        <trans-unit id="2206" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.First``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>The delegate that defines the conditions of the element to search for.</source>
          <target state="translated">O delegado que define as condições do elemento a ser pesquisado.</target>       </trans-unit>
        <trans-unit id="2207" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.First``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>Returns the first element in a sequence that satisfies a specified condition.</source>
          <target state="translated">Retorna o primeiro elemento em uma sequência que satisfaz uma condição especificada.</target>       </trans-unit>
        <trans-unit id="2208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.First``1(System.Collections.Immutable.ImmutableArray`1.Builder{``0})">
          <source>The type of items in the array.</source>
          <target state="translated">O tipo de itens na matriz.</target>       </trans-unit>
        <trans-unit id="2209" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.First``1(System.Collections.Immutable.ImmutableArray`1.Builder{``0})">
          <source>The builder to retrieve an item from.</source>
          <target state="translated">O construtor do qual recuperar um item.</target>       </trans-unit>
        <trans-unit id="2210" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.First``1(System.Collections.Immutable.ImmutableArray`1.Builder{``0})">
          <source>Returns the first element in the collection.</source>
          <target state="translated">Retorna o primeiro elemento na coleção.</target>       </trans-unit>
        <trans-unit id="2211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.FirstOrDefault``1(System.Collections.Immutable.ImmutableArray{``0})">
          <source>The type of element contained by the collection.</source>
          <target state="translated">O tipo de elemento contido na coleção.</target>       </trans-unit>
        <trans-unit id="2212" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.FirstOrDefault``1(System.Collections.Immutable.ImmutableArray{``0})">
          <source>The array to retrieve items from.</source>
          <target state="translated">A matriz da qual recuperar itens.</target>       </trans-unit>
        <trans-unit id="2213" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.FirstOrDefault``1(System.Collections.Immutable.ImmutableArray{``0})">
          <source>Returns the first element of a sequence, or a default value if the sequence contains no elements.</source>
          <target state="translated">Retorna o primeiro elemento de uma sequência ou um valor padrão se a sequência não contém elementos.</target>       </trans-unit>
        <trans-unit id="2214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.FirstOrDefault``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>The type of element contained by the collection.</source>
          <target state="translated">O tipo de elemento contido na coleção.</target>       </trans-unit>
        <trans-unit id="2215" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.FirstOrDefault``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>The array to retrieve elments from.</source>
          <target state="translated">A matriz da qual recuperar elementos.</target>       </trans-unit>
        <trans-unit id="2216" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.FirstOrDefault``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>The delegate that defines the conditions of the element to search for.</source>
          <target state="translated">O delegado que define as condições do elemento a ser pesquisado.</target>       </trans-unit>
        <trans-unit id="2217" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.FirstOrDefault``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>Returns the first element of the sequence that satisfies a condition or a default value if no such element is found.</source>
          <target state="translated">Retorna o primeiro elemento da sequência que satisfaz uma condição ou um valor padrão, caso esse elemento não seja encontrado.</target>       </trans-unit>
        <trans-unit id="2218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.FirstOrDefault``1(System.Collections.Immutable.ImmutableArray`1.Builder{``0})">
          <source>The type of item in the builder.</source>
          <target state="translated">O tipo de item no construtor de.</target>       </trans-unit>
        <trans-unit id="2219" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.FirstOrDefault``1(System.Collections.Immutable.ImmutableArray`1.Builder{``0})">
          <source>The builder to retrieve an element from.</source>
          <target state="translated">O construtor do qual recuperar um elemento.</target>       </trans-unit>
        <trans-unit id="2220" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.FirstOrDefault``1(System.Collections.Immutable.ImmutableArray`1.Builder{``0})">
          <source>Returns the first element in the collection, or the default value if the collection is empty.</source>
          <target state="translated">Retorna o primeiro elemento na coleção ou o valor padrão, se a coleção está vazia.</target>       </trans-unit>
        <trans-unit id="2221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.Last``1(System.Collections.Immutable.ImmutableArray{``0})">
          <source>The type of element contained by the array.</source>
          <target state="translated">O tipo de elemento contido na matriz.</target>       </trans-unit>
        <trans-unit id="2222" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Last``1(System.Collections.Immutable.ImmutableArray{``0})">
          <source>The array to retrieve items from.</source>
          <target state="translated">A matriz da qual recuperar itens.</target>       </trans-unit>
        <trans-unit id="2223" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Last``1(System.Collections.Immutable.ImmutableArray{``0})">
          <source>Returns the last element of the array.</source>
          <target state="translated">Retorna o último elemento da matriz.</target>       </trans-unit>
        <trans-unit id="2224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.Last``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>The type of element contained by the collection.</source>
          <target state="translated">O tipo de elemento contido na coleção.</target>       </trans-unit>
        <trans-unit id="2225" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Last``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>The array to retrieve elements from.</source>
          <target state="translated">A matriz da qual recuperar elementos.</target>       </trans-unit>
        <trans-unit id="2226" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Last``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>The delegate that defines the conditions of the element to retrieve.</source>
          <target state="translated">O delegado que define as condições do elemento a recuperar.</target>       </trans-unit>
        <trans-unit id="2227" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Last``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>Returns the last element of a sequence that satisfies a specified condition.</source>
          <target state="translated">Retorna o último elemento de uma sequência que satisfaz uma condição especificada.</target>       </trans-unit>
        <trans-unit id="2228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.Last``1(System.Collections.Immutable.ImmutableArray`1.Builder{``0})">
          <source>The type of item in the builder.</source>
          <target state="translated">O tipo de item no construtor de.</target>       </trans-unit>
        <trans-unit id="2229" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Last``1(System.Collections.Immutable.ImmutableArray`1.Builder{``0})">
          <source>The builder to retrieve elements from.</source>
          <target state="translated">O construtor do qual recuperar elementos.</target>       </trans-unit>
        <trans-unit id="2230" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Last``1(System.Collections.Immutable.ImmutableArray`1.Builder{``0})">
          <source>Returns the last element in the collection.</source>
          <target state="translated">Retorna o último elemento na coleção.</target>       </trans-unit>
        <trans-unit id="2231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.LastOrDefault``1(System.Collections.Immutable.ImmutableArray{``0})">
          <source>The type of element contained by the collection.</source>
          <target state="translated">O tipo de elemento contido na coleção.</target>       </trans-unit>
        <trans-unit id="2232" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.LastOrDefault``1(System.Collections.Immutable.ImmutableArray{``0})">
          <source>The array to retrieve items from.</source>
          <target state="translated">A matriz da qual recuperar itens.</target>       </trans-unit>
        <trans-unit id="2233" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.LastOrDefault``1(System.Collections.Immutable.ImmutableArray{``0})">
          <source>Returns the last element of a sequence, or a default value if the sequence contains no elements.</source>
          <target state="translated">Retorna o último elemento de uma sequência ou um valor padrão se a sequência não contém elementos.</target>       </trans-unit>
        <trans-unit id="2234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.LastOrDefault``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>The type of element contained by the collection.</source>
          <target state="translated">O tipo de elemento contido na coleção.</target>       </trans-unit>
        <trans-unit id="2235" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.LastOrDefault``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>The array to retrieve an element from.</source>
          <target state="translated">A matriz da qual recuperar um elemento.</target>       </trans-unit>
        <trans-unit id="2236" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.LastOrDefault``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>The delegate that defines the conditions of the element to search for.</source>
          <target state="translated">O delegado que define as condições do elemento a ser pesquisado.</target>       </trans-unit>
        <trans-unit id="2237" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.LastOrDefault``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>Returns the last element of a sequence that satisfies a condition or a default value if no such element is found.</source>
          <target state="translated">Retorna o último elemento de uma sequência que satisfaz uma condição ou um valor padrão, caso esse elemento não seja encontrado.</target>       </trans-unit>
        <trans-unit id="2238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.LastOrDefault``1(System.Collections.Immutable.ImmutableArray`1.Builder{``0})">
          <source>The type of item in the builder.</source>
          <target state="translated">O tipo de item no construtor de.</target>       </trans-unit>
        <trans-unit id="2239" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.LastOrDefault``1(System.Collections.Immutable.ImmutableArray`1.Builder{``0})">
          <source>The builder to retrieve an element from.</source>
          <target state="translated">O construtor do qual recuperar um elemento.</target>       </trans-unit>
        <trans-unit id="2240" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.LastOrDefault``1(System.Collections.Immutable.ImmutableArray`1.Builder{``0})">
          <source>Returns the last element in the collection, or the default value if the collection is empty.</source>
          <target state="translated">Retorna o último elemento na coleção, ou o valor padrão se a coleção está vazia.</target>       </trans-unit>
        <trans-unit id="2241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.Select``2(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,``1})">
          <source>The type of element contained by the collection.</source>
          <target state="translated">O tipo de elemento contido na coleção.</target>       </trans-unit>
        <trans-unit id="2242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.Select``2(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,``1})">
          <source>The type of the result element.</source>
          <target state="translated">O tipo do elemento do resultado.</target>       </trans-unit>
        <trans-unit id="2243" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Select``2(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,``1})">
          <source>The immutable array to select items from.</source>
          <target state="translated">A matriz imutável da qual selecionar itens.</target>       </trans-unit>
        <trans-unit id="2244" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Select``2(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,``1})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Uma função de transformação a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="2245" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Select``2(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,``1})">
          <source>Projects each element of a sequence into a new form.</source>
          <target state="translated">Projeta cada elemento de uma sequência em um novo formulário.</target>       </trans-unit>
        <trans-unit id="2246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.SelectMany``3(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>immutableArray<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>immutableArray<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.SelectMany``3(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>The type of the intermediate elements collected by <bpt id="p1">&lt;c&gt;</bpt>collectionSelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos intermediários coletados pelo <bpt id="p1">&lt;c&gt;</bpt>collectionSelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.SelectMany``3(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>The type of the elements of the resulting sequence.</source>
          <target state="translated">O tipo dos elementos da sequência resultante.</target>       </trans-unit>
        <trans-unit id="2249" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.SelectMany``3(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>The immutable array.</source>
          <target state="translated">A matriz imutável.</target>       </trans-unit>
        <trans-unit id="2250" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.SelectMany``3(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>A transform function to apply to each element of the input sequence.</source>
          <target state="translated">Uma função de transformação a ser aplicada a cada elemento da sequência de entrada.</target>       </trans-unit>
        <trans-unit id="2251" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.SelectMany``3(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>A transform function to apply to each element of the intermediate sequence.</source>
          <target state="translated">Uma função de transformação a ser aplicada a cada elemento da sequência intermediária.</target>       </trans-unit>
        <trans-unit id="2252" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.SelectMany``3(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>Projects each element of a sequence to an <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>,             flattens the resulting sequences into one sequence, and invokes a result             selector function on each element therein.</source>
          <target state="translated">Projeta cada elemento de uma sequência em um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>, mescla as sequências resultantes em uma sequência e chama uma função de seletor de resultado em cada elemento contido nele.</target>       </trans-unit>
        <trans-unit id="2253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.SequenceEqual``2(System.Collections.Immutable.ImmutableArray{``1},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of element in the compared array.</source>
          <target state="translated">O tipo de elemento da matriz comparado.</target>       </trans-unit>
        <trans-unit id="2254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.SequenceEqual``2(System.Collections.Immutable.ImmutableArray{``1},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of element contained by the collection.</source>
          <target state="translated">O tipo de elemento contido na coleção.</target>       </trans-unit>
        <trans-unit id="2255" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.SequenceEqual``2(System.Collections.Immutable.ImmutableArray{``1},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The array to use for comparison.</source>
          <target state="translated">A matriz a ser usada para comparação.</target>       </trans-unit>
        <trans-unit id="2256" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.SequenceEqual``2(System.Collections.Immutable.ImmutableArray{``1},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The items to use for comparison.</source>
          <target state="translated">Os itens a serem usados para comparação.</target>       </trans-unit>
        <trans-unit id="2257" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.SequenceEqual``2(System.Collections.Immutable.ImmutableArray{``1},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The comparer to use to check for equality.</source>
          <target state="translated">O comparador a ser usado para verificar quanto à igualdade.</target>       </trans-unit>
        <trans-unit id="2258" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.SequenceEqual``2(System.Collections.Immutable.ImmutableArray{``1},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``1})">
          <source>Determines whether two sequences are equal according to an equality comparer.</source>
          <target state="translated">Determina se duas sequências são iguais de acordo com um comparador de igualdade.</target>       </trans-unit>
        <trans-unit id="2259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.SequenceEqual``2(System.Collections.Immutable.ImmutableArray{``1},System.Collections.Immutable.ImmutableArray{``0},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of element in the compared array.</source>
          <target state="translated">O tipo de elemento da matriz comparado.</target>       </trans-unit>
        <trans-unit id="2260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.SequenceEqual``2(System.Collections.Immutable.ImmutableArray{``1},System.Collections.Immutable.ImmutableArray{``0},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of element contained by the collection.</source>
          <target state="translated">O tipo de elemento contido na coleção.</target>       </trans-unit>
        <trans-unit id="2261" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.SequenceEqual``2(System.Collections.Immutable.ImmutableArray{``1},System.Collections.Immutable.ImmutableArray{``0},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The array to use for comparison.</source>
          <target state="translated">A matriz a ser usada para comparação.</target>       </trans-unit>
        <trans-unit id="2262" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.SequenceEqual``2(System.Collections.Immutable.ImmutableArray{``1},System.Collections.Immutable.ImmutableArray{``0},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The items to use for comparison.</source>
          <target state="translated">Os itens a serem usados para comparação.</target>       </trans-unit>
        <trans-unit id="2263" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.SequenceEqual``2(System.Collections.Immutable.ImmutableArray{``1},System.Collections.Immutable.ImmutableArray{``0},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The comparer to use to check for equality.</source>
          <target state="translated">O comparador a ser usado para verificar quanto à igualdade.</target>       </trans-unit>
        <trans-unit id="2264" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.SequenceEqual``2(System.Collections.Immutable.ImmutableArray{``1},System.Collections.Immutable.ImmutableArray{``0},System.Collections.Generic.IEqualityComparer{``1})">
          <source>Determines whether two sequences are equal according to an equality comparer.</source>
          <target state="translated">Determina se duas sequências são iguais de acordo com um comparador de igualdade.</target>       </trans-unit>
        <trans-unit id="2265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.SequenceEqual``2(System.Collections.Immutable.ImmutableArray{``1},System.Collections.Immutable.ImmutableArray{``0},System.Func{``1,``1,System.Boolean})">
          <source>The type of element in the compared array.</source>
          <target state="translated">O tipo de elemento da matriz comparado.</target>       </trans-unit>
        <trans-unit id="2266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.SequenceEqual``2(System.Collections.Immutable.ImmutableArray{``1},System.Collections.Immutable.ImmutableArray{``0},System.Func{``1,``1,System.Boolean})">
          <source>The type of element contained by the collection.</source>
          <target state="translated">O tipo de elemento contido na coleção.</target>       </trans-unit>
        <trans-unit id="2267" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.SequenceEqual``2(System.Collections.Immutable.ImmutableArray{``1},System.Collections.Immutable.ImmutableArray{``0},System.Func{``1,``1,System.Boolean})">
          <source>The array to use for comparison.</source>
          <target state="translated">A matriz a ser usada para comparação.</target>       </trans-unit>
        <trans-unit id="2268" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.SequenceEqual``2(System.Collections.Immutable.ImmutableArray{``1},System.Collections.Immutable.ImmutableArray{``0},System.Func{``1,``1,System.Boolean})">
          <source>The items to use for comparison.</source>
          <target state="translated">Os itens a serem usados para comparação.</target>       </trans-unit>
        <trans-unit id="2269" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.SequenceEqual``2(System.Collections.Immutable.ImmutableArray{``1},System.Collections.Immutable.ImmutableArray{``0},System.Func{``1,``1,System.Boolean})">
          <source>The comparer to use to check for equality.</source>
          <target state="translated">O comparador a ser usado para verificar quanto à igualdade.</target>       </trans-unit>
        <trans-unit id="2270" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.SequenceEqual``2(System.Collections.Immutable.ImmutableArray{``1},System.Collections.Immutable.ImmutableArray{``0},System.Func{``1,``1,System.Boolean})">
          <source>Determines whether two sequences are equal according to an equality comparer.</source>
          <target state="translated">Determina se duas sequências são iguais de acordo com um comparador de igualdade.</target>       </trans-unit>
        <trans-unit id="2271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.Single``1(System.Collections.Immutable.ImmutableArray{``0})">
          <source>The type of element contained by the collection.</source>
          <target state="translated">O tipo de elemento contido na coleção.</target>       </trans-unit>
        <trans-unit id="2272" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Single``1(System.Collections.Immutable.ImmutableArray{``0})">
          <source>The array to retrieve the element from.</source>
          <target state="translated">A matriz da qual recuperar o elemento.</target>       </trans-unit>
        <trans-unit id="2273" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Single``1(System.Collections.Immutable.ImmutableArray{``0})">
          <source>Returns the only element of a sequence, and throws an exception if there is not exactly one element in the sequence.</source>
          <target state="translated">Retornará o único elemento de uma sequência e lançará uma exceção se não houver exatamente um elemento na sequência.</target>       </trans-unit>
        <trans-unit id="2274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.Single``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>The type of element contained by the collection.</source>
          <target state="translated">O tipo de elemento contido na coleção.</target>       </trans-unit>
        <trans-unit id="2275" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Single``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>Returns the only element of a sequence that satisfies a specified condition, and throws an exception if more than one such element exists.</source>
          <target state="translated">Retorna o único elemento de uma sequência que satisfaz uma condição especificada e gera uma exceção se houver mais de um tal elemento.</target>       </trans-unit>
        <trans-unit id="2276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.SingleOrDefault``1(System.Collections.Immutable.ImmutableArray{``0})">
          <source>The type of element contained by the collection.</source>
          <target state="translated">O tipo de elemento contido na coleção.</target>       </trans-unit>
        <trans-unit id="2277" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.SingleOrDefault``1(System.Collections.Immutable.ImmutableArray{``0})">
          <source>The array.</source>
          <target state="translated">A matriz.</target>       </trans-unit>
        <trans-unit id="2278" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.SingleOrDefault``1(System.Collections.Immutable.ImmutableArray{``0})">
          <source>Returns the only element of the array, or a default value if the sequence is empty; this method throws an exception if there is more than one element in the sequence.</source>
          <target state="translated">Retorna o único elemento da matriz ou um valor padrão se a sequência é vazia; esse método gera uma exceção se há mais de um elemento na sequência.</target>       </trans-unit>
        <trans-unit id="2279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.SingleOrDefault``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>The type of element contained by the collection.</source>
          <target state="translated">O tipo de elemento contido na coleção.</target>       </trans-unit>
        <trans-unit id="2280" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.SingleOrDefault``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>The array to get the element from.</source>
          <target state="translated">A matriz da qual obter o elemento.</target>       </trans-unit>
        <trans-unit id="2281" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.SingleOrDefault``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>The condition the element must satisfy.</source>
          <target state="translated">A condição que o elemento deve satisfazer.</target>       </trans-unit>
        <trans-unit id="2282" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.SingleOrDefault``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>Returns the only element of a sequence that satisfies a specified condition or a default value if no such element exists; this method throws an exception if more than one element satisfies the condition.</source>
          <target state="translated">Retorna o único elemento de uma sequência que satisfaz uma condição especificada ou um valor padrão se esse elemento não existir. Esse método lança uma exceção se mais de um elemento satisfizer a condição.</target>       </trans-unit>
        <trans-unit id="2283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.ToArray``1(System.Collections.Immutable.ImmutableArray{``0})">
          <source>The type of element contained by the collection.</source>
          <target state="translated">O tipo de elemento contido na coleção.</target>       </trans-unit>
        <trans-unit id="2284" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.ToArray``1(System.Collections.Immutable.ImmutableArray{``0})">
          <source>Copies the contents of this array to a mutable array.</source>
          <target state="translated">Copia o conteúdo dessa matriz para uma matriz mutável.</target>       </trans-unit>
        <trans-unit id="2285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.ToDictionary``2(System.Collections.Immutable.ImmutableArray{``1},System.Func{``1,``0})">
          <source>The type of the key.</source>
          <target state="translated">Tipo da chave.</target>       </trans-unit>
        <trans-unit id="2286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.ToDictionary``2(System.Collections.Immutable.ImmutableArray{``1},System.Func{``1,``0})">
          <source>The type of element contained by the collection.</source>
          <target state="translated">O tipo de elemento contido na coleção.</target>       </trans-unit>
        <trans-unit id="2287" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.ToDictionary``2(System.Collections.Immutable.ImmutableArray{``1},System.Func{``1,``0})">
          <source>The array to create a dictionary from.</source>
          <target state="translated">A matriz com base na qual criar um dicionário.</target>       </trans-unit>
        <trans-unit id="2288" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.ToDictionary``2(System.Collections.Immutable.ImmutableArray{``1},System.Func{``1,``0})">
          <source>The key selector.</source>
          <target state="translated">O seletor de chave.</target>       </trans-unit>
        <trans-unit id="2289" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.ToDictionary``2(System.Collections.Immutable.ImmutableArray{``1},System.Func{``1,``0})">
          <source>Creates a dictionary based on the contents of this array.</source>
          <target state="translated">Cria um dicionário com base no conteúdo desta matriz.</target>       </trans-unit>
        <trans-unit id="2290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.ToDictionary``2(System.Collections.Immutable.ImmutableArray{``1},System.Func{``1,``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The type of the key.</source>
          <target state="translated">Tipo da chave.</target>       </trans-unit>
        <trans-unit id="2291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.ToDictionary``2(System.Collections.Immutable.ImmutableArray{``1},System.Func{``1,``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The type of element contained by the collection.</source>
          <target state="translated">O tipo de elemento contido na coleção.</target>       </trans-unit>
        <trans-unit id="2292" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.ToDictionary``2(System.Collections.Immutable.ImmutableArray{``1},System.Func{``1,``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The array to create a dictionary from.</source>
          <target state="translated">A matriz com base na qual criar um dicionário.</target>       </trans-unit>
        <trans-unit id="2293" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.ToDictionary``2(System.Collections.Immutable.ImmutableArray{``1},System.Func{``1,``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The key selector.</source>
          <target state="translated">O seletor de chave.</target>       </trans-unit>
        <trans-unit id="2294" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.ToDictionary``2(System.Collections.Immutable.ImmutableArray{``1},System.Func{``1,``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The comparer to initialize the dictionary with.</source>
          <target state="translated">O comparador com o qual inicializar o dicionário.</target>       </trans-unit>
        <trans-unit id="2295" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.ToDictionary``2(System.Collections.Immutable.ImmutableArray{``1},System.Func{``1,``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>Creates a dictionary based on the contents of this array.</source>
          <target state="translated">Cria um dicionário com base no conteúdo desta matriz.</target>       </trans-unit>
        <trans-unit id="2296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.ToDictionary``3(System.Collections.Immutable.ImmutableArray{``2},System.Func{``2,``0},System.Func{``2,``1})">
          <source>The type of the key.</source>
          <target state="translated">Tipo da chave.</target>       </trans-unit>
        <trans-unit id="2297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.ToDictionary``3(System.Collections.Immutable.ImmutableArray{``2},System.Func{``2,``0},System.Func{``2,``1})">
          <source>The type of the element.</source>
          <target state="translated">O tipo do elemento.</target>       </trans-unit>
        <trans-unit id="2298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.ToDictionary``3(System.Collections.Immutable.ImmutableArray{``2},System.Func{``2,``0},System.Func{``2,``1})">
          <source>The type of element contained by the collection.</source>
          <target state="translated">O tipo de elemento contido na coleção.</target>       </trans-unit>
        <trans-unit id="2299" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.ToDictionary``3(System.Collections.Immutable.ImmutableArray{``2},System.Func{``2,``0},System.Func{``2,``1})">
          <source>The array to create a dictionary from.</source>
          <target state="translated">A matriz com base na qual criar um dicionário.</target>       </trans-unit>
        <trans-unit id="2300" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.ToDictionary``3(System.Collections.Immutable.ImmutableArray{``2},System.Func{``2,``0},System.Func{``2,``1})">
          <source>The key selector.</source>
          <target state="translated">O seletor de chave.</target>       </trans-unit>
        <trans-unit id="2301" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.ToDictionary``3(System.Collections.Immutable.ImmutableArray{``2},System.Func{``2,``0},System.Func{``2,``1})">
          <source>The element selector.</source>
          <target state="translated">O seletor de elemento.</target>       </trans-unit>
        <trans-unit id="2302" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.ToDictionary``3(System.Collections.Immutable.ImmutableArray{``2},System.Func{``2,``0},System.Func{``2,``1})">
          <source>Creates a dictionary based on the contents of this array.</source>
          <target state="translated">Cria um dicionário com base no conteúdo desta matriz.</target>       </trans-unit>
        <trans-unit id="2303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.ToDictionary``3(System.Collections.Immutable.ImmutableArray{``2},System.Func{``2,``0},System.Func{``2,``1},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The type of the key.</source>
          <target state="translated">Tipo da chave.</target>       </trans-unit>
        <trans-unit id="2304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.ToDictionary``3(System.Collections.Immutable.ImmutableArray{``2},System.Func{``2,``0},System.Func{``2,``1},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The type of the element.</source>
          <target state="translated">O tipo do elemento.</target>       </trans-unit>
        <trans-unit id="2305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.ToDictionary``3(System.Collections.Immutable.ImmutableArray{``2},System.Func{``2,``0},System.Func{``2,``1},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The type of element contained by the collection.</source>
          <target state="translated">O tipo de elemento contido na coleção.</target>       </trans-unit>
        <trans-unit id="2306" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.ToDictionary``3(System.Collections.Immutable.ImmutableArray{``2},System.Func{``2,``0},System.Func{``2,``1},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The array to create a dictionary from.</source>
          <target state="translated">A matriz com base na qual criar um dicionário.</target>       </trans-unit>
        <trans-unit id="2307" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.ToDictionary``3(System.Collections.Immutable.ImmutableArray{``2},System.Func{``2,``0},System.Func{``2,``1},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The key selector.</source>
          <target state="translated">O seletor de chave.</target>       </trans-unit>
        <trans-unit id="2308" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.ToDictionary``3(System.Collections.Immutable.ImmutableArray{``2},System.Func{``2,``0},System.Func{``2,``1},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The element selector.</source>
          <target state="translated">O seletor de elemento.</target>       </trans-unit>
        <trans-unit id="2309" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.ToDictionary``3(System.Collections.Immutable.ImmutableArray{``2},System.Func{``2,``0},System.Func{``2,``1},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The comparer to initialize the dictionary with.</source>
          <target state="translated">O comparador com o qual inicializar o dicionário.</target>       </trans-unit>
        <trans-unit id="2310" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.ToDictionary``3(System.Collections.Immutable.ImmutableArray{``2},System.Func{``2,``0},System.Func{``2,``1},System.Collections.Generic.IEqualityComparer{``0})">
          <source>Creates a dictionary based on the contents of this array.</source>
          <target state="translated">Cria um dicionário com base no conteúdo desta matriz.</target>       </trans-unit>
        <trans-unit id="2311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.Where``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>The type of element contained by the collection.</source>
          <target state="translated">O tipo de elemento contido na coleção.</target>       </trans-unit>
        <trans-unit id="2312" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Where``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>The array to filter.</source>
          <target state="translated">A matriz a filtrar.</target>       </trans-unit>
        <trans-unit id="2313" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Where``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>The condition to use for filtering the array content.</source>
          <target state="translated">A condição a ser usada para filtrar o conteúdo da matriz.</target>       </trans-unit>
        <trans-unit id="2314" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Where``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>Filters a sequence of values based on a predicate.</source>
          <target state="translated">Filtra uma sequência de valores com base em um predicado.</target>       </trans-unit>
        <trans-unit id="2315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Aggregate``1(System.Linq.ParallelQuery{``0},System.Func{``0,``0,``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2316" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``1(System.Linq.ParallelQuery{``0},System.Func{``0,``0,``0})">
          <source>A sequence to aggregate over.</source>
          <target state="translated">Uma sequência a ser agregada.</target>       </trans-unit>
        <trans-unit id="2317" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``1(System.Linq.ParallelQuery{``0},System.Func{``0,``0,``0})">
          <source>An accumulator function to be invoked on each element.</source>
          <target state="translated">Uma função de acumulador a ser invocada em cada elemento.</target>       </trans-unit>
        <trans-unit id="2318" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``1(System.Linq.ParallelQuery{``0},System.Func{``0,``0,``0})">
          <source>Applies in parallel an accumulator function over a sequence.</source>
          <target state="translated">Aplica em paralelo uma função acumuladora em uma sequência.</target>       </trans-unit>
        <trans-unit id="2319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Aggregate``2(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Aggregate``2(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1})">
          <source>The type of the accumulator value.</source>
          <target state="translated">O tipo do valor do acumulador.</target>       </trans-unit>
        <trans-unit id="2321" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``2(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1})">
          <source>A sequence to aggregate over.</source>
          <target state="translated">Uma sequência a ser agregada.</target>       </trans-unit>
        <trans-unit id="2322" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``2(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1})">
          <source>The initial accumulator value.</source>
          <target state="translated">O valor inicial do acumulador.</target>       </trans-unit>
        <trans-unit id="2323" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``2(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1})">
          <source>An accumulator function to be invoked on each element.</source>
          <target state="translated">Uma função de acumulador a ser invocada em cada elemento.</target>       </trans-unit>
        <trans-unit id="2324" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``2(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1})">
          <source>Applies in parallel an accumulator function over a sequence.</source>
          <target state="translated">Aplica em paralelo uma função acumuladora em uma sequência.</target>       </trans-unit>
        <trans-unit id="2325" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``2(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1})">
          <source>The specified seed value is used as the initial accumulator value.</source>
          <target state="translated">O valor de semente especificado é usado como o valor inicial do acumulador.</target>       </trans-unit>
        <trans-unit id="2326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})">
          <source>The type of the accumulator value.</source>
          <target state="translated">O tipo do valor do acumulador.</target>       </trans-unit>
        <trans-unit id="2328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})">
          <source>The type of the resulting value.</source>
          <target state="translated">O tipo do valor resultante.</target>       </trans-unit>
        <trans-unit id="2329" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})">
          <source>A sequence to aggregate over.</source>
          <target state="translated">Uma sequência a ser agregada.</target>       </trans-unit>
        <trans-unit id="2330" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})">
          <source>The initial accumulator value.</source>
          <target state="translated">O valor inicial do acumulador.</target>       </trans-unit>
        <trans-unit id="2331" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})">
          <source>An accumulator function to be invoked on each element in a partition.</source>
          <target state="translated">Uma função de acumulador a ser invocada em cada elemento em uma partição.</target>       </trans-unit>
        <trans-unit id="2332" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})">
          <source>An accumulator function to be invoked on the yielded accumulator result from each partition.</source>
          <target state="translated">Uma função de acumulador a ser invocada produziu resultado do acumulador de cada partição.</target>       </trans-unit>
        <trans-unit id="2333" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})">
          <source>A function to transform the final accumulator value into the result value.</source>
          <target state="translated">Uma função para transformar o valor final do acumulador no valor de resultado.</target>       </trans-unit>
        <trans-unit id="2334" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})">
          <source>Applies in parallel an accumulator function over a sequence.</source>
          <target state="translated">Aplica em paralelo uma função acumuladora em uma sequência.</target>       </trans-unit>
        <trans-unit id="2335" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})">
          <source>This overload is not available in the sequential implementation.</source>
          <target state="translated">Essa sobrecarga não está disponível na implementação sequencial.</target>       </trans-unit>
        <trans-unit id="2336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})">
          <source>The type of the accumulator value.</source>
          <target state="translated">O tipo do valor do acumulador.</target>       </trans-unit>
        <trans-unit id="2338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})">
          <source>The type of the resulting value.</source>
          <target state="translated">O tipo do valor resultante.</target>       </trans-unit>
        <trans-unit id="2339" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})">
          <source>A sequence to aggregate over.</source>
          <target state="translated">Uma sequência a ser agregada.</target>       </trans-unit>
        <trans-unit id="2340" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})">
          <source>The initial accumulator value.</source>
          <target state="translated">O valor inicial do acumulador.</target>       </trans-unit>
        <trans-unit id="2341" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})">
          <source>An accumulator function to be invoked on each element.</source>
          <target state="translated">Uma função de acumulador a ser invocada em cada elemento.</target>       </trans-unit>
        <trans-unit id="2342" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})">
          <source>A function to transform the final accumulator value into the result value.</source>
          <target state="translated">Uma função para transformar o valor final do acumulador no valor de resultado.</target>       </trans-unit>
        <trans-unit id="2343" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})">
          <source>Applies in parallel an accumulator function over a sequence.</source>
          <target state="translated">Aplica em paralelo uma função acumuladora em uma sequência.</target>       </trans-unit>
        <trans-unit id="2344" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})">
          <source>The specified seed value is used as the initial accumulator value, and the specified function is used to select the result value.</source>
          <target state="translated">O valor de semente especificado é usado como o valor inicial do acumulador e a função especificada é usada para selecionar o valor do resultado.</target>       </trans-unit>
        <trans-unit id="2345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},System.Func{``1},System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},System.Func{``1},System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})">
          <source>The type of the accumulator value.</source>
          <target state="translated">O tipo do valor do acumulador.</target>       </trans-unit>
        <trans-unit id="2347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},System.Func{``1},System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})">
          <source>The type of the resulting value.</source>
          <target state="translated">O tipo do valor resultante.</target>       </trans-unit>
        <trans-unit id="2348" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},System.Func{``1},System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})">
          <source>A sequence to aggregate over.</source>
          <target state="translated">Uma sequência a ser agregada.</target>       </trans-unit>
        <trans-unit id="2349" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},System.Func{``1},System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})">
          <source>A function that returns the initial accumulator value.</source>
          <target state="translated">Uma função que retorna o valor inicial do acumulador.</target>       </trans-unit>
        <trans-unit id="2350" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},System.Func{``1},System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})">
          <source>An accumulator function to be invoked on each element in a partition.</source>
          <target state="translated">Uma função de acumulador a ser invocada em cada elemento em uma partição.</target>       </trans-unit>
        <trans-unit id="2351" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},System.Func{``1},System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})">
          <source>An accumulator function to be invoked on the yielded accumulator result from each partition.</source>
          <target state="translated">Uma função de acumulador a ser invocada produziu resultado do acumulador de cada partição.</target>       </trans-unit>
        <trans-unit id="2352" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},System.Func{``1},System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})">
          <source>A function to transform the final accumulator value into the result value.</source>
          <target state="translated">Uma função para transformar o valor final do acumulador no valor de resultado.</target>       </trans-unit>
        <trans-unit id="2353" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},System.Func{``1},System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})">
          <source>Applies in parallel an accumulator function over a sequence.</source>
          <target state="translated">Aplica em paralelo uma função acumuladora em uma sequência.</target>       </trans-unit>
        <trans-unit id="2354" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},System.Func{``1},System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})">
          <source>This overload is not available in the sequential implementation.</source>
          <target state="translated">Essa sobrecarga não está disponível na implementação sequencial.</target>       </trans-unit>
        <trans-unit id="2355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.All``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2356" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.All``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>A sequence whose elements to apply the predicate to.</source>
          <target state="translated">A sequência a cujos elementos aplicar o predicado.</target>       </trans-unit>
        <trans-unit id="2357" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.All``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>A function to test each element for a condition.</source>
          <target state="translated">Uma função para testar cada elemento em relação a uma condição.</target>       </trans-unit>
        <trans-unit id="2358" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.All``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>Determines in parallel whether all elements of a sequence satisfy a condition.</source>
          <target state="translated">Determina em paralelo se todos os elementos de uma sequência atendem a uma condição.</target>       </trans-unit>
        <trans-unit id="2359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Any``1(System.Linq.ParallelQuery{``0})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2360" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Any``1(System.Linq.ParallelQuery{``0})">
          <source>The sequence to check for emptiness.</source>
          <target state="translated">A sequência para verificar se está vazia.</target>       </trans-unit>
        <trans-unit id="2361" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Any``1(System.Linq.ParallelQuery{``0})">
          <source>Determines whether a parallel sequence contains any elements.</source>
          <target state="translated">Determina se uma sequência paralela contém algum elemento.</target>       </trans-unit>
        <trans-unit id="2362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Any``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2363" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Any``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>A sequence to whose elements the predicate will be applied.</source>
          <target state="translated">Uma sequência a cujos elementos o predicado será aplicado.</target>       </trans-unit>
        <trans-unit id="2364" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Any``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>A function to test each element for a condition.</source>
          <target state="translated">Uma função para testar cada elemento em relação a uma condição.</target>       </trans-unit>
        <trans-unit id="2365" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Any``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>Determines in parallel whether any element of a sequence satisfies a condition.</source>
          <target state="translated">Determina em paralelo se algum elemento de uma sequência atende a uma condição.</target>       </trans-unit>
        <trans-unit id="2366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.AsEnumerable``1(System.Linq.ParallelQuery{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2367" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.AsEnumerable``1(System.Linq.ParallelQuery{``0})">
          <source>The sequence to cast as <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>.</source>
          <target state="translated">A sequência a ser convertida como <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2368" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.AsEnumerable``1(System.Linq.ParallelQuery{``0})">
          <source>Converts a <ph id="ph1">&lt;see cref="T:System.Linq.ParallelQuery`1" /&gt;</ph> into an <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> to force sequential evaluation of the query.</source>
          <target state="translated">Converte uma <ph id="ph1">&lt;see cref="T:System.Linq.ParallelQuery`1" /&gt;</ph> em uma <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> para forçar a avaliação sequencial da consulta.</target>       </trans-unit>
        <trans-unit id="2369" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.AsOrdered(System.Linq.ParallelQuery)">
          <source>The input sequence.</source>
          <target state="translated">A sequência de entrada.</target>       </trans-unit>
        <trans-unit id="2370" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.AsOrdered(System.Linq.ParallelQuery)">
          <source>Enables treatment of a data source as if it were ordered, overriding the default of unordered.</source>
          <target state="translated">Permite o tratamento de uma fonte de dados como se estivesse ordenada, substituindo o padrão de fora de ordem.</target>       </trans-unit>
        <trans-unit id="2371" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.AsOrdered(System.Linq.ParallelQuery)">
          <source>AsOrdered may only be invoked on non-generic sequences returned by AsParallel, ParallelEnumerable.Range, and ParallelEnumerable.Repeat.</source>
          <target state="translated">AsOrdered pode ser invocado somente em sequências não genéricas retornadas por AsParallel, ParallelEnumerable.Range e ParallelEnumerable.Repeat.</target>       </trans-unit>
        <trans-unit id="2372" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.AsOrdered``1(System.Linq.ParallelQuery{``0})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2373" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.AsOrdered``1(System.Linq.ParallelQuery{``0})">
          <source>The input sequence.</source>
          <target state="translated">A sequência de entrada.</target>       </trans-unit>
        <trans-unit id="2374" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.AsOrdered``1(System.Linq.ParallelQuery{``0})">
          <source>Enables treatment of a data source as if it were ordered, overriding the default of unordered.</source>
          <target state="translated">Permite o tratamento de uma fonte de dados como se estivesse ordenada, substituindo o padrão de fora de ordem.</target>       </trans-unit>
        <trans-unit id="2375" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.AsOrdered``1(System.Linq.ParallelQuery{``0})">
          <source>AsOrdered may only be invoked on generic sequences returned by AsParallel, ParallelEnumerable.Range, and ParallelEnumerable.Repeat.</source>
          <target state="translated">AsOrdered pode ser invocado somente em sequências genéricas retornadas por AsParallel, ParallelEnumerable.Range e ParallelEnumerable.Repeat.</target>       </trans-unit>
        <trans-unit id="2376" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> to convert to a <ph id="ph2">&lt;see cref="T:System.Linq.ParallelQuery" /&gt;</ph>.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> a ser convertido em um <ph id="ph2">&lt;see cref="T:System.Linq.ParallelQuery" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2377" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)">
          <source>Enables parallelization of a query.</source>
          <target state="translated">Habilita a paralelização de uma consulta.</target>       </trans-unit>
        <trans-unit id="2378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Concurrent.Partitioner{``0})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2379" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Concurrent.Partitioner{``0})">
          <source>A partitioner over the input sequence.</source>
          <target state="translated">Um particionador da sequência de entrada.</target>       </trans-unit>
        <trans-unit id="2380" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Concurrent.Partitioner{``0})">
          <source>Enables parallelization of a query, as sourced by a custom partitioner that is responsible for splitting the input sequence into partitions.</source>
          <target state="translated">Possibilita a paralelização de uma consulta, conforme originada por um particionador personalizado que é responsável pela divisão da sequência de entrada em partições.</target>       </trans-unit>
        <trans-unit id="2381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2382" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> to convert to a <ph id="ph2">&lt;see cref="T:System.Linq.ParallelQuery`1" /&gt;</ph>.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> a ser convertido em um <ph id="ph2">&lt;see cref="T:System.Linq.ParallelQuery`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2383" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})">
          <source>Enables parallelization of a query.</source>
          <target state="translated">Habilita a paralelização de uma consulta.</target>       </trans-unit>
        <trans-unit id="2384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.AsSequential``1(System.Linq.ParallelQuery{``0})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2385" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.AsSequential``1(System.Linq.ParallelQuery{``0})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Linq.ParallelQuery`1" /&gt;</ph> to convert to an <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>.</source>
          <target state="translated">Uma <ph id="ph1">&lt;see cref="T:System.Linq.ParallelQuery`1" /&gt;</ph> a ser convertida em uma <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2386" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.AsSequential``1(System.Linq.ParallelQuery{``0})">
          <source>Converts a <ph id="ph1">&lt;see cref="T:System.Linq.ParallelQuery`1" /&gt;</ph> into an <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> to force sequential evaluation of the query.</source>
          <target state="translated">Converte uma <ph id="ph1">&lt;see cref="T:System.Linq.ParallelQuery`1" /&gt;</ph> em uma <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> para forçar a avaliação sequencial da consulta.</target>       </trans-unit>
        <trans-unit id="2387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.AsUnordered``1(System.Linq.ParallelQuery{``0})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2388" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.AsUnordered``1(System.Linq.ParallelQuery{``0})">
          <source>The input sequence.</source>
          <target state="translated">A sequência de entrada.</target>       </trans-unit>
        <trans-unit id="2389" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.AsUnordered``1(System.Linq.ParallelQuery{``0})">
          <source>Allows an intermediate query to be treated as if no ordering is implied among the elements.</source>
          <target state="translated">Permite que uma consulta intermediária seja tratada como se nenhuma ordem estivesse implícita entre os elementos.</target>       </trans-unit>
        <trans-unit id="2390" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Decimal})">
          <source>A sequence of values that are used to calculate an average.</source>
          <target state="translated">Uma sequência de valores usados para calcular uma média.</target>       </trans-unit>
        <trans-unit id="2391" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Decimal})">
          <source>Computes in parallel the average of a sequence of values.</source>
          <target state="translated">Calcula em paralelo a média de uma sequência de valores.</target>       </trans-unit>
        <trans-unit id="2392" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Double})">
          <source>A sequence of values that are used to calculate an average.</source>
          <target state="translated">Uma sequência de valores usados para calcular uma média.</target>       </trans-unit>
        <trans-unit id="2393" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Double})">
          <source>Computes in parallel the average of a sequence of values.</source>
          <target state="translated">Calcula em paralelo a média de uma sequência de valores.</target>       </trans-unit>
        <trans-unit id="2394" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Int32})">
          <source>A sequence of values that are used to calculate an average.</source>
          <target state="translated">Uma sequência de valores usados para calcular uma média.</target>       </trans-unit>
        <trans-unit id="2395" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Int32})">
          <source>Computes in parallel the average of a sequence of values.</source>
          <target state="translated">Calcula em paralelo a média de uma sequência de valores.</target>       </trans-unit>
        <trans-unit id="2396" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Int64})">
          <source>A sequence of values that are used to calculate an average.</source>
          <target state="translated">Uma sequência de valores usados para calcular uma média.</target>       </trans-unit>
        <trans-unit id="2397" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Int64})">
          <source>Computes in parallel the average of a sequence of values.</source>
          <target state="translated">Calcula em paralelo a média de uma sequência de valores.</target>       </trans-unit>
        <trans-unit id="2398" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})">
          <source>A sequence of values that are used to calculate an average.</source>
          <target state="translated">Uma sequência de valores usados para calcular uma média.</target>       </trans-unit>
        <trans-unit id="2399" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})">
          <source>Computes in parallel the average of a sequence of values.</source>
          <target state="translated">Calcula em paralelo a média de uma sequência de valores.</target>       </trans-unit>
        <trans-unit id="2400" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Double}})">
          <source>The source sequence.</source>
          <target state="translated">A sequência de origem.</target>       </trans-unit>
        <trans-unit id="2401" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Double}})">
          <source>Computes in parallel the average of a sequence of values.</source>
          <target state="translated">Calcula em paralelo a média de uma sequência de valores.</target>       </trans-unit>
        <trans-unit id="2402" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Int32}})">
          <source>A sequence of values that are used to calculate an average.</source>
          <target state="translated">Uma sequência de valores usados para calcular uma média.</target>       </trans-unit>
        <trans-unit id="2403" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Int32}})">
          <source>Computes in parallel the average of a sequence of values.</source>
          <target state="translated">Calcula em paralelo a média de uma sequência de valores.</target>       </trans-unit>
        <trans-unit id="2404" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Int64}})">
          <source>A sequence of values that are used to calculate an average.</source>
          <target state="translated">Uma sequência de valores usados para calcular uma média.</target>       </trans-unit>
        <trans-unit id="2405" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Int64}})">
          <source>Computes in parallel the average of a sequence of values.</source>
          <target state="translated">Calcula em paralelo a média de uma sequência de valores.</target>       </trans-unit>
        <trans-unit id="2406" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Single}})">
          <source>A sequence of values that are used to calculate an average.</source>
          <target state="translated">Uma sequência de valores usados para calcular uma média.</target>       </trans-unit>
        <trans-unit id="2407" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Single}})">
          <source>Computes in parallel the average of a sequence of values.</source>
          <target state="translated">Calcula em paralelo a média de uma sequência de valores.</target>       </trans-unit>
        <trans-unit id="2408" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Single})">
          <source>A sequence of values that are used to calculate an average.</source>
          <target state="translated">Uma sequência de valores usados para calcular uma média.</target>       </trans-unit>
        <trans-unit id="2409" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Single})">
          <source>Computes in parallel the average of a sequence of values.</source>
          <target state="translated">Calcula em paralelo a média de uma sequência de valores.</target>       </trans-unit>
        <trans-unit id="2410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2411" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
          <source>A sequence of values that are used to calculate an average.</source>
          <target state="translated">Uma sequência de valores usados para calcular uma média.</target>       </trans-unit>
        <trans-unit id="2412" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Uma função de transformação a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="2413" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
          <source>Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.</source>
          <target state="translated">Calcula em paralelo a média de uma sequência de valores que são obtidos invocando uma função de transformação em cada elemento da sequência de entrada.</target>       </trans-unit>
        <trans-unit id="2414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2415" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
          <source>A sequence of values that are used to calculate an average.</source>
          <target state="translated">Uma sequência de valores usados para calcular uma média.</target>       </trans-unit>
        <trans-unit id="2416" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Uma função de transformação a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="2417" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
          <source>Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.</source>
          <target state="translated">Calcula em paralelo a média de uma sequência de valores que são obtidos invocando uma função de transformação em cada elemento da sequência de entrada.</target>       </trans-unit>
        <trans-unit id="2418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2419" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
          <source>A sequence of values that are used to calculate an average.</source>
          <target state="translated">Uma sequência de valores usados para calcular uma média.</target>       </trans-unit>
        <trans-unit id="2420" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Uma função de transformação a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="2421" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
          <source>Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.</source>
          <target state="translated">Calcula em paralelo a média de uma sequência de valores que são obtidos invocando uma função de transformação em cada elemento da sequência de entrada.</target>       </trans-unit>
        <trans-unit id="2422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2423" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
          <source>A sequence of values that are used to calculate an average.</source>
          <target state="translated">Uma sequência de valores usados para calcular uma média.</target>       </trans-unit>
        <trans-unit id="2424" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Uma função de transformação a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="2425" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
          <source>Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.</source>
          <target state="translated">Calcula em paralelo a média de uma sequência de valores que são obtidos invocando uma função de transformação em cada elemento da sequência de entrada.</target>       </trans-unit>
        <trans-unit id="2426" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2427" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
          <source>A sequence of values that are used to calculate an average.</source>
          <target state="translated">Uma sequência de valores usados para calcular uma média.</target>       </trans-unit>
        <trans-unit id="2428" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Uma função de transformação a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="2429" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
          <source>Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.</source>
          <target state="translated">Calcula em paralelo a média de uma sequência de valores que são obtidos invocando uma função de transformação em cada elemento da sequência de entrada.</target>       </trans-unit>
        <trans-unit id="2430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2431" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
          <source>A sequence of values that are used to calculate an average.</source>
          <target state="translated">Uma sequência de valores usados para calcular uma média.</target>       </trans-unit>
        <trans-unit id="2432" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Uma função de transformação a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="2433" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
          <source>Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.</source>
          <target state="translated">Calcula em paralelo a média de uma sequência de valores que são obtidos invocando uma função de transformação em cada elemento da sequência de entrada.</target>       </trans-unit>
        <trans-unit id="2434" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2435" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
          <source>A sequence of values that are used to calculate an average.</source>
          <target state="translated">Uma sequência de valores usados para calcular uma média.</target>       </trans-unit>
        <trans-unit id="2436" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Uma função de transformação a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="2437" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
          <source>Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.</source>
          <target state="translated">Calcula em paralelo a média de uma sequência de valores que são obtidos invocando uma função de transformação em cada elemento da sequência de entrada.</target>       </trans-unit>
        <trans-unit id="2438" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2439" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
          <source>A sequence of values that are used to calculate an average.</source>
          <target state="translated">Uma sequência de valores usados para calcular uma média.</target>       </trans-unit>
        <trans-unit id="2440" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Uma função de transformação a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="2441" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
          <source>Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.</source>
          <target state="translated">Calcula em paralelo a média de uma sequência de valores que são obtidos invocando uma função de transformação em cada elemento da sequência de entrada.</target>       </trans-unit>
        <trans-unit id="2442" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2443" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
          <source>A sequence of values that are used to calculate an average.</source>
          <target state="translated">Uma sequência de valores usados para calcular uma média.</target>       </trans-unit>
        <trans-unit id="2444" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Uma função de transformação a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="2445" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
          <source>Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.</source>
          <target state="translated">Calcula em paralelo a média de uma sequência de valores que são obtidos invocando uma função de transformação em cada elemento da sequência de entrada.</target>       </trans-unit>
        <trans-unit id="2446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2447" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
          <source>A sequence of values that are used to calculate an average.</source>
          <target state="translated">Uma sequência de valores usados para calcular uma média.</target>       </trans-unit>
        <trans-unit id="2448" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Uma função de transformação a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="2449" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
          <source>Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.</source>
          <target state="translated">Calcula em paralelo a média de uma sequência de valores que são obtidos invocando uma função de transformação em cada elemento da sequência de entrada.</target>       </trans-unit>
        <trans-unit id="2450" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Cast``1(System.Linq.ParallelQuery)">
          <source>The type to convert the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept> to.</source>
          <target state="translated">O tipo para converter os elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept> para.</target>       </trans-unit>
        <trans-unit id="2451" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Cast``1(System.Linq.ParallelQuery)">
          <source>The sequence that contains the elements to be converted.</source>
          <target state="translated">A sequência que contém os elementos a serem convertidos.</target>       </trans-unit>
        <trans-unit id="2452" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Cast``1(System.Linq.ParallelQuery)">
          <source>Converts the elements of a ParallelQuery to the specified type.</source>
          <target state="translated">Converte os elementos de uma ParallelQuery para o tipo especificado.</target>       </trans-unit>
        <trans-unit id="2453" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Concat``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>This type parameter is not used.</source>
          <target state="translated">Este parâmetro de tipo não é usado.</target>       </trans-unit>
        <trans-unit id="2454" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Concat``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>This parameter is not used.</source>
          <target state="translated">Este parâmetro não é usado.</target>       </trans-unit>
        <trans-unit id="2455" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Concat``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>This parameter is not used.</source>
          <target state="translated">Este parâmetro não é usado.</target>       </trans-unit>
        <trans-unit id="2456" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Concat``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>This Concat overload should never be called.</source>
          <target state="translated">Essa sobrecarga Concat nunca deve ser chamada.</target>       </trans-unit>
        <trans-unit id="2457" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Concat``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>This method is marked as obsolete and always throws <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> when called.</source>
          <target state="translated">Esse método está marcado como obsoleto e sempre gera <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> quando chamado.</target>       </trans-unit>
        <trans-unit id="2458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Concat``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
          <source>The type of the elements of the input sequences.</source>
          <target state="translated">O tipo dos elementos das sequências de entrada.</target>       </trans-unit>
        <trans-unit id="2459" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Concat``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
          <source>The first sequence to concatenate.</source>
          <target state="translated">A primeira sequência a ser concatenada.</target>       </trans-unit>
        <trans-unit id="2460" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Concat``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
          <source>The sequence to concatenate to the first sequence.</source>
          <target state="translated">A sequência a ser concatenada com a primeira sequência.</target>       </trans-unit>
        <trans-unit id="2461" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Concat``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
          <source>Concatenates two parallel sequences.</source>
          <target state="translated">Concatena duas sequências paralelas.</target>       </trans-unit>
        <trans-unit id="2462" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Contains``1(System.Linq.ParallelQuery{``0},``0)">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2463" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Contains``1(System.Linq.ParallelQuery{``0},``0)">
          <source>A sequence in which to locate a value.</source>
          <target state="translated">Uma sequência na qual um valor será localizado.</target>       </trans-unit>
        <trans-unit id="2464" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Contains``1(System.Linq.ParallelQuery{``0},``0)">
          <source>The value to locate in the sequence.</source>
          <target state="translated">O valor a ser localizado na sequência.</target>       </trans-unit>
        <trans-unit id="2465" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Contains``1(System.Linq.ParallelQuery{``0},``0)">
          <source>Determines in parallel whether a sequence contains a specified element by using the default equality comparer.</source>
          <target state="translated">Em paralelo, determina se uma sequência contém um elemento especificado usando o comparador de igualdade padrão.</target>       </trans-unit>
        <trans-unit id="2466" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Contains``1(System.Linq.ParallelQuery{``0},``0,System.Collections.Generic.IEqualityComparer{``0})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2467" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Contains``1(System.Linq.ParallelQuery{``0},``0,System.Collections.Generic.IEqualityComparer{``0})">
          <source>A sequence in which to locate a value.</source>
          <target state="translated">Uma sequência na qual um valor será localizado.</target>       </trans-unit>
        <trans-unit id="2468" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Contains``1(System.Linq.ParallelQuery{``0},``0,System.Collections.Generic.IEqualityComparer{``0})">
          <source>The value to locate in the sequence.</source>
          <target state="translated">O valor a ser localizado na sequência.</target>       </trans-unit>
        <trans-unit id="2469" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Contains``1(System.Linq.ParallelQuery{``0},``0,System.Collections.Generic.IEqualityComparer{``0})">
          <source>An equality comparer to compare values.</source>
          <target state="translated">Um comparador de igualdade para comparar valores.</target>       </trans-unit>
        <trans-unit id="2470" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Contains``1(System.Linq.ParallelQuery{``0},``0,System.Collections.Generic.IEqualityComparer{``0})">
          <source>Determines in parallel whether a sequence contains a specified element by using a specified <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>.</source>
          <target state="translated">Determina em paralelo se uma sequência contém um elemento especificado usando um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2471" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Count``1(System.Linq.ParallelQuery{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2472" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Count``1(System.Linq.ParallelQuery{``0})">
          <source>A sequence that contains elements to be counted.</source>
          <target state="translated">Uma sequência que contém os elementos a serem contados.</target>       </trans-unit>
        <trans-unit id="2473" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Count``1(System.Linq.ParallelQuery{``0})">
          <source>Returns the number of elements in a parallel sequence.</source>
          <target state="translated">Retorna o número de elementos em uma sequência paralela.</target>       </trans-unit>
        <trans-unit id="2474" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Count``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2475" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Count``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>A sequence that contains elements to be counted.</source>
          <target state="translated">Uma sequência que contém os elementos a serem contados.</target>       </trans-unit>
        <trans-unit id="2476" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Count``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>A function to test each element for a condition.</source>
          <target state="translated">Uma função para testar cada elemento em relação a uma condição.</target>       </trans-unit>
        <trans-unit id="2477" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Count``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>Returns a number that represents how many elements in the specified parallel sequence satisfy a condition.</source>
          <target state="translated">Retorna um número que representa quantos elementos na sequência paralela especificada satisfazem uma condição.</target>       </trans-unit>
        <trans-unit id="2478" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.DefaultIfEmpty``1(System.Linq.ParallelQuery{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2479" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.DefaultIfEmpty``1(System.Linq.ParallelQuery{``0})">
          <source>The sequence to return a default value for if it is empty.</source>
          <target state="translated">A sequência para a qual será retornado um valor padrão se ela estiver vazia.</target>       </trans-unit>
        <trans-unit id="2480" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.DefaultIfEmpty``1(System.Linq.ParallelQuery{``0})">
          <source>Returns the elements of the specified parallel sequence or the type parameter's default value in a singleton collection if the sequence is empty.</source>
          <target state="translated">Retorna os elementos da sequência paralela especificada ou o valor padrão do parâmetro de tipo em uma coleção de singleton se a sequência estiver vazia.</target>       </trans-unit>
        <trans-unit id="2481" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.DefaultIfEmpty``1(System.Linq.ParallelQuery{``0},``0)">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2482" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.DefaultIfEmpty``1(System.Linq.ParallelQuery{``0},``0)">
          <source>The sequence to return the specified value for if it is empty.</source>
          <target state="translated">A sequência para a qual será retornado o valor especificado se ela estiver vazia.</target>       </trans-unit>
        <trans-unit id="2483" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.DefaultIfEmpty``1(System.Linq.ParallelQuery{``0},``0)">
          <source>The value to return if the sequence is empty.</source>
          <target state="translated">O valor a ser retornado se a sequência estiver vazia.</target>       </trans-unit>
        <trans-unit id="2484" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.DefaultIfEmpty``1(System.Linq.ParallelQuery{``0},``0)">
          <source>Returns the elements of the specified parallel sequence or the specified value in a singleton collection if the sequence is empty.</source>
          <target state="translated">Retorna os elementos da sequência paralela especificada ou o valor especificado em uma coleção de singleton, se a sequência estiver vazia.</target>       </trans-unit>
        <trans-unit id="2485" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Distinct``1(System.Linq.ParallelQuery{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2486" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Distinct``1(System.Linq.ParallelQuery{``0})">
          <source>The sequence to remove duplicate elements from.</source>
          <target state="translated">A sequência da qual os elementos duplicados serão removidos.</target>       </trans-unit>
        <trans-unit id="2487" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Distinct``1(System.Linq.ParallelQuery{``0})">
          <source>Returns distinct elements from a parallel sequence by using the default equality comparer to compare values.</source>
          <target state="translated">Retorna elementos distintos de uma sequência paralela usando o comparador de igualdade padrão para comparar valores.</target>       </trans-unit>
        <trans-unit id="2488" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Distinct``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2489" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Distinct``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The sequence to remove duplicate elements from.</source>
          <target state="translated">A sequência da qual os elementos duplicados serão removidos.</target>       </trans-unit>
        <trans-unit id="2490" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Distinct``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to compare values.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> para comparar valores.</target>       </trans-unit>
        <trans-unit id="2491" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Distinct``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>Returns distinct elements from a parallel sequence by using a specified <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to compare values.</source>
          <target state="translated">Retorna os elementos distintos de uma sequência paralela usando um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> para comparar valores.</target>       </trans-unit>
        <trans-unit id="2492" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ElementAt``1(System.Linq.ParallelQuery{``0},System.Int32)">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2493" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ElementAt``1(System.Linq.ParallelQuery{``0},System.Int32)">
          <source>A sequence to return an element from.</source>
          <target state="translated">Uma sequência da qual retornar um elemento.</target>       </trans-unit>
        <trans-unit id="2494" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ElementAt``1(System.Linq.ParallelQuery{``0},System.Int32)">
          <source>The zero-based index of the element to retrieve.</source>
          <target state="translated">O índice baseado em zero do elemento a ser recuperado.</target>       </trans-unit>
        <trans-unit id="2495" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ElementAt``1(System.Linq.ParallelQuery{``0},System.Int32)">
          <source>Returns the element at a specified index in a parallel sequence.</source>
          <target state="translated">Retorna o elemento em um índice especificado em uma sequência paralela.</target>       </trans-unit>
        <trans-unit id="2496" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ElementAtOrDefault``1(System.Linq.ParallelQuery{``0},System.Int32)">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2497" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ElementAtOrDefault``1(System.Linq.ParallelQuery{``0},System.Int32)">
          <source>A sequence to return an element from.</source>
          <target state="translated">Uma sequência da qual retornar um elemento.</target>       </trans-unit>
        <trans-unit id="2498" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ElementAtOrDefault``1(System.Linq.ParallelQuery{``0},System.Int32)">
          <source>The zero-based index of the element to retrieve.</source>
          <target state="translated">O índice baseado em zero do elemento a ser recuperado.</target>       </trans-unit>
        <trans-unit id="2499" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ElementAtOrDefault``1(System.Linq.ParallelQuery{``0},System.Int32)">
          <source>Returns the element at a specified index in a parallel sequence or a default value if the index is out of range.</source>
          <target state="translated">Retorna o elemento em um índice especificado em uma sequência ou um valor padrão paralelo se o índice estiver fora do intervalo.</target>       </trans-unit>
        <trans-unit id="2500" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>This type parameter is not used.</source>
          <target state="translated">Este parâmetro de tipo não é usado.</target>       </trans-unit>
        <trans-unit id="2501" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>This parameter is not used.</source>
          <target state="translated">Este parâmetro não é usado.</target>       </trans-unit>
        <trans-unit id="2502" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>This parameter is not used.</source>
          <target state="translated">Este parâmetro não é usado.</target>       </trans-unit>
        <trans-unit id="2503" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>This Except overload should never be called.</source>
          <target state="translated">Essa sobrecarga Except nunca deve ser chamada.</target>       </trans-unit>
        <trans-unit id="2504" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>This method is marked as obsolete and always throws <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> when called.</source>
          <target state="translated">Esse método está marcado como obsoleto e sempre gera <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> quando chamado.</target>       </trans-unit>
        <trans-unit id="2505" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>This type parameter is not used.</source>
          <target state="translated">Este parâmetro de tipo não é usado.</target>       </trans-unit>
        <trans-unit id="2506" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>This parameter is not used.</source>
          <target state="translated">Este parâmetro não é usado.</target>       </trans-unit>
        <trans-unit id="2507" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>This parameter is not used.</source>
          <target state="translated">Este parâmetro não é usado.</target>       </trans-unit>
        <trans-unit id="2508" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>This parameter is not used.</source>
          <target state="translated">Este parâmetro não é usado.</target>       </trans-unit>
        <trans-unit id="2509" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>This Except overload should never be called.</source>
          <target state="translated">Essa sobrecarga Except nunca deve ser chamada.</target>       </trans-unit>
        <trans-unit id="2510" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>This method is marked as obsolete and always throws <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> when called.</source>
          <target state="translated">Esse método está marcado como obsoleto e sempre gera <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> quando chamado.</target>       </trans-unit>
        <trans-unit id="2511" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
          <source>The type of the elements of the input sequences.</source>
          <target state="translated">O tipo dos elementos das sequências de entrada.</target>       </trans-unit>
        <trans-unit id="2512" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
          <source>A sequence whose elements that are not also in <bpt id="p1">&lt;c&gt;</bpt>second<ept id="p1">&lt;/c&gt;</ept> will be returned.</source>
          <target state="translated">Uma sequência cujos elementos que não estão também em <bpt id="p1">&lt;c&gt;</bpt>segundo<ept id="p1">&lt;/c&gt;</ept> será retornada.</target>       </trans-unit>
        <trans-unit id="2513" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
          <source>A sequence whose elements that also occur in the first sequence will cause those elements to be removed from the returned sequence.</source>
          <target state="translated">Uma sequência cujos elementos que também ocorrem na primeira sequência fará com que esses elementos sejam removido da sequência retornada.</target>       </trans-unit>
        <trans-unit id="2514" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
          <source>Produces the set difference of two parallel sequences by using the default equality comparer to compare values.</source>
          <target state="translated">Produz a diferença de conjunto de duas sequências paralelas usando o comparador de igualdade padrão para comparar os valores.</target>       </trans-unit>
        <trans-unit id="2515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The type of the elements of the input sequences.</source>
          <target state="translated">O tipo dos elementos das sequências de entrada.</target>       </trans-unit>
        <trans-unit id="2516" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>A sequence whose elements that are not also in <bpt id="p1">&lt;c&gt;</bpt>second<ept id="p1">&lt;/c&gt;</ept> will be returned.</source>
          <target state="translated">Uma sequência cujos elementos que não estão também em <bpt id="p1">&lt;c&gt;</bpt>segundo<ept id="p1">&lt;/c&gt;</ept> será retornada.</target>       </trans-unit>
        <trans-unit id="2517" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>A sequence whose elements that also occur in the first sequence will cause those elements to be removed from the returned sequence.</source>
          <target state="translated">Uma sequência cujos elementos que também ocorrem na primeira sequência fará com que esses elementos sejam removido da sequência retornada.</target>       </trans-unit>
        <trans-unit id="2518" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to compare values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> para comparar valores.</target>       </trans-unit>
        <trans-unit id="2519" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>Produces the set difference of two parallel sequences by using the specified <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to compare values.</source>
          <target state="translated">Produz a diferença de conjunto de duas sequências paralelas usando o <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> especificado para comparar os valores.</target>       </trans-unit>
        <trans-unit id="2520" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.First``1(System.Linq.ParallelQuery{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2521" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.First``1(System.Linq.ParallelQuery{``0})">
          <source>The sequence to return the first element of.</source>
          <target state="translated">A sequência da qual retornar o primeiro elemento.</target>       </trans-unit>
        <trans-unit id="2522" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.First``1(System.Linq.ParallelQuery{``0})">
          <source>Returns the first element of a parallel sequence.</source>
          <target state="translated">Retorna o primeiro elemento de uma sequência paralela.</target>       </trans-unit>
        <trans-unit id="2523" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.First``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2524" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.First``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>The sequence to return an element from.</source>
          <target state="translated">A sequência da qual retornar um elemento.</target>       </trans-unit>
        <trans-unit id="2525" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.First``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>A function to test each element for a condition.</source>
          <target state="translated">Uma função para testar cada elemento em relação a uma condição.</target>       </trans-unit>
        <trans-unit id="2526" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.First``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>Returns the first element in a parallel sequence that satisfies a specified condition.</source>
          <target state="translated">Retorna o primeiro elemento em uma sequência paralela que satisfaz uma condição especificada.</target>       </trans-unit>
        <trans-unit id="2527" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.FirstOrDefault``1(System.Linq.ParallelQuery{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2528" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.FirstOrDefault``1(System.Linq.ParallelQuery{``0})">
          <source>The sequence to return the first element of.</source>
          <target state="translated">A sequência da qual retornar o primeiro elemento.</target>       </trans-unit>
        <trans-unit id="2529" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.FirstOrDefault``1(System.Linq.ParallelQuery{``0})">
          <source>Returns the first element of a parallel sequence, or a default value if the sequence contains no elements.</source>
          <target state="translated">Retornará o primeiro elemento de uma sequência paralela ou um valor padrão, se a sequência não contiver elementos.</target>       </trans-unit>
        <trans-unit id="2530" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.FirstOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2531" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.FirstOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>The sequence to return an element from.</source>
          <target state="translated">A sequência da qual retornar um elemento.</target>       </trans-unit>
        <trans-unit id="2532" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.FirstOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>A function to test each element for a condition.</source>
          <target state="translated">Uma função para testar cada elemento em relação a uma condição.</target>       </trans-unit>
        <trans-unit id="2533" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.FirstOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>Returns the first element of the parallel sequence that satisfies a condition or a default value if no such element is found.</source>
          <target state="translated">Retorna o primeiro elemento da sequência paralela que satisfaz a uma condição ou um valor padrão, caso esse elemento não seja encontrado.</target>       </trans-unit>
        <trans-unit id="2534" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ForAll``1(System.Linq.ParallelQuery{``0},System.Action{``0})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2535" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ForAll``1(System.Linq.ParallelQuery{``0},System.Action{``0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Linq.ParallelQuery`1" /&gt;</ph> whose elements will be processed by <bpt id="p1">&lt;c&gt;</bpt>action<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Linq.ParallelQuery`1" /&gt;</ph> cujos elementos serão processados pela <bpt id="p1">&lt;c&gt;</bpt>ação<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2536" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ForAll``1(System.Linq.ParallelQuery{``0},System.Action{``0})">
          <source>An Action to invoke on each element.</source>
          <target state="translated">Uma Ação que será invocada em cada elemento.</target>       </trans-unit>
        <trans-unit id="2537" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ForAll``1(System.Linq.ParallelQuery{``0},System.Action{``0})">
          <source>Invokes in parallel the specified action for each element in the <ph id="ph1">&lt;paramref name="source" /&gt;</ph>.</source>
          <target state="translated">Invoca a ação especificada em paralelo para cada elemento no <ph id="ph1">&lt;paramref name="source" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2538" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2539" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo de chave retornada pelo <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2540" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>An OrderedParallelQuery{TSource}that contains elements to sort.</source>
          <target state="translated">Uma OrderedParallelQuery{TSource} que contém elementos a classificar.</target>       </trans-unit>
        <trans-unit id="2541" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>A function to extract a key from an element.</source>
          <target state="translated">Uma função para extrair uma chave de um elemento.</target>       </trans-unit>
        <trans-unit id="2542" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>Groups in parallel the elements of a sequence according to a specified key selector function.</source>
          <target state="translated">Agrupa em paralelo os elementos de uma sequência de acordo com uma função de seletor de chave especificada.</target>       </trans-unit>
        <trans-unit id="2543" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2544" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&amp;gt;</ph>.</source>
          <target state="translated">O tipo de chave retornada pelo <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&amp;gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2545" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Linq.OrderedParallelQuery`1" /&gt;</ph> that contains elements to sort.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Linq.OrderedParallelQuery`1" /&gt;</ph> que contém elementos a ser classificados.</target>       </trans-unit>
        <trans-unit id="2546" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A function to extract a key from an element.</source>
          <target state="translated">Uma função para extrair uma chave de um elemento.</target>       </trans-unit>
        <trans-unit id="2547" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph> to compare keys.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph> para comparar chaves.</target>       </trans-unit>
        <trans-unit id="2548" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>Groups in parallel the elements of a sequence according to a specified key selector function and compares the keys by using a specified <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph>.</source>
          <target state="translated">Agrupa em paralelo os elementos de uma sequência de acordo com uma função do seletor de chave especificada e compara as chaves usando um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="2549" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2550" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo de chave retornada pelo <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2551" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>The type of the elements in the <ph id="ph1">&lt;see cref="T:System.Linq.IGrouping`2" /&gt;</ph>.</source>
          <target state="translated">O tipo dos elementos no <ph id="ph1">&lt;see cref="T:System.Linq.IGrouping`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2552" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Linq.OrderedParallelQuery`1" /&gt;</ph> that contains elements to sort.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Linq.OrderedParallelQuery`1" /&gt;</ph> que contém elementos a ser classificados.</target>       </trans-unit>
        <trans-unit id="2553" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>A function to extract a key from an element.</source>
          <target state="translated">Uma função para extrair uma chave de um elemento.</target>       </trans-unit>
        <trans-unit id="2554" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>A function to map each source element to an element in an <ph id="ph1">&lt;see cref="T:System.Linq.IGrouping`2" /&gt;</ph>.</source>
          <target state="translated">Uma função para mapear cada elemento de origem para um elemento em um <ph id="ph1">&lt;see cref="T:System.Linq.IGrouping`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2555" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>Groups in parallel the elements of a sequence according to a specified key selector function and projects the elements for each group by using a specified function.</source>
          <target state="translated">Agrupa em paralelo os elementos de uma sequência de acordo com a função de seletor de chave especificada e projeta os elementos de cada grupo usando uma função especificada.</target>       </trans-unit>
        <trans-unit id="2556" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2557" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo de chave retornada pelo <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2558" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the elements in the IGrouping</source>
          <target state="translated">O tipo dos elementos de IGrouping</target>       </trans-unit>
        <trans-unit id="2559" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>An OrderedParallelQuery{TSource}that contains elements to sort.</source>
          <target state="translated">Uma OrderedParallelQuery{TSource} que contém elementos a classificar.</target>       </trans-unit>
        <trans-unit id="2560" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A function to extract a key from an element.</source>
          <target state="translated">Uma função para extrair uma chave de um elemento.</target>       </trans-unit>
        <trans-unit id="2561" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A function to map each source element to an element in an IGrouping.</source>
          <target state="translated">Uma função para mapear cada elemento de origem para um elemento em um IGrouping.</target>       </trans-unit>
        <trans-unit id="2562" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>An IComparer{TSource} to compare keys.</source>
          <target state="translated">Um IComparer{TSource} para comparar as chaves.</target>       </trans-unit>
        <trans-unit id="2563" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>Groups in parallel the elements of a sequence according to a key selector function.</source>
          <target state="translated">Agrupa em paralelo os elementos de uma sequência de acordo com uma função de seletor de chave.</target>       </trans-unit>
        <trans-unit id="2564" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The keys are compared by using a comparer and each group's elements are projected by using a specified function.</source>
          <target state="translated">As chaves são comparadas usando um comparador e os elementos de cada grupo são projetados usando uma função especificada.</target>       </trans-unit>
        <trans-unit id="2565" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2566" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo de chave retornada pelo <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2567" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})">
          <source>The type of the result value returned by <bpt id="p1">&lt;c&gt;</bpt>resultSelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo do valor de resultado retornado por <bpt id="p1">&lt;c&gt;</bpt>resultSelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2568" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})">
          <source>A sequence whose elements to group.</source>
          <target state="translated">A sequência cujos elementos agrupar.</target>       </trans-unit>
        <trans-unit id="2569" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})">
          <source>A function to extract the key for each element.</source>
          <target state="translated">Uma função para extrair a chave de cada elemento.</target>       </trans-unit>
        <trans-unit id="2570" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})">
          <source>A function to create a result value from each group.</source>
          <target state="translated">Uma função para criar um valor de resultado de cada grupo.</target>       </trans-unit>
        <trans-unit id="2571" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})">
          <source>Groups in parallel the elements of a sequence according to a specified key selector function and creates a result value from each group and its key.</source>
          <target state="translated">Agrupa em paralelo os elementos de uma sequência de acordo com uma função do seletor de chave especificada e cria um valor de resultado de cada grupo e sua chave.</target>       </trans-unit>
        <trans-unit id="2572" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2573" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo de chave retornada pelo <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2574" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the result value returned by <bpt id="p1">&lt;c&gt;</bpt>resultSelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo do valor de resultado retornado por <bpt id="p1">&lt;c&gt;</bpt>resultSelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2575" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A sequence whose elements to group.</source>
          <target state="translated">A sequência cujos elementos agrupar.</target>       </trans-unit>
        <trans-unit id="2576" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A function to extract the key for each element.</source>
          <target state="translated">Uma função para extrair a chave de cada elemento.</target>       </trans-unit>
        <trans-unit id="2577" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A function to create a result value from each group.</source>
          <target state="translated">Uma função para criar um valor de resultado de cada grupo.</target>       </trans-unit>
        <trans-unit id="2578" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to compare keys.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> para comparar chaves.</target>       </trans-unit>
        <trans-unit id="2579" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>Groups in parallel the elements of a sequence according to a specified key selector function and creates a result value from each group and its key.</source>
          <target state="translated">Agrupa em paralelo os elementos de uma sequência de acordo com uma função do seletor de chave especificada e cria um valor de resultado de cada grupo e sua chave.</target>       </trans-unit>
        <trans-unit id="2580" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The keys are compared by using a specified comparer.</source>
          <target state="translated">As chaves são comparadas usando um comparador especificado.</target>       </trans-unit>
        <trans-unit id="2581" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2582" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo de chave retornada pelo <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2583" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})">
          <source>The type of the elements in each IGrouping{TKey, TElement}.</source>
          <target state="translated">O tipo dos elementos em cada IGrouping {TKey, TElement}.</target>       </trans-unit>
        <trans-unit id="2584" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})">
          <source>The type of the result value returned by <bpt id="p1">&lt;c&gt;</bpt>resultSelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo do valor de resultado retornado por <bpt id="p1">&lt;c&gt;</bpt>resultSelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2585" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})">
          <source>A sequence whose elements to group.</source>
          <target state="translated">A sequência cujos elementos agrupar.</target>       </trans-unit>
        <trans-unit id="2586" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})">
          <source>A function to extract the key for each element.</source>
          <target state="translated">Uma função para extrair a chave de cada elemento.</target>       </trans-unit>
        <trans-unit id="2587" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})">
          <source>A function to map each source element to an element in an IGrouping<ph id="ph1">&amp;lt;</ph>TKey, TElement<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">Uma função para mapear cada elemento de origem para um elemento em um IGrouping<ph id="ph1">&amp;lt;</ph>TKey, TElement<ph id="ph2">&amp;gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2588" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})">
          <source>A function to create a result value from each group.</source>
          <target state="translated">Uma função para criar um valor de resultado de cada grupo.</target>       </trans-unit>
        <trans-unit id="2589" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})">
          <source>Groups in parallel the elements of a sequence according to a specified key selector function and creates a result value from each group and its key.</source>
          <target state="translated">Agrupa em paralelo os elementos de uma sequência de acordo com uma função do seletor de chave especificada e cria um valor de resultado de cada grupo e sua chave.</target>       </trans-unit>
        <trans-unit id="2590" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})">
          <source>The elements of each group are projected by using a specified function.</source>
          <target state="translated">Os elementos de cada grupo são projetados usando uma função especificada.</target>       </trans-unit>
        <trans-unit id="2591" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2592" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo de chave retornada pelo <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2593" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the elements in each IGrouping{TKey, TElement}.</source>
          <target state="translated">O tipo dos elementos em cada IGrouping {TKey, TElement}.</target>       </trans-unit>
        <trans-unit id="2594" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the result value returned by <bpt id="p1">&lt;c&gt;</bpt>resultSelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo do valor de resultado retornado por <bpt id="p1">&lt;c&gt;</bpt>resultSelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2595" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A sequence whose elements to group.</source>
          <target state="translated">A sequência cujos elementos agrupar.</target>       </trans-unit>
        <trans-unit id="2596" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A function to extract the key for each element.</source>
          <target state="translated">Uma função para extrair a chave de cada elemento.</target>       </trans-unit>
        <trans-unit id="2597" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A function to map each source element to an element in an IGrouping{Key, TElement}.</source>
          <target state="translated">Uma função para mapear cada elemento de origem para um elemento em um IGrouping{Key, TElement}.</target>       </trans-unit>
        <trans-unit id="2598" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A function to create a result value from each group.</source>
          <target state="translated">Uma função para criar um valor de resultado de cada grupo.</target>       </trans-unit>
        <trans-unit id="2599" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to compare keys.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> para comparar chaves.</target>       </trans-unit>
        <trans-unit id="2600" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})">
          <source>Groups the elements of a sequence according to a specified key selector function and creates a result value from each group and its key.</source>
          <target state="translated">Agrupa os elementos de uma sequência de acordo com uma função do seletor de chave especificada e cria um valor de resultado de cada grupo e sua chave.</target>       </trans-unit>
        <trans-unit id="2601" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})">
          <source>Key values are compared by using a specified comparer, and the elements of each group are projected by using a specified function.</source>
          <target state="translated">Os valores da chave são comparados usando um comparador especificado e os elementos de cada grupo são projetados usando uma função especificada.</target>       </trans-unit>
        <trans-unit id="2602" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
          <source>This type parameter is not used.</source>
          <target state="translated">Este parâmetro de tipo não é usado.</target>       </trans-unit>
        <trans-unit id="2603" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
          <source>This type parameter is not used.</source>
          <target state="translated">Este parâmetro de tipo não é usado.</target>       </trans-unit>
        <trans-unit id="2604" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
          <source>This type parameter is not used.</source>
          <target state="translated">Este parâmetro de tipo não é usado.</target>       </trans-unit>
        <trans-unit id="2605" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
          <source>This type parameter is not used.</source>
          <target state="translated">Este parâmetro de tipo não é usado.</target>       </trans-unit>
        <trans-unit id="2606" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
          <source>This parameter is not used.</source>
          <target state="translated">Este parâmetro não é usado.</target>       </trans-unit>
        <trans-unit id="2607" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
          <source>This parameter is not used.</source>
          <target state="translated">Este parâmetro não é usado.</target>       </trans-unit>
        <trans-unit id="2608" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
          <source>This parameter is not used.</source>
          <target state="translated">Este parâmetro não é usado.</target>       </trans-unit>
        <trans-unit id="2609" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
          <source>This parameter is not used.</source>
          <target state="translated">Este parâmetro não é usado.</target>       </trans-unit>
        <trans-unit id="2610" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
          <source>This parameter is not used.</source>
          <target state="translated">Este parâmetro não é usado.</target>       </trans-unit>
        <trans-unit id="2611" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
          <source>This GroupJoin overload should never be called.</source>
          <target state="translated">Essa sobrecarga GroupJoin nunca deve ser chamada.</target>       </trans-unit>
        <trans-unit id="2612" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
          <source>This method is marked as obsolete and always throws <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> when called.</source>
          <target state="translated">Esse método está marcado como obsoleto e sempre gera <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> quando chamado.</target>       </trans-unit>
        <trans-unit id="2613" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>This type parameter is not used.</source>
          <target state="translated">Este parâmetro de tipo não é usado.</target>       </trans-unit>
        <trans-unit id="2614" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>This type parameter is not used.</source>
          <target state="translated">Este parâmetro de tipo não é usado.</target>       </trans-unit>
        <trans-unit id="2615" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>This type parameter is not used.</source>
          <target state="translated">Este parâmetro de tipo não é usado.</target>       </trans-unit>
        <trans-unit id="2616" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>This type parameter is not used.</source>
          <target state="translated">Este parâmetro de tipo não é usado.</target>       </trans-unit>
        <trans-unit id="2617" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>This parameter is not used.</source>
          <target state="translated">Este parâmetro não é usado.</target>       </trans-unit>
        <trans-unit id="2618" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>This parameter is not used.</source>
          <target state="translated">Este parâmetro não é usado.</target>       </trans-unit>
        <trans-unit id="2619" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>This parameter is not used.</source>
          <target state="translated">Este parâmetro não é usado.</target>       </trans-unit>
        <trans-unit id="2620" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>This parameter is not used.</source>
          <target state="translated">Este parâmetro não é usado.</target>       </trans-unit>
        <trans-unit id="2621" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>This parameter is not used.</source>
          <target state="translated">Este parâmetro não é usado.</target>       </trans-unit>
        <trans-unit id="2622" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>This parameter is not used.</source>
          <target state="translated">Este parâmetro não é usado.</target>       </trans-unit>
        <trans-unit id="2623" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>This GroupJoin overload should never be called.</source>
          <target state="translated">Essa sobrecarga GroupJoin nunca deve ser chamada.</target>       </trans-unit>
        <trans-unit id="2624" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>This method is marked as obsolete and always throws <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> when called.</source>
          <target state="translated">Esse método está marcado como obsoleto e sempre gera <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> quando chamado.</target>       </trans-unit>
        <trans-unit id="2625" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
          <source>The type of the elements of the second sequence.</source>
          <target state="translated">O tipo dos elementos da segunda sequência.</target>       </trans-unit>
        <trans-unit id="2626" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
          <source>The type of the elements of the first sequence.</source>
          <target state="translated">O tipo dos elementos da primeira sequência.</target>       </trans-unit>
        <trans-unit id="2627" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
          <source>The type of the keys returned by the key selector functions.</source>
          <target state="translated">O tipo das chaves retornadas pelas funções de seletor de chave.</target>       </trans-unit>
        <trans-unit id="2628" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
          <source>The type of the result elements.</source>
          <target state="translated">O tipo dos elementos de resultado.</target>       </trans-unit>
        <trans-unit id="2629" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
          <source>The first sequence to join.</source>
          <target state="translated">A primeira sequência a ser ingressada.</target>       </trans-unit>
        <trans-unit id="2630" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
          <source>The sequence to join to the first sequence.</source>
          <target state="translated">A sequência a ser ingressada à primeira sequência.</target>       </trans-unit>
        <trans-unit id="2631" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
          <source>A function to extract the join key from each element of the first sequence.</source>
          <target state="translated">Uma função para extrair a chave de junção de cada elemento da primeira sequência.</target>       </trans-unit>
        <trans-unit id="2632" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
          <source>A function to extract the join key from each element of the second sequence.</source>
          <target state="translated">Uma função para extrair a chave de junção de cada elemento da segunda sequência.</target>       </trans-unit>
        <trans-unit id="2633" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
          <source>A function to create a result element from an element from the first sequence and a collection of matching elements from the second sequence.</source>
          <target state="translated">Uma função para criar um elemento de resultado de um elemento da primeira sequência e uma coleção de elementos correspondentes da segunda sequência.</target>       </trans-unit>
        <trans-unit id="2634" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
          <source>Correlates in parallel the elements of two sequences based on equality of keys and groups the results.</source>
          <target state="translated">Correlaciona em paralelo os elementos de duas sequências com base na igualdade de chaves e agrupa os resultados.</target>       </trans-unit>
        <trans-unit id="2635" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
          <source>The default equality comparer is used to compare keys.</source>
          <target state="translated">O comparador de igualdade padrão é usado para comparar chaves.</target>       </trans-unit>
        <trans-unit id="2636" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The type of the elements of the second sequence.</source>
          <target state="translated">O tipo dos elementos da segunda sequência.</target>       </trans-unit>
        <trans-unit id="2637" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The type of the elements of the first sequence.</source>
          <target state="translated">O tipo dos elementos da primeira sequência.</target>       </trans-unit>
        <trans-unit id="2638" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The type of the keys returned by the key selector functions.</source>
          <target state="translated">O tipo das chaves retornadas pelas funções de seletor de chave.</target>       </trans-unit>
        <trans-unit id="2639" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The type of the result elements.</source>
          <target state="translated">O tipo dos elementos de resultado.</target>       </trans-unit>
        <trans-unit id="2640" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The first sequence to join.</source>
          <target state="translated">A primeira sequência a ser ingressada.</target>       </trans-unit>
        <trans-unit id="2641" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The sequence to join to the first sequence.</source>
          <target state="translated">A sequência a ser ingressada à primeira sequência.</target>       </trans-unit>
        <trans-unit id="2642" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>A function to extract the join key from each element of the first sequence.</source>
          <target state="translated">Uma função para extrair a chave de junção de cada elemento da primeira sequência.</target>       </trans-unit>
        <trans-unit id="2643" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>A function to extract the join key from each element of the second sequence.</source>
          <target state="translated">Uma função para extrair a chave de junção de cada elemento da segunda sequência.</target>       </trans-unit>
        <trans-unit id="2644" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>A function to create a result element from an element from the first sequence and a collection of matching elements from the second sequence.</source>
          <target state="translated">Uma função para criar um elemento de resultado de um elemento da primeira sequência e uma coleção de elementos correspondentes da segunda sequência.</target>       </trans-unit>
        <trans-unit id="2645" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to hash and compare keys.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> para executar hash e comparar chaves.</target>       </trans-unit>
        <trans-unit id="2646" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>Correlates in parallel the elements of two sequences based on key equality and groups the results.</source>
          <target state="translated">Correlaciona em paralelo os elementos de duas sequências com base na igualdade de chaves e agrupa os resultados.</target>       </trans-unit>
        <trans-unit id="2647" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>A specified <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> is used to compare keys.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> especificado é usado para comparar chaves.</target>       </trans-unit>
        <trans-unit id="2648" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>This type parameter is not used.</source>
          <target state="translated">Este parâmetro de tipo não é usado.</target>       </trans-unit>
        <trans-unit id="2649" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>This parameter is not used.</source>
          <target state="translated">Este parâmetro não é usado.</target>       </trans-unit>
        <trans-unit id="2650" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>This parameter is not used.</source>
          <target state="translated">Este parâmetro não é usado.</target>       </trans-unit>
        <trans-unit id="2651" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>This Intersect overload should never be called.</source>
          <target state="translated">Essa sobrecarga Intersect nunca deve ser chamada.</target>       </trans-unit>
        <trans-unit id="2652" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>This method is marked as obsolete and always throws <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> when called.</source>
          <target state="translated">Esse método está marcado como obsoleto e sempre gera <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> quando chamado.</target>       </trans-unit>
        <trans-unit id="2653" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>This type parameter is not used.</source>
          <target state="translated">Este parâmetro de tipo não é usado.</target>       </trans-unit>
        <trans-unit id="2654" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>This parameter is not used.</source>
          <target state="translated">Este parâmetro não é usado.</target>       </trans-unit>
        <trans-unit id="2655" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>This parameter is not used.</source>
          <target state="translated">Este parâmetro não é usado.</target>       </trans-unit>
        <trans-unit id="2656" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>This parameter is not used.</source>
          <target state="translated">Este parâmetro não é usado.</target>       </trans-unit>
        <trans-unit id="2657" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>This Intersect overload should never be called.</source>
          <target state="translated">Essa sobrecarga Intersect nunca deve ser chamada.</target>       </trans-unit>
        <trans-unit id="2658" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>This method is marked as obsolete and always throws <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> when called.</source>
          <target state="translated">Esse método está marcado como obsoleto e sempre gera <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> quando chamado.</target>       </trans-unit>
        <trans-unit id="2659" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
          <source>The type of the elements of the input sequences.</source>
          <target state="translated">O tipo dos elementos das sequências de entrada.</target>       </trans-unit>
        <trans-unit id="2660" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
          <source>A sequence whose distinct elements that also appear in <bpt id="p1">&lt;c&gt;</bpt>second<ept id="p1">&lt;/c&gt;</ept> will be returned.</source>
          <target state="translated">A sequência cujos elementos distintos que também são exibidos em <bpt id="p1">&lt;c&gt;</bpt>segundo<ept id="p1">&lt;/c&gt;</ept> será retornada.</target>       </trans-unit>
        <trans-unit id="2661" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
          <source>A sequence whose distinct elements that also appear in the first sequence will be returned.</source>
          <target state="translated">Uma sequência cujos elementos distintos que também são exibidos na primeira sequência serão retornados.</target>       </trans-unit>
        <trans-unit id="2662" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
          <source>Produces the set intersection of two parallel sequences by using the default equality comparer to compare values.</source>
          <target state="translated">Produz a interseção de conjunto de duas sequências em paralelo usando o comparador de igualdade padrão para comparar os valores.</target>       </trans-unit>
        <trans-unit id="2663" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The type of the elements of the input sequences.</source>
          <target state="translated">O tipo dos elementos das sequências de entrada.</target>       </trans-unit>
        <trans-unit id="2664" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>A sequence whose distinct elements that also appear in <bpt id="p1">&lt;c&gt;</bpt>second<ept id="p1">&lt;/c&gt;</ept> will be returned.</source>
          <target state="translated">A sequência cujos elementos distintos que também são exibidos em <bpt id="p1">&lt;c&gt;</bpt>segundo<ept id="p1">&lt;/c&gt;</ept> será retornada.</target>       </trans-unit>
        <trans-unit id="2665" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>A sequence whose distinct elements that also appear in the first sequence will be returned.</source>
          <target state="translated">Uma sequência cujos elementos distintos que também são exibidos na primeira sequência serão retornados.</target>       </trans-unit>
        <trans-unit id="2666" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to compare values.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> para comparar valores.</target>       </trans-unit>
        <trans-unit id="2667" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>Produces the set intersection of two parallel sequences by using the specified IEqualityComparer{T} to compare values.</source>
          <target state="translated">Produz a interseção de conjunto de duas sequências paralelas usando o IEqualityComparer{T} especificado para comparar os valores.</target>       </trans-unit>
        <trans-unit id="2668" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
          <source>This type parameter is not used.</source>
          <target state="translated">Este parâmetro de tipo não é usado.</target>       </trans-unit>
        <trans-unit id="2669" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
          <source>This type parameter is not used.</source>
          <target state="translated">Este parâmetro de tipo não é usado.</target>       </trans-unit>
        <trans-unit id="2670" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
          <source>This type parameter is not used.</source>
          <target state="translated">Este parâmetro de tipo não é usado.</target>       </trans-unit>
        <trans-unit id="2671" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
          <source>This type parameter is not used.</source>
          <target state="translated">Este parâmetro de tipo não é usado.</target>       </trans-unit>
        <trans-unit id="2672" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
          <source>This parameter is not used.</source>
          <target state="translated">Este parâmetro não é usado.</target>       </trans-unit>
        <trans-unit id="2673" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
          <source>This parameter is not used.</source>
          <target state="translated">Este parâmetro não é usado.</target>       </trans-unit>
        <trans-unit id="2674" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
          <source>This parameter is not used.</source>
          <target state="translated">Este parâmetro não é usado.</target>       </trans-unit>
        <trans-unit id="2675" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
          <source>This parameter is not used.</source>
          <target state="translated">Este parâmetro não é usado.</target>       </trans-unit>
        <trans-unit id="2676" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
          <source>This parameter is not used.</source>
          <target state="translated">Este parâmetro não é usado.</target>       </trans-unit>
        <trans-unit id="2677" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
          <source>This Join overload should never be called.</source>
          <target state="translated">Essa sobrecarga Join nunca deve ser chamada.</target>       </trans-unit>
        <trans-unit id="2678" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
          <source>This method is marked as obsolete and always throws <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> when invoked.</source>
          <target state="translated">Esse método está marcado como obsoleto e sempre gera <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> quando invocado.</target>       </trans-unit>
        <trans-unit id="2679" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>This type parameter is not used.</source>
          <target state="translated">Este parâmetro de tipo não é usado.</target>       </trans-unit>
        <trans-unit id="2680" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>This type parameter is not used.</source>
          <target state="translated">Este parâmetro de tipo não é usado.</target>       </trans-unit>
        <trans-unit id="2681" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>This type parameter is not used.</source>
          <target state="translated">Este parâmetro de tipo não é usado.</target>       </trans-unit>
        <trans-unit id="2682" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>This type parameter is not used.</source>
          <target state="translated">Este parâmetro de tipo não é usado.</target>       </trans-unit>
        <trans-unit id="2683" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>This parameter is not used.</source>
          <target state="translated">Este parâmetro não é usado.</target>       </trans-unit>
        <trans-unit id="2684" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>This parameter is not used.</source>
          <target state="translated">Este parâmetro não é usado.</target>       </trans-unit>
        <trans-unit id="2685" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>This parameter is not used.</source>
          <target state="translated">Este parâmetro não é usado.</target>       </trans-unit>
        <trans-unit id="2686" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>This parameter is not used.</source>
          <target state="translated">Este parâmetro não é usado.</target>       </trans-unit>
        <trans-unit id="2687" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>This parameter is not used.</source>
          <target state="translated">Este parâmetro não é usado.</target>       </trans-unit>
        <trans-unit id="2688" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>This parameter is not used.</source>
          <target state="translated">Este parâmetro não é usado.</target>       </trans-unit>
        <trans-unit id="2689" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>This Join overload should never be called.</source>
          <target state="translated">Essa sobrecarga Join nunca deve ser chamada.</target>       </trans-unit>
        <trans-unit id="2690" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>This method is marked as obsolete and always throws <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> when invoked.</source>
          <target state="translated">Esse método está marcado como obsoleto e sempre gera <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> quando invocado.</target>       </trans-unit>
        <trans-unit id="2691" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
          <source>The type of the elements of the second sequence.</source>
          <target state="translated">O tipo dos elementos da segunda sequência.</target>       </trans-unit>
        <trans-unit id="2692" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
          <source>The type of the elements of the first sequence.</source>
          <target state="translated">O tipo dos elementos da primeira sequência.</target>       </trans-unit>
        <trans-unit id="2693" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
          <source>The type of the keys returned by the key selector functions.</source>
          <target state="translated">O tipo das chaves retornadas pelas funções de seletor de chave.</target>       </trans-unit>
        <trans-unit id="2694" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
          <source>The type of the result elements.</source>
          <target state="translated">O tipo dos elementos de resultado.</target>       </trans-unit>
        <trans-unit id="2695" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
          <source>The first sequence to join.</source>
          <target state="translated">A primeira sequência a ser ingressada.</target>       </trans-unit>
        <trans-unit id="2696" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
          <source>The sequence to join to the first sequence.</source>
          <target state="translated">A sequência a ser ingressada à primeira sequência.</target>       </trans-unit>
        <trans-unit id="2697" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
          <source>A function to extract the join key from each element of the first sequence.</source>
          <target state="translated">Uma função para extrair a chave de junção de cada elemento da primeira sequência.</target>       </trans-unit>
        <trans-unit id="2698" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
          <source>A function to extract the join key from each element of the second sequence.</source>
          <target state="translated">Uma função para extrair a chave de junção de cada elemento da segunda sequência.</target>       </trans-unit>
        <trans-unit id="2699" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
          <source>A function to create a result element from two matching elements.</source>
          <target state="translated">Uma função para criar um elemento de resultado de dois elementos correspondentes.</target>       </trans-unit>
        <trans-unit id="2700" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
          <source>Correlates in parallel the elements of two sequences based on matching keys.</source>
          <target state="translated">Correlaciona em paralelo os elementos de duas sequências com base em chaves de correspondência.</target>       </trans-unit>
        <trans-unit id="2701" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
          <source>The default equality comparer is used to compare keys.</source>
          <target state="translated">O comparador de igualdade padrão é usado para comparar chaves.</target>       </trans-unit>
        <trans-unit id="2702" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The type of the elements of the second sequence.</source>
          <target state="translated">O tipo dos elementos da segunda sequência.</target>       </trans-unit>
        <trans-unit id="2703" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The type of the elements of the first sequence.</source>
          <target state="translated">O tipo dos elementos da primeira sequência.</target>       </trans-unit>
        <trans-unit id="2704" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The type of the keys returned by the key selector functions.</source>
          <target state="translated">O tipo das chaves retornadas pelas funções de seletor de chave.</target>       </trans-unit>
        <trans-unit id="2705" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The type of the result elements.</source>
          <target state="translated">O tipo dos elementos de resultado.</target>       </trans-unit>
        <trans-unit id="2706" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The first sequence to join.</source>
          <target state="translated">A primeira sequência a ser ingressada.</target>       </trans-unit>
        <trans-unit id="2707" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The sequence to join to the first sequence.</source>
          <target state="translated">A sequência a ser ingressada à primeira sequência.</target>       </trans-unit>
        <trans-unit id="2708" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>A function to extract the join key from each element of the first sequence.</source>
          <target state="translated">Uma função para extrair a chave de junção de cada elemento da primeira sequência.</target>       </trans-unit>
        <trans-unit id="2709" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>A function to extract the join key from each element of the second sequence.</source>
          <target state="translated">Uma função para extrair a chave de junção de cada elemento da segunda sequência.</target>       </trans-unit>
        <trans-unit id="2710" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>A function to create a result element from two matching elements.</source>
          <target state="translated">Uma função para criar um elemento de resultado de dois elementos correspondentes.</target>       </trans-unit>
        <trans-unit id="2711" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to hash and compare keys.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> para executar hash e comparar chaves.</target>       </trans-unit>
        <trans-unit id="2712" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>Correlates in parallel the elements of two sequences based on matching keys.</source>
          <target state="translated">Correlaciona em paralelo os elementos de duas sequências com base em chaves de correspondência.</target>       </trans-unit>
        <trans-unit id="2713" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>A specified <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> is used to compare keys.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> especificado é usado para comparar chaves.</target>       </trans-unit>
        <trans-unit id="2714" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Last``1(System.Linq.ParallelQuery{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2715" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Last``1(System.Linq.ParallelQuery{``0})">
          <source>The sequence to return the last element from.</source>
          <target state="translated">A sequência da qual retornar o último elemento.</target>       </trans-unit>
        <trans-unit id="2716" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Last``1(System.Linq.ParallelQuery{``0})">
          <source>Returns the last element of a parallel sequence.</source>
          <target state="translated">Retorna o último elemento de uma sequência paralela.</target>       </trans-unit>
        <trans-unit id="2717" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Last``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2718" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Last``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>The sequence to return an element from.</source>
          <target state="translated">A sequência da qual retornar um elemento.</target>       </trans-unit>
        <trans-unit id="2719" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Last``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>A function to test each element for a condition.</source>
          <target state="translated">Uma função para testar cada elemento em relação a uma condição.</target>       </trans-unit>
        <trans-unit id="2720" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Last``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>Returns the last element of a parallel sequence that satisfies a specified condition.</source>
          <target state="translated">Retorna o último elemento de uma sequência paralela que satisfaz a uma condição especificada.</target>       </trans-unit>
        <trans-unit id="2721" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.LastOrDefault``1(System.Linq.ParallelQuery{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2722" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.LastOrDefault``1(System.Linq.ParallelQuery{``0})">
          <source>The sequence to return an element from.</source>
          <target state="translated">A sequência da qual retornar um elemento.</target>       </trans-unit>
        <trans-unit id="2723" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.LastOrDefault``1(System.Linq.ParallelQuery{``0})">
          <source>Returns the last element of a parallel sequence, or a default value if the sequence contains no elements.</source>
          <target state="translated">Retornará o último elemento de uma sequência paralela ou um valor padrão, se a sequência não contiver elementos.</target>       </trans-unit>
        <trans-unit id="2724" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.LastOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2725" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.LastOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>The sequence to return an element from.</source>
          <target state="translated">A sequência da qual retornar um elemento.</target>       </trans-unit>
        <trans-unit id="2726" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.LastOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>A function to test each element for a condition.</source>
          <target state="translated">Uma função para testar cada elemento em relação a uma condição.</target>       </trans-unit>
        <trans-unit id="2727" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.LastOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>Returns the last element of a parallel sequence that satisfies a condition, or a default value if no such element is found.</source>
          <target state="translated">Retorna o último elemento de uma sequência em paralelo que satisfaz a uma condição ou um valor padrão, caso esse elemento não seja encontrado.</target>       </trans-unit>
        <trans-unit id="2728" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.LongCount``1(System.Linq.ParallelQuery{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2729" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.LongCount``1(System.Linq.ParallelQuery{``0})">
          <source>A sequence that contains elements to be counted.</source>
          <target state="translated">Uma sequência que contém os elementos a serem contados.</target>       </trans-unit>
        <trans-unit id="2730" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.LongCount``1(System.Linq.ParallelQuery{``0})">
          <source>Returns an Int64 that represents the total number of elements in a parallel sequence.</source>
          <target state="translated">Retorna um Int64 que representa o número total de elementos em uma sequência paralela.</target>       </trans-unit>
        <trans-unit id="2731" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.LongCount``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2732" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.LongCount``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>A sequence that contains elements to be counted.</source>
          <target state="translated">Uma sequência que contém os elementos a serem contados.</target>       </trans-unit>
        <trans-unit id="2733" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.LongCount``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>A function to test each element for a condition.</source>
          <target state="translated">Uma função para testar cada elemento em relação a uma condição.</target>       </trans-unit>
        <trans-unit id="2734" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.LongCount``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>Returns an Int64 that represents how many elements in a parallel sequence satisfy a condition.</source>
          <target state="translated">Retorna um Int64 que representa quantos elementos em uma sequência paralela satisfazem a uma condição.</target>       </trans-unit>
        <trans-unit id="2735" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Decimal})">
          <source>A sequence of values to determine the maximum value of.</source>
          <target state="translated">Uma sequência de valores para determinação do valor máximo.</target>       </trans-unit>
        <trans-unit id="2736" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Decimal})">
          <source>Returns the maximum value in a parallel sequence of values.</source>
          <target state="translated">Retorna o valor máximo em uma sequência paralela de valores.</target>       </trans-unit>
        <trans-unit id="2737" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Double})">
          <source>A sequence of values to determine the maximum value of.</source>
          <target state="translated">Uma sequência de valores para determinação do valor máximo.</target>       </trans-unit>
        <trans-unit id="2738" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Double})">
          <source>Returns the maximum value in a parallel sequence of values.</source>
          <target state="translated">Retorna o valor máximo em uma sequência paralela de valores.</target>       </trans-unit>
        <trans-unit id="2739" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Int32})">
          <source>A sequence of values to determine the maximum value of.</source>
          <target state="translated">Uma sequência de valores para determinação do valor máximo.</target>       </trans-unit>
        <trans-unit id="2740" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Int32})">
          <source>Returns the maximum value in a parallel sequence of values.</source>
          <target state="translated">Retorna o valor máximo em uma sequência paralela de valores.</target>       </trans-unit>
        <trans-unit id="2741" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Int64})">
          <source>A sequence of values to determine the maximum value of.</source>
          <target state="translated">Uma sequência de valores para determinação do valor máximo.</target>       </trans-unit>
        <trans-unit id="2742" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Int64})">
          <source>Returns the maximum value in a parallel sequence of values.</source>
          <target state="translated">Retorna o valor máximo em uma sequência paralela de valores.</target>       </trans-unit>
        <trans-unit id="2743" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})">
          <source>A sequence of values to determine the maximum value of.</source>
          <target state="translated">Uma sequência de valores para determinação do valor máximo.</target>       </trans-unit>
        <trans-unit id="2744" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})">
          <source>Returns the maximum value in a parallel sequence of values.</source>
          <target state="translated">Retorna o valor máximo em uma sequência paralela de valores.</target>       </trans-unit>
        <trans-unit id="2745" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Double}})">
          <source>A sequence of values to determine the maximum value of.</source>
          <target state="translated">Uma sequência de valores para determinação do valor máximo.</target>       </trans-unit>
        <trans-unit id="2746" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Double}})">
          <source>Returns the maximum value in a parallel sequence of values.</source>
          <target state="translated">Retorna o valor máximo em uma sequência paralela de valores.</target>       </trans-unit>
        <trans-unit id="2747" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Int32}})">
          <source>A sequence of values to determine the maximum value of.</source>
          <target state="translated">Uma sequência de valores para determinação do valor máximo.</target>       </trans-unit>
        <trans-unit id="2748" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Int32}})">
          <source>Returns the maximum value in a parallel sequence of values.</source>
          <target state="translated">Retorna o valor máximo em uma sequência paralela de valores.</target>       </trans-unit>
        <trans-unit id="2749" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Int64}})">
          <source>A sequence of values to determine the maximum value of.</source>
          <target state="translated">Uma sequência de valores para determinação do valor máximo.</target>       </trans-unit>
        <trans-unit id="2750" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Int64}})">
          <source>Returns the maximum value in a parallel sequence of values.</source>
          <target state="translated">Retorna o valor máximo em uma sequência paralela de valores.</target>       </trans-unit>
        <trans-unit id="2751" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Single}})">
          <source>A sequence of values to determine the maximum value of.</source>
          <target state="translated">Uma sequência de valores para determinação do valor máximo.</target>       </trans-unit>
        <trans-unit id="2752" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Single}})">
          <source>Returns the maximum value in a parallel sequence of values.</source>
          <target state="translated">Retorna o valor máximo em uma sequência paralela de valores.</target>       </trans-unit>
        <trans-unit id="2753" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Single})">
          <source>A sequence of values to determine the maximum value of.</source>
          <target state="translated">Uma sequência de valores para determinação do valor máximo.</target>       </trans-unit>
        <trans-unit id="2754" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Single})">
          <source>Returns the maximum value in a parallel sequence of values.</source>
          <target state="translated">Retorna o valor máximo em uma sequência paralela de valores.</target>       </trans-unit>
        <trans-unit id="2755" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0})">
          <source>The type of elements in the source sequence.</source>
          <target state="translated">O tipo dos elementos na sequência de origem.</target>       </trans-unit>
        <trans-unit id="2756" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0})">
          <source>A sequence of values to determine the maximum value of.</source>
          <target state="translated">Uma sequência de valores para determinação do valor máximo.</target>       </trans-unit>
        <trans-unit id="2757" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0})">
          <source>Returns the maximum value in a parallel sequence of values.</source>
          <target state="translated">Retorna o valor máximo em uma sequência paralela de valores.</target>       </trans-unit>
        <trans-unit id="2758" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2759" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
          <source>A sequence of values to determine the maximum value of.</source>
          <target state="translated">Uma sequência de valores para determinação do valor máximo.</target>       </trans-unit>
        <trans-unit id="2760" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Uma função de transformação a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="2761" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
          <source>Invokes in parallel a transform function on each element of a sequence and returns the maximum value.</source>
          <target state="translated">Invoca em paralelo uma função de transformação em cada elemento de uma sequência e retorna o valor máximo.</target>       </trans-unit>
        <trans-unit id="2762" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2763" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
          <source>A sequence of values to determine the maximum value of.</source>
          <target state="translated">Uma sequência de valores para determinação do valor máximo.</target>       </trans-unit>
        <trans-unit id="2764" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Uma função de transformação a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="2765" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
          <source>Invokes in parallel a transform function on each element of a sequence and returns the maximum value.</source>
          <target state="translated">Invoca em paralelo uma função de transformação em cada elemento de uma sequência e retorna o valor máximo.</target>       </trans-unit>
        <trans-unit id="2766" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2767" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
          <source>A sequence of values to determine the maximum value of.</source>
          <target state="translated">Uma sequência de valores para determinação do valor máximo.</target>       </trans-unit>
        <trans-unit id="2768" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Uma função de transformação a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="2769" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
          <source>Invokes in parallel a transform function on each element of a sequence and returns the maximum value.</source>
          <target state="translated">Invoca em paralelo uma função de transformação em cada elemento de uma sequência e retorna o valor máximo.</target>       </trans-unit>
        <trans-unit id="2770" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2771" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
          <source>A sequence of values to determine the maximum value of.</source>
          <target state="translated">Uma sequência de valores para determinação do valor máximo.</target>       </trans-unit>
        <trans-unit id="2772" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Uma função de transformação a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="2773" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
          <source>Invokes in parallel a transform function on each element of a sequence and returns the maximum value.</source>
          <target state="translated">Invoca em paralelo uma função de transformação em cada elemento de uma sequência e retorna o valor máximo.</target>       </trans-unit>
        <trans-unit id="2774" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2775" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
          <source>A sequence of values to determine the maximum value of.</source>
          <target state="translated">Uma sequência de valores para determinação do valor máximo.</target>       </trans-unit>
        <trans-unit id="2776" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Uma função de transformação a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="2777" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
          <source>Invokes in parallel a transform function on each element of a sequence and returns the maximum value.</source>
          <target state="translated">Invoca em paralelo uma função de transformação em cada elemento de uma sequência e retorna o valor máximo.</target>       </trans-unit>
        <trans-unit id="2778" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2779" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
          <source>A sequence of values to determine the maximum value of.</source>
          <target state="translated">Uma sequência de valores para determinação do valor máximo.</target>       </trans-unit>
        <trans-unit id="2780" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Uma função de transformação a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="2781" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
          <source>Invokes in parallel a transform function on each element of a sequence and returns the maximum value.</source>
          <target state="translated">Invoca em paralelo uma função de transformação em cada elemento de uma sequência e retorna o valor máximo.</target>       </trans-unit>
        <trans-unit id="2782" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2783" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
          <source>A sequence of values to determine the maximum value of.</source>
          <target state="translated">Uma sequência de valores para determinação do valor máximo.</target>       </trans-unit>
        <trans-unit id="2784" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Uma função de transformação a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="2785" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
          <source>Invokes in parallel a transform function on each element of a sequence and returns the maximum value.</source>
          <target state="translated">Invoca em paralelo uma função de transformação em cada elemento de uma sequência e retorna o valor máximo.</target>       </trans-unit>
        <trans-unit id="2786" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2787" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
          <source>A sequence of values to determine the maximum value of.</source>
          <target state="translated">Uma sequência de valores para determinação do valor máximo.</target>       </trans-unit>
        <trans-unit id="2788" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Uma função de transformação a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="2789" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
          <source>Invokes in parallel a transform function on each element of a sequence and returns the maximum value.</source>
          <target state="translated">Invoca em paralelo uma função de transformação em cada elemento de uma sequência e retorna o valor máximo.</target>       </trans-unit>
        <trans-unit id="2790" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2791" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
          <source>A sequence of values to determine the maximum value of.</source>
          <target state="translated">Uma sequência de valores para determinação do valor máximo.</target>       </trans-unit>
        <trans-unit id="2792" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Uma função de transformação a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="2793" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
          <source>Invokes in parallel a transform function on each element of a sequence and returns the maximum value.</source>
          <target state="translated">Invoca em paralelo uma função de transformação em cada elemento de uma sequência e retorna o valor máximo.</target>       </trans-unit>
        <trans-unit id="2794" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2795" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
          <source>A sequence of values to determine the maximum value of.</source>
          <target state="translated">Uma sequência de valores para determinação do valor máximo.</target>       </trans-unit>
        <trans-unit id="2796" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Uma função de transformação a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="2797" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
          <source>Invokes in parallel a transform function on each element of a sequence and returns the maximum value.</source>
          <target state="translated">Invoca em paralelo uma função de transformação em cada elemento de uma sequência e retorna o valor máximo.</target>       </trans-unit>
        <trans-unit id="2798" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Max``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2799" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Max``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>The type of the value returned by <bpt id="p1">&lt;c&gt;</bpt>selector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo do valor retornado por <bpt id="p1">&lt;c&gt;</bpt>seletor<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2800" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>A sequence of values to determine the maximum value of.</source>
          <target state="translated">Uma sequência de valores para determinação do valor máximo.</target>       </trans-unit>
        <trans-unit id="2801" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Uma função de transformação a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="2802" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>Invokes in parallel a transform function on each element of a sequence and returns the maximum value.</source>
          <target state="translated">Invoca em paralelo uma função de transformação em cada elemento de uma sequência e retorna o valor máximo.</target>       </trans-unit>
        <trans-unit id="2803" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Decimal})">
          <source>A sequence of values to determine the minimum value of.</source>
          <target state="translated">Uma sequência de valores para determinação do valor mínimo.</target>       </trans-unit>
        <trans-unit id="2804" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Decimal})">
          <source>Returns the minimum value in a parallel sequence of values.</source>
          <target state="translated">Retorna o valor mínimo em uma sequência paralela de valores.</target>       </trans-unit>
        <trans-unit id="2805" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Double})">
          <source>A sequence of values to determine the minimum value of.</source>
          <target state="translated">Uma sequência de valores para determinação do valor mínimo.</target>       </trans-unit>
        <trans-unit id="2806" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Double})">
          <source>Returns the minimum value in a parallel sequence of values.</source>
          <target state="translated">Retorna o valor mínimo em uma sequência paralela de valores.</target>       </trans-unit>
        <trans-unit id="2807" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Int32})">
          <source>A sequence of values to determine the minimum value of.</source>
          <target state="translated">Uma sequência de valores para determinação do valor mínimo.</target>       </trans-unit>
        <trans-unit id="2808" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Int32})">
          <source>Returns the minimum value in a parallel sequence of values.</source>
          <target state="translated">Retorna o valor mínimo em uma sequência paralela de valores.</target>       </trans-unit>
        <trans-unit id="2809" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Int64})">
          <source>A sequence of values to determine the minimum value of.</source>
          <target state="translated">Uma sequência de valores para determinação do valor mínimo.</target>       </trans-unit>
        <trans-unit id="2810" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Int64})">
          <source>Returns the minimum value in a parallel sequence of values.</source>
          <target state="translated">Retorna o valor mínimo em uma sequência paralela de valores.</target>       </trans-unit>
        <trans-unit id="2811" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})">
          <source>A sequence of values to determine the minimum value of.</source>
          <target state="translated">Uma sequência de valores para determinação do valor mínimo.</target>       </trans-unit>
        <trans-unit id="2812" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})">
          <source>Returns the minimum value in a parallel sequence of values.</source>
          <target state="translated">Retorna o valor mínimo em uma sequência paralela de valores.</target>       </trans-unit>
        <trans-unit id="2813" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Double}})">
          <source>A sequence of values to determine the minimum value of.</source>
          <target state="translated">Uma sequência de valores para determinação do valor mínimo.</target>       </trans-unit>
        <trans-unit id="2814" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Double}})">
          <source>Returns the minimum value in a parallel sequence of values.</source>
          <target state="translated">Retorna o valor mínimo em uma sequência paralela de valores.</target>       </trans-unit>
        <trans-unit id="2815" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Int32}})">
          <source>A sequence of values to determine the minimum value of.</source>
          <target state="translated">Uma sequência de valores para determinação do valor mínimo.</target>       </trans-unit>
        <trans-unit id="2816" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Int32}})">
          <source>Returns the minimum value in a parallel sequence of values.</source>
          <target state="translated">Retorna o valor mínimo em uma sequência paralela de valores.</target>       </trans-unit>
        <trans-unit id="2817" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Int64}})">
          <source>A sequence of values to determine the minimum value of.</source>
          <target state="translated">Uma sequência de valores para determinação do valor mínimo.</target>       </trans-unit>
        <trans-unit id="2818" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Int64}})">
          <source>Returns the minimum value in a parallel sequence of values.</source>
          <target state="translated">Retorna o valor mínimo em uma sequência paralela de valores.</target>       </trans-unit>
        <trans-unit id="2819" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Single}})">
          <source>A sequence of values to determine the minimum value of.</source>
          <target state="translated">Uma sequência de valores para determinação do valor mínimo.</target>       </trans-unit>
        <trans-unit id="2820" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Single}})">
          <source>Returns the minimum value in a parallel sequence of values.</source>
          <target state="translated">Retorna o valor mínimo em uma sequência paralela de valores.</target>       </trans-unit>
        <trans-unit id="2821" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Single})">
          <source>A sequence of values to determine the minimum value of.</source>
          <target state="translated">Uma sequência de valores para determinação do valor mínimo.</target>       </trans-unit>
        <trans-unit id="2822" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Single})">
          <source>Returns the minimum value in a parallel sequence of values.</source>
          <target state="translated">Retorna o valor mínimo em uma sequência paralela de valores.</target>       </trans-unit>
        <trans-unit id="2823" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2824" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0})">
          <source>A sequence of values to determine the minimum value of.</source>
          <target state="translated">Uma sequência de valores para determinação do valor mínimo.</target>       </trans-unit>
        <trans-unit id="2825" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0})">
          <source>Returns the minimum value in a parallel sequence of values.</source>
          <target state="translated">Retorna o valor mínimo em uma sequência paralela de valores.</target>       </trans-unit>
        <trans-unit id="2826" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2827" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
          <source>A sequence of values to determine the minimum value of.</source>
          <target state="translated">Uma sequência de valores para determinação do valor mínimo.</target>       </trans-unit>
        <trans-unit id="2828" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Uma função de transformação a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="2829" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
          <source>Invokes in parallel a transform function on each element of a sequence and returns the minimum value.</source>
          <target state="translated">Invoca em paralelo uma função de transformação em cada elemento de uma sequência e retorna o valor mínimo.</target>       </trans-unit>
        <trans-unit id="2830" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2831" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
          <source>A sequence of values to determine the minimum value of.</source>
          <target state="translated">Uma sequência de valores para determinação do valor mínimo.</target>       </trans-unit>
        <trans-unit id="2832" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Uma função de transformação a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="2833" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
          <source>Invokes in parallel a transform function on each element of a sequence and returns the minimum value.</source>
          <target state="translated">Invoca em paralelo uma função de transformação em cada elemento de uma sequência e retorna o valor mínimo.</target>       </trans-unit>
        <trans-unit id="2834" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2835" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
          <source>A sequence of values to determine the minimum value of.</source>
          <target state="translated">Uma sequência de valores para determinação do valor mínimo.</target>       </trans-unit>
        <trans-unit id="2836" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Uma função de transformação a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="2837" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
          <source>Invokes in parallel a transform function on each element of a sequence and returns the minimum value.</source>
          <target state="translated">Invoca em paralelo uma função de transformação em cada elemento de uma sequência e retorna o valor mínimo.</target>       </trans-unit>
        <trans-unit id="2838" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2839" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
          <source>A sequence of values to determine the minimum value of.</source>
          <target state="translated">Uma sequência de valores para determinação do valor mínimo.</target>       </trans-unit>
        <trans-unit id="2840" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Uma função de transformação a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="2841" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
          <source>Invokes in parallel a transform function on each element of a sequence and returns the minimum value.</source>
          <target state="translated">Invoca em paralelo uma função de transformação em cada elemento de uma sequência e retorna o valor mínimo.</target>       </trans-unit>
        <trans-unit id="2842" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2843" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
          <source>A sequence of values to determine the minimum value of.</source>
          <target state="translated">Uma sequência de valores para determinação do valor mínimo.</target>       </trans-unit>
        <trans-unit id="2844" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Uma função de transformação a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="2845" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
          <source>Invokes in parallel a transform function on each element of a sequence and returns the minimum value.</source>
          <target state="translated">Invoca em paralelo uma função de transformação em cada elemento de uma sequência e retorna o valor mínimo.</target>       </trans-unit>
        <trans-unit id="2846" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2847" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
          <source>A sequence of values to determine the minimum value of.</source>
          <target state="translated">Uma sequência de valores para determinação do valor mínimo.</target>       </trans-unit>
        <trans-unit id="2848" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Uma função de transformação a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="2849" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
          <source>Invokes in parallel a transform function on each element of a sequence and returns the minimum value.</source>
          <target state="translated">Invoca em paralelo uma função de transformação em cada elemento de uma sequência e retorna o valor mínimo.</target>       </trans-unit>
        <trans-unit id="2850" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2851" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
          <source>A sequence of values to determine the minimum value of.</source>
          <target state="translated">Uma sequência de valores para determinação do valor mínimo.</target>       </trans-unit>
        <trans-unit id="2852" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Uma função de transformação a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="2853" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
          <source>Invokes in parallel a transform function on each element of a sequence and returns the minimum value.</source>
          <target state="translated">Invoca em paralelo uma função de transformação em cada elemento de uma sequência e retorna o valor mínimo.</target>       </trans-unit>
        <trans-unit id="2854" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2855" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
          <source>A sequence of values to determine the minimum value of.</source>
          <target state="translated">Uma sequência de valores para determinação do valor mínimo.</target>       </trans-unit>
        <trans-unit id="2856" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Uma função de transformação a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="2857" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
          <source>Invokes in parallel a transform function on each element of a sequence and returns the minimum value.</source>
          <target state="translated">Invoca em paralelo uma função de transformação em cada elemento de uma sequência e retorna o valor mínimo.</target>       </trans-unit>
        <trans-unit id="2858" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2859" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
          <source>A sequence of values to determine the minimum value of.</source>
          <target state="translated">Uma sequência de valores para determinação do valor mínimo.</target>       </trans-unit>
        <trans-unit id="2860" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Uma função de transformação a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="2861" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
          <source>Invokes in parallel a transform function on each element of a sequence and returns the minimum value.</source>
          <target state="translated">Invoca em paralelo uma função de transformação em cada elemento de uma sequência e retorna o valor mínimo.</target>       </trans-unit>
        <trans-unit id="2862" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2863" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
          <source>A sequence of values to determine the minimum value of.</source>
          <target state="translated">Uma sequência de valores para determinação do valor mínimo.</target>       </trans-unit>
        <trans-unit id="2864" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Uma função de transformação a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="2865" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
          <source>Invokes in parallel a transform function on each element of a sequence and returns the minimum value.</source>
          <target state="translated">Invoca em paralelo uma função de transformação em cada elemento de uma sequência e retorna o valor mínimo.</target>       </trans-unit>
        <trans-unit id="2866" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Min``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2867" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Min``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>The type of the value returned by <bpt id="p1">&lt;c&gt;</bpt>selector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo do valor retornado por <bpt id="p1">&lt;c&gt;</bpt>seletor<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2868" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>A sequence of values to determine the minimum value of.</source>
          <target state="translated">Uma sequência de valores para determinação do valor mínimo.</target>       </trans-unit>
        <trans-unit id="2869" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Uma função de transformação a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="2870" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>Invokes in parallel a transform function on each element of a sequence and returns the minimum value.</source>
          <target state="translated">Invoca em paralelo uma função de transformação em cada elemento de uma sequência e retorna o valor mínimo.</target>       </trans-unit>
        <trans-unit id="2871" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.OfType``1(System.Linq.ParallelQuery)">
          <source>The type to filter the elements of the sequence on.</source>
          <target state="translated">O tipo no qual filtrar os elementos da sequência.</target>       </trans-unit>
        <trans-unit id="2872" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.OfType``1(System.Linq.ParallelQuery)">
          <source>The sequence whose elements to filter.</source>
          <target state="translated">A sequência cujos elementos filtrar.</target>       </trans-unit>
        <trans-unit id="2873" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.OfType``1(System.Linq.ParallelQuery)">
          <source>Filters the elements of a ParallelQuery based on a specified type.</source>
          <target state="translated">Filtra os elementos de uma ParallelQuery com base em um tipo especificado.</target>       </trans-unit>
        <trans-unit id="2874" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.OrderBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2875" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.OrderBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo de chave retornada pelo <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2876" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.OrderBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>A sequence of values to order.</source>
          <target state="translated">Uma sequência de valores a serem ordenados.</target>       </trans-unit>
        <trans-unit id="2877" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.OrderBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>A function to extract a key from an element.</source>
          <target state="translated">Uma função para extrair uma chave de um elemento.</target>       </trans-unit>
        <trans-unit id="2878" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.OrderBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>Sorts in parallel the elements of a sequence in ascending order according to a key.</source>
          <target state="translated">Classifica em paralelo os elementos de uma sequência em ordem crescente de acordo com uma chave.</target>       </trans-unit>
        <trans-unit id="2879" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.OrderBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2880" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.OrderBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo de chave retornada pelo <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2881" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.OrderBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>A sequence of values to order.</source>
          <target state="translated">Uma sequência de valores a serem ordenados.</target>       </trans-unit>
        <trans-unit id="2882" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.OrderBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>A function to extract a key from an element.</source>
          <target state="translated">Uma função para extrair uma chave de um elemento.</target>       </trans-unit>
        <trans-unit id="2883" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.OrderBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>An IComparer{TKey} to compare keys.</source>
          <target state="translated">Um IComparer{TKey} para comparar chaves.</target>       </trans-unit>
        <trans-unit id="2884" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.OrderBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>Sorts in parallel the elements of a sequence in ascending order by using a specified comparer.</source>
          <target state="translated">Classifica em paralelo os elementos de uma sequência em ordem crescente usando um comparador especificado.</target>       </trans-unit>
        <trans-unit id="2885" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.OrderByDescending``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2886" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.OrderByDescending``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo de chave retornada pelo <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2887" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.OrderByDescending``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>A sequence of values to order.</source>
          <target state="translated">Uma sequência de valores a serem ordenados.</target>       </trans-unit>
        <trans-unit id="2888" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.OrderByDescending``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>A function to extract a key from an element.</source>
          <target state="translated">Uma função para extrair uma chave de um elemento.</target>       </trans-unit>
        <trans-unit id="2889" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.OrderByDescending``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>Sorts in parallel the elements of a sequence in descending order according to a key.</source>
          <target state="translated">Classifica em paralelo os elementos de uma sequência em ordem decrescente de acordo com uma chave.</target>       </trans-unit>
        <trans-unit id="2890" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.OrderByDescending``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2891" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.OrderByDescending``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo de chave retornada pelo <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2892" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.OrderByDescending``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>A sequence of values to order.</source>
          <target state="translated">Uma sequência de valores a serem ordenados.</target>       </trans-unit>
        <trans-unit id="2893" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.OrderByDescending``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>A function to extract a key from an element.</source>
          <target state="translated">Uma função para extrair uma chave de um elemento.</target>       </trans-unit>
        <trans-unit id="2894" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.OrderByDescending``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>An IComparer{TKey} to compare keys.</source>
          <target state="translated">Um IComparer{TKey} para comparar chaves.</target>       </trans-unit>
        <trans-unit id="2895" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.OrderByDescending``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>Sorts the elements of a sequence in descending order by using a specified comparer.</source>
          <target state="translated">Classifica os elementos de uma sequência em ordem decrescente usando um comparador especificado.</target>       </trans-unit>
        <trans-unit id="2896" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Reverse``1(System.Linq.ParallelQuery{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2897" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Reverse``1(System.Linq.ParallelQuery{``0})">
          <source>A sequence of values to reverse.</source>
          <target state="translated">Uma sequência de valores a ser revertida.</target>       </trans-unit>
        <trans-unit id="2898" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Reverse``1(System.Linq.ParallelQuery{``0})">
          <source>Inverts the order of the elements in a parallel sequence.</source>
          <target state="translated">Inverte a ordem dos elementos em uma sequência paralela.</target>       </trans-unit>
        <trans-unit id="2899" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Select``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2900" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Select``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>The type of elements resturned by selector.</source>
          <target state="translated">O tipo dos elementos retornado pelo seletor.</target>       </trans-unit>
        <trans-unit id="2901" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Select``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>A sequence of values to invoke a transform function on.</source>
          <target state="translated">Uma sequência de valores na qual uma função de transformação será invocada.</target>       </trans-unit>
        <trans-unit id="2902" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Select``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Uma função de transformação a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="2903" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Select``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>Projects in parallel each element of a sequence into a new form.</source>
          <target state="translated">Projeta em paralelo cada elemento de uma sequência em um novo formulário.</target>       </trans-unit>
        <trans-unit id="2904" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Select``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,``1})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2905" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Select``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,``1})">
          <source>The type of elements resturned by selector.</source>
          <target state="translated">O tipo dos elementos retornado pelo seletor.</target>       </trans-unit>
        <trans-unit id="2906" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Select``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,``1})">
          <source>A sequence of values to invoke a transform function on.</source>
          <target state="translated">Uma sequência de valores na qual uma função de transformação será invocada.</target>       </trans-unit>
        <trans-unit id="2907" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Select``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,``1})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Uma função de transformação a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="2908" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Select``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,``1})">
          <source>Projects in parallel each element of a sequence into a new form by incorporating the element's index.</source>
          <target state="translated">Projeta em paralelo cada elemento de uma sequência em um novo formulário incorporando o índice do elemento.</target>       </trans-unit>
        <trans-unit id="2909" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.SelectMany``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2910" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.SelectMany``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})">
          <source>The type of the elements of the sequence returned by selector.</source>
          <target state="translated">O tipo dos elementos da sequência retornada pelo seletor.</target>       </trans-unit>
        <trans-unit id="2911" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SelectMany``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})">
          <source>A sequence of values to project.</source>
          <target state="translated">Uma sequência de valores a serem projetados.</target>       </trans-unit>
        <trans-unit id="2912" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SelectMany``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Uma função de transformação a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="2913" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SelectMany``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})">
          <source>Projects in parallel each element of a sequence to an <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> and flattens the resulting sequences into one sequence.</source>
          <target state="translated">Projeta em paralelo em cada elemento de uma sequência para um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> e mescla as sequências resultantes em uma sequência.</target>       </trans-unit>
        <trans-unit id="2914" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.SelectMany``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2915" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.SelectMany``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})">
          <source>The type of the elements of the sequence returned by selector.</source>
          <target state="translated">O tipo dos elementos da sequência retornada pelo seletor.</target>       </trans-unit>
        <trans-unit id="2916" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SelectMany``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})">
          <source>A sequence of values to project.</source>
          <target state="translated">Uma sequência de valores a serem projetados.</target>       </trans-unit>
        <trans-unit id="2917" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SelectMany``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Uma função de transformação a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="2918" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SelectMany``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})">
          <source>Projects in parallel each element of a sequence to an <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>, and flattens the resulting sequences into one sequence.</source>
          <target state="translated">Projeta em paralelo em cada elemento de uma sequência para um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> e mescla as sequências resultantes em uma sequência.</target>       </trans-unit>
        <trans-unit id="2919" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SelectMany``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})">
          <source>The index of each source element is used in the projected form of that element.</source>
          <target state="translated">O índice de cada elemento de origem é usado no formulário projetado desse elemento.</target>       </trans-unit>
        <trans-unit id="2920" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.SelectMany``3(System.Linq.ParallelQuery{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>The type of the intermediate elements collected by <bpt id="p1">&lt;c&gt;</bpt>collectionSelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos intermediários coletados pelo <bpt id="p1">&lt;c&gt;</bpt>collectionSelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2921" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.SelectMany``3(System.Linq.ParallelQuery{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2922" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.SelectMany``3(System.Linq.ParallelQuery{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>The type of elements in the result sequence.</source>
          <target state="translated">O tipo dos elementos na sequência de resultado.</target>       </trans-unit>
        <trans-unit id="2923" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SelectMany``3(System.Linq.ParallelQuery{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>A sequence of values to project.</source>
          <target state="translated">Uma sequência de valores a serem projetados.</target>       </trans-unit>
        <trans-unit id="2924" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SelectMany``3(System.Linq.ParallelQuery{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>A transform function to apply to each source element; the second parameter of the function represents the index of the source element.</source>
          <target state="translated">Uma função de transformação para aplicar a cada elemento de origem; o segundo parâmetro da função representa o índice do elemento de origem.</target>       </trans-unit>
        <trans-unit id="2925" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SelectMany``3(System.Linq.ParallelQuery{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>A function to create a result element from an element from the first sequence and a collection of matching elements from the second sequence.</source>
          <target state="translated">Uma função para criar um elemento de resultado de um elemento da primeira sequência e uma coleção de elementos correspondentes da segunda sequência.</target>       </trans-unit>
        <trans-unit id="2926" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SelectMany``3(System.Linq.ParallelQuery{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>Projects each element of a sequence to an <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>, flattens the resulting sequences into one sequence, and invokes a result selector function on each element therein.</source>
          <target state="translated">Projeta cada elemento de uma sequência em um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>, mescla as sequências resultantes em uma sequência e chama uma função de seletor de resultado em cada elemento contido nele.</target>       </trans-unit>
        <trans-unit id="2927" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.SelectMany``3(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>The type of the intermediate elements collected by <bpt id="p1">&lt;c&gt;</bpt>collectionSelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos intermediários coletados pelo <bpt id="p1">&lt;c&gt;</bpt>collectionSelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2928" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.SelectMany``3(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2929" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.SelectMany``3(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>The type of elements to return.</source>
          <target state="translated">O tipo de elementos a serem retornados.</target>       </trans-unit>
        <trans-unit id="2930" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SelectMany``3(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>A sequence of values to project.</source>
          <target state="translated">Uma sequência de valores a serem projetados.</target>       </trans-unit>
        <trans-unit id="2931" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SelectMany``3(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>A transform function to apply to each source element; the second parameter of the function represents the index of the source element.</source>
          <target state="translated">Uma função de transformação para aplicar a cada elemento de origem; o segundo parâmetro da função representa o índice do elemento de origem.</target>       </trans-unit>
        <trans-unit id="2932" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SelectMany``3(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>A function to create a result element from an element from the first sequence and a collection of matching elements from the second sequence.</source>
          <target state="translated">Uma função para criar um elemento de resultado de um elemento da primeira sequência e uma coleção de elementos correspondentes da segunda sequência.</target>       </trans-unit>
        <trans-unit id="2933" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SelectMany``3(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>Projects each element of a sequence to an <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>, flattens the resulting sequences into one sequence, and invokes a result selector function on each element therein.</source>
          <target state="translated">Projeta cada elemento de uma sequência em um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>, mescla as sequências resultantes em uma sequência e chama uma função de seletor de resultado em cada elemento contido nele.</target>       </trans-unit>
        <trans-unit id="2934" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SelectMany``3(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>The index of each source element is used in the intermediate projected form of that element.</source>
          <target state="translated">O índice de cada elemento de origem é usado no formulário projetado intermediário do elemento.</target>       </trans-unit>
        <trans-unit id="2935" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>This type parameter is not used.</source>
          <target state="translated">Este parâmetro de tipo não é usado.</target>       </trans-unit>
        <trans-unit id="2936" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>This parameter is not used.</source>
          <target state="translated">Este parâmetro não é usado.</target>       </trans-unit>
        <trans-unit id="2937" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>This parameter is not used.</source>
          <target state="translated">Este parâmetro não é usado.</target>       </trans-unit>
        <trans-unit id="2938" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>This SequenceEqual overload should never be called.</source>
          <target state="translated">Essa sobrecarga SequenceEqual nunca deve ser chamada.</target>       </trans-unit>
        <trans-unit id="2939" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>This method is marked as obsolete and always throws <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> when called.</source>
          <target state="translated">Esse método está marcado como obsoleto e sempre gera <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> quando chamado.</target>       </trans-unit>
        <trans-unit id="2940" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>This type parameter is not used.</source>
          <target state="translated">Este parâmetro de tipo não é usado.</target>       </trans-unit>
        <trans-unit id="2941" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>This parameter is not used.</source>
          <target state="translated">Este parâmetro não é usado.</target>       </trans-unit>
        <trans-unit id="2942" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>This parameter is not used.</source>
          <target state="translated">Este parâmetro não é usado.</target>       </trans-unit>
        <trans-unit id="2943" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>This parameter is not used.</source>
          <target state="translated">Este parâmetro não é usado.</target>       </trans-unit>
        <trans-unit id="2944" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>This SequenceEqual overload should never be called.</source>
          <target state="translated">Essa sobrecarga SequenceEqual nunca deve ser chamada.</target>       </trans-unit>
        <trans-unit id="2945" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>This method is marked as obsolete and always throws <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> when called.</source>
          <target state="translated">Esse método está marcado como obsoleto e sempre gera <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> quando chamado.</target>       </trans-unit>
        <trans-unit id="2946" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
          <source>The type of the elements of the input sequences.</source>
          <target state="translated">O tipo dos elementos das sequências de entrada.</target>       </trans-unit>
        <trans-unit id="2947" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
          <source>A sequence to compare to second.</source>
          <target state="translated">Uma sequência à qual comparar em segundo lugar.</target>       </trans-unit>
        <trans-unit id="2948" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
          <source>A sequence to compare to the first input sequence.</source>
          <target state="translated">Uma sequência a comparar com a primeira sequência de entrada.</target>       </trans-unit>
        <trans-unit id="2949" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
          <source>Determines whether two parallel sequences are equal by comparing the elements by using the default equality comparer for their type.</source>
          <target state="translated">Determina se duas sequências paralelas são iguais comparando os elementos usando o comparador de igualdade padrão para o tipo.</target>       </trans-unit>
        <trans-unit id="2950" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The type of the elements of the input sequences.</source>
          <target state="translated">O tipo dos elementos das sequências de entrada.</target>       </trans-unit>
        <trans-unit id="2951" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>A sequence to compare to <bpt id="p1">&lt;c&gt;</bpt>second<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Uma sequência à qual comparar em <bpt id="p1">&lt;c&gt;</bpt>segundo<ept id="p1">&lt;/c&gt;</ept> lugar.</target>       </trans-unit>
        <trans-unit id="2952" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>A sequence to compare to the first input sequence.</source>
          <target state="translated">Uma sequência a comparar com a primeira sequência de entrada.</target>       </trans-unit>
        <trans-unit id="2953" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to use to compare elements.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> a ser usado para comparar elementos.</target>       </trans-unit>
        <trans-unit id="2954" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>Determines whether two parallel sequences are equal by comparing their elements by using a specified IEqualityComparer{T}.</source>
          <target state="translated">Determina se duas sequências paralelas são iguais comparando seus elementos usando um IEqualityComparer{T} especificado.</target>       </trans-unit>
        <trans-unit id="2955" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Single``1(System.Linq.ParallelQuery{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2956" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Single``1(System.Linq.ParallelQuery{``0})">
          <source>The sequence to return the single element of.</source>
          <target state="translated">A sequência para retornar o único elemento.</target>       </trans-unit>
        <trans-unit id="2957" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Single``1(System.Linq.ParallelQuery{``0})">
          <source>Returns the only element of a parallel sequence, and throws an exception if there is not exactly one element in the sequence.</source>
          <target state="translated">Retorna o único elemento de uma sequência paralela e gerará uma exceção se não houver exatamente um elemento na sequência.</target>       </trans-unit>
        <trans-unit id="2958" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Single``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2959" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Single``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>The sequence to return the single element of.</source>
          <target state="translated">A sequência para retornar o único elemento.</target>       </trans-unit>
        <trans-unit id="2960" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Single``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>A function to test an element for a condition.</source>
          <target state="translated">Uma função para testar um elemento em relação a uma condição.</target>       </trans-unit>
        <trans-unit id="2961" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Single``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>Returns the only element of a parallel sequence that satisfies a specified condition, and throws an exception if more than one such element exists.</source>
          <target state="translated">Retorna o único elemento de uma sequência paralela que satisfaz uma condição especificada e gera uma exceção se houver mais de um desses elementos.</target>       </trans-unit>
        <trans-unit id="2962" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.SingleOrDefault``1(System.Linq.ParallelQuery{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2963" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SingleOrDefault``1(System.Linq.ParallelQuery{``0})">
          <source>The sequence to return the single element of.</source>
          <target state="translated">A sequência para retornar o único elemento.</target>       </trans-unit>
        <trans-unit id="2964" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SingleOrDefault``1(System.Linq.ParallelQuery{``0})">
          <source>Returns the only element of a parallel sequence, or a default value if the sequence is empty; this method throws an exception if there is more than one element in the sequence.</source>
          <target state="translated">Retorna o único elemento de uma sequência paralela ou um valor padrão, se a sequência estiver vazia. Esse método gerará uma exceção se houver mais de um elemento na sequência.</target>       </trans-unit>
        <trans-unit id="2965" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.SingleOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2966" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SingleOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>The sequence to return the single element of.</source>
          <target state="translated">A sequência para retornar o único elemento.</target>       </trans-unit>
        <trans-unit id="2967" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SingleOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>A function to test an element for a condition.</source>
          <target state="translated">Uma função para testar um elemento em relação a uma condição.</target>       </trans-unit>
        <trans-unit id="2968" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SingleOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>Returns the only element of a parallel sequence that satisfies a specified condition or a default value if no such element exists; this method throws an exception if more than one element satisfies the condition.</source>
          <target state="translated">Retorna o único elemento de uma sequência paralela que satisfaz uma condição especificada ou um valor padrão se esse elemento não existir. Esse método lançará uma exceção se mais de um elemento satisfizer a condição.</target>       </trans-unit>
        <trans-unit id="2969" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Skip``1(System.Linq.ParallelQuery{``0},System.Int32)">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2970" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Skip``1(System.Linq.ParallelQuery{``0},System.Int32)">
          <source>The sequence to return elements from.</source>
          <target state="translated">A sequência da qual os elementos serão retornados.</target>       </trans-unit>
        <trans-unit id="2971" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Skip``1(System.Linq.ParallelQuery{``0},System.Int32)">
          <source>The number of elements to skip before returning the remaining elements.</source>
          <target state="translated">O número de elementos a serem ignorados antes de retornar os elementos restantes.</target>       </trans-unit>
        <trans-unit id="2972" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Skip``1(System.Linq.ParallelQuery{``0},System.Int32)">
          <source>Bypasses a specified number of elements in a parallel sequence and then returns the remaining elements.</source>
          <target state="translated">Ignora um número especificado de elementos em uma sequência paralela e retorna os elementos restantes.</target>       </trans-unit>
        <trans-unit id="2973" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.SkipWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2974" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SkipWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>The sequence to return elements from.</source>
          <target state="translated">A sequência da qual os elementos serão retornados.</target>       </trans-unit>
        <trans-unit id="2975" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SkipWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>A function to test each element for a condition.</source>
          <target state="translated">Uma função para testar cada elemento em relação a uma condição.</target>       </trans-unit>
        <trans-unit id="2976" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SkipWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>Bypasses elements in a parallel sequence as long as a specified condition is true and then returns the remaining elements.</source>
          <target state="translated">Ignora elementos em uma sequência paralela, contanto que uma condição especificada seja verdadeira e retorne os elementos restantes.</target>       </trans-unit>
        <trans-unit id="2977" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.SkipWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2978" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SkipWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})">
          <source>The sequence to return elements from.</source>
          <target state="translated">A sequência da qual os elementos serão retornados.</target>       </trans-unit>
        <trans-unit id="2979" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SkipWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})">
          <source>A function to test each source element for a condition; the second parameter of the function represents the index of the source element.</source>
          <target state="translated">Uma função para testar cada elemento de origem em relação a uma condição; o segundo parâmetro da função representa o índice do elemento de origem.</target>       </trans-unit>
        <trans-unit id="2980" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SkipWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})">
          <source>Bypasses elements in a parallel sequence as long as a specified condition is true and then returns the remaining elements.</source>
          <target state="translated">Ignora elementos em uma sequência paralela, contanto que uma condição especificada seja verdadeira e retorne os elementos restantes.</target>       </trans-unit>
        <trans-unit id="2981" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SkipWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})">
          <source>The element's index is used in the logic of the predicate function.</source>
          <target state="translated">O índice do elemento é usado na lógica da função de predicado.</target>       </trans-unit>
        <trans-unit id="2982" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Decimal})">
          <source>A sequence of values to calculate the sum of.</source>
          <target state="translated">Uma sequência de valores para calcular a soma.</target>       </trans-unit>
        <trans-unit id="2983" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Decimal})">
          <source>Computes in parallel the sum of a sequence of values.</source>
          <target state="translated">Calcula em paralelo a soma de uma sequência de valores.</target>       </trans-unit>
        <trans-unit id="2984" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Double})">
          <source>A sequence of values to calculate the sum of.</source>
          <target state="translated">Uma sequência de valores para calcular a soma.</target>       </trans-unit>
        <trans-unit id="2985" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Double})">
          <source>Computes in parallel the sum of a sequence of values.</source>
          <target state="translated">Calcula em paralelo a soma de uma sequência de valores.</target>       </trans-unit>
        <trans-unit id="2986" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Int32})">
          <source>A sequence of values to calculate the sum of.</source>
          <target state="translated">Uma sequência de valores para calcular a soma.</target>       </trans-unit>
        <trans-unit id="2987" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Int32})">
          <source>Computes in parallel the sum of a sequence of values.</source>
          <target state="translated">Calcula em paralelo a soma de uma sequência de valores.</target>       </trans-unit>
        <trans-unit id="2988" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Int64})">
          <source>A sequence of values to calculate the sum of.</source>
          <target state="translated">Uma sequência de valores para calcular a soma.</target>       </trans-unit>
        <trans-unit id="2989" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Int64})">
          <source>Computes in parallel the sum of a sequence of values.</source>
          <target state="translated">Calcula em paralelo a soma de uma sequência de valores.</target>       </trans-unit>
        <trans-unit id="2990" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})">
          <source>A sequence of values to calculate the sum of.</source>
          <target state="translated">Uma sequência de valores para calcular a soma.</target>       </trans-unit>
        <trans-unit id="2991" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})">
          <source>Computes in parallel the sum of a sequence of values.</source>
          <target state="translated">Calcula em paralelo a soma de uma sequência de valores.</target>       </trans-unit>
        <trans-unit id="2992" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Double}})">
          <source>A sequence of values to calculate the sum of.</source>
          <target state="translated">Uma sequência de valores para calcular a soma.</target>       </trans-unit>
        <trans-unit id="2993" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Double}})">
          <source>Computes in parallel the sum of a sequence of values.</source>
          <target state="translated">Calcula em paralelo a soma de uma sequência de valores.</target>       </trans-unit>
        <trans-unit id="2994" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Int32}})">
          <source>A sequence of values to calculate the sum of.</source>
          <target state="translated">Uma sequência de valores para calcular a soma.</target>       </trans-unit>
        <trans-unit id="2995" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Int32}})">
          <source>Computes in parallel the sum of a sequence of values.</source>
          <target state="translated">Calcula em paralelo a soma de uma sequência de valores.</target>       </trans-unit>
        <trans-unit id="2996" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Int64}})">
          <source>A sequence of values to calculate the sum of.</source>
          <target state="translated">Uma sequência de valores para calcular a soma.</target>       </trans-unit>
        <trans-unit id="2997" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Int64}})">
          <source>Computes in parallel the sum of a sequence of values.</source>
          <target state="translated">Calcula em paralelo a soma de uma sequência de valores.</target>       </trans-unit>
        <trans-unit id="2998" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Single}})">
          <source>A sequence of values to calculate the sum of.</source>
          <target state="translated">Uma sequência de valores para calcular a soma.</target>       </trans-unit>
        <trans-unit id="2999" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Single}})">
          <source>Computes in parallel the sum of a sequence of values.</source>
          <target state="translated">Calcula em paralelo a soma de uma sequência de valores.</target>       </trans-unit>
        <trans-unit id="3000" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Single})">
          <source>A sequence of values to calculate the sum of.</source>
          <target state="translated">Uma sequência de valores para calcular a soma.</target>       </trans-unit>
        <trans-unit id="3001" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Single})">
          <source>Computes in parallel the sum of a sequence of values.</source>
          <target state="translated">Calcula em paralelo a soma de uma sequência de valores.</target>       </trans-unit>
        <trans-unit id="3002" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3003" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
          <source>A sequence of values to calculate the sum of.</source>
          <target state="translated">Uma sequência de valores para calcular a soma.</target>       </trans-unit>
        <trans-unit id="3004" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Uma função de transformação a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="3005" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
          <source>Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.</source>
          <target state="translated">Calcula em paralelo a soma da sequência de valores obtidos chamando uma função de transformação em cada elemento da sequência de entrada.</target>       </trans-unit>
        <trans-unit id="3006" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3007" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
          <source>A sequence of values to calculate the sum of.</source>
          <target state="translated">Uma sequência de valores para calcular a soma.</target>       </trans-unit>
        <trans-unit id="3008" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Uma função de transformação a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="3009" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
          <source>Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.</source>
          <target state="translated">Calcula em paralelo a soma da sequência de valores obtidos chamando uma função de transformação em cada elemento da sequência de entrada.</target>       </trans-unit>
        <trans-unit id="3010" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
          <source>The type of elements in the source sequence.</source>
          <target state="translated">O tipo dos elementos na sequência de origem.</target>       </trans-unit>
        <trans-unit id="3011" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
          <source>A sequence of values to calculate the sum of.</source>
          <target state="translated">Uma sequência de valores para calcular a soma.</target>       </trans-unit>
        <trans-unit id="3012" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Uma função de transformação a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="3013" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
          <source>Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.</source>
          <target state="translated">Calcula em paralelo a soma da sequência de valores obtidos chamando uma função de transformação em cada elemento da sequência de entrada.</target>       </trans-unit>
        <trans-unit id="3014" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3015" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
          <source>A sequence of values to calculate the sum of.</source>
          <target state="translated">Uma sequência de valores para calcular a soma.</target>       </trans-unit>
        <trans-unit id="3016" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Uma função de transformação a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="3017" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
          <source>Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.</source>
          <target state="translated">Calcula em paralelo a soma da sequência de valores obtidos chamando uma função de transformação em cada elemento da sequência de entrada.</target>       </trans-unit>
        <trans-unit id="3018" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3019" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
          <source>A sequence of values to calculate the sum of.</source>
          <target state="translated">Uma sequência de valores para calcular a soma.</target>       </trans-unit>
        <trans-unit id="3020" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Uma função de transformação a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="3021" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
          <source>Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.</source>
          <target state="translated">Calcula em paralelo a soma da sequência de valores obtidos chamando uma função de transformação em cada elemento da sequência de entrada.</target>       </trans-unit>
        <trans-unit id="3022" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3023" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
          <source>A sequence of values to calculate the sum of.</source>
          <target state="translated">Uma sequência de valores para calcular a soma.</target>       </trans-unit>
        <trans-unit id="3024" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Uma função de transformação a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="3025" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
          <source>Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.</source>
          <target state="translated">Calcula em paralelo a soma da sequência de valores obtidos chamando uma função de transformação em cada elemento da sequência de entrada.</target>       </trans-unit>
        <trans-unit id="3026" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3027" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
          <source>A sequence of values to calculate the sum of.</source>
          <target state="translated">Uma sequência de valores para calcular a soma.</target>       </trans-unit>
        <trans-unit id="3028" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Uma função de transformação a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="3029" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
          <source>Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.</source>
          <target state="translated">Calcula em paralelo a soma da sequência de valores obtidos chamando uma função de transformação em cada elemento da sequência de entrada.</target>       </trans-unit>
        <trans-unit id="3030" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3031" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
          <source>A sequence of values to calculate the sum of.</source>
          <target state="translated">Uma sequência de valores para calcular a soma.</target>       </trans-unit>
        <trans-unit id="3032" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Uma função de transformação a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="3033" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
          <source>Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.</source>
          <target state="translated">Calcula em paralelo a soma da sequência de valores obtidos chamando uma função de transformação em cada elemento da sequência de entrada.</target>       </trans-unit>
        <trans-unit id="3034" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3035" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
          <source>A sequence of values to calculate the sum of.</source>
          <target state="translated">Uma sequência de valores para calcular a soma.</target>       </trans-unit>
        <trans-unit id="3036" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Uma função de transformação a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="3037" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
          <source>Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.</source>
          <target state="translated">Calcula em paralelo a soma da sequência de valores obtidos chamando uma função de transformação em cada elemento da sequência de entrada.</target>       </trans-unit>
        <trans-unit id="3038" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3039" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
          <source>A sequence of values to calculate the sum of.</source>
          <target state="translated">Uma sequência de valores para calcular a soma.</target>       </trans-unit>
        <trans-unit id="3040" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Uma função de transformação a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="3041" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
          <source>Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.</source>
          <target state="translated">Calcula em paralelo a soma da sequência de valores obtidos chamando uma função de transformação em cada elemento da sequência de entrada.</target>       </trans-unit>
        <trans-unit id="3042" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Take``1(System.Linq.ParallelQuery{``0},System.Int32)">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3043" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Take``1(System.Linq.ParallelQuery{``0},System.Int32)">
          <source>The sequence to return elements from.</source>
          <target state="translated">A sequência da qual os elementos serão retornados.</target>       </trans-unit>
        <trans-unit id="3044" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Take``1(System.Linq.ParallelQuery{``0},System.Int32)">
          <source>The number of elements to return.</source>
          <target state="translated">O número de elementos a serem retornados.</target>       </trans-unit>
        <trans-unit id="3045" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Take``1(System.Linq.ParallelQuery{``0},System.Int32)">
          <source>Returns a specified number of contiguous elements from the start of a parallel sequence.</source>
          <target state="translated">Retorna um número especificado de elementos contíguos do início de uma sequência paralela.</target>       </trans-unit>
        <trans-unit id="3046" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.TakeWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3047" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.TakeWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>The sequence to return elements from.</source>
          <target state="translated">A sequência da qual os elementos serão retornados.</target>       </trans-unit>
        <trans-unit id="3048" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.TakeWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>A function to test each element for a condition.</source>
          <target state="translated">Uma função para testar cada elemento em relação a uma condição.</target>       </trans-unit>
        <trans-unit id="3049" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.TakeWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>Returns elements from a parallel sequence as long as a specified condition is true.</source>
          <target state="translated">Retorna os elementos de uma sequência paralela, contanto que uma condição especificada seja verdadeira.</target>       </trans-unit>
        <trans-unit id="3050" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.TakeWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3051" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.TakeWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})">
          <source>The sequence to return elements from.</source>
          <target state="translated">A sequência da qual os elementos serão retornados.</target>       </trans-unit>
        <trans-unit id="3052" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.TakeWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})">
          <source>A function to test each source element for a condition; the second parameter of the function represents the index of the source element.</source>
          <target state="translated">Uma função para testar cada elemento de origem em relação a uma condição; o segundo parâmetro da função representa o índice do elemento de origem.</target>       </trans-unit>
        <trans-unit id="3053" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.TakeWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})">
          <source>Returns elements from a parallel sequence as long as a specified condition is true.</source>
          <target state="translated">Retorna os elementos de uma sequência paralela, contanto que uma condição especificada seja verdadeira.</target>       </trans-unit>
        <trans-unit id="3054" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.TakeWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})">
          <source>The element's index is used in the logic of the predicate function.</source>
          <target state="translated">O índice do elemento é usado na lógica da função de predicado.</target>       </trans-unit>
        <trans-unit id="3055" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ThenBy``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3056" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ThenBy``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo de chave retornada pelo <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3057" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ThenBy``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1})">
          <source>An OrderedParallelQuery{TSource} that contains elements to sort.</source>
          <target state="translated">Uma OrderedParallelQuery{TSource} que contém elementos a classificar.</target>       </trans-unit>
        <trans-unit id="3058" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ThenBy``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1})">
          <source>A function to extract a key from an element.</source>
          <target state="translated">Uma função para extrair uma chave de um elemento.</target>       </trans-unit>
        <trans-unit id="3059" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ThenBy``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1})">
          <source>Performs in parallel a subsequent ordering of the elements in a sequence in ascending order according to a key.</source>
          <target state="translated">Executa em paralelo uma ordenação subsequente dos elementos em uma sequência em ordem crescente de acordo com uma chave.</target>       </trans-unit>
        <trans-unit id="3060" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ThenBy``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3061" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ThenBy``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo de chave retornada pelo <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3062" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ThenBy``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>An OrderedParallelQuery{TSource} that contains elements to sort.</source>
          <target state="translated">Uma OrderedParallelQuery{TSource} que contém elementos a classificar.</target>       </trans-unit>
        <trans-unit id="3063" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ThenBy``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>A function to extract a key from an element.</source>
          <target state="translated">Uma função para extrair uma chave de um elemento.</target>       </trans-unit>
        <trans-unit id="3064" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ThenBy``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>An IComparer{TKey} to compare keys.</source>
          <target state="translated">Um IComparer{TKey} para comparar chaves.</target>       </trans-unit>
        <trans-unit id="3065" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ThenBy``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>Performs in parallel a subsequent ordering of the elements in a sequence in ascending order by using a specified comparer.</source>
          <target state="translated">Executa em paralelo uma ordenação posterior dos elementos em uma sequência em ordem crescente usando um comparador especificado.</target>       </trans-unit>
        <trans-unit id="3066" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ThenByDescending``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3067" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ThenByDescending``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo de chave retornada pelo <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3068" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ThenByDescending``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1})">
          <source>An OrderedParallelQuery{TSource} that contains elements to sort.</source>
          <target state="translated">Uma OrderedParallelQuery{TSource} que contém elementos a classificar.</target>       </trans-unit>
        <trans-unit id="3069" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ThenByDescending``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1})">
          <source>A function to extract a key from an element.</source>
          <target state="translated">Uma função para extrair uma chave de um elemento.</target>       </trans-unit>
        <trans-unit id="3070" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ThenByDescending``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1})">
          <source>Performs in parallel a subsequent ordering of the elements in a sequence in descending order, according to a key.</source>
          <target state="translated">Executa em paralelo uma ordenação subsequente dos elementos em uma sequência em ordem decrescente de acordo com uma chave.</target>       </trans-unit>
        <trans-unit id="3071" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ThenByDescending``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3072" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ThenByDescending``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo de chave retornada pelo <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3073" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ThenByDescending``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>An OrderedParallelQuery{TSource} that contains elements to sort.</source>
          <target state="translated">Uma OrderedParallelQuery{TSource} que contém elementos a classificar.</target>       </trans-unit>
        <trans-unit id="3074" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ThenByDescending``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>A function to extract a key from an element.</source>
          <target state="translated">Uma função para extrair uma chave de um elemento.</target>       </trans-unit>
        <trans-unit id="3075" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ThenByDescending``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>An IComparer{TKey} to compare keys.</source>
          <target state="translated">Um IComparer{TKey} para comparar chaves.</target>       </trans-unit>
        <trans-unit id="3076" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ThenByDescending``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>Performs in parallel a subsequent ordering of the elements in a sequence in descending order by using a specified comparer.</source>
          <target state="translated">Executa em paralelo uma ordenação posterior dos elementos em uma sequência em ordem decrescente usando um comparador especificado.</target>       </trans-unit>
        <trans-unit id="3077" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ToArray``1(System.Linq.ParallelQuery{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3078" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToArray``1(System.Linq.ParallelQuery{``0})">
          <source>A sequence to create an array from.</source>
          <target state="translated">Uma sequência da qual criar uma matriz.</target>       </trans-unit>
        <trans-unit id="3079" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToArray``1(System.Linq.ParallelQuery{``0})">
          <source>Creates an array from a <ph id="ph1">&lt;see cref="T:System.Linq.ParallelQuery`1" /&gt;</ph>.</source>
          <target state="translated">Cria uma matriz de um <ph id="ph1">&lt;see cref="T:System.Linq.ParallelQuery`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3080" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ToDictionary``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3081" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ToDictionary``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo de chave retornada pelo <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3082" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToDictionary``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>A sequence to create a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> from.</source>
          <target state="translated">Uma sequência da qual criar um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3083" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToDictionary``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>A function to extract a key from each element.</source>
          <target state="translated">Uma função para extrair uma chave de cada elemento.</target>       </trans-unit>
        <trans-unit id="3084" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToDictionary``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> from a <ph id="ph2">&lt;see cref="T:System.Linq.ParallelQuery`1" /&gt;</ph> according to a specified key selector function.</source>
          <target state="translated">Cria um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> de um <ph id="ph2">&lt;see cref="T:System.Linq.ParallelQuery`1" /&gt;</ph> de acordo com uma função de seletor de chave especificada.</target>       </trans-unit>
        <trans-unit id="3085" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ToDictionary``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3086" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ToDictionary``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo de chave retornada pelo <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3087" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToDictionary``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A sequence to create a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> from.</source>
          <target state="translated">Uma sequência da qual criar um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3088" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToDictionary``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A function to extract a key from each element.</source>
          <target state="translated">Uma função para extrair uma chave de cada elemento.</target>       </trans-unit>
        <trans-unit id="3089" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToDictionary``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to compare keys.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> para comparar chaves.</target>       </trans-unit>
        <trans-unit id="3090" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToDictionary``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> from a <ph id="ph2">&lt;see cref="T:System.Linq.ParallelQuery`1" /&gt;</ph> according to a specified key selector function and key comparer.</source>
          <target state="translated">Cria um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> de um <ph id="ph2">&lt;see cref="T:System.Linq.ParallelQuery`1" /&gt;</ph> de acordo com uma função de seletor de chave e um comparador de chaves especificados.</target>       </trans-unit>
        <trans-unit id="3091" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ToDictionary``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3092" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ToDictionary``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo de chave retornada pelo <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3093" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ToDictionary``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>The type of the value returned by <bpt id="p1">&lt;c&gt;</bpt>elementSelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo do valor retornado por <bpt id="p1">&lt;c&gt;</bpt>elementSelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3094" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToDictionary``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>A sequence to create a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> from.</source>
          <target state="translated">Uma sequência da qual criar um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3095" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToDictionary``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>A function to extract a key from each element.</source>
          <target state="translated">Uma função para extrair uma chave de cada elemento.</target>       </trans-unit>
        <trans-unit id="3096" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToDictionary``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>A transform function to produce a result element value from each element.</source>
          <target state="translated">Uma função de transformação para produzir um valor de elemento de resultado de cada elemento.</target>       </trans-unit>
        <trans-unit id="3097" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToDictionary``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> from a <ph id="ph2">&lt;see cref="T:System.Linq.ParallelQuery`1" /&gt;</ph> according to specified key selector and element selector functions.</source>
          <target state="translated">Cria um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> de um <ph id="ph2">&lt;see cref="T:System.Linq.ParallelQuery`1" /&gt;</ph> de acordo com as funções especificadas de seletor de chave e seletor de elemento.</target>       </trans-unit>
        <trans-unit id="3098" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ToDictionary``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3099" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ToDictionary``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo de chave retornada pelo <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3100" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ToDictionary``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the value returned by <bpt id="p1">&lt;c&gt;</bpt>elementSelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo do valor retornado por <bpt id="p1">&lt;c&gt;</bpt>elementSelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3101" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToDictionary``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A sequence to create a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> from.</source>
          <target state="translated">Uma sequência da qual criar um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3102" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToDictionary``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A function to extract a key from each element.</source>
          <target state="translated">Uma função para extrair uma chave de cada elemento.</target>       </trans-unit>
        <trans-unit id="3103" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToDictionary``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A transform function to produce a result element value from each element.</source>
          <target state="translated">Uma função de transformação para produzir um valor de elemento de resultado de cada elemento.</target>       </trans-unit>
        <trans-unit id="3104" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToDictionary``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to compare keys.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> para comparar chaves.</target>       </trans-unit>
        <trans-unit id="3105" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToDictionary``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> from a <ph id="ph2">&lt;see cref="T:System.Linq.ParallelQuery`1" /&gt;</ph> according to a specified key selector function, a comparer, and an element selector function.</source>
          <target state="translated">Cria um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> de um <ph id="ph2">&lt;see cref="T:System.Linq.ParallelQuery`1" /&gt;</ph> de acordo com uma função de seletor de chave, um comparador e uma função de seletor de elemento especificados.</target>       </trans-unit>
        <trans-unit id="3106" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ToList``1(System.Linq.ParallelQuery{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3107" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToList``1(System.Linq.ParallelQuery{``0})">
          <source>A sequence to create a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> from.</source>
          <target state="translated">Uma sequência da qual criar um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3108" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToList``1(System.Linq.ParallelQuery{``0})">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> from an <ph id="ph2">&lt;see cref="T:System.Linq.ParallelQuery`1" /&gt;</ph>.</source>
          <target state="translated">Cria um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> de um <ph id="ph2">&lt;see cref="T:System.Linq.ParallelQuery`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ToLookup``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ToLookup``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo de chave retornada pelo <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3111" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToLookup``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>The sequence to create a <ph id="ph1">&lt;see cref="T:System.Linq.ILookup`2" /&gt;</ph> from.</source>
          <target state="translated">A sequência da qual criar um <ph id="ph1">&lt;see cref="T:System.Linq.ILookup`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3112" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToLookup``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>A function to extract a key from each element.</source>
          <target state="translated">Uma função para extrair uma chave de cada elemento.</target>       </trans-unit>
        <trans-unit id="3113" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToLookup``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>Creates an <ph id="ph1">&lt;see cref="T:System.Linq.ILookup`2" /&gt;</ph> from a <ph id="ph2">&lt;see cref="T:System.Linq.ParallelQuery`1" /&gt;</ph> according to a specified key selector function.</source>
          <target state="translated">Cria um <ph id="ph1">&lt;see cref="T:System.Linq.ILookup`2" /&gt;</ph> de um <ph id="ph2">&lt;see cref="T:System.Linq.ParallelQuery`1" /&gt;</ph> de acordo com uma função de seletor de chave especificada.</target>       </trans-unit>
        <trans-unit id="3114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ToLookup``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ToLookup``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo de chave retornada pelo <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3116" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToLookup``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The sequence to create a <ph id="ph1">&lt;see cref="T:System.Linq.ILookup`2" /&gt;</ph> from.</source>
          <target state="translated">A sequência da qual criar um <ph id="ph1">&lt;see cref="T:System.Linq.ILookup`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3117" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToLookup``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A function to extract a key from each element.</source>
          <target state="translated">Uma função para extrair uma chave de cada elemento.</target>       </trans-unit>
        <trans-unit id="3118" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToLookup``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to compare keys.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> para comparar chaves.</target>       </trans-unit>
        <trans-unit id="3119" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToLookup``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>Creates an <ph id="ph1">&lt;see cref="T:System.Linq.ILookup`2" /&gt;</ph> from a <ph id="ph2">&lt;see cref="T:System.Linq.ParallelQuery`1" /&gt;</ph> according to a specified key selector function and key comparer.</source>
          <target state="translated">Cria um <ph id="ph1">&lt;see cref="T:System.Linq.ILookup`2" /&gt;</ph> de um <ph id="ph2">&lt;see cref="T:System.Linq.ParallelQuery`1" /&gt;</ph> de acordo com uma função de seletor de chave e um comparador de chaves especificados.</target>       </trans-unit>
        <trans-unit id="3120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ToLookup``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ToLookup``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo de chave retornada pelo <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ToLookup``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>The type of the value returned by <bpt id="p1">&lt;c&gt;</bpt>elementSelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo do valor retornado por <bpt id="p1">&lt;c&gt;</bpt>elementSelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3123" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToLookup``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>The sequence to create a <ph id="ph1">&lt;see cref="T:System.Linq.ILookup`2" /&gt;</ph> from.</source>
          <target state="translated">A sequência da qual criar um <ph id="ph1">&lt;see cref="T:System.Linq.ILookup`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3124" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToLookup``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>A function to extract a key from each element.</source>
          <target state="translated">Uma função para extrair uma chave de cada elemento.</target>       </trans-unit>
        <trans-unit id="3125" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToLookup``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>A transform function to produce a result element value from each element.</source>
          <target state="translated">Uma função de transformação para produzir um valor de elemento de resultado de cada elemento.</target>       </trans-unit>
        <trans-unit id="3126" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToLookup``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>Creates an <ph id="ph1">&lt;see cref="T:System.Linq.ILookup`2" /&gt;</ph> from a <ph id="ph2">&lt;see cref="T:System.Linq.ParallelQuery`1" /&gt;</ph> according to specified key selector and element selector functions.</source>
          <target state="translated">Cria um <ph id="ph1">&lt;see cref="T:System.Linq.ILookup`2" /&gt;</ph> de um <ph id="ph2">&lt;see cref="T:System.Linq.ParallelQuery`1" /&gt;</ph> de acordo com as funções especificadas de seletor de chave e seletor de elemento.</target>       </trans-unit>
        <trans-unit id="3127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ToLookup``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ToLookup``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo de chave retornada pelo <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ToLookup``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the value returned by <bpt id="p1">&lt;c&gt;</bpt>elementSelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo do valor retornado por <bpt id="p1">&lt;c&gt;</bpt>elementSelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3130" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToLookup``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The sequence to create a <ph id="ph1">&lt;see cref="T:System.Linq.ILookup`2" /&gt;</ph> from.</source>
          <target state="translated">A sequência da qual criar um <ph id="ph1">&lt;see cref="T:System.Linq.ILookup`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3131" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToLookup``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A function to extract a key from each element.</source>
          <target state="translated">Uma função para extrair uma chave de cada elemento.</target>       </trans-unit>
        <trans-unit id="3132" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToLookup``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A transform function to produce a result element value from each element.</source>
          <target state="translated">Uma função de transformação para produzir um valor de elemento de resultado de cada elemento.</target>       </trans-unit>
        <trans-unit id="3133" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToLookup``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to compare keys.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> para comparar chaves.</target>       </trans-unit>
        <trans-unit id="3134" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToLookup``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>Creates an <ph id="ph1">&lt;see cref="T:System.Linq.ILookup`2" /&gt;</ph> from a <ph id="ph2">&lt;see cref="T:System.Linq.ParallelQuery`1" /&gt;</ph> according to a specified key selector function, a comparer and an element selector function.</source>
          <target state="translated">Cria um <ph id="ph1">&lt;see cref="T:System.Linq.ILookup`2" /&gt;</ph> de um <ph id="ph2">&lt;see cref="T:System.Linq.ParallelQuery`1" /&gt;</ph> de acordo com uma função de seletor de chave, um comparador e uma função de seletor de elemento especificados.</target>       </trans-unit>
        <trans-unit id="3135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>This type parameter is not used.</source>
          <target state="translated">Este parâmetro de tipo não é usado.</target>       </trans-unit>
        <trans-unit id="3136" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>This parameter is not used.</source>
          <target state="translated">Este parâmetro não é usado.</target>       </trans-unit>
        <trans-unit id="3137" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>This parameter is not used.</source>
          <target state="translated">Este parâmetro não é usado.</target>       </trans-unit>
        <trans-unit id="3138" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>This Union overload should never be called.</source>
          <target state="translated">Essa sobrecarga Union nunca deve ser chamada.</target>       </trans-unit>
        <trans-unit id="3139" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>This method is marked as obsolete and always throws <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> when called.</source>
          <target state="translated">Esse método está marcado como obsoleto e sempre gera <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> quando chamado.</target>       </trans-unit>
        <trans-unit id="3140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>This type parameter is not used.</source>
          <target state="translated">Este parâmetro de tipo não é usado.</target>       </trans-unit>
        <trans-unit id="3141" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>This parameter is not used.</source>
          <target state="translated">Este parâmetro não é usado.</target>       </trans-unit>
        <trans-unit id="3142" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>This parameter is not used.</source>
          <target state="translated">Este parâmetro não é usado.</target>       </trans-unit>
        <trans-unit id="3143" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>This parameter is not used.</source>
          <target state="translated">Este parâmetro não é usado.</target>       </trans-unit>
        <trans-unit id="3144" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>This Union overload should never be called.</source>
          <target state="translated">Essa sobrecarga Union nunca deve ser chamada.</target>       </trans-unit>
        <trans-unit id="3145" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>This method is marked as obsolete and always throws <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> when called.</source>
          <target state="translated">Esse método está marcado como obsoleto e sempre gera <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> quando chamado.</target>       </trans-unit>
        <trans-unit id="3146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
          <source>The type of the elements of the input sequences.</source>
          <target state="translated">O tipo dos elementos das sequências de entrada.</target>       </trans-unit>
        <trans-unit id="3147" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
          <source>A sequence whose distinct elements form the first set for the union.</source>
          <target state="translated">Uma sequência cujos elementos distintos formam o primeiro conjunto da união.</target>       </trans-unit>
        <trans-unit id="3148" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
          <source>A sequence whose distinct elements form the second set for the union.</source>
          <target state="translated">Uma sequência cujos elementos distintos formam o segundo conjunto da união.</target>       </trans-unit>
        <trans-unit id="3149" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
          <source>Produces the set union of two parallel sequences by using the default equality comparer.</source>
          <target state="translated">Produz a união de conjunto de duas sequências paralelas usando o comparador de igualdade padrão.</target>       </trans-unit>
        <trans-unit id="3150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The type of the elements of the input sequences.</source>
          <target state="translated">O tipo dos elementos das sequências de entrada.</target>       </trans-unit>
        <trans-unit id="3151" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>A sequence whose distinct elements form the first set for the union.</source>
          <target state="translated">Uma sequência cujos elementos distintos formam o primeiro conjunto da união.</target>       </trans-unit>
        <trans-unit id="3152" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>A sequence whose distinct elements form the second set for the union.</source>
          <target state="translated">Uma sequência cujos elementos distintos formam o segundo conjunto da união.</target>       </trans-unit>
        <trans-unit id="3153" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to compare values.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> para comparar valores.</target>       </trans-unit>
        <trans-unit id="3154" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>Produces the set union of two parallel sequences by using a specified IEqualityComparer{T}.</source>
          <target state="translated">Produz a união de conjunto de duas sequências paralelas usando um IEqualityComparer{T} especificado.</target>       </trans-unit>
        <trans-unit id="3155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Where``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>The type of the elements of source.</source>
          <target state="translated">O tipo dos elementos da fonte.</target>       </trans-unit>
        <trans-unit id="3156" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Where``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>A sequence to filter.</source>
          <target state="translated">Uma sequência para filtrar.</target>       </trans-unit>
        <trans-unit id="3157" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Where``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>A function to test each element for a condition.</source>
          <target state="translated">Uma função para testar cada elemento em relação a uma condição.</target>       </trans-unit>
        <trans-unit id="3158" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Where``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>Filters in parallel a sequence of values based on a predicate.</source>
          <target state="translated">Filtra uma sequência paralela de valores com base em um predicado.</target>       </trans-unit>
        <trans-unit id="3159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Where``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})">
          <source>The type of the elements of source.</source>
          <target state="translated">O tipo dos elementos da fonte.</target>       </trans-unit>
        <trans-unit id="3160" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Where``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})">
          <source>A sequence to filter.</source>
          <target state="translated">Uma sequência para filtrar.</target>       </trans-unit>
        <trans-unit id="3161" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Where``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})">
          <source>A function to test each element for a condition.</source>
          <target state="translated">Uma função para testar cada elemento em relação a uma condição.</target>       </trans-unit>
        <trans-unit id="3162" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Where``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})">
          <source>Filters in parallel a sequence of values based on a predicate.</source>
          <target state="translated">Filtra uma sequência paralela de valores com base em um predicado.</target>       </trans-unit>
        <trans-unit id="3163" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Where``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})">
          <source>Each element's index is used in the logic of the predicate function.</source>
          <target state="translated">O índice de cada elemento é usado na lógica da função de predicado.</target>       </trans-unit>
        <trans-unit id="3164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3165" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)">
          <source>A ParallelQuery on which to set the option.</source>
          <target state="translated">Um ParallelQuery no qual definir a opção.</target>       </trans-unit>
        <trans-unit id="3166" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)">
          <source>A cancellation token.</source>
          <target state="translated">Um token de cancelamento.</target>       </trans-unit>
        <trans-unit id="3167" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)">
          <source>Sets the <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> to associate with the query.</source>
          <target state="translated">Define o <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> a associar à consulta.</target>       </trans-unit>
        <trans-unit id="3168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.WithDegreeOfParallelism``1(System.Linq.ParallelQuery{``0},System.Int32)">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3169" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.WithDegreeOfParallelism``1(System.Linq.ParallelQuery{``0},System.Int32)">
          <source>A ParallelQuery on which to set the limit on the degrees of parallelism.</source>
          <target state="translated">Um ParallelQuery no qual definir o limite em graus de paralelismo.</target>       </trans-unit>
        <trans-unit id="3170" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.WithDegreeOfParallelism``1(System.Linq.ParallelQuery{``0},System.Int32)">
          <source>The degree of parallelism for the query.</source>
          <target state="translated">O grau de paralelismo para a consulta.</target>       </trans-unit>
        <trans-unit id="3171" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.WithDegreeOfParallelism``1(System.Linq.ParallelQuery{``0},System.Int32)">
          <source>The default value is Math.Min(<ph id="ph1">&lt;see cref="P:System.Environment.ProcessorCount" /&gt;</ph>, <ph id="ph2">&lt;see langword="MAX_SUPPORTED_DOP" /&gt;</ph>) where <ph id="ph3">&lt;see langword="MAX_SUPPORTED_DOP" /&gt;</ph> is 512.</source>
          <target state="translated">O valor padrão é Math.Min(<ph id="ph1">&lt;see cref="P:System.Environment.ProcessorCount" /&gt;</ph>, <ph id="ph2">&lt;see langword="MAX_SUPPORTED_DOP" /&gt;</ph>) em que <ph id="ph3">&lt;see langword="MAX_SUPPORTED_DOP" /&gt;</ph> é 512.</target>       </trans-unit>
        <trans-unit id="3172" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.WithDegreeOfParallelism``1(System.Linq.ParallelQuery{``0},System.Int32)">
          <source>Sets the degree of parallelism to use in a query.</source>
          <target state="translated">Define o grau de paralelismo a ser usado em uma consulta.</target>       </trans-unit>
        <trans-unit id="3173" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.WithDegreeOfParallelism``1(System.Linq.ParallelQuery{``0},System.Int32)">
          <source>Degree of parallelism is the maximum number of concurrently executing tasks that will be used to process the query.</source>
          <target state="translated">O grau de paralelismo é o número máximo de tarefas que serão usadas simultaneamente para processar a consulta.</target>       </trans-unit>
        <trans-unit id="3174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.WithExecutionMode``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelExecutionMode)">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3175" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.WithExecutionMode``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelExecutionMode)">
          <source>A ParallelQuery on which to set the option.</source>
          <target state="translated">Um ParallelQuery no qual definir a opção.</target>       </trans-unit>
        <trans-unit id="3176" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.WithExecutionMode``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelExecutionMode)">
          <source>The mode in which to execute the query.</source>
          <target state="translated">O modo no qual executar a consulta.</target>       </trans-unit>
        <trans-unit id="3177" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.WithExecutionMode``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelExecutionMode)">
          <source>Sets the execution mode of the query.</source>
          <target state="translated">Define o modo de execução da consulta.</target>       </trans-unit>
        <trans-unit id="3178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.WithMergeOptions``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelMergeOptions)">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3179" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.WithMergeOptions``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelMergeOptions)">
          <source>A ParallelQuery on which to set the option.</source>
          <target state="translated">Um ParallelQuery no qual definir a opção.</target>       </trans-unit>
        <trans-unit id="3180" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.WithMergeOptions``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelMergeOptions)">
          <source>The merge options to set for this query.</source>
          <target state="translated">As opções de mesclagem definidas para esta consulta.</target>       </trans-unit>
        <trans-unit id="3181" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.WithMergeOptions``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelMergeOptions)">
          <source>Sets the merge options for this query, which specify how the query will buffer output.</source>
          <target state="translated">Define as opções de mesclagem para essa consulta, que especifica como a consulta armazenará em buffer a saída.</target>       </trans-unit>
        <trans-unit id="3182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Zip``3(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})">
          <source>This type parameter is not used.</source>
          <target state="translated">Este parâmetro de tipo não é usado.</target>       </trans-unit>
        <trans-unit id="3183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Zip``3(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})">
          <source>This type parameter is not used.</source>
          <target state="translated">Este parâmetro de tipo não é usado.</target>       </trans-unit>
        <trans-unit id="3184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Zip``3(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})">
          <source>This type parameter is not used.</source>
          <target state="translated">Este parâmetro de tipo não é usado.</target>       </trans-unit>
        <trans-unit id="3185" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Zip``3(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})">
          <source>This parameter is not used.</source>
          <target state="translated">Este parâmetro não é usado.</target>       </trans-unit>
        <trans-unit id="3186" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Zip``3(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})">
          <source>This parameter is not used.</source>
          <target state="translated">Este parâmetro não é usado.</target>       </trans-unit>
        <trans-unit id="3187" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Zip``3(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})">
          <source>This parameter is not used.</source>
          <target state="translated">Este parâmetro não é usado.</target>       </trans-unit>
        <trans-unit id="3188" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Zip``3(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})">
          <source>This Zip overload should never be called.</source>
          <target state="translated">Essa sobrecarga de Zip nunca deve ser chamada.</target>       </trans-unit>
        <trans-unit id="3189" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Zip``3(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})">
          <source>This method is marked as obsolete and always throws <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> when invoked.</source>
          <target state="translated">Esse método está marcado como obsoleto e sempre gera <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> quando invocado.</target>       </trans-unit>
        <trans-unit id="3190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Zip``3(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``1,``2})">
          <source>The type of the elements of the first sequence.</source>
          <target state="translated">O tipo dos elementos da primeira sequência.</target>       </trans-unit>
        <trans-unit id="3191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Zip``3(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``1,``2})">
          <source>The type of the elements of the second sequence.</source>
          <target state="translated">O tipo dos elementos da segunda sequência.</target>       </trans-unit>
        <trans-unit id="3192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Zip``3(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``1,``2})">
          <source>The type of the return elements.</source>
          <target state="translated">O tipo dos elementos de retorno.</target>       </trans-unit>
        <trans-unit id="3193" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Zip``3(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``1,``2})">
          <source>The first sequence to zip.</source>
          <target state="translated">A primeira sequência a compactar.</target>       </trans-unit>
        <trans-unit id="3194" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Zip``3(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``1,``2})">
          <source>The second sequence to zip.</source>
          <target state="translated">A segunda sequência a compactar.</target>       </trans-unit>
        <trans-unit id="3195" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Zip``3(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``1,``2})">
          <source>A function to create a result element from two matching elements.</source>
          <target state="translated">Uma função para criar um elemento de resultado de dois elementos correspondentes.</target>       </trans-unit>
        <trans-unit id="3196" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Zip``3(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``1,``2})">
          <source>Merges in parallel two sequences by using the specified predicate function.</source>
          <target state="translated">Mescla em paralelo duas sequências usando a função de predicado especificada.</target>       </trans-unit>
        <trans-unit id="3197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Aggregate``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``0,``0}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3198" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Aggregate``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``0,``0}})">
          <source>A sequence to aggregate over.</source>
          <target state="translated">Uma sequência a ser agregada.</target>       </trans-unit>
        <trans-unit id="3199" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Aggregate``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``0,``0}})">
          <source>An accumulator function to apply to each element.</source>
          <target state="translated">Uma função do acumulador a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="3200" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Aggregate``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``0,``0}})">
          <source>Applies an accumulator function over a sequence.</source>
          <target state="translated">Aplica uma função de acumulador a uma sequência.</target>       </trans-unit>
        <trans-unit id="3201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Aggregate``2(System.Linq.IQueryable{``0},``1,System.Linq.Expressions.Expression{System.Func{``1,``0,``1}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Aggregate``2(System.Linq.IQueryable{``0},``1,System.Linq.Expressions.Expression{System.Func{``1,``0,``1}})">
          <source>The type of the accumulator value.</source>
          <target state="translated">O tipo do valor do acumulador.</target>       </trans-unit>
        <trans-unit id="3203" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Aggregate``2(System.Linq.IQueryable{``0},``1,System.Linq.Expressions.Expression{System.Func{``1,``0,``1}})">
          <source>A sequence to aggregate over.</source>
          <target state="translated">Uma sequência a ser agregada.</target>       </trans-unit>
        <trans-unit id="3204" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Aggregate``2(System.Linq.IQueryable{``0},``1,System.Linq.Expressions.Expression{System.Func{``1,``0,``1}})">
          <source>The initial accumulator value.</source>
          <target state="translated">O valor inicial do acumulador.</target>       </trans-unit>
        <trans-unit id="3205" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Aggregate``2(System.Linq.IQueryable{``0},``1,System.Linq.Expressions.Expression{System.Func{``1,``0,``1}})">
          <source>An accumulator function to invoke on each element.</source>
          <target state="translated">Uma função de acumulador a ser invocada em cada elemento.</target>       </trans-unit>
        <trans-unit id="3206" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Aggregate``2(System.Linq.IQueryable{``0},``1,System.Linq.Expressions.Expression{System.Func{``1,``0,``1}})">
          <source>Applies an accumulator function over a sequence.</source>
          <target state="translated">Aplica uma função de acumulador a uma sequência.</target>       </trans-unit>
        <trans-unit id="3207" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Aggregate``2(System.Linq.IQueryable{``0},``1,System.Linq.Expressions.Expression{System.Func{``1,``0,``1}})">
          <source>The specified seed value is used as the initial accumulator value.</source>
          <target state="translated">O valor de semente especificado é usado como o valor inicial do acumulador.</target>       </trans-unit>
        <trans-unit id="3208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Aggregate``3(System.Linq.IQueryable{``0},``1,System.Linq.Expressions.Expression{System.Func{``1,``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,``2}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Aggregate``3(System.Linq.IQueryable{``0},``1,System.Linq.Expressions.Expression{System.Func{``1,``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,``2}})">
          <source>The type of the accumulator value.</source>
          <target state="translated">O tipo do valor do acumulador.</target>       </trans-unit>
        <trans-unit id="3210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Aggregate``3(System.Linq.IQueryable{``0},``1,System.Linq.Expressions.Expression{System.Func{``1,``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,``2}})">
          <source>The type of the resulting value.</source>
          <target state="translated">O tipo do valor resultante.</target>       </trans-unit>
        <trans-unit id="3211" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Aggregate``3(System.Linq.IQueryable{``0},``1,System.Linq.Expressions.Expression{System.Func{``1,``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,``2}})">
          <source>A sequence to aggregate over.</source>
          <target state="translated">Uma sequência a ser agregada.</target>       </trans-unit>
        <trans-unit id="3212" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Aggregate``3(System.Linq.IQueryable{``0},``1,System.Linq.Expressions.Expression{System.Func{``1,``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,``2}})">
          <source>The initial accumulator value.</source>
          <target state="translated">O valor inicial do acumulador.</target>       </trans-unit>
        <trans-unit id="3213" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Aggregate``3(System.Linq.IQueryable{``0},``1,System.Linq.Expressions.Expression{System.Func{``1,``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,``2}})">
          <source>An accumulator function to invoke on each element.</source>
          <target state="translated">Uma função de acumulador a ser invocada em cada elemento.</target>       </trans-unit>
        <trans-unit id="3214" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Aggregate``3(System.Linq.IQueryable{``0},``1,System.Linq.Expressions.Expression{System.Func{``1,``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,``2}})">
          <source>A function to transform the final accumulator value into the result value.</source>
          <target state="translated">Uma função para transformar o valor final do acumulador no valor de resultado.</target>       </trans-unit>
        <trans-unit id="3215" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Aggregate``3(System.Linq.IQueryable{``0},``1,System.Linq.Expressions.Expression{System.Func{``1,``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,``2}})">
          <source>Applies an accumulator function over a sequence.</source>
          <target state="translated">Aplica uma função de acumulador a uma sequência.</target>       </trans-unit>
        <trans-unit id="3216" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Aggregate``3(System.Linq.IQueryable{``0},``1,System.Linq.Expressions.Expression{System.Func{``1,``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,``2}})">
          <source>The specified seed value is used as the initial accumulator value, and the specified function is used to select the result value.</source>
          <target state="translated">O valor de semente especificado é usado como o valor inicial do acumulador e a função especificada é usada para selecionar o valor do resultado.</target>       </trans-unit>
        <trans-unit id="3217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.All``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3218" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.All``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
          <source>A sequence whose elements to test for a condition.</source>
          <target state="translated">A sequência cujos elementos testar quanto a uma condição.</target>       </trans-unit>
        <trans-unit id="3219" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.All``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
          <source>A function to test each element for a condition.</source>
          <target state="translated">Uma função para testar cada elemento em relação a uma condição.</target>       </trans-unit>
        <trans-unit id="3220" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.All``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
          <source>Determines whether all the elements of a sequence satisfy a condition.</source>
          <target state="translated">Determina se todos os elementos de uma sequência atendem a uma condição.</target>       </trans-unit>
        <trans-unit id="3221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Any``1(System.Linq.IQueryable{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3222" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Any``1(System.Linq.IQueryable{``0})">
          <source>A sequence to check for being empty.</source>
          <target state="translated">Uma sequência para verificar se está vazia.</target>       </trans-unit>
        <trans-unit id="3223" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Any``1(System.Linq.IQueryable{``0})">
          <source>Determines whether a sequence contains any elements.</source>
          <target state="translated">Determina se uma sequência contém elementos.</target>       </trans-unit>
        <trans-unit id="3224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Any``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3225" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Any``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
          <source>A sequence whose elements to test for a condition.</source>
          <target state="translated">A sequência cujos elementos testar quanto a uma condição.</target>       </trans-unit>
        <trans-unit id="3226" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Any``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
          <source>A function to test each element for a condition.</source>
          <target state="translated">Uma função para testar cada elemento em relação a uma condição.</target>       </trans-unit>
        <trans-unit id="3227" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Any``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
          <source>Determines whether any element of a sequence satisfies a condition.</source>
          <target state="translated">Determina se algum elemento de uma sequência atende a uma condição.</target>       </trans-unit>
        <trans-unit id="3228" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)">
          <source>A sequence to convert.</source>
          <target state="translated">Uma sequência a ser convertida.</target>       </trans-unit>
        <trans-unit id="3229" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)">
          <source>Converts an <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerable" /&gt;</ph> to an <ph id="ph2">&lt;see cref="T:System.Linq.IQueryable" /&gt;</ph>.</source>
          <target state="translated">Converte um <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerable" /&gt;</ph> em um <ph id="ph2">&lt;see cref="T:System.Linq.IQueryable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3231" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})">
          <source>A sequence to convert.</source>
          <target state="translated">Uma sequência a ser convertida.</target>       </trans-unit>
        <trans-unit id="3232" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})">
          <source>Converts a generic <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> to a generic <ph id="ph2">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph>.</source>
          <target state="translated">Converte um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> genérico em um <ph id="ph2">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> genérico.</target>       </trans-unit>
        <trans-unit id="3233" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Decimal})">
          <source>A sequence of <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> values to calculate the average of.</source>
          <target state="translated">Uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> para realizar o cálculo da média.</target>       </trans-unit>
        <trans-unit id="3234" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Decimal})">
          <source>Computes the average of a sequence of <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> values.</source>
          <target state="translated">Computa a média de uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3235" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Double})">
          <source>A sequence of <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> values to calculate the average of.</source>
          <target state="translated">Uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> para realizar o cálculo da média.</target>       </trans-unit>
        <trans-unit id="3236" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Double})">
          <source>Computes the average of a sequence of <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> values.</source>
          <target state="translated">Computa a média de uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3237" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Int32})">
          <source>A sequence of <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> values to calculate the average of.</source>
          <target state="translated">Uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> para realizar o cálculo da média.</target>       </trans-unit>
        <trans-unit id="3238" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Int32})">
          <source>Computes the average of a sequence of <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> values.</source>
          <target state="translated">Computa a média de uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3239" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Int64})">
          <source>A sequence of <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> values to calculate the average of.</source>
          <target state="translated">Uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> para realizar o cálculo da média.</target>       </trans-unit>
        <trans-unit id="3240" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Int64})">
          <source>Computes the average of a sequence of <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> values.</source>
          <target state="translated">Computa a média de uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3241" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Decimal}})">
          <source>A sequence of nullable <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> values to calculate the average of.</source>
          <target state="translated">Uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> que permitem valores nulos para cálculo da média.</target>       </trans-unit>
        <trans-unit id="3242" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Decimal}})">
          <source>Computes the average of a sequence of nullable <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> values.</source>
          <target state="translated">Computa a média de uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> que permitem valores nulos.</target>       </trans-unit>
        <trans-unit id="3243" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Double}})">
          <source>A sequence of nullable <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> values to calculate the average of.</source>
          <target state="translated">Uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> que permitem valores nulos para cálculo da média.</target>       </trans-unit>
        <trans-unit id="3244" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Double}})">
          <source>Computes the average of a sequence of nullable <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> values.</source>
          <target state="translated">Computa a média de uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> que permitem valores nulos.</target>       </trans-unit>
        <trans-unit id="3245" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Int32}})">
          <source>A sequence of nullable <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> values to calculate the average of.</source>
          <target state="translated">Uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> que permitem valores nulos para cálculo da média.</target>       </trans-unit>
        <trans-unit id="3246" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Int32}})">
          <source>Computes the average of a sequence of nullable <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> values.</source>
          <target state="translated">Computa a média de uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> que permitem valores nulos.</target>       </trans-unit>
        <trans-unit id="3247" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Int64}})">
          <source>A sequence of nullable <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> values to calculate the average of.</source>
          <target state="translated">Uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> que permitem valores nulos para cálculo da média.</target>       </trans-unit>
        <trans-unit id="3248" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Int64}})">
          <source>Computes the average of a sequence of nullable <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> values.</source>
          <target state="translated">Computa a média de uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> que permitem valores nulos.</target>       </trans-unit>
        <trans-unit id="3249" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Single}})">
          <source>A sequence of nullable <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> values to calculate the average of.</source>
          <target state="translated">Uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> que permitem valores nulos para cálculo da média.</target>       </trans-unit>
        <trans-unit id="3250" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Single}})">
          <source>Computes the average of a sequence of nullable <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> values.</source>
          <target state="translated">Computa a média de uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> que permitem valores nulos.</target>       </trans-unit>
        <trans-unit id="3251" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Single})">
          <source>A sequence of <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> values to calculate the average of.</source>
          <target state="translated">Uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> para realizar o cálculo da média.</target>       </trans-unit>
        <trans-unit id="3252" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Single})">
          <source>Computes the average of a sequence of <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> values.</source>
          <target state="translated">Computa a média de uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3254" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}})">
          <source>A sequence of values that are used to calculate an average.</source>
          <target state="translated">Uma sequência de valores usados para calcular uma média.</target>       </trans-unit>
        <trans-unit id="3255" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}})">
          <source>A projection function to apply to each element.</source>
          <target state="translated">Uma função de projeção a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="3256" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}})">
          <source>Computes the average of a sequence of <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> values that is obtained by invoking a projection function on each element of the input sequence.</source>
          <target state="translated">Calcula a média de uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> obtida invocando uma função de projeção em cada elemento da sequência de entrada.</target>       </trans-unit>
        <trans-unit id="3257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Double}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3258" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Double}})">
          <source>A sequence of values to calculate the average of.</source>
          <target state="translated">Uma sequência de valores para cálculo da média.</target>       </trans-unit>
        <trans-unit id="3259" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Double}})">
          <source>A projection function to apply to each element.</source>
          <target state="translated">Uma função de projeção a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="3260" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Double}})">
          <source>Computes the average of a sequence of <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> values that is obtained by invoking a projection function on each element of the input sequence.</source>
          <target state="translated">Calcula a média de uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> obtida invocando uma função de projeção em cada elemento da sequência de entrada.</target>       </trans-unit>
        <trans-unit id="3261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3262" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}})">
          <source>A sequence of values to calculate the average of.</source>
          <target state="translated">Uma sequência de valores para cálculo da média.</target>       </trans-unit>
        <trans-unit id="3263" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}})">
          <source>A projection function to apply to each element.</source>
          <target state="translated">Uma função de projeção a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="3264" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}})">
          <source>Computes the average of a sequence of <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> values that is obtained by invoking a projection function on each element of the input sequence.</source>
          <target state="translated">Calcula a média de uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> obtida invocando uma função de projeção em cada elemento da sequência de entrada.</target>       </trans-unit>
        <trans-unit id="3265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int64}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3266" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int64}})">
          <source>A sequence of values to calculate the average of.</source>
          <target state="translated">Uma sequência de valores para cálculo da média.</target>       </trans-unit>
        <trans-unit id="3267" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int64}})">
          <source>A projection function to apply to each element.</source>
          <target state="translated">Uma função de projeção a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="3268" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int64}})">
          <source>Computes the average of a sequence of <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> values that is obtained by invoking a projection function on each element of the input sequence.</source>
          <target state="translated">Calcula a média de uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> obtida invocando uma função de projeção em cada elemento da sequência de entrada.</target>       </trans-unit>
        <trans-unit id="3269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3270" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}})">
          <source>A sequence of values to calculate the average of.</source>
          <target state="translated">Uma sequência de valores para cálculo da média.</target>       </trans-unit>
        <trans-unit id="3271" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}})">
          <source>A projection function to apply to each element.</source>
          <target state="translated">Uma função de projeção a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="3272" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}})">
          <source>Computes the average of a sequence of nullable <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> values that is obtained by invoking a projection function on each element of the input sequence.</source>
          <target state="translated">Calcula a média de uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> anuláveis obtida invocando uma função de projeção em cada elemento da sequência de entrada.</target>       </trans-unit>
        <trans-unit id="3273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3274" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}})">
          <source>A sequence of values to calculate the average of.</source>
          <target state="translated">Uma sequência de valores para cálculo da média.</target>       </trans-unit>
        <trans-unit id="3275" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}})">
          <source>A projection function to apply to each element.</source>
          <target state="translated">Uma função de projeção a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="3276" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}})">
          <source>Computes the average of a sequence of nullable <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> values that is obtained by invoking a projection function on each element of the input sequence.</source>
          <target state="translated">Calcula a média de uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> anuláveis obtida invocando uma função de projeção em cada elemento da sequência de entrada.</target>       </trans-unit>
        <trans-unit id="3277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3278" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}})">
          <source>A sequence of values to calculate the average of.</source>
          <target state="translated">Uma sequência de valores para cálculo da média.</target>       </trans-unit>
        <trans-unit id="3279" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}})">
          <source>A projection function to apply to each element.</source>
          <target state="translated">Uma função de projeção a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="3280" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}})">
          <source>Computes the average of a sequence of nullable <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> values that is obtained by invoking a projection function on each element of the input sequence.</source>
          <target state="translated">Calcula a média de uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> anuláveis obtida invocando uma função de projeção em cada elemento da sequência de entrada.</target>       </trans-unit>
        <trans-unit id="3281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3282" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}})">
          <source>A sequence of values to calculate the average of.</source>
          <target state="translated">Uma sequência de valores para cálculo da média.</target>       </trans-unit>
        <trans-unit id="3283" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}})">
          <source>A projection function to apply to each element.</source>
          <target state="translated">Uma função de projeção a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="3284" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}})">
          <source>Computes the average of a sequence of nullable <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> values that is obtained by invoking a projection function on each element of the input sequence.</source>
          <target state="translated">Calcula a média de uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> anuláveis obtida invocando uma função de projeção em cada elemento da sequência de entrada.</target>       </trans-unit>
        <trans-unit id="3285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3286" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}})">
          <source>A sequence of values to calculate the average of.</source>
          <target state="translated">Uma sequência de valores para cálculo da média.</target>       </trans-unit>
        <trans-unit id="3287" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}})">
          <source>A projection function to apply to each element.</source>
          <target state="translated">Uma função de projeção a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="3288" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}})">
          <source>Computes the average of a sequence of nullable <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> values that is obtained by invoking a projection function on each element of the input sequence.</source>
          <target state="translated">Calcula a média de uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> anuláveis obtida invocando uma função de projeção em cada elemento da sequência de entrada.</target>       </trans-unit>
        <trans-unit id="3289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Single}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3290" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Single}})">
          <source>A sequence of values to calculate the average of.</source>
          <target state="translated">Uma sequência de valores para cálculo da média.</target>       </trans-unit>
        <trans-unit id="3291" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Single}})">
          <source>A projection function to apply to each element.</source>
          <target state="translated">Uma função de projeção a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="3292" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Single}})">
          <source>Computes the average of a sequence of <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> values that is obtained by invoking a projection function on each element of the input sequence.</source>
          <target state="translated">Calcula a média de uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> obtida invocando uma função de projeção em cada elemento da sequência de entrada.</target>       </trans-unit>
        <trans-unit id="3293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Cast``1(System.Linq.IQueryable)">
          <source>The type to convert the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept> to.</source>
          <target state="translated">O tipo para converter os elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept> para.</target>       </trans-unit>
        <trans-unit id="3294" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Cast``1(System.Linq.IQueryable)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable" /&gt;</ph> that contains the elements to be converted.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable" /&gt;</ph> que contém os elementos a serem convertidos.</target>       </trans-unit>
        <trans-unit id="3295" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Cast``1(System.Linq.IQueryable)">
          <source>Converts the elements of an <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable" /&gt;</ph> to the specified type.</source>
          <target state="translated">Converte os elementos de um <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable" /&gt;</ph> para o tipo especificado.</target>       </trans-unit>
        <trans-unit id="3296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Concat``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>The type of the elements of the input sequences.</source>
          <target state="translated">O tipo dos elementos das sequências de entrada.</target>       </trans-unit>
        <trans-unit id="3297" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Concat``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>The first sequence to concatenate.</source>
          <target state="translated">A primeira sequência a ser concatenada.</target>       </trans-unit>
        <trans-unit id="3298" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Concat``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>The sequence to concatenate to the first sequence.</source>
          <target state="translated">A sequência a ser concatenada com a primeira sequência.</target>       </trans-unit>
        <trans-unit id="3299" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Concat``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>Concatenates two sequences.</source>
          <target state="translated">Concatena duas sequências.</target>       </trans-unit>
        <trans-unit id="3300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Contains``1(System.Linq.IQueryable{``0},``0)">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3301" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Contains``1(System.Linq.IQueryable{``0},``0)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> in which to locate <bpt id="p1">&lt;c&gt;</bpt>item<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> no qual localizar o <bpt id="p1">&lt;c&gt;</bpt>item<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3302" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Contains``1(System.Linq.IQueryable{``0},``0)">
          <source>The object to locate in the sequence.</source>
          <target state="translated">O objeto a ser localizado na sequência.</target>       </trans-unit>
        <trans-unit id="3303" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Contains``1(System.Linq.IQueryable{``0},``0)">
          <source>Determines whether a sequence contains a specified element by using the default equality comparer.</source>
          <target state="translated">Determina se uma sequência contém um elemento especificado usando o comparador de igualdade padrão.</target>       </trans-unit>
        <trans-unit id="3304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Contains``1(System.Linq.IQueryable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3305" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Contains``1(System.Linq.IQueryable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> in which to locate <bpt id="p1">&lt;c&gt;</bpt>item<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> no qual localizar o <bpt id="p1">&lt;c&gt;</bpt>item<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3306" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Contains``1(System.Linq.IQueryable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})">
          <source>The object to locate in the sequence.</source>
          <target state="translated">O objeto a ser localizado na sequência.</target>       </trans-unit>
        <trans-unit id="3307" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Contains``1(System.Linq.IQueryable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to compare values.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> para comparar valores.</target>       </trans-unit>
        <trans-unit id="3308" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Contains``1(System.Linq.IQueryable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})">
          <source>Determines whether a sequence contains a specified element by using a specified <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>.</source>
          <target state="translated">Determina se uma sequência contém um elemento especificado usando um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="3309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Count``1(System.Linq.IQueryable{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3310" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Count``1(System.Linq.IQueryable{``0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> that contains the elements to be counted.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> que contém os elementos a serem contados.</target>       </trans-unit>
        <trans-unit id="3311" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Count``1(System.Linq.IQueryable{``0})">
          <source>Returns the number of elements in a sequence.</source>
          <target state="translated">Retorna o número de elementos em uma sequência.</target>       </trans-unit>
        <trans-unit id="3312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Count``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3313" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Count``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> that contains the elements to be counted.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> que contém os elementos a serem contados.</target>       </trans-unit>
        <trans-unit id="3314" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Count``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
          <source>A function to test each element for a condition.</source>
          <target state="translated">Uma função para testar cada elemento em relação a uma condição.</target>       </trans-unit>
        <trans-unit id="3315" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Count``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
          <source>Returns the number of elements in the specified sequence that satisfies a condition.</source>
          <target state="translated">Retorna o número de elementos na sequência especificada que atendem a uma condição.</target>       </trans-unit>
        <trans-unit id="3316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.DefaultIfEmpty``1(System.Linq.IQueryable{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3317" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.DefaultIfEmpty``1(System.Linq.IQueryable{``0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> to return a default value for if empty.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> para o qual será retornado um valor padrão se estiver vazio.</target>       </trans-unit>
        <trans-unit id="3318" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.DefaultIfEmpty``1(System.Linq.IQueryable{``0})">
          <source>Returns the elements of the specified sequence or the type parameter's default value in a singleton collection if the sequence is empty.</source>
          <target state="translated">Retornará os elementos da sequência especificada ou o valor padrão do parâmetro de tipo em uma coleção de singletons se a sequência estiver vazia.</target>       </trans-unit>
        <trans-unit id="3319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.DefaultIfEmpty``1(System.Linq.IQueryable{``0},``0)">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3320" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.DefaultIfEmpty``1(System.Linq.IQueryable{``0},``0)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> to return the specified value for if empty.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> para o qual será retornado o valor especificado se ele estiver vazio.</target>       </trans-unit>
        <trans-unit id="3321" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.DefaultIfEmpty``1(System.Linq.IQueryable{``0},``0)">
          <source>The value to return if the sequence is empty.</source>
          <target state="translated">O valor a ser retornado se a sequência estiver vazia.</target>       </trans-unit>
        <trans-unit id="3322" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.DefaultIfEmpty``1(System.Linq.IQueryable{``0},``0)">
          <source>Returns the elements of the specified sequence or the specified value in a singleton collection if the sequence is empty.</source>
          <target state="translated">Retorna os elementos da sequência especificada ou o valor especificado em uma coleção de singletons se a sequência está vazia.</target>       </trans-unit>
        <trans-unit id="3323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Distinct``1(System.Linq.IQueryable{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3324" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Distinct``1(System.Linq.IQueryable{``0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> to remove duplicates from.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> do qual as duplicatas serão removidas.</target>       </trans-unit>
        <trans-unit id="3325" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Distinct``1(System.Linq.IQueryable{``0})">
          <source>Returns distinct elements from a sequence by using the default equality comparer to compare values.</source>
          <target state="translated">Retorna os elementos distintos de uma sequência usando o comparador de igualdade padrão para comparar valores.</target>       </trans-unit>
        <trans-unit id="3326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Distinct``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3327" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Distinct``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> to remove duplicates from.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> do qual as duplicatas serão removidas.</target>       </trans-unit>
        <trans-unit id="3328" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Distinct``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to compare values.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> para comparar valores.</target>       </trans-unit>
        <trans-unit id="3329" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Distinct``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>Returns distinct elements from a sequence by using a specified <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to compare values.</source>
          <target state="translated">Retorna os elementos distintos de uma sequência usando um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> especificado para comparar valores.</target>       </trans-unit>
        <trans-unit id="3330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.ElementAt``1(System.Linq.IQueryable{``0},System.Int32)">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3331" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.ElementAt``1(System.Linq.IQueryable{``0},System.Int32)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> to return an element from.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> do qual um elemento será retornado.</target>       </trans-unit>
        <trans-unit id="3332" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.ElementAt``1(System.Linq.IQueryable{``0},System.Int32)">
          <source>The zero-based index of the element to retrieve.</source>
          <target state="translated">O índice baseado em zero do elemento a ser recuperado.</target>       </trans-unit>
        <trans-unit id="3333" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.ElementAt``1(System.Linq.IQueryable{``0},System.Int32)">
          <source>Returns the element at a specified index in a sequence.</source>
          <target state="translated">Retorna o elemento de um índice especificado em uma sequência.</target>       </trans-unit>
        <trans-unit id="3334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.ElementAtOrDefault``1(System.Linq.IQueryable{``0},System.Int32)">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3335" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.ElementAtOrDefault``1(System.Linq.IQueryable{``0},System.Int32)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> to return an element from.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> do qual um elemento será retornado.</target>       </trans-unit>
        <trans-unit id="3336" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.ElementAtOrDefault``1(System.Linq.IQueryable{``0},System.Int32)">
          <source>The zero-based index of the element to retrieve.</source>
          <target state="translated">O índice baseado em zero do elemento a ser recuperado.</target>       </trans-unit>
        <trans-unit id="3337" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.ElementAtOrDefault``1(System.Linq.IQueryable{``0},System.Int32)">
          <source>Returns the element at a specified index in a sequence or a default value if the index is out of range.</source>
          <target state="translated">Retorna o elemento em um índice especificado em uma sequência ou um valor padrão se o índice estiver fora do intervalo.</target>       </trans-unit>
        <trans-unit id="3338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Except``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>The type of the elements of the input sequences.</source>
          <target state="translated">O tipo dos elementos das sequências de entrada.</target>       </trans-unit>
        <trans-unit id="3339" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Except``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> whose elements that are not also in <bpt id="p1">&lt;c&gt;</bpt>source2<ept id="p1">&lt;/c&gt;</ept> will be returned.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> cujos elementos que não estão também em <bpt id="p1">&lt;c&gt;</bpt>source2<ept id="p1">&lt;/c&gt;</ept> serão retornados.</target>       </trans-unit>
        <trans-unit id="3340" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Except``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> whose elements that also occur in the first sequence will not appear in the returned sequence.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> cujos elementos que também ocorrem na primeira sequência não aparecerão na sequência retornada.</target>       </trans-unit>
        <trans-unit id="3341" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Except``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>Produces the set difference of two sequences by using the default equality comparer to compare values.</source>
          <target state="translated">Produz a diferença de conjunto de duas sequências usando o comparador de igualdade padrão para comparar os valores.</target>       </trans-unit>
        <trans-unit id="3342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Except``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The type of the elements of the input sequences.</source>
          <target state="translated">O tipo dos elementos das sequências de entrada.</target>       </trans-unit>
        <trans-unit id="3343" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Except``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> whose elements that are not also in <bpt id="p1">&lt;c&gt;</bpt>source2<ept id="p1">&lt;/c&gt;</ept> will be returned.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> cujos elementos que não estão também em <bpt id="p1">&lt;c&gt;</bpt>source2<ept id="p1">&lt;/c&gt;</ept> serão retornados.</target>       </trans-unit>
        <trans-unit id="3344" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Except``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> whose elements that also occur in the first sequence will not appear in the returned sequence.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> cujos elementos que também ocorrem na primeira sequência não aparecerão na sequência retornada.</target>       </trans-unit>
        <trans-unit id="3345" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Except``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to compare values.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> para comparar valores.</target>       </trans-unit>
        <trans-unit id="3346" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Except``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>Produces the set difference of two sequences by using the specified <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to compare values.</source>
          <target state="translated">Produz a diferença de conjunto de duas sequências usando o <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> especificado para comparar os valores.</target>       </trans-unit>
        <trans-unit id="3347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.First``1(System.Linq.IQueryable{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3348" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.First``1(System.Linq.IQueryable{``0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> to return the first element of.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> do qual o primeiro elemento será retornado.</target>       </trans-unit>
        <trans-unit id="3349" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.First``1(System.Linq.IQueryable{``0})">
          <source>Returns the first element of a sequence.</source>
          <target state="translated">Retorna o primeiro elemento de uma sequência.</target>       </trans-unit>
        <trans-unit id="3350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.First``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3351" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.First``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> to return an element from.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> do qual um elemento será retornado.</target>       </trans-unit>
        <trans-unit id="3352" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.First``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
          <source>A function to test each element for a condition.</source>
          <target state="translated">Uma função para testar cada elemento em relação a uma condição.</target>       </trans-unit>
        <trans-unit id="3353" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.First``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
          <source>Returns the first element of a sequence that satisfies a specified condition.</source>
          <target state="translated">Retorna o primeiro elemento de uma sequência que satisfaz uma condição especificada.</target>       </trans-unit>
        <trans-unit id="3354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.FirstOrDefault``1(System.Linq.IQueryable{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3355" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.FirstOrDefault``1(System.Linq.IQueryable{``0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> to return the first element of.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> do qual o primeiro elemento será retornado.</target>       </trans-unit>
        <trans-unit id="3356" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.FirstOrDefault``1(System.Linq.IQueryable{``0})">
          <source>Returns the first element of a sequence, or a default value if the sequence contains no elements.</source>
          <target state="translated">Retorna o primeiro elemento de uma sequência ou um valor padrão se a sequência não contém elementos.</target>       </trans-unit>
        <trans-unit id="3357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.FirstOrDefault``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3358" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.FirstOrDefault``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> to return an element from.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> do qual um elemento será retornado.</target>       </trans-unit>
        <trans-unit id="3359" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.FirstOrDefault``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
          <source>A function to test each element for a condition.</source>
          <target state="translated">Uma função para testar cada elemento em relação a uma condição.</target>       </trans-unit>
        <trans-unit id="3360" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.FirstOrDefault``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
          <source>Returns the first element of a sequence that satisfies a specified condition or a default value if no such element is found.</source>
          <target state="translated">Retorna o primeiro elemento de uma sequência que atende a uma condição especificada ou um valor padrão se esse elemento não é encontrado.</target>       </trans-unit>
        <trans-unit id="3361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.GroupBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.GroupBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
          <source>The type of the key returned by the function represented in <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo da chave retornada pela função representada em <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3363" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> whose elements to group.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> cujos elementos serão agrupados.</target>       </trans-unit>
        <trans-unit id="3364" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
          <source>A function to extract the key for each element.</source>
          <target state="translated">Uma função para extrair a chave de cada elemento.</target>       </trans-unit>
        <trans-unit id="3365" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
          <source>Groups the elements of a sequence according to a specified key selector function.</source>
          <target state="translated">Agrupa os elementos de uma sequência de acordo com uma função de seletor de chave especificada.</target>       </trans-unit>
        <trans-unit id="3366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.GroupBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.GroupBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the key returned by the function represented in <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo da chave retornada pela função representada em <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3368" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEqualityComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> whose elements to group.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> cujos elementos serão agrupados.</target>       </trans-unit>
        <trans-unit id="3369" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A function to extract the key for each element.</source>
          <target state="translated">Uma função para extrair a chave de cada elemento.</target>       </trans-unit>
        <trans-unit id="3370" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEqualityComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to compare keys.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> para comparar chaves.</target>       </trans-unit>
        <trans-unit id="3371" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEqualityComparer{``1})">
          <source>Groups the elements of a sequence according to a specified key selector function and compares the keys by using a specified comparer.</source>
          <target state="translated">Agrupa os elementos de uma sequência de acordo com uma função do seletor de chave especificada e compara as chaves usando um comparador especificado.</target>       </trans-unit>
        <trans-unit id="3372" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3373" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}})">
          <source>The type of the key returned by the function represented in <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo da chave retornada pela função representada em <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3374" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}})">
          <source>The type of the elements in each <ph id="ph1">&lt;see cref="T:System.Linq.IGrouping`2" /&gt;</ph>.</source>
          <target state="translated">O tipo dos elementos em cada <ph id="ph1">&lt;see cref="T:System.Linq.IGrouping`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3375" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> whose elements to group.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> cujos elementos serão agrupados.</target>       </trans-unit>
        <trans-unit id="3376" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}})">
          <source>A function to extract the key for each element.</source>
          <target state="translated">Uma função para extrair a chave de cada elemento.</target>       </trans-unit>
        <trans-unit id="3377" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}})">
          <source>A function to map each source element to an element in an <ph id="ph1">&lt;see cref="T:System.Linq.IGrouping`2" /&gt;</ph>.</source>
          <target state="translated">Uma função para mapear cada elemento de origem para um elemento em um <ph id="ph1">&lt;see cref="T:System.Linq.IGrouping`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3378" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}})">
          <source>Groups the elements of a sequence according to a specified key selector function and projects the elements for each group by using a specified function.</source>
          <target state="translated">Agrupa os elementos de uma sequência de acordo com a função de seletor de chave especificada e projeta os elementos de cada grupo usando uma função especificada.</target>       </trans-unit>
        <trans-unit id="3379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the key returned by the function represented in <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo da chave retornada pela função representada em <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the elements in each <ph id="ph1">&lt;see cref="T:System.Linq.IGrouping`2" /&gt;</ph>.</source>
          <target state="translated">O tipo dos elementos em cada <ph id="ph1">&lt;see cref="T:System.Linq.IGrouping`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3382" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Collections.Generic.IEqualityComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> whose elements to group.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> cujos elementos serão agrupados.</target>       </trans-unit>
        <trans-unit id="3383" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A function to extract the key for each element.</source>
          <target state="translated">Uma função para extrair a chave de cada elemento.</target>       </trans-unit>
        <trans-unit id="3384" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A function to map each source element to an element in an <ph id="ph1">&lt;see cref="T:System.Linq.IGrouping`2" /&gt;</ph>.</source>
          <target state="translated">Uma função para mapear cada elemento de origem para um elemento em um <ph id="ph1">&lt;see cref="T:System.Linq.IGrouping`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3385" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Collections.Generic.IEqualityComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to compare keys.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> para comparar chaves.</target>       </trans-unit>
        <trans-unit id="3386" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Collections.Generic.IEqualityComparer{``1})">
          <source>Groups the elements of a sequence and projects the elements for each group by using a specified function.</source>
          <target state="translated">Agrupa os elementos de uma sequência e projeta os elementos para cada grupo usando uma função especificada.</target>       </trans-unit>
        <trans-unit id="3387" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Collections.Generic.IEqualityComparer{``1})">
          <source>Key values are compared by using a specified comparer.</source>
          <target state="translated">Os valores de chave são comparados usando um comparador especificado.</target>       </trans-unit>
        <trans-unit id="3388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}})">
          <source>The type of the key returned by the function represented in <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo da chave retornada pela função representada em <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}})">
          <source>The type of the result value returned by <bpt id="p1">&lt;c&gt;</bpt>resultSelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo do valor de resultado retornado por <bpt id="p1">&lt;c&gt;</bpt>resultSelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3391" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> whose elements to group.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> cujos elementos serão agrupados.</target>       </trans-unit>
        <trans-unit id="3392" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}})">
          <source>A function to extract the key for each element.</source>
          <target state="translated">Uma função para extrair a chave de cada elemento.</target>       </trans-unit>
        <trans-unit id="3393" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}})">
          <source>A function to create a result value from each group.</source>
          <target state="translated">Uma função para criar um valor de resultado de cada grupo.</target>       </trans-unit>
        <trans-unit id="3394" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}})">
          <source>Groups the elements of a sequence according to a specified key selector function and creates a result value from each group and its key.</source>
          <target state="translated">Agrupa os elementos de uma sequência de acordo com uma função do seletor de chave especificada e cria um valor de resultado de cada grupo e sua chave.</target>       </trans-unit>
        <trans-unit id="3395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the key returned by the function represented in <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo da chave retornada pela função representada em <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the result value returned by <bpt id="p1">&lt;c&gt;</bpt>resultSelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo do valor de resultado retornado por <bpt id="p1">&lt;c&gt;</bpt>resultSelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3398" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}},System.Collections.Generic.IEqualityComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> whose elements to group.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> cujos elementos serão agrupados.</target>       </trans-unit>
        <trans-unit id="3399" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A function to extract the key for each element.</source>
          <target state="translated">Uma função para extrair a chave de cada elemento.</target>       </trans-unit>
        <trans-unit id="3400" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A function to create a result value from each group.</source>
          <target state="translated">Uma função para criar um valor de resultado de cada grupo.</target>       </trans-unit>
        <trans-unit id="3401" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}},System.Collections.Generic.IEqualityComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to compare keys.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> para comparar chaves.</target>       </trans-unit>
        <trans-unit id="3402" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}},System.Collections.Generic.IEqualityComparer{``1})">
          <source>Groups the elements of a sequence according to a specified key selector function and creates a result value from each group and its key.</source>
          <target state="translated">Agrupa os elementos de uma sequência de acordo com uma função do seletor de chave especificada e cria um valor de resultado de cada grupo e sua chave.</target>       </trans-unit>
        <trans-unit id="3403" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}},System.Collections.Generic.IEqualityComparer{``1})">
          <source>Keys are compared by using a specified comparer.</source>
          <target state="translated">As chaves são comparadas usando um comparador especificado.</target>       </trans-unit>
        <trans-unit id="3404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}})">
          <source>The type of the key returned by the function represented in <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo da chave retornada pela função representada em <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}})">
          <source>The type of the elements in each <ph id="ph1">&lt;see cref="T:System.Linq.IGrouping`2" /&gt;</ph>.</source>
          <target state="translated">O tipo dos elementos em cada <ph id="ph1">&lt;see cref="T:System.Linq.IGrouping`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}})">
          <source>The type of the result value returned by <bpt id="p1">&lt;c&gt;</bpt>resultSelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo do valor de resultado retornado por <bpt id="p1">&lt;c&gt;</bpt>resultSelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3408" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> whose elements to group.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> cujos elementos serão agrupados.</target>       </trans-unit>
        <trans-unit id="3409" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}})">
          <source>A function to extract the key for each element.</source>
          <target state="translated">Uma função para extrair a chave de cada elemento.</target>       </trans-unit>
        <trans-unit id="3410" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}})">
          <source>A function to map each source element to an element in an <ph id="ph1">&lt;see cref="T:System.Linq.IGrouping`2" /&gt;</ph>.</source>
          <target state="translated">Uma função para mapear cada elemento de origem para um elemento em um <ph id="ph1">&lt;see cref="T:System.Linq.IGrouping`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3411" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}})">
          <source>A function to create a result value from each group.</source>
          <target state="translated">Uma função para criar um valor de resultado de cada grupo.</target>       </trans-unit>
        <trans-unit id="3412" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}})">
          <source>Groups the elements of a sequence according to a specified key selector function and creates a result value from each group and its key.</source>
          <target state="translated">Agrupa os elementos de uma sequência de acordo com uma função do seletor de chave especificada e cria um valor de resultado de cada grupo e sua chave.</target>       </trans-unit>
        <trans-unit id="3413" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}})">
          <source>The elements of each group are projected by using a specified function.</source>
          <target state="translated">Os elementos de cada grupo são projetados usando uma função especificada.</target>       </trans-unit>
        <trans-unit id="3414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the key returned by the function represented in <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo da chave retornada pela função representada em <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the elements in each <ph id="ph1">&lt;see cref="T:System.Linq.IGrouping`2" /&gt;</ph>.</source>
          <target state="translated">O tipo dos elementos em cada <ph id="ph1">&lt;see cref="T:System.Linq.IGrouping`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3417" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the result value returned by <bpt id="p1">&lt;c&gt;</bpt>resultSelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo do valor de resultado retornado por <bpt id="p1">&lt;c&gt;</bpt>resultSelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3418" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}},System.Collections.Generic.IEqualityComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> whose elements to group.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> cujos elementos serão agrupados.</target>       </trans-unit>
        <trans-unit id="3419" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A function to extract the key for each element.</source>
          <target state="translated">Uma função para extrair a chave de cada elemento.</target>       </trans-unit>
        <trans-unit id="3420" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A function to map each source element to an element in an <ph id="ph1">&lt;see cref="T:System.Linq.IGrouping`2" /&gt;</ph>.</source>
          <target state="translated">Uma função para mapear cada elemento de origem para um elemento em um <ph id="ph1">&lt;see cref="T:System.Linq.IGrouping`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3421" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A function to create a result value from each group.</source>
          <target state="translated">Uma função para criar um valor de resultado de cada grupo.</target>       </trans-unit>
        <trans-unit id="3422" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}},System.Collections.Generic.IEqualityComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to compare keys.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> para comparar chaves.</target>       </trans-unit>
        <trans-unit id="3423" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}},System.Collections.Generic.IEqualityComparer{``1})">
          <source>Groups the elements of a sequence according to a specified key selector function and creates a result value from each group and its key.</source>
          <target state="translated">Agrupa os elementos de uma sequência de acordo com uma função do seletor de chave especificada e cria um valor de resultado de cada grupo e sua chave.</target>       </trans-unit>
        <trans-unit id="3424" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}},System.Collections.Generic.IEqualityComparer{``1})">
          <source>Keys are compared by using a specified comparer and the elements of each group are projected by using a specified function.</source>
          <target state="translated">As chaves são comparadas usando um comparador especificado e os elementos de cada grupo são projetados usando uma função especificada.</target>       </trans-unit>
        <trans-unit id="3425" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}})">
          <source>The type of the elements of the first sequence.</source>
          <target state="translated">O tipo dos elementos da primeira sequência.</target>       </trans-unit>
        <trans-unit id="3426" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}})">
          <source>The type of the elements of the second sequence.</source>
          <target state="translated">O tipo dos elementos da segunda sequência.</target>       </trans-unit>
        <trans-unit id="3427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}})">
          <source>The type of the keys returned by the key selector functions.</source>
          <target state="translated">O tipo das chaves retornadas pelas funções de seletor de chave.</target>       </trans-unit>
        <trans-unit id="3428" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}})">
          <source>The type of the result elements.</source>
          <target state="translated">O tipo dos elementos de resultado.</target>       </trans-unit>
        <trans-unit id="3429" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}})">
          <source>The first sequence to join.</source>
          <target state="translated">A primeira sequência a ser ingressada.</target>       </trans-unit>
        <trans-unit id="3430" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}})">
          <source>The sequence to join to the first sequence.</source>
          <target state="translated">A sequência a ser ingressada à primeira sequência.</target>       </trans-unit>
        <trans-unit id="3431" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}})">
          <source>A function to extract the join key from each element of the first sequence.</source>
          <target state="translated">Uma função para extrair a chave de junção de cada elemento da primeira sequência.</target>       </trans-unit>
        <trans-unit id="3432" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}})">
          <source>A function to extract the join key from each element of the second sequence.</source>
          <target state="translated">Uma função para extrair a chave de junção de cada elemento da segunda sequência.</target>       </trans-unit>
        <trans-unit id="3433" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}})">
          <source>A function to create a result element from an element from the first sequence and a collection of matching elements from the second sequence.</source>
          <target state="translated">Uma função para criar um elemento de resultado de um elemento da primeira sequência e uma coleção de elementos correspondentes da segunda sequência.</target>       </trans-unit>
        <trans-unit id="3434" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}})">
          <source>Correlates the elements of two sequences based on key equality and groups the results.</source>
          <target state="translated">Correlaciona os elementos de duas sequências com base na igualdade de chaves e agrupa os resultados.</target>       </trans-unit>
        <trans-unit id="3435" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}})">
          <source>The default equality comparer is used to compare keys.</source>
          <target state="translated">O comparador de igualdade padrão é usado para comparar chaves.</target>       </trans-unit>
        <trans-unit id="3436" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The type of the elements of the first sequence.</source>
          <target state="translated">O tipo dos elementos da primeira sequência.</target>       </trans-unit>
        <trans-unit id="3437" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The type of the elements of the second sequence.</source>
          <target state="translated">O tipo dos elementos da segunda sequência.</target>       </trans-unit>
        <trans-unit id="3438" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The type of the keys returned by the key selector functions.</source>
          <target state="translated">O tipo das chaves retornadas pelas funções de seletor de chave.</target>       </trans-unit>
        <trans-unit id="3439" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The type of the result elements.</source>
          <target state="translated">O tipo dos elementos de resultado.</target>       </trans-unit>
        <trans-unit id="3440" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The first sequence to join.</source>
          <target state="translated">A primeira sequência a ser ingressada.</target>       </trans-unit>
        <trans-unit id="3441" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The sequence to join to the first sequence.</source>
          <target state="translated">A sequência a ser ingressada à primeira sequência.</target>       </trans-unit>
        <trans-unit id="3442" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}},System.Collections.Generic.IEqualityComparer{``2})">
          <source>A function to extract the join key from each element of the first sequence.</source>
          <target state="translated">Uma função para extrair a chave de junção de cada elemento da primeira sequência.</target>       </trans-unit>
        <trans-unit id="3443" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}},System.Collections.Generic.IEqualityComparer{``2})">
          <source>A function to extract the join key from each element of the second sequence.</source>
          <target state="translated">Uma função para extrair a chave de junção de cada elemento da segunda sequência.</target>       </trans-unit>
        <trans-unit id="3444" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}},System.Collections.Generic.IEqualityComparer{``2})">
          <source>A function to create a result element from an element from the first sequence and a collection of matching elements from the second sequence.</source>
          <target state="translated">Uma função para criar um elemento de resultado de um elemento da primeira sequência e uma coleção de elementos correspondentes da segunda sequência.</target>       </trans-unit>
        <trans-unit id="3445" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}},System.Collections.Generic.IEqualityComparer{``2})">
          <source>A comparer to hash and compare keys.</source>
          <target state="translated">Um comparador para executar hash e comparar chaves.</target>       </trans-unit>
        <trans-unit id="3446" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}},System.Collections.Generic.IEqualityComparer{``2})">
          <source>Correlates the elements of two sequences based on key equality and groups the results.</source>
          <target state="translated">Correlaciona os elementos de duas sequências com base na igualdade de chaves e agrupa os resultados.</target>       </trans-unit>
        <trans-unit id="3447" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}},System.Collections.Generic.IEqualityComparer{``2})">
          <source>A specified <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> is used to compare keys.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> especificado é usado para comparar chaves.</target>       </trans-unit>
        <trans-unit id="3448" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Intersect``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>The type of the elements of the input sequences.</source>
          <target state="translated">O tipo dos elementos das sequências de entrada.</target>       </trans-unit>
        <trans-unit id="3449" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Intersect``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>A sequence whose distinct elements that also appear in <bpt id="p1">&lt;c&gt;</bpt>source2<ept id="p1">&lt;/c&gt;</ept> are returned.</source>
          <target state="translated">Uma sequência cujos elementos distintos que também aparecem em <bpt id="p1">&lt;c&gt;</bpt>source2<ept id="p1">&lt;/c&gt;</ept> são retornados.</target>       </trans-unit>
        <trans-unit id="3450" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Intersect``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>A sequence whose distinct elements that also appear in the first sequence are returned.</source>
          <target state="translated">Uma sequência cujos elementos distintos que também aparecem na primeira sequência são retornados.</target>       </trans-unit>
        <trans-unit id="3451" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Intersect``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>Produces the set intersection of two sequences by using the default equality comparer to compare values.</source>
          <target state="translated">Produz a interseção de conjunto de duas sequências usando o comparador de igualdade padrão para comparar os valores.</target>       </trans-unit>
        <trans-unit id="3452" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Intersect``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The type of the elements of the input sequences.</source>
          <target state="translated">O tipo dos elementos das sequências de entrada.</target>       </trans-unit>
        <trans-unit id="3453" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Intersect``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> whose distinct elements that also appear in <bpt id="p1">&lt;c&gt;</bpt>source2<ept id="p1">&lt;/c&gt;</ept> are returned.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> cujos elementos distintos também aparecem em <bpt id="p1">&lt;c&gt;</bpt>source2<ept id="p1">&lt;/c&gt;</ept> são retornados.</target>       </trans-unit>
        <trans-unit id="3454" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Intersect``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> whose distinct elements that also appear in the first sequence are returned.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> cujos elementos distintos que também aparecem na primeira sequência são retornados.</target>       </trans-unit>
        <trans-unit id="3455" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Intersect``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to compare values.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> para comparar valores.</target>       </trans-unit>
        <trans-unit id="3456" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Intersect``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>Produces the set intersection of two sequences by using the specified <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to compare values.</source>
          <target state="translated">Produz a interseção de conjunto de duas sequências usando o <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> especificado para comparar os valores.</target>       </trans-unit>
        <trans-unit id="3457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}})">
          <source>The type of the elements of the first sequence.</source>
          <target state="translated">O tipo dos elementos da primeira sequência.</target>       </trans-unit>
        <trans-unit id="3458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}})">
          <source>The type of the elements of the second sequence.</source>
          <target state="translated">O tipo dos elementos da segunda sequência.</target>       </trans-unit>
        <trans-unit id="3459" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}})">
          <source>The type of the keys returned by the key selector functions.</source>
          <target state="translated">O tipo das chaves retornadas pelas funções de seletor de chave.</target>       </trans-unit>
        <trans-unit id="3460" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}})">
          <source>The type of the result elements.</source>
          <target state="translated">O tipo dos elementos de resultado.</target>       </trans-unit>
        <trans-unit id="3461" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}})">
          <source>The first sequence to join.</source>
          <target state="translated">A primeira sequência a ser ingressada.</target>       </trans-unit>
        <trans-unit id="3462" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}})">
          <source>The sequence to join to the first sequence.</source>
          <target state="translated">A sequência a ser ingressada à primeira sequência.</target>       </trans-unit>
        <trans-unit id="3463" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}})">
          <source>A function to extract the join key from each element of the first sequence.</source>
          <target state="translated">Uma função para extrair a chave de junção de cada elemento da primeira sequência.</target>       </trans-unit>
        <trans-unit id="3464" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}})">
          <source>A function to extract the join key from each element of the second sequence.</source>
          <target state="translated">Uma função para extrair a chave de junção de cada elemento da segunda sequência.</target>       </trans-unit>
        <trans-unit id="3465" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}})">
          <source>A function to create a result element from two matching elements.</source>
          <target state="translated">Uma função para criar um elemento de resultado de dois elementos correspondentes.</target>       </trans-unit>
        <trans-unit id="3466" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}})">
          <source>Correlates the elements of two sequences based on matching keys.</source>
          <target state="translated">Correlaciona os elementos de duas sequências com base em chaves de correspondência.</target>       </trans-unit>
        <trans-unit id="3467" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}})">
          <source>The default equality comparer is used to compare keys.</source>
          <target state="translated">O comparador de igualdade padrão é usado para comparar chaves.</target>       </trans-unit>
        <trans-unit id="3468" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The type of the elements of the first sequence.</source>
          <target state="translated">O tipo dos elementos da primeira sequência.</target>       </trans-unit>
        <trans-unit id="3469" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The type of the elements of the second sequence.</source>
          <target state="translated">O tipo dos elementos da segunda sequência.</target>       </trans-unit>
        <trans-unit id="3470" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The type of the keys returned by the key selector functions.</source>
          <target state="translated">O tipo das chaves retornadas pelas funções de seletor de chave.</target>       </trans-unit>
        <trans-unit id="3471" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The type of the result elements.</source>
          <target state="translated">O tipo dos elementos de resultado.</target>       </trans-unit>
        <trans-unit id="3472" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The first sequence to join.</source>
          <target state="translated">A primeira sequência a ser ingressada.</target>       </trans-unit>
        <trans-unit id="3473" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The sequence to join to the first sequence.</source>
          <target state="translated">A sequência a ser ingressada à primeira sequência.</target>       </trans-unit>
        <trans-unit id="3474" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}},System.Collections.Generic.IEqualityComparer{``2})">
          <source>A function to extract the join key from each element of the first sequence.</source>
          <target state="translated">Uma função para extrair a chave de junção de cada elemento da primeira sequência.</target>       </trans-unit>
        <trans-unit id="3475" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}},System.Collections.Generic.IEqualityComparer{``2})">
          <source>A function to extract the join key from each element of the second sequence.</source>
          <target state="translated">Uma função para extrair a chave de junção de cada elemento da segunda sequência.</target>       </trans-unit>
        <trans-unit id="3476" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}},System.Collections.Generic.IEqualityComparer{``2})">
          <source>A function to create a result element from two matching elements.</source>
          <target state="translated">Uma função para criar um elemento de resultado de dois elementos correspondentes.</target>       </trans-unit>
        <trans-unit id="3477" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}},System.Collections.Generic.IEqualityComparer{``2})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to hash and compare keys.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> para executar hash e comparar chaves.</target>       </trans-unit>
        <trans-unit id="3478" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}},System.Collections.Generic.IEqualityComparer{``2})">
          <source>Correlates the elements of two sequences based on matching keys.</source>
          <target state="translated">Correlaciona os elementos de duas sequências com base em chaves de correspondência.</target>       </trans-unit>
        <trans-unit id="3479" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}},System.Collections.Generic.IEqualityComparer{``2})">
          <source>A specified <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> is used to compare keys.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> especificado é usado para comparar chaves.</target>       </trans-unit>
        <trans-unit id="3480" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Last``1(System.Linq.IQueryable{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3481" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Last``1(System.Linq.IQueryable{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> to return the last element of.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> do qual o último elemento será retornado.</target>       </trans-unit>
        <trans-unit id="3482" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Last``1(System.Linq.IQueryable{``0})">
          <source>Returns the last element in a sequence.</source>
          <target state="translated">Retorna o último elemento em uma sequência.</target>       </trans-unit>
        <trans-unit id="3483" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Last``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3484" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Last``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> to return an element from.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> do qual um elemento será retornado.</target>       </trans-unit>
        <trans-unit id="3485" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Last``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
          <source>A function to test each element for a condition.</source>
          <target state="translated">Uma função para testar cada elemento em relação a uma condição.</target>       </trans-unit>
        <trans-unit id="3486" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Last``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
          <source>Returns the last element of a sequence that satisfies a specified condition.</source>
          <target state="translated">Retorna o último elemento de uma sequência que satisfaz uma condição especificada.</target>       </trans-unit>
        <trans-unit id="3487" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.LastOrDefault``1(System.Linq.IQueryable{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3488" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.LastOrDefault``1(System.Linq.IQueryable{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> to return the last element of.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> do qual o último elemento será retornado.</target>       </trans-unit>
        <trans-unit id="3489" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.LastOrDefault``1(System.Linq.IQueryable{``0})">
          <source>Returns the last element in a sequence, or a default value if the sequence contains no elements.</source>
          <target state="translated">Retorna o último elemento de uma sequência ou um valor padrão se a sequência não contém elementos.</target>       </trans-unit>
        <trans-unit id="3490" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.LastOrDefault``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3491" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.LastOrDefault``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> to return an element from.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> do qual um elemento será retornado.</target>       </trans-unit>
        <trans-unit id="3492" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.LastOrDefault``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
          <source>A function to test each element for a condition.</source>
          <target state="translated">Uma função para testar cada elemento em relação a uma condição.</target>       </trans-unit>
        <trans-unit id="3493" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.LastOrDefault``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
          <source>Returns the last element of a sequence that satisfies a condition or a default value if no such element is found.</source>
          <target state="translated">Retorna o último elemento de uma sequência que satisfaz uma condição ou um valor padrão, caso esse elemento não seja encontrado.</target>       </trans-unit>
        <trans-unit id="3494" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.LongCount``1(System.Linq.IQueryable{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3495" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.LongCount``1(System.Linq.IQueryable{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> that contains the elements to be counted.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> que contém os elementos a serem contados.</target>       </trans-unit>
        <trans-unit id="3496" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.LongCount``1(System.Linq.IQueryable{``0})">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> that represents the total number of elements in a sequence.</source>
          <target state="translated">Retorna um <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> que representa o número total de elementos em uma sequência.</target>       </trans-unit>
        <trans-unit id="3497" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.LongCount``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3498" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.LongCount``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> that contains the elements to be counted.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> que contém os elementos a serem contados.</target>       </trans-unit>
        <trans-unit id="3499" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.LongCount``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
          <source>A function to test each element for a condition.</source>
          <target state="translated">Uma função para testar cada elemento em relação a uma condição.</target>       </trans-unit>
        <trans-unit id="3500" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.LongCount``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> that represents the number of elements in a sequence that satisfy a condition.</source>
          <target state="translated">Retorna um <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> que representa o número de elementos em uma sequência que atendem a uma condição.</target>       </trans-unit>
        <trans-unit id="3501" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Max``1(System.Linq.IQueryable{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3502" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Max``1(System.Linq.IQueryable{``0})">
          <source>A sequence of values to determine the maximum of.</source>
          <target state="translated">Uma sequência de valores da qual será determinado o valor máximo.</target>       </trans-unit>
        <trans-unit id="3503" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Max``1(System.Linq.IQueryable{``0})">
          <source>Returns the maximum value in a generic <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph>.</source>
          <target state="translated">Retorna o valor máximo em um <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> genérico.</target>       </trans-unit>
        <trans-unit id="3504" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Max``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3505" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Max``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
          <source>The type of the value returned by the function represented by <bpt id="p1">&lt;c&gt;</bpt>selector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo do valor retornado pela função representada por <bpt id="p1">&lt;c&gt;</bpt>seletor<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3506" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Max``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
          <source>A sequence of values to determine the maximum of.</source>
          <target state="translated">Uma sequência de valores da qual será determinado o valor máximo.</target>       </trans-unit>
        <trans-unit id="3507" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Max``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
          <source>A projection function to apply to each element.</source>
          <target state="translated">Uma função de projeção a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="3508" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Max``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
          <source>Invokes a projection function on each element of a generic <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> and returns the maximum resulting value.</source>
          <target state="translated">Invoca uma função de projeção em cada elemento de um <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> genérico e retorna o valor resultante máximo.</target>       </trans-unit>
        <trans-unit id="3509" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Min``1(System.Linq.IQueryable{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3510" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Min``1(System.Linq.IQueryable{``0})">
          <source>A sequence of values to determine the minimum of.</source>
          <target state="translated">Uma sequência de valores para determinar o mínimo.</target>       </trans-unit>
        <trans-unit id="3511" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Min``1(System.Linq.IQueryable{``0})">
          <source>Returns the minimum value of a generic <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph>.</source>
          <target state="translated">Retorna o valor mínimo de um <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> genérico.</target>       </trans-unit>
        <trans-unit id="3512" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Min``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3513" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Min``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
          <source>The type of the value returned by the function represented by <bpt id="p1">&lt;c&gt;</bpt>selector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo do valor retornado pela função representada por <bpt id="p1">&lt;c&gt;</bpt>seletor<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3514" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Min``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
          <source>A sequence of values to determine the minimum of.</source>
          <target state="translated">Uma sequência de valores para determinar o mínimo.</target>       </trans-unit>
        <trans-unit id="3515" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Min``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
          <source>A projection function to apply to each element.</source>
          <target state="translated">Uma função de projeção a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="3516" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Min``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
          <source>Invokes a projection function on each element of a generic <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> and returns the minimum resulting value.</source>
          <target state="translated">Invoca uma função de projeção em cada elemento de um <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> genérico e retorna o valor resultante mínimo.</target>       </trans-unit>
        <trans-unit id="3517" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.OfType``1(System.Linq.IQueryable)">
          <source>The type to filter the elements of the sequence on.</source>
          <target state="translated">O tipo no qual filtrar os elementos da sequência.</target>       </trans-unit>
        <trans-unit id="3518" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.OfType``1(System.Linq.IQueryable)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable" /&gt;</ph> whose elements to filter.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable" /&gt;</ph> cujos elementos devem ser filtrados.</target>       </trans-unit>
        <trans-unit id="3519" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.OfType``1(System.Linq.IQueryable)">
          <source>Filters the elements of an <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable" /&gt;</ph> based on a specified type.</source>
          <target state="translated">Filtra os elementos de um <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable" /&gt;</ph> com base em um tipo especificado.</target>       </trans-unit>
        <trans-unit id="3520" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.OrderBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.OrderBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
          <source>The type of the key returned by the function that is represented by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo da chave retornada pela função que é representada por <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3522" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.OrderBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
          <source>A sequence of values to order.</source>
          <target state="translated">Uma sequência de valores a serem ordenados.</target>       </trans-unit>
        <trans-unit id="3523" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.OrderBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
          <source>A function to extract a key from an element.</source>
          <target state="translated">Uma função para extrair uma chave de um elemento.</target>       </trans-unit>
        <trans-unit id="3524" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.OrderBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
          <source>Sorts the elements of a sequence in ascending order according to a key.</source>
          <target state="translated">Classifica os elementos de uma sequência em ordem crescente de acordo com uma chave.</target>       </trans-unit>
        <trans-unit id="3525" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.OrderBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3526" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.OrderBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})">
          <source>The type of the key returned by the function that is represented by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo da chave retornada pela função que é representada por <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3527" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.OrderBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})">
          <source>A sequence of values to order.</source>
          <target state="translated">Uma sequência de valores a serem ordenados.</target>       </trans-unit>
        <trans-unit id="3528" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.OrderBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})">
          <source>A function to extract a key from an element.</source>
          <target state="translated">Uma função para extrair uma chave de um elemento.</target>       </trans-unit>
        <trans-unit id="3529" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.OrderBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph> to compare keys.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph> para comparar chaves.</target>       </trans-unit>
        <trans-unit id="3530" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.OrderBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})">
          <source>Sorts the elements of a sequence in ascending order by using a specified comparer.</source>
          <target state="translated">Classifica os elementos de uma sequência em ordem crescente usando um comparador especificado.</target>       </trans-unit>
        <trans-unit id="3531" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.OrderByDescending``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3532" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.OrderByDescending``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
          <source>The type of the key returned by the function that is represented by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo da chave retornada pela função que é representada por <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3533" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.OrderByDescending``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
          <source>A sequence of values to order.</source>
          <target state="translated">Uma sequência de valores a serem ordenados.</target>       </trans-unit>
        <trans-unit id="3534" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.OrderByDescending``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
          <source>A function to extract a key from an element.</source>
          <target state="translated">Uma função para extrair uma chave de um elemento.</target>       </trans-unit>
        <trans-unit id="3535" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.OrderByDescending``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
          <source>Sorts the elements of a sequence in descending order according to a key.</source>
          <target state="translated">Classifica os elementos de uma sequência em ordem decrescente de acordo com uma chave.</target>       </trans-unit>
        <trans-unit id="3536" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.OrderByDescending``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3537" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.OrderByDescending``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})">
          <source>The type of the key returned by the function that is represented by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo da chave retornada pela função que é representada por <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3538" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.OrderByDescending``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})">
          <source>A sequence of values to order.</source>
          <target state="translated">Uma sequência de valores a serem ordenados.</target>       </trans-unit>
        <trans-unit id="3539" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.OrderByDescending``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})">
          <source>A function to extract a key from an element.</source>
          <target state="translated">Uma função para extrair uma chave de um elemento.</target>       </trans-unit>
        <trans-unit id="3540" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.OrderByDescending``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph> to compare keys.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph> para comparar chaves.</target>       </trans-unit>
        <trans-unit id="3541" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.OrderByDescending``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})">
          <source>Sorts the elements of a sequence in descending order by using a specified comparer.</source>
          <target state="translated">Classifica os elementos de uma sequência em ordem decrescente usando um comparador especificado.</target>       </trans-unit>
        <trans-unit id="3542" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Reverse``1(System.Linq.IQueryable{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3543" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Reverse``1(System.Linq.IQueryable{``0})">
          <source>A sequence of values to reverse.</source>
          <target state="translated">Uma sequência de valores a ser revertida.</target>       </trans-unit>
        <trans-unit id="3544" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Reverse``1(System.Linq.IQueryable{``0})">
          <source>Inverts the order of the elements in a sequence.</source>
          <target state="translated">Inverte a ordem dos elementos em uma sequência.</target>       </trans-unit>
        <trans-unit id="3545" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Select``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3546" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Select``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
          <source>The type of the value returned by the function represented by <bpt id="p1">&lt;c&gt;</bpt>selector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo do valor retornado pela função representada por <bpt id="p1">&lt;c&gt;</bpt>seletor<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3547" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Select``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
          <source>A sequence of values to project.</source>
          <target state="translated">Uma sequência de valores a serem projetados.</target>       </trans-unit>
        <trans-unit id="3548" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Select``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
          <source>A projection function to apply to each element.</source>
          <target state="translated">Uma função de projeção a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="3549" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Select``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
          <source>Projects each element of a sequence into a new form.</source>
          <target state="translated">Projeta cada elemento de uma sequência em um novo formulário.</target>       </trans-unit>
        <trans-unit id="3550" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Select``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,``1}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3551" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Select``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,``1}})">
          <source>The type of the value returned by the function represented by <bpt id="p1">&lt;c&gt;</bpt>selector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo do valor retornado pela função representada por <bpt id="p1">&lt;c&gt;</bpt>seletor<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3552" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Select``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,``1}})">
          <source>A sequence of values to project.</source>
          <target state="translated">Uma sequência de valores a serem projetados.</target>       </trans-unit>
        <trans-unit id="3553" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Select``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,``1}})">
          <source>A projection function to apply to each element.</source>
          <target state="translated">Uma função de projeção a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="3554" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Select``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,``1}})">
          <source>Projects each element of a sequence into a new form by incorporating the element's index.</source>
          <target state="translated">Projeta cada elemento de uma sequência em um novo formulário, incorporando o índice do elemento.</target>       </trans-unit>
        <trans-unit id="3555" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.SelectMany``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3556" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.SelectMany``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}})">
          <source>The type of the elements of the sequence returned by the function represented by <bpt id="p1">&lt;c&gt;</bpt>selector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos da sequência retornada pela função representada por <bpt id="p1">&lt;c&gt;</bpt>seletor<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3557" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.SelectMany``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}})">
          <source>A sequence of values to project.</source>
          <target state="translated">Uma sequência de valores a serem projetados.</target>       </trans-unit>
        <trans-unit id="3558" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.SelectMany``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}})">
          <source>A projection function to apply to each element.</source>
          <target state="translated">Uma função de projeção a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="3559" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.SelectMany``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}})">
          <source>Projects each element of a sequence to an <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> and combines the resulting sequences into one sequence.</source>
          <target state="translated">Projeta cada elemento de uma sequência em um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> e combina as sequências resultantes em uma sequência.</target>       </trans-unit>
        <trans-unit id="3560" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.SelectMany``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3561" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.SelectMany``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}}})">
          <source>The type of the elements of the sequence returned by the function represented by <bpt id="p1">&lt;c&gt;</bpt>selector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos da sequência retornada pela função representada por <bpt id="p1">&lt;c&gt;</bpt>seletor<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3562" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.SelectMany``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}}})">
          <source>A sequence of values to project.</source>
          <target state="translated">Uma sequência de valores a serem projetados.</target>       </trans-unit>
        <trans-unit id="3563" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.SelectMany``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}}})">
          <source>A projection function to apply to each element; the second parameter of this function represents the index of the source element.</source>
          <target state="translated">Uma função de projeção a ser aplicada a cada elemento; o segundo parâmetro dessa função representa o índice do elemento de origem.</target>       </trans-unit>
        <trans-unit id="3564" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.SelectMany``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}}})">
          <source>Projects each element of a sequence to an <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> and combines the resulting sequences into one sequence.</source>
          <target state="translated">Projeta cada elemento de uma sequência em um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> e combina as sequências resultantes em uma sequência.</target>       </trans-unit>
        <trans-unit id="3565" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.SelectMany``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}}})">
          <source>The index of each source element is used in the projected form of that element.</source>
          <target state="translated">O índice de cada elemento de origem é usado no formulário projetado desse elemento.</target>       </trans-unit>
        <trans-unit id="3566" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.SelectMany``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3567" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.SelectMany``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})">
          <source>The type of the intermediate elements collected by the function represented by <bpt id="p1">&lt;c&gt;</bpt>collectionSelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos intermediários coletados pela função representada por <bpt id="p1">&lt;c&gt;</bpt>collectionSelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3568" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.SelectMany``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})">
          <source>The type of the elements of the resulting sequence.</source>
          <target state="translated">O tipo dos elementos da sequência resultante.</target>       </trans-unit>
        <trans-unit id="3569" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.SelectMany``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})">
          <source>A sequence of values to project.</source>
          <target state="translated">Uma sequência de valores a serem projetados.</target>       </trans-unit>
        <trans-unit id="3570" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.SelectMany``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})">
          <source>A projection function to apply to each element of the input sequence.</source>
          <target state="translated">Uma função de projeção a ser aplicada a cada elemento da sequência de entrada.</target>       </trans-unit>
        <trans-unit id="3571" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.SelectMany``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})">
          <source>A projection function to apply to each element of each intermediate sequence.</source>
          <target state="translated">Uma função de projeção a ser aplicada a cada elemento de cada sequência intermediária.</target>       </trans-unit>
        <trans-unit id="3572" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.SelectMany``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})">
          <source>Projects each element of a sequence to an <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> and invokes a result selector function on each element therein.</source>
          <target state="translated">Projeta cada elemento de uma sequência em um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> e invoca uma função de seletor de resultado em cada elemento contido nele.</target>       </trans-unit>
        <trans-unit id="3573" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.SelectMany``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})">
          <source>The resulting values from each intermediate sequence are combined into a single, one-dimensional sequence and returned.</source>
          <target state="translated">Os valores resultantes de cada sequência intermediária são combinados em uma única sequência unidimensional e retornada.</target>       </trans-unit>
        <trans-unit id="3574" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.SelectMany``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3575" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.SelectMany``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})">
          <source>The type of the intermediate elements collected by the function represented by <bpt id="p1">&lt;c&gt;</bpt>collectionSelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos intermediários coletados pela função representada por <bpt id="p1">&lt;c&gt;</bpt>collectionSelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3576" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.SelectMany``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})">
          <source>The type of the elements of the resulting sequence.</source>
          <target state="translated">O tipo dos elementos da sequência resultante.</target>       </trans-unit>
        <trans-unit id="3577" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.SelectMany``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})">
          <source>A sequence of values to project.</source>
          <target state="translated">Uma sequência de valores a serem projetados.</target>       </trans-unit>
        <trans-unit id="3578" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.SelectMany``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})">
          <source>A projection function to apply to each element of the input sequence; the second parameter of this function represents the index of the source element.</source>
          <target state="translated">Uma função de projeção a ser aplicada a cada elemento da sequência de entrada; o segundo parâmetro dessa função representa o índice do elemento de origem.</target>       </trans-unit>
        <trans-unit id="3579" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.SelectMany``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})">
          <source>A projection function to apply to each element of each intermediate sequence.</source>
          <target state="translated">Uma função de projeção a ser aplicada a cada elemento de cada sequência intermediária.</target>       </trans-unit>
        <trans-unit id="3580" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.SelectMany``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})">
          <source>Projects each element of a sequence to an <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> that incorporates the index of the source element that produced it.</source>
          <target state="translated">Projeta cada elemento de uma sequência em um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> que incorpora o índice do elemento de origem que o produziu.</target>       </trans-unit>
        <trans-unit id="3581" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.SelectMany``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})">
          <source>A result selector function is invoked on each element of each intermediate sequence, and the resulting values are combined into a single, one-dimensional sequence and returned.</source>
          <target state="translated">Uma função seletora de resultados é invocada em cada elemento de cada sequência intermediária e os valores resultantes são combinados em uma única sequência unidimensional e retornados.</target>       </trans-unit>
        <trans-unit id="3582" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.SequenceEqual``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>The type of the elements of the input sequences.</source>
          <target state="translated">O tipo dos elementos das sequências de entrada.</target>       </trans-unit>
        <trans-unit id="3583" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.SequenceEqual``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> whose elements to compare to those of <bpt id="p1">&lt;c&gt;</bpt>source2<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> cujos elementos são comparados com os de <bpt id="p1">&lt;c&gt;</bpt>source2<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3584" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.SequenceEqual``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> whose elements to compare to those of the first sequence.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> cujos elementos são comparados com os da primeira sequência.</target>       </trans-unit>
        <trans-unit id="3585" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.SequenceEqual``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>Determines whether two sequences are equal by using the default equality comparer to compare elements.</source>
          <target state="translated">Determina se duas sequências são iguais usando o comparador de igualdade padrão para comparar elementos.</target>       </trans-unit>
        <trans-unit id="3586" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.SequenceEqual``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The type of the elements of the input sequences.</source>
          <target state="translated">O tipo dos elementos das sequências de entrada.</target>       </trans-unit>
        <trans-unit id="3587" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.SequenceEqual``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> whose elements to compare to those of <bpt id="p1">&lt;c&gt;</bpt>source2<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> cujos elementos são comparados com os de <bpt id="p1">&lt;c&gt;</bpt>source2<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3588" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.SequenceEqual``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> whose elements to compare to those of the first sequence.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> cujos elementos são comparados com os da primeira sequência.</target>       </trans-unit>
        <trans-unit id="3589" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.SequenceEqual``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to use to compare elements.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> a ser usado para comparar elementos.</target>       </trans-unit>
        <trans-unit id="3590" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.SequenceEqual``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>Determines whether two sequences are equal by using a specified <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to compare elements.</source>
          <target state="translated">Determina se duas sequências são iguais usando um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> especificado para comparar elementos.</target>       </trans-unit>
        <trans-unit id="3591" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Single``1(System.Linq.IQueryable{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3592" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Single``1(System.Linq.IQueryable{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> to return the single element of.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> do qual o único elemento será retornado.</target>       </trans-unit>
        <trans-unit id="3593" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Single``1(System.Linq.IQueryable{``0})">
          <source>Returns the only element of a sequence, and throws an exception if there is not exactly one element in the sequence.</source>
          <target state="translated">Retornará o único elemento de uma sequência e lançará uma exceção se não houver exatamente um elemento na sequência.</target>       </trans-unit>
        <trans-unit id="3594" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Single``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3595" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Single``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> to return a single element from.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> do qual retornar um único elemento.</target>       </trans-unit>
        <trans-unit id="3596" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Single``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
          <source>A function to test an element for a condition.</source>
          <target state="translated">Uma função para testar um elemento em relação a uma condição.</target>       </trans-unit>
        <trans-unit id="3597" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Single``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
          <source>Returns the only element of a sequence that satisfies a specified condition, and throws an exception if more than one such element exists.</source>
          <target state="translated">Retorna o único elemento de uma sequência que satisfaz uma condição especificada e gera uma exceção se houver mais de um tal elemento.</target>       </trans-unit>
        <trans-unit id="3598" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.SingleOrDefault``1(System.Linq.IQueryable{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3599" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.SingleOrDefault``1(System.Linq.IQueryable{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> to return the single element of.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> do qual o único elemento será retornado.</target>       </trans-unit>
        <trans-unit id="3600" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.SingleOrDefault``1(System.Linq.IQueryable{``0})">
          <source>Returns the only element of a sequence, or a default value if the sequence is empty; this method throws an exception if there is more than one element in the sequence.</source>
          <target state="translated">Retorna o único elemento de uma sequência ou um valor padrão se a sequência é vazia; esse método gera uma exceção se há mais de um elemento na sequência.</target>       </trans-unit>
        <trans-unit id="3601" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.SingleOrDefault``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3602" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.SingleOrDefault``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> to return a single element from.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> do qual retornar um único elemento.</target>       </trans-unit>
        <trans-unit id="3603" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.SingleOrDefault``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
          <source>A function to test an element for a condition.</source>
          <target state="translated">Uma função para testar um elemento em relação a uma condição.</target>       </trans-unit>
        <trans-unit id="3604" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.SingleOrDefault``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
          <source>Returns the only element of a sequence that satisfies a specified condition or a default value if no such element exists; this method throws an exception if more than one element satisfies the condition.</source>
          <target state="translated">Retorna o único elemento de uma sequência que satisfaz uma condição especificada ou um valor padrão se esse elemento não existir. Esse método lança uma exceção se mais de um elemento satisfizer a condição.</target>       </trans-unit>
        <trans-unit id="3605" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Skip``1(System.Linq.IQueryable{``0},System.Int32)">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3606" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Skip``1(System.Linq.IQueryable{``0},System.Int32)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> to return elements from.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> do qual os elementos serão retornados.</target>       </trans-unit>
        <trans-unit id="3607" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Skip``1(System.Linq.IQueryable{``0},System.Int32)">
          <source>The number of elements to skip before returning the remaining elements.</source>
          <target state="translated">O número de elementos a serem ignorados antes de retornar os elementos restantes.</target>       </trans-unit>
        <trans-unit id="3608" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Skip``1(System.Linq.IQueryable{``0},System.Int32)">
          <source>Bypasses a specified number of elements in a sequence and then returns the remaining elements.</source>
          <target state="translated">Ignora um número especificado de elementos em uma sequência e retorna os elementos restantes.</target>       </trans-unit>
        <trans-unit id="3609" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.SkipWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3610" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.SkipWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> to return elements from.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> do qual os elementos serão retornados.</target>       </trans-unit>
        <trans-unit id="3611" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.SkipWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
          <source>A function to test each element for a condition.</source>
          <target state="translated">Uma função para testar cada elemento em relação a uma condição.</target>       </trans-unit>
        <trans-unit id="3612" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.SkipWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
          <source>Bypasses elements in a sequence as long as a specified condition is true and then returns the remaining elements.</source>
          <target state="translated">Ignora elementos em uma sequência, contanto que uma condição especificada seja verdadeira e retorne os elementos restantes.</target>       </trans-unit>
        <trans-unit id="3613" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.SkipWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3614" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.SkipWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> to return elements from.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> do qual os elementos serão retornados.</target>       </trans-unit>
        <trans-unit id="3615" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.SkipWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})">
          <source>A function to test each element for a condition; the second parameter of this function represents the index of the source element.</source>
          <target state="translated">Uma função para testar cada elemento de uma condição; o segundo parâmetro dessa função representa o índice do elemento de origem.</target>       </trans-unit>
        <trans-unit id="3616" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.SkipWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})">
          <source>Bypasses elements in a sequence as long as a specified condition is true and then returns the remaining elements.</source>
          <target state="translated">Ignora elementos em uma sequência, contanto que uma condição especificada seja verdadeira e retorne os elementos restantes.</target>       </trans-unit>
        <trans-unit id="3617" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.SkipWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})">
          <source>The element's index is used in the logic of the predicate function.</source>
          <target state="translated">O índice do elemento é usado na lógica da função de predicado.</target>       </trans-unit>
        <trans-unit id="3618" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Decimal})">
          <source>A sequence of <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> values to calculate the sum of.</source>
          <target state="translated">Uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> para cálculo da soma.</target>       </trans-unit>
        <trans-unit id="3619" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Decimal})">
          <source>Computes the sum of a sequence of <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> values.</source>
          <target state="translated">Calcula a soma de uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3620" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Double})">
          <source>A sequence of <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> values to calculate the sum of.</source>
          <target state="translated">Uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> para cálculo da soma.</target>       </trans-unit>
        <trans-unit id="3621" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Double})">
          <source>Computes the sum of a sequence of <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> values.</source>
          <target state="translated">Calcula a soma de uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3622" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Int32})">
          <source>A sequence of <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> values to calculate the sum of.</source>
          <target state="translated">Uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> para cálculo da soma.</target>       </trans-unit>
        <trans-unit id="3623" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Int32})">
          <source>Computes the sum of a sequence of <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> values.</source>
          <target state="translated">Calcula a soma de uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3624" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Int64})">
          <source>A sequence of <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> values to calculate the sum of.</source>
          <target state="translated">Uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> para cálculo da soma.</target>       </trans-unit>
        <trans-unit id="3625" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Int64})">
          <source>Computes the sum of a sequence of <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> values.</source>
          <target state="translated">Calcula a soma de uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3626" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Decimal}})">
          <source>A sequence of nullable <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> values to calculate the sum of.</source>
          <target state="translated">Uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> que permitem valores nulos para cálculo da soma.</target>       </trans-unit>
        <trans-unit id="3627" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Decimal}})">
          <source>Computes the sum of a sequence of nullable <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> values.</source>
          <target state="translated">Computa a soma de uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> que permitem valores nulos.</target>       </trans-unit>
        <trans-unit id="3628" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Double}})">
          <source>A sequence of nullable <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> values to calculate the sum of.</source>
          <target state="translated">Uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> que permitem valores nulos para cálculo da soma.</target>       </trans-unit>
        <trans-unit id="3629" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Double}})">
          <source>Computes the sum of a sequence of nullable <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> values.</source>
          <target state="translated">Computa a soma de uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> que permitem valores nulos.</target>       </trans-unit>
        <trans-unit id="3630" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Int32}})">
          <source>A sequence of nullable <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> values to calculate the sum of.</source>
          <target state="translated">Uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> que permitem valores nulos para cálculo da soma.</target>       </trans-unit>
        <trans-unit id="3631" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Int32}})">
          <source>Computes the sum of a sequence of nullable <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> values.</source>
          <target state="translated">Computa a soma de uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> que permitem valores nulos.</target>       </trans-unit>
        <trans-unit id="3632" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Int64}})">
          <source>A sequence of nullable <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> values to calculate the sum of.</source>
          <target state="translated">Uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> que permitem valores nulos para cálculo da soma.</target>       </trans-unit>
        <trans-unit id="3633" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Int64}})">
          <source>Computes the sum of a sequence of nullable <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> values.</source>
          <target state="translated">Computa a soma de uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> que permitem valores nulos.</target>       </trans-unit>
        <trans-unit id="3634" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Single}})">
          <source>A sequence of nullable <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> values to calculate the sum of.</source>
          <target state="translated">Uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> que permitem valores nulos para cálculo da soma.</target>       </trans-unit>
        <trans-unit id="3635" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Single}})">
          <source>Computes the sum of a sequence of nullable <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> values.</source>
          <target state="translated">Computa a soma de uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> que permitem valores nulos.</target>       </trans-unit>
        <trans-unit id="3636" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Single})">
          <source>A sequence of <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> values to calculate the sum of.</source>
          <target state="translated">Uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> para cálculo da soma.</target>       </trans-unit>
        <trans-unit id="3637" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Single})">
          <source>Computes the sum of a sequence of <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> values.</source>
          <target state="translated">Calcula a soma de uma sequência de valores <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3638" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3639" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}})">
          <source>A sequence of values of type <bpt id="p1">&lt;c&gt;</bpt>TSource<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Uma sequência de valores do tipo <bpt id="p1">&lt;c&gt;</bpt>TSource<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3640" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}})">
          <source>A projection function to apply to each element.</source>
          <target state="translated">Uma função de projeção a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="3641" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}})">
          <source>Computes the sum of the sequence of <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> values that is obtained by invoking a projection function on each element of the input sequence.</source>
          <target state="translated">Calcula a soma da sequência de valores <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> que é obtida invocando uma função de projeção em cada elemento da sequência de entrada.</target>       </trans-unit>
        <trans-unit id="3642" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Double}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3643" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Double}})">
          <source>A sequence of values of type <bpt id="p1">&lt;c&gt;</bpt>TSource<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Uma sequência de valores do tipo <bpt id="p1">&lt;c&gt;</bpt>TSource<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3644" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Double}})">
          <source>A projection function to apply to each element.</source>
          <target state="translated">Uma função de projeção a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="3645" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Double}})">
          <source>Computes the sum of the sequence of <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> values that is obtained by invoking a projection function on each element of the input sequence.</source>
          <target state="translated">Calcula a soma da sequência de valores <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> que é obtida invocando uma função de projeção em cada elemento da sequência de entrada.</target>       </trans-unit>
        <trans-unit id="3646" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3647" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}})">
          <source>A sequence of values of type <bpt id="p1">&lt;c&gt;</bpt>TSource<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Uma sequência de valores do tipo <bpt id="p1">&lt;c&gt;</bpt>TSource<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3648" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}})">
          <source>A projection function to apply to each element.</source>
          <target state="translated">Uma função de projeção a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="3649" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}})">
          <source>Computes the sum of the sequence of <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> values that is obtained by invoking a projection function on each element of the input sequence.</source>
          <target state="translated">Calcula a soma da sequência de valores <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> que é obtida invocando uma função de projeção em cada elemento da sequência de entrada.</target>       </trans-unit>
        <trans-unit id="3650" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int64}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3651" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int64}})">
          <source>A sequence of values of type <bpt id="p1">&lt;c&gt;</bpt>TSource<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Uma sequência de valores do tipo <bpt id="p1">&lt;c&gt;</bpt>TSource<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3652" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int64}})">
          <source>A projection function to apply to each element.</source>
          <target state="translated">Uma função de projeção a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="3653" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int64}})">
          <source>Computes the sum of the sequence of <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> values that is obtained by invoking a projection function on each element of the input sequence.</source>
          <target state="translated">Calcula a soma da sequência de valores <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> que é obtida invocando uma função de projeção em cada elemento da sequência de entrada.</target>       </trans-unit>
        <trans-unit id="3654" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3655" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}})">
          <source>A sequence of values of type <bpt id="p1">&lt;c&gt;</bpt>TSource<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Uma sequência de valores do tipo <bpt id="p1">&lt;c&gt;</bpt>TSource<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3656" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}})">
          <source>A projection function to apply to each element.</source>
          <target state="translated">Uma função de projeção a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="3657" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}})">
          <source>Computes the sum of the sequence of nullable <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> values that is obtained by invoking a projection function on each element of the input sequence.</source>
          <target state="translated">Calcula a soma da sequência de valores <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> anuláveis obtida invocando uma função de projeção em cada elemento da sequência de entrada.</target>       </trans-unit>
        <trans-unit id="3658" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3659" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}})">
          <source>A sequence of values of type <bpt id="p1">&lt;c&gt;</bpt>TSource<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Uma sequência de valores do tipo <bpt id="p1">&lt;c&gt;</bpt>TSource<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3660" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}})">
          <source>A projection function to apply to each element.</source>
          <target state="translated">Uma função de projeção a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="3661" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}})">
          <source>Computes the sum of the sequence of nullable <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> values that is obtained by invoking a projection function on each element of the input sequence.</source>
          <target state="translated">Calcula a soma da sequência de valores <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> anuláveis obtida invocando uma função de projeção em cada elemento da sequência de entrada.</target>       </trans-unit>
        <trans-unit id="3662" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3663" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}})">
          <source>A sequence of values of type <bpt id="p1">&lt;c&gt;</bpt>TSource<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Uma sequência de valores do tipo <bpt id="p1">&lt;c&gt;</bpt>TSource<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3664" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}})">
          <source>A projection function to apply to each element.</source>
          <target state="translated">Uma função de projeção a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="3665" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}})">
          <source>Computes the sum of the sequence of nullable <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> values that is obtained by invoking a projection function on each element of the input sequence.</source>
          <target state="translated">Calcula a soma da sequência de valores <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> anuláveis obtida invocando uma função de projeção em cada elemento da sequência de entrada.</target>       </trans-unit>
        <trans-unit id="3666" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3667" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}})">
          <source>A sequence of values of type <bpt id="p1">&lt;c&gt;</bpt>TSource<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Uma sequência de valores do tipo <bpt id="p1">&lt;c&gt;</bpt>TSource<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3668" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}})">
          <source>A projection function to apply to each element.</source>
          <target state="translated">Uma função de projeção a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="3669" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}})">
          <source>Computes the sum of the sequence of nullable <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> values that is obtained by invoking a projection function on each element of the input sequence.</source>
          <target state="translated">Calcula a soma da sequência de valores <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> anuláveis obtida invocando uma função de projeção em cada elemento da sequência de entrada.</target>       </trans-unit>
        <trans-unit id="3670" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3671" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}})">
          <source>A sequence of values of type <bpt id="p1">&lt;c&gt;</bpt>TSource<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Uma sequência de valores do tipo <bpt id="p1">&lt;c&gt;</bpt>TSource<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3672" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}})">
          <source>A projection function to apply to each element.</source>
          <target state="translated">Uma função de projeção a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="3673" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}})">
          <source>Computes the sum of the sequence of nullable <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> values that is obtained by invoking a projection function on each element of the input sequence.</source>
          <target state="translated">Calcula a soma da sequência de valores <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> anuláveis obtida invocando uma função de projeção em cada elemento da sequência de entrada.</target>       </trans-unit>
        <trans-unit id="3674" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Single}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3675" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Single}})">
          <source>A sequence of values of type <bpt id="p1">&lt;c&gt;</bpt>TSource<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Uma sequência de valores do tipo <bpt id="p1">&lt;c&gt;</bpt>TSource<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3676" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Single}})">
          <source>A projection function to apply to each element.</source>
          <target state="translated">Uma função de projeção a ser aplicada a cada elemento.</target>       </trans-unit>
        <trans-unit id="3677" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Single}})">
          <source>Computes the sum of the sequence of <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> values that is obtained by invoking a projection function on each element of the input sequence.</source>
          <target state="translated">Calcula a soma da sequência de valores <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> que é obtida invocando uma função de projeção em cada elemento da sequência de entrada.</target>       </trans-unit>
        <trans-unit id="3678" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Take``1(System.Linq.IQueryable{``0},System.Int32)">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3679" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Take``1(System.Linq.IQueryable{``0},System.Int32)">
          <source>The sequence to return elements from.</source>
          <target state="translated">A sequência da qual os elementos serão retornados.</target>       </trans-unit>
        <trans-unit id="3680" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Take``1(System.Linq.IQueryable{``0},System.Int32)">
          <source>The number of elements to return.</source>
          <target state="translated">O número de elementos a serem retornados.</target>       </trans-unit>
        <trans-unit id="3681" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Take``1(System.Linq.IQueryable{``0},System.Int32)">
          <source>Returns a specified number of contiguous elements from the start of a sequence.</source>
          <target state="translated">Retorna um número especificado de elementos contíguos do início de uma sequência.</target>       </trans-unit>
        <trans-unit id="3682" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.TakeWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3683" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.TakeWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
          <source>The sequence to return elements from.</source>
          <target state="translated">A sequência da qual os elementos serão retornados.</target>       </trans-unit>
        <trans-unit id="3684" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.TakeWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
          <source>A function to test each element for a condition.</source>
          <target state="translated">Uma função para testar cada elemento em relação a uma condição.</target>       </trans-unit>
        <trans-unit id="3685" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.TakeWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
          <source>Returns elements from a sequence as long as a specified condition is true.</source>
          <target state="translated">Retorna os elementos de uma sequência contanto que uma condição especificada seja verdadeira.</target>       </trans-unit>
        <trans-unit id="3686" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.TakeWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3687" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.TakeWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})">
          <source>The sequence to return elements from.</source>
          <target state="translated">A sequência da qual os elementos serão retornados.</target>       </trans-unit>
        <trans-unit id="3688" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.TakeWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})">
          <source>A function to test each element for a condition; the second parameter of the function represents the index of the element in the source sequence.</source>
          <target state="translated">Uma função para testar cada elemento em relação a uma condição; o segundo parâmetro da função representa o índice do elemento na sequência de origem.</target>       </trans-unit>
        <trans-unit id="3689" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.TakeWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})">
          <source>Returns elements from a sequence as long as a specified condition is true.</source>
          <target state="translated">Retorna os elementos de uma sequência contanto que uma condição especificada seja verdadeira.</target>       </trans-unit>
        <trans-unit id="3690" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.TakeWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})">
          <source>The element's index is used in the logic of the predicate function.</source>
          <target state="translated">O índice do elemento é usado na lógica da função de predicado.</target>       </trans-unit>
        <trans-unit id="3691" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.ThenBy``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3692" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.ThenBy``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
          <source>The type of the key returned by the function represented by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo da chave retornada pela função representada por <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3693" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.ThenBy``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Linq.IOrderedQueryable`1" /&gt;</ph> that contains elements to sort.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Linq.IOrderedQueryable`1" /&gt;</ph> que contém elementos a ser classificados.</target>       </trans-unit>
        <trans-unit id="3694" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.ThenBy``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
          <source>A function to extract a key from each element.</source>
          <target state="translated">Uma função para extrair uma chave de cada elemento.</target>       </trans-unit>
        <trans-unit id="3695" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.ThenBy``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
          <source>Performs a subsequent ordering of the elements in a sequence in ascending order according to a key.</source>
          <target state="translated">Executa uma ordenação posterior dos elementos em uma sequência em ordem crescente de acordo com uma chave.</target>       </trans-unit>
        <trans-unit id="3696" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.ThenBy``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3697" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.ThenBy``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})">
          <source>The type of the key returned by the function represented by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo da chave retornada pela função representada por <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3698" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.ThenBy``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Linq.IOrderedQueryable`1" /&gt;</ph> that contains elements to sort.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Linq.IOrderedQueryable`1" /&gt;</ph> que contém elementos a ser classificados.</target>       </trans-unit>
        <trans-unit id="3699" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.ThenBy``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})">
          <source>A function to extract a key from each element.</source>
          <target state="translated">Uma função para extrair uma chave de cada elemento.</target>       </trans-unit>
        <trans-unit id="3700" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.ThenBy``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph> to compare keys.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph> para comparar chaves.</target>       </trans-unit>
        <trans-unit id="3701" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.ThenBy``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})">
          <source>Performs a subsequent ordering of the elements in a sequence in ascending order by using a specified comparer.</source>
          <target state="translated">Executa uma ordenação posterior dos elementos em uma sequência em ordem crescente usando um comparador especificado.</target>       </trans-unit>
        <trans-unit id="3702" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.ThenByDescending``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3703" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.ThenByDescending``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
          <source>The type of the key returned by the function represented by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo da chave retornada pela função representada por <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3704" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.ThenByDescending``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Linq.IOrderedQueryable`1" /&gt;</ph> that contains elements to sort.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Linq.IOrderedQueryable`1" /&gt;</ph> que contém elementos a ser classificados.</target>       </trans-unit>
        <trans-unit id="3705" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.ThenByDescending``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
          <source>A function to extract a key from each element.</source>
          <target state="translated">Uma função para extrair uma chave de cada elemento.</target>       </trans-unit>
        <trans-unit id="3706" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.ThenByDescending``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
          <source>Performs a subsequent ordering of the elements in a sequence in descending order, according to a key.</source>
          <target state="translated">Executa uma ordenação posterior dos elementos em uma sequência em ordem decrescente, de acordo com uma chave.</target>       </trans-unit>
        <trans-unit id="3707" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.ThenByDescending``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3708" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.ThenByDescending``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})">
          <source>The type of the key that is returned by the <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept> function.</source>
          <target state="translated">O tipo da chave que é retornado pelo <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept> função.</target>       </trans-unit>
        <trans-unit id="3709" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.ThenByDescending``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Linq.IOrderedQueryable`1" /&gt;</ph> that contains elements to sort.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Linq.IOrderedQueryable`1" /&gt;</ph> que contém elementos a ser classificados.</target>       </trans-unit>
        <trans-unit id="3710" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.ThenByDescending``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})">
          <source>A function to extract a key from each element.</source>
          <target state="translated">Uma função para extrair uma chave de cada elemento.</target>       </trans-unit>
        <trans-unit id="3711" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.ThenByDescending``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph> to compare keys.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph> para comparar chaves.</target>       </trans-unit>
        <trans-unit id="3712" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.ThenByDescending``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})">
          <source>Performs a subsequent ordering of the elements in a sequence in descending order by using a specified comparer.</source>
          <target state="translated">Executa uma ordenação posterior dos elementos em uma sequência em ordem decrescente usando um comparador especificado.</target>       </trans-unit>
        <trans-unit id="3713" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Union``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>The type of the elements of the input sequences.</source>
          <target state="translated">O tipo dos elementos das sequências de entrada.</target>       </trans-unit>
        <trans-unit id="3714" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Union``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>A sequence whose distinct elements form the first set for the union operation.</source>
          <target state="translated">Uma sequência cujos elementos distintos formam o primeiro conjunto da operação de união.</target>       </trans-unit>
        <trans-unit id="3715" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Union``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>A sequence whose distinct elements form the second set for the union operation.</source>
          <target state="translated">Uma sequência cujos elementos distintos formam o segundo conjunto da operação de união.</target>       </trans-unit>
        <trans-unit id="3716" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Union``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>Produces the set union of two sequences by using the default equality comparer.</source>
          <target state="translated">Produz a união de conjunto de duas sequências usando o comparador de igualdade padrão.</target>       </trans-unit>
        <trans-unit id="3717" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Union``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The type of the elements of the input sequences.</source>
          <target state="translated">O tipo dos elementos das sequências de entrada.</target>       </trans-unit>
        <trans-unit id="3718" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Union``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>A sequence whose distinct elements form the first set for the union operation.</source>
          <target state="translated">Uma sequência cujos elementos distintos formam o primeiro conjunto da operação de união.</target>       </trans-unit>
        <trans-unit id="3719" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Union``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>A sequence whose distinct elements form the second set for the union operation.</source>
          <target state="translated">Uma sequência cujos elementos distintos formam o segundo conjunto da operação de união.</target>       </trans-unit>
        <trans-unit id="3720" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Union``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to compare values.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> para comparar valores.</target>       </trans-unit>
        <trans-unit id="3721" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Union``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>Produces the set union of two sequences by using a specified <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>.</source>
          <target state="translated">Produz a união de conjunto de duas sequências usando o <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="3722" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Where``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3723" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Where``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> to filter.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> a ser filtrado.</target>       </trans-unit>
        <trans-unit id="3724" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Where``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
          <source>A function to test each element for a condition.</source>
          <target state="translated">Uma função para testar cada elemento em relação a uma condição.</target>       </trans-unit>
        <trans-unit id="3725" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Where``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
          <source>Filters a sequence of values based on a predicate.</source>
          <target state="translated">Filtra uma sequência de valores com base em um predicado.</target>       </trans-unit>
        <trans-unit id="3726" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Where``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo dos elementos de <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="3727" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Where``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> to filter.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> a ser filtrado.</target>       </trans-unit>
        <trans-unit id="3728" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Where``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})">
          <source>A function to test each element for a condition; the second parameter of the function represents the index of the element in the source sequence.</source>
          <target state="translated">Uma função para testar cada elemento em relação a uma condição; o segundo parâmetro da função representa o índice do elemento na sequência de origem.</target>       </trans-unit>
        <trans-unit id="3729" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Where``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})">
          <source>Filters a sequence of values based on a predicate.</source>
          <target state="translated">Filtra uma sequência de valores com base em um predicado.</target>       </trans-unit>
        <trans-unit id="3730" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Where``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})">
          <source>Each element's index is used in the logic of the predicate function.</source>
          <target state="translated">O índice de cada elemento é usado na lógica da função de predicado.</target>       </trans-unit>
        <trans-unit id="3731" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Zip``3(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})">
          <source>The type of the elements of the first input sequence.</source>
          <target state="translated">O tipo de elementos na primeira sequência de entrada.</target>       </trans-unit>
        <trans-unit id="3732" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Zip``3(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})">
          <source>The type of the elements of the second input sequence.</source>
          <target state="translated">O tipo de elementos na segunda sequência de entrada.</target>       </trans-unit>
        <trans-unit id="3733" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Zip``3(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})">
          <source>The type of the elements of the result sequence.</source>
          <target state="translated">O tipo de elementos na sequência de resultado.</target>       </trans-unit>
        <trans-unit id="3734" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Zip``3(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})">
          <source>The first sequence to merge.</source>
          <target state="translated">A primeira sequência a ser mesclada.</target>       </trans-unit>
        <trans-unit id="3735" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Zip``3(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})">
          <source>The second sequence to merge.</source>
          <target state="translated">A segunda sequência a ser mesclada.</target>       </trans-unit>
        <trans-unit id="3736" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Zip``3(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})">
          <source>A function that specifies how to merge the elements from the two sequences.</source>
          <target state="translated">Uma função que especifica como mesclar os elementos das duas sequências.</target>       </trans-unit>
        <trans-unit id="3737" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Zip``3(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})">
          <source>Merges two sequences by using the specified predicate function.</source>
          <target state="translated">Mescla duas sequências usando a função de predicado especificada.</target>       </trans-unit>
        <trans-unit id="3738" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.AcceptAsync(System.Net.Sockets.Socket)">
          <source>The socket that is listening for connections.</source>
          <target state="translated">O soquete que está escutando conexões.</target>       </trans-unit>
        <trans-unit id="3739" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.AcceptAsync(System.Net.Sockets.Socket)">
          <source>Performs an asynchronous operation on to accept an incoming connection attempt on the socket.</source>
          <target state="translated">Executa uma operação assíncrona para aceitar uma tentativa de conexão de entrada no soquete.</target>       </trans-unit>
        <trans-unit id="3740" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.AcceptAsync(System.Net.Sockets.Socket,System.Net.Sockets.Socket)">
          <source>The socket that is listening for incoming connections.</source>
          <target state="translated">O soquete que está escutando conexões de entrada.</target>       </trans-unit>
        <trans-unit id="3741" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.AcceptAsync(System.Net.Sockets.Socket,System.Net.Sockets.Socket)">
          <source>The accepted <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> object.</source>
          <target state="translated">O objeto <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> aceito.</target>       </trans-unit>
        <trans-unit id="3742" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.AcceptAsync(System.Net.Sockets.Socket,System.Net.Sockets.Socket)">
          <source>This value may be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Este valor pode ser <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3743" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.AcceptAsync(System.Net.Sockets.Socket,System.Net.Sockets.Socket)">
          <source>Performs an asynchronous operation on to accept an incoming connection attempt on the socket.</source>
          <target state="translated">Executa uma operação assíncrona para aceitar uma tentativa de conexão de entrada no soquete.</target>       </trans-unit>
        <trans-unit id="3744" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.Net.EndPoint)">
          <source>The socket that is used for establishing a connection.</source>
          <target state="translated">O soquete usado para estabelecer uma conexão.</target>       </trans-unit>
        <trans-unit id="3745" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.Net.EndPoint)">
          <source>An EndPoint that represents the remote device.</source>
          <target state="translated">Um EndPoint que representa o dispositivo remoto.</target>       </trans-unit>
        <trans-unit id="3746" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.Net.EndPoint)">
          <source>Establishes a connection to a remote host.</source>
          <target state="translated">Estabelece uma conexão com o host remoto.</target>       </trans-unit>
        <trans-unit id="3747" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.Net.IPAddress,System.Int32)">
          <source>The socket to perform the connect operation on.</source>
          <target state="translated">O soquete no qual executar a operação de conexão.</target>       </trans-unit>
        <trans-unit id="3748" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.Net.IPAddress,System.Int32)">
          <source>The IP address of the remote host.</source>
          <target state="translated">O endereço IP do host remoto.</target>       </trans-unit>
        <trans-unit id="3749" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.Net.IPAddress,System.Int32)">
          <source>The port number of the remote host.</source>
          <target state="translated">O número da porta do host remoto.</target>       </trans-unit>
        <trans-unit id="3750" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.Net.IPAddress,System.Int32)">
          <source>Establishes a connection to a remote host.</source>
          <target state="translated">Estabelece uma conexão com o host remoto.</target>       </trans-unit>
        <trans-unit id="3751" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.Net.IPAddress,System.Int32)">
          <source>The host is specified by an IP address and a port number.</source>
          <target state="translated">O host é especificado por um endereço IP e um número da porta.</target>       </trans-unit>
        <trans-unit id="3752" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.Net.IPAddress[],System.Int32)">
          <source>The socket that the connect operation is performed on.</source>
          <target state="translated">O soquete no qual a operação de conexão é executada.</target>       </trans-unit>
        <trans-unit id="3753" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.Net.IPAddress[],System.Int32)">
          <source>The IP addresses of the remote host.</source>
          <target state="translated">Os endereços IP do host remoto.</target>       </trans-unit>
        <trans-unit id="3754" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.Net.IPAddress[],System.Int32)">
          <source>The port number of the remote host.</source>
          <target state="translated">O número da porta do host remoto.</target>       </trans-unit>
        <trans-unit id="3755" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.Net.IPAddress[],System.Int32)">
          <source>Establishes a connection to a remote host.</source>
          <target state="translated">Estabelece uma conexão com o host remoto.</target>       </trans-unit>
        <trans-unit id="3756" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.Net.IPAddress[],System.Int32)">
          <source>The host is specified by an array of IP addresses and a port number.</source>
          <target state="translated">O host é especificado por uma matriz de endereços IP e um número da porta.</target>       </trans-unit>
        <trans-unit id="3757" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.String,System.Int32)">
          <source>The socket to perform the connect operation on.</source>
          <target state="translated">O soquete no qual executar a operação de conexão.</target>       </trans-unit>
        <trans-unit id="3758" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.String,System.Int32)">
          <source>The name of the remote host.</source>
          <target state="translated">O nome do host remoto.</target>       </trans-unit>
        <trans-unit id="3759" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.String,System.Int32)">
          <source>The port number of the remote host.</source>
          <target state="translated">O número da porta do host remoto.</target>       </trans-unit>
        <trans-unit id="3760" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.String,System.Int32)">
          <source>Establishes a connection to a remote host.</source>
          <target state="translated">Estabelece uma conexão com o host remoto.</target>       </trans-unit>
        <trans-unit id="3761" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.String,System.Int32)">
          <source>The host is specified by a host name and a port number.</source>
          <target state="translated">O host é especificado por um nome do host e um número da porta.</target>       </trans-unit>
        <trans-unit id="3762" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.ReceiveAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags)">
          <source>The socket to perform the receive operation on.</source>
          <target state="translated">O soquete no qual executar a operação de recebimento.</target>       </trans-unit>
        <trans-unit id="3763" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.ReceiveAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags)">
          <source>An array that is the storage location for the received data.</source>
          <target state="translated">Uma matriz que é o local de armazenamento dos dados recebidos.</target>       </trans-unit>
        <trans-unit id="3764" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.ReceiveAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags)">
          <source>A bitwise combination of the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.SocketFlags" /&gt;</ph> values.</source>
          <target state="translated">Uma combinação bit a bit dos valores <ph id="ph1">&lt;see cref="T:System.Net.Sockets.SocketFlags" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3765" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.ReceiveAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags)">
          <source>Receive data from a connected socket.</source>
          <target state="translated">Receber dados de um soquete conectado.</target>       </trans-unit>
        <trans-unit id="3766" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.ReceiveAsync(System.Net.Sockets.Socket,System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)">
          <source>The socket to perform the receive operation on.</source>
          <target state="translated">O soquete no qual executar a operação de recebimento.</target>       </trans-unit>
        <trans-unit id="3767" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.ReceiveAsync(System.Net.Sockets.Socket,System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)">
          <source>An array that is the storage location for the received data.</source>
          <target state="translated">Uma matriz que é o local de armazenamento dos dados recebidos.</target>       </trans-unit>
        <trans-unit id="3768" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.ReceiveAsync(System.Net.Sockets.Socket,System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)">
          <source>A bitwise combination of the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.SocketFlags" /&gt;</ph> values.</source>
          <target state="translated">Uma combinação bit a bit dos valores <ph id="ph1">&lt;see cref="T:System.Net.Sockets.SocketFlags" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3769" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.ReceiveAsync(System.Net.Sockets.Socket,System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)">
          <source>Receives data from a connected socket.</source>
          <target state="translated">Recebe os dados de um soquete conectado.</target>       </trans-unit>
        <trans-unit id="3770" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.ReceiveFromAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)">
          <source>The socket to perform the ReceiveFrom operation on.</source>
          <target state="translated">O soquete no qual executar a operação ReceiveFrom.</target>       </trans-unit>
        <trans-unit id="3771" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.ReceiveFromAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)">
          <source>An array of type Byte that is the storage location for the received data.</source>
          <target state="translated">Uma matriz do tipo Byte que é o local de armazenamento dos dados recebidos.</target>       </trans-unit>
        <trans-unit id="3772" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.ReceiveFromAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)">
          <source>A bitwise combination of the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.SocketFlags" /&gt;</ph> values.</source>
          <target state="translated">Uma combinação bit a bit dos valores <ph id="ph1">&lt;see cref="T:System.Net.Sockets.SocketFlags" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3773" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.ReceiveFromAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)">
          <source>An EndPoint that represents the source of the data.</source>
          <target state="translated">Um EndPoint que representa a fonte dos dados.</target>       </trans-unit>
        <trans-unit id="3774" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.ReceiveFromAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)">
          <source>Receive data from a specified network device.</source>
          <target state="translated">Receba dados de um dispositivo de rede especificado.</target>       </trans-unit>
        <trans-unit id="3775" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.ReceiveMessageFromAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)">
          <source>The socket to perform the operation on.</source>
          <target state="translated">O soquete no qual executar a operação.</target>       </trans-unit>
        <trans-unit id="3776" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.ReceiveMessageFromAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)">
          <source>An array that is the storage location for received data.</source>
          <target state="translated">Uma matriz que é o local de armazenamento dos dados recebidos.</target>       </trans-unit>
        <trans-unit id="3777" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.ReceiveMessageFromAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)">
          <source>A bitwise combination of the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.SocketFlags" /&gt;</ph> values.</source>
          <target state="translated">Uma combinação bit a bit dos valores <ph id="ph1">&lt;see cref="T:System.Net.Sockets.SocketFlags" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3778" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.ReceiveMessageFromAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Net.EndPoint" /&gt;</ph>, that represents the remote server.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Net.EndPoint" /&gt;</ph> que representa o servidor remoto.</target>       </trans-unit>
        <trans-unit id="3779" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.ReceiveMessageFromAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)">
          <source>Receives the specified number of bytes of data into the specified location of the data buffer, using the specified <ph id="ph1">&lt;see cref="T:System.Net.Sockets.SocketFlags" /&gt;</ph>, and stores the endpoint and packet information.</source>
          <target state="translated">Recebe o número de bytes de dados no local especificado no buffer de dados usando o <ph id="ph1">&lt;see cref="T:System.Net.Sockets.SocketFlags" /&gt;</ph> especificado e armazena as informações de ponto de extremidade e pacote.</target>       </trans-unit>
        <trans-unit id="3780" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.SendAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags)">
          <source>The socket to perform the operation on.</source>
          <target state="translated">O soquete no qual executar a operação.</target>       </trans-unit>
        <trans-unit id="3781" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.SendAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags)">
          <source>An array of type Byte that contains the data to send.</source>
          <target state="translated">Uma matriz do tipo Byte que contém os dados a serem enviados.</target>       </trans-unit>
        <trans-unit id="3782" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.SendAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags)">
          <source>A bitwise combination of the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.SocketFlags" /&gt;</ph> values.</source>
          <target state="translated">Uma combinação bit a bit dos valores <ph id="ph1">&lt;see cref="T:System.Net.Sockets.SocketFlags" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3783" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.SendAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags)">
          <source>Sends data to a connected socket.</source>
          <target state="translated">Envia dados para um soquete conectado.</target>       </trans-unit>
        <trans-unit id="3784" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.SendAsync(System.Net.Sockets.Socket,System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)">
          <source>The socket to perform the operation on.</source>
          <target state="translated">O soquete no qual executar a operação.</target>       </trans-unit>
        <trans-unit id="3785" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.SendAsync(System.Net.Sockets.Socket,System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)">
          <source>An array that contains the data to send.</source>
          <target state="translated">Uma matriz que contém os dados a serem enviados.</target>       </trans-unit>
        <trans-unit id="3786" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.SendAsync(System.Net.Sockets.Socket,System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)">
          <source>A bitwise combination of the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.SocketFlags" /&gt;</ph> values.</source>
          <target state="translated">Uma combinação bit a bit dos valores <ph id="ph1">&lt;see cref="T:System.Net.Sockets.SocketFlags" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3787" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.SendAsync(System.Net.Sockets.Socket,System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)">
          <source>Sends data to a connected socket.</source>
          <target state="translated">Envia dados para um soquete conectado.</target>       </trans-unit>
        <trans-unit id="3788" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.SendToAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)">
          <source>The socket to perform the operation on.</source>
          <target state="translated">O soquete no qual executar a operação.</target>       </trans-unit>
        <trans-unit id="3789" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.SendToAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)">
          <source>An array that contains the data to send.</source>
          <target state="translated">Uma matriz que contém os dados a serem enviados.</target>       </trans-unit>
        <trans-unit id="3790" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.SendToAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)">
          <source>A bitwise combination of the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.SocketFlags" /&gt;</ph> values.</source>
          <target state="translated">Uma combinação bit a bit dos valores <ph id="ph1">&lt;see cref="T:System.Net.Sockets.SocketFlags" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3791" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.SendToAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Net.EndPoint" /&gt;</ph> that represents the remote device.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Net.EndPoint" /&gt;</ph> que representa o dispositivo remoto.</target>       </trans-unit>
        <trans-unit id="3792" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.SendToAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)">
          <source>Sends data asynchronously to a specific remote host.</source>
          <target state="translated">Envia dados de maneira assíncrona para um host remoto específico.</target>       </trans-unit>
        <trans-unit id="3793" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.Assembly,System.Type)">
          <source>The assembly to inspect.</source>
          <target state="translated">O assembly a ser inspecionado.</target>       </trans-unit>
        <trans-unit id="3794" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.Assembly,System.Type)">
          <source>The type of attribute to search for.</source>
          <target state="translated">O tipo de atributo a ser pesquisado.</target>       </trans-unit>
        <trans-unit id="3795" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.Assembly,System.Type)">
          <source>Retrieves a custom attribute of a specified type that is applied to a specified assembly.</source>
          <target state="translated">Recupera um atributo personalizado de um tipo especificado aplicado a um assembly especificado.</target>       </trans-unit>
        <trans-unit id="3796" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)">
          <source>The member to inspect.</source>
          <target state="translated">O membro a ser inspecionado.</target>       </trans-unit>
        <trans-unit id="3797" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)">
          <source>The type of attribute to search for.</source>
          <target state="translated">O tipo de atributo a ser pesquisado.</target>       </trans-unit>
        <trans-unit id="3798" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)">
          <source>Retrieves a custom attribute of a specified type that is applied to a specified member.</source>
          <target state="translated">Recupera um atributo personalizado de um tipo especificado aplicado a um membro especificado.</target>       </trans-unit>
        <trans-unit id="3799" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>The member to inspect.</source>
          <target state="translated">O membro a ser inspecionado.</target>       </trans-unit>
        <trans-unit id="3800" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>The type of attribute to search for.</source>
          <target state="translated">O tipo de atributo a ser pesquisado.</target>       </trans-unit>
        <trans-unit id="3801" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to inspect the ancestors of <bpt id="p1">&lt;c&gt;</bpt>element<ept id="p1">&lt;/c&gt;</ept>; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para inspecionar os ancestrais do <bpt id="p1">&lt;c&gt;</bpt>elemento<ept id="p1">&lt;/c&gt;</ept>, caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3802" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>Retrieves a custom attribute of a specified type that is applied to a specified member, and optionally inspects the ancestors of that member.</source>
          <target state="translated">Recupera um atributo personalizado de um tipo especificado aplicado a um membro especificado e opcionalmente inspeciona os ancestrais desse membro.</target>       </trans-unit>
        <trans-unit id="3803" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.Module,System.Type)">
          <source>The module to inspect.</source>
          <target state="translated">O módulo a ser inspecionado.</target>       </trans-unit>
        <trans-unit id="3804" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.Module,System.Type)">
          <source>The type of attribute to search for.</source>
          <target state="translated">O tipo de atributo a ser pesquisado.</target>       </trans-unit>
        <trans-unit id="3805" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.Module,System.Type)">
          <source>Retrieves a custom attribute of a specified type that is applied to a specified module.</source>
          <target state="translated">Recupera um atributo personalizado de um tipo especificado aplicado a um módulo especificado.</target>       </trans-unit>
        <trans-unit id="3806" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)">
          <source>The parameter to inspect.</source>
          <target state="translated">O parâmetro a ser inspecionado.</target>       </trans-unit>
        <trans-unit id="3807" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)">
          <source>The type of attribute to search for.</source>
          <target state="translated">O tipo de atributo a ser pesquisado.</target>       </trans-unit>
        <trans-unit id="3808" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)">
          <source>Retrieves a custom attribute of a specified type that is applied to a specified parameter.</source>
          <target state="translated">Recupera um atributo personalizado de um tipo especificado aplicado a um parâmetro especificado.</target>       </trans-unit>
        <trans-unit id="3809" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source>The parameter to inspect.</source>
          <target state="translated">O parâmetro a ser inspecionado.</target>       </trans-unit>
        <trans-unit id="3810" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source>The type of attribute to search for.</source>
          <target state="translated">O tipo de atributo a ser pesquisado.</target>       </trans-unit>
        <trans-unit id="3811" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to inspect the ancestors of <bpt id="p1">&lt;c&gt;</bpt>element<ept id="p1">&lt;/c&gt;</ept>; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para inspecionar os ancestrais do <bpt id="p1">&lt;c&gt;</bpt>elemento<ept id="p1">&lt;/c&gt;</ept>, caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3812" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source>Retrieves a custom attribute of a specified type that is applied to a specified parameter, and optionally inspects the ancestors of that parameter.</source>
          <target state="translated">Recupera um atributo personalizado de um tipo especificado aplicado a um parâmetro especificado e opcionalmente inspeciona os ancestrais desse parâmetro.</target>       </trans-unit>
        <trans-unit id="3813" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.Assembly)">
          <source>The type of attribute to search for.</source>
          <target state="translated">O tipo de atributo a ser pesquisado.</target>       </trans-unit>
        <trans-unit id="3814" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.Assembly)">
          <source>The assembly to inspect.</source>
          <target state="translated">O assembly a ser inspecionado.</target>       </trans-unit>
        <trans-unit id="3815" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.Assembly)">
          <source>Retrieves a custom attribute of a specified type that is applied to a specified assembly.</source>
          <target state="translated">Recupera um atributo personalizado de um tipo especificado aplicado a um assembly especificado.</target>       </trans-unit>
        <trans-unit id="3816" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo)">
          <source>The type of attribute to search for.</source>
          <target state="translated">O tipo de atributo a ser pesquisado.</target>       </trans-unit>
        <trans-unit id="3817" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo)">
          <source>The member to inspect.</source>
          <target state="translated">O membro a ser inspecionado.</target>       </trans-unit>
        <trans-unit id="3818" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo)">
          <source>Retrieves a custom attribute of a specified type that is applied to a specified member.</source>
          <target state="translated">Recupera um atributo personalizado de um tipo especificado aplicado a um membro especificado.</target>       </trans-unit>
        <trans-unit id="3819" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo,System.Boolean)">
          <source>The type of attribute to search for.</source>
          <target state="translated">O tipo de atributo a ser pesquisado.</target>       </trans-unit>
        <trans-unit id="3820" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo,System.Boolean)">
          <source>The member to inspect.</source>
          <target state="translated">O membro a ser inspecionado.</target>       </trans-unit>
        <trans-unit id="3821" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to inspect the ancestors of <bpt id="p1">&lt;c&gt;</bpt>element<ept id="p1">&lt;/c&gt;</ept>; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para inspecionar os ancestrais do <bpt id="p1">&lt;c&gt;</bpt>elemento<ept id="p1">&lt;/c&gt;</ept>, caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3822" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo,System.Boolean)">
          <source>Retrieves a custom attribute of a specified type that is applied to a specified member, and optionally inspects the ancestors of that member.</source>
          <target state="translated">Recupera um atributo personalizado de um tipo especificado aplicado a um membro especificado e opcionalmente inspeciona os ancestrais desse membro.</target>       </trans-unit>
        <trans-unit id="3823" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.Module)">
          <source>The type of attribute to search for.</source>
          <target state="translated">O tipo de atributo a ser pesquisado.</target>       </trans-unit>
        <trans-unit id="3824" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.Module)">
          <source>The module to inspect.</source>
          <target state="translated">O módulo a ser inspecionado.</target>       </trans-unit>
        <trans-unit id="3825" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.Module)">
          <source>Retrieves a custom attribute of a specified type that is applied to a specified module.</source>
          <target state="translated">Recupera um atributo personalizado de um tipo especificado aplicado a um módulo especificado.</target>       </trans-unit>
        <trans-unit id="3826" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.ParameterInfo)">
          <source>The type of attribute to search for.</source>
          <target state="translated">O tipo de atributo a ser pesquisado.</target>       </trans-unit>
        <trans-unit id="3827" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.ParameterInfo)">
          <source>The parameter to inspect.</source>
          <target state="translated">O parâmetro a ser inspecionado.</target>       </trans-unit>
        <trans-unit id="3828" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.ParameterInfo)">
          <source>Retrieves a custom attribute of a specified type that is applied to a specified parameter.</source>
          <target state="translated">Recupera um atributo personalizado de um tipo especificado aplicado a um parâmetro especificado.</target>       </trans-unit>
        <trans-unit id="3829" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.ParameterInfo,System.Boolean)">
          <source>The type of attribute to search for.</source>
          <target state="translated">O tipo de atributo a ser pesquisado.</target>       </trans-unit>
        <trans-unit id="3830" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.ParameterInfo,System.Boolean)">
          <source>The parameter to inspect.</source>
          <target state="translated">O parâmetro a ser inspecionado.</target>       </trans-unit>
        <trans-unit id="3831" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.ParameterInfo,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to inspect the ancestors of <bpt id="p1">&lt;c&gt;</bpt>element<ept id="p1">&lt;/c&gt;</ept>; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para inspecionar os ancestrais do <bpt id="p1">&lt;c&gt;</bpt>elemento<ept id="p1">&lt;/c&gt;</ept>, caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3832" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.ParameterInfo,System.Boolean)">
          <source>Retrieves a custom attribute of a specified type that is applied to a specified parameter, and optionally inspects the ancestors of that parameter.</source>
          <target state="translated">Recupera um atributo personalizado de um tipo especificado aplicado a um parâmetro especificado e opcionalmente inspeciona os ancestrais desse parâmetro.</target>       </trans-unit>
        <trans-unit id="3833" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Assembly)">
          <source>The assembly to inspect.</source>
          <target state="translated">O assembly a ser inspecionado.</target>       </trans-unit>
        <trans-unit id="3834" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Assembly)">
          <source>Retrieves a collection of custom attributes that are applied to a specified assembly.</source>
          <target state="translated">Recupera uma coleção de atributos personalizados que são aplicados a um assembly especificado.</target>       </trans-unit>
        <trans-unit id="3835" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Assembly,System.Type)">
          <source>The assembly to inspect.</source>
          <target state="translated">O assembly a ser inspecionado.</target>       </trans-unit>
        <trans-unit id="3836" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Assembly,System.Type)">
          <source>The type of attribute to search for.</source>
          <target state="translated">O tipo de atributo a ser pesquisado.</target>       </trans-unit>
        <trans-unit id="3837" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Assembly,System.Type)">
          <source>Retrieves a collection of custom attributes of a specified type that are applied to a specified assembly.</source>
          <target state="translated">Recupera uma coleção de atributos personalizados de um tipo especificado que são aplicados a um assembly especificado.</target>       </trans-unit>
        <trans-unit id="3838" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo)">
          <source>The member to inspect.</source>
          <target state="translated">O membro a ser inspecionado.</target>       </trans-unit>
        <trans-unit id="3839" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo)">
          <source>Retrieves a collection of custom attributes that are applied to a specified member.</source>
          <target state="translated">Recupera uma coleção de atributos personalizados que são aplicados a um membro especificado.</target>       </trans-unit>
        <trans-unit id="3840" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)">
          <source>The member to inspect.</source>
          <target state="translated">O membro a ser inspecionado.</target>       </trans-unit>
        <trans-unit id="3841" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to inspect the ancestors of <bpt id="p1">&lt;c&gt;</bpt>element<ept id="p1">&lt;/c&gt;</ept>; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para inspecionar os ancestrais do <bpt id="p1">&lt;c&gt;</bpt>elemento<ept id="p1">&lt;/c&gt;</ept>, caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3842" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)">
          <source>Retrieves a collection of custom attributes that are applied to a specified member, and optionally inspects the ancestors of that member.</source>
          <target state="translated">Recupera uma coleção de atributos personalizados aplicado a um membro especificado e opcionalmente inspeciona os ancestrais desse membro.</target>       </trans-unit>
        <trans-unit id="3843" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)">
          <source>The member to inspect.</source>
          <target state="translated">O membro a ser inspecionado.</target>       </trans-unit>
        <trans-unit id="3844" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)">
          <source>The type of attribute to search for.</source>
          <target state="translated">O tipo de atributo a ser pesquisado.</target>       </trans-unit>
        <trans-unit id="3845" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)">
          <source>Retrieves a collection of custom attributes of a specified type that are applied to a specified member.</source>
          <target state="translated">Recupera uma coleção de atributos personalizados de um tipo especificado que são aplicados a um membro especificado.</target>       </trans-unit>
        <trans-unit id="3846" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>The member to inspect.</source>
          <target state="translated">O membro a ser inspecionado.</target>       </trans-unit>
        <trans-unit id="3847" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>The type of attribute to search for.</source>
          <target state="translated">O tipo de atributo a ser pesquisado.</target>       </trans-unit>
        <trans-unit id="3848" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to inspect the ancestors of <bpt id="p1">&lt;c&gt;</bpt>element<ept id="p1">&lt;/c&gt;</ept>; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para inspecionar os ancestrais do <bpt id="p1">&lt;c&gt;</bpt>elemento<ept id="p1">&lt;/c&gt;</ept>, caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3849" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>Retrieves a collection of custom attributes of a specified type that are applied to a specified member, and optionally inspects the ancestors of that member.</source>
          <target state="translated">Recupera uma coleção de atributos personalizados de um tipo especificado aplicado a um membro especificado e opcionalmente inspeciona os ancestrais desse membro.</target>       </trans-unit>
        <trans-unit id="3850" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Module)">
          <source>The module to inspect.</source>
          <target state="translated">O módulo a ser inspecionado.</target>       </trans-unit>
        <trans-unit id="3851" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Module)">
          <source>Retrieves a collection of custom attributes that are applied to a specified module.</source>
          <target state="translated">Recupera uma coleção de atributos personalizados que são aplicados a um módulo especificado.</target>       </trans-unit>
        <trans-unit id="3852" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Module,System.Type)">
          <source>The module to inspect.</source>
          <target state="translated">O módulo a ser inspecionado.</target>       </trans-unit>
        <trans-unit id="3853" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Module,System.Type)">
          <source>The type of attribute to search for.</source>
          <target state="translated">O tipo de atributo a ser pesquisado.</target>       </trans-unit>
        <trans-unit id="3854" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Module,System.Type)">
          <source>Retrieves a collection of custom attributes of a specified type that are applied to a specified module.</source>
          <target state="translated">Recupera uma coleção de atributos personalizados de um tipo especificado que são aplicados a um módulo especificado.</target>       </trans-unit>
        <trans-unit id="3855" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.ParameterInfo)">
          <source>The parameter to inspect.</source>
          <target state="translated">O parâmetro a ser inspecionado.</target>       </trans-unit>
        <trans-unit id="3856" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.ParameterInfo)">
          <source>Retrieves a collection of custom attributes that are applied to a specified parameter.</source>
          <target state="translated">Recupera uma coleção de atributos personalizados que são aplicados a um parâmetro especificado.</target>       </trans-unit>
        <trans-unit id="3857" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)">
          <source>The parameter to inspect.</source>
          <target state="translated">O parâmetro a ser inspecionado.</target>       </trans-unit>
        <trans-unit id="3858" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to inspect the ancestors of <bpt id="p1">&lt;c&gt;</bpt>element<ept id="p1">&lt;/c&gt;</ept>; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para inspecionar os ancestrais do <bpt id="p1">&lt;c&gt;</bpt>elemento<ept id="p1">&lt;/c&gt;</ept>, caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3859" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)">
          <source>Retrieves a collection of custom attributes that are applied to a specified parameter, and optionally inspects the ancestors of that parameter.</source>
          <target state="translated">Recupera uma coleção de atributos personalizados aplicados a um parâmetro especificado e opcionalmente inspeciona os ancestrais desse parâmetro.</target>       </trans-unit>
        <trans-unit id="3860" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)">
          <source>The parameter to inspect.</source>
          <target state="translated">O parâmetro a ser inspecionado.</target>       </trans-unit>
        <trans-unit id="3861" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)">
          <source>The type of attribute to search for.</source>
          <target state="translated">O tipo de atributo a ser pesquisado.</target>       </trans-unit>
        <trans-unit id="3862" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)">
          <source>Retrieves a collection of custom attributes of a specified type that are applied to a specified parameter.</source>
          <target state="translated">Recupera uma coleção de atributos personalizados de um tipo especificado que são aplicados a um parâmetro especificado.</target>       </trans-unit>
        <trans-unit id="3863" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source>The parameter to inspect.</source>
          <target state="translated">O parâmetro a ser inspecionado.</target>       </trans-unit>
        <trans-unit id="3864" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source>The type of attribute to search for.</source>
          <target state="translated">O tipo de atributo a ser pesquisado.</target>       </trans-unit>
        <trans-unit id="3865" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to inspect the ancestors of <bpt id="p1">&lt;c&gt;</bpt>element<ept id="p1">&lt;/c&gt;</ept>; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para inspecionar os ancestrais do <bpt id="p1">&lt;c&gt;</bpt>elemento<ept id="p1">&lt;/c&gt;</ept>, caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3866" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source>Retrieves a collection of custom attributes of a specified type that are applied to a specified parameter, and optionally inspects the ancestors of that parameter.</source>
          <target state="translated">Recupera uma coleção de atributos personalizados de um tipo especificado aplicado a um parâmetro especificado e opcionalmente inspeciona os ancestrais desse parâmetro.</target>       </trans-unit>
        <trans-unit id="3867" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.Assembly)">
          <source>The type of attribute to search for.</source>
          <target state="translated">O tipo de atributo a ser pesquisado.</target>       </trans-unit>
        <trans-unit id="3868" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.Assembly)">
          <source>The assembly to inspect.</source>
          <target state="translated">O assembly a ser inspecionado.</target>       </trans-unit>
        <trans-unit id="3869" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.Assembly)">
          <source>Retrieves a collection of custom attributes of a specified type that are applied to a specified assembly.</source>
          <target state="translated">Recupera uma coleção de atributos personalizados de um tipo especificado que são aplicados a um assembly especificado.</target>       </trans-unit>
        <trans-unit id="3870" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo)">
          <source>The type of attribute to search for.</source>
          <target state="translated">O tipo de atributo a ser pesquisado.</target>       </trans-unit>
        <trans-unit id="3871" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo)">
          <source>The member to inspect.</source>
          <target state="translated">O membro a ser inspecionado.</target>       </trans-unit>
        <trans-unit id="3872" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo)">
          <source>Retrieves a collection of custom attributes of a specified type that are applied to a specified member.</source>
          <target state="translated">Recupera uma coleção de atributos personalizados de um tipo especificado que são aplicados a um membro especificado.</target>       </trans-unit>
        <trans-unit id="3873" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo,System.Boolean)">
          <source>The type of attribute to search for.</source>
          <target state="translated">O tipo de atributo a ser pesquisado.</target>       </trans-unit>
        <trans-unit id="3874" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo,System.Boolean)">
          <source>The member to inspect.</source>
          <target state="translated">O membro a ser inspecionado.</target>       </trans-unit>
        <trans-unit id="3875" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to inspect the ancestors of <bpt id="p1">&lt;c&gt;</bpt>element<ept id="p1">&lt;/c&gt;</ept>; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para inspecionar os ancestrais do <bpt id="p1">&lt;c&gt;</bpt>elemento<ept id="p1">&lt;/c&gt;</ept>, caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3876" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo,System.Boolean)">
          <source>Retrieves a collection of custom attributes of a specified type that are applied to a specified member, and optionally inspects the ancestors of that member.</source>
          <target state="translated">Recupera uma coleção de atributos personalizados de um tipo especificado aplicado a um membro especificado e opcionalmente inspeciona os ancestrais desse membro.</target>       </trans-unit>
        <trans-unit id="3877" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.Module)">
          <source>The type of attribute to search for.</source>
          <target state="translated">O tipo de atributo a ser pesquisado.</target>       </trans-unit>
        <trans-unit id="3878" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.Module)">
          <source>The module to inspect.</source>
          <target state="translated">O módulo a ser inspecionado.</target>       </trans-unit>
        <trans-unit id="3879" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.Module)">
          <source>Retrieves a collection of custom attributes of a specified type that are applied to a specified module.</source>
          <target state="translated">Recupera uma coleção de atributos personalizados de um tipo especificado que são aplicados a um módulo especificado.</target>       </trans-unit>
        <trans-unit id="3880" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.ParameterInfo)">
          <source>The type of attribute to search for.</source>
          <target state="translated">O tipo de atributo a ser pesquisado.</target>       </trans-unit>
        <trans-unit id="3881" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.ParameterInfo)">
          <source>The parameter to inspect.</source>
          <target state="translated">O parâmetro a ser inspecionado.</target>       </trans-unit>
        <trans-unit id="3882" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.ParameterInfo)">
          <source>Retrieves a collection of custom attributes of a specified type that are applied to a specified parameter.</source>
          <target state="translated">Recupera uma coleção de atributos personalizados de um tipo especificado que são aplicados a um parâmetro especificado.</target>       </trans-unit>
        <trans-unit id="3883" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.ParameterInfo,System.Boolean)">
          <source>The type of attribute to search for.</source>
          <target state="translated">O tipo de atributo a ser pesquisado.</target>       </trans-unit>
        <trans-unit id="3884" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.ParameterInfo,System.Boolean)">
          <source>The parameter to inspect.</source>
          <target state="translated">O parâmetro a ser inspecionado.</target>       </trans-unit>
        <trans-unit id="3885" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.ParameterInfo,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to inspect the ancestors of <bpt id="p1">&lt;c&gt;</bpt>element<ept id="p1">&lt;/c&gt;</ept>; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para inspecionar os ancestrais do <bpt id="p1">&lt;c&gt;</bpt>elemento<ept id="p1">&lt;/c&gt;</ept>, caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3886" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.ParameterInfo,System.Boolean)">
          <source>Retrieves a collection of custom attributes of a specified type that are applied to a specified parameter, and optionally inspects the ancestors of that parameter.</source>
          <target state="translated">Recupera uma coleção de atributos personalizados de um tipo especificado aplicado a um parâmetro especificado e opcionalmente inspeciona os ancestrais desse parâmetro.</target>       </trans-unit>
        <trans-unit id="3887" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.Assembly,System.Type)">
          <source>The assembly to inspect.</source>
          <target state="translated">O assembly a ser inspecionado.</target>       </trans-unit>
        <trans-unit id="3888" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.Assembly,System.Type)">
          <source>The type of the attribute to search for.</source>
          <target state="translated">O tipo de atributo a ser pesquisado.</target>       </trans-unit>
        <trans-unit id="3889" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.Assembly,System.Type)">
          <source>Indicates whether custom attributes of a specified type are applied to a specified assembly.</source>
          <target state="translated">Indica se os atributos personalizados de um tipo especificados são aplicados a um assembly especificado.</target>       </trans-unit>
        <trans-unit id="3890" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type)">
          <source>The member to inspect.</source>
          <target state="translated">O membro a ser inspecionado.</target>       </trans-unit>
        <trans-unit id="3891" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type)">
          <source>The type of attribute to search for.</source>
          <target state="translated">O tipo de atributo a ser pesquisado.</target>       </trans-unit>
        <trans-unit id="3892" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type)">
          <source>Indicates whether custom attributes of a specified type are applied to a specified member.</source>
          <target state="translated">Indica se os atributos personalizados de um tipo especificados são aplicados a um membro especificado.</target>       </trans-unit>
        <trans-unit id="3893" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>The member to inspect.</source>
          <target state="translated">O membro a ser inspecionado.</target>       </trans-unit>
        <trans-unit id="3894" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>The type of the attribute to search for.</source>
          <target state="translated">O tipo de atributo a ser pesquisado.</target>       </trans-unit>
        <trans-unit id="3895" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to inspect the ancestors of <bpt id="p1">&lt;c&gt;</bpt>element<ept id="p1">&lt;/c&gt;</ept>; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para inspecionar os ancestrais do <bpt id="p1">&lt;c&gt;</bpt>elemento<ept id="p1">&lt;/c&gt;</ept>, caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3896" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>Indicates whether custom attributes of a specified type are applied to a specified member, and, optionally, applied to its ancestors.</source>
          <target state="translated">Indica se os atributos personalizados de um tipo especificado são aplicados a um membro especificado e, opcionalmente, aplicados a seus ancestrais.</target>       </trans-unit>
        <trans-unit id="3897" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.Module,System.Type)">
          <source>The module to inspect.</source>
          <target state="translated">O módulo a ser inspecionado.</target>       </trans-unit>
        <trans-unit id="3898" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.Module,System.Type)">
          <source>The type of attribute to search for.</source>
          <target state="translated">O tipo de atributo a ser pesquisado.</target>       </trans-unit>
        <trans-unit id="3899" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.Module,System.Type)">
          <source>Indicates whether custom attributes of a specified type are applied to a specified module.</source>
          <target state="translated">Indica se os atributos personalizados de um tipo especificados são aplicados a um módulo especificado.</target>       </trans-unit>
        <trans-unit id="3900" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.ParameterInfo,System.Type)">
          <source>The parameter to inspect.</source>
          <target state="translated">O parâmetro a ser inspecionado.</target>       </trans-unit>
        <trans-unit id="3901" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.ParameterInfo,System.Type)">
          <source>The type of attribute to search for.</source>
          <target state="translated">O tipo de atributo a ser pesquisado.</target>       </trans-unit>
        <trans-unit id="3902" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.ParameterInfo,System.Type)">
          <source>Indicates whether custom attributes of a specified type are applied to a specified parameter.</source>
          <target state="translated">Indica se os atributos personalizados de um tipo especificados são aplicados a um parâmetro especificado.</target>       </trans-unit>
        <trans-unit id="3903" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source>The parameter to inspect.</source>
          <target state="translated">O parâmetro a ser inspecionado.</target>       </trans-unit>
        <trans-unit id="3904" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source>The type of attribute to search for.</source>
          <target state="translated">O tipo de atributo a ser pesquisado.</target>       </trans-unit>
        <trans-unit id="3905" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to inspect the ancestors of <bpt id="p1">&lt;c&gt;</bpt>element<ept id="p1">&lt;/c&gt;</ept>; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para inspecionar os ancestrais do <bpt id="p1">&lt;c&gt;</bpt>elemento<ept id="p1">&lt;/c&gt;</ept>, caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3906" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source>Indicates whether custom attributes of a specified type are applied to a specified parameter, and, optionally, applied to its ancestors.</source>
          <target state="translated">Indica se os atributos personalizados de um tipo especificado são aplicados a um parâmetro especificado e, opcionalmente, aplicados a seus ancestrais.</target>       </trans-unit>
        <trans-unit id="3907" translate="yes" xml:space="preserve" uid="M:System.Reflection.IntrospectionExtensions.GetTypeInfo(System.Type)">
          <source>The type to convert.</source>
          <target state="translated">O tipo a ser convertido.</target>       </trans-unit>
        <trans-unit id="3908" translate="yes" xml:space="preserve" uid="M:System.Reflection.IntrospectionExtensions.GetTypeInfo(System.Type)">
          <source>Returns the <ph id="ph1">&lt;see cref="T:System.Reflection.TypeInfo" /&gt;</ph> representation of the specified type.</source>
          <target state="translated">Retorna a representação de <ph id="ph1">&lt;see cref="T:System.Reflection.TypeInfo" /&gt;</ph> do tipo especificado.</target>       </trans-unit>
        <trans-unit id="3909" translate="yes" xml:space="preserve" uid="M:System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)">
          <source>The delegate to examine.</source>
          <target state="translated">O delegado a examinar.</target>       </trans-unit>
        <trans-unit id="3910" translate="yes" xml:space="preserve" uid="M:System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)">
          <source>Gets an object that represents the method represented by the specified delegate.</source>
          <target state="translated">Obtém um objeto que representa o método representado pelo delegado especificado.</target>       </trans-unit>
        <trans-unit id="3911" translate="yes" xml:space="preserve" uid="M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeBaseDefinition(System.Reflection.MethodInfo)">
          <source>The method to retrieve information about.</source>
          <target state="translated">O método sobre o qual recuperar informações.</target>       </trans-unit>
        <trans-unit id="3912" translate="yes" xml:space="preserve" uid="M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeBaseDefinition(System.Reflection.MethodInfo)">
          <source>Retrieves an object that represents the specified method on the direct or indirect base class where the method was first declared.</source>
          <target state="translated">Recupera um objeto que representa o método especificado na classe base direta ou indireta em que o método foi declarado pela primeira vez.</target>       </trans-unit>
        <trans-unit id="3913" translate="yes" xml:space="preserve" uid="M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeEvent(System.Type,System.String)">
          <source>The type that contains the event.</source>
          <target state="translated">O tipo que contém o evento.</target>       </trans-unit>
        <trans-unit id="3914" translate="yes" xml:space="preserve" uid="M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeEvent(System.Type,System.String)">
          <source>The name of the event.</source>
          <target state="translated">O nome do evento.</target>       </trans-unit>
        <trans-unit id="3915" translate="yes" xml:space="preserve" uid="M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeEvent(System.Type,System.String)">
          <source>Retrieves an object that represents the specified event.</source>
          <target state="translated">Recupera um objeto que representa o evento especificado.</target>       </trans-unit>
        <trans-unit id="3916" translate="yes" xml:space="preserve" uid="M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeEvents(System.Type)">
          <source>The type that contains the events.</source>
          <target state="translated">O tipo que contém os eventos.</target>       </trans-unit>
        <trans-unit id="3917" translate="yes" xml:space="preserve" uid="M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeEvents(System.Type)">
          <source>Retrieves a collection that represents all the events defined on a specified type.</source>
          <target state="translated">Recupera uma coleção que representa todos os eventos definidos em um tipo especificado.</target>       </trans-unit>
        <trans-unit id="3918" translate="yes" xml:space="preserve" uid="M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeField(System.Type,System.String)">
          <source>The type that contains the field.</source>
          <target state="translated">O tipo que contém o campo.</target>       </trans-unit>
        <trans-unit id="3919" translate="yes" xml:space="preserve" uid="M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeField(System.Type,System.String)">
          <source>The name of the field.</source>
          <target state="translated">O nome do campo.</target>       </trans-unit>
        <trans-unit id="3920" translate="yes" xml:space="preserve" uid="M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeField(System.Type,System.String)">
          <source>Retrieves an object that represents a specified field.</source>
          <target state="translated">Recupera um objeto que representa um campo especificado.</target>       </trans-unit>
        <trans-unit id="3921" translate="yes" xml:space="preserve" uid="M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeFields(System.Type)">
          <source>The type that contains the fields.</source>
          <target state="translated">O tipo que contém os campos.</target>       </trans-unit>
        <trans-unit id="3922" translate="yes" xml:space="preserve" uid="M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeFields(System.Type)">
          <source>Retrieves a collection that represents all the fields defined on a specified type.</source>
          <target state="translated">Recupera uma coleção que representa todos os campos definidos em um tipo especificado.</target>       </trans-unit>
        <trans-unit id="3923" translate="yes" xml:space="preserve" uid="M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeInterfaceMap(System.Reflection.TypeInfo,System.Type)">
          <source>The type to retrieve a mapping for.</source>
          <target state="translated">O tipo para o qual recuperar um mapeamento.</target>       </trans-unit>
        <trans-unit id="3924" translate="yes" xml:space="preserve" uid="M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeInterfaceMap(System.Reflection.TypeInfo,System.Type)">
          <source>The interface to retrieve a mapping for.</source>
          <target state="translated">A interface para a qual recuperar um mapeamento.</target>       </trans-unit>
        <trans-unit id="3925" translate="yes" xml:space="preserve" uid="M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeInterfaceMap(System.Reflection.TypeInfo,System.Type)">
          <source>Returns an interface mapping for the specified type and the specified interface.</source>
          <target state="translated">Retorna um mapeamento de interface para o tipo e para a interface especificados.</target>       </trans-unit>
        <trans-unit id="3926" translate="yes" xml:space="preserve" uid="M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeMethod(System.Type,System.String,System.Type[])">
          <source>The type that contains the method.</source>
          <target state="translated">O tipo que contém o método.</target>       </trans-unit>
        <trans-unit id="3927" translate="yes" xml:space="preserve" uid="M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeMethod(System.Type,System.String,System.Type[])">
          <source>The name of the method.</source>
          <target state="translated">O nome do método.</target>       </trans-unit>
        <trans-unit id="3928" translate="yes" xml:space="preserve" uid="M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeMethod(System.Type,System.String,System.Type[])">
          <source>An array that contains the method's parameters.</source>
          <target state="translated">Uma matriz que contém os parâmetros do método.</target>       </trans-unit>
        <trans-unit id="3929" translate="yes" xml:space="preserve" uid="M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeMethod(System.Type,System.String,System.Type[])">
          <source>Retrieves an object that represents a specified method.</source>
          <target state="translated">Recupera um objeto que representa um método especificado.</target>       </trans-unit>
        <trans-unit id="3930" translate="yes" xml:space="preserve" uid="M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeMethods(System.Type)">
          <source>The type that contains the methods.</source>
          <target state="translated">O tipo que contém os métodos.</target>       </trans-unit>
        <trans-unit id="3931" translate="yes" xml:space="preserve" uid="M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeMethods(System.Type)">
          <source>Retrieves a collection that represents all methods defined on a specified type.</source>
          <target state="translated">Recupera uma coleção que representa todos os métodos definidos em um tipo especificado.</target>       </trans-unit>
        <trans-unit id="3932" translate="yes" xml:space="preserve" uid="M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeProperties(System.Type)">
          <source>The type that contains the properties.</source>
          <target state="translated">O tipo que contém as propriedades.</target>       </trans-unit>
        <trans-unit id="3933" translate="yes" xml:space="preserve" uid="M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeProperties(System.Type)">
          <source>Retrieves a collection that represents all the properties defined on a specified type.</source>
          <target state="translated">Recupera uma coleção que representa todas as propriedades definidas em um tipo especificado.</target>       </trans-unit>
        <trans-unit id="3934" translate="yes" xml:space="preserve" uid="M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeProperty(System.Type,System.String)">
          <source>The type that contains the property.</source>
          <target state="translated">O tipo que contém a propriedade.</target>       </trans-unit>
        <trans-unit id="3935" translate="yes" xml:space="preserve" uid="M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeProperty(System.Type,System.String)">
          <source>The name of the property.</source>
          <target state="translated">O nome da propriedade.</target>       </trans-unit>
        <trans-unit id="3936" translate="yes" xml:space="preserve" uid="M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeProperty(System.Type,System.String)">
          <source>Retrieves an object that represents a specified property.</source>
          <target state="translated">Recupera um objeto que representa uma propriedade especificada.</target>       </trans-unit>
        <trans-unit id="3937" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializerExtensions.GetSerializationSurrogateProvider(System.Runtime.Serialization.DataContractSerializer)">
          <source>The serializer which is being surrogated.</source>
          <target state="translated">O serializador que está sendo substituído.</target>       </trans-unit>
        <trans-unit id="3938" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializerExtensions.GetSerializationSurrogateProvider(System.Runtime.Serialization.DataContractSerializer)">
          <source>Returns the surrogate serialization provider for this serializer.</source>
          <target state="translated">Retorna o provedor de serialização alternativo para esse serializador.</target>       </trans-unit>
        <trans-unit id="3939" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializerExtensions.SetSerializationSurrogateProvider(System.Runtime.Serialization.DataContractSerializer,System.Runtime.Serialization.ISerializationSurrogateProvider)">
          <source>The serializer which is being surrogated.</source>
          <target state="translated">O serializador que está sendo substituído.</target>       </trans-unit>
        <trans-unit id="3940" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializerExtensions.SetSerializationSurrogateProvider(System.Runtime.Serialization.DataContractSerializer,System.Runtime.Serialization.ISerializationSurrogateProvider)">
          <source>The surrogate serialization provider.</source>
          <target state="translated">O provedor de serialização alternativo.</target>       </trans-unit>
        <trans-unit id="3941" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializerExtensions.SetSerializationSurrogateProvider(System.Runtime.Serialization.DataContractSerializer,System.Runtime.Serialization.ISerializationSurrogateProvider)">
          <source>Specifies a surrogate serialization provider for this <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractSerializer" /&gt;</ph>.</source>
          <target state="translated">Especifica um provedor de serialização alternativo para esse <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractSerializer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3942" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.X509Certificates.DSACertificateExtensions.CopyWithPrivateKey(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.DSA)">
          <source>The DSA certificate.</source>
          <target state="translated">O certificado DSA.</target>       </trans-unit>
        <trans-unit id="3943" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.X509Certificates.DSACertificateExtensions.CopyWithPrivateKey(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.DSA)">
          <source>The private DSA key.</source>
          <target state="translated">A chave privada DSA.</target>       </trans-unit>
        <trans-unit id="3944" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.X509Certificates.DSACertificateExtensions.CopyWithPrivateKey(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.DSA)">
          <source>Combines a private key with the public key of a <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.DSA" /&gt;</ph> certificate to generate a new DSA certificate.</source>
          <target state="translated">Combina uma chave privada com a chave pública de um certificado <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.DSA" /&gt;</ph> para gerar um novo certificado DSA.</target>       </trans-unit>
        <trans-unit id="3945" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.X509Certificates.DSACertificateExtensions.GetDSAPrivateKey(System.Security.Cryptography.X509Certificates.X509Certificate2)">
          <source>The certificate.</source>
          <target state="translated">O certificado.</target>       </trans-unit>
        <trans-unit id="3946" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.X509Certificates.DSACertificateExtensions.GetDSAPrivateKey(System.Security.Cryptography.X509Certificates.X509Certificate2)">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.DSA" /&gt;</ph> private key from the <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /&gt;</ph>.</source>
          <target state="translated">Obtém a chave privada <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.DSA" /&gt;</ph> do <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3947" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.X509Certificates.DSACertificateExtensions.GetDSAPublicKey(System.Security.Cryptography.X509Certificates.X509Certificate2)">
          <source>The certificate.</source>
          <target state="translated">O certificado.</target>       </trans-unit>
        <trans-unit id="3948" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.X509Certificates.DSACertificateExtensions.GetDSAPublicKey(System.Security.Cryptography.X509Certificates.X509Certificate2)">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.DSA" /&gt;</ph> public key from the <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /&gt;</ph>.</source>
          <target state="translated">Obtém a chave pública <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.DSA" /&gt;</ph> do <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3949" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.X509Certificates.ECDsaCertificateExtensions.CopyWithPrivateKey(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.ECDsa)">
          <source>The ECDSA certificate.</source>
          <target state="translated">O certificado ECDSA.</target>       </trans-unit>
        <trans-unit id="3950" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.X509Certificates.ECDsaCertificateExtensions.CopyWithPrivateKey(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.ECDsa)">
          <source>The private ECDSA key.</source>
          <target state="translated">A chave privada de ECDSA.</target>       </trans-unit>
        <trans-unit id="3951" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.X509Certificates.ECDsaCertificateExtensions.CopyWithPrivateKey(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.ECDsa)">
          <source>Combines a private key with the public key of an <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDsa" /&gt;</ph> certificate to generate a new ECDSA certificate.</source>
          <target state="translated">Combina uma chave privada com a chave pública de um certificado <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDsa" /&gt;</ph> para gerar um novo certificado ECDSA.</target>       </trans-unit>
        <trans-unit id="3952" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.X509Certificates.ECDsaCertificateExtensions.GetECDsaPrivateKey(System.Security.Cryptography.X509Certificates.X509Certificate2)">
          <source>The certificate.</source>
          <target state="translated">O certificado.</target>       </trans-unit>
        <trans-unit id="3953" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.X509Certificates.ECDsaCertificateExtensions.GetECDsaPrivateKey(System.Security.Cryptography.X509Certificates.X509Certificate2)">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDsa" /&gt;</ph> private key from the <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /&gt;</ph> certificate.</source>
          <target state="translated">Obtém a chave privada <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDsa" /&gt;</ph> do certificado <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3954" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.X509Certificates.ECDsaCertificateExtensions.GetECDsaPublicKey(System.Security.Cryptography.X509Certificates.X509Certificate2)">
          <source>The certificate.</source>
          <target state="translated">O certificado.</target>       </trans-unit>
        <trans-unit id="3955" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.X509Certificates.ECDsaCertificateExtensions.GetECDsaPublicKey(System.Security.Cryptography.X509Certificates.X509Certificate2)">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDsa" /&gt;</ph> public key from the <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /&gt;</ph> certificate.</source>
          <target state="translated">Obtém a chave pública <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDsa" /&gt;</ph> do certificado <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3956" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.X509Certificates.RSACertificateExtensions.CopyWithPrivateKey(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.RSA)">
          <source>The RSA certificate.</source>
          <target state="translated">O certificado RSA.</target>       </trans-unit>
        <trans-unit id="3957" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.X509Certificates.RSACertificateExtensions.CopyWithPrivateKey(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.RSA)">
          <source>The private RSA key.</source>
          <target state="translated">A chave privada RSA.</target>       </trans-unit>
        <trans-unit id="3958" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.X509Certificates.RSACertificateExtensions.CopyWithPrivateKey(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.RSA)">
          <source>Combines a private key with the public key of an <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph> certificate to generate a new RSA certificate.</source>
          <target state="translated">Combina uma chave privada com a chave pública de um certificado <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph> para gerar um novo certificado RSA.</target>       </trans-unit>
        <trans-unit id="3959" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.X509Certificates.RSACertificateExtensions.GetRSAPrivateKey(System.Security.Cryptography.X509Certificates.X509Certificate2)">
          <source>The certificate.</source>
          <target state="translated">O certificado.</target>       </trans-unit>
        <trans-unit id="3960" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.X509Certificates.RSACertificateExtensions.GetRSAPrivateKey(System.Security.Cryptography.X509Certificates.X509Certificate2)">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph> private key from the <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /&gt;</ph>.</source>
          <target state="translated">Obtém a chave privada <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph> do <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3961" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.X509Certificates.RSACertificateExtensions.GetRSAPublicKey(System.Security.Cryptography.X509Certificates.X509Certificate2)">
          <source>The certificate.</source>
          <target state="translated">O certificado.</target>       </trans-unit>
        <trans-unit id="3962" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.X509Certificates.RSACertificateExtensions.GetRSAPublicKey(System.Security.Cryptography.X509Certificates.X509Certificate2)">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph> public key from the <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /&gt;</ph>.</source>
          <target state="translated">Obtém a chave pública <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph> do <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3963" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.HttpRequestMessageExtensionMethods.GetUserPrincipal(System.Net.Http.HttpRequestMessage)">
          <source>The HTTP request message from which to get the user principal.</source>
          <target state="translated">A mensagem de solicitação HTTP da qual obter a entidade de segurança do usuário.</target>       </trans-unit>
        <trans-unit id="3964" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.HttpRequestMessageExtensionMethods.GetUserPrincipal(System.Net.Http.HttpRequestMessage)">
          <source>Gets the user principal associated with the specified HTTP request message.</source>
          <target state="translated">Obtém a entidade de segurança do usuário associada à mensagem de solicitação HTTP especificada.</target>       </trans-unit>
        <trans-unit id="3965" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.HttpRequestMessageExtensionMethods.SetUserPrincipal(System.Net.Http.HttpRequestMessage,System.Security.Principal.IPrincipal)">
          <source>The HTTP request message from which to set the user principal.</source>
          <target state="translated">A mensagem de solicitação HTTP da qual definir a entidade de segurança do usuário.</target>       </trans-unit>
        <trans-unit id="3966" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.HttpRequestMessageExtensionMethods.SetUserPrincipal(System.Net.Http.HttpRequestMessage,System.Security.Principal.IPrincipal)">
          <source>The user principal to set.</source>
          <target state="translated">A entidade de usuário a definir.</target>       </trans-unit>
        <trans-unit id="3967" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.HttpRequestMessageExtensionMethods.SetUserPrincipal(System.Net.Http.HttpRequestMessage,System.Security.Principal.IPrincipal)">
          <source>Replaces the user principal associated with the specified HTTP request message.</source>
          <target state="translated">Substitui a entidade de segurança do usuário associada pela mensagem de solicitação HTTP especificada.</target>       </trans-unit>
        <trans-unit id="3968" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.HttpRequestMessageExtensionMethods.ToMessage(System.Net.Http.HttpRequestMessage)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpRequestMessage" /&gt;</ph> from which to create the <ph id="ph2">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph> instance.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpRequestMessage" /&gt;</ph> do qual criar a instância de <ph id="ph2">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3969" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.HttpRequestMessageExtensionMethods.ToMessage(System.Net.Http.HttpRequestMessage)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph> instance from an <ph id="ph2">&lt;see cref="T:System.Net.Http.HttpRequestMessage" /&gt;</ph> instance.</source>
          <target state="translated">Cria uma instância de <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph> de uma instância de <ph id="ph2">&lt;see cref="T:System.Net.Http.HttpRequestMessage" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3970" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.HttpResponseMessageExtensionMethods.ToMessage(System.Net.Http.HttpResponseMessage)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpResponseMessage" /&gt;</ph> from which to create the <ph id="ph2">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph> instance.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpResponseMessage" /&gt;</ph> do qual criar a instância de <ph id="ph2">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3971" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.HttpResponseMessageExtensionMethods.ToMessage(System.Net.Http.HttpResponseMessage)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph> instance from an <ph id="ph2">&lt;see cref="T:System.Net.Http.HttpResponseMessage" /&gt;</ph> instance.</source>
          <target state="translated">Cria uma instância de <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph> de uma instância de <ph id="ph2">&lt;see cref="T:System.Net.Http.HttpResponseMessage" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3972" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageExtensionMethods.ToHttpRequestMessage(System.ServiceModel.Channels.Message)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph> instance from which to get the <ph id="ph2">&lt;see cref="T:System.Net.Http.HttpRequestMessage" /&gt;</ph> instance.</source>
          <target state="translated">A instância de <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph> da qual obter a instância de <ph id="ph2">&lt;see cref="T:System.Net.Http.HttpRequestMessage" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3973" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageExtensionMethods.ToHttpRequestMessage(System.ServiceModel.Channels.Message)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpRequestMessage" /&gt;</ph> instance from an <ph id="ph2">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph> instance.</source>
          <target state="translated">Cria uma instância de <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpRequestMessage" /&gt;</ph> de uma instância de <ph id="ph2">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3974" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageExtensionMethods.ToHttpResponseMessage(System.ServiceModel.Channels.Message)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph> instance from which to get the <ph id="ph2">&lt;see cref="T:System.Net.Http.HttpResponseMessage" /&gt;</ph> instance.</source>
          <target state="translated">A instância de <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph> da qual obter a instância de <ph id="ph2">&lt;see cref="T:System.Net.Http.HttpResponseMessage" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3975" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageExtensionMethods.ToHttpResponseMessage(System.ServiceModel.Channels.Message)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpResponseMessage" /&gt;</ph> instance from an <ph id="ph2">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph> instance.</source>
          <target state="translated">Cria uma instância de <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpResponseMessage" /&gt;</ph> de uma instância de <ph id="ph2">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3976" translate="yes" xml:space="preserve" uid="M:System.StringNormalizationExtensions.IsNormalized(System.String)">
          <source>A string.</source>
          <target state="translated">Uma cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="3977" translate="yes" xml:space="preserve" uid="M:System.StringNormalizationExtensions.IsNormalized(System.String)">
          <source>Indicates whether the specified string is in Unicode normalization form C.</source>
          <target state="translated">Indica se a cadeia de caracteres especificada está no formato de normalização Unicode C.</target>       </trans-unit>
        <trans-unit id="3978" translate="yes" xml:space="preserve" uid="M:System.StringNormalizationExtensions.IsNormalized(System.String,System.Text.NormalizationForm)">
          <source>A string.</source>
          <target state="translated">Uma cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="3979" translate="yes" xml:space="preserve" uid="M:System.StringNormalizationExtensions.IsNormalized(System.String,System.Text.NormalizationForm)">
          <source>A Unicode normalization form.</source>
          <target state="translated">Um formato de normalização Unicode.</target>       </trans-unit>
        <trans-unit id="3980" translate="yes" xml:space="preserve" uid="M:System.StringNormalizationExtensions.IsNormalized(System.String,System.Text.NormalizationForm)">
          <source>Indicates whether a string is in a specified Unicode normalization form.</source>
          <target state="translated">Indica se uma cadeia de caracteres está em um formato de normalização Unicode especificado.</target>       </trans-unit>
        <trans-unit id="3981" translate="yes" xml:space="preserve" uid="M:System.StringNormalizationExtensions.Normalize(System.String)">
          <source>The string to normalize.</source>
          <target state="translated">A cadeia de caracteres a ser normalizada.</target>       </trans-unit>
        <trans-unit id="3982" translate="yes" xml:space="preserve" uid="M:System.StringNormalizationExtensions.Normalize(System.String)">
          <source>Normalizes a string to a Unicode normalization form C.</source>
          <target state="translated">Normaliza uma cadeia de caracteres com relação a um formato de normalização Unicode C.</target>       </trans-unit>
        <trans-unit id="3983" translate="yes" xml:space="preserve" uid="M:System.StringNormalizationExtensions.Normalize(System.String,System.Text.NormalizationForm)">
          <source>The string to normalize.</source>
          <target state="translated">A cadeia de caracteres a ser normalizada.</target>       </trans-unit>
        <trans-unit id="3984" translate="yes" xml:space="preserve" uid="M:System.StringNormalizationExtensions.Normalize(System.String,System.Text.NormalizationForm)">
          <source>The Unicode normalization form.</source>
          <target state="translated">O formato de normalização Unicode.</target>       </trans-unit>
        <trans-unit id="3985" translate="yes" xml:space="preserve" uid="M:System.StringNormalizationExtensions.Normalize(System.String,System.Text.NormalizationForm)">
          <source>Normalizes a string to the specified Unicode normalization form.</source>
          <target state="translated">Normaliza uma cadeia de caracteres com relação ao formato de normalização Unicode.</target>       </trans-unit>
        <trans-unit id="3986" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.AsObservable``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})">
          <source>Specifies the type of data contained in the source.</source>
          <target state="translated">Especifica o tipo de dados contidos na origem.</target>       </trans-unit>
        <trans-unit id="3987" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.AsObservable``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})">
          <source>The source to wrap.</source>
          <target state="translated">A origem a ser encapsulada.</target>       </trans-unit>
        <trans-unit id="3988" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.AsObservable``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.IObservable`1" /&gt;</ph> abstraction over the <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /&gt;</ph>.</source>
          <target state="translated">Cria uma nova abstração <ph id="ph1">&lt;see cref="T:System.IObservable`1" /&gt;</ph> em relação a <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3989" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.AsObserver``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0})">
          <source>Specifies the type of input accepted by the target block.</source>
          <target state="translated">Especifica o tipo de entrada aceita pelo bloco de destino.</target>       </trans-unit>
        <trans-unit id="3990" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.AsObserver``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0})">
          <source>The target to wrap.</source>
          <target state="translated">O destino a ser encapsulado.</target>       </trans-unit>
        <trans-unit id="3991" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.AsObserver``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0})">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.IObserver`1" /&gt;</ph> abstraction over the  <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph>.</source>
          <target state="translated">Cria uma nova abstração <ph id="ph1">&lt;see cref="T:System.IObserver`1" /&gt;</ph> em relação a <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3992" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0})">
          <source>Specifies the type of data contained in the source.</source>
          <target state="translated">Especifica o tipo de dados contidos na origem.</target>       </trans-unit>
        <trans-unit id="3993" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0})">
          <source>The source from which to link.</source>
          <target state="translated">A origem da qual ocorrerá a vinculação.</target>       </trans-unit>
        <trans-unit id="3994" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph> to which to connect the source.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph> ao qual a fonte será conectada.</target>       </trans-unit>
        <trans-unit id="3995" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0})">
          <source>Links the <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /&gt;</ph> to the specified  <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph>.</source>
          <target state="translated">Vincula o <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /&gt;</ph> ao <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="3996" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Predicate{``0})">
          <source>Specifies the type of data contained in the source.</source>
          <target state="translated">Especifica o tipo de dados contidos na origem.</target>       </trans-unit>
        <trans-unit id="3997" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Predicate{``0})">
          <source>The source from which to link.</source>
          <target state="translated">A origem da qual ocorrerá a vinculação.</target>       </trans-unit>
        <trans-unit id="3998" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Predicate{``0})">
          <source>The  <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph> to which to connect the source.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph> ao qual a fonte será conectada.</target>       </trans-unit>
        <trans-unit id="3999" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Predicate{``0})">
          <source>The filter a message must pass in order for it to propagate from the source to the target.</source>
          <target state="translated">O filtro de uma mensagem deve ser passado para ser propagado da origem para o destino.</target>       </trans-unit>
        <trans-unit id="4000" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Predicate{``0})">
          <source>Links the <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /&gt;</ph> to the specified  <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph> using the specified filter.</source>
          <target state="translated">Vincula o <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /&gt;</ph> ao <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph> especificado usando o filtro indicado.</target>       </trans-unit>
        <trans-unit id="4001" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Threading.Tasks.Dataflow.DataflowLinkOptions,System.Predicate{``0})">
          <source>Specifies the type of data contained in the source.</source>
          <target state="translated">Especifica o tipo de dados contidos na origem.</target>       </trans-unit>
        <trans-unit id="4002" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Threading.Tasks.Dataflow.DataflowLinkOptions,System.Predicate{``0})">
          <source>The source from which to link.</source>
          <target state="translated">A origem da qual ocorrerá a vinculação.</target>       </trans-unit>
        <trans-unit id="4003" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Threading.Tasks.Dataflow.DataflowLinkOptions,System.Predicate{``0})">
          <source>The  <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph> to which to connect the source.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph> ao qual a fonte será conectada.</target>       </trans-unit>
        <trans-unit id="4004" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Threading.Tasks.Dataflow.DataflowLinkOptions,System.Predicate{``0})">
          <source>One of the enumeration values that specifies how to configure a link between dataflow blocks.</source>
          <target state="translated">Um dos valores de enumeração que especifica como configurar um link entre blocos de fluxo de dados.</target>       </trans-unit>
        <trans-unit id="4005" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Threading.Tasks.Dataflow.DataflowLinkOptions,System.Predicate{``0})">
          <source>The filter a message must pass in order for it to propagate from the source to the target.</source>
          <target state="translated">O filtro de uma mensagem deve ser passado para ser propagado da origem para o destino.</target>       </trans-unit>
        <trans-unit id="4006" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Threading.Tasks.Dataflow.DataflowLinkOptions,System.Predicate{``0})">
          <source>Links the  <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /&gt;</ph> to the specified  <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph> using the specified filter.</source>
          <target state="translated">Vincula o <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /&gt;</ph> para o <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph> especificado usando o filtro indicado.</target>       </trans-unit>
        <trans-unit id="4007" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.OutputAvailableAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})">
          <source>Specifies the type of data contained in the source.</source>
          <target state="translated">Especifica o tipo de dados contidos na origem.</target>       </trans-unit>
        <trans-unit id="4008" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.OutputAvailableAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})">
          <source>The source to monitor.</source>
          <target state="translated">A origem a ser monitorada.</target>       </trans-unit>
        <trans-unit id="4009" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.OutputAvailableAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})">
          <source>Provides a <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph> that asynchronously monitors the source for available output.</source>
          <target state="translated">Fornece um <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph> que monitora assincronamente a saída disponível na fonte.</target>       </trans-unit>
        <trans-unit id="4010" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.OutputAvailableAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)">
          <source>Specifies the type of data contained in the source.</source>
          <target state="translated">Especifica o tipo de dados contidos na origem.</target>       </trans-unit>
        <trans-unit id="4011" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.OutputAvailableAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)">
          <source>The source to monitor.</source>
          <target state="translated">A origem a ser monitorada.</target>       </trans-unit>
        <trans-unit id="4012" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.OutputAvailableAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)">
          <source>The cancellation token with which to cancel the asynchronous operation.</source>
          <target state="translated">O token de cancelamento com o qual cancelar a operação assíncrona.</target>       </trans-unit>
        <trans-unit id="4013" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.OutputAvailableAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)">
          <source>Provides a  <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph> that asynchronously monitors the source for available output.</source>
          <target state="translated">Fornece um <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph> que monitora assincronamente a fonte de saída disponível.</target>       </trans-unit>
        <trans-unit id="4014" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Post``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0)">
          <source>Specifies the type of data accepted by the target block.</source>
          <target state="translated">Especifica o tipo de dados aceitos pelo bloco de destino.</target>       </trans-unit>
        <trans-unit id="4015" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Post``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0)">
          <source>The target block.</source>
          <target state="translated">O bloco de destino.</target>       </trans-unit>
        <trans-unit id="4016" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Post``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0)">
          <source>The item being offered to the target.</source>
          <target state="translated">O item que está sendo oferecido para o destino.</target>       </trans-unit>
        <trans-unit id="4017" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Post``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0)">
          <source>Posts an item to the <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph>.</source>
          <target state="translated">Adiciona um item ao <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4018" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})">
          <source>The type of data contained in the source.</source>
          <target state="translated">O tipo de dados contidos na origem.</target>       </trans-unit>
        <trans-unit id="4019" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})">
          <source>The source from which to receive the value.</source>
          <target state="translated">A origem da qual o valor será recebido.</target>       </trans-unit>
        <trans-unit id="4020" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})">
          <source>Synchronously receives a value from a specified source.</source>
          <target state="translated">Recebe de forma síncrona um valor de uma origem especificada.</target>       </trans-unit>
        <trans-unit id="4021" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)">
          <source>The type of data contained in the source.</source>
          <target state="translated">O tipo de dados contidos na origem.</target>       </trans-unit>
        <trans-unit id="4022" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)">
          <source>The source from which to receive the value.</source>
          <target state="translated">A origem da qual o valor será recebido.</target>       </trans-unit>
        <trans-unit id="4023" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)">
          <source>The token to use to cancel the receive operation.</source>
          <target state="translated">O token a ser usado para cancelar a operação de recebimento.</target>       </trans-unit>
        <trans-unit id="4024" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)">
          <source>Synchronously receives a value from a specified source and provides a token to cancel the operation.</source>
          <target state="translated">Recebe de forma síncrona um valor de uma origem especificada e fornece um token para cancelar a operação.</target>       </trans-unit>
        <trans-unit id="4025" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan)">
          <source>The type of data contained in the source.</source>
          <target state="translated">O tipo de dados contidos na origem.</target>       </trans-unit>
        <trans-unit id="4026" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan)">
          <source>The source from which to receive the value.</source>
          <target state="translated">A origem da qual o valor será recebido.</target>       </trans-unit>
        <trans-unit id="4027" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan)">
          <source>The maximum time interval, in milliseconds, to wait for the synchronous operation to complete, or an interval that represents -1 milliseconds to wait indefinitely.</source>
          <target state="translated">O intervalo de tempo máximo, em milissegundos, de espera para a operação síncrona ser concluída ou um intervalo que representa -1 milissegundos para aguardar indefinidamente.</target>       </trans-unit>
        <trans-unit id="4028" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan)">
          <source>Synchronously receives a value from a specified source, observing an optional time-out period.</source>
          <target state="translated">Recebe de forma síncrona um valor de uma origem especificada, observando um período de tempo limite opcional.</target>       </trans-unit>
        <trans-unit id="4029" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan,System.Threading.CancellationToken)">
          <source>The type of data contained in the source.</source>
          <target state="translated">O tipo de dados contidos na origem.</target>       </trans-unit>
        <trans-unit id="4030" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan,System.Threading.CancellationToken)">
          <source>The source from which to receive the value.</source>
          <target state="translated">A origem da qual o valor será recebido.</target>       </trans-unit>
        <trans-unit id="4031" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan,System.Threading.CancellationToken)">
          <source>The maximum time interval, in milliseconds, to wait for the synchronous operation to complete, or an interval that represents -1 milliseconds to wait indefinitely.</source>
          <target state="translated">O intervalo de tempo máximo, em milissegundos, de espera para a operação síncrona ser concluída ou um intervalo que representa -1 milissegundos para aguardar indefinidamente.</target>       </trans-unit>
        <trans-unit id="4032" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan,System.Threading.CancellationToken)">
          <source>The token to use to cancel the receive operation.</source>
          <target state="translated">O token a ser usado para cancelar a operação de recebimento.</target>       </trans-unit>
        <trans-unit id="4033" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan,System.Threading.CancellationToken)">
          <source>Synchronously receives a value from a specified source, providing a token to cancel the operation and observing an optional time-out interval.</source>
          <target state="translated">Recebe de forma síncrona um valor de uma fonte especificada, fornecendo um token para cancelar a operação e observando um intervalo de tempo limite opcional.</target>       </trans-unit>
        <trans-unit id="4034" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})">
          <source>The type of data contained in the source.</source>
          <target state="translated">O tipo de dados contidos na origem.</target>       </trans-unit>
        <trans-unit id="4035" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})">
          <source>The source from which to receive the value.</source>
          <target state="translated">A origem da qual o valor será recebido.</target>       </trans-unit>
        <trans-unit id="4036" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})">
          <source>Asynchronously receives a value from a specified source.</source>
          <target state="translated">Recebe assincronamente um valor de uma origem especificada.</target>       </trans-unit>
        <trans-unit id="4037" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)">
          <source>Specifies the type of data contained in the source.</source>
          <target state="translated">Especifica o tipo de dados contidos na origem.</target>       </trans-unit>
        <trans-unit id="4038" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)">
          <source>The source from which to receive the value.</source>
          <target state="translated">A origem da qual o valor será recebido.</target>       </trans-unit>
        <trans-unit id="4039" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)">
          <source>The token to use to cancel the receive operation.</source>
          <target state="translated">O token a ser usado para cancelar a operação de recebimento.</target>       </trans-unit>
        <trans-unit id="4040" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)">
          <source>Asynchronously receives a value from a specified source and provides a token to cancel the operation.</source>
          <target state="translated">Recebe assincronamente um valor de uma origem especificada e fornece um token para cancelar a operação.</target>       </trans-unit>
        <trans-unit id="4041" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan)">
          <source>The type of data contained in the source.</source>
          <target state="translated">O tipo de dados contidos na origem.</target>       </trans-unit>
        <trans-unit id="4042" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan)">
          <source>The source from which to receive the value.</source>
          <target state="translated">A origem da qual o valor será recebido.</target>       </trans-unit>
        <trans-unit id="4043" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan)">
          <source>The maximum time interval, in milliseconds, to wait for the synchronous operation to complete, or an interval that represents -1 milliseconds to wait indefinitely.</source>
          <target state="translated">O intervalo de tempo máximo, em milissegundos, de espera para a operação síncrona ser concluída ou um intervalo que representa -1 milissegundos para aguardar indefinidamente.</target>       </trans-unit>
        <trans-unit id="4044" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan)">
          <source>Asynchronously receives a value from a specified source, observing an optional time-out period.</source>
          <target state="translated">Recebe assincronamente um valor de uma origem especificada, observando um período de tempo limite opcional.</target>       </trans-unit>
        <trans-unit id="4045" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan,System.Threading.CancellationToken)">
          <source>The type of data contained in the source.</source>
          <target state="translated">O tipo de dados contidos na origem.</target>       </trans-unit>
        <trans-unit id="4046" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan,System.Threading.CancellationToken)">
          <source>The source from which to receive the value.</source>
          <target state="translated">A origem da qual o valor será recebido.</target>       </trans-unit>
        <trans-unit id="4047" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan,System.Threading.CancellationToken)">
          <source>The maximum time interval, in milliseconds, to wait for the synchronous operation to complete, or an interval that represents -1 milliseconds to wait indefinitely.</source>
          <target state="translated">O intervalo de tempo máximo, em milissegundos, de espera para a operação síncrona ser concluída ou um intervalo que representa -1 milissegundos para aguardar indefinidamente.</target>       </trans-unit>
        <trans-unit id="4048" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan,System.Threading.CancellationToken)">
          <source>The token which may be used to cancel the receive operation.</source>
          <target state="translated">O token que pode ser usado para cancelar a operação de recebimento.</target>       </trans-unit>
        <trans-unit id="4049" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan,System.Threading.CancellationToken)">
          <source>Asynchronously receives a value from a specified source, providing a token to cancel the operation and observing an optional time-out interval.</source>
          <target state="translated">Recebe assincronamente um valor de uma fonte especificada, fornecendo um token para cancelar a operação e observando um intervalo de tempo limite opcional.</target>       </trans-unit>
        <trans-unit id="4050" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0)">
          <source>Specifies the type of the data to post to the target.</source>
          <target state="translated">Especifica o tipo de dados para enviar para o destino.</target>       </trans-unit>
        <trans-unit id="4051" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0)">
          <source>The target to which to post the data.</source>
          <target state="translated">O destino no qual os dados serão publicados.</target>       </trans-unit>
        <trans-unit id="4052" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0)">
          <source>The item being offered to the target.</source>
          <target state="translated">O item que está sendo oferecido para o destino.</target>       </trans-unit>
        <trans-unit id="4053" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0)">
          <source>Asynchronously offers a message to the target message block, allowing for postponement.</source>
          <target state="translated">Oferece assincronamente uma mensagem para o bloco de mensagens de destino, permitindo adiamento.</target>       </trans-unit>
        <trans-unit id="4054" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0,System.Threading.CancellationToken)">
          <source>Specifies the type of the data to post to the target.</source>
          <target state="translated">Especifica o tipo de dados para enviar para o destino.</target>       </trans-unit>
        <trans-unit id="4055" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0,System.Threading.CancellationToken)">
          <source>The target to which to post the data.</source>
          <target state="translated">O destino no qual os dados serão publicados.</target>       </trans-unit>
        <trans-unit id="4056" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0,System.Threading.CancellationToken)">
          <source>The item being offered to the target.</source>
          <target state="translated">O item que está sendo oferecido para o destino.</target>       </trans-unit>
        <trans-unit id="4057" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0,System.Threading.CancellationToken)">
          <source>The cancellation token with which to request cancellation of the send operation.</source>
          <target state="translated">O token de cancelamento com o qual solicitar o cancelamento da operação de envio.</target>       </trans-unit>
        <trans-unit id="4058" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0,System.Threading.CancellationToken)">
          <source>Asynchronously offers a message to the target message block, allowing for postponement.</source>
          <target state="translated">Oferece assincronamente uma mensagem para o bloco de mensagens de destino, permitindo adiamento.</target>       </trans-unit>
        <trans-unit id="4059" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.TryReceive``1(System.Threading.Tasks.Dataflow.IReceivableSourceBlock{``0},``0@)">
          <source>Specifies the type of data contained in the source.</source>
          <target state="translated">Especifica o tipo de dados contidos na origem.</target>       </trans-unit>
        <trans-unit id="4060" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.TryReceive``1(System.Threading.Tasks.Dataflow.IReceivableSourceBlock{``0},``0@)">
          <source>The source from which to receive.</source>
          <target state="translated">A origem da qual receber.</target>       </trans-unit>
        <trans-unit id="4061" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.TryReceive``1(System.Threading.Tasks.Dataflow.IReceivableSourceBlock{``0},``0@)">
          <source>The item received from the source.</source>
          <target state="translated">O item recebido da origem.</target>       </trans-unit>
        <trans-unit id="4062" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.TryReceive``1(System.Threading.Tasks.Dataflow.IReceivableSourceBlock{``0},``0@)">
          <source>Attempts to synchronously receive an item from the <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /&gt;</ph>.</source>
          <target state="translated">Tentativas de receber assincronamente um item do <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4063" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.TaskExtensions.Unwrap(System.Threading.Tasks.Task{System.Threading.Tasks.Task})">
          <source>The <ph id="ph1">&lt;see langword="Task&amp;lt;Task&amp;gt;" /&gt;</ph> (C#) or <ph id="ph2">&lt;see langword="Task (Of Task)" /&gt;</ph> (Visual Basic) to unwrap.</source>
          <target state="translated">O <ph id="ph1">&lt;see langword="Task&amp;lt;Task&amp;gt;" /&gt;</ph> (c#) ou <ph id="ph2">&lt;see langword="Task (Of Task)" /&gt;</ph> (Visual Basic) a ser descompactado.</target>       </trans-unit>
        <trans-unit id="4064" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.TaskExtensions.Unwrap(System.Threading.Tasks.Task{System.Threading.Tasks.Task})">
          <source>Creates a proxy <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph> that represents the asynchronous operation of a <ph id="ph2">&lt;see cref="M:System.Threading.Tasks.TaskScheduler.TryExecuteTaskInline(System.Threading.Tasks.Task,System.Boolean)" /&gt;</ph>.</source>
          <target state="translated">cria um proxy <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph> que representa a operação assíncrona de um <ph id="ph2">&lt;see cref="M:System.Threading.Tasks.TaskScheduler.TryExecuteTaskInline(System.Threading.Tasks.Task,System.Boolean)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4065" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.TaskExtensions.Unwrap``1(System.Threading.Tasks.Task{System.Threading.Tasks.Task{``0}})">
          <source>The type of the task's result.</source>
          <target state="translated">O tipo de resultado da tarefa.</target>       </trans-unit>
        <trans-unit id="4066" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.TaskExtensions.Unwrap``1(System.Threading.Tasks.Task{System.Threading.Tasks.Task{``0}})">
          <source>The <ph id="ph1">&lt;see langword="Task&amp;lt;Task&amp;lt;T&amp;gt;&amp;gt;" /&gt;</ph> (C#) or <ph id="ph2">&lt;see langword="Task (Of Task(Of T))" /&gt;</ph> (Visual Basic) to unwrap.</source>
          <target state="translated">O <ph id="ph1">&lt;see langword="Task&amp;lt;Task&amp;lt;T&amp;gt;&amp;gt;" /&gt;</ph> (c#) ou <ph id="ph2">&lt;see langword="Task (Of Task(Of T))" /&gt;</ph> (Visual Basic) a ser descompactado.</target>       </trans-unit>
        <trans-unit id="4067" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.TaskExtensions.Unwrap``1(System.Threading.Tasks.Task{System.Threading.Tasks.Task{``0}})">
          <source>Creates a proxy <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph> that represents the asynchronous operation of a <ph id="ph2">&lt;see langword="Task&amp;lt;Task&amp;lt;T&amp;gt;&amp;gt;" /&gt;</ph> (C#) or <ph id="ph3">&lt;see langword="Task (Of Task(Of T))" /&gt;</ph> (Visual Basic).</source>
          <target state="translated">Cria um proxy <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph> que representa a operação assíncrona de um <ph id="ph2">&lt;see langword="Task&amp;lt;Task&amp;lt;T&amp;gt;&amp;gt;" /&gt;</ph> (C#) ou <ph id="ph3">&lt;see langword="Task (Of Task(Of T))" /&gt;</ph> (Visual Basic).</target>       </trans-unit>
        <trans-unit id="4068" translate="yes" xml:space="preserve" uid="M:System.Threading.WaitHandleExtensions.GetSafeWaitHandle(System.Threading.WaitHandle)">
          <source>A native operating system handle.</source>
          <target state="translated">Um identificador nativo do sistema operacional.</target>       </trans-unit>
        <trans-unit id="4069" translate="yes" xml:space="preserve" uid="M:System.Threading.WaitHandleExtensions.GetSafeWaitHandle(System.Threading.WaitHandle)">
          <source>Gets the safe handle for a native operating system wait handle.</source>
          <target state="translated">Obtém o identificador seguro para um identificador de espera nativo do sistema operacional.</target>       </trans-unit>
        <trans-unit id="4070" translate="yes" xml:space="preserve" uid="M:System.Threading.WaitHandleExtensions.SetSafeWaitHandle(System.Threading.WaitHandle,Microsoft.Win32.SafeHandles.SafeWaitHandle)">
          <source>A wait handle that encapsulates an operating system-specific object that waits for exclusive access to a shared resource.</source>
          <target state="translated">Um identificador de espera que encapsula um objeto específico do sistema operacional que espera o acesso exclusivo a um recurso compartilhado.</target>       </trans-unit>
        <trans-unit id="4071" translate="yes" xml:space="preserve" uid="M:System.Threading.WaitHandleExtensions.SetSafeWaitHandle(System.Threading.WaitHandle,Microsoft.Win32.SafeHandles.SafeWaitHandle)">
          <source>The safe handle to wrap the operating system handle.</source>
          <target state="translated">O identificador seguro para encapsular o identificador do sistema operacional.</target>       </trans-unit>
        <trans-unit id="4072" translate="yes" xml:space="preserve" uid="M:System.Threading.WaitHandleExtensions.SetSafeWaitHandle(System.Threading.WaitHandle,Microsoft.Win32.SafeHandles.SafeWaitHandle)">
          <source>Sets a safe handle for a native operating system wait handle.</source>
          <target state="translated">Define um identificador seguro para um identificador de espera do sistema operacional nativo.</target>       </trans-unit>
        <trans-unit id="4073" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``1(System.Tuple{``0},``0@)">
          <source>The type of the single element.</source>
          <target state="translated">O tipo do elemento único.</target>       </trans-unit>
        <trans-unit id="4074" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``1(System.Tuple{``0},``0@)">
          <source>The 1-element tuple to deconstruct into a separate variable.</source>
          <target state="translated">A tupla com um elemento a ser desconstruída em uma variável separada.</target>       </trans-unit>
        <trans-unit id="4075" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``1(System.Tuple{``0},``0@)">
          <source>The value of the single element.</source>
          <target state="translated">O valor do elemento único.</target>       </trans-unit>
        <trans-unit id="4076" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``1(System.Tuple{``0},``0@)">
          <source>Deconstructs a tuple with 1 element into a separate variable.</source>
          <target state="translated">Desconstrói uma tupla com um elemento em uma variável separada.</target>       </trans-unit>
        <trans-unit id="4077" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``10(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@)">
          <source>The type of the first element.</source>
          <target state="translated">O tipo do primeiro elemento.</target>       </trans-unit>
        <trans-unit id="4078" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``10(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@)">
          <source>The type of the second element.</source>
          <target state="translated">O tipo do segundo elemento.</target>       </trans-unit>
        <trans-unit id="4079" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``10(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@)">
          <source>The type of the third element.</source>
          <target state="translated">O tipo do terceiro elemento.</target>       </trans-unit>
        <trans-unit id="4080" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``10(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@)">
          <source>The type of the fourth element.</source>
          <target state="translated">O tipo do quarto elemento.</target>       </trans-unit>
        <trans-unit id="4081" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``10(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@)">
          <source>The type of the fifth element.</source>
          <target state="translated">O tipo do quinto elemento.</target>       </trans-unit>
        <trans-unit id="4082" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``10(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@)">
          <source>The type of the sixth element.</source>
          <target state="translated">O tipo do sexto elemento.</target>       </trans-unit>
        <trans-unit id="4083" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``10(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@)">
          <source>The type of the seventh element.</source>
          <target state="translated">O tipo do sétimo elemento.</target>       </trans-unit>
        <trans-unit id="4084" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``10(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@)">
          <source>The type of the eighth element.</source>
          <target state="translated">O tipo do oitavo elemento.</target>       </trans-unit>
        <trans-unit id="4085" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``10(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@)">
          <source>The type of the ninth element.</source>
          <target state="translated">O tipo do nono elemento.</target>       </trans-unit>
        <trans-unit id="4086" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``10(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@)">
          <source>The type of the tenth element.</source>
          <target state="translated">O tipo do décimo elemento.</target>       </trans-unit>
        <trans-unit id="4087" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``10(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@)">
          <source>The 10-element tuple to deconstruct into 10 separate variables.</source>
          <target state="translated">A tupla com dez elementos a ser desconstruída em dez variáveis separadas.</target>       </trans-unit>
        <trans-unit id="4088" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``10(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@)">
          <source>The value of the first element.</source>
          <target state="translated">O valor do primeiro elemento.</target>       </trans-unit>
        <trans-unit id="4089" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``10(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@)">
          <source>The value of the second element.</source>
          <target state="translated">O valor do segundo elemento.</target>       </trans-unit>
        <trans-unit id="4090" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``10(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@)">
          <source>The value of the third element.</source>
          <target state="translated">O valor do terceiro elemento.</target>       </trans-unit>
        <trans-unit id="4091" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``10(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@)">
          <source>The value of the fourth element.</source>
          <target state="translated">O valor do quarto elemento.</target>       </trans-unit>
        <trans-unit id="4092" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``10(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@)">
          <source>The value of the fifth element.</source>
          <target state="translated">O valor do quinto elemento.</target>       </trans-unit>
        <trans-unit id="4093" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``10(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@)">
          <source>The value of the sixth element.</source>
          <target state="translated">O valor do sexto elemento.</target>       </trans-unit>
        <trans-unit id="4094" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``10(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@)">
          <source>The value of the seventh element.</source>
          <target state="translated">O valor do sétimo elemento.</target>       </trans-unit>
        <trans-unit id="4095" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``10(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@)">
          <source>The value of the eighth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">O valor do oitavo elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4096" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``10(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@)">
          <source>The value of the ninth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">O valor do nono elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4097" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``10(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@)">
          <source>The value of the tenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</source>
          <target state="translated">O valor do décimo elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4098" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``10(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@)">
          <source>Deconstructs a tuple with 10 elements into separate variables.</source>
          <target state="translated">Desconstrói uma tupla com dez elementos em variáveis separadas.</target>       </trans-unit>
        <trans-unit id="4099" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``11(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@)">
          <source>The type of the first element.</source>
          <target state="translated">O tipo do primeiro elemento.</target>       </trans-unit>
        <trans-unit id="4100" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``11(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@)">
          <source>The type of the second element.</source>
          <target state="translated">O tipo do segundo elemento.</target>       </trans-unit>
        <trans-unit id="4101" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``11(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@)">
          <source>The type of the third element.</source>
          <target state="translated">O tipo do terceiro elemento.</target>       </trans-unit>
        <trans-unit id="4102" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``11(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@)">
          <source>The type of the fourth element.</source>
          <target state="translated">O tipo do quarto elemento.</target>       </trans-unit>
        <trans-unit id="4103" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``11(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@)">
          <source>The type of the fifth element.</source>
          <target state="translated">O tipo do quinto elemento.</target>       </trans-unit>
        <trans-unit id="4104" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``11(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@)">
          <source>The type of the sixth element.</source>
          <target state="translated">O tipo do sexto elemento.</target>       </trans-unit>
        <trans-unit id="4105" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``11(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@)">
          <source>The type of the seventh element.</source>
          <target state="translated">O tipo do sétimo elemento.</target>       </trans-unit>
        <trans-unit id="4106" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``11(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@)">
          <source>The type of the eighth element.</source>
          <target state="translated">O tipo do oitavo elemento.</target>       </trans-unit>
        <trans-unit id="4107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``11(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@)">
          <source>The type of the ninth element.</source>
          <target state="translated">O tipo do nono elemento.</target>       </trans-unit>
        <trans-unit id="4108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``11(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@)">
          <source>The type of the tenth element.</source>
          <target state="translated">O tipo do décimo elemento.</target>       </trans-unit>
        <trans-unit id="4109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``11(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@)">
          <source>The type of the eleventh element.</source>
          <target state="translated">O tipo do décimo primeiro elemento.</target>       </trans-unit>
        <trans-unit id="4110" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``11(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@)">
          <source>The 11-element tuple to deconstruct into 11 separate variables.</source>
          <target state="translated">A tupla com 11 elementos a ser desconstruída em 11 variáveis separadas.</target>       </trans-unit>
        <trans-unit id="4111" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``11(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@)">
          <source>The value of the first element.</source>
          <target state="translated">O valor do primeiro elemento.</target>       </trans-unit>
        <trans-unit id="4112" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``11(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@)">
          <source>The value of the second element.</source>
          <target state="translated">O valor do segundo elemento.</target>       </trans-unit>
        <trans-unit id="4113" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``11(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@)">
          <source>The value of the third element.</source>
          <target state="translated">O valor do terceiro elemento.</target>       </trans-unit>
        <trans-unit id="4114" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``11(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@)">
          <source>The value of the fourth element.</source>
          <target state="translated">O valor do quarto elemento.</target>       </trans-unit>
        <trans-unit id="4115" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``11(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@)">
          <source>The value of the fifth element.</source>
          <target state="translated">O valor do quinto elemento.</target>       </trans-unit>
        <trans-unit id="4116" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``11(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@)">
          <source>The value of the sixth element.</source>
          <target state="translated">O valor do sexto elemento.</target>       </trans-unit>
        <trans-unit id="4117" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``11(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@)">
          <source>The value of the seventh element.</source>
          <target state="translated">O valor do sétimo elemento.</target>       </trans-unit>
        <trans-unit id="4118" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``11(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@)">
          <source>The value of the eighth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">O valor do oitavo elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4119" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``11(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@)">
          <source>The value of the ninth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">O valor do nono elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4120" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``11(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@)">
          <source>The value of the tenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</source>
          <target state="translated">O valor do décimo elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4121" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``11(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@)">
          <source>The value of the eleventh element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>.</source>
          <target state="translated">O valor do décimo primeiro elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4122" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``11(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@)">
          <source>Deconstructs a tuple with 11 elements into separate variables.</source>
          <target state="translated">Desconstrói uma tupla com 11 elementos em variáveis separadas.</target>       </trans-unit>
        <trans-unit id="4123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``12(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@)">
          <source>The type of the first element.</source>
          <target state="translated">O tipo do primeiro elemento.</target>       </trans-unit>
        <trans-unit id="4124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``12(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@)">
          <source>The type of the second element.</source>
          <target state="translated">O tipo do segundo elemento.</target>       </trans-unit>
        <trans-unit id="4125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``12(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@)">
          <source>The type of the third element.</source>
          <target state="translated">O tipo do terceiro elemento.</target>       </trans-unit>
        <trans-unit id="4126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``12(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@)">
          <source>The type of the fourth element.</source>
          <target state="translated">O tipo do quarto elemento.</target>       </trans-unit>
        <trans-unit id="4127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``12(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@)">
          <source>The type of the fifth element.</source>
          <target state="translated">O tipo do quinto elemento.</target>       </trans-unit>
        <trans-unit id="4128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``12(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@)">
          <source>The type of the sixth element.</source>
          <target state="translated">O tipo do sexto elemento.</target>       </trans-unit>
        <trans-unit id="4129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``12(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@)">
          <source>The type of the seventh element.</source>
          <target state="translated">O tipo do sétimo elemento.</target>       </trans-unit>
        <trans-unit id="4130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``12(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@)">
          <source>The type of the eighth element.</source>
          <target state="translated">O tipo do oitavo elemento.</target>       </trans-unit>
        <trans-unit id="4131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``12(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@)">
          <source>The type of the ninth element.</source>
          <target state="translated">O tipo do nono elemento.</target>       </trans-unit>
        <trans-unit id="4132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``12(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@)">
          <source>The type of the tenth element.</source>
          <target state="translated">O tipo do décimo elemento.</target>       </trans-unit>
        <trans-unit id="4133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``12(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@)">
          <source>The type of the eleventh element.</source>
          <target state="translated">O tipo do décimo primeiro elemento.</target>       </trans-unit>
        <trans-unit id="4134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``12(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@)">
          <source>The type of the twelfth element.</source>
          <target state="translated">O tipo do décimo segundo elemento.</target>       </trans-unit>
        <trans-unit id="4135" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``12(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@)">
          <source>The 12-element tuple to deconstruct into 12 separate variables.</source>
          <target state="translated">A tupla com 12 elementos a ser desconstruída em 12 variáveis separadas.</target>       </trans-unit>
        <trans-unit id="4136" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``12(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@)">
          <source>The value of the first element.</source>
          <target state="translated">O valor do primeiro elemento.</target>       </trans-unit>
        <trans-unit id="4137" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``12(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@)">
          <source>The value of the second element.</source>
          <target state="translated">O valor do segundo elemento.</target>       </trans-unit>
        <trans-unit id="4138" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``12(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@)">
          <source>The value of the third element.</source>
          <target state="translated">O valor do terceiro elemento.</target>       </trans-unit>
        <trans-unit id="4139" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``12(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@)">
          <source>The value of the fourth element.</source>
          <target state="translated">O valor do quarto elemento.</target>       </trans-unit>
        <trans-unit id="4140" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``12(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@)">
          <source>The value of the fifth element.</source>
          <target state="translated">O valor do quinto elemento.</target>       </trans-unit>
        <trans-unit id="4141" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``12(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@)">
          <source>The value of the sixth element.</source>
          <target state="translated">O valor do sexto elemento.</target>       </trans-unit>
        <trans-unit id="4142" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``12(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@)">
          <source>The value of the seventh element.</source>
          <target state="translated">O valor do sétimo elemento.</target>       </trans-unit>
        <trans-unit id="4143" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``12(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@)">
          <source>The value of the eighth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">O valor do oitavo elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4144" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``12(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@)">
          <source>The value of the ninth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">O valor do nono elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4145" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``12(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@)">
          <source>The value of the tenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</source>
          <target state="translated">O valor do décimo elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4146" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``12(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@)">
          <source>The value of the eleventh element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>.</source>
          <target state="translated">O valor do décimo primeiro elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4147" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``12(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@)">
          <source>The value of the twelfth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>.</source>
          <target state="translated">O valor do décimo segundo elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4148" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``12(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@)">
          <source>Deconstructs a tuple with 12 elements into separate variables.</source>
          <target state="translated">Desconstrói uma tupla com 12 elementos em variáveis separadas.</target>       </trans-unit>
        <trans-unit id="4149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``13(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@)">
          <source>The type of the first element.</source>
          <target state="translated">O tipo do primeiro elemento.</target>       </trans-unit>
        <trans-unit id="4150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``13(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@)">
          <source>The type of the second element.</source>
          <target state="translated">O tipo do segundo elemento.</target>       </trans-unit>
        <trans-unit id="4151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``13(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@)">
          <source>The type of the third element.</source>
          <target state="translated">O tipo do terceiro elemento.</target>       </trans-unit>
        <trans-unit id="4152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``13(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@)">
          <source>The type of the fourth element.</source>
          <target state="translated">O tipo do quarto elemento.</target>       </trans-unit>
        <trans-unit id="4153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``13(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@)">
          <source>The type of the fifth element.</source>
          <target state="translated">O tipo do quinto elemento.</target>       </trans-unit>
        <trans-unit id="4154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``13(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@)">
          <source>The type of the sixth element.</source>
          <target state="translated">O tipo do sexto elemento.</target>       </trans-unit>
        <trans-unit id="4155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``13(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@)">
          <source>The type of the seventh element.</source>
          <target state="translated">O tipo do sétimo elemento.</target>       </trans-unit>
        <trans-unit id="4156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``13(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@)">
          <source>The type of the eighth element.</source>
          <target state="translated">O tipo do oitavo elemento.</target>       </trans-unit>
        <trans-unit id="4157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``13(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@)">
          <source>The type of the ninth element.</source>
          <target state="translated">O tipo do nono elemento.</target>       </trans-unit>
        <trans-unit id="4158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``13(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@)">
          <source>The type of the tenth element.</source>
          <target state="translated">O tipo do décimo elemento.</target>       </trans-unit>
        <trans-unit id="4159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``13(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@)">
          <source>The type of the eleventh element.</source>
          <target state="translated">O tipo do décimo primeiro elemento.</target>       </trans-unit>
        <trans-unit id="4160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``13(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@)">
          <source>The type of the twelfth element.</source>
          <target state="translated">O tipo do décimo segundo elemento.</target>       </trans-unit>
        <trans-unit id="4161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``13(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@)">
          <source>The type of the thirteenth element.</source>
          <target state="translated">O tipo do décimo terceiro elemento.</target>       </trans-unit>
        <trans-unit id="4162" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``13(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@)">
          <source>The 13-element tuple to deconstruct into 13 separate variables.</source>
          <target state="translated">A tupla com 13 elementos a ser desconstruída em 13 variáveis separadas.</target>       </trans-unit>
        <trans-unit id="4163" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``13(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@)">
          <source>The value of the first element.</source>
          <target state="translated">O valor do primeiro elemento.</target>       </trans-unit>
        <trans-unit id="4164" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``13(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@)">
          <source>The value of the second element.</source>
          <target state="translated">O valor do segundo elemento.</target>       </trans-unit>
        <trans-unit id="4165" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``13(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@)">
          <source>The value of the third element.</source>
          <target state="translated">O valor do terceiro elemento.</target>       </trans-unit>
        <trans-unit id="4166" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``13(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@)">
          <source>The value of the fourth element.</source>
          <target state="translated">O valor do quarto elemento.</target>       </trans-unit>
        <trans-unit id="4167" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``13(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@)">
          <source>The value of the fifth element.</source>
          <target state="translated">O valor do quinto elemento.</target>       </trans-unit>
        <trans-unit id="4168" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``13(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@)">
          <source>The value of the sixth element.</source>
          <target state="translated">O valor do sexto elemento.</target>       </trans-unit>
        <trans-unit id="4169" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``13(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@)">
          <source>The value of the seventh element.</source>
          <target state="translated">O valor do sétimo elemento.</target>       </trans-unit>
        <trans-unit id="4170" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``13(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@)">
          <source>The value of the eighth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">O valor do oitavo elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4171" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``13(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@)">
          <source>The value of the ninth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">O valor do nono elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4172" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``13(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@)">
          <source>The value of the tenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</source>
          <target state="translated">O valor do décimo elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4173" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``13(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@)">
          <source>The value of the eleventh element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>.</source>
          <target state="translated">O valor do décimo primeiro elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4174" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``13(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@)">
          <source>The value of the twelfth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>.</source>
          <target state="translated">O valor do décimo segundo elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4175" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``13(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@)">
          <source>The value of the thirteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>.</source>
          <target state="translated">O valor do décimo terceiro elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4176" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``13(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@)">
          <source>Deconstructs a tuple with 13 elements into separate variables.</source>
          <target state="translated">Desconstrói uma tupla com 13 elementos em variáveis separadas.</target>       </trans-unit>
        <trans-unit id="4177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@)">
          <source>The type of the first element.</source>
          <target state="translated">O tipo do primeiro elemento.</target>       </trans-unit>
        <trans-unit id="4178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@)">
          <source>The type of the second element.</source>
          <target state="translated">O tipo do segundo elemento.</target>       </trans-unit>
        <trans-unit id="4179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@)">
          <source>The type of the third element.</source>
          <target state="translated">O tipo do terceiro elemento.</target>       </trans-unit>
        <trans-unit id="4180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@)">
          <source>The type of the fourth element.</source>
          <target state="translated">O tipo do quarto elemento.</target>       </trans-unit>
        <trans-unit id="4181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@)">
          <source>The type of the fifth element.</source>
          <target state="translated">O tipo do quinto elemento.</target>       </trans-unit>
        <trans-unit id="4182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@)">
          <source>The type of the sixth element.</source>
          <target state="translated">O tipo do sexto elemento.</target>       </trans-unit>
        <trans-unit id="4183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@)">
          <source>The type of the seventh element.</source>
          <target state="translated">O tipo do sétimo elemento.</target>       </trans-unit>
        <trans-unit id="4184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@)">
          <source>The type of the eighth element.</source>
          <target state="translated">O tipo do oitavo elemento.</target>       </trans-unit>
        <trans-unit id="4185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@)">
          <source>The type of the ninth element.</source>
          <target state="translated">O tipo do nono elemento.</target>       </trans-unit>
        <trans-unit id="4186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@)">
          <source>The type of the tenth element.</source>
          <target state="translated">O tipo do décimo elemento.</target>       </trans-unit>
        <trans-unit id="4187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@)">
          <source>The type of the eleventh element.</source>
          <target state="translated">O tipo do décimo primeiro elemento.</target>       </trans-unit>
        <trans-unit id="4188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@)">
          <source>The type of the twelfth element.</source>
          <target state="translated">O tipo do décimo segundo elemento.</target>       </trans-unit>
        <trans-unit id="4189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@)">
          <source>The type of the thirteenth element.</source>
          <target state="translated">O tipo do décimo terceiro elemento.</target>       </trans-unit>
        <trans-unit id="4190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@)">
          <source>The type of the fourteenth element.</source>
          <target state="translated">O tipo do décimo quarto elemento.</target>       </trans-unit>
        <trans-unit id="4191" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@)">
          <source>The 14-element tuple to deconstruct into 14 separate variables.</source>
          <target state="translated">A tupla com 14 elementos a ser desconstruída em 14 variáveis separadas.</target>       </trans-unit>
        <trans-unit id="4192" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@)">
          <source>The value of the first element.</source>
          <target state="translated">O valor do primeiro elemento.</target>       </trans-unit>
        <trans-unit id="4193" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@)">
          <source>The value of the second element.</source>
          <target state="translated">O valor do segundo elemento.</target>       </trans-unit>
        <trans-unit id="4194" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@)">
          <source>The value of the third element.</source>
          <target state="translated">O valor do terceiro elemento.</target>       </trans-unit>
        <trans-unit id="4195" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@)">
          <source>The value of the fourth element.</source>
          <target state="translated">O valor do quarto elemento.</target>       </trans-unit>
        <trans-unit id="4196" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@)">
          <source>The value of the fifth element.</source>
          <target state="translated">O valor do quinto elemento.</target>       </trans-unit>
        <trans-unit id="4197" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@)">
          <source>The value of the sixth element.</source>
          <target state="translated">O valor do sexto elemento.</target>       </trans-unit>
        <trans-unit id="4198" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@)">
          <source>The value of the seventh element.</source>
          <target state="translated">O valor do sétimo elemento.</target>       </trans-unit>
        <trans-unit id="4199" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@)">
          <source>The value of the eighth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">O valor do oitavo elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4200" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@)">
          <source>The value of the ninth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">O valor do nono elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4201" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@)">
          <source>The value of the tenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</source>
          <target state="translated">O valor do décimo elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4202" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@)">
          <source>The value of the eleventh element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>.</source>
          <target state="translated">O valor do décimo primeiro elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4203" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@)">
          <source>The value of the twelfth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>.</source>
          <target state="translated">O valor do décimo segundo elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4204" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@)">
          <source>The value of the thirteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>.</source>
          <target state="translated">O valor do décimo terceiro elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4205" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@)">
          <source>The value of the fourteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item7" /&gt;</ph>.</source>
          <target state="translated">O valor do décimo quarto elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item7" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4206" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@)">
          <source>Deconstructs a tuple with 14 elements into separate variables.</source>
          <target state="translated">Desconstrói uma tupla com 14 elementos em variáveis separadas.</target>       </trans-unit>
        <trans-unit id="4207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@)">
          <source>The type of the first element.</source>
          <target state="translated">O tipo do primeiro elemento.</target>       </trans-unit>
        <trans-unit id="4208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@)">
          <source>The type of the second element.</source>
          <target state="translated">O tipo do segundo elemento.</target>       </trans-unit>
        <trans-unit id="4209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@)">
          <source>The type of the third element.</source>
          <target state="translated">O tipo do terceiro elemento.</target>       </trans-unit>
        <trans-unit id="4210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@)">
          <source>The type of the fourth element.</source>
          <target state="translated">O tipo do quarto elemento.</target>       </trans-unit>
        <trans-unit id="4211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@)">
          <source>The type of the fifth element.</source>
          <target state="translated">O tipo do quinto elemento.</target>       </trans-unit>
        <trans-unit id="4212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@)">
          <source>The type of the sixth element.</source>
          <target state="translated">O tipo do sexto elemento.</target>       </trans-unit>
        <trans-unit id="4213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@)">
          <source>The type of the seventh element.</source>
          <target state="translated">O tipo do sétimo elemento.</target>       </trans-unit>
        <trans-unit id="4214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@)">
          <source>The type of the eighth element.</source>
          <target state="translated">O tipo do oitavo elemento.</target>       </trans-unit>
        <trans-unit id="4215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@)">
          <source>The type of the ninth element.</source>
          <target state="translated">O tipo do nono elemento.</target>       </trans-unit>
        <trans-unit id="4216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@)">
          <source>The type of the tenth element.</source>
          <target state="translated">O tipo do décimo elemento.</target>       </trans-unit>
        <trans-unit id="4217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@)">
          <source>The type of the eleventh element.</source>
          <target state="translated">O tipo do décimo primeiro elemento.</target>       </trans-unit>
        <trans-unit id="4218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@)">
          <source>The type of the twelfth element.</source>
          <target state="translated">O tipo do décimo segundo elemento.</target>       </trans-unit>
        <trans-unit id="4219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@)">
          <source>The type of the thirteenth element.</source>
          <target state="translated">O tipo do décimo terceiro elemento.</target>       </trans-unit>
        <trans-unit id="4220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@)">
          <source>The type of the fourteenth element.</source>
          <target state="translated">O tipo do décimo quarto elemento.</target>       </trans-unit>
        <trans-unit id="4221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@)">
          <source>The type of the fifteenth element.</source>
          <target state="translated">O tipo do décimo quinto elemento.</target>       </trans-unit>
        <trans-unit id="4222" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@)">
          <source>The 15-element tuple to deconstruct into 15 separate variables.</source>
          <target state="translated">A tupla com 15 elementos a ser desconstruída em 15 variáveis separadas.</target>       </trans-unit>
        <trans-unit id="4223" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@)">
          <source>The value of the first element.</source>
          <target state="translated">O valor do primeiro elemento.</target>       </trans-unit>
        <trans-unit id="4224" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@)">
          <source>The value of the second element.</source>
          <target state="translated">O valor do segundo elemento.</target>       </trans-unit>
        <trans-unit id="4225" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@)">
          <source>The value of the third element.</source>
          <target state="translated">O valor do terceiro elemento.</target>       </trans-unit>
        <trans-unit id="4226" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@)">
          <source>The value of the fourth element.</source>
          <target state="translated">O valor do quarto elemento.</target>       </trans-unit>
        <trans-unit id="4227" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@)">
          <source>The value of the fifth element.</source>
          <target state="translated">O valor do quinto elemento.</target>       </trans-unit>
        <trans-unit id="4228" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@)">
          <source>The value of the sixth element.</source>
          <target state="translated">O valor do sexto elemento.</target>       </trans-unit>
        <trans-unit id="4229" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@)">
          <source>The value of the seventh element.</source>
          <target state="translated">O valor do sétimo elemento.</target>       </trans-unit>
        <trans-unit id="4230" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@)">
          <source>The value of the eighth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">O valor do oitavo elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4231" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@)">
          <source>The value of the ninth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">O valor do nono elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4232" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@)">
          <source>The value of the tenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</source>
          <target state="translated">O valor do décimo elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4233" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@)">
          <source>The value of the eleventh element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>.</source>
          <target state="translated">O valor do décimo primeiro elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4234" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@)">
          <source>The value of the twelfth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>.</source>
          <target state="translated">O valor do décimo segundo elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4235" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@)">
          <source>The value of the thirteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>.</source>
          <target state="translated">O valor do décimo terceiro elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4236" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@)">
          <source>The value of the fourteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item7" /&gt;</ph>.</source>
          <target state="translated">O valor do décimo quarto elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item7" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4237" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@)">
          <source>The value of the fifteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">O valor do décimo quinto elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4238" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@)">
          <source>Deconstructs a tuple with 15 elements into separate variables.</source>
          <target state="translated">Desconstrói uma tupla com 15 elementos em variáveis separadas.</target>       </trans-unit>
        <trans-unit id="4239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@)">
          <source>The type of the first element.</source>
          <target state="translated">O tipo do primeiro elemento.</target>       </trans-unit>
        <trans-unit id="4240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@)">
          <source>The type of the second element.</source>
          <target state="translated">O tipo do segundo elemento.</target>       </trans-unit>
        <trans-unit id="4241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@)">
          <source>The type of the third element.</source>
          <target state="translated">O tipo do terceiro elemento.</target>       </trans-unit>
        <trans-unit id="4242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@)">
          <source>The type of the fourth element.</source>
          <target state="translated">O tipo do quarto elemento.</target>       </trans-unit>
        <trans-unit id="4243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@)">
          <source>The type of the fifth element.</source>
          <target state="translated">O tipo do quinto elemento.</target>       </trans-unit>
        <trans-unit id="4244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@)">
          <source>The type of the sixth element.</source>
          <target state="translated">O tipo do sexto elemento.</target>       </trans-unit>
        <trans-unit id="4245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@)">
          <source>The type of the seventh element.</source>
          <target state="translated">O tipo do sétimo elemento.</target>       </trans-unit>
        <trans-unit id="4246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@)">
          <source>The type of the eighth element.</source>
          <target state="translated">O tipo do oitavo elemento.</target>       </trans-unit>
        <trans-unit id="4247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@)">
          <source>The type of the ninth element.</source>
          <target state="translated">O tipo do nono elemento.</target>       </trans-unit>
        <trans-unit id="4248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@)">
          <source>The type of the tenth element.</source>
          <target state="translated">O tipo do décimo elemento.</target>       </trans-unit>
        <trans-unit id="4249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@)">
          <source>The type of the eleventh element.</source>
          <target state="translated">O tipo do décimo primeiro elemento.</target>       </trans-unit>
        <trans-unit id="4250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@)">
          <source>The type of the twelfth element.</source>
          <target state="translated">O tipo do décimo segundo elemento.</target>       </trans-unit>
        <trans-unit id="4251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@)">
          <source>The type of the thirteenth element.</source>
          <target state="translated">O tipo do décimo terceiro elemento.</target>       </trans-unit>
        <trans-unit id="4252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@)">
          <source>The type of the fourteenth element.</source>
          <target state="translated">O tipo do décimo quarto elemento.</target>       </trans-unit>
        <trans-unit id="4253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@)">
          <source>The type of the fifteenth element.</source>
          <target state="translated">O tipo do décimo quinto elemento.</target>       </trans-unit>
        <trans-unit id="4254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@)">
          <source>The type of the sixteenth element.</source>
          <target state="translated">O tipo do décimo sexto elemento.</target>       </trans-unit>
        <trans-unit id="4255" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@)">
          <source>The 16-element tuple to deconstruct into 16 separate variables.</source>
          <target state="translated">A tupla com 16 elementos a ser desconstruída em 16 variáveis separadas.</target>       </trans-unit>
        <trans-unit id="4256" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@)">
          <source>The value of the first element.</source>
          <target state="translated">O valor do primeiro elemento.</target>       </trans-unit>
        <trans-unit id="4257" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@)">
          <source>The value of the second element.</source>
          <target state="translated">O valor do segundo elemento.</target>       </trans-unit>
        <trans-unit id="4258" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@)">
          <source>The value of the third element.</source>
          <target state="translated">O valor do terceiro elemento.</target>       </trans-unit>
        <trans-unit id="4259" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@)">
          <source>The value of the fourth element.</source>
          <target state="translated">O valor do quarto elemento.</target>       </trans-unit>
        <trans-unit id="4260" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@)">
          <source>The value of the fifth element.</source>
          <target state="translated">O valor do quinto elemento.</target>       </trans-unit>
        <trans-unit id="4261" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@)">
          <source>The value of the sixth element.</source>
          <target state="translated">O valor do sexto elemento.</target>       </trans-unit>
        <trans-unit id="4262" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@)">
          <source>The value of the seventh element.</source>
          <target state="translated">O valor do sétimo elemento.</target>       </trans-unit>
        <trans-unit id="4263" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@)">
          <source>The value of the eighth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">O valor do oitavo elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4264" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@)">
          <source>The value of the ninth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">O valor do nono elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4265" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@)">
          <source>The value of the tenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</source>
          <target state="translated">O valor do décimo elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4266" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@)">
          <source>The value of the eleventh element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>.</source>
          <target state="translated">O valor do décimo primeiro elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4267" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@)">
          <source>The value of the twelfth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>.</source>
          <target state="translated">O valor do décimo segundo elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4268" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@)">
          <source>The value of the thirteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>.</source>
          <target state="translated">O valor do décimo terceiro elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4269" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@)">
          <source>The value of the fourteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item7" /&gt;</ph>.</source>
          <target state="translated">O valor do décimo quarto elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item7" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4270" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@)">
          <source>The value of the fifteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">O valor do décimo quinto elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4271" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@)">
          <source>The value of the sixteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">O valor do décimo sexto elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4272" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@)">
          <source>Deconstructs a tuple with 16 elements into separate variables.</source>
          <target state="translated">Desconstrói uma tupla com 16 elementos em variáveis separadas.</target>       </trans-unit>
        <trans-unit id="4273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@)">
          <source>The type of the first element.</source>
          <target state="translated">O tipo do primeiro elemento.</target>       </trans-unit>
        <trans-unit id="4274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@)">
          <source>The type of the second element.</source>
          <target state="translated">O tipo do segundo elemento.</target>       </trans-unit>
        <trans-unit id="4275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@)">
          <source>The type of the third element.</source>
          <target state="translated">O tipo do terceiro elemento.</target>       </trans-unit>
        <trans-unit id="4276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@)">
          <source>The type of the fourth element.</source>
          <target state="translated">O tipo do quarto elemento.</target>       </trans-unit>
        <trans-unit id="4277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@)">
          <source>The type of the fifth element.</source>
          <target state="translated">O tipo do quinto elemento.</target>       </trans-unit>
        <trans-unit id="4278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@)">
          <source>The type of the sixth element.</source>
          <target state="translated">O tipo do sexto elemento.</target>       </trans-unit>
        <trans-unit id="4279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@)">
          <source>The type of the seventh element.</source>
          <target state="translated">O tipo do sétimo elemento.</target>       </trans-unit>
        <trans-unit id="4280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@)">
          <source>The type of the eighth element.</source>
          <target state="translated">O tipo do oitavo elemento.</target>       </trans-unit>
        <trans-unit id="4281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@)">
          <source>The type of the ninth element.</source>
          <target state="translated">O tipo do nono elemento.</target>       </trans-unit>
        <trans-unit id="4282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@)">
          <source>The type of the tenth element.</source>
          <target state="translated">O tipo do décimo elemento.</target>       </trans-unit>
        <trans-unit id="4283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@)">
          <source>The type of the eleventh element.</source>
          <target state="translated">O tipo do décimo primeiro elemento.</target>       </trans-unit>
        <trans-unit id="4284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@)">
          <source>The type of the twelfth element.</source>
          <target state="translated">O tipo do décimo segundo elemento.</target>       </trans-unit>
        <trans-unit id="4285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@)">
          <source>The type of the thirteenth element.</source>
          <target state="translated">O tipo do décimo terceiro elemento.</target>       </trans-unit>
        <trans-unit id="4286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@)">
          <source>The type of the fourteenth element.</source>
          <target state="translated">O tipo do décimo quarto elemento.</target>       </trans-unit>
        <trans-unit id="4287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@)">
          <source>The type of the fifteenth element.</source>
          <target state="translated">O tipo do décimo quinto elemento.</target>       </trans-unit>
        <trans-unit id="4288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@)">
          <source>The type of the sixteenth element.</source>
          <target state="translated">O tipo do décimo sexto elemento.</target>       </trans-unit>
        <trans-unit id="4289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@)">
          <source>The type of the seventeenth element.</source>
          <target state="translated">O tipo do décimo sétimo elemento.</target>       </trans-unit>
        <trans-unit id="4290" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@)">
          <source>The 17-element tuple to deconstruct into 17 separate variables.</source>
          <target state="translated">A tupla com 17 elementos a ser desconstruída em 17 variáveis separadas.</target>       </trans-unit>
        <trans-unit id="4291" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@)">
          <source>The value of the first element.</source>
          <target state="translated">O valor do primeiro elemento.</target>       </trans-unit>
        <trans-unit id="4292" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@)">
          <source>The value of the second element.</source>
          <target state="translated">O valor do segundo elemento.</target>       </trans-unit>
        <trans-unit id="4293" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@)">
          <source>The value of the third element.</source>
          <target state="translated">O valor do terceiro elemento.</target>       </trans-unit>
        <trans-unit id="4294" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@)">
          <source>The value of the fourth element.</source>
          <target state="translated">O valor do quarto elemento.</target>       </trans-unit>
        <trans-unit id="4295" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@)">
          <source>The value of the fifth element.</source>
          <target state="translated">O valor do quinto elemento.</target>       </trans-unit>
        <trans-unit id="4296" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@)">
          <source>The value of the sixth element.</source>
          <target state="translated">O valor do sexto elemento.</target>       </trans-unit>
        <trans-unit id="4297" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@)">
          <source>The value of the seventh element.</source>
          <target state="translated">O valor do sétimo elemento.</target>       </trans-unit>
        <trans-unit id="4298" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@)">
          <source>The value of the eighth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">O valor do oitavo elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4299" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@)">
          <source>The value of the ninth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">O valor do nono elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4300" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@)">
          <source>The value of the tenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</source>
          <target state="translated">O valor do décimo elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4301" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@)">
          <source>The value of the eleventh element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>.</source>
          <target state="translated">O valor do décimo primeiro elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4302" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@)">
          <source>The value of the twelfth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>.</source>
          <target state="translated">O valor do décimo segundo elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4303" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@)">
          <source>The value of the thirteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>.</source>
          <target state="translated">O valor do décimo terceiro elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4304" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@)">
          <source>The value of the fourteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item7" /&gt;</ph>.</source>
          <target state="translated">O valor do décimo quarto elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item7" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4305" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@)">
          <source>The value of the fifteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">O valor do décimo quinto elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4306" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@)">
          <source>The value of the sixteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">O valor do décimo sexto elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4307" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@)">
          <source>The value of the seventeenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item3" /&gt;</ph>.</source>
          <target state="translated">O valor do décimo sétimo elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item3" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4308" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@)">
          <source>Deconstructs a tuple with 17 elements into separate variables.</source>
          <target state="translated">Desconstrói uma tupla com 17 elementos em variáveis separadas.</target>       </trans-unit>
        <trans-unit id="4309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@)">
          <source>The type of the first element.</source>
          <target state="translated">O tipo do primeiro elemento.</target>       </trans-unit>
        <trans-unit id="4310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@)">
          <source>The type of the second element.</source>
          <target state="translated">O tipo do segundo elemento.</target>       </trans-unit>
        <trans-unit id="4311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@)">
          <source>The type of the third element.</source>
          <target state="translated">O tipo do terceiro elemento.</target>       </trans-unit>
        <trans-unit id="4312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@)">
          <source>The type of the fourth element.</source>
          <target state="translated">O tipo do quarto elemento.</target>       </trans-unit>
        <trans-unit id="4313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@)">
          <source>The type of the fifth element.</source>
          <target state="translated">O tipo do quinto elemento.</target>       </trans-unit>
        <trans-unit id="4314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@)">
          <source>The type of the sixth element.</source>
          <target state="translated">O tipo do sexto elemento.</target>       </trans-unit>
        <trans-unit id="4315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@)">
          <source>The type of the seventh element.</source>
          <target state="translated">O tipo do sétimo elemento.</target>       </trans-unit>
        <trans-unit id="4316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@)">
          <source>The type of the eighth element.</source>
          <target state="translated">O tipo do oitavo elemento.</target>       </trans-unit>
        <trans-unit id="4317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@)">
          <source>The type of the ninth element.</source>
          <target state="translated">O tipo do nono elemento.</target>       </trans-unit>
        <trans-unit id="4318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@)">
          <source>The type of the tenth element.</source>
          <target state="translated">O tipo do décimo elemento.</target>       </trans-unit>
        <trans-unit id="4319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@)">
          <source>The type of the eleventh element.</source>
          <target state="translated">O tipo do décimo primeiro elemento.</target>       </trans-unit>
        <trans-unit id="4320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@)">
          <source>The type of the twelfth element.</source>
          <target state="translated">O tipo do décimo segundo elemento.</target>       </trans-unit>
        <trans-unit id="4321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@)">
          <source>The type of the thirteenth element.</source>
          <target state="translated">O tipo do décimo terceiro elemento.</target>       </trans-unit>
        <trans-unit id="4322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@)">
          <source>The type of the fourteenth element.</source>
          <target state="translated">O tipo do décimo quarto elemento.</target>       </trans-unit>
        <trans-unit id="4323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@)">
          <source>The type of the fifteenth element.</source>
          <target state="translated">O tipo do décimo quinto elemento.</target>       </trans-unit>
        <trans-unit id="4324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@)">
          <source>The type of the sixteenth element.</source>
          <target state="translated">O tipo do décimo sexto elemento.</target>       </trans-unit>
        <trans-unit id="4325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@)">
          <source>The type of the seventeenth element.</source>
          <target state="translated">O tipo do décimo sétimo elemento.</target>       </trans-unit>
        <trans-unit id="4326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@)">
          <source>The type of the eighteenth element.</source>
          <target state="translated">O tipo do décimo oitavo elemento.</target>       </trans-unit>
        <trans-unit id="4327" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@)">
          <source>The 18-element tuple to deconstruct into 18 separate variables.</source>
          <target state="translated">A tupla com 18 elementos a ser desconstruída em 18 variáveis separadas.</target>       </trans-unit>
        <trans-unit id="4328" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@)">
          <source>The value of the first element.</source>
          <target state="translated">O valor do primeiro elemento.</target>       </trans-unit>
        <trans-unit id="4329" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@)">
          <source>The value of the second element.</source>
          <target state="translated">O valor do segundo elemento.</target>       </trans-unit>
        <trans-unit id="4330" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@)">
          <source>The value of the third element.</source>
          <target state="translated">O valor do terceiro elemento.</target>       </trans-unit>
        <trans-unit id="4331" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@)">
          <source>The value of the fourth element.</source>
          <target state="translated">O valor do quarto elemento.</target>       </trans-unit>
        <trans-unit id="4332" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@)">
          <source>The value of the fifth element.</source>
          <target state="translated">O valor do quinto elemento.</target>       </trans-unit>
        <trans-unit id="4333" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@)">
          <source>The value of the sixth element.</source>
          <target state="translated">O valor do sexto elemento.</target>       </trans-unit>
        <trans-unit id="4334" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@)">
          <source>The value of the seventh element.</source>
          <target state="translated">O valor do sétimo elemento.</target>       </trans-unit>
        <trans-unit id="4335" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@)">
          <source>The value of the eighth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">O valor do oitavo elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4336" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@)">
          <source>The value of the ninth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">O valor do nono elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4337" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@)">
          <source>The value of the tenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</source>
          <target state="translated">O valor do décimo elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4338" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@)">
          <source>The value of the eleventh element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>.</source>
          <target state="translated">O valor do décimo primeiro elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4339" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@)">
          <source>The value of the twelfth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>.</source>
          <target state="translated">O valor do décimo segundo elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4340" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@)">
          <source>The value of the thirteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>.</source>
          <target state="translated">O valor do décimo terceiro elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4341" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@)">
          <source>The value of the fourteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item7" /&gt;</ph>.</source>
          <target state="translated">O valor do décimo quarto elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item7" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4342" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@)">
          <source>The value of the fifteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">O valor do décimo quinto elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4343" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@)">
          <source>The value of the sixteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">O valor do décimo sexto elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4344" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@)">
          <source>The value of the seventeenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item3" /&gt;</ph>.</source>
          <target state="translated">O valor do décimo sétimo elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item3" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4345" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@)">
          <source>The value of the eighteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item4" /&gt;</ph>.</source>
          <target state="translated">O valor do décimo oitavo elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item4" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4346" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@)">
          <source>Deconstructs a tuple with 18 elements into separate variables.</source>
          <target state="translated">Desconstrói uma tupla com 18 elementos em variáveis separadas.</target>       </trans-unit>
        <trans-unit id="4347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@)">
          <source>The type of the first element.</source>
          <target state="translated">O tipo do primeiro elemento.</target>       </trans-unit>
        <trans-unit id="4348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@)">
          <source>The type of the second element.</source>
          <target state="translated">O tipo do segundo elemento.</target>       </trans-unit>
        <trans-unit id="4349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@)">
          <source>The type of the third element.</source>
          <target state="translated">O tipo do terceiro elemento.</target>       </trans-unit>
        <trans-unit id="4350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@)">
          <source>The type of the fourth element.</source>
          <target state="translated">O tipo do quarto elemento.</target>       </trans-unit>
        <trans-unit id="4351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@)">
          <source>The type of the fifth element.</source>
          <target state="translated">O tipo do quinto elemento.</target>       </trans-unit>
        <trans-unit id="4352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@)">
          <source>The type of the sixth element.</source>
          <target state="translated">O tipo do sexto elemento.</target>       </trans-unit>
        <trans-unit id="4353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@)">
          <source>The type of the seventh element.</source>
          <target state="translated">O tipo do sétimo elemento.</target>       </trans-unit>
        <trans-unit id="4354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@)">
          <source>The type of the eighth element.</source>
          <target state="translated">O tipo do oitavo elemento.</target>       </trans-unit>
        <trans-unit id="4355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@)">
          <source>The type of the ninth element.</source>
          <target state="translated">O tipo do nono elemento.</target>       </trans-unit>
        <trans-unit id="4356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@)">
          <source>The type of the tenth element.</source>
          <target state="translated">O tipo do décimo elemento.</target>       </trans-unit>
        <trans-unit id="4357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@)">
          <source>The type of the eleventh element.</source>
          <target state="translated">O tipo do décimo primeiro elemento.</target>       </trans-unit>
        <trans-unit id="4358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@)">
          <source>The type of the twelfth element.</source>
          <target state="translated">O tipo do décimo segundo elemento.</target>       </trans-unit>
        <trans-unit id="4359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@)">
          <source>The type of the thirteenth element.</source>
          <target state="translated">O tipo do décimo terceiro elemento.</target>       </trans-unit>
        <trans-unit id="4360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@)">
          <source>The type of the fourteenth element.</source>
          <target state="translated">O tipo do décimo quarto elemento.</target>       </trans-unit>
        <trans-unit id="4361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@)">
          <source>The type of the fifteenth element.</source>
          <target state="translated">O tipo do décimo quinto elemento.</target>       </trans-unit>
        <trans-unit id="4362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@)">
          <source>The type of the sixteenth element.</source>
          <target state="translated">O tipo do décimo sexto elemento.</target>       </trans-unit>
        <trans-unit id="4363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@)">
          <source>The type of the seventeenth element.</source>
          <target state="translated">O tipo do décimo sétimo elemento.</target>       </trans-unit>
        <trans-unit id="4364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@)">
          <source>The type of the eighteenth element.</source>
          <target state="translated">O tipo do décimo oitavo elemento.</target>       </trans-unit>
        <trans-unit id="4365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@)">
          <source>The type of the nineteenth element.</source>
          <target state="translated">O tipo do décimo nono elemento.</target>       </trans-unit>
        <trans-unit id="4366" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@)">
          <source>The 19-element tuple to deconstruct into 19 separate variables.</source>
          <target state="translated">A tupla com 19 elementos a ser desconstruída em 19 variáveis separadas.</target>       </trans-unit>
        <trans-unit id="4367" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@)">
          <source>The value of the first element.</source>
          <target state="translated">O valor do primeiro elemento.</target>       </trans-unit>
        <trans-unit id="4368" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@)">
          <source>The value of the second element.</source>
          <target state="translated">O valor do segundo elemento.</target>       </trans-unit>
        <trans-unit id="4369" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@)">
          <source>The value of the third element.</source>
          <target state="translated">O valor do terceiro elemento.</target>       </trans-unit>
        <trans-unit id="4370" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@)">
          <source>The value of the fourth element.</source>
          <target state="translated">O valor do quarto elemento.</target>       </trans-unit>
        <trans-unit id="4371" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@)">
          <source>The value of the fifth element.</source>
          <target state="translated">O valor do quinto elemento.</target>       </trans-unit>
        <trans-unit id="4372" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@)">
          <source>The value of the sixth element.</source>
          <target state="translated">O valor do sexto elemento.</target>       </trans-unit>
        <trans-unit id="4373" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@)">
          <source>The value of the seventh element.</source>
          <target state="translated">O valor do sétimo elemento.</target>       </trans-unit>
        <trans-unit id="4374" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@)">
          <source>The value of the eighth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">O valor do oitavo elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4375" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@)">
          <source>The value of the ninth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">O valor do nono elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4376" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@)">
          <source>The value of the tenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</source>
          <target state="translated">O valor do décimo elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4377" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@)">
          <source>The value of the eleventh element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>.</source>
          <target state="translated">O valor do décimo primeiro elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4378" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@)">
          <source>The value of the twelfth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>.</source>
          <target state="translated">O valor do décimo segundo elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4379" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@)">
          <source>The value of the thirteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>.</source>
          <target state="translated">O valor do décimo terceiro elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4380" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@)">
          <source>The value of the fourteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item7" /&gt;</ph>.</source>
          <target state="translated">O valor do décimo quarto elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item7" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4381" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@)">
          <source>The value of the fifteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">O valor do décimo quinto elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4382" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@)">
          <source>The value of the sixteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">O valor do décimo sexto elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4383" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@)">
          <source>The value of the seventeenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item3" /&gt;</ph>.</source>
          <target state="translated">O valor do décimo sétimo elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item3" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4384" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@)">
          <source>The value of the eighteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item4" /&gt;</ph>.</source>
          <target state="translated">O valor do décimo oitavo elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item4" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4385" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@)">
          <source>The value of the nineteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item5" /&gt;</ph>.</source>
          <target state="translated">O valor do décimo nono elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item5" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4386" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@)">
          <source>Deconstructs a tuple with 19 elements into separate variables.</source>
          <target state="translated">Desconstrói uma tupla com 19 elementos em variáveis separadas.</target>       </trans-unit>
        <trans-unit id="4387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``2(System.Tuple{``0,``1},``0@,``1@)">
          <source>The type of the first element.</source>
          <target state="translated">O tipo do primeiro elemento.</target>       </trans-unit>
        <trans-unit id="4388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``2(System.Tuple{``0,``1},``0@,``1@)">
          <source>The type of the second element.</source>
          <target state="translated">O tipo do segundo elemento.</target>       </trans-unit>
        <trans-unit id="4389" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``2(System.Tuple{``0,``1},``0@,``1@)">
          <source>The 2-element tuple to deconstruct into 2 separate variables.</source>
          <target state="translated">A tupla com dois elementos a ser desconstruída em duas variáveis separadas.</target>       </trans-unit>
        <trans-unit id="4390" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``2(System.Tuple{``0,``1},``0@,``1@)">
          <source>The value of the first element.</source>
          <target state="translated">O valor do primeiro elemento.</target>       </trans-unit>
        <trans-unit id="4391" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``2(System.Tuple{``0,``1},``0@,``1@)">
          <source>The value of the second element.</source>
          <target state="translated">O valor do segundo elemento.</target>       </trans-unit>
        <trans-unit id="4392" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``2(System.Tuple{``0,``1},``0@,``1@)">
          <source>Deconstructs a tuple with 2 elements into separate variables.</source>
          <target state="translated">Desconstrói uma tupla com dois elementos em variáveis separadas.</target>       </trans-unit>
        <trans-unit id="4393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@)">
          <source>The type of the first element.</source>
          <target state="translated">O tipo do primeiro elemento.</target>       </trans-unit>
        <trans-unit id="4394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@)">
          <source>The type of the second element.</source>
          <target state="translated">O tipo do segundo elemento.</target>       </trans-unit>
        <trans-unit id="4395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@)">
          <source>The type of the third element.</source>
          <target state="translated">O tipo do terceiro elemento.</target>       </trans-unit>
        <trans-unit id="4396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@)">
          <source>The type of the fourth element.</source>
          <target state="translated">O tipo do quarto elemento.</target>       </trans-unit>
        <trans-unit id="4397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@)">
          <source>The type of the fifth element.</source>
          <target state="translated">O tipo do quinto elemento.</target>       </trans-unit>
        <trans-unit id="4398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@)">
          <source>The type of the sixth element.</source>
          <target state="translated">O tipo do sexto elemento.</target>       </trans-unit>
        <trans-unit id="4399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@)">
          <source>The type of the seventh element.</source>
          <target state="translated">O tipo do sétimo elemento.</target>       </trans-unit>
        <trans-unit id="4400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@)">
          <source>The type of the eighth element.</source>
          <target state="translated">O tipo do oitavo elemento.</target>       </trans-unit>
        <trans-unit id="4401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@)">
          <source>The type of the ninth element.</source>
          <target state="translated">O tipo do nono elemento.</target>       </trans-unit>
        <trans-unit id="4402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@)">
          <source>The type of the tenth element.</source>
          <target state="translated">O tipo do décimo elemento.</target>       </trans-unit>
        <trans-unit id="4403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@)">
          <source>The type of the eleventh element.</source>
          <target state="translated">O tipo do décimo primeiro elemento.</target>       </trans-unit>
        <trans-unit id="4404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@)">
          <source>The type of the twelfth element.</source>
          <target state="translated">O tipo do décimo segundo elemento.</target>       </trans-unit>
        <trans-unit id="4405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@)">
          <source>The type of the thirteenth element.</source>
          <target state="translated">O tipo do décimo terceiro elemento.</target>       </trans-unit>
        <trans-unit id="4406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@)">
          <source>The type of the fourteenth element.</source>
          <target state="translated">O tipo do décimo quarto elemento.</target>       </trans-unit>
        <trans-unit id="4407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@)">
          <source>The type of the fifteenth element.</source>
          <target state="translated">O tipo do décimo quinto elemento.</target>       </trans-unit>
        <trans-unit id="4408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@)">
          <source>The type of the sixteenth element.</source>
          <target state="translated">O tipo do décimo sexto elemento.</target>       </trans-unit>
        <trans-unit id="4409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@)">
          <source>The type of the seventeenth element.</source>
          <target state="translated">O tipo do décimo sétimo elemento.</target>       </trans-unit>
        <trans-unit id="4410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@)">
          <source>The type of the eighteenth element.</source>
          <target state="translated">O tipo do décimo oitavo elemento.</target>       </trans-unit>
        <trans-unit id="4411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@)">
          <source>The type of the nineteenth element.</source>
          <target state="translated">O tipo do décimo nono elemento.</target>       </trans-unit>
        <trans-unit id="4412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@)">
          <source>The type of the twentieth element.</source>
          <target state="translated">O tipo do vigésimo elemento.</target>       </trans-unit>
        <trans-unit id="4413" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@)">
          <source>The 20-element tuple to deconstruct into 20 separate variables.</source>
          <target state="translated">A tupla com 20 elementos a ser desconstruída em 20 variáveis separadas.</target>       </trans-unit>
        <trans-unit id="4414" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@)">
          <source>The value of the first element.</source>
          <target state="translated">O valor do primeiro elemento.</target>       </trans-unit>
        <trans-unit id="4415" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@)">
          <source>The value of the second element.</source>
          <target state="translated">O valor do segundo elemento.</target>       </trans-unit>
        <trans-unit id="4416" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@)">
          <source>The value of the third element.</source>
          <target state="translated">O valor do terceiro elemento.</target>       </trans-unit>
        <trans-unit id="4417" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@)">
          <source>The value of the fourth element.</source>
          <target state="translated">O valor do quarto elemento.</target>       </trans-unit>
        <trans-unit id="4418" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@)">
          <source>The value of the fifth element.</source>
          <target state="translated">O valor do quinto elemento.</target>       </trans-unit>
        <trans-unit id="4419" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@)">
          <source>The value of the sixth element.</source>
          <target state="translated">O valor do sexto elemento.</target>       </trans-unit>
        <trans-unit id="4420" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@)">
          <source>The value of the seventh element.</source>
          <target state="translated">O valor do sétimo elemento.</target>       </trans-unit>
        <trans-unit id="4421" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@)">
          <source>The value of the eighth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">O valor do oitavo elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4422" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@)">
          <source>The value of the ninth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">O valor do nono elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4423" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@)">
          <source>The value of the tenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</source>
          <target state="translated">O valor do décimo elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4424" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@)">
          <source>The value of the eleventh element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>.</source>
          <target state="translated">O valor do décimo primeiro elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4425" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@)">
          <source>The value of the twelfth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>.</source>
          <target state="translated">O valor do décimo segundo elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4426" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@)">
          <source>The value of the thirteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>.</source>
          <target state="translated">O valor do décimo terceiro elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4427" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@)">
          <source>The value of the fourteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item7" /&gt;</ph>.</source>
          <target state="translated">O valor do décimo quarto elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item7" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4428" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@)">
          <source>The value of the fifteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">O valor do décimo quinto elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4429" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@)">
          <source>The value of the sixteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">O valor do décimo sexto elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4430" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@)">
          <source>The value of the seventeenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item3" /&gt;</ph>.</source>
          <target state="translated">O valor do décimo sétimo elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item3" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4431" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@)">
          <source>The value of the eighteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item4" /&gt;</ph>.</source>
          <target state="translated">O valor do décimo oitavo elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item4" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4432" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@)">
          <source>The value of the nineteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item5" /&gt;</ph>.</source>
          <target state="translated">O valor do décimo nono elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item5" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4433" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@)">
          <source>The value of the twentieth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item6" /&gt;</ph>.</source>
          <target state="translated">O valor do vigésimo elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item6" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4434" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@)">
          <source>Deconstructs a tuple with 20 elements into separate variables.</source>
          <target state="translated">Desconstrói uma tupla com 20 elementos em variáveis separadas.</target>       </trans-unit>
        <trans-unit id="4435" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@)">
          <source>The type of the first element.</source>
          <target state="translated">O tipo do primeiro elemento.</target>       </trans-unit>
        <trans-unit id="4436" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@)">
          <source>The type of the second element.</source>
          <target state="translated">O tipo do segundo elemento.</target>       </trans-unit>
        <trans-unit id="4437" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@)">
          <source>The type of the third element.</source>
          <target state="translated">O tipo do terceiro elemento.</target>       </trans-unit>
        <trans-unit id="4438" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@)">
          <source>The type of the fourth element.</source>
          <target state="translated">O tipo do quarto elemento.</target>       </trans-unit>
        <trans-unit id="4439" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@)">
          <source>The type of the fifth element.</source>
          <target state="translated">O tipo do quinto elemento.</target>       </trans-unit>
        <trans-unit id="4440" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@)">
          <source>The type of the sixth element.</source>
          <target state="translated">O tipo do sexto elemento.</target>       </trans-unit>
        <trans-unit id="4441" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@)">
          <source>The type of the seventh element.</source>
          <target state="translated">O tipo do sétimo elemento.</target>       </trans-unit>
        <trans-unit id="4442" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@)">
          <source>The type of the eighth element.</source>
          <target state="translated">O tipo do oitavo elemento.</target>       </trans-unit>
        <trans-unit id="4443" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@)">
          <source>The type of the ninth element.</source>
          <target state="translated">O tipo do nono elemento.</target>       </trans-unit>
        <trans-unit id="4444" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@)">
          <source>The type of the tenth element.</source>
          <target state="translated">O tipo do décimo elemento.</target>       </trans-unit>
        <trans-unit id="4445" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@)">
          <source>The type of the eleventh element.</source>
          <target state="translated">O tipo do décimo primeiro elemento.</target>       </trans-unit>
        <trans-unit id="4446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@)">
          <source>The type of the twelfth element.</source>
          <target state="translated">O tipo do décimo segundo elemento.</target>       </trans-unit>
        <trans-unit id="4447" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@)">
          <source>The type of the thirteenth element.</source>
          <target state="translated">O tipo do décimo terceiro elemento.</target>       </trans-unit>
        <trans-unit id="4448" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@)">
          <source>The type of the fourteenth element.</source>
          <target state="translated">O tipo do décimo quarto elemento.</target>       </trans-unit>
        <trans-unit id="4449" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@)">
          <source>The type of the fifteenth element.</source>
          <target state="translated">O tipo do décimo quinto elemento.</target>       </trans-unit>
        <trans-unit id="4450" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@)">
          <source>The type of the sixteenth element.</source>
          <target state="translated">O tipo do décimo sexto elemento.</target>       </trans-unit>
        <trans-unit id="4451" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@)">
          <source>The type of the seventeenth element.</source>
          <target state="translated">O tipo do décimo sétimo elemento.</target>       </trans-unit>
        <trans-unit id="4452" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@)">
          <source>The type of the eighteenth element.</source>
          <target state="translated">O tipo do décimo oitavo elemento.</target>       </trans-unit>
        <trans-unit id="4453" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@)">
          <source>The type of the nineteenth element.</source>
          <target state="translated">O tipo do décimo nono elemento.</target>       </trans-unit>
        <trans-unit id="4454" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@)">
          <source>The type of the twentieth element.</source>
          <target state="translated">O tipo do vigésimo elemento.</target>       </trans-unit>
        <trans-unit id="4455" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@)">
          <source>The type of the twenty-first element.</source>
          <target state="translated">O tipo do vigésimo primeiro elemento.</target>       </trans-unit>
        <trans-unit id="4456" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@)">
          <source>The 21-element tuple to deconstruct into 21 separate variables.</source>
          <target state="translated">A tupla com 21 elementos a ser desconstruída em 21 variáveis separadas.</target>       </trans-unit>
        <trans-unit id="4457" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@)">
          <source>The value of the first element.</source>
          <target state="translated">O valor do primeiro elemento.</target>       </trans-unit>
        <trans-unit id="4458" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@)">
          <source>The value of the second element.</source>
          <target state="translated">O valor do segundo elemento.</target>       </trans-unit>
        <trans-unit id="4459" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@)">
          <source>The value of the third element.</source>
          <target state="translated">O valor do terceiro elemento.</target>       </trans-unit>
        <trans-unit id="4460" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@)">
          <source>The value of the fourth element.</source>
          <target state="translated">O valor do quarto elemento.</target>       </trans-unit>
        <trans-unit id="4461" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@)">
          <source>The value of the fifth element.</source>
          <target state="translated">O valor do quinto elemento.</target>       </trans-unit>
        <trans-unit id="4462" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@)">
          <source>The value of the sixth element.</source>
          <target state="translated">O valor do sexto elemento.</target>       </trans-unit>
        <trans-unit id="4463" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@)">
          <source>The value of the seventh element.</source>
          <target state="translated">O valor do sétimo elemento.</target>       </trans-unit>
        <trans-unit id="4464" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@)">
          <source>The value of the eighth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">O valor do oitavo elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4465" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@)">
          <source>The value of the ninth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">O valor do nono elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4466" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@)">
          <source>The value of the tenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</source>
          <target state="translated">O valor do décimo elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4467" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@)">
          <source>The value of the eleventh element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>.</source>
          <target state="translated">O valor do décimo primeiro elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4468" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@)">
          <source>The value of the twelfth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>.</source>
          <target state="translated">O valor do décimo segundo elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4469" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@)">
          <source>The value of the thirteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>.</source>
          <target state="translated">O valor do décimo terceiro elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4470" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@)">
          <source>The value of the fourteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item7" /&gt;</ph>.</source>
          <target state="translated">O valor do décimo quarto elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item7" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4471" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@)">
          <source>The value of the fifteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">O valor do décimo quinto elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4472" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@)">
          <source>The value of the sixteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">O valor do décimo sexto elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4473" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@)">
          <source>The value of the seventeenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item3" /&gt;</ph>.</source>
          <target state="translated">O valor do décimo sétimo elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item3" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4474" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@)">
          <source>The value of the eighteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item4" /&gt;</ph>.</source>
          <target state="translated">O valor do décimo oitavo elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item4" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4475" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@)">
          <source>The value of the nineteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item5" /&gt;</ph>.</source>
          <target state="translated">O valor do décimo nono elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item5" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4476" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@)">
          <source>The value of the twentieth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item6" /&gt;</ph>.</source>
          <target state="translated">O valor do vigésimo elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item6" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4477" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@)">
          <source>The value of the twenty-first element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item7" /&gt;</ph>.</source>
          <target state="translated">O valor do vigésimo primeiro elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item7" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4478" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@)">
          <source>Deconstructs a tuple with 21 elements into separate variables.</source>
          <target state="translated">Desconstrói uma tupla com 21 elementos em variáveis separadas.</target>       </trans-unit>
        <trans-unit id="4479" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``3(System.Tuple{``0,``1,``2},``0@,``1@,``2@)">
          <source>The type of the first element.</source>
          <target state="translated">O tipo do primeiro elemento.</target>       </trans-unit>
        <trans-unit id="4480" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``3(System.Tuple{``0,``1,``2},``0@,``1@,``2@)">
          <source>The type of the second element.</source>
          <target state="translated">O tipo do segundo elemento.</target>       </trans-unit>
        <trans-unit id="4481" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``3(System.Tuple{``0,``1,``2},``0@,``1@,``2@)">
          <source>The type of the third element.</source>
          <target state="translated">O tipo do terceiro elemento.</target>       </trans-unit>
        <trans-unit id="4482" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``3(System.Tuple{``0,``1,``2},``0@,``1@,``2@)">
          <source>The 3-element tuple to deconstruct into 3 separate variables.</source>
          <target state="translated">A tupla com três elementos a ser desconstruída em três variáveis separadas.</target>       </trans-unit>
        <trans-unit id="4483" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``3(System.Tuple{``0,``1,``2},``0@,``1@,``2@)">
          <source>The value of the first element.</source>
          <target state="translated">O valor do primeiro elemento.</target>       </trans-unit>
        <trans-unit id="4484" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``3(System.Tuple{``0,``1,``2},``0@,``1@,``2@)">
          <source>The value of the second element.</source>
          <target state="translated">O valor do segundo elemento.</target>       </trans-unit>
        <trans-unit id="4485" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``3(System.Tuple{``0,``1,``2},``0@,``1@,``2@)">
          <source>The value of the third element.</source>
          <target state="translated">O valor do terceiro elemento.</target>       </trans-unit>
        <trans-unit id="4486" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``3(System.Tuple{``0,``1,``2},``0@,``1@,``2@)">
          <source>Deconstructs a tuple with 3 elements into separate variables.</source>
          <target state="translated">Desconstrói uma tupla com três elementos em variáveis separadas.</target>       </trans-unit>
        <trans-unit id="4487" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``4(System.Tuple{``0,``1,``2,``3},``0@,``1@,``2@,``3@)">
          <source>The type of the first element.</source>
          <target state="translated">O tipo do primeiro elemento.</target>       </trans-unit>
        <trans-unit id="4488" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``4(System.Tuple{``0,``1,``2,``3},``0@,``1@,``2@,``3@)">
          <source>The type of the second element.</source>
          <target state="translated">O tipo do segundo elemento.</target>       </trans-unit>
        <trans-unit id="4489" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``4(System.Tuple{``0,``1,``2,``3},``0@,``1@,``2@,``3@)">
          <source>The type of the third element.</source>
          <target state="translated">O tipo do terceiro elemento.</target>       </trans-unit>
        <trans-unit id="4490" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``4(System.Tuple{``0,``1,``2,``3},``0@,``1@,``2@,``3@)">
          <source>The type of the fourth element.</source>
          <target state="translated">O tipo do quarto elemento.</target>       </trans-unit>
        <trans-unit id="4491" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``4(System.Tuple{``0,``1,``2,``3},``0@,``1@,``2@,``3@)">
          <source>The 4-element tuple to deconstruct into 4 separate variables.</source>
          <target state="translated">A tupla com quatro elementos a ser desconstruída em quatro variáveis separadas.</target>       </trans-unit>
        <trans-unit id="4492" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``4(System.Tuple{``0,``1,``2,``3},``0@,``1@,``2@,``3@)">
          <source>The value of the first element.</source>
          <target state="translated">O valor do primeiro elemento.</target>       </trans-unit>
        <trans-unit id="4493" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``4(System.Tuple{``0,``1,``2,``3},``0@,``1@,``2@,``3@)">
          <source>The value of the second element.</source>
          <target state="translated">O valor do segundo elemento.</target>       </trans-unit>
        <trans-unit id="4494" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``4(System.Tuple{``0,``1,``2,``3},``0@,``1@,``2@,``3@)">
          <source>The value of the third element.</source>
          <target state="translated">O valor do terceiro elemento.</target>       </trans-unit>
        <trans-unit id="4495" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``4(System.Tuple{``0,``1,``2,``3},``0@,``1@,``2@,``3@)">
          <source>The value of the fourth element.</source>
          <target state="translated">O valor do quarto elemento.</target>       </trans-unit>
        <trans-unit id="4496" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``4(System.Tuple{``0,``1,``2,``3},``0@,``1@,``2@,``3@)">
          <source>Deconstructs a tuple with 4 elements into separate variables.</source>
          <target state="translated">Desconstrói uma tupla com quatro elementos em variáveis separadas.</target>       </trans-unit>
        <trans-unit id="4497" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``5(System.Tuple{``0,``1,``2,``3,``4},``0@,``1@,``2@,``3@,``4@)">
          <source>The type of the first element.</source>
          <target state="translated">O tipo do primeiro elemento.</target>       </trans-unit>
        <trans-unit id="4498" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``5(System.Tuple{``0,``1,``2,``3,``4},``0@,``1@,``2@,``3@,``4@)">
          <source>The type of the second element.</source>
          <target state="translated">O tipo do segundo elemento.</target>       </trans-unit>
        <trans-unit id="4499" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``5(System.Tuple{``0,``1,``2,``3,``4},``0@,``1@,``2@,``3@,``4@)">
          <source>The type of the third element.</source>
          <target state="translated">O tipo do terceiro elemento.</target>       </trans-unit>
        <trans-unit id="4500" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``5(System.Tuple{``0,``1,``2,``3,``4},``0@,``1@,``2@,``3@,``4@)">
          <source>The type of the fourth element.</source>
          <target state="translated">O tipo do quarto elemento.</target>       </trans-unit>
        <trans-unit id="4501" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``5(System.Tuple{``0,``1,``2,``3,``4},``0@,``1@,``2@,``3@,``4@)">
          <source>The type of the fifth element.</source>
          <target state="translated">O tipo do quinto elemento.</target>       </trans-unit>
        <trans-unit id="4502" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``5(System.Tuple{``0,``1,``2,``3,``4},``0@,``1@,``2@,``3@,``4@)">
          <source>The 5-element tuple to deconstruct into 5 separate variables.</source>
          <target state="translated">A tupla com cinco elementos a ser desconstruída em cinco variáveis separadas.</target>       </trans-unit>
        <trans-unit id="4503" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``5(System.Tuple{``0,``1,``2,``3,``4},``0@,``1@,``2@,``3@,``4@)">
          <source>The value of the first element.</source>
          <target state="translated">O valor do primeiro elemento.</target>       </trans-unit>
        <trans-unit id="4504" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``5(System.Tuple{``0,``1,``2,``3,``4},``0@,``1@,``2@,``3@,``4@)">
          <source>The value of the second element.</source>
          <target state="translated">O valor do segundo elemento.</target>       </trans-unit>
        <trans-unit id="4505" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``5(System.Tuple{``0,``1,``2,``3,``4},``0@,``1@,``2@,``3@,``4@)">
          <source>The value of the third element.</source>
          <target state="translated">O valor do terceiro elemento.</target>       </trans-unit>
        <trans-unit id="4506" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``5(System.Tuple{``0,``1,``2,``3,``4},``0@,``1@,``2@,``3@,``4@)">
          <source>The value of the fourth element.</source>
          <target state="translated">O valor do quarto elemento.</target>       </trans-unit>
        <trans-unit id="4507" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``5(System.Tuple{``0,``1,``2,``3,``4},``0@,``1@,``2@,``3@,``4@)">
          <source>The value of the fifth element.</source>
          <target state="translated">O valor do quinto elemento.</target>       </trans-unit>
        <trans-unit id="4508" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``5(System.Tuple{``0,``1,``2,``3,``4},``0@,``1@,``2@,``3@,``4@)">
          <source>Deconstructs a tuple with 5 elements into separate variables.</source>
          <target state="translated">Desconstrói uma tupla com cinco elementos em variáveis separadas.</target>       </trans-unit>
        <trans-unit id="4509" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``6(System.Tuple{``0,``1,``2,``3,``4,``5},``0@,``1@,``2@,``3@,``4@,``5@)">
          <source>The type of the first element.</source>
          <target state="translated">O tipo do primeiro elemento.</target>       </trans-unit>
        <trans-unit id="4510" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``6(System.Tuple{``0,``1,``2,``3,``4,``5},``0@,``1@,``2@,``3@,``4@,``5@)">
          <source>The type of the second element.</source>
          <target state="translated">O tipo do segundo elemento.</target>       </trans-unit>
        <trans-unit id="4511" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``6(System.Tuple{``0,``1,``2,``3,``4,``5},``0@,``1@,``2@,``3@,``4@,``5@)">
          <source>The type of the third element.</source>
          <target state="translated">O tipo do terceiro elemento.</target>       </trans-unit>
        <trans-unit id="4512" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``6(System.Tuple{``0,``1,``2,``3,``4,``5},``0@,``1@,``2@,``3@,``4@,``5@)">
          <source>The type of the fourth element.</source>
          <target state="translated">O tipo do quarto elemento.</target>       </trans-unit>
        <trans-unit id="4513" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``6(System.Tuple{``0,``1,``2,``3,``4,``5},``0@,``1@,``2@,``3@,``4@,``5@)">
          <source>The type of the fifth element.</source>
          <target state="translated">O tipo do quinto elemento.</target>       </trans-unit>
        <trans-unit id="4514" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``6(System.Tuple{``0,``1,``2,``3,``4,``5},``0@,``1@,``2@,``3@,``4@,``5@)">
          <source>The type of the sixth element.</source>
          <target state="translated">O tipo do sexto elemento.</target>       </trans-unit>
        <trans-unit id="4515" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``6(System.Tuple{``0,``1,``2,``3,``4,``5},``0@,``1@,``2@,``3@,``4@,``5@)">
          <source>The 6-element tuple to deconstruct into 6 separate variables.</source>
          <target state="translated">A tupla com seis elementos a ser desconstruída em seis variáveis separadas.</target>       </trans-unit>
        <trans-unit id="4516" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``6(System.Tuple{``0,``1,``2,``3,``4,``5},``0@,``1@,``2@,``3@,``4@,``5@)">
          <source>The value of the first element.</source>
          <target state="translated">O valor do primeiro elemento.</target>       </trans-unit>
        <trans-unit id="4517" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``6(System.Tuple{``0,``1,``2,``3,``4,``5},``0@,``1@,``2@,``3@,``4@,``5@)">
          <source>The value of the second element.</source>
          <target state="translated">O valor do segundo elemento.</target>       </trans-unit>
        <trans-unit id="4518" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``6(System.Tuple{``0,``1,``2,``3,``4,``5},``0@,``1@,``2@,``3@,``4@,``5@)">
          <source>The value of the third element.</source>
          <target state="translated">O valor do terceiro elemento.</target>       </trans-unit>
        <trans-unit id="4519" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``6(System.Tuple{``0,``1,``2,``3,``4,``5},``0@,``1@,``2@,``3@,``4@,``5@)">
          <source>The value of the fourth element.</source>
          <target state="translated">O valor do quarto elemento.</target>       </trans-unit>
        <trans-unit id="4520" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``6(System.Tuple{``0,``1,``2,``3,``4,``5},``0@,``1@,``2@,``3@,``4@,``5@)">
          <source>The value of the fifth element.</source>
          <target state="translated">O valor do quinto elemento.</target>       </trans-unit>
        <trans-unit id="4521" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``6(System.Tuple{``0,``1,``2,``3,``4,``5},``0@,``1@,``2@,``3@,``4@,``5@)">
          <source>The value of the sixth element.</source>
          <target state="translated">O valor do sexto elemento.</target>       </trans-unit>
        <trans-unit id="4522" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``6(System.Tuple{``0,``1,``2,``3,``4,``5},``0@,``1@,``2@,``3@,``4@,``5@)">
          <source>Deconstructs a tuple with 6 elements into separate variables.</source>
          <target state="translated">Desconstrói uma tupla com seis elementos em variáveis separadas.</target>       </trans-unit>
        <trans-unit id="4523" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``7(System.Tuple{``0,``1,``2,``3,``4,``5,``6},``0@,``1@,``2@,``3@,``4@,``5@,``6@)">
          <source>The type of the first element.</source>
          <target state="translated">O tipo do primeiro elemento.</target>       </trans-unit>
        <trans-unit id="4524" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``7(System.Tuple{``0,``1,``2,``3,``4,``5,``6},``0@,``1@,``2@,``3@,``4@,``5@,``6@)">
          <source>The type of the second element.</source>
          <target state="translated">O tipo do segundo elemento.</target>       </trans-unit>
        <trans-unit id="4525" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``7(System.Tuple{``0,``1,``2,``3,``4,``5,``6},``0@,``1@,``2@,``3@,``4@,``5@,``6@)">
          <source>The type of the third element.</source>
          <target state="translated">O tipo do terceiro elemento.</target>       </trans-unit>
        <trans-unit id="4526" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``7(System.Tuple{``0,``1,``2,``3,``4,``5,``6},``0@,``1@,``2@,``3@,``4@,``5@,``6@)">
          <source>The type of the fourth element.</source>
          <target state="translated">O tipo do quarto elemento.</target>       </trans-unit>
        <trans-unit id="4527" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``7(System.Tuple{``0,``1,``2,``3,``4,``5,``6},``0@,``1@,``2@,``3@,``4@,``5@,``6@)">
          <source>The type of the fifth element.</source>
          <target state="translated">O tipo do quinto elemento.</target>       </trans-unit>
        <trans-unit id="4528" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``7(System.Tuple{``0,``1,``2,``3,``4,``5,``6},``0@,``1@,``2@,``3@,``4@,``5@,``6@)">
          <source>The type of the sixth element.</source>
          <target state="translated">O tipo do sexto elemento.</target>       </trans-unit>
        <trans-unit id="4529" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``7(System.Tuple{``0,``1,``2,``3,``4,``5,``6},``0@,``1@,``2@,``3@,``4@,``5@,``6@)">
          <source>The type of the seventh element.</source>
          <target state="translated">O tipo do sétimo elemento.</target>       </trans-unit>
        <trans-unit id="4530" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``7(System.Tuple{``0,``1,``2,``3,``4,``5,``6},``0@,``1@,``2@,``3@,``4@,``5@,``6@)">
          <source>The 7-element tuple to deconstruct into 7 separate variables.</source>
          <target state="translated">A tupla com sete elementos a ser desconstruída em sete variáveis separadas.</target>       </trans-unit>
        <trans-unit id="4531" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``7(System.Tuple{``0,``1,``2,``3,``4,``5,``6},``0@,``1@,``2@,``3@,``4@,``5@,``6@)">
          <source>The value of the first element.</source>
          <target state="translated">O valor do primeiro elemento.</target>       </trans-unit>
        <trans-unit id="4532" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``7(System.Tuple{``0,``1,``2,``3,``4,``5,``6},``0@,``1@,``2@,``3@,``4@,``5@,``6@)">
          <source>The value of the second element.</source>
          <target state="translated">O valor do segundo elemento.</target>       </trans-unit>
        <trans-unit id="4533" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``7(System.Tuple{``0,``1,``2,``3,``4,``5,``6},``0@,``1@,``2@,``3@,``4@,``5@,``6@)">
          <source>The value of the third element.</source>
          <target state="translated">O valor do terceiro elemento.</target>       </trans-unit>
        <trans-unit id="4534" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``7(System.Tuple{``0,``1,``2,``3,``4,``5,``6},``0@,``1@,``2@,``3@,``4@,``5@,``6@)">
          <source>The value of the fourth element.</source>
          <target state="translated">O valor do quarto elemento.</target>       </trans-unit>
        <trans-unit id="4535" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``7(System.Tuple{``0,``1,``2,``3,``4,``5,``6},``0@,``1@,``2@,``3@,``4@,``5@,``6@)">
          <source>The value of the fifth element.</source>
          <target state="translated">O valor do quinto elemento.</target>       </trans-unit>
        <trans-unit id="4536" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``7(System.Tuple{``0,``1,``2,``3,``4,``5,``6},``0@,``1@,``2@,``3@,``4@,``5@,``6@)">
          <source>The value of the sixth element.</source>
          <target state="translated">O valor do sexto elemento.</target>       </trans-unit>
        <trans-unit id="4537" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``7(System.Tuple{``0,``1,``2,``3,``4,``5,``6},``0@,``1@,``2@,``3@,``4@,``5@,``6@)">
          <source>The value of the seventh element.</source>
          <target state="translated">O valor do sétimo elemento.</target>       </trans-unit>
        <trans-unit id="4538" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``7(System.Tuple{``0,``1,``2,``3,``4,``5,``6},``0@,``1@,``2@,``3@,``4@,``5@,``6@)">
          <source>Deconstructs a tuple with 7 elements into separate variables.</source>
          <target state="translated">Desconstrói uma tupla com sete elementos em variáveis separadas.</target>       </trans-unit>
        <trans-unit id="4539" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``8(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@)">
          <source>The type of the first element.</source>
          <target state="translated">O tipo do primeiro elemento.</target>       </trans-unit>
        <trans-unit id="4540" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``8(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@)">
          <source>The type of the second element.</source>
          <target state="translated">O tipo do segundo elemento.</target>       </trans-unit>
        <trans-unit id="4541" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``8(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@)">
          <source>The type of the third element.</source>
          <target state="translated">O tipo do terceiro elemento.</target>       </trans-unit>
        <trans-unit id="4542" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``8(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@)">
          <source>The type of the fourth element.</source>
          <target state="translated">O tipo do quarto elemento.</target>       </trans-unit>
        <trans-unit id="4543" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``8(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@)">
          <source>The type of the fifth element.</source>
          <target state="translated">O tipo do quinto elemento.</target>       </trans-unit>
        <trans-unit id="4544" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``8(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@)">
          <source>The type of the sixth element.</source>
          <target state="translated">O tipo do sexto elemento.</target>       </trans-unit>
        <trans-unit id="4545" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``8(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@)">
          <source>The type of the seventh element.</source>
          <target state="translated">O tipo do sétimo elemento.</target>       </trans-unit>
        <trans-unit id="4546" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``8(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@)">
          <source>The type of the eighth element.</source>
          <target state="translated">O tipo do oitavo elemento.</target>       </trans-unit>
        <trans-unit id="4547" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``8(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@)">
          <source>The 8-element tuple to deconstruct into 8 separate variables.</source>
          <target state="translated">A tupla com oito elementos a ser desconstruída em oito variáveis separadas.</target>       </trans-unit>
        <trans-unit id="4548" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``8(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@)">
          <source>The value of the first element.</source>
          <target state="translated">O valor do primeiro elemento.</target>       </trans-unit>
        <trans-unit id="4549" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``8(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@)">
          <source>The value of the second element.</source>
          <target state="translated">O valor do segundo elemento.</target>       </trans-unit>
        <trans-unit id="4550" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``8(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@)">
          <source>The value of the third element.</source>
          <target state="translated">O valor do terceiro elemento.</target>       </trans-unit>
        <trans-unit id="4551" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``8(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@)">
          <source>The value of the fourth element.</source>
          <target state="translated">O valor do quarto elemento.</target>       </trans-unit>
        <trans-unit id="4552" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``8(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@)">
          <source>The value of the fifth element.</source>
          <target state="translated">O valor do quinto elemento.</target>       </trans-unit>
        <trans-unit id="4553" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``8(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@)">
          <source>The value of the sixth element.</source>
          <target state="translated">O valor do sexto elemento.</target>       </trans-unit>
        <trans-unit id="4554" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``8(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@)">
          <source>The value of the seventh element.</source>
          <target state="translated">O valor do sétimo elemento.</target>       </trans-unit>
        <trans-unit id="4555" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``8(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@)">
          <source>The value of the eighth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">O valor do oitavo elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4556" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``8(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@)">
          <source>Deconstructs a tuple with 8 elements into separate variables.</source>
          <target state="translated">Desconstrói uma tupla com oito elementos em variáveis separadas.</target>       </trans-unit>
        <trans-unit id="4557" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``9(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@)">
          <source>The type of the first element.</source>
          <target state="translated">O tipo do primeiro elemento.</target>       </trans-unit>
        <trans-unit id="4558" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``9(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@)">
          <source>The type of the second element.</source>
          <target state="translated">O tipo do segundo elemento.</target>       </trans-unit>
        <trans-unit id="4559" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``9(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@)">
          <source>The type of the third element.</source>
          <target state="translated">O tipo do terceiro elemento.</target>       </trans-unit>
        <trans-unit id="4560" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``9(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@)">
          <source>The type of the fourth element.</source>
          <target state="translated">O tipo do quarto elemento.</target>       </trans-unit>
        <trans-unit id="4561" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``9(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@)">
          <source>The type of the fifth element.</source>
          <target state="translated">O tipo do quinto elemento.</target>       </trans-unit>
        <trans-unit id="4562" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``9(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@)">
          <source>The type of the sixth element.</source>
          <target state="translated">O tipo do sexto elemento.</target>       </trans-unit>
        <trans-unit id="4563" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``9(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@)">
          <source>The type of the seventh element.</source>
          <target state="translated">O tipo do sétimo elemento.</target>       </trans-unit>
        <trans-unit id="4564" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``9(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@)">
          <source>The type of the eighth element.</source>
          <target state="translated">O tipo do oitavo elemento.</target>       </trans-unit>
        <trans-unit id="4565" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``9(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@)">
          <source>The type of the ninth element.</source>
          <target state="translated">O tipo do nono elemento.</target>       </trans-unit>
        <trans-unit id="4566" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``9(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@)">
          <source>The 9-element tuple to deconstruct into 9 separate variables.</source>
          <target state="translated">A tupla com nove elementos a ser desconstruída em nove variáveis separadas.</target>       </trans-unit>
        <trans-unit id="4567" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``9(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@)">
          <source>The value of the first element.</source>
          <target state="translated">O valor do primeiro elemento.</target>       </trans-unit>
        <trans-unit id="4568" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``9(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@)">
          <source>The value of the second element.</source>
          <target state="translated">O valor do segundo elemento.</target>       </trans-unit>
        <trans-unit id="4569" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``9(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@)">
          <source>The value of the third element.</source>
          <target state="translated">O valor do terceiro elemento.</target>       </trans-unit>
        <trans-unit id="4570" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``9(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@)">
          <source>The value of the fourth element.</source>
          <target state="translated">O valor do quarto elemento.</target>       </trans-unit>
        <trans-unit id="4571" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``9(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@)">
          <source>The value of the fifth element.</source>
          <target state="translated">O valor do quinto elemento.</target>       </trans-unit>
        <trans-unit id="4572" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``9(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@)">
          <source>The value of the sixth element.</source>
          <target state="translated">O valor do sexto elemento.</target>       </trans-unit>
        <trans-unit id="4573" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``9(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@)">
          <source>The value of the seventh element.</source>
          <target state="translated">O valor do sétimo elemento.</target>       </trans-unit>
        <trans-unit id="4574" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``9(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@)">
          <source>The value of the eighth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">O valor do oitavo elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4575" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``9(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@)">
          <source>The value of the ninth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">O valor do nono elemento ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4576" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``9(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@)">
          <source>Deconstructs a tuple with 9 elements into separate variables.</source>
          <target state="translated">Desconstrói uma tupla com nove elementos em variáveis separadas.</target>       </trans-unit>
        <trans-unit id="4577" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``1(System.ValueTuple{``0})">
          <source>The type of the first element.</source>
          <target state="translated">O tipo do primeiro elemento.</target>       </trans-unit>
        <trans-unit id="4578" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToTuple``1(System.ValueTuple{``0})">
          <source>The value tuple instance to convert to a tuple.</source>
          <target state="translated">A instância de tupla de valor a ser convertida em uma tupla.</target>       </trans-unit>
        <trans-unit id="4579" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToTuple``1(System.ValueTuple{``0})">
          <source>Converts an instance of the <ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> structure to an instance of the  <ph id="ph2">&lt;see langword="Tuple" /&gt;</ph> class.</source>
          <target state="translated">Converte uma instância da estrutura <ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> em uma instância da classe <ph id="ph2">&lt;see langword="Tuple" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4580" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``10(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9}})">
          <source>The type of the first element.</source>
          <target state="translated">O tipo do primeiro elemento.</target>       </trans-unit>
        <trans-unit id="4581" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``10(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9}})">
          <source>The type of the second element.</source>
          <target state="translated">O tipo do segundo elemento.</target>       </trans-unit>
        <trans-unit id="4582" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``10(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9}})">
          <source>The type of the third element.</source>
          <target state="translated">O tipo do terceiro elemento.</target>       </trans-unit>
        <trans-unit id="4583" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``10(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9}})">
          <source>The type of the fourth element.</source>
          <target state="translated">O tipo do quarto elemento.</target>       </trans-unit>
        <trans-unit id="4584" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``10(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9}})">
          <source>The type of the fifth element.</source>
          <target state="translated">O tipo do quinto elemento.</target>       </trans-unit>
        <trans-unit id="4585" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``10(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9}})">
          <source>The type of the sixth element.</source>
          <target state="translated">O tipo do sexto elemento.</target>       </trans-unit>
        <trans-unit id="4586" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``10(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9}})">
          <source>The type of the seventh element.</source>
          <target state="translated">O tipo do sétimo elemento.</target>       </trans-unit>
        <trans-unit id="4587" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``10(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9}})">
          <source>The type of the eighth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento oitavo, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4588" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``10(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9}})">
          <source>The type of the ninth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento nono, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4589" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``10(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9}})">
          <source>The type of the tenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento décimo, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4590" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToTuple``10(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9}})">
          <source>The value tuple instance to convert to a tuple.</source>
          <target state="translated">A instância de tupla de valor a ser convertida em uma tupla.</target>       </trans-unit>
        <trans-unit id="4591" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToTuple``10(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9}})">
          <source>Converts an instance of the <ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> structure to an instance of the  <ph id="ph2">&lt;see langword="Tuple" /&gt;</ph> class.</source>
          <target state="translated">Converte uma instância da estrutura <ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> em uma instância da classe <ph id="ph2">&lt;see langword="Tuple" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4592" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``11(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10}})">
          <source>The type of the first element.</source>
          <target state="translated">O tipo do primeiro elemento.</target>       </trans-unit>
        <trans-unit id="4593" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``11(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10}})">
          <source>The type of the second element.</source>
          <target state="translated">O tipo do segundo elemento.</target>       </trans-unit>
        <trans-unit id="4594" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``11(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10}})">
          <source>The type of the third element.</source>
          <target state="translated">O tipo do terceiro elemento.</target>       </trans-unit>
        <trans-unit id="4595" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``11(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10}})">
          <source>The type of the fourth element.</source>
          <target state="translated">O tipo do quarto elemento.</target>       </trans-unit>
        <trans-unit id="4596" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``11(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10}})">
          <source>The type of the fifth element.</source>
          <target state="translated">O tipo do quinto elemento.</target>       </trans-unit>
        <trans-unit id="4597" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``11(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10}})">
          <source>The type of the sixth element.</source>
          <target state="translated">O tipo do sexto elemento.</target>       </trans-unit>
        <trans-unit id="4598" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``11(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10}})">
          <source>The type of the seventh element.</source>
          <target state="translated">O tipo do sétimo elemento.</target>       </trans-unit>
        <trans-unit id="4599" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``11(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10}})">
          <source>The type of the eighth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento oitavo, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4600" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``11(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10}})">
          <source>The type of the ninth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento nono, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4601" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``11(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10}})">
          <source>The type of the tenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento décimo, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4602" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``11(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10}})">
          <source>The type of the eleventh element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento décimo-primeiro, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4603" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToTuple``11(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10}})">
          <source>The value tuple instance to convert to a tuple.</source>
          <target state="translated">A instância de tupla de valor a ser convertida em uma tupla.</target>       </trans-unit>
        <trans-unit id="4604" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToTuple``11(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10}})">
          <source>Converts an instance of the <ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> structure to an instance of the  <ph id="ph2">&lt;see langword="Tuple" /&gt;</ph> class.</source>
          <target state="translated">Converte uma instância da estrutura <ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> em uma instância da classe <ph id="ph2">&lt;see langword="Tuple" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4605" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``12(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11}})">
          <source>The type of the first element.</source>
          <target state="translated">O tipo do primeiro elemento.</target>       </trans-unit>
        <trans-unit id="4606" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``12(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11}})">
          <source>The type of the second element.</source>
          <target state="translated">O tipo do segundo elemento.</target>       </trans-unit>
        <trans-unit id="4607" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``12(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11}})">
          <source>The type of the third element.</source>
          <target state="translated">O tipo do terceiro elemento.</target>       </trans-unit>
        <trans-unit id="4608" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``12(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11}})">
          <source>The type of the fourth element.</source>
          <target state="translated">O tipo do quarto elemento.</target>       </trans-unit>
        <trans-unit id="4609" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``12(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11}})">
          <source>The type of the fifth element.</source>
          <target state="translated">O tipo do quinto elemento.</target>       </trans-unit>
        <trans-unit id="4610" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``12(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11}})">
          <source>The type of the sixth element.</source>
          <target state="translated">O tipo do sexto elemento.</target>       </trans-unit>
        <trans-unit id="4611" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``12(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11}})">
          <source>The type of the seventh element.</source>
          <target state="translated">O tipo do sétimo elemento.</target>       </trans-unit>
        <trans-unit id="4612" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``12(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11}})">
          <source>The type of the eighth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento oitavo, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4613" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``12(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11}})">
          <source>The type of the ninth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento nono, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4614" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``12(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11}})">
          <source>The type of the tenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento décimo, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4615" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``12(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11}})">
          <source>The type of the eleventh element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento décimo-primeiro, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4616" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``12(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11}})">
          <source>The type of the twelfth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento décimo-segundo, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4617" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToTuple``12(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11}})">
          <source>The value tuple instance to convert to a tuple.</source>
          <target state="translated">A instância de tupla de valor a ser convertida em uma tupla.</target>       </trans-unit>
        <trans-unit id="4618" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToTuple``12(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11}})">
          <source>Converts an instance of the <ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> structure to an instance of the  <ph id="ph2">&lt;see langword="Tuple" /&gt;</ph> class.</source>
          <target state="translated">Converte uma instância da estrutura <ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> em uma instância da classe <ph id="ph2">&lt;see langword="Tuple" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4619" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``13(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12}})">
          <source>The type of the first element.</source>
          <target state="translated">O tipo do primeiro elemento.</target>       </trans-unit>
        <trans-unit id="4620" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``13(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12}})">
          <source>The type of the second element.</source>
          <target state="translated">O tipo do segundo elemento.</target>       </trans-unit>
        <trans-unit id="4621" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``13(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12}})">
          <source>The type of the third element.</source>
          <target state="translated">O tipo do terceiro elemento.</target>       </trans-unit>
        <trans-unit id="4622" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``13(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12}})">
          <source>The type of the fourth element.</source>
          <target state="translated">O tipo do quarto elemento.</target>       </trans-unit>
        <trans-unit id="4623" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``13(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12}})">
          <source>The type of the fifth element.</source>
          <target state="translated">O tipo do quinto elemento.</target>       </trans-unit>
        <trans-unit id="4624" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``13(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12}})">
          <source>The type of the sixth element.</source>
          <target state="translated">O tipo do sexto elemento.</target>       </trans-unit>
        <trans-unit id="4625" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``13(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12}})">
          <source>The type of the seventh element.</source>
          <target state="translated">O tipo do sétimo elemento.</target>       </trans-unit>
        <trans-unit id="4626" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``13(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12}})">
          <source>The type of the eighth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento oitavo, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4627" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``13(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12}})">
          <source>The type of the ninth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento nono, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4628" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``13(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12}})">
          <source>The type of the tenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento décimo, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4629" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``13(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12}})">
          <source>The type of the eleventh element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento décimo-primeiro, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4630" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``13(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12}})">
          <source>The type of the twelfth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento décimo-segundo, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4631" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``13(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12}})">
          <source>The type of the thirteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento décimo terceiro, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4632" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToTuple``13(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12}})">
          <source>The value tuple instance to convert to a tuple.</source>
          <target state="translated">A instância de tupla de valor a ser convertida em uma tupla.</target>       </trans-unit>
        <trans-unit id="4633" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToTuple``13(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12}})">
          <source>Converts an instance of the <ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> structure to an instance of the  <ph id="ph2">&lt;see langword="Tuple" /&gt;</ph> class.</source>
          <target state="translated">Converte uma instância da estrutura <ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> em uma instância da classe <ph id="ph2">&lt;see langword="Tuple" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4634" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``14(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13}})">
          <source>The type of the first element.</source>
          <target state="translated">O tipo do primeiro elemento.</target>       </trans-unit>
        <trans-unit id="4635" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``14(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13}})">
          <source>The type of the second element.</source>
          <target state="translated">O tipo do segundo elemento.</target>       </trans-unit>
        <trans-unit id="4636" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``14(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13}})">
          <source>The type of the third element.</source>
          <target state="translated">O tipo do terceiro elemento.</target>       </trans-unit>
        <trans-unit id="4637" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``14(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13}})">
          <source>The type of the fourth element.</source>
          <target state="translated">O tipo do quarto elemento.</target>       </trans-unit>
        <trans-unit id="4638" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``14(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13}})">
          <source>The type of the fifth element.</source>
          <target state="translated">O tipo do quinto elemento.</target>       </trans-unit>
        <trans-unit id="4639" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``14(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13}})">
          <source>The type of the sixth element.</source>
          <target state="translated">O tipo do sexto elemento.</target>       </trans-unit>
        <trans-unit id="4640" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``14(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13}})">
          <source>The type of the seventh element.</source>
          <target state="translated">O tipo do sétimo elemento.</target>       </trans-unit>
        <trans-unit id="4641" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``14(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13}})">
          <source>The type of the eighth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento oitavo, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4642" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``14(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13}})">
          <source>The type of the ninth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento nono, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4643" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``14(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13}})">
          <source>The type of the tenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento décimo, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4644" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``14(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13}})">
          <source>The type of the eleventh element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento décimo-primeiro, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4645" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``14(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13}})">
          <source>The type of the twelfth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento décimo-segundo, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4646" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``14(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13}})">
          <source>The type of the thirteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento décimo terceiro, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4647" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``14(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13}})">
          <source>The type of the fourteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item7" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento décimo quarto, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item7" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4648" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToTuple``14(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13}})">
          <source>The value tuple instance to convert to a tuple.</source>
          <target state="translated">A instância de tupla de valor a ser convertida em uma tupla.</target>       </trans-unit>
        <trans-unit id="4649" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToTuple``14(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13}})">
          <source>Converts an instance of the <ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> structure to an instance of the  <ph id="ph2">&lt;see langword="Tuple" /&gt;</ph> class.</source>
          <target state="translated">Converte uma instância da estrutura <ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> em uma instância da classe <ph id="ph2">&lt;see langword="Tuple" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4650" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``15(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14}}})">
          <source>The type of the first element.</source>
          <target state="translated">O tipo do primeiro elemento.</target>       </trans-unit>
        <trans-unit id="4651" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``15(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14}}})">
          <source>The type of the second element.</source>
          <target state="translated">O tipo do segundo elemento.</target>       </trans-unit>
        <trans-unit id="4652" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``15(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14}}})">
          <source>The type of the third element.</source>
          <target state="translated">O tipo do terceiro elemento.</target>       </trans-unit>
        <trans-unit id="4653" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``15(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14}}})">
          <source>The type of the fourth element.</source>
          <target state="translated">O tipo do quarto elemento.</target>       </trans-unit>
        <trans-unit id="4654" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``15(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14}}})">
          <source>The type of the fifth element.</source>
          <target state="translated">O tipo do quinto elemento.</target>       </trans-unit>
        <trans-unit id="4655" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``15(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14}}})">
          <source>The type of the sixth element.</source>
          <target state="translated">O tipo do sexto elemento.</target>       </trans-unit>
        <trans-unit id="4656" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``15(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14}}})">
          <source>The type of the seventh element.</source>
          <target state="translated">O tipo do sétimo elemento.</target>       </trans-unit>
        <trans-unit id="4657" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``15(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14}}})">
          <source>The type of the eighth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento oitavo, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4658" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``15(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14}}})">
          <source>The type of the ninth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento nono, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4659" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``15(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14}}})">
          <source>The type of the tenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento décimo, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4660" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``15(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14}}})">
          <source>The type of the eleventh element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento décimo-primeiro, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4661" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``15(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14}}})">
          <source>The type of the twelfth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento décimo-segundo, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4662" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``15(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14}}})">
          <source>The type of the thirteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento décimo terceiro, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4663" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``15(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14}}})">
          <source>The type of the fourteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item7" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento décimo quarto, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item7" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4664" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``15(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14}}})">
          <source>The type of the fifteenth element., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">O tipo do décimo elemento., ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4665" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToTuple``15(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14}}})">
          <source>The value tuple instance to convert to a tuple.</source>
          <target state="translated">A instância de tupla de valor a ser convertida em uma tupla.</target>       </trans-unit>
        <trans-unit id="4666" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToTuple``15(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14}}})">
          <source>Converts an instance of the <ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> structure to an instance of the  <ph id="ph2">&lt;see langword="Tuple" /&gt;</ph> class.</source>
          <target state="translated">Converte uma instância da estrutura <ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> em uma instância da classe <ph id="ph2">&lt;see langword="Tuple" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4667" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``16(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15}}})">
          <source>The type of the first element.</source>
          <target state="translated">O tipo do primeiro elemento.</target>       </trans-unit>
        <trans-unit id="4668" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``16(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15}}})">
          <source>The type of the second element.</source>
          <target state="translated">O tipo do segundo elemento.</target>       </trans-unit>
        <trans-unit id="4669" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``16(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15}}})">
          <source>The type of the third element.</source>
          <target state="translated">O tipo do terceiro elemento.</target>       </trans-unit>
        <trans-unit id="4670" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``16(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15}}})">
          <source>The type of the fourth element.</source>
          <target state="translated">O tipo do quarto elemento.</target>       </trans-unit>
        <trans-unit id="4671" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``16(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15}}})">
          <source>The type of the fifth element.</source>
          <target state="translated">O tipo do quinto elemento.</target>       </trans-unit>
        <trans-unit id="4672" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``16(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15}}})">
          <source>The type of the sixth element.</source>
          <target state="translated">O tipo do sexto elemento.</target>       </trans-unit>
        <trans-unit id="4673" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``16(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15}}})">
          <source>The type of the seventh element.</source>
          <target state="translated">O tipo do sétimo elemento.</target>       </trans-unit>
        <trans-unit id="4674" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``16(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15}}})">
          <source>The type of the eighth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento oitavo, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4675" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``16(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15}}})">
          <source>The type of the ninth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento nono, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4676" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``16(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15}}})">
          <source>The type of the tenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento décimo, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4677" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``16(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15}}})">
          <source>The type of the eleventh element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento décimo-primeiro, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4678" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``16(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15}}})">
          <source>The type of the twelfth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento décimo-segundo, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4679" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``16(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15}}})">
          <source>The type of the thirteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento décimo terceiro, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4680" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``16(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15}}})">
          <source>The type of the fourteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item7" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento décimo quarto, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item7" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4681" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``16(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15}}})">
          <source>The type of the fifteenth element., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">O tipo do décimo elemento., ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4682" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``16(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15}}})">
          <source>The type of the sixteenth element, ., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento 16,., ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4683" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToTuple``16(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15}}})">
          <source>The value tuple instance to convert to a tuple.</source>
          <target state="translated">A instância de tupla de valor a ser convertida em uma tupla.</target>       </trans-unit>
        <trans-unit id="4684" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToTuple``16(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15}}})">
          <source>Converts an instance of the <ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> structure to an instance of the  <ph id="ph2">&lt;see langword="Tuple" /&gt;</ph> class.</source>
          <target state="translated">Converte uma instância da estrutura <ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> em uma instância da classe <ph id="ph2">&lt;see langword="Tuple" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4685" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``17(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16}}})">
          <source>The type of the first element.</source>
          <target state="translated">O tipo do primeiro elemento.</target>       </trans-unit>
        <trans-unit id="4686" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``17(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16}}})">
          <source>The type of the second element.</source>
          <target state="translated">O tipo do segundo elemento.</target>       </trans-unit>
        <trans-unit id="4687" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``17(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16}}})">
          <source>The type of the third element.</source>
          <target state="translated">O tipo do terceiro elemento.</target>       </trans-unit>
        <trans-unit id="4688" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``17(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16}}})">
          <source>The type of the fourth element.</source>
          <target state="translated">O tipo do quarto elemento.</target>       </trans-unit>
        <trans-unit id="4689" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``17(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16}}})">
          <source>The type of the fifth element.</source>
          <target state="translated">O tipo do quinto elemento.</target>       </trans-unit>
        <trans-unit id="4690" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``17(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16}}})">
          <source>The type of the sixth element.</source>
          <target state="translated">O tipo do sexto elemento.</target>       </trans-unit>
        <trans-unit id="4691" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``17(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16}}})">
          <source>The type of the seventh element.</source>
          <target state="translated">O tipo do sétimo elemento.</target>       </trans-unit>
        <trans-unit id="4692" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``17(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16}}})">
          <source>The type of the eighth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento oitavo, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4693" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``17(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16}}})">
          <source>The type of the ninth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento nono, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4694" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``17(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16}}})">
          <source>The type of the tenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento décimo, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4695" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``17(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16}}})">
          <source>The type of the eleventh element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento décimo-primeiro, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4696" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``17(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16}}})">
          <source>The type of the twelfth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento décimo-segundo, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4697" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``17(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16}}})">
          <source>The type of the thirteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento décimo terceiro, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4698" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``17(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16}}})">
          <source>The type of the fourteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item7" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento décimo quarto, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item7" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4699" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``17(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16}}})">
          <source>The type of the fifteenth element., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">O tipo do décimo elemento., ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4700" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``17(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16}}})">
          <source>The type of the sixteenth element, ., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento 16,., ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4701" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``17(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16}}})">
          <source>The type of the seventeenth element., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item3" /&gt;</ph>.</source>
          <target state="translated">O tipo de 17 elemento., ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item3" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4702" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToTuple``17(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16}}})">
          <source>The value tuple instance to convert to a tuple.</source>
          <target state="translated">A instância de tupla de valor a ser convertida em uma tupla.</target>       </trans-unit>
        <trans-unit id="4703" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToTuple``17(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16}}})">
          <source>Converts an instance of the <ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> structure to an instance of the  <ph id="ph2">&lt;see langword="Tuple" /&gt;</ph> class.</source>
          <target state="translated">Converte uma instância da estrutura <ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> em uma instância da classe <ph id="ph2">&lt;see langword="Tuple" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4704" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``18(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17}}})">
          <source>The type of the first element.</source>
          <target state="translated">O tipo do primeiro elemento.</target>       </trans-unit>
        <trans-unit id="4705" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``18(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17}}})">
          <source>The type of the second element.</source>
          <target state="translated">O tipo do segundo elemento.</target>       </trans-unit>
        <trans-unit id="4706" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``18(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17}}})">
          <source>The type of the third element.</source>
          <target state="translated">O tipo do terceiro elemento.</target>       </trans-unit>
        <trans-unit id="4707" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``18(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17}}})">
          <source>The type of the fourth element.</source>
          <target state="translated">O tipo do quarto elemento.</target>       </trans-unit>
        <trans-unit id="4708" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``18(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17}}})">
          <source>The type of the fifth element.</source>
          <target state="translated">O tipo do quinto elemento.</target>       </trans-unit>
        <trans-unit id="4709" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``18(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17}}})">
          <source>The type of the sixth element.</source>
          <target state="translated">O tipo do sexto elemento.</target>       </trans-unit>
        <trans-unit id="4710" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``18(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17}}})">
          <source>The type of the seventh element.</source>
          <target state="translated">O tipo do sétimo elemento.</target>       </trans-unit>
        <trans-unit id="4711" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``18(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17}}})">
          <source>The type of the eighth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento oitavo, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4712" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``18(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17}}})">
          <source>The type of the ninth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento nono, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4713" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``18(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17}}})">
          <source>The type of the tenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento décimo, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4714" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``18(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17}}})">
          <source>The type of the eleventh element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento décimo-primeiro, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4715" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``18(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17}}})">
          <source>The type of the twelfth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento décimo-segundo, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4716" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``18(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17}}})">
          <source>The type of the thirteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento décimo terceiro, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4717" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``18(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17}}})">
          <source>The type of the fourteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item7" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento décimo quarto, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item7" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4718" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``18(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17}}})">
          <source>The type of the fifteenth element., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">O tipo do décimo elemento., ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4719" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``18(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17}}})">
          <source>The type of the sixteenth element, ., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento 16,., ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4720" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``18(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17}}})">
          <source>The type of the seventeenth element., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item3" /&gt;</ph>.</source>
          <target state="translated">O tipo de 17 elemento., ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item3" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4721" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``18(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17}}})">
          <source>The type of the eighteenth element., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item4" /&gt;</ph>.</source>
          <target state="translated">O tipo do décimo oitavo elemento., ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item4" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4722" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToTuple``18(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17}}})">
          <source>The value tuple instance to convert to a tuple.</source>
          <target state="translated">A instância de tupla de valor a ser convertida em uma tupla.</target>       </trans-unit>
        <trans-unit id="4723" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToTuple``18(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17}}})">
          <source>Converts an instance of the <ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> structure to an instance of the  <ph id="ph2">&lt;see langword="Tuple" /&gt;</ph> class.</source>
          <target state="translated">Converte uma instância da estrutura <ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> em uma instância da classe <ph id="ph2">&lt;see langword="Tuple" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4724" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``19(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18}}})">
          <source>The type of the first element.</source>
          <target state="translated">O tipo do primeiro elemento.</target>       </trans-unit>
        <trans-unit id="4725" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``19(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18}}})">
          <source>The type of the second element.</source>
          <target state="translated">O tipo do segundo elemento.</target>       </trans-unit>
        <trans-unit id="4726" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``19(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18}}})">
          <source>The type of the third element.</source>
          <target state="translated">O tipo do terceiro elemento.</target>       </trans-unit>
        <trans-unit id="4727" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``19(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18}}})">
          <source>The type of the fourth element.</source>
          <target state="translated">O tipo do quarto elemento.</target>       </trans-unit>
        <trans-unit id="4728" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``19(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18}}})">
          <source>The type of the fifth element.</source>
          <target state="translated">O tipo do quinto elemento.</target>       </trans-unit>
        <trans-unit id="4729" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``19(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18}}})">
          <source>The type of the sixth element.</source>
          <target state="translated">O tipo do sexto elemento.</target>       </trans-unit>
        <trans-unit id="4730" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``19(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18}}})">
          <source>The type of the seventh element.</source>
          <target state="translated">O tipo do sétimo elemento.</target>       </trans-unit>
        <trans-unit id="4731" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``19(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18}}})">
          <source>The type of the eighth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento oitavo, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4732" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``19(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18}}})">
          <source>The type of the ninth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento nono, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4733" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``19(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18}}})">
          <source>The type of the tenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento décimo, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4734" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``19(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18}}})">
          <source>The type of the eleventh element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento décimo-primeiro, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4735" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``19(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18}}})">
          <source>The type of the twelfth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento décimo-segundo, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4736" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``19(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18}}})">
          <source>The type of the thirteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento décimo terceiro, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4737" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``19(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18}}})">
          <source>The type of the fourteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item7" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento décimo quarto, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item7" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4738" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``19(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18}}})">
          <source>The type of the fifteenth element., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">O tipo do décimo elemento., ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4739" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``19(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18}}})">
          <source>The type of the sixteenth element, ., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento 16,., ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4740" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``19(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18}}})">
          <source>The type of the seventeenth element., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item3" /&gt;</ph>.</source>
          <target state="translated">O tipo de 17 elemento., ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item3" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4741" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``19(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18}}})">
          <source>The type of the eighteenth element., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item4" /&gt;</ph>.</source>
          <target state="translated">O tipo do décimo oitavo elemento., ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item4" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4742" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``19(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18}}})">
          <source>The type of the nineteenth element., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item5" /&gt;</ph>.</source>
          <target state="translated">O tipo do dezenove elemento., ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item5" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4743" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToTuple``19(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18}}})">
          <source>The value tuple instance to convert to a tuple.</source>
          <target state="translated">A instância de tupla de valor a ser convertida em uma tupla.</target>       </trans-unit>
        <trans-unit id="4744" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToTuple``19(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18}}})">
          <source>Converts an instance of the <ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> structure to an instance of the  <ph id="ph2">&lt;see langword="Tuple" /&gt;</ph> class.</source>
          <target state="translated">Converte uma instância da estrutura <ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> em uma instância da classe <ph id="ph2">&lt;see langword="Tuple" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4745" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``2(System.ValueTuple{``0,``1})">
          <source>The type of the first element.</source>
          <target state="translated">O tipo do primeiro elemento.</target>       </trans-unit>
        <trans-unit id="4746" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``2(System.ValueTuple{``0,``1})">
          <source>The type of the second element.</source>
          <target state="translated">O tipo do segundo elemento.</target>       </trans-unit>
        <trans-unit id="4747" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToTuple``2(System.ValueTuple{``0,``1})">
          <source>The value tuple instance to convert to a tuple.</source>
          <target state="translated">A instância de tupla de valor a ser convertida em uma tupla.</target>       </trans-unit>
        <trans-unit id="4748" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToTuple``2(System.ValueTuple{``0,``1})">
          <source>Converts an instance of the <ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> structure to an instance of the  <ph id="ph2">&lt;see langword="Tuple" /&gt;</ph> class.</source>
          <target state="translated">Converte uma instância da estrutura <ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> em uma instância da classe <ph id="ph2">&lt;see langword="Tuple" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4749" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``20(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19}}})">
          <source>The type of the first element.</source>
          <target state="translated">O tipo do primeiro elemento.</target>       </trans-unit>
        <trans-unit id="4750" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``20(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19}}})">
          <source>The type of the second element.</source>
          <target state="translated">O tipo do segundo elemento.</target>       </trans-unit>
        <trans-unit id="4751" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``20(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19}}})">
          <source>The type of the third element.</source>
          <target state="translated">O tipo do terceiro elemento.</target>       </trans-unit>
        <trans-unit id="4752" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``20(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19}}})">
          <source>The type of the fourth element.</source>
          <target state="translated">O tipo do quarto elemento.</target>       </trans-unit>
        <trans-unit id="4753" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``20(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19}}})">
          <source>The type of the fifth element.</source>
          <target state="translated">O tipo do quinto elemento.</target>       </trans-unit>
        <trans-unit id="4754" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``20(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19}}})">
          <source>The type of the sixth element.</source>
          <target state="translated">O tipo do sexto elemento.</target>       </trans-unit>
        <trans-unit id="4755" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``20(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19}}})">
          <source>The type of the seventh element.</source>
          <target state="translated">O tipo do sétimo elemento.</target>       </trans-unit>
        <trans-unit id="4756" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``20(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19}}})">
          <source>The type of the eighth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento oitavo, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4757" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``20(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19}}})">
          <source>The type of the ninth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento nono, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4758" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``20(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19}}})">
          <source>The type of the tenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento décimo, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4759" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``20(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19}}})">
          <source>The type of the eleventh element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento décimo-primeiro, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4760" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``20(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19}}})">
          <source>The type of the twelfth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento décimo-segundo, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4761" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``20(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19}}})">
          <source>The type of the thirteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento décimo terceiro, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4762" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``20(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19}}})">
          <source>The type of the fourteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item7" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento décimo quarto, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item7" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4763" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``20(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19}}})">
          <source>The type of the fifteenth element., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">O tipo do décimo elemento., ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4764" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``20(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19}}})">
          <source>The type of the sixteenth element, ., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento 16,., ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4765" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``20(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19}}})">
          <source>The type of the seventeenth element., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item3" /&gt;</ph>.</source>
          <target state="translated">O tipo de 17 elemento., ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item3" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4766" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``20(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19}}})">
          <source>The type of the eighteenth element., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item4" /&gt;</ph>.</source>
          <target state="translated">O tipo do décimo oitavo elemento., ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item4" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4767" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``20(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19}}})">
          <source>The type of the nineteenth element., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item5" /&gt;</ph>.</source>
          <target state="translated">O tipo do dezenove elemento., ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item5" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4768" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``20(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19}}})">
          <source>The type of the twentieth element., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item6" /&gt;</ph>.</source>
          <target state="translated">O tipo de vinte elemento., ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item6" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4769" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToTuple``20(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19}}})">
          <source>The value tuple instance to convert to a tuple.</source>
          <target state="translated">A instância de tupla de valor a ser convertida em uma tupla.</target>       </trans-unit>
        <trans-unit id="4770" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToTuple``20(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19}}})">
          <source>Converts an instance of the <ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> structure to an instance of the  <ph id="ph2">&lt;see langword="Tuple" /&gt;</ph> class.</source>
          <target state="translated">Converte uma instância da estrutura <ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> em uma instância da classe <ph id="ph2">&lt;see langword="Tuple" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4771" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``21(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19,``20}}})">
          <source>The type of the first element.</source>
          <target state="translated">O tipo do primeiro elemento.</target>       </trans-unit>
        <trans-unit id="4772" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``21(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19,``20}}})">
          <source>The type of the second element.</source>
          <target state="translated">O tipo do segundo elemento.</target>       </trans-unit>
        <trans-unit id="4773" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``21(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19,``20}}})">
          <source>The type of the third element.</source>
          <target state="translated">O tipo do terceiro elemento.</target>       </trans-unit>
        <trans-unit id="4774" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``21(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19,``20}}})">
          <source>The type of the fourth element.</source>
          <target state="translated">O tipo do quarto elemento.</target>       </trans-unit>
        <trans-unit id="4775" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``21(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19,``20}}})">
          <source>The type of the fifth element.</source>
          <target state="translated">O tipo do quinto elemento.</target>       </trans-unit>
        <trans-unit id="4776" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``21(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19,``20}}})">
          <source>The type of the sixth element.</source>
          <target state="translated">O tipo do sexto elemento.</target>       </trans-unit>
        <trans-unit id="4777" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``21(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19,``20}}})">
          <source>The type of the seventh element.</source>
          <target state="translated">O tipo do sétimo elemento.</target>       </trans-unit>
        <trans-unit id="4778" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``21(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19,``20}}})">
          <source>The type of the eighth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento oitavo, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4779" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``21(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19,``20}}})">
          <source>The type of the ninth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento nono, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4780" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``21(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19,``20}}})">
          <source>The type of the tenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento décimo, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4781" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``21(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19,``20}}})">
          <source>The type of the eleventh element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento décimo-primeiro, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4782" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``21(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19,``20}}})">
          <source>The type of the twelfth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento décimo-segundo, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4783" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``21(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19,``20}}})">
          <source>The type of the thirteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento décimo terceiro, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4784" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``21(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19,``20}}})">
          <source>The type of the fourteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item7" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento décimo quarto, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item7" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4785" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``21(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19,``20}}})">
          <source>The type of the fifteenth element., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">O tipo do décimo elemento., ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4786" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``21(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19,``20}}})">
          <source>The type of the sixteenth element, ., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento 16,., ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4787" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``21(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19,``20}}})">
          <source>The type of the seventeenth element., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item3" /&gt;</ph>.</source>
          <target state="translated">O tipo de 17 elemento., ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item3" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4788" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``21(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19,``20}}})">
          <source>The type of the eighteenth element., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item4" /&gt;</ph>.</source>
          <target state="translated">O tipo do décimo oitavo elemento., ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item4" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4789" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``21(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19,``20}}})">
          <source>The type of the nineteenth element., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item5" /&gt;</ph>.</source>
          <target state="translated">O tipo do dezenove elemento., ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item5" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4790" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``21(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19,``20}}})">
          <source>The type of the twentieth element., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item6" /&gt;</ph>.</source>
          <target state="translated">O tipo de vinte elemento., ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item6" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4791" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``21(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19,``20}}})">
          <source>The type of the twenty-first element., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item7" /&gt;</ph>.</source>
          <target state="translated">O tipo de vigésimo primeiro elemento., ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item7" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4792" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToTuple``21(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19,``20}}})">
          <source>The value tuple instance to convert to a tuple.</source>
          <target state="translated">A instância de tupla de valor a ser convertida em uma tupla.</target>       </trans-unit>
        <trans-unit id="4793" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToTuple``21(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19,``20}}})">
          <source>Converts an instance of the <ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> structure to an instance of the  <ph id="ph2">&lt;see langword="Tuple" /&gt;</ph> class.</source>
          <target state="translated">Converte uma instância da estrutura <ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> em uma instância da classe <ph id="ph2">&lt;see langword="Tuple" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4794" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``3(System.ValueTuple{``0,``1,``2})">
          <source>The type of the first element.</source>
          <target state="translated">O tipo do primeiro elemento.</target>       </trans-unit>
        <trans-unit id="4795" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``3(System.ValueTuple{``0,``1,``2})">
          <source>The type of the second element.</source>
          <target state="translated">O tipo do segundo elemento.</target>       </trans-unit>
        <trans-unit id="4796" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``3(System.ValueTuple{``0,``1,``2})">
          <source>The type of the third element.</source>
          <target state="translated">O tipo do terceiro elemento.</target>       </trans-unit>
        <trans-unit id="4797" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToTuple``3(System.ValueTuple{``0,``1,``2})">
          <source>The value tuple instance to convert to a tuple.</source>
          <target state="translated">A instância de tupla de valor a ser convertida em uma tupla.</target>       </trans-unit>
        <trans-unit id="4798" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToTuple``3(System.ValueTuple{``0,``1,``2})">
          <source>Converts an instance of the <ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> structure to an instance of the  <ph id="ph2">&lt;see langword="Tuple" /&gt;</ph> class.</source>
          <target state="translated">Converte uma instância da estrutura <ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> em uma instância da classe <ph id="ph2">&lt;see langword="Tuple" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4799" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``4(System.ValueTuple{``0,``1,``2,``3})">
          <source>The type of the first element.</source>
          <target state="translated">O tipo do primeiro elemento.</target>       </trans-unit>
        <trans-unit id="4800" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``4(System.ValueTuple{``0,``1,``2,``3})">
          <source>The type of the second element.</source>
          <target state="translated">O tipo do segundo elemento.</target>       </trans-unit>
        <trans-unit id="4801" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``4(System.ValueTuple{``0,``1,``2,``3})">
          <source>The type of the third element.</source>
          <target state="translated">O tipo do terceiro elemento.</target>       </trans-unit>
        <trans-unit id="4802" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``4(System.ValueTuple{``0,``1,``2,``3})">
          <source>The type of the fourth element.</source>
          <target state="translated">O tipo do quarto elemento.</target>       </trans-unit>
        <trans-unit id="4803" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToTuple``4(System.ValueTuple{``0,``1,``2,``3})">
          <source>The value tuple instance to convert to a tuple.</source>
          <target state="translated">A instância de tupla de valor a ser convertida em uma tupla.</target>       </trans-unit>
        <trans-unit id="4804" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToTuple``4(System.ValueTuple{``0,``1,``2,``3})">
          <source>Converts an instance of the <ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> structure to an instance of the  <ph id="ph2">&lt;see langword="Tuple" /&gt;</ph> class.</source>
          <target state="translated">Converte uma instância da estrutura <ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> em uma instância da classe <ph id="ph2">&lt;see langword="Tuple" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4805" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``5(System.ValueTuple{``0,``1,``2,``3,``4})">
          <source>The type of the first element.</source>
          <target state="translated">O tipo do primeiro elemento.</target>       </trans-unit>
        <trans-unit id="4806" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``5(System.ValueTuple{``0,``1,``2,``3,``4})">
          <source>The type of the second element.</source>
          <target state="translated">O tipo do segundo elemento.</target>       </trans-unit>
        <trans-unit id="4807" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``5(System.ValueTuple{``0,``1,``2,``3,``4})">
          <source>The type of the third element.</source>
          <target state="translated">O tipo do terceiro elemento.</target>       </trans-unit>
        <trans-unit id="4808" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``5(System.ValueTuple{``0,``1,``2,``3,``4})">
          <source>The type of the fourth element.</source>
          <target state="translated">O tipo do quarto elemento.</target>       </trans-unit>
        <trans-unit id="4809" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``5(System.ValueTuple{``0,``1,``2,``3,``4})">
          <source>The type of the fifth element.</source>
          <target state="translated">O tipo do quinto elemento.</target>       </trans-unit>
        <trans-unit id="4810" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToTuple``5(System.ValueTuple{``0,``1,``2,``3,``4})">
          <source>The value tuple instance to convert to a tuple.</source>
          <target state="translated">A instância de tupla de valor a ser convertida em uma tupla.</target>       </trans-unit>
        <trans-unit id="4811" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToTuple``5(System.ValueTuple{``0,``1,``2,``3,``4})">
          <source>Converts an instance of the <ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> structure to an instance of the  <ph id="ph2">&lt;see langword="Tuple" /&gt;</ph> class.</source>
          <target state="translated">Converte uma instância da estrutura <ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> em uma instância da classe <ph id="ph2">&lt;see langword="Tuple" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4812" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``6(System.ValueTuple{``0,``1,``2,``3,``4,``5})">
          <source>The type of the first element.</source>
          <target state="translated">O tipo do primeiro elemento.</target>       </trans-unit>
        <trans-unit id="4813" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``6(System.ValueTuple{``0,``1,``2,``3,``4,``5})">
          <source>The type of the second element.</source>
          <target state="translated">O tipo do segundo elemento.</target>       </trans-unit>
        <trans-unit id="4814" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``6(System.ValueTuple{``0,``1,``2,``3,``4,``5})">
          <source>The type of the third element.</source>
          <target state="translated">O tipo do terceiro elemento.</target>       </trans-unit>
        <trans-unit id="4815" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``6(System.ValueTuple{``0,``1,``2,``3,``4,``5})">
          <source>The type of the fourth element.</source>
          <target state="translated">O tipo do quarto elemento.</target>       </trans-unit>
        <trans-unit id="4816" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``6(System.ValueTuple{``0,``1,``2,``3,``4,``5})">
          <source>The type of the fifth element.</source>
          <target state="translated">O tipo do quinto elemento.</target>       </trans-unit>
        <trans-unit id="4817" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``6(System.ValueTuple{``0,``1,``2,``3,``4,``5})">
          <source>The type of the sixth element.</source>
          <target state="translated">O tipo do sexto elemento.</target>       </trans-unit>
        <trans-unit id="4818" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToTuple``6(System.ValueTuple{``0,``1,``2,``3,``4,``5})">
          <source>The value tuple instance to convert to a tuple.</source>
          <target state="translated">A instância de tupla de valor a ser convertida em uma tupla.</target>       </trans-unit>
        <trans-unit id="4819" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToTuple``6(System.ValueTuple{``0,``1,``2,``3,``4,``5})">
          <source>Converts an instance of the <ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> structure to an instance of the  <ph id="ph2">&lt;see langword="Tuple" /&gt;</ph> class.</source>
          <target state="translated">Converte uma instância da estrutura <ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> em uma instância da classe <ph id="ph2">&lt;see langword="Tuple" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4820" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``7(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6})">
          <source>The type of the first element.</source>
          <target state="translated">O tipo do primeiro elemento.</target>       </trans-unit>
        <trans-unit id="4821" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``7(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6})">
          <source>The type of the second element.</source>
          <target state="translated">O tipo do segundo elemento.</target>       </trans-unit>
        <trans-unit id="4822" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``7(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6})">
          <source>The type of the third element.</source>
          <target state="translated">O tipo do terceiro elemento.</target>       </trans-unit>
        <trans-unit id="4823" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``7(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6})">
          <source>The type of the fourth element.</source>
          <target state="translated">O tipo do quarto elemento.</target>       </trans-unit>
        <trans-unit id="4824" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``7(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6})">
          <source>The type of the fifth element.</source>
          <target state="translated">O tipo do quinto elemento.</target>       </trans-unit>
        <trans-unit id="4825" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``7(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6})">
          <source>The type of the sixth element.</source>
          <target state="translated">O tipo do sexto elemento.</target>       </trans-unit>
        <trans-unit id="4826" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``7(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6})">
          <source>The type of the seventh element.</source>
          <target state="translated">O tipo do sétimo elemento.</target>       </trans-unit>
        <trans-unit id="4827" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToTuple``7(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6})">
          <source>The value tuple instance to convert to a tuple.</source>
          <target state="translated">A instância de tupla de valor a ser convertida em uma tupla.</target>       </trans-unit>
        <trans-unit id="4828" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToTuple``7(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6})">
          <source>Converts an instance of the <ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> structure to an instance of the  <ph id="ph2">&lt;see langword="Tuple" /&gt;</ph> class.</source>
          <target state="translated">Converte uma instância da estrutura <ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> em uma instância da classe <ph id="ph2">&lt;see langword="Tuple" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4829" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``8(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7}})">
          <source>The type of the first element.</source>
          <target state="translated">O tipo do primeiro elemento.</target>       </trans-unit>
        <trans-unit id="4830" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``8(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7}})">
          <source>The type of the second element.</source>
          <target state="translated">O tipo do segundo elemento.</target>       </trans-unit>
        <trans-unit id="4831" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``8(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7}})">
          <source>The type of the third element.</source>
          <target state="translated">O tipo do terceiro elemento.</target>       </trans-unit>
        <trans-unit id="4832" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``8(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7}})">
          <source>The type of the fourth element.</source>
          <target state="translated">O tipo do quarto elemento.</target>       </trans-unit>
        <trans-unit id="4833" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``8(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7}})">
          <source>The type of the fifth element.</source>
          <target state="translated">O tipo do quinto elemento.</target>       </trans-unit>
        <trans-unit id="4834" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``8(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7}})">
          <source>The type of the sixth element.</source>
          <target state="translated">O tipo do sexto elemento.</target>       </trans-unit>
        <trans-unit id="4835" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``8(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7}})">
          <source>The type of the seventh element.</source>
          <target state="translated">O tipo do sétimo elemento.</target>       </trans-unit>
        <trans-unit id="4836" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``8(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7}})">
          <source>The type of the eighth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento oitavo, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4837" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToTuple``8(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7}})">
          <source>The value tuple instance to convert to a tuple.</source>
          <target state="translated">A instância de tupla de valor a ser convertida em uma tupla.</target>       </trans-unit>
        <trans-unit id="4838" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToTuple``8(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7}})">
          <source>Converts an instance of the <ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> structure to an instance of the  <ph id="ph2">&lt;see langword="Tuple" /&gt;</ph> class.</source>
          <target state="translated">Converte uma instância da estrutura <ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> em uma instância da classe <ph id="ph2">&lt;see langword="Tuple" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4839" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``9(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8}})">
          <source>The type of the first element.</source>
          <target state="translated">O tipo do primeiro elemento.</target>       </trans-unit>
        <trans-unit id="4840" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``9(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8}})">
          <source>The type of the second element.</source>
          <target state="translated">O tipo do segundo elemento.</target>       </trans-unit>
        <trans-unit id="4841" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``9(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8}})">
          <source>The type of the third element.</source>
          <target state="translated">O tipo do terceiro elemento.</target>       </trans-unit>
        <trans-unit id="4842" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``9(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8}})">
          <source>The type of the fourth element.</source>
          <target state="translated">O tipo do quarto elemento.</target>       </trans-unit>
        <trans-unit id="4843" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``9(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8}})">
          <source>The type of the fifth element.</source>
          <target state="translated">O tipo do quinto elemento.</target>       </trans-unit>
        <trans-unit id="4844" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``9(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8}})">
          <source>The type of the sixth element.</source>
          <target state="translated">O tipo do sexto elemento.</target>       </trans-unit>
        <trans-unit id="4845" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``9(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8}})">
          <source>The type of the seventh element.</source>
          <target state="translated">O tipo do sétimo elemento.</target>       </trans-unit>
        <trans-unit id="4846" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``9(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8}})">
          <source>The type of the eighth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento oitavo, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4847" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``9(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8}})">
          <source>The type of the ninth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento nono, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4848" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToTuple``9(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8}})">
          <source>The value tuple instance to convert to a tuple.</source>
          <target state="translated">A instância de tupla de valor a ser convertida em uma tupla.</target>       </trans-unit>
        <trans-unit id="4849" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToTuple``9(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8}})">
          <source>Converts an instance of the <ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> structure to an instance of the  <ph id="ph2">&lt;see langword="Tuple" /&gt;</ph> class.</source>
          <target state="translated">Converte uma instância da estrutura <ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> em uma instância da classe <ph id="ph2">&lt;see langword="Tuple" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4850" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``1(System.Tuple{``0})">
          <source>The type of the first element.</source>
          <target state="translated">O tipo do primeiro elemento.</target>       </trans-unit>
        <trans-unit id="4851" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToValueTuple``1(System.Tuple{``0})">
          <source>The tuple object to convert to a value tuple</source>
          <target state="translated">O objeto de tupla a ser convertido em uma tupla de valor</target>       </trans-unit>
        <trans-unit id="4852" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToValueTuple``1(System.Tuple{``0})">
          <source>Converts an instance of the <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> class to an instance of the  <ph id="ph2">&lt;see langword="ValueTuple" /&gt;</ph> structure.</source>
          <target state="translated">Converte uma instância da classe <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> em uma instância da estrutura <ph id="ph2">&lt;see langword="ValueTuple" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4853" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``10(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9}})">
          <source>The type of the first element.</source>
          <target state="translated">O tipo do primeiro elemento.</target>       </trans-unit>
        <trans-unit id="4854" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``10(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9}})">
          <source>The type of the second element.</source>
          <target state="translated">O tipo do segundo elemento.</target>       </trans-unit>
        <trans-unit id="4855" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``10(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9}})">
          <source>The type of the third element.</source>
          <target state="translated">O tipo do terceiro elemento.</target>       </trans-unit>
        <trans-unit id="4856" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``10(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9}})">
          <source>The type of the fourth element.</source>
          <target state="translated">O tipo do quarto elemento.</target>       </trans-unit>
        <trans-unit id="4857" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``10(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9}})">
          <source>The type of the fifth element.</source>
          <target state="translated">O tipo do quinto elemento.</target>       </trans-unit>
        <trans-unit id="4858" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``10(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9}})">
          <source>The type of the sixth element.</source>
          <target state="translated">O tipo do sexto elemento.</target>       </trans-unit>
        <trans-unit id="4859" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``10(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9}})">
          <source>The type of the seventh element.</source>
          <target state="translated">O tipo do sétimo elemento.</target>       </trans-unit>
        <trans-unit id="4860" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``10(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9}})">
          <source>The type of the eighth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento oitavo, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4861" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``10(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9}})">
          <source>The type of the ninth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento nono, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4862" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``10(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9}})">
          <source>The type of the tenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento décimo, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4863" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToValueTuple``10(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9}})">
          <source>The tuple object to convert to a value tuple</source>
          <target state="translated">O objeto de tupla a ser convertido em uma tupla de valor</target>       </trans-unit>
        <trans-unit id="4864" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToValueTuple``10(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9}})">
          <source>Converts an instance of the <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> class to an instance of the  <ph id="ph2">&lt;see langword="ValueTuple" /&gt;</ph> structure.</source>
          <target state="translated">Converte uma instância da classe <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> em uma instância da estrutura <ph id="ph2">&lt;see langword="ValueTuple" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4865" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``11(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10}})">
          <source>The type of the first element.</source>
          <target state="translated">O tipo do primeiro elemento.</target>       </trans-unit>
        <trans-unit id="4866" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``11(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10}})">
          <source>The type of the second element.</source>
          <target state="translated">O tipo do segundo elemento.</target>       </trans-unit>
        <trans-unit id="4867" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``11(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10}})">
          <source>The type of the third element.</source>
          <target state="translated">O tipo do terceiro elemento.</target>       </trans-unit>
        <trans-unit id="4868" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``11(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10}})">
          <source>The type of the fourth element.</source>
          <target state="translated">O tipo do quarto elemento.</target>       </trans-unit>
        <trans-unit id="4869" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``11(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10}})">
          <source>The type of the fifth element.</source>
          <target state="translated">O tipo do quinto elemento.</target>       </trans-unit>
        <trans-unit id="4870" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``11(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10}})">
          <source>The type of the sixth element.</source>
          <target state="translated">O tipo do sexto elemento.</target>       </trans-unit>
        <trans-unit id="4871" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``11(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10}})">
          <source>The type of the seventh element.</source>
          <target state="translated">O tipo do sétimo elemento.</target>       </trans-unit>
        <trans-unit id="4872" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``11(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10}})">
          <source>The type of the eighth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento oitavo, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4873" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``11(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10}})">
          <source>The type of the ninth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento nono, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4874" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``11(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10}})">
          <source>The type of the tenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento décimo, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4875" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``11(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10}})">
          <source>The type of the eleventh element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento décimo-primeiro, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4876" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToValueTuple``11(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10}})">
          <source>The tuple object to convert to a value tuple</source>
          <target state="translated">O objeto de tupla a ser convertido em uma tupla de valor</target>       </trans-unit>
        <trans-unit id="4877" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToValueTuple``11(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10}})">
          <source>Converts an instance of the <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> class to an instance of the  <ph id="ph2">&lt;see langword="ValueTuple" /&gt;</ph> structure.</source>
          <target state="translated">Converte uma instância da classe <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> em uma instância da estrutura <ph id="ph2">&lt;see langword="ValueTuple" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4878" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``12(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11}})">
          <source>The type of the first element.</source>
          <target state="translated">O tipo do primeiro elemento.</target>       </trans-unit>
        <trans-unit id="4879" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``12(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11}})">
          <source>The type of the second element.</source>
          <target state="translated">O tipo do segundo elemento.</target>       </trans-unit>
        <trans-unit id="4880" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``12(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11}})">
          <source>The type of the third element.</source>
          <target state="translated">O tipo do terceiro elemento.</target>       </trans-unit>
        <trans-unit id="4881" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``12(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11}})">
          <source>The type of the fourth element.</source>
          <target state="translated">O tipo do quarto elemento.</target>       </trans-unit>
        <trans-unit id="4882" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``12(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11}})">
          <source>The type of the fifth element.</source>
          <target state="translated">O tipo do quinto elemento.</target>       </trans-unit>
        <trans-unit id="4883" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``12(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11}})">
          <source>The type of the sixth element.</source>
          <target state="translated">O tipo do sexto elemento.</target>       </trans-unit>
        <trans-unit id="4884" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``12(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11}})">
          <source>The type of the seventh element.</source>
          <target state="translated">O tipo do sétimo elemento.</target>       </trans-unit>
        <trans-unit id="4885" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``12(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11}})">
          <source>The type of the eighth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento oitavo, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4886" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``12(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11}})">
          <source>The type of the ninth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento nono, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4887" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``12(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11}})">
          <source>The type of the tenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento décimo, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4888" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``12(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11}})">
          <source>The type of the eleventh element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento décimo-primeiro, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4889" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``12(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11}})">
          <source>The type of the twelfth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento décimo-segundo, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4890" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToValueTuple``12(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11}})">
          <source>The tuple object to convert to a value tuple</source>
          <target state="translated">O objeto de tupla a ser convertido em uma tupla de valor</target>       </trans-unit>
        <trans-unit id="4891" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToValueTuple``12(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11}})">
          <source>Converts an instance of the <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> class to an instance of the  <ph id="ph2">&lt;see langword="ValueTuple" /&gt;</ph> structure.</source>
          <target state="translated">Converte uma instância da classe <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> em uma instância da estrutura <ph id="ph2">&lt;see langword="ValueTuple" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4892" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``13(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12}})">
          <source>The type of the first element.</source>
          <target state="translated">O tipo do primeiro elemento.</target>       </trans-unit>
        <trans-unit id="4893" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``13(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12}})">
          <source>The type of the second element.</source>
          <target state="translated">O tipo do segundo elemento.</target>       </trans-unit>
        <trans-unit id="4894" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``13(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12}})">
          <source>The type of the third element.</source>
          <target state="translated">O tipo do terceiro elemento.</target>       </trans-unit>
        <trans-unit id="4895" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``13(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12}})">
          <source>The type of the fourth element.</source>
          <target state="translated">O tipo do quarto elemento.</target>       </trans-unit>
        <trans-unit id="4896" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``13(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12}})">
          <source>The type of the fifth element.</source>
          <target state="translated">O tipo do quinto elemento.</target>       </trans-unit>
        <trans-unit id="4897" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``13(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12}})">
          <source>The type of the sixth element.</source>
          <target state="translated">O tipo do sexto elemento.</target>       </trans-unit>
        <trans-unit id="4898" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``13(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12}})">
          <source>The type of the seventh element.</source>
          <target state="translated">O tipo do sétimo elemento.</target>       </trans-unit>
        <trans-unit id="4899" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``13(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12}})">
          <source>The type of the eighth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento oitavo, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4900" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``13(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12}})">
          <source>The type of the ninth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento nono, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4901" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``13(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12}})">
          <source>The type of the tenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento décimo, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4902" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``13(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12}})">
          <source>The type of the eleventh element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento décimo-primeiro, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4903" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``13(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12}})">
          <source>The type of the twelfth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento décimo-segundo, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4904" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``13(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12}})">
          <source>The type of the thirteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento décimo terceiro, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4905" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToValueTuple``13(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12}})">
          <source>The tuple object to convert to a value tuple</source>
          <target state="translated">O objeto de tupla a ser convertido em uma tupla de valor</target>       </trans-unit>
        <trans-unit id="4906" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToValueTuple``13(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12}})">
          <source>Converts an instance of the <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> class to an instance of the  <ph id="ph2">&lt;see langword="ValueTuple" /&gt;</ph> structure.</source>
          <target state="translated">Converte uma instância da classe <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> em uma instância da estrutura <ph id="ph2">&lt;see langword="ValueTuple" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4907" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}})">
          <source>The type of the first element.</source>
          <target state="translated">O tipo do primeiro elemento.</target>       </trans-unit>
        <trans-unit id="4908" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}})">
          <source>The type of the second element.</source>
          <target state="translated">O tipo do segundo elemento.</target>       </trans-unit>
        <trans-unit id="4909" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}})">
          <source>The type of the third element.</source>
          <target state="translated">O tipo do terceiro elemento.</target>       </trans-unit>
        <trans-unit id="4910" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}})">
          <source>The type of the fourth element.</source>
          <target state="translated">O tipo do quarto elemento.</target>       </trans-unit>
        <trans-unit id="4911" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}})">
          <source>The type of the fifth element.</source>
          <target state="translated">O tipo do quinto elemento.</target>       </trans-unit>
        <trans-unit id="4912" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}})">
          <source>The type of the sixth element.</source>
          <target state="translated">O tipo do sexto elemento.</target>       </trans-unit>
        <trans-unit id="4913" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}})">
          <source>The type of the seventh element.</source>
          <target state="translated">O tipo do sétimo elemento.</target>       </trans-unit>
        <trans-unit id="4914" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}})">
          <source>The type of the eighth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento oitavo, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4915" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}})">
          <source>The type of the ninth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento nono, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4916" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}})">
          <source>The type of the tenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento décimo, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4917" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}})">
          <source>The type of the eleventh element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento décimo-primeiro, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4918" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}})">
          <source>The type of the twelfth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento décimo-segundo, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4919" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}})">
          <source>The type of the thirteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento décimo terceiro, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4920" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}})">
          <source>The type of the fourteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item7" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento décimo quarto, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item7" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4921" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToValueTuple``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}})">
          <source>The tuple object to convert to a value tuple</source>
          <target state="translated">O objeto de tupla a ser convertido em uma tupla de valor</target>       </trans-unit>
        <trans-unit id="4922" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToValueTuple``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}})">
          <source>Converts an instance of the <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> class to an instance of the  <ph id="ph2">&lt;see langword="ValueTuple" /&gt;</ph> structure.</source>
          <target state="translated">Converte uma instância da classe <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> em uma instância da estrutura <ph id="ph2">&lt;see langword="ValueTuple" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4923" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}})">
          <source>The type of the first element.</source>
          <target state="translated">O tipo do primeiro elemento.</target>       </trans-unit>
        <trans-unit id="4924" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}})">
          <source>The type of the second element.</source>
          <target state="translated">O tipo do segundo elemento.</target>       </trans-unit>
        <trans-unit id="4925" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}})">
          <source>The type of the third element.</source>
          <target state="translated">O tipo do terceiro elemento.</target>       </trans-unit>
        <trans-unit id="4926" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}})">
          <source>The type of the fourth element.</source>
          <target state="translated">O tipo do quarto elemento.</target>       </trans-unit>
        <trans-unit id="4927" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}})">
          <source>The type of the fifth element.</source>
          <target state="translated">O tipo do quinto elemento.</target>       </trans-unit>
        <trans-unit id="4928" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}})">
          <source>The type of the sixth element.</source>
          <target state="translated">O tipo do sexto elemento.</target>       </trans-unit>
        <trans-unit id="4929" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}})">
          <source>The type of the seventh element.</source>
          <target state="translated">O tipo do sétimo elemento.</target>       </trans-unit>
        <trans-unit id="4930" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}})">
          <source>The type of the eighth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento oitavo, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4931" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}})">
          <source>The type of the ninth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento nono, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4932" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}})">
          <source>The type of the tenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento décimo, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4933" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}})">
          <source>The type of the eleventh element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento décimo-primeiro, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4934" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}})">
          <source>The type of the twelfth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento décimo-segundo, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4935" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}})">
          <source>The type of the thirteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento décimo terceiro, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4936" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}})">
          <source>The type of the fourteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item7" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento décimo quarto, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item7" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4937" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}})">
          <source>The type of the fifteenth element., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">O tipo do décimo elemento., ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4938" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToValueTuple``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}})">
          <source>The tuple object to convert to a value tuple</source>
          <target state="translated">O objeto de tupla a ser convertido em uma tupla de valor</target>       </trans-unit>
        <trans-unit id="4939" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToValueTuple``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}})">
          <source>Converts an instance of the <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> class to an instance of the  <ph id="ph2">&lt;see langword="ValueTuple" /&gt;</ph> structure.</source>
          <target state="translated">Converte uma instância da classe <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> em uma instância da estrutura <ph id="ph2">&lt;see langword="ValueTuple" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4940" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}})">
          <source>The type of the first element.</source>
          <target state="translated">O tipo do primeiro elemento.</target>       </trans-unit>
        <trans-unit id="4941" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}})">
          <source>The type of the second element.</source>
          <target state="translated">O tipo do segundo elemento.</target>       </trans-unit>
        <trans-unit id="4942" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}})">
          <source>The type of the third element.</source>
          <target state="translated">O tipo do terceiro elemento.</target>       </trans-unit>
        <trans-unit id="4943" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}})">
          <source>The type of the fourth element.</source>
          <target state="translated">O tipo do quarto elemento.</target>       </trans-unit>
        <trans-unit id="4944" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}})">
          <source>The type of the fifth element.</source>
          <target state="translated">O tipo do quinto elemento.</target>       </trans-unit>
        <trans-unit id="4945" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}})">
          <source>The type of the sixth element.</source>
          <target state="translated">O tipo do sexto elemento.</target>       </trans-unit>
        <trans-unit id="4946" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}})">
          <source>The type of the seventh element.</source>
          <target state="translated">O tipo do sétimo elemento.</target>       </trans-unit>
        <trans-unit id="4947" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}})">
          <source>The type of the eighth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento oitavo, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4948" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}})">
          <source>The type of the ninth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento nono, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4949" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}})">
          <source>The type of the tenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento décimo, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4950" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}})">
          <source>The type of the eleventh element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento décimo-primeiro, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4951" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}})">
          <source>The type of the twelfth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento décimo-segundo, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4952" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}})">
          <source>The type of the thirteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento décimo terceiro, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4953" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}})">
          <source>The type of the fourteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item7" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento décimo quarto, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item7" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4954" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}})">
          <source>The type of the fifteenth element., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">O tipo do décimo elemento., ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4955" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}})">
          <source>The type of the sixteenth element, ., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento 16,., ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4956" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToValueTuple``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}})">
          <source>The tuple object to convert to a value tuple</source>
          <target state="translated">O objeto de tupla a ser convertido em uma tupla de valor</target>       </trans-unit>
        <trans-unit id="4957" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToValueTuple``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}})">
          <source>Converts an instance of the <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> class to an instance of the  <ph id="ph2">&lt;see langword="ValueTuple" /&gt;</ph> structure.</source>
          <target state="translated">Converte uma instância da classe <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> em uma instância da estrutura <ph id="ph2">&lt;see langword="ValueTuple" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4958" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}})">
          <source>The type of the first element.</source>
          <target state="translated">O tipo do primeiro elemento.</target>       </trans-unit>
        <trans-unit id="4959" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}})">
          <source>The type of the second element.</source>
          <target state="translated">O tipo do segundo elemento.</target>       </trans-unit>
        <trans-unit id="4960" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}})">
          <source>The type of the third element.</source>
          <target state="translated">O tipo do terceiro elemento.</target>       </trans-unit>
        <trans-unit id="4961" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}})">
          <source>The type of the fourth element.</source>
          <target state="translated">O tipo do quarto elemento.</target>       </trans-unit>
        <trans-unit id="4962" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}})">
          <source>The type of the fifth element.</source>
          <target state="translated">O tipo do quinto elemento.</target>       </trans-unit>
        <trans-unit id="4963" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}})">
          <source>The type of the sixth element.</source>
          <target state="translated">O tipo do sexto elemento.</target>       </trans-unit>
        <trans-unit id="4964" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}})">
          <source>The type of the seventh element.</source>
          <target state="translated">O tipo do sétimo elemento.</target>       </trans-unit>
        <trans-unit id="4965" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}})">
          <source>The type of the eighth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento oitavo, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4966" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}})">
          <source>The type of the ninth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento nono, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4967" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}})">
          <source>The type of the tenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento décimo, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4968" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}})">
          <source>The type of the eleventh element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento décimo-primeiro, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4969" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}})">
          <source>The type of the twelfth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento décimo-segundo, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4970" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}})">
          <source>The type of the thirteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento décimo terceiro, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4971" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}})">
          <source>The type of the fourteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item7" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento décimo quarto, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item7" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4972" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}})">
          <source>The type of the fifteenth element., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">O tipo do décimo elemento., ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4973" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}})">
          <source>The type of the sixteenth element, ., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento 16,., ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4974" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}})">
          <source>The type of the seventeenth element., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item3" /&gt;</ph>.</source>
          <target state="translated">O tipo de 17 elemento., ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item3" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4975" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToValueTuple``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}})">
          <source>The tuple object to convert to a value tuple</source>
          <target state="translated">O objeto de tupla a ser convertido em uma tupla de valor</target>       </trans-unit>
        <trans-unit id="4976" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToValueTuple``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}})">
          <source>Converts an instance of the <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> class to an instance of the  <ph id="ph2">&lt;see langword="ValueTuple" /&gt;</ph> structure.</source>
          <target state="translated">Converte uma instância da classe <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> em uma instância da estrutura <ph id="ph2">&lt;see langword="ValueTuple" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4977" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}})">
          <source>The type of the first element.</source>
          <target state="translated">O tipo do primeiro elemento.</target>       </trans-unit>
        <trans-unit id="4978" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}})">
          <source>The type of the second element.</source>
          <target state="translated">O tipo do segundo elemento.</target>       </trans-unit>
        <trans-unit id="4979" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}})">
          <source>The type of the third element.</source>
          <target state="translated">O tipo do terceiro elemento.</target>       </trans-unit>
        <trans-unit id="4980" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}})">
          <source>The type of the fourth element.</source>
          <target state="translated">O tipo do quarto elemento.</target>       </trans-unit>
        <trans-unit id="4981" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}})">
          <source>The type of the fifth element.</source>
          <target state="translated">O tipo do quinto elemento.</target>       </trans-unit>
        <trans-unit id="4982" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}})">
          <source>The type of the sixth element.</source>
          <target state="translated">O tipo do sexto elemento.</target>       </trans-unit>
        <trans-unit id="4983" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}})">
          <source>The type of the seventh element.</source>
          <target state="translated">O tipo do sétimo elemento.</target>       </trans-unit>
        <trans-unit id="4984" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}})">
          <source>The type of the eighth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento oitavo, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4985" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}})">
          <source>The type of the ninth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento nono, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4986" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}})">
          <source>The type of the tenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento décimo, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4987" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}})">
          <source>The type of the eleventh element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento décimo-primeiro, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4988" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}})">
          <source>The type of the twelfth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento décimo-segundo, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4989" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}})">
          <source>The type of the thirteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento décimo terceiro, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4990" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}})">
          <source>The type of the fourteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item7" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento décimo quarto, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item7" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4991" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}})">
          <source>The type of the fifteenth element., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">O tipo do décimo elemento., ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4992" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}})">
          <source>The type of the sixteenth element, ., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento 16,., ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4993" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}})">
          <source>The type of the seventeenth element., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item3" /&gt;</ph>.</source>
          <target state="translated">O tipo de 17 elemento., ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item3" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4994" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}})">
          <source>The type of the eighteenth element., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item4" /&gt;</ph>.</source>
          <target state="translated">O tipo do décimo oitavo elemento., ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item4" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4995" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToValueTuple``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}})">
          <source>The tuple object to convert to a value tuple</source>
          <target state="translated">O objeto de tupla a ser convertido em uma tupla de valor</target>       </trans-unit>
        <trans-unit id="4996" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToValueTuple``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}})">
          <source>Converts an instance of the <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> class to an instance of the  <ph id="ph2">&lt;see langword="ValueTuple" /&gt;</ph> structure.</source>
          <target state="translated">Converte uma instância da classe <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> em uma instância da estrutura <ph id="ph2">&lt;see langword="ValueTuple" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="4997" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}})">
          <source>The type of the first element.</source>
          <target state="translated">O tipo do primeiro elemento.</target>       </trans-unit>
        <trans-unit id="4998" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}})">
          <source>The type of the second element.</source>
          <target state="translated">O tipo do segundo elemento.</target>       </trans-unit>
        <trans-unit id="4999" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}})">
          <source>The type of the third element.</source>
          <target state="translated">O tipo do terceiro elemento.</target>       </trans-unit>
        <trans-unit id="5000" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}})">
          <source>The type of the fourth element.</source>
          <target state="translated">O tipo do quarto elemento.</target>       </trans-unit>
        <trans-unit id="5001" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}})">
          <source>The type of the fifth element.</source>
          <target state="translated">O tipo do quinto elemento.</target>       </trans-unit>
        <trans-unit id="5002" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}})">
          <source>The type of the sixth element.</source>
          <target state="translated">O tipo do sexto elemento.</target>       </trans-unit>
        <trans-unit id="5003" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}})">
          <source>The type of the seventh element.</source>
          <target state="translated">O tipo do sétimo elemento.</target>       </trans-unit>
        <trans-unit id="5004" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}})">
          <source>The type of the eighth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento oitavo, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="5005" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}})">
          <source>The type of the ninth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento nono, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="5006" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}})">
          <source>The type of the tenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento décimo, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="5007" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}})">
          <source>The type of the eleventh element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento décimo-primeiro, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="5008" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}})">
          <source>The type of the twelfth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento décimo-segundo, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="5009" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}})">
          <source>The type of the thirteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento décimo terceiro, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="5010" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}})">
          <source>The type of the fourteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item7" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento décimo quarto, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item7" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="5011" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}})">
          <source>The type of the fifteenth element., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">O tipo do décimo elemento., ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="5012" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}})">
          <source>The type of the sixteenth element, ., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento 16,., ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="5013" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}})">
          <source>The type of the seventeenth element., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item3" /&gt;</ph>.</source>
          <target state="translated">O tipo de 17 elemento., ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item3" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="5014" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}})">
          <source>The type of the eighteenth element., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item4" /&gt;</ph>.</source>
          <target state="translated">O tipo do décimo oitavo elemento., ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item4" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="5015" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}})">
          <source>The type of the nineteenth element., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item5" /&gt;</ph>.</source>
          <target state="translated">O tipo do dezenove elemento., ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item5" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="5016" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToValueTuple``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}})">
          <source>The tuple object to convert to a value tuple</source>
          <target state="translated">O objeto de tupla a ser convertido em uma tupla de valor</target>       </trans-unit>
        <trans-unit id="5017" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToValueTuple``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}})">
          <source>Converts an instance of the <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> class to an instance of the  <ph id="ph2">&lt;see langword="ValueTuple" /&gt;</ph> structure.</source>
          <target state="translated">Converte uma instância da classe <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> em uma instância da estrutura <ph id="ph2">&lt;see langword="ValueTuple" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="5018" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``2(System.Tuple{``0,``1})">
          <source>The type of the first element.</source>
          <target state="translated">O tipo do primeiro elemento.</target>       </trans-unit>
        <trans-unit id="5019" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``2(System.Tuple{``0,``1})">
          <source>The type of the second element.</source>
          <target state="translated">O tipo do segundo elemento.</target>       </trans-unit>
        <trans-unit id="5020" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToValueTuple``2(System.Tuple{``0,``1})">
          <source>The tuple object to convert to a value tuple</source>
          <target state="translated">O objeto de tupla a ser convertido em uma tupla de valor</target>       </trans-unit>
        <trans-unit id="5021" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToValueTuple``2(System.Tuple{``0,``1})">
          <source>Converts an instance of the <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> class to an instance of the  <ph id="ph2">&lt;see langword="ValueTuple" /&gt;</ph> structure.</source>
          <target state="translated">Converte uma instância da classe <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> em uma instância da estrutura <ph id="ph2">&lt;see langword="ValueTuple" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="5022" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}})">
          <source>The type of the first element.</source>
          <target state="translated">O tipo do primeiro elemento.</target>       </trans-unit>
        <trans-unit id="5023" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}})">
          <source>The type of the second element.</source>
          <target state="translated">O tipo do segundo elemento.</target>       </trans-unit>
        <trans-unit id="5024" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}})">
          <source>The type of the third element.</source>
          <target state="translated">O tipo do terceiro elemento.</target>       </trans-unit>
        <trans-unit id="5025" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}})">
          <source>The type of the fourth element.</source>
          <target state="translated">O tipo do quarto elemento.</target>       </trans-unit>
        <trans-unit id="5026" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}})">
          <source>The type of the fifth element.</source>
          <target state="translated">O tipo do quinto elemento.</target>       </trans-unit>
        <trans-unit id="5027" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}})">
          <source>The type of the sixth element.</source>
          <target state="translated">O tipo do sexto elemento.</target>       </trans-unit>
        <trans-unit id="5028" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}})">
          <source>The type of the seventh element.</source>
          <target state="translated">O tipo do sétimo elemento.</target>       </trans-unit>
        <trans-unit id="5029" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}})">
          <source>The type of the eighth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento oitavo, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="5030" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}})">
          <source>The type of the ninth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento nono, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="5031" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}})">
          <source>The type of the tenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento décimo, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="5032" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}})">
          <source>The type of the eleventh element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento décimo-primeiro, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="5033" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}})">
          <source>The type of the twelfth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento décimo-segundo, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="5034" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}})">
          <source>The type of the thirteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento décimo terceiro, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="5035" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}})">
          <source>The type of the fourteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item7" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento décimo quarto, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item7" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="5036" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}})">
          <source>The type of the fifteenth element., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">O tipo do décimo elemento., ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="5037" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}})">
          <source>The type of the sixteenth element, ., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento 16,., ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="5038" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}})">
          <source>The type of the seventeenth element., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item3" /&gt;</ph>.</source>
          <target state="translated">O tipo de 17 elemento., ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item3" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="5039" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}})">
          <source>The type of the eighteenth element., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item4" /&gt;</ph>.</source>
          <target state="translated">O tipo do décimo oitavo elemento., ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item4" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="5040" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}})">
          <source>The type of the nineteenth element., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item5" /&gt;</ph>.</source>
          <target state="translated">O tipo do dezenove elemento., ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item5" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="5041" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}})">
          <source>The type of the twentieth element., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item6" /&gt;</ph>.</source>
          <target state="translated">O tipo de vinte elemento., ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item6" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="5042" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToValueTuple``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}})">
          <source>The tuple object to convert to a value tuple</source>
          <target state="translated">O objeto de tupla a ser convertido em uma tupla de valor</target>       </trans-unit>
        <trans-unit id="5043" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToValueTuple``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}})">
          <source>Converts an instance of the <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> class to an instance of the  <ph id="ph2">&lt;see langword="ValueTuple" /&gt;</ph> structure.</source>
          <target state="translated">Converte uma instância da classe <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> em uma instância da estrutura <ph id="ph2">&lt;see langword="ValueTuple" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="5044" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}})">
          <source>The type of the first element.</source>
          <target state="translated">O tipo do primeiro elemento.</target>       </trans-unit>
        <trans-unit id="5045" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}})">
          <source>The type of the second element.</source>
          <target state="translated">O tipo do segundo elemento.</target>       </trans-unit>
        <trans-unit id="5046" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}})">
          <source>The type of the third element.</source>
          <target state="translated">O tipo do terceiro elemento.</target>       </trans-unit>
        <trans-unit id="5047" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}})">
          <source>The type of the fourth element.</source>
          <target state="translated">O tipo do quarto elemento.</target>       </trans-unit>
        <trans-unit id="5048" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}})">
          <source>The type of the fifth element.</source>
          <target state="translated">O tipo do quinto elemento.</target>       </trans-unit>
        <trans-unit id="5049" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}})">
          <source>The type of the sixth element.</source>
          <target state="translated">O tipo do sexto elemento.</target>       </trans-unit>
        <trans-unit id="5050" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}})">
          <source>The type of the seventh element.</source>
          <target state="translated">O tipo do sétimo elemento.</target>       </trans-unit>
        <trans-unit id="5051" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}})">
          <source>The type of the eighth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento oitavo, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="5052" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}})">
          <source>The type of the ninth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento nono, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="5053" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}})">
          <source>The type of the tenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento décimo, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="5054" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}})">
          <source>The type of the eleventh element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento décimo-primeiro, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="5055" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}})">
          <source>The type of the twelfth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento décimo-segundo, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="5056" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}})">
          <source>The type of the thirteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento décimo terceiro, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="5057" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}})">
          <source>The type of the fourteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item7" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento décimo quarto, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item7" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="5058" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}})">
          <source>The type of the fifteenth element., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">O tipo do décimo elemento., ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="5059" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}})">
          <source>The type of the sixteenth element, ., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento 16,., ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="5060" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}})">
          <source>The type of the seventeenth element., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item3" /&gt;</ph>.</source>
          <target state="translated">O tipo de 17 elemento., ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item3" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="5061" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}})">
          <source>The type of the eighteenth element., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item4" /&gt;</ph>.</source>
          <target state="translated">O tipo do décimo oitavo elemento., ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item4" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="5062" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}})">
          <source>The type of the nineteenth element., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item5" /&gt;</ph>.</source>
          <target state="translated">O tipo do dezenove elemento., ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item5" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="5063" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}})">
          <source>The type of the twentieth element., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item6" /&gt;</ph>.</source>
          <target state="translated">O tipo de vinte elemento., ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item6" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="5064" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}})">
          <source>The type of the twenty-first element., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item7" /&gt;</ph>.</source>
          <target state="translated">O tipo de vigésimo primeiro elemento., ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item7" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="5065" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToValueTuple``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}})">
          <source>The tuple object to convert to a value tuple</source>
          <target state="translated">O objeto de tupla a ser convertido em uma tupla de valor</target>       </trans-unit>
        <trans-unit id="5066" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToValueTuple``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}})">
          <source>Converts an instance of the <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> class to an instance of the  <ph id="ph2">&lt;see langword="ValueTuple" /&gt;</ph> structure.</source>
          <target state="translated">Converte uma instância da classe <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> em uma instância da estrutura <ph id="ph2">&lt;see langword="ValueTuple" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="5067" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``3(System.Tuple{``0,``1,``2})">
          <source>The type of the first element.</source>
          <target state="translated">O tipo do primeiro elemento.</target>       </trans-unit>
        <trans-unit id="5068" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``3(System.Tuple{``0,``1,``2})">
          <source>The type of the second element.</source>
          <target state="translated">O tipo do segundo elemento.</target>       </trans-unit>
        <trans-unit id="5069" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``3(System.Tuple{``0,``1,``2})">
          <source>The type of the third element.</source>
          <target state="translated">O tipo do terceiro elemento.</target>       </trans-unit>
        <trans-unit id="5070" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToValueTuple``3(System.Tuple{``0,``1,``2})">
          <source>The tuple object to convert to a value tuple</source>
          <target state="translated">O objeto de tupla a ser convertido em uma tupla de valor</target>       </trans-unit>
        <trans-unit id="5071" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToValueTuple``3(System.Tuple{``0,``1,``2})">
          <source>Converts an instance of the <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> class to an instance of the  <ph id="ph2">&lt;see langword="ValueTuple" /&gt;</ph> structure.</source>
          <target state="translated">Converte uma instância da classe <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> em uma instância da estrutura <ph id="ph2">&lt;see langword="ValueTuple" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="5072" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``4(System.Tuple{``0,``1,``2,``3})">
          <source>The type of the first element.</source>
          <target state="translated">O tipo do primeiro elemento.</target>       </trans-unit>
        <trans-unit id="5073" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``4(System.Tuple{``0,``1,``2,``3})">
          <source>The type of the second element.</source>
          <target state="translated">O tipo do segundo elemento.</target>       </trans-unit>
        <trans-unit id="5074" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``4(System.Tuple{``0,``1,``2,``3})">
          <source>The type of the third element.</source>
          <target state="translated">O tipo do terceiro elemento.</target>       </trans-unit>
        <trans-unit id="5075" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``4(System.Tuple{``0,``1,``2,``3})">
          <source>The type of the fourth element.</source>
          <target state="translated">O tipo do quarto elemento.</target>       </trans-unit>
        <trans-unit id="5076" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToValueTuple``4(System.Tuple{``0,``1,``2,``3})">
          <source>The tuple object to convert to a value tuple</source>
          <target state="translated">O objeto de tupla a ser convertido em uma tupla de valor</target>       </trans-unit>
        <trans-unit id="5077" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToValueTuple``4(System.Tuple{``0,``1,``2,``3})">
          <source>Converts an instance of the <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> class to an instance of the  <ph id="ph2">&lt;see langword="ValueTuple" /&gt;</ph> structure.</source>
          <target state="translated">Converte uma instância da classe <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> em uma instância da estrutura <ph id="ph2">&lt;see langword="ValueTuple" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="5078" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``5(System.Tuple{``0,``1,``2,``3,``4})">
          <source>The type of the first element.</source>
          <target state="translated">O tipo do primeiro elemento.</target>       </trans-unit>
        <trans-unit id="5079" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``5(System.Tuple{``0,``1,``2,``3,``4})">
          <source>The type of the second element.</source>
          <target state="translated">O tipo do segundo elemento.</target>       </trans-unit>
        <trans-unit id="5080" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``5(System.Tuple{``0,``1,``2,``3,``4})">
          <source>The type of the third element.</source>
          <target state="translated">O tipo do terceiro elemento.</target>       </trans-unit>
        <trans-unit id="5081" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``5(System.Tuple{``0,``1,``2,``3,``4})">
          <source>The type of the fourth element.</source>
          <target state="translated">O tipo do quarto elemento.</target>       </trans-unit>
        <trans-unit id="5082" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``5(System.Tuple{``0,``1,``2,``3,``4})">
          <source>The type of the fifth element.</source>
          <target state="translated">O tipo do quinto elemento.</target>       </trans-unit>
        <trans-unit id="5083" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToValueTuple``5(System.Tuple{``0,``1,``2,``3,``4})">
          <source>The tuple object to convert to a value tuple</source>
          <target state="translated">O objeto de tupla a ser convertido em uma tupla de valor</target>       </trans-unit>
        <trans-unit id="5084" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToValueTuple``5(System.Tuple{``0,``1,``2,``3,``4})">
          <source>Converts an instance of the <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> class to an instance of the  <ph id="ph2">&lt;see langword="ValueTuple" /&gt;</ph> structure.</source>
          <target state="translated">Converte uma instância da classe <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> em uma instância da estrutura <ph id="ph2">&lt;see langword="ValueTuple" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="5085" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``6(System.Tuple{``0,``1,``2,``3,``4,``5})">
          <source>The type of the first element.</source>
          <target state="translated">O tipo do primeiro elemento.</target>       </trans-unit>
        <trans-unit id="5086" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``6(System.Tuple{``0,``1,``2,``3,``4,``5})">
          <source>The type of the second element.</source>
          <target state="translated">O tipo do segundo elemento.</target>       </trans-unit>
        <trans-unit id="5087" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``6(System.Tuple{``0,``1,``2,``3,``4,``5})">
          <source>The type of the third element.</source>
          <target state="translated">O tipo do terceiro elemento.</target>       </trans-unit>
        <trans-unit id="5088" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``6(System.Tuple{``0,``1,``2,``3,``4,``5})">
          <source>The type of the fourth element.</source>
          <target state="translated">O tipo do quarto elemento.</target>       </trans-unit>
        <trans-unit id="5089" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``6(System.Tuple{``0,``1,``2,``3,``4,``5})">
          <source>The type of the fifth element.</source>
          <target state="translated">O tipo do quinto elemento.</target>       </trans-unit>
        <trans-unit id="5090" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``6(System.Tuple{``0,``1,``2,``3,``4,``5})">
          <source>The type of the sixth element.</source>
          <target state="translated">O tipo do sexto elemento.</target>       </trans-unit>
        <trans-unit id="5091" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToValueTuple``6(System.Tuple{``0,``1,``2,``3,``4,``5})">
          <source>The tuple object to convert to a value tuple</source>
          <target state="translated">O objeto de tupla a ser convertido em uma tupla de valor</target>       </trans-unit>
        <trans-unit id="5092" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToValueTuple``6(System.Tuple{``0,``1,``2,``3,``4,``5})">
          <source>Converts an instance of the <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> class to an instance of the  <ph id="ph2">&lt;see langword="ValueTuple" /&gt;</ph> structure.</source>
          <target state="translated">Converte uma instância da classe <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> em uma instância da estrutura <ph id="ph2">&lt;see langword="ValueTuple" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="5093" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``7(System.Tuple{``0,``1,``2,``3,``4,``5,``6})">
          <source>The type of the first element.</source>
          <target state="translated">O tipo do primeiro elemento.</target>       </trans-unit>
        <trans-unit id="5094" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``7(System.Tuple{``0,``1,``2,``3,``4,``5,``6})">
          <source>The type of the second element.</source>
          <target state="translated">O tipo do segundo elemento.</target>       </trans-unit>
        <trans-unit id="5095" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``7(System.Tuple{``0,``1,``2,``3,``4,``5,``6})">
          <source>The type of the third element.</source>
          <target state="translated">O tipo do terceiro elemento.</target>       </trans-unit>
        <trans-unit id="5096" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``7(System.Tuple{``0,``1,``2,``3,``4,``5,``6})">
          <source>The type of the fourth element.</source>
          <target state="translated">O tipo do quarto elemento.</target>       </trans-unit>
        <trans-unit id="5097" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``7(System.Tuple{``0,``1,``2,``3,``4,``5,``6})">
          <source>The type of the fifth element.</source>
          <target state="translated">O tipo do quinto elemento.</target>       </trans-unit>
        <trans-unit id="5098" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``7(System.Tuple{``0,``1,``2,``3,``4,``5,``6})">
          <source>The type of the sixth element.</source>
          <target state="translated">O tipo do sexto elemento.</target>       </trans-unit>
        <trans-unit id="5099" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``7(System.Tuple{``0,``1,``2,``3,``4,``5,``6})">
          <source>The type of the seventh element.</source>
          <target state="translated">O tipo do sétimo elemento.</target>       </trans-unit>
        <trans-unit id="5100" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToValueTuple``7(System.Tuple{``0,``1,``2,``3,``4,``5,``6})">
          <source>The tuple object to convert to a value tuple</source>
          <target state="translated">O objeto de tupla a ser convertido em uma tupla de valor</target>       </trans-unit>
        <trans-unit id="5101" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToValueTuple``7(System.Tuple{``0,``1,``2,``3,``4,``5,``6})">
          <source>Converts an instance of the <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> class to an instance of the  <ph id="ph2">&lt;see langword="ValueTuple" /&gt;</ph> structure.</source>
          <target state="translated">Converte uma instância da classe <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> em uma instância da estrutura <ph id="ph2">&lt;see langword="ValueTuple" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="5102" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``8(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7}})">
          <source>The type of the first element.</source>
          <target state="translated">O tipo do primeiro elemento.</target>       </trans-unit>
        <trans-unit id="5103" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``8(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7}})">
          <source>The type of the second element.</source>
          <target state="translated">O tipo do segundo elemento.</target>       </trans-unit>
        <trans-unit id="5104" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``8(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7}})">
          <source>The type of the third element.</source>
          <target state="translated">O tipo do terceiro elemento.</target>       </trans-unit>
        <trans-unit id="5105" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``8(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7}})">
          <source>The type of the fourth element.</source>
          <target state="translated">O tipo do quarto elemento.</target>       </trans-unit>
        <trans-unit id="5106" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``8(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7}})">
          <source>The type of the fifth element.</source>
          <target state="translated">O tipo do quinto elemento.</target>       </trans-unit>
        <trans-unit id="5107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``8(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7}})">
          <source>The type of the sixth element.</source>
          <target state="translated">O tipo do sexto elemento.</target>       </trans-unit>
        <trans-unit id="5108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``8(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7}})">
          <source>The type of the seventh element.</source>
          <target state="translated">O tipo do sétimo elemento.</target>       </trans-unit>
        <trans-unit id="5109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``8(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7}})">
          <source>The type of the eighth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento oitavo, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="5110" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToValueTuple``8(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7}})">
          <source>The tuple object to convert to a value tuple</source>
          <target state="translated">O objeto de tupla a ser convertido em uma tupla de valor</target>       </trans-unit>
        <trans-unit id="5111" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToValueTuple``8(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7}})">
          <source>Converts an instance of the <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> class to an instance of the  <ph id="ph2">&lt;see langword="ValueTuple" /&gt;</ph> structure.</source>
          <target state="translated">Converte uma instância da classe <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> em uma instância da estrutura <ph id="ph2">&lt;see langword="ValueTuple" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="5112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``9(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8}})">
          <source>The type of the first element.</source>
          <target state="translated">O tipo do primeiro elemento.</target>       </trans-unit>
        <trans-unit id="5113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``9(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8}})">
          <source>The type of the second element.</source>
          <target state="translated">O tipo do segundo elemento.</target>       </trans-unit>
        <trans-unit id="5114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``9(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8}})">
          <source>The type of the third element.</source>
          <target state="translated">O tipo do terceiro elemento.</target>       </trans-unit>
        <trans-unit id="5115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``9(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8}})">
          <source>The type of the fourth element.</source>
          <target state="translated">O tipo do quarto elemento.</target>       </trans-unit>
        <trans-unit id="5116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``9(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8}})">
          <source>The type of the fifth element.</source>
          <target state="translated">O tipo do quinto elemento.</target>       </trans-unit>
        <trans-unit id="5117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``9(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8}})">
          <source>The type of the sixth element.</source>
          <target state="translated">O tipo do sexto elemento.</target>       </trans-unit>
        <trans-unit id="5118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``9(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8}})">
          <source>The type of the seventh element.</source>
          <target state="translated">O tipo do sétimo elemento.</target>       </trans-unit>
        <trans-unit id="5119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``9(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8}})">
          <source>The type of the eighth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento oitavo, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="5120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``9(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8}})">
          <source>The type of the ninth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">O tipo do elemento nono, ou <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="5121" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToValueTuple``9(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8}})">
          <source>The tuple object to convert to a value tuple</source>
          <target state="translated">O objeto de tupla a ser convertido em uma tupla de valor</target>       </trans-unit>
        <trans-unit id="5122" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToValueTuple``9(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8}})">
          <source>Converts an instance of the <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> class to an instance of the  <ph id="ph2">&lt;see langword="ValueTuple" /&gt;</ph> structure.</source>
          <target state="translated">Converte uma instância da classe <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> em uma instância da estrutura <ph id="ph2">&lt;see langword="ValueTuple" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="5123" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.ConvertEditedValue(System.Web.DynamicData.IFieldFormattingOptions,System.String)">
          <source>The formatting options object, as defined by the <ph id="ph1">&lt;see cref="T:System.Web.DynamicData.IFieldFormattingOptions" /&gt;</ph> object.</source>
          <target state="translated">O objeto de opções de formatação, conforme definido pelo objeto <ph id="ph1">&lt;see cref="T:System.Web.DynamicData.IFieldFormattingOptions" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="5124" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.ConvertEditedValue(System.Web.DynamicData.IFieldFormattingOptions,System.String)">
          <source>The input value to be converted.</source>
          <target state="translated">O valor de entrada a ser convertido.</target>       </trans-unit>
        <trans-unit id="5125" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.ConvertEditedValue(System.Web.DynamicData.IFieldFormattingOptions,System.String)">
          <source>Returns the value provided by a user for a control that is being validated.</source>
          <target state="translated">Retorna o valor fornecido por um usuário para um controle que está sendo validado.</target>       </trans-unit>
        <trans-unit id="5126" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.EnablePersistedSelection(System.Web.UI.WebControls.BaseDataBoundControl)">
          <source>The data bound control.</source>
          <target state="translated">O controle associado a dados.</target>       </trans-unit>
        <trans-unit id="5127" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.EnablePersistedSelection(System.Web.UI.WebControls.BaseDataBoundControl)">
          <source>Enables selection to be persisted in data controls that support selection and paging.</source>
          <target state="translated">Permite que a seleção seja persistida nos controles de dados que dão suporte à seleção e à paginação.</target>       </trans-unit>
        <trans-unit id="5128" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.ExpandDynamicWhereParameters(System.Web.DynamicData.IDynamicDataSource)">
          <source>The data source object.</source>
          <target state="translated">O objeto de fonte de dados.</target>       </trans-unit>
        <trans-unit id="5129" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.ExpandDynamicWhereParameters(System.Web.DynamicData.IDynamicDataSource)">
          <source>Expands dynamic filters into <ph id="ph1">&lt;see langword="Where" /&gt;</ph> parameters that are usable by the data source.</source>
          <target state="translated">Expande os filtros dinâmicos em parâmetros <ph id="ph1">&lt;see langword="Where" /&gt;</ph> que são utilizáveis pela fonte de dados.</target>       </trans-unit>
        <trans-unit id="5130" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.FindDataSourceControl(System.Web.UI.Control)">
          <source>A control inside the hierarchy of a data-bound control whose containing control you want to find.</source>
          <target state="translated">Um controle na hierarquia de um controle com limite de dados cujo controle recipiente você deseja localizar.</target>       </trans-unit>
        <trans-unit id="5131" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.FindDataSourceControl(System.Web.UI.Control)">
          <source>Returns the data source that is associated with the data control for the specified control.</source>
          <target state="translated">Retorna a fonte de dados associada ao controle de dados do controle especificado.</target>       </trans-unit>
        <trans-unit id="5132" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.FindFieldTemplate(System.Web.UI.Control,System.String)">
          <source>The containing control.</source>
          <target state="translated">O controle de contenção.</target>       </trans-unit>
        <trans-unit id="5133" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.FindFieldTemplate(System.Web.UI.Control,System.String)">
          <source>The name of the column.</source>
          <target state="translated">O nome da coluna.</target>       </trans-unit>
        <trans-unit id="5134" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.FindFieldTemplate(System.Web.UI.Control,System.String)">
          <source>Returns the field template for the specified column in the specified control's naming container.</source>
          <target state="translated">Retorna o modelo do campo para a coluna especificada no contêiner de nomenclatura do controle especificado.</target>       </trans-unit>
        <trans-unit id="5135" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.FindMetaTable(System.Web.UI.Control)">
          <source>The current control.</source>
          <target state="translated">O controle atual.</target>       </trans-unit>
        <trans-unit id="5136" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.FindMetaTable(System.Web.UI.Control)">
          <source>Returns the metatable object for the containing data control.</source>
          <target state="translated">Retorna o objeto metatable para o controle que contém dados.</target>       </trans-unit>
        <trans-unit id="5137" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.FormatEditValue(System.Web.DynamicData.IFieldFormattingOptions,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.DynamicData.IFieldFormattingOptions" /&gt;</ph> instance to use.</source>
          <target state="translated">A instância <ph id="ph1">&lt;see cref="T:System.Web.DynamicData.IFieldFormattingOptions" /&gt;</ph> a ser usada.</target>       </trans-unit>
        <trans-unit id="5138" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.FormatEditValue(System.Web.DynamicData.IFieldFormattingOptions,System.Object)">
          <source>The field value to format.</source>
          <target state="translated">O valor do campo para formatar.</target>       </trans-unit>
        <trans-unit id="5139" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.FormatEditValue(System.Web.DynamicData.IFieldFormattingOptions,System.Object)">
          <source>Formats the specified field value by using the specified formatting options.</source>
          <target state="translated">Formata o valor do campo especificado usando as opções de formatação especificadas.</target>       </trans-unit>
        <trans-unit id="5140" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.FormatValue(System.Web.DynamicData.IFieldFormattingOptions,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.DynamicData.IFieldFormattingOptions" /&gt;</ph> instance to use.</source>
          <target state="translated">A instância <ph id="ph1">&lt;see cref="T:System.Web.DynamicData.IFieldFormattingOptions" /&gt;</ph> a ser usada.</target>       </trans-unit>
        <trans-unit id="5141" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.FormatValue(System.Web.DynamicData.IFieldFormattingOptions,System.Object)">
          <source>The field value to format.</source>
          <target state="translated">O valor do campo para formatar.</target>       </trans-unit>
        <trans-unit id="5142" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.FormatValue(System.Web.DynamicData.IFieldFormattingOptions,System.Object)">
          <source>Formats the specified field value by using the specified formatting options.</source>
          <target state="translated">Formata o valor do campo especificado usando as opções de formatação especificadas.</target>       </trans-unit>
        <trans-unit id="5143" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.GetDefaultValues(System.Web.UI.IDataSource)">
          <source>The data source for which to get the default values.</source>
          <target state="translated">A fonte de dados para a qual obter os valores padrão.</target>       </trans-unit>
        <trans-unit id="5144" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.GetDefaultValues(System.Web.UI.IDataSource)">
          <source>Gets the collection of the default values for the specified data source.</source>
          <target state="translated">Obtém a coleção de valores padrão para a fonte de dados especificada.</target>       </trans-unit>
        <trans-unit id="5145" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.GetDefaultValues(System.Web.UI.INamingContainer)">
          <source>The data control for which to get the default values.</source>
          <target state="translated">O controle de dados para o qual obter os valores padrão.</target>       </trans-unit>
        <trans-unit id="5146" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.GetDefaultValues(System.Web.UI.INamingContainer)">
          <source>Gets the collection of the default values for the specified data control.</source>
          <target state="translated">Obtém a coleção de valores padrão para o controle de dados especificado.</target>       </trans-unit>
        <trans-unit id="5147" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.GetEnumType(System.Web.DynamicData.MetaColumn)">
          <source>The column to get the enumeration type for.</source>
          <target state="translated">A coluna para a qual obter o tipo de enumeração.</target>       </trans-unit>
        <trans-unit id="5148" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.GetEnumType(System.Web.DynamicData.MetaColumn)">
          <source>Gets the type of the enumeration that represents the column.</source>
          <target state="translated">Obtém o tipo de enumeração que representa a coluna.</target>       </trans-unit>
        <trans-unit id="5149" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.GetMetaTable(System.Web.UI.IDataSource)">
          <source>The data source object for which to get the table metadata.</source>
          <target state="translated">O objeto de fonte de dados para o qual obter os metadados de tabela.</target>       </trans-unit>
        <trans-unit id="5150" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.GetMetaTable(System.Web.UI.IDataSource)">
          <source>Gets the metadata for a table in the specified data source object.</source>
          <target state="translated">Obtém os metadados para uma tabela no objeto de fonte de dados especificado.</target>       </trans-unit>
        <trans-unit id="5151" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.GetMetaTable(System.Web.UI.INamingContainer)">
          <source>The data control for which to get the table metadata.</source>
          <target state="translated">O controle de dados para o qual obter os metadados de tabela.</target>       </trans-unit>
        <trans-unit id="5152" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.GetMetaTable(System.Web.UI.INamingContainer)">
          <source>Gets the table metadata for the specified data control.</source>
          <target state="translated">Obtém os metadados de tabela para o controle de dados especificado.</target>       </trans-unit>
        <trans-unit id="5153" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.GetTable(System.Web.DynamicData.IDynamicDataSource)">
          <source>The data source control.</source>
          <target state="translated">O controle de fonte de dados.</target>       </trans-unit>
        <trans-unit id="5154" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.GetTable(System.Web.DynamicData.IDynamicDataSource)">
          <source>Returns the <ph id="ph1">&lt;see cref="T:System.Web.DynamicData.MetaTable" /&gt;</ph> object that is associated with the specified data source control.</source>
          <target state="translated">Retorna o objeto <ph id="ph1">&lt;see cref="T:System.Web.DynamicData.MetaTable" /&gt;</ph> associado ao controle de fonte de dados especificado.</target>       </trans-unit>
        <trans-unit id="5155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.DynamicData.DynamicDataExtensions.LoadWith``1(System.Web.UI.WebControls.LinqDataSource)">
          <source>The type of the entities that are returned by the data source.</source>
          <target state="translated">O tipo de entidades que são retornadas pela fonte de dados.</target>       </trans-unit>
        <trans-unit id="5156" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.LoadWith``1(System.Web.UI.WebControls.LinqDataSource)">
          <source>The LINQ data source to load the foreign keys from.</source>
          <target state="translated">A fonte de dados LINQ da qual carregar as chaves estrangeiras.</target>       </trans-unit>
        <trans-unit id="5157" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.LoadWith``1(System.Web.UI.WebControls.LinqDataSource)">
          <source>Sets the <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataLoadOptions" /&gt;</ph> value of a LINQ-to-SQL data source to force all the foreign-key entities to be loaded.</source>
          <target state="translated">Define o valor <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataLoadOptions" /&gt;</ph> de uma fonte de dados LINQ-to-SQL para forçar todas as entidades de chave estrangeira a serem carregadas.</target>       </trans-unit>
        <trans-unit id="5158" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.LoadWithForeignKeys(System.Web.UI.WebControls.LinqDataSource,System.Type)">
          <source>The LINQ data source to load the foreign keys from.</source>
          <target state="translated">A fonte de dados LINQ da qual carregar as chaves estrangeiras.</target>       </trans-unit>
        <trans-unit id="5159" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.LoadWithForeignKeys(System.Web.UI.WebControls.LinqDataSource,System.Type)">
          <source>The type of the entities that are returned by the data source.</source>
          <target state="translated">O tipo de entidades que são retornadas pela fonte de dados.</target>       </trans-unit>
        <trans-unit id="5160" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.LoadWithForeignKeys(System.Web.UI.WebControls.LinqDataSource,System.Type)">
          <source>Sets the <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataLoadOptions" /&gt;</ph> value of a LINQ-to-SQL data source to force all the foreign-key entities to be loaded.</source>
          <target state="translated">Define o valor <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataLoadOptions" /&gt;</ph> de uma fonte de dados LINQ-to-SQL para forçar todas as entidades de chave estrangeira a serem carregadas.</target>       </trans-unit>
        <trans-unit id="5161" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.SetMetaTable(System.Web.UI.INamingContainer,System.Web.DynamicData.MetaTable)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.INamingContainer" /&gt;</ph> object that contains the table.</source>
          <target state="translated">O objeto <ph id="ph1">&lt;see cref="T:System.Web.UI.INamingContainer" /&gt;</ph> que contém a tabela.</target>       </trans-unit>
        <trans-unit id="5162" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.SetMetaTable(System.Web.UI.INamingContainer,System.Web.DynamicData.MetaTable)">
          <source>The table metadata.</source>
          <target state="translated">Os metadados de tabela.</target>       </trans-unit>
        <trans-unit id="5163" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.SetMetaTable(System.Web.UI.INamingContainer,System.Web.DynamicData.MetaTable)">
          <source>Sets the table metadata for the specified data control.</source>
          <target state="translated">Define os metadados de tabela para o controle de dados especificado.</target>       </trans-unit>
        <trans-unit id="5164" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.SetMetaTable(System.Web.UI.INamingContainer,System.Web.DynamicData.MetaTable,System.Collections.Generic.IDictionary{System.String,System.Object})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.INamingContainer" /&gt;</ph> object that contains the table.</source>
          <target state="translated">O objeto <ph id="ph1">&lt;see cref="T:System.Web.UI.INamingContainer" /&gt;</ph> que contém a tabela.</target>       </trans-unit>
        <trans-unit id="5165" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.SetMetaTable(System.Web.UI.INamingContainer,System.Web.DynamicData.MetaTable,System.Collections.Generic.IDictionary{System.String,System.Object})">
          <source>The table metadata.</source>
          <target state="translated">Os metadados de tabela.</target>       </trans-unit>
        <trans-unit id="5166" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.SetMetaTable(System.Web.UI.INamingContainer,System.Web.DynamicData.MetaTable,System.Collections.Generic.IDictionary{System.String,System.Object})">
          <source>The default value mapping.</source>
          <target state="translated">O mapeamento de valores padrão.</target>       </trans-unit>
        <trans-unit id="5167" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.SetMetaTable(System.Web.UI.INamingContainer,System.Web.DynamicData.MetaTable,System.Collections.Generic.IDictionary{System.String,System.Object})">
          <source>Sets the table metadata and default value mapping for the specified data control.</source>
          <target state="translated">Define os metadados de tabela e o mapeamento de valores padrão para o controle de dados especificado.</target>       </trans-unit>
        <trans-unit id="5168" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.SetMetaTable(System.Web.UI.INamingContainer,System.Web.DynamicData.MetaTable,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.INamingContainer" /&gt;</ph> object that contains the table.</source>
          <target state="translated">O objeto <ph id="ph1">&lt;see cref="T:System.Web.UI.INamingContainer" /&gt;</ph> que contém a tabela.</target>       </trans-unit>
        <trans-unit id="5169" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.SetMetaTable(System.Web.UI.INamingContainer,System.Web.DynamicData.MetaTable,System.Object)">
          <source>The table metadata.</source>
          <target state="translated">Os metadados de tabela.</target>       </trans-unit>
        <trans-unit id="5170" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.SetMetaTable(System.Web.UI.INamingContainer,System.Web.DynamicData.MetaTable,System.Object)">
          <source>The default value mapping.</source>
          <target state="translated">O mapeamento de valores padrão.</target>       </trans-unit>
        <trans-unit id="5171" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.SetMetaTable(System.Web.UI.INamingContainer,System.Web.DynamicData.MetaTable,System.Object)">
          <source>Sets the table metadata and default value mapping for the specified data control.</source>
          <target state="translated">Define os metadados de tabela e o mapeamento de valores padrão para o controle de dados especificado.</target>       </trans-unit>
        <trans-unit id="5172" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.TryGetMetaTable(System.Web.UI.IDataSource,System.Web.DynamicData.MetaTable@)">
          <source>The data source that contains the table.</source>
          <target state="translated">A fonte de dados que contém a tabela.</target>       </trans-unit>
        <trans-unit id="5173" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.TryGetMetaTable(System.Web.UI.IDataSource,System.Web.DynamicData.MetaTable@)">
          <source>When this method returns, contains the table metadata.</source>
          <target state="translated">Quando esse método retorna, ele contém os metadados de tabela.</target>       </trans-unit>
        <trans-unit id="5174" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.TryGetMetaTable(System.Web.UI.IDataSource,System.Web.DynamicData.MetaTable@)">
          <source>This parameter is passed uninitialized.</source>
          <target state="translated">Este parâmetro é passado não inicializado.</target>       </trans-unit>
        <trans-unit id="5175" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.TryGetMetaTable(System.Web.UI.IDataSource,System.Web.DynamicData.MetaTable@)">
          <source>Determines whether table metadata is available.</source>
          <target state="translated">Determina se os metadados da tabela estão disponíveis.</target>       </trans-unit>
        <trans-unit id="5176" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.TryGetMetaTable(System.Web.UI.INamingContainer,System.Web.DynamicData.MetaTable@)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.INamingContainer" /&gt;</ph> object that contains the table.</source>
          <target state="translated">O objeto <ph id="ph1">&lt;see cref="T:System.Web.UI.INamingContainer" /&gt;</ph> que contém a tabela.</target>       </trans-unit>
        <trans-unit id="5177" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.TryGetMetaTable(System.Web.UI.INamingContainer,System.Web.DynamicData.MetaTable@)">
          <source>When this method returns, contains the table metadata.</source>
          <target state="translated">Quando esse método retorna, ele contém os metadados de tabela.</target>       </trans-unit>
        <trans-unit id="5178" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.TryGetMetaTable(System.Web.UI.INamingContainer,System.Web.DynamicData.MetaTable@)">
          <source>This parameter is passed uninitialized.</source>
          <target state="translated">Este parâmetro é passado não inicializado.</target>       </trans-unit>
        <trans-unit id="5179" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.TryGetMetaTable(System.Web.UI.INamingContainer,System.Web.DynamicData.MetaTable@)">
          <source>Determines whether table metadata is available.</source>
          <target state="translated">Determina se os metadados da tabela estão disponíveis.</target>       </trans-unit>
        <trans-unit id="5180" translate="yes" xml:space="preserve" uid="M:System.Web.UI.DataControlExtensions.EnableDynamicData(System.Web.UI.INamingContainer,System.Type)">
          <source>The data control to enable Dynamic Data behavior for.</source>
          <target state="translated">O controle de dados para o qual habilitar o comportamento de Dados Dinâmicos.</target>       </trans-unit>
        <trans-unit id="5181" translate="yes" xml:space="preserve" uid="M:System.Web.UI.DataControlExtensions.EnableDynamicData(System.Web.UI.INamingContainer,System.Type)">
          <source>The type to use for metadata.</source>
          <target state="translated">O tipo a ser usado para metadados.</target>       </trans-unit>
        <trans-unit id="5182" translate="yes" xml:space="preserve" uid="M:System.Web.UI.DataControlExtensions.EnableDynamicData(System.Web.UI.INamingContainer,System.Type)">
          <source>Enables Dynamic Data behavior for the specified data control.</source>
          <target state="translated">Habilita o comportamento de Dados Dinâmicos para o controle de dados especificado.</target>       </trans-unit>
        <trans-unit id="5183" translate="yes" xml:space="preserve" uid="M:System.Web.UI.DataControlExtensions.EnableDynamicData(System.Web.UI.INamingContainer,System.Type,System.Collections.Generic.IDictionary{System.String,System.Object})">
          <source>The data control to enable Dynamic Data behavior for.</source>
          <target state="translated">O controle de dados para o qual habilitar o comportamento de Dados Dinâmicos.</target>       </trans-unit>
        <trans-unit id="5184" translate="yes" xml:space="preserve" uid="M:System.Web.UI.DataControlExtensions.EnableDynamicData(System.Web.UI.INamingContainer,System.Type,System.Collections.Generic.IDictionary{System.String,System.Object})">
          <source>The type to use for metadata.</source>
          <target state="translated">O tipo a ser usado para metadados.</target>       </trans-unit>
        <trans-unit id="5185" translate="yes" xml:space="preserve" uid="M:System.Web.UI.DataControlExtensions.EnableDynamicData(System.Web.UI.INamingContainer,System.Type,System.Collections.Generic.IDictionary{System.String,System.Object})">
          <source>The default values to use with the <ph id="ph1">&lt;see cref="T:System.Web.UI.INamingContainer" /&gt;</ph> object.</source>
          <target state="translated">Os valores padrão a serem usados com o objeto <ph id="ph1">&lt;see cref="T:System.Web.UI.INamingContainer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="5186" translate="yes" xml:space="preserve" uid="M:System.Web.UI.DataControlExtensions.EnableDynamicData(System.Web.UI.INamingContainer,System.Type,System.Collections.Generic.IDictionary{System.String,System.Object})">
          <source>Enables Dynamic Data behavior for the specified data control.</source>
          <target state="translated">Habilita o comportamento de Dados Dinâmicos para o controle de dados especificado.</target>       </trans-unit>
        <trans-unit id="5187" translate="yes" xml:space="preserve" uid="M:System.Web.UI.DataControlExtensions.EnableDynamicData(System.Web.UI.INamingContainer,System.Type,System.Object)">
          <source>The data control to enable Dynamic Data behavior for.</source>
          <target state="translated">O controle de dados para o qual habilitar o comportamento de Dados Dinâmicos.</target>       </trans-unit>
        <trans-unit id="5188" translate="yes" xml:space="preserve" uid="M:System.Web.UI.DataControlExtensions.EnableDynamicData(System.Web.UI.INamingContainer,System.Type,System.Object)">
          <source>The type that represents the table to display.</source>
          <target state="translated">O tipo que representa a tabela a ser exibida.</target>       </trans-unit>
        <trans-unit id="5189" translate="yes" xml:space="preserve" uid="M:System.Web.UI.DataControlExtensions.EnableDynamicData(System.Web.UI.INamingContainer,System.Type,System.Object)">
          <source>The default values to use with the <ph id="ph1">&lt;see cref="T:System.Web.UI.INamingContainer" /&gt;</ph> object.</source>
          <target state="translated">Os valores padrão a serem usados com o objeto <ph id="ph1">&lt;see cref="T:System.Web.UI.INamingContainer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="5190" translate="yes" xml:space="preserve" uid="M:System.Web.UI.DataControlExtensions.EnableDynamicData(System.Web.UI.INamingContainer,System.Type,System.Object)">
          <source>Enables Dynamic Data behavior for the specified data control.</source>
          <target state="translated">Habilita o comportamento de Dados Dinâmicos para o controle de dados especificado.</target>       </trans-unit>
        <trans-unit id="5191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.QueryExtensions.SortBy``1(System.Linq.IQueryable{``0},System.String)">
          <source>The generic type of the object.</source>
          <target state="translated">O tipo genérico do objeto.</target>       </trans-unit>
        <trans-unit id="5192" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.QueryExtensions.SortBy``1(System.Linq.IQueryable{``0},System.String)">
          <source>The object to sort.</source>
          <target state="translated">O objeto para classificar.</target>       </trans-unit>
        <trans-unit id="5193" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.QueryExtensions.SortBy``1(System.Linq.IQueryable{``0},System.String)">
          <source>The sort expression.</source>
          <target state="translated">A expressão de classificação.</target>       </trans-unit>
        <trans-unit id="5194" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.QueryExtensions.SortBy``1(System.Linq.IQueryable{``0},System.String)">
          <source>Specifies a sort order.</source>
          <target state="translated">Especifica uma ordem de classificação.</target>       </trans-unit>
        <trans-unit id="5195" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.DispatcherExtensions.BeginInvoke(System.Windows.Threading.Dispatcher,System.Action)">
          <source>The dispatcher that executes the delegate.</source>
          <target state="translated">O dispatcher que executa o delegado.</target>       </trans-unit>
        <trans-unit id="5196" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.DispatcherExtensions.BeginInvoke(System.Windows.Threading.Dispatcher,System.Action)">
          <source>The delegate to execute, which takes no arguments and does not return a value.</source>
          <target state="translated">O delegado a ser executado, que não leva argumentos e não retorna um valor.</target>       </trans-unit>
        <trans-unit id="5197" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.DispatcherExtensions.BeginInvoke(System.Windows.Threading.Dispatcher,System.Action)">
          <source>Executes the specified delegate asynchronously with normal priority on the thread that the specified <ph id="ph1">&lt;see cref="T:System.Windows.Threading.Dispatcher" /&gt;</ph> was created on.</source>
          <target state="translated">Executa o delegado especificado de maneira assíncrona com prioridade normal no thread em que o <ph id="ph1">&lt;see cref="T:System.Windows.Threading.Dispatcher" /&gt;</ph> especificado foi criado.</target>       </trans-unit>
        <trans-unit id="5198" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.DispatcherExtensions.BeginInvoke(System.Windows.Threading.Dispatcher,System.Action,System.Windows.Threading.DispatcherPriority)">
          <source>The dispatcher that executes the delegate.</source>
          <target state="translated">O dispatcher que executa o delegado.</target>       </trans-unit>
        <trans-unit id="5199" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.DispatcherExtensions.BeginInvoke(System.Windows.Threading.Dispatcher,System.Action,System.Windows.Threading.DispatcherPriority)">
          <source>The delegate to execute, which takes no arguments and does not return a value.</source>
          <target state="translated">O delegado a ser executado, que não leva argumentos e não retorna um valor.</target>       </trans-unit>
        <trans-unit id="5200" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.DispatcherExtensions.BeginInvoke(System.Windows.Threading.Dispatcher,System.Action,System.Windows.Threading.DispatcherPriority)">
          <source>The execution priority of the delegate relative to other pending operations in the <ph id="ph1">&lt;see cref="T:System.Windows.Threading.Dispatcher" /&gt;</ph> event queue.</source>
          <target state="translated">A prioridade de execução do delegado em relação a outras operações pendentes na fila de eventos <ph id="ph1">&lt;see cref="T:System.Windows.Threading.Dispatcher" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="5201" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.DispatcherExtensions.BeginInvoke(System.Windows.Threading.Dispatcher,System.Action,System.Windows.Threading.DispatcherPriority)">
          <source>Executes the specified delegate asynchronously with the specified priority on the thread that the specified <ph id="ph1">&lt;see cref="T:System.Windows.Threading.Dispatcher" /&gt;</ph> was created on.</source>
          <target state="translated">Executa o delegado especificado de maneira assíncrona com prioridade especificada no thread em que o <ph id="ph1">&lt;see cref="T:System.Windows.Threading.Dispatcher" /&gt;</ph> especificado foi criado.</target>       </trans-unit>
        <trans-unit id="5202" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.DispatcherExtensions.Invoke(System.Windows.Threading.Dispatcher,System.Action)">
          <source>The dispatcher that executes the delegate.</source>
          <target state="translated">O dispatcher que executa o delegado.</target>       </trans-unit>
        <trans-unit id="5203" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.DispatcherExtensions.Invoke(System.Windows.Threading.Dispatcher,System.Action)">
          <source>The delegate to execute, which takes no arguments and does not return a value.</source>
          <target state="translated">O delegado a ser executado, que não leva argumentos e não retorna um valor.</target>       </trans-unit>
        <trans-unit id="5204" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.DispatcherExtensions.Invoke(System.Windows.Threading.Dispatcher,System.Action)">
          <source>Executes the specified delegate synchronously with normal priority on the thread that the specified <ph id="ph1">&lt;see cref="T:System.Windows.Threading.Dispatcher" /&gt;</ph> was created on.</source>
          <target state="translated">Executa o delegado especificado de maneira síncrona com prioridade normal no thread em que o <ph id="ph1">&lt;see cref="T:System.Windows.Threading.Dispatcher" /&gt;</ph> especificado foi criado.</target>       </trans-unit>
        <trans-unit id="5205" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.DispatcherExtensions.Invoke(System.Windows.Threading.Dispatcher,System.Action,System.TimeSpan)">
          <source>The dispatcher that executes the delegate.</source>
          <target state="translated">O dispatcher que executa o delegado.</target>       </trans-unit>
        <trans-unit id="5206" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.DispatcherExtensions.Invoke(System.Windows.Threading.Dispatcher,System.Action,System.TimeSpan)">
          <source>The delegate to execute, which takes no arguments and does not return a value.</source>
          <target state="translated">O delegado a ser executado, que não leva argumentos e não retorna um valor.</target>       </trans-unit>
        <trans-unit id="5207" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.DispatcherExtensions.Invoke(System.Windows.Threading.Dispatcher,System.Action,System.TimeSpan)">
          <source>The maximum time to wait for the operation to finish.</source>
          <target state="translated">O tempo máximo para esperar a conclusão da operação.</target>       </trans-unit>
        <trans-unit id="5208" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.DispatcherExtensions.Invoke(System.Windows.Threading.Dispatcher,System.Action,System.TimeSpan)">
          <source>Executes the specified delegate synchronously on the thread that the specified <ph id="ph1">&lt;see cref="T:System.Windows.Threading.Dispatcher" /&gt;</ph> was created on, and stops execution after the specified time-out period.</source>
          <target state="translated">Executa o delegado especificado de forma síncrona no thread em que o <ph id="ph1">&lt;see cref="T:System.Windows.Threading.Dispatcher" /&gt;</ph> especificado foi criado e para a execução após o período de tempo limite especificado.</target>       </trans-unit>
        <trans-unit id="5209" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.DispatcherExtensions.Invoke(System.Windows.Threading.Dispatcher,System.Action,System.TimeSpan,System.Windows.Threading.DispatcherPriority)">
          <source>The dispatcher that executes the delegate.</source>
          <target state="translated">O dispatcher que executa o delegado.</target>       </trans-unit>
        <trans-unit id="5210" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.DispatcherExtensions.Invoke(System.Windows.Threading.Dispatcher,System.Action,System.TimeSpan,System.Windows.Threading.DispatcherPriority)">
          <source>The delegate to execute, which takes no arguments and does not return a value.</source>
          <target state="translated">O delegado a ser executado, que não leva argumentos e não retorna um valor.</target>       </trans-unit>
        <trans-unit id="5211" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.DispatcherExtensions.Invoke(System.Windows.Threading.Dispatcher,System.Action,System.TimeSpan,System.Windows.Threading.DispatcherPriority)">
          <source>The maximum time to wait for the operation to finish.</source>
          <target state="translated">O tempo máximo para esperar a conclusão da operação.</target>       </trans-unit>
        <trans-unit id="5212" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.DispatcherExtensions.Invoke(System.Windows.Threading.Dispatcher,System.Action,System.TimeSpan,System.Windows.Threading.DispatcherPriority)">
          <source>The execution priority of the delegate relative to other pending operations in the <ph id="ph1">&lt;see cref="T:System.Windows.Threading.Dispatcher" /&gt;</ph> event queue.</source>
          <target state="translated">A prioridade de execução do delegado em relação a outras operações pendentes na fila de eventos <ph id="ph1">&lt;see cref="T:System.Windows.Threading.Dispatcher" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="5213" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.DispatcherExtensions.Invoke(System.Windows.Threading.Dispatcher,System.Action,System.TimeSpan,System.Windows.Threading.DispatcherPriority)">
          <source>Executes the specified delegate synchronously with the specified priority on the thread that the specified <ph id="ph1">&lt;see cref="T:System.Windows.Threading.Dispatcher" /&gt;</ph> was created on, and stops execution after the specified time-out period.</source>
          <target state="translated">Executa o delegado especificado de forma síncrona com a propriedade especificada no thread em que o <ph id="ph1">&lt;see cref="T:System.Windows.Threading.Dispatcher" /&gt;</ph> especificado foi criado e para a execução após o período de tempo limite especificado.</target>       </trans-unit>
        <trans-unit id="5214" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.DispatcherExtensions.Invoke(System.Windows.Threading.Dispatcher,System.Action,System.Windows.Threading.DispatcherPriority)">
          <source>The dispatcher that executes the delegate.</source>
          <target state="translated">O dispatcher que executa o delegado.</target>       </trans-unit>
        <trans-unit id="5215" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.DispatcherExtensions.Invoke(System.Windows.Threading.Dispatcher,System.Action,System.Windows.Threading.DispatcherPriority)">
          <source>The delegate to execute, which takes no arguments and does not return a value.</source>
          <target state="translated">O delegado a ser executado, que não leva argumentos e não retorna um valor.</target>       </trans-unit>
        <trans-unit id="5216" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.DispatcherExtensions.Invoke(System.Windows.Threading.Dispatcher,System.Action,System.Windows.Threading.DispatcherPriority)">
          <source>The execution priority of the delegate relative to other pending operations in the <ph id="ph1">&lt;see cref="T:System.Windows.Threading.Dispatcher" /&gt;</ph> event queue.</source>
          <target state="translated">A prioridade de execução do delegado em relação a outras operações pendentes na fila de eventos <ph id="ph1">&lt;see cref="T:System.Windows.Threading.Dispatcher" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="5217" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.DispatcherExtensions.Invoke(System.Windows.Threading.Dispatcher,System.Action,System.Windows.Threading.DispatcherPriority)">
          <source>Executes the specified delegate synchronously with the specified priority on the thread that the specified <ph id="ph1">&lt;see cref="T:System.Windows.Threading.Dispatcher" /&gt;</ph> was created on.</source>
          <target state="translated">Executa o delegado especificado de maneira síncrona com prioridade especificada no thread em que o <ph id="ph1">&lt;see cref="T:System.Windows.Threading.Dispatcher" /&gt;</ph> especificado foi criado.</target>       </trans-unit>
        <trans-unit id="5218" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.TaskExtensions.DispatcherOperationWait(System.Threading.Tasks.Task)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph> that is associated with the <ph id="ph2">&lt;see cref="T:System.Windows.Threading.DispatcherOperation" /&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph> associado ao <ph id="ph2">&lt;see cref="T:System.Windows.Threading.DispatcherOperation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="5219" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.TaskExtensions.DispatcherOperationWait(System.Threading.Tasks.Task)">
          <source>Waits indefinitely for the underlying <ph id="ph1">&lt;see cref="T:System.Windows.Threading.DispatcherOperation" /&gt;</ph> to complete.</source>
          <target state="translated">Aguarda indefinidamente a conclusão do <ph id="ph1">&lt;see cref="T:System.Windows.Threading.DispatcherOperation" /&gt;</ph> subjacente.</target>       </trans-unit>
        <trans-unit id="5220" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.TaskExtensions.DispatcherOperationWait(System.Threading.Tasks.Task,System.TimeSpan)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph> that is associated with the <ph id="ph2">&lt;see cref="T:System.Windows.Threading.DispatcherOperation" /&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph> associado ao <ph id="ph2">&lt;see cref="T:System.Windows.Threading.DispatcherOperation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="5221" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.TaskExtensions.DispatcherOperationWait(System.Threading.Tasks.Task,System.TimeSpan)">
          <source>The amount of time to wait.</source>
          <target state="translated">O período de espera para aguardar.</target>       </trans-unit>
        <trans-unit id="5222" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.TaskExtensions.DispatcherOperationWait(System.Threading.Tasks.Task,System.TimeSpan)">
          <source>Waits for the specified amount of time for the underlying <ph id="ph1">&lt;see cref="T:System.Windows.Threading.DispatcherOperation" /&gt;</ph> to complete.</source>
          <target state="translated">Aguarda a conclusão do <ph id="ph1">&lt;see cref="T:System.Windows.Threading.DispatcherOperation" /&gt;</ph> subjacente pelo período de tempo especificado.</target>       </trans-unit>
        <trans-unit id="5223" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.TaskExtensions.IsDispatcherOperationTask(System.Threading.Tasks.Task)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph> to check.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph> a ser verificado.</target>       </trans-unit>
        <trans-unit id="5224" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.TaskExtensions.IsDispatcherOperationTask(System.Threading.Tasks.Task)">
          <source>Returns a value that indicates whether this <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph> is associated with a <ph id="ph2">&lt;see cref="T:System.Windows.Threading.DispatcherOperation" /&gt;</ph>.</source>
          <target state="translated">Retorna um valor que indica se este <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph> está associado a um <ph id="ph2">&lt;see cref="T:System.Windows.Threading.DispatcherOperation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="5225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The type of the objects in <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>, constrained to <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph>.</source>
          <target state="translated">O tipo dos objetos no <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>, restrito a <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="5226" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph> that contains the source collection.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> do <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph> que contém a coleção de origem.</target>       </trans-unit>
        <trans-unit id="5227" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0})">
          <source>Returns a collection of elements that contains the ancestors of every node in the source collection.</source>
          <target state="translated">Retorna uma coleção de elementos que contém os ancestrais de cada nó na coleção de origem.</target>       </trans-unit>
        <trans-unit id="5228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
          <source>The type of the objects in <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>, constrained to <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph>.</source>
          <target state="translated">O tipo dos objetos no <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>, restrito a <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="5229" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph> that contains the source collection.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> do <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph> que contém a coleção de origem.</target>       </trans-unit>
        <trans-unit id="5230" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> to match.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> correspondente.</target>       </trans-unit>
        <trans-unit id="5231" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
          <source>Returns a filtered collection of elements that contains the ancestors of every node in the source collection.</source>
          <target state="translated">Retorna uma coleção filtrada de elementos que contém os ancestrais de cada nó na coleção de origem.</target>       </trans-unit>
        <trans-unit id="5232" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
          <source>Only elements that have a matching <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> are included in the collection.</source>
          <target state="translated">Somente os elementos que têm um <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> correspondente são incluídos na coleção.</target>       </trans-unit>
        <trans-unit id="5233" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> that contains the source collection.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> do <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> que contém a coleção de origem.</target>       </trans-unit>
        <trans-unit id="5234" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
          <source>Returns a collection of elements that contains every element in the source collection, and the ancestors of every element in the source collection.</source>
          <target state="translated">Retorna uma coleção de elementos que contém todos os elementos na coleção de origem e os ancestrais de todos os elementos na coleção de origem.</target>       </trans-unit>
        <trans-unit id="5235" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> that contains the source collection.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> do <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> que contém a coleção de origem.</target>       </trans-unit>
        <trans-unit id="5236" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> to match.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> correspondente.</target>       </trans-unit>
        <trans-unit id="5237" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)">
          <source>Returns a filtered collection of elements that contains every element in the source collection, and the ancestors of every element in the source collection.</source>
          <target state="translated">Retorna uma coleção filtrada de elementos que contém todos os elementos na coleção de origem e os ancestrais de todos os elementos na coleção de origem.</target>       </trans-unit>
        <trans-unit id="5238" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)">
          <source>Only elements that have a matching <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> are included in the collection.</source>
          <target state="translated">Somente os elementos que têm um <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> correspondente são incluídos na coleção.</target>       </trans-unit>
        <trans-unit id="5239" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> that contains the source collection.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> do <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> que contém a coleção de origem.</target>       </trans-unit>
        <trans-unit id="5240" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
          <source>Returns a collection of the attributes of every element in the source collection.</source>
          <target state="translated">Retorna uma coleção de atributos de cada elemento na coleção de origem.</target>       </trans-unit>
        <trans-unit id="5241" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> that contains the source collection.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> do <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> que contém a coleção de origem.</target>       </trans-unit>
        <trans-unit id="5242" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> to match.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> correspondente.</target>       </trans-unit>
        <trans-unit id="5243" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)">
          <source>Returns a filtered collection of the attributes of every element in the source collection.</source>
          <target state="translated">Retorna uma coleção filtrada dos atributos de cada elemento na coleção de origem.</target>       </trans-unit>
        <trans-unit id="5244" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)">
          <source>Only elements that have a matching <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> are included in the collection.</source>
          <target state="translated">Somente os elementos que têm um <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> correspondente são incluídos na coleção.</target>       </trans-unit>
        <trans-unit id="5245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.DescendantNodes``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The type of the objects in <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>, constrained to <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph>.</source>
          <target state="translated">O tipo dos objetos no <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>, restrito a <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="5246" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.DescendantNodes``1(System.Collections.Generic.IEnumerable{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph> that contains the source collection.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> do <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph> que contém a coleção de origem.</target>       </trans-unit>
        <trans-unit id="5247" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.DescendantNodes``1(System.Collections.Generic.IEnumerable{``0})">
          <source>Returns a collection of the descendant nodes of every document and element in the source collection.</source>
          <target state="translated">Retorna uma coleção dos nós descendentes de todos os documentos e elementos na coleção de origem.</target>       </trans-unit>
        <trans-unit id="5248" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.DescendantNodesAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> that contains the source collection.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> do <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> que contém a coleção de origem.</target>       </trans-unit>
        <trans-unit id="5249" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.DescendantNodesAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
          <source>Returns a collection of nodes that contains every element in the source collection, and the descendant nodes of every element in the source collection.</source>
          <target state="translated">Retorna uma coleção de nós que contém todos os elementos na coleção de origem e os nós descendentes de todos os elementos na coleção de origem.</target>       </trans-unit>
        <trans-unit id="5250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The type of the objects in <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>, constrained to <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph>.</source>
          <target state="translated">O tipo dos objetos no <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>, restrito a <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="5251" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph> that contains the source collection.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> do <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph> que contém a coleção de origem.</target>       </trans-unit>
        <trans-unit id="5252" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0})">
          <source>Returns a collection of elements that contains the descendant elements of every element and document in the source collection.</source>
          <target state="translated">Retorna uma coleção de elementos que contém os elementos descendentes de cada elemento e o documento na coleção de origem.</target>       </trans-unit>
        <trans-unit id="5253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
          <source>The type of the objects in <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>, constrained to <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph>.</source>
          <target state="translated">O tipo dos objetos no <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>, restrito a <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="5254" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph> that contains the source collection.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> do <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph> que contém a coleção de origem.</target>       </trans-unit>
        <trans-unit id="5255" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> to match.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> correspondente.</target>       </trans-unit>
        <trans-unit id="5256" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
          <source>Returns a filtered collection of elements that contains the descendant elements of every element and document in the source collection.</source>
          <target state="translated">Retorna uma coleção filtrada de elementos que contém os elementos descendentes de cada elemento e o documento na coleção de origem.</target>       </trans-unit>
        <trans-unit id="5257" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
          <source>Only elements that have a matching <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> are included in the collection.</source>
          <target state="translated">Somente os elementos que têm um <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> correspondente são incluídos na coleção.</target>       </trans-unit>
        <trans-unit id="5258" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> that contains the source collection.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> do <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> que contém a coleção de origem.</target>       </trans-unit>
        <trans-unit id="5259" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
          <source>Returns a collection of elements that contains every element in the source collection, and the descendent elements of every element in the source collection.</source>
          <target state="translated">Retorna uma coleção de elementos que contém todos os elementos na coleção de origem e os elementos descendentes de todos os elementos na coleção de origem.</target>       </trans-unit>
        <trans-unit id="5260" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> that contains the source collection.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> do <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> que contém a coleção de origem.</target>       </trans-unit>
        <trans-unit id="5261" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> to match.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> correspondente.</target>       </trans-unit>
        <trans-unit id="5262" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)">
          <source>Returns a filtered collection of elements that contains every element in the source collection, and the descendents of every element in the source collection.</source>
          <target state="translated">Retorna uma coleção filtrada de elementos que contém todos os elementos na coleção de origem e os descendentes de todos os elementos na coleção de origem.</target>       </trans-unit>
        <trans-unit id="5263" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)">
          <source>Only elements that have a matching <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> are included in the collection.</source>
          <target state="translated">Somente os elementos que têm um <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> correspondente são incluídos na coleção.</target>       </trans-unit>
        <trans-unit id="5264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The type of the objects in <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>, constrained to <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph>.</source>
          <target state="translated">O tipo dos objetos no <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>, restrito a <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="5265" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> that contains the source collection.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> do <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> que contém a coleção de origem.</target>       </trans-unit>
        <trans-unit id="5266" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0})">
          <source>Returns a collection of the child elements of every element and document in the source collection.</source>
          <target state="translated">Retorna uma coleção dos filhos elementos de cada elemento e o documento na coleção de origem.</target>       </trans-unit>
        <trans-unit id="5267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
          <source>The type of the objects in <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>, constrained to <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph>.</source>
          <target state="translated">O tipo dos objetos no <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>, restrito a <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="5268" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> that contains the source collection.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> do <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> que contém a coleção de origem.</target>       </trans-unit>
        <trans-unit id="5269" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> to match.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> correspondente.</target>       </trans-unit>
        <trans-unit id="5270" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
          <source>Returns a filtered collection of the child elements of every element and document in the source collection.</source>
          <target state="translated">Retorna uma coleção filtrada dos elementos filho de cada elemento e documento na coleção de origem.</target>       </trans-unit>
        <trans-unit id="5271" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
          <source>Only elements that have a matching <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> are included in the collection.</source>
          <target state="translated">Somente os elementos que têm um <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> correspondente são incluídos na coleção.</target>       </trans-unit>
        <trans-unit id="5272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.InDocumentOrder``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The type of the objects in <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>, constrained to <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph>.</source>
          <target state="translated">O tipo dos objetos no <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>, restrito a <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="5273" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.InDocumentOrder``1(System.Collections.Generic.IEnumerable{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph> that contains the source collection.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> do <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph> que contém a coleção de origem.</target>       </trans-unit>
        <trans-unit id="5274" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.InDocumentOrder``1(System.Collections.Generic.IEnumerable{``0})">
          <source>Returns a collection of nodes that contains all nodes in the source collection, sorted in document order.</source>
          <target state="translated">Retorna uma coleção de nós que contém todos os nós na coleção de origem, classificados em ordem segundo o documento.</target>       </trans-unit>
        <trans-unit id="5275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Nodes``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The type of the objects in <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>, constrained to <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph>.</source>
          <target state="translated">O tipo dos objetos no <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>, restrito a <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="5276" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.Nodes``1(System.Collections.Generic.IEnumerable{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph> that contains the source collection.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> do <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph> que contém a coleção de origem.</target>       </trans-unit>
        <trans-unit id="5277" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.Nodes``1(System.Collections.Generic.IEnumerable{``0})">
          <source>Returns a collection of the child nodes of every document and element in the source collection.</source>
          <target state="translated">Retorna uma coleção dos nós filhos de todos os documentos e elementos na coleção de origem.</target>       </trans-unit>
        <trans-unit id="5278" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.Remove(System.Collections.Generic.IEnumerable{System.Xml.Linq.XAttribute})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> that contains the source collection.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> do <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> que contém a coleção de origem.</target>       </trans-unit>
        <trans-unit id="5279" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.Remove(System.Collections.Generic.IEnumerable{System.Xml.Linq.XAttribute})">
          <source>Removes every attribute in the source collection from its parent element.</source>
          <target state="translated">Remove cada atributo na coleção de origem do respectivo elemento pai.</target>       </trans-unit>
        <trans-unit id="5280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Remove``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The type of the objects in <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>, constrained to <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph>.</source>
          <target state="translated">O tipo dos objetos no <bpt id="p1">&lt;c&gt;</bpt>fonte<ept id="p1">&lt;/c&gt;</ept>, restrito a <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="5281" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.Remove``1(System.Collections.Generic.IEnumerable{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph> that contains the source collection.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> do <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph> que contém a coleção de origem.</target>       </trans-unit>
        <trans-unit id="5282" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.Remove``1(System.Collections.Generic.IEnumerable{``0})">
          <source>Removes every node in the source collection from its parent node.</source>
          <target state="translated">Remove todos os nós na coleção de origem do respectivo nó pai.</target>       </trans-unit>
        <trans-unit id="5283" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.GetSchemaInfo(System.Xml.Linq.XAttribute)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> that has been previously validated.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> que foi validado anteriormente.</target>       </trans-unit>
        <trans-unit id="5284" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.GetSchemaInfo(System.Xml.Linq.XAttribute)">
          <source>Gets the post-schema-validation infoset (PSVI) of a validated attribute.</source>
          <target state="translated">Obtém o PSVI (infoset de validação pós-esquema) de um atributo validado.</target>       </trans-unit>
        <trans-unit id="5285" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.GetSchemaInfo(System.Xml.Linq.XElement)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> that has been previously validated.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> que foi validado anteriormente.</target>       </trans-unit>
        <trans-unit id="5286" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.GetSchemaInfo(System.Xml.Linq.XElement)">
          <source>Gets the post-schema-validation infoset (PSVI) of a validated element.</source>
          <target state="translated">Obtém o PSVI (post-schema-validation infoset) de um elemento validado.</target>       </trans-unit>
        <trans-unit id="5287" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XAttribute,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to validate.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> a ser validado.</target>       </trans-unit>
        <trans-unit id="5288" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XAttribute,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> that specifies the sub-tree to validate.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> que especifica a subárvore a ser validada.</target>       </trans-unit>
        <trans-unit id="5289" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XAttribute,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> to validate against.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> em relação ao qual validar.</target>       </trans-unit>
        <trans-unit id="5290" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XAttribute,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.Schema.ValidationEventHandler" /&gt;</ph> for an event that occurs when the reader encounters validation errors.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Xml.Schema.ValidationEventHandler" /&gt;</ph> para um evento que ocorre quando o leitor encontra erros de validação.</target>       </trans-unit>
        <trans-unit id="5291" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XAttribute,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
          <source>If <ph id="ph1">&lt;see langword="null" /&gt;</ph>, throws an exception upon validation errors.</source>
          <target state="translated">Se <ph id="ph1">&lt;see langword="null" /&gt;</ph>, gera uma exceção nos erros de validação.</target>       </trans-unit>
        <trans-unit id="5292" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XAttribute,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
          <source>This method validates that an <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> conforms to a specified <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> and an <ph id="ph3">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</source>
          <target state="translated">Esse método valida que um <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> está em conformidade com um <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> e um <ph id="ph3">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> especificados.</target>       </trans-unit>
        <trans-unit id="5293" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XAttribute,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to validate.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> a ser validado.</target>       </trans-unit>
        <trans-unit id="5294" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XAttribute,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> that specifies the sub-tree to validate.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> que especifica a subárvore a ser validada.</target>       </trans-unit>
        <trans-unit id="5295" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XAttribute,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> to validate against.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> em relação ao qual validar.</target>       </trans-unit>
        <trans-unit id="5296" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XAttribute,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.Schema.ValidationEventHandler" /&gt;</ph> for an event that occurs when the reader encounters validation errors.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Xml.Schema.ValidationEventHandler" /&gt;</ph> para um evento que ocorre quando o leitor encontra erros de validação.</target>       </trans-unit>
        <trans-unit id="5297" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XAttribute,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="null" /&gt;</ph>, throws an exception upon validation errors.</source>
          <target state="translated">Se <ph id="ph1">&lt;see langword="null" /&gt;</ph>, gera uma exceção nos erros de validação.</target>       </trans-unit>
        <trans-unit id="5298" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XAttribute,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> indicating whether to populate the post-schema-validation infoset (PSVI).</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> indicando se deve popular o PSVI (post-schema-validation infoset).</target>       </trans-unit>
        <trans-unit id="5299" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XAttribute,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>Validates that an <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> conforms to a specified <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> and an <ph id="ph3">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>, optionally populating the XML tree with the post-schema-validation infoset (PSVI).</source>
          <target state="translated">Valida se um <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> está em conformidade com um <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> e <ph id="ph3">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> especificados, opcionalmente, populando a árvore XML com o PSVI (infoset de validação pós-esquema).</target>       </trans-unit>
        <trans-unit id="5300" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XDocument,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> to validate.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> a ser validado.</target>       </trans-unit>
        <trans-unit id="5301" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XDocument,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> to validate against.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> em relação ao qual validar.</target>       </trans-unit>
        <trans-unit id="5302" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XDocument,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.Schema.ValidationEventHandler" /&gt;</ph> for an event that occurs when the reader encounters validation errors.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Xml.Schema.ValidationEventHandler" /&gt;</ph> para um evento que ocorre quando o leitor encontra erros de validação.</target>       </trans-unit>
        <trans-unit id="5303" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XDocument,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
          <source>If <ph id="ph1">&lt;see langword="null" /&gt;</ph>, throws an exception upon validation errors.</source>
          <target state="translated">Se <ph id="ph1">&lt;see langword="null" /&gt;</ph>, gera uma exceção nos erros de validação.</target>       </trans-unit>
        <trans-unit id="5304" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XDocument,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
          <source>This method validates that an <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> conforms to an XSD in an <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</source>
          <target state="translated">Esse método valida se um <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> está em conformidade com um XSD em um <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="5305" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XDocument,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> to validate.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> a ser validado.</target>       </trans-unit>
        <trans-unit id="5306" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XDocument,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> to validate against.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> em relação ao qual validar.</target>       </trans-unit>
        <trans-unit id="5307" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XDocument,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.Schema.ValidationEventHandler" /&gt;</ph> for an event that occurs when the reader encounters validation errors.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Xml.Schema.ValidationEventHandler" /&gt;</ph> para um evento que ocorre quando o leitor encontra erros de validação.</target>       </trans-unit>
        <trans-unit id="5308" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XDocument,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="null" /&gt;</ph>, throws an exception upon validation errors.</source>
          <target state="translated">Se <ph id="ph1">&lt;see langword="null" /&gt;</ph>, gera uma exceção nos erros de validação.</target>       </trans-unit>
        <trans-unit id="5309" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XDocument,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> indicating whether to populate the post-schema-validation infoset (PSVI).</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> indicando se deve popular o PSVI (post-schema-validation infoset).</target>       </trans-unit>
        <trans-unit id="5310" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XDocument,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>Validates that an <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> conforms to an XSD in an <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>, optionally populating the XML tree with the post-schema-validation infoset (PSVI).</source>
          <target state="translated">Valida que um <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> está em conformidade com um XSD em um <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>, opcionalmente, preenchendo a árvore XML com o PSVI (post-schema-validation infoset).</target>       </trans-unit>
        <trans-unit id="5311" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XElement,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to validate.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> a ser validado.</target>       </trans-unit>
        <trans-unit id="5312" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XElement,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> that specifies the sub-tree to validate.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> que especifica a subárvore a ser validada.</target>       </trans-unit>
        <trans-unit id="5313" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XElement,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> to validate against.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> em relação ao qual validar.</target>       </trans-unit>
        <trans-unit id="5314" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XElement,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.Schema.ValidationEventHandler" /&gt;</ph> for an event that occurs when the reader encounters validation errors.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Xml.Schema.ValidationEventHandler" /&gt;</ph> para um evento que ocorre quando o leitor encontra erros de validação.</target>       </trans-unit>
        <trans-unit id="5315" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XElement,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
          <source>If <ph id="ph1">&lt;see langword="null" /&gt;</ph>, throws an exception upon validation errors.</source>
          <target state="translated">Se <ph id="ph1">&lt;see langword="null" /&gt;</ph>, gera uma exceção nos erros de validação.</target>       </trans-unit>
        <trans-unit id="5316" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XElement,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
          <source>This method validates that an <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> sub-tree conforms to a specified <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> and an <ph id="ph3">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</source>
          <target state="translated">Esse método valida que uma subárvore <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> está em conformidade com um <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> e um <ph id="ph3">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> especificados.</target>       </trans-unit>
        <trans-unit id="5317" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XElement,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to validate.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> a ser validado.</target>       </trans-unit>
        <trans-unit id="5318" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XElement,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> that specifies the sub-tree to validate.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> que especifica a subárvore a ser validada.</target>       </trans-unit>
        <trans-unit id="5319" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XElement,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> to validate against.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> em relação ao qual validar.</target>       </trans-unit>
        <trans-unit id="5320" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XElement,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.Schema.ValidationEventHandler" /&gt;</ph> for an event that occurs when the reader encounters validation errors.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Xml.Schema.ValidationEventHandler" /&gt;</ph> para um evento que ocorre quando o leitor encontra erros de validação.</target>       </trans-unit>
        <trans-unit id="5321" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XElement,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="null" /&gt;</ph>, throws an exception upon validation errors.</source>
          <target state="translated">Se <ph id="ph1">&lt;see langword="null" /&gt;</ph>, gera uma exceção nos erros de validação.</target>       </trans-unit>
        <trans-unit id="5322" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XElement,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> indicating whether to populate the post-schema-validation infoset (PSVI).</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> indicando se deve popular o PSVI (post-schema-validation infoset).</target>       </trans-unit>
        <trans-unit id="5323" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XElement,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>Validates that an <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> sub-tree conforms to a specified <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> and an <ph id="ph3">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>, optionally populating the XML tree with the post-schema-validation infoset (PSVI).</source>
          <target state="translated">Valida se uma subárvore <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> está em conformidade com um <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> e <ph id="ph3">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> especificados, opcionalmente, populando a árvore XML com o PSVI (infoset de validação pós-esquema).</target>       </trans-unit>
        <trans-unit id="5324" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph> that can process XPath queries.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph> que pode processar consultas XPath.</target>       </trans-unit>
        <trans-unit id="5325" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode)">
          <source>Creates an <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> for an <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph>.</source>
          <target state="translated">Cria um <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> para um <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="5326" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode,System.Xml.XmlNameTable)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph> that can process an XPath query.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph> que pode processar uma consulta XPath.</target>       </trans-unit>
        <trans-unit id="5327" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode,System.Xml.XmlNameTable)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.XmlNameTable" /&gt;</ph> to be used by <ph id="ph2">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph>.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Xml.XmlNameTable" /&gt;</ph> a ser usado por <ph id="ph2">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="5328" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode,System.Xml.XmlNameTable)">
          <source>Creates an <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> for an <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph>.</source>
          <target state="translated">Cria um <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> para um <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="5329" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode,System.Xml.XmlNameTable)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlNameTable" /&gt;</ph> enables more efficient XPath expression processing.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Xml.XmlNameTable" /&gt;</ph> habilita o processamento mais eficiente de expressão XPath.</target>       </trans-unit>
        <trans-unit id="5330" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph> on which to evaluate the XPath expression.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph> no qual a expressão XPath será avaliada.</target>       </trans-unit>
        <trans-unit id="5331" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains an XPath expression.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> que contém uma expressão XPath.</target>       </trans-unit>
        <trans-unit id="5332" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String)">
          <source>Evaluates an XPath expression.</source>
          <target state="translated">Avalia uma expressão XPath.</target>       </trans-unit>
        <trans-unit id="5333" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph> on which to evaluate the XPath expression.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph> no qual a expressão XPath será avaliada.</target>       </trans-unit>
        <trans-unit id="5334" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains an XPath expression.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> que contém uma expressão XPath.</target>       </trans-unit>
        <trans-unit id="5335" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.IXmlNamespaceResolver" /&gt;</ph> for the namespace prefixes in the XPath expression.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Xml.IXmlNamespaceResolver" /&gt;</ph> para os prefixos de namespace na expressão XPath.</target>       </trans-unit>
        <trans-unit id="5336" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)">
          <source>Evaluates an XPath expression, resolving namespace prefixes using the specified <ph id="ph1">&lt;see cref="T:System.Xml.IXmlNamespaceResolver" /&gt;</ph>.</source>
          <target state="translated">Avalia uma expressão XPath, resolvendo os prefixos de namespace usando o <ph id="ph1">&lt;see cref="T:System.Xml.IXmlNamespaceResolver" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="5337" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph> on which to evaluate the XPath expression.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph> no qual a expressão XPath será avaliada.</target>       </trans-unit>
        <trans-unit id="5338" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode,System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains an XPath expression.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> que contém uma expressão XPath.</target>       </trans-unit>
        <trans-unit id="5339" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode,System.String)">
          <source>Selects an <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> using a XPath expression.</source>
          <target state="translated">Seleciona um <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> usando uma expressão XPath.</target>       </trans-unit>
        <trans-unit id="5340" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph> on which to evaluate the XPath expression.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph> no qual a expressão XPath será avaliada.</target>       </trans-unit>
        <trans-unit id="5341" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains an XPath expression.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> que contém uma expressão XPath.</target>       </trans-unit>
        <trans-unit id="5342" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.IXmlNamespaceResolver" /&gt;</ph> for the namespace prefixes in the XPath expression.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Xml.IXmlNamespaceResolver" /&gt;</ph> para os prefixos de namespace na expressão XPath.</target>       </trans-unit>
        <trans-unit id="5343" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)">
          <source>Selects an <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> using a XPath expression, resolving namespace prefixes using the specified <ph id="ph2">&lt;see cref="T:System.Xml.IXmlNamespaceResolver" /&gt;</ph>.</source>
          <target state="translated">Seleciona um <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> usando uma expressão XPath, resolvendo os prefixos de namespace usando o <ph id="ph2">&lt;see cref="T:System.Xml.IXmlNamespaceResolver" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="5344" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph> on which to evaluate the XPath expression.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph> no qual a expressão XPath será avaliada.</target>       </trans-unit>
        <trans-unit id="5345" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains an XPath expression.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> que contém uma expressão XPath.</target>       </trans-unit>
        <trans-unit id="5346" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String)">
          <source>Selects a collection of elements using an XPath expression.</source>
          <target state="translated">Seleciona uma coleção de elementos usando uma expressão XPath.</target>       </trans-unit>
        <trans-unit id="5347" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph> on which to evaluate the XPath expression.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph> no qual a expressão XPath será avaliada.</target>       </trans-unit>
        <trans-unit id="5348" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains an XPath expression.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> que contém uma expressão XPath.</target>       </trans-unit>
        <trans-unit id="5349" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.IXmlNamespaceResolver" /&gt;</ph> for the namespace prefixes in the XPath expression.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Xml.IXmlNamespaceResolver" /&gt;</ph> para os prefixos de namespace na expressão XPath.</target>       </trans-unit>
        <trans-unit id="5350" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)">
          <source>Selects a collection of elements using an XPath expression, resolving namespace prefixes using the specified <ph id="ph1">&lt;see cref="T:System.Xml.IXmlNamespaceResolver" /&gt;</ph>.</source>
          <target state="translated">Seleciona uma coleção de elementos usando uma expressão XPath, resolvendo os prefixos de namespace usando o <ph id="ph1">&lt;see cref="T:System.Xml.IXmlNamespaceResolver" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="5351" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.XDocumentExtensions.ToXPathNavigable(System.Xml.Linq.XNode)">
          <source>The XML node to navigate.</source>
          <target state="translated">O nó XML a ser navegado.</target>       </trans-unit>
        <trans-unit id="5352" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.XDocumentExtensions.ToXPathNavigable(System.Xml.Linq.XNode)">
          <source>Returns an accessor that allows you to navigate and edit the specified <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph>.</source>
          <target state="translated">Retorna um acessador que permite que você navegue e edite o <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph> especificado.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>