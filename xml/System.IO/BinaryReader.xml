<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="BinaryReader.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac522a75f9b356ec6c35a6b7fdfaaf1447ea2b69f02.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">22a75f9b356ec6c35a6b7fdfaaf1447ea2b69f02</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IO.BinaryReader">
          <source>Reads primitive data types as binary values in a specific encoding.</source>
          <target state="translated">Lê os tipos de dados primitivos como valores binários em uma codificação específica.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.BinaryReader">
          <source>The <ph id="ph1">&lt;xref:System.IO.BinaryReader&gt;</ph> class provides methods that simplify reading primitive data types from a stream.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.IO.BinaryReader&gt;</ph> classe fornece métodos que simplificam a ler tipos de dados primitivos de um fluxo.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.BinaryReader">
          <source>For example, you can use the <ph id="ph1">&lt;xref:System.IO.BinaryReader.ReadBoolean%2A&gt;</ph> method to read the next byte as a Boolean value and advance the current position in the stream by one byte.</source>
          <target state="translated">Por exemplo, você pode usar o <ph id="ph1">&lt;xref:System.IO.BinaryReader.ReadBoolean%2A&gt;</ph> método para ler o próximo byte como um valor booliano e Avançar a posição atual no fluxo de um byte.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.BinaryReader">
          <source>The class includes read methods that support different data types.</source>
          <target state="translated">A classe inclui métodos de leitura que dão suporte a diferentes tipos de dados.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.BinaryReader">
          <source>When you create a new instance of the <ph id="ph1">&lt;xref:System.IO.BinaryReader&gt;</ph> class, you provide the stream to read from, and optionally specify the type of encoding and whether to leave the stream open after disposing the <ph id="ph2">&lt;xref:System.IO.BinaryReader&gt;</ph> object.</source>
          <target state="translated">Quando você cria uma nova instância do <ph id="ph1">&lt;xref:System.IO.BinaryReader&gt;</ph> classe, você fornece o fluxo para ler e, opcionalmente, especifique o tipo de codificação e se deseja deixar o fluxo abrir depois de descartar o <ph id="ph2">&lt;xref:System.IO.BinaryReader&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.BinaryReader">
          <source>If you do not specify an encoding type, UTF-8 is used.</source>
          <target state="translated">Se você não especificar um tipo de codificação, UTF-8 será usado.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.BinaryReader">
          <source>This type implements the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface.</source>
          <target state="translated">Este tipo implementa o <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.BinaryReader">
          <source>When you have finished using the type, you should dispose of it either directly or indirectly.</source>
          <target state="translated">Quando você terminar de usar o tipo, descarte-direta ou indiretamente.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.BinaryReader">
          <source>To dispose of the type directly, call its <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> method in a <ph id="ph2">`try`</ph><ph id="ph3">/</ph><ph id="ph4">`catch`</ph> block.</source>
          <target state="translated">Para descartar o tipo diretamente, chame seu <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> método em um <ph id="ph2">`try`</ph> <ph id="ph3">/</ph> <ph id="ph4">`catch`</ph> bloco.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.BinaryReader">
          <source>To dispose of it indirectly, use a language construct such as <ph id="ph1">`using`</ph> (in C#) or <ph id="ph2">`Using`</ph> (in Visual Basic).</source>
          <target state="translated">Para descartar indiretamente dele, use uma construção de linguagem, como <ph id="ph1">`using`</ph> (em c#) ou <ph id="ph2">`Using`</ph> (no Visual Basic).</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.BinaryReader">
          <source>For more information, see the "Using an Object that Implements IDisposable" section in the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface topic.</source>
          <target state="translated">Para obter mais informações, consulte a seção "Usando um objeto que implementa IDisposable" o <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> tópico de interface.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.BinaryReader">
          <source>The following code example demonstrates how to store and retrieve application settings in a file.</source>
          <target state="translated">O exemplo de código a seguir demonstra como armazenar e recuperar as configurações de aplicativo em um arquivo.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="T:System.IO.BinaryReader">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.BinaryReader" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.IO.BinaryReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.#ctor(System.IO.Stream)">
          <source>The input stream.</source>
          <target state="translated">O fluxo de entrada.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.#ctor(System.IO.Stream)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.BinaryReader" /&gt;</ph> class based on the specified stream and using UTF-8 encoding.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.IO.BinaryReader" /&gt;</ph> com base no fluxo especificado e usando a codificação UTF-8.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.#ctor(System.IO.Stream)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Para obter uma lista de tarefas comuns de e/s, consulte <bpt id="p1">[</bpt>tarefas comuns de e/s<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.#ctor(System.IO.Stream)">
          <source>The following code example demonstrates how to store and retrieve application settings in a file.</source>
          <target state="translated">O exemplo de código a seguir demonstra como armazenar e recuperar as configurações de aplicativo em um arquivo.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.#ctor(System.IO.Stream)">
          <source>The stream does not support reading, is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, or is already closed.</source>
          <target state="translated">O fluxo não dá suporte à leitura, é <ph id="ph1">&lt;see langword="null" /&gt;</ph> ou já está fechado.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.#ctor(System.IO.Stream,System.Text.Encoding)">
          <source>The input stream.</source>
          <target state="translated">O fluxo de entrada.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.#ctor(System.IO.Stream,System.Text.Encoding)">
          <source>The character encoding to use.</source>
          <target state="translated">A codificação de caracteres a ser usada.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.#ctor(System.IO.Stream,System.Text.Encoding)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.BinaryReader" /&gt;</ph> class based on the specified stream and character encoding.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.IO.BinaryReader" /&gt;</ph> com base no fluxo especificado e na codificação de caracteres.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.#ctor(System.IO.Stream,System.Text.Encoding)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Para obter uma lista de tarefas comuns de e/s, consulte <bpt id="p1">[</bpt>tarefas comuns de e/s<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.#ctor(System.IO.Stream,System.Text.Encoding)">
          <source>The stream does not support reading, is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, or is already closed.</source>
          <target state="translated">O fluxo não dá suporte à leitura, é <ph id="ph1">&lt;see langword="null" /&gt;</ph> ou já está fechado.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.#ctor(System.IO.Stream,System.Text.Encoding)">
          <source><ph id="ph1">&lt;paramref name="encoding" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="encoding" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)">
          <source>The input stream.</source>
          <target state="translated">O fluxo de entrada.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)">
          <source>The character encoding to use.</source>
          <target state="translated">A codificação de caracteres a ser usada.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to leave the stream open after the <ph id="ph2">&lt;see cref="T:System.IO.BinaryReader" /&gt;</ph> object is disposed; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para deixar o fluxo aberto após o objeto <ph id="ph2">&lt;see cref="T:System.IO.BinaryReader" /&gt;</ph> ser descartado; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.BinaryReader" /&gt;</ph> class based on the specified stream and character encoding, and optionally leaves the stream open.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.IO.BinaryReader" /&gt;</ph> com base no fluxo e na codificação de caracteres especificados e, opcionalmente, deixa o fluxo aberto.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)">
          <source>The stream does not support reading, is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, or is already closed.</source>
          <target state="translated">O fluxo não dá suporte à leitura, é <ph id="ph1">&lt;see langword="null" /&gt;</ph> ou já está fechado.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="encoding" /&gt;</ph> or <ph id="ph2">&lt;paramref name="input" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="encoding" /&gt;</ph> ou <ph id="ph2">&lt;paramref name="input" /&gt;</ph> é <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="P:System.IO.BinaryReader.BaseStream">
          <source>Exposes access to the underlying stream of the <ph id="ph1">&lt;see cref="T:System.IO.BinaryReader" /&gt;</ph>.</source>
          <target state="translated">Expõe o acesso ao fluxo subjacente do <ph id="ph1">&lt;see cref="T:System.IO.BinaryReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.BinaryReader.BaseStream">
          <source>The underlying stream associated with the <ph id="ph1">&lt;see langword="BinaryReader" /&gt;</ph>.</source>
          <target state="translated">O fluxo subjacente associado ao <ph id="ph1">&lt;see langword="BinaryReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.BinaryReader.BaseStream">
          <source>Using the underlying stream while reading or while using the <ph id="ph1">`BinaryReader`</ph> can cause data loss and corruption.</source>
          <target state="translated">Usando a base de fluxo durante a leitura ou ao usar o <ph id="ph1">`BinaryReader`</ph> pode causar corrupção e perda de dados.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.BinaryReader.BaseStream">
          <source>For example, the same bytes might be read more than once, bytes might be skipped, or character reading might become unpredictable.</source>
          <target state="translated">Por exemplo, os mesmos bytes podem ser lido mais de uma vez, bytes podem ser ignorados ou leitura de caractere pode tornar-se imprevisível.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.BinaryReader.BaseStream">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Para obter uma lista de tarefas comuns de e/s, consulte <bpt id="p1">[</bpt>tarefas comuns de e/s<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.BinaryReader.BaseStream">
          <source>The following code example shows how to read and write <ph id="ph1">`Double`</ph> data to memory by using the <ph id="ph2">`BinaryReader`</ph> and <ph id="ph3">&lt;xref:System.IO.BinaryWriter&gt;</ph> classes on top of the <ph id="ph4">&lt;xref:System.IO.MemoryStream&gt;</ph> class.</source>
          <target state="translated">O exemplo de código a seguir mostra como ler e gravar <ph id="ph1">`Double`</ph> dados na memória usando o <ph id="ph2">`BinaryReader`</ph> e <ph id="ph3">&lt;xref:System.IO.BinaryWriter&gt;</ph> classes sobre a <ph id="ph4">&lt;xref:System.IO.MemoryStream&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.BinaryReader.BaseStream">
          <source><ph id="ph1">`MemoryStream`</ph> only reads and writes <ph id="ph2">`Byte`</ph> data.</source>
          <target state="translated"><ph id="ph1">`MemoryStream`</ph> apenas lê e grava <ph id="ph2">`Byte`</ph> dados.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.Close">
          <source>Closes the current reader and the underlying stream.</source>
          <target state="translated">Fecha o leitor atual e o fluxo subjacente.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.Close">
          <source>This implementation of <ph id="ph1">`Close`</ph> calls the <ph id="ph2">&lt;xref:System.IO.BinaryReader.Dispose%2A&gt;</ph> method passing a <ph id="ph3">`true`</ph> value.</source>
          <target state="translated">Essa implementação de <ph id="ph1">`Close`</ph> chama o <ph id="ph2">&lt;xref:System.IO.BinaryReader.Dispose%2A&gt;</ph> método passando um <ph id="ph3">`true`</ph> valor.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.Close">
          <source>Flushing the stream will not flush its underlying encoder unless you explicitly call <ph id="ph1">&lt;xref:System.IO.Stream.Flush%2A&gt;</ph> or <ph id="ph2">`Close`</ph>.</source>
          <target state="translated">Liberando o fluxo não liberar seu codificador subjacente, a menos que você chamar explicitamente <ph id="ph1">&lt;xref:System.IO.Stream.Flush%2A&gt;</ph> ou <ph id="ph2">`Close`</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.Close">
          <source>Setting <ph id="ph1">&lt;xref:System.IO.StreamWriter.AutoFlush%2A&gt;</ph> to <ph id="ph2">`true`</ph> means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</source>
          <target state="translated">Configuração <ph id="ph1">&lt;xref:System.IO.StreamWriter.AutoFlush%2A&gt;</ph> para <ph id="ph2">`true`</ph> significa que os dados serão liberados do buffer no fluxo, mas o estado de codificador não será liberado.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.Close">
          <source>This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</source>
          <target state="translated">Isso permite que o codificador deve manter o estado (parcial caracteres) para que ele pode codificar o próximo bloco de caracteres corretamente.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.Close">
          <source>This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</source>
          <target state="translated">Este cenário afeta UTF8 e UTF7 onde determinados caracteres podem ser codificados somente depois que o codificador recebe adjacentes ou mais caracteres.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="T:System.IO.BinaryReader">
          <source>Releases the resources used by the <ph id="ph1">&lt;see cref="T:System.IO.BinaryReader" /&gt;</ph> class.</source>
          <target state="translated">Libera os recursos usados pela classe <ph id="ph1">&lt;see cref="T:System.IO.BinaryReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.Dispose">
          <source>Releases all resources used by the current instance of the <ph id="ph1">&lt;see cref="T:System.IO.BinaryReader" /&gt;</ph> class.</source>
          <target state="translated">Libera todos os recursos usados pela instância atual da classe <ph id="ph1">&lt;see cref="T:System.IO.BinaryReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.Dispose">
          <source>Call <ph id="ph1">`Dispose`</ph> when you are finished using the <ph id="ph2">&lt;xref:System.IO.BinaryReader&gt;</ph>.</source>
          <target state="translated">Chamar <ph id="ph1">`Dispose`</ph> quando tiver terminado de usar o <ph id="ph2">&lt;xref:System.IO.BinaryReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.Dispose">
          <source>The <ph id="ph1">`Dispose`</ph> method leaves the <ph id="ph2">&lt;xref:System.IO.BinaryReader&gt;</ph> in an unusable state.</source>
          <target state="translated">O <ph id="ph1">`Dispose`</ph> método deixa o <ph id="ph2">&lt;xref:System.IO.BinaryReader&gt;</ph> em um estado inutilizável.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.Dispose">
          <source>After calling <ph id="ph1">`Dispose`</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.IO.BinaryReader&gt;</ph> so the garbage collector can reclaim the memory that the <ph id="ph3">&lt;xref:System.IO.BinaryReader&gt;</ph> was occupying.</source>
          <target state="translated">Depois de chamar <ph id="ph1">`Dispose`</ph>, você deve liberar todas as referências para o <ph id="ph2">&lt;xref:System.IO.BinaryReader&gt;</ph> para o coletor de lixo possa recuperar a memória que o <ph id="ph3">&lt;xref:System.IO.BinaryReader&gt;</ph> estava ocupando.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.Dispose">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>limpeza de recursos não gerenciados<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> e <bpt id="p2">[</bpt>implementar um método Dispose<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.Dispose">
          <source>Always call <ph id="ph1">`Dispose`</ph> before you release your last reference to the <ph id="ph2">&lt;xref:System.IO.BinaryReader&gt;</ph>.</source>
          <target state="translated">Sempre chamar <ph id="ph1">`Dispose`</ph> antes de liberar sua última referência para o <ph id="ph2">&lt;xref:System.IO.BinaryReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.Dispose">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id="ph1">&lt;xref:System.IO.BinaryReader&gt;</ph> object's <ph id="ph2">`Finalize`</ph> method.</source>
          <target state="translated">Caso contrário, os recursos que está usando não serão liberados até que o coletor de lixo chame o <ph id="ph1">&lt;xref:System.IO.BinaryReader&gt;</ph> do objeto <ph id="ph2">`Finalize`</ph> método.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para liberar recursos gerenciados e não gerenciados; <ph id="ph2">&lt;see langword="false" /&gt;</ph> para liberar apenas recursos não gerenciados.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.IO.BinaryReader" /&gt;</ph> class and optionally releases the managed resources.</source>
          <target state="translated">Libera os recursos não gerenciados usados pela classe <ph id="ph1">&lt;see cref="T:System.IO.BinaryReader" /&gt;</ph> e, opcionalmente, libera os recursos gerenciados.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.Dispose(System.Boolean)">
          <source>This method is called by <ph id="ph1">`Dispose`</ph> and <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph>.</source>
          <target state="translated">Este método é chamado pelo <ph id="ph1">`Dispose`</ph> e <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.Dispose(System.Boolean)">
          <source>By default, this method specifies the <ph id="ph1">`disposing`</ph> parameter as <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Por padrão, esse método Especifica o <ph id="ph1">`disposing`</ph> parâmetro como <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> specifies the <ph id="ph2">`disposing`</ph> parameter as <ph id="ph3">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> Especifica o <ph id="ph2">`disposing`</ph> parâmetro como <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this <ph id="ph3">&lt;xref:System.IO.BinaryReader&gt;</ph> references.</source>
          <target state="translated">Quando o <ph id="ph1">`disposing`</ph> parâmetro é <ph id="ph2">`true`</ph>, esse método libera todos os recursos mantidos por qualquer objeto gerenciado que este <ph id="ph3">&lt;xref:System.IO.BinaryReader&gt;</ph> referências.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose`</ph> method of each referenced object.</source>
          <target state="translated">Este método invoca o método <ph id="ph1">`Dispose`</ph> de cada objeto referenciado.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see cref="M:System.IO.BinaryReader.Dispose(System.Boolean)" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.IO.BinaryReader.Dispose(System.Boolean)" /&gt;</ph> pode ser chamado várias vezes por outros objetos.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.Dispose(System.Boolean)">
          <source>When overriding this method, be careful not to reference objects that have been previously disposed of in an earlier call to <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated">Ao substituir esse método, tenha cuidado para não fazer referência a objetos que têm foi descartados anteriormente em uma chamada anterior para <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.Dispose(System.Boolean)">
          <source>For more information about how to implement this method, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">Para obter mais informações sobre como implementar esse método, consulte <bpt id="p1">[</bpt>implementar um método Dispose<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see cref="M:System.IDisposable.Dispose" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</source>
          <target state="translated">Para obter mais informações sobre <ph id="ph1">&lt;see cref="M:System.IDisposable.Dispose" /&gt;</ph> e <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, consulte <bpt id="p1">[</bpt>limpeza de recursos não gerenciados<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.FillBuffer(System.Int32)">
          <source>The number of bytes to be read.</source>
          <target state="translated">O número de bytes a serem lidos.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.FillBuffer(System.Int32)">
          <source>Fills the internal buffer with the specified number of bytes read from the stream.</source>
          <target state="translated">Preenche o buffer interno com o número especificado de bytes lidos do fluxo.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.FillBuffer(System.Int32)">
          <source>The internal buffer size is the larger value between 16 and the value returned by <ph id="ph1">&lt;xref:System.Text.Encoding.GetMaxByteCount%2A&gt;</ph> for the specified encoding.</source>
          <target state="translated">O tamanho do buffer interno é o maior valor entre 16 e o valor retornado por <ph id="ph1">&lt;xref:System.Text.Encoding.GetMaxByteCount%2A&gt;</ph> para a codificação especificada.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.FillBuffer(System.Int32)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Para obter uma lista de tarefas comuns de e/s, consulte <bpt id="p1">[</bpt>tarefas comuns de e/s<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.FillBuffer(System.Int32)">
          <source>The end of the stream is reached before <ph id="ph1">&lt;paramref name="numBytes" /&gt;</ph> could be read.</source>
          <target state="translated">O final do fluxo foi atingido antes que <ph id="ph1">&lt;paramref name="numBytes" /&gt;</ph> pudesse ser lido.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.FillBuffer(System.Int32)">
          <source>An I/O error occurs.</source>
          <target state="translated">Ocorre um erro de E/S.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.FillBuffer(System.Int32)">
          <source>Requested <ph id="ph1">&lt;paramref name="numBytes" /&gt;</ph> is larger than the internal buffer size.</source>
          <target state="translated">O <ph id="ph1">&lt;paramref name="numBytes" /&gt;</ph> solicitado é maior que o tamanho do buffer interno.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.PeekChar">
          <source>Returns the next available character and does not advance the byte or character position.</source>
          <target state="translated">Retorna o próximo caractere disponível e não avance a posição do caractere ou byte.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.PeekChar">
          <source>The next available character, or -1 if no more characters are available or the stream does not support seeking.</source>
          <target state="translated">O próximo caractere disponível ou -1 se não houver mais nenhum caractere disponível ou o fluxo não der suporte à busca.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.PeekChar">
          <source>If surrogate characters can be expected in the stream use the <ph id="ph1">&lt;xref:System.IO.BinaryReader.ReadChars%2A&gt;</ph> method, then set the stream back to the original position.</source>
          <target state="translated">Se os caracteres substitutos podem ser esperadas no uso de fluxo de <ph id="ph1">&lt;xref:System.IO.BinaryReader.ReadChars%2A&gt;</ph> método, em seguida, defina o fluxo de volta à posição original.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.PeekChar">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Para obter uma lista de tarefas comuns de e/s, consulte <bpt id="p1">[</bpt>tarefas comuns de e/s<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.PeekChar">
          <source>An I/O error occurs.</source>
          <target state="translated">Ocorre um erro de E/S.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.PeekChar">
          <source>The current character cannot be decoded into the internal character buffer by using the <ph id="ph1">&lt;see cref="T:System.Text.Encoding" /&gt;</ph> selected for the stream.</source>
          <target state="translated">O caractere atual não pode ser decodificado no buffer de caractere interno usando o <ph id="ph1">&lt;see cref="T:System.Text.Encoding" /&gt;</ph> selecionado para o fluxo.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="T:System.IO.BinaryReader">
          <source>Reads bytes from the underlying stream and advances the current position of the stream.</source>
          <target state="translated">Lê os bytes do fluxo subjacente e avança a posição atual do fluxo.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.Read">
          <source>Reads characters from the underlying stream and advances the current position of the stream in accordance with the <ph id="ph1">&lt;see langword="Encoding" /&gt;</ph> used and the specific character being read from the stream.</source>
          <target state="translated">Lê os caracteres do fluxo subjacente e avança a posição atual do fluxo de acordo com o <ph id="ph1">&lt;see langword="Encoding" /&gt;</ph> usado e o caractere específico que está sendo lidos do fluxo.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.Read">
          <source>The next character from the input stream, or -1 if no characters are currently available.</source>
          <target state="translated">O próximo caractere do fluxo de entrada ou -1 se nenhum caractere estiver disponível no momento.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.Read">
          <source><ph id="ph1">&lt;xref:System.IO.BinaryReader&gt;</ph> does not restore the file position after an unsuccessful read.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.BinaryReader&gt;</ph> não restaure a posição do arquivo depois de ler um malsucedida.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.Read">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Para obter uma lista de tarefas comuns de e/s, consulte <bpt id="p1">[</bpt>tarefas comuns de e/s<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.Read">
          <source>The following example shows how to read and write data using memory as a backing store.</source>
          <target state="translated">O exemplo a seguir mostra como ler e gravar dados de uso da memória como um armazenamento de backup.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.Read">
          <source>This example displays a list of invalid file path characters to the console.</source>
          <target state="translated">Este exemplo exibe uma lista de caracteres de caminho de arquivo inválido para o console.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.Read">
          <source>Although the code tries to display a list of all invalid file path characters, not all of the characters are within the displayable set of characters.</source>
          <target state="translated">Embora o código tenta exibir uma lista de todos os caracteres de caminho de arquivo inválido, nem todos os caracteres são dentro do conjunto de caracteres de exibição.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.Read">
          <source>Because the list of invalid characters can vary based on the system, output for this code may also vary.</source>
          <target state="translated">Como a lista de caracteres inválidos pode variar com base no sistema, a saída para este código também pode variar.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.Read">
          <source>An I/O error occurs.</source>
          <target state="translated">Ocorre um erro de E/S.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.Read">
          <source>The stream is closed.</source>
          <target state="translated">O fluxo está fechado.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The buffer to read data into.</source>
          <target state="translated">O buffer no qual os dados serão lidos.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The starting point in the buffer at which to begin reading into the buffer.</source>
          <target state="translated">O ponto de partida no buffer no qual a leitura do buffer é iniciada.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The number of bytes to read.</source>
          <target state="translated">O número de bytes a serem lidos.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.Read(System.Byte[],System.Int32,System.Int32)">
          <source>Reads the specified number of bytes from the stream, starting from a specified point in the byte array.</source>
          <target state="translated">Lê o número especificado de bytes do fluxo, começando em um ponto especificado na matriz de bytes.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The number of bytes read into <ph id="ph1">&lt;paramref name="buffer" /&gt;</ph>.</source>
          <target state="translated">O número de bytes lidos no <ph id="ph1">&lt;paramref name="buffer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.Read(System.Byte[],System.Int32,System.Int32)">
          <source>This might be less than the number of bytes requested if that many bytes are not available, or it might be zero if the end of the stream is reached.</source>
          <target state="translated">Isso poderá ser menor que o número de bytes solicitado se esse número de bytes não estiver disponível, ou zero, se o final do fluxo for atingido.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.Read(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.IO.BinaryReader&gt;</ph> does not restore the file position after an unsuccessful read operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.BinaryReader&gt;</ph> não restaure a posição do arquivo depois que um bem-sucedida da operação de leitura.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.Read(System.Byte[],System.Int32,System.Int32)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Para obter uma lista de tarefas comuns de e/s, consulte <bpt id="p1">[</bpt>tarefas comuns de e/s<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The following example shows how to write binary data by using memory as a backing store.</source>
          <target state="translated">O exemplo a seguir mostra como gravar dados binários com o uso de memória como um armazenamento de backup.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.Read(System.Byte[],System.Int32,System.Int32)">
          <source>It displays a message to the console that indicates whether the data was written correctly.</source>
          <target state="translated">Ele exibe uma mensagem no console que indica se os dados foram gravados corretamente.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.Read(System.Byte[],System.Int32,System.Int32)">
          <source>This example reads the contents of a file and displays each byte's numeric value in 16-column format.</source>
          <target state="translated">Este exemplo lê o conteúdo de um arquivo e exibe o valor numérico de cada byte em formato de 16 colunas.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The end of the file that is being read is detected when the <ph id="ph1">&lt;xref:System.IO.BinaryReader.Read%2A&gt;</ph> method returns zero bytes.</source>
          <target state="translated">O final do arquivo que está sendo lido é detectado quando o <ph id="ph1">&lt;xref:System.IO.BinaryReader.Read%2A&gt;</ph> método retorna zero bytes.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The buffer length minus <ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than <ph id="ph2">&lt;paramref name="count" /&gt;</ph>.</source>
          <target state="translated">O tamanho do buffer menos <ph id="ph1">&lt;paramref name="index" /&gt;</ph> é menor que <ph id="ph2">&lt;paramref name="count" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.Read(System.Byte[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The number of decoded characters to read is greater than <ph id="ph1">&lt;paramref name="count" /&gt;</ph>.</source>
          <target state="translated">O número de caracteres decodificados a serem lidos é maior que <ph id="ph1">&lt;paramref name="count" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.Read(System.Byte[],System.Int32,System.Int32)">
          <source>This can happen if a Unicode decoder returns fallback characters or a surrogate pair.</source>
          <target state="translated">Isso poderá ocorrer se um decodificador de Unicode retornar caracteres de fallback ou um par alternativo.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.Read(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.Read(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> ou <ph id="ph2">&lt;paramref name="count" /&gt;</ph> é negativo.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The stream is closed.</source>
          <target state="translated">O fluxo está fechado.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.Read(System.Byte[],System.Int32,System.Int32)">
          <source>An I/O error occurs.</source>
          <target state="translated">Ocorre um erro de E/S.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.Read(System.Char[],System.Int32,System.Int32)">
          <source>The buffer to read data into.</source>
          <target state="translated">O buffer no qual os dados serão lidos.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.Read(System.Char[],System.Int32,System.Int32)">
          <source>The starting point in the buffer at which to begin reading into the buffer.</source>
          <target state="translated">O ponto de partida no buffer no qual a leitura do buffer é iniciada.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.Read(System.Char[],System.Int32,System.Int32)">
          <source>The number of characters to read.</source>
          <target state="translated">O número de caracteres a serem lidos.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.Read(System.Char[],System.Int32,System.Int32)">
          <source>Reads the specified number of characters from the stream, starting from a specified point in the character array.</source>
          <target state="translated">Lê o número especificado de caracteres do fluxo, começando em um ponto especificado na matriz de caracteres.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.Read(System.Char[],System.Int32,System.Int32)">
          <source>The total number of characters read into the buffer.</source>
          <target state="translated">O número total de caracteres lidos no buffer.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.Read(System.Char[],System.Int32,System.Int32)">
          <source>This might be less than the number of characters requested if that many characters are not currently available, or it might be zero if the end of the stream is reached.</source>
          <target state="translated">Isso poderá ser menor que o número de caracteres solicitado se esse número de caracteres não estiver disponível no momento ou zero, se o final do fluxo for atingido.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.Read(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.IO.BinaryReader&gt;</ph> does not restore the file position after an unsuccessful read operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.BinaryReader&gt;</ph> não restaure a posição do arquivo depois que um bem-sucedida da operação de leitura.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.Read(System.Char[],System.Int32,System.Int32)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Para obter uma lista de tarefas comuns de e/s, consulte <bpt id="p1">[</bpt>tarefas comuns de e/s<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.Read(System.Char[],System.Int32,System.Int32)">
          <source>The following example shows how to read and write data using memory as a backing store.</source>
          <target state="translated">O exemplo a seguir mostra como ler e gravar dados de uso da memória como um armazenamento de backup.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.Read(System.Char[],System.Int32,System.Int32)">
          <source>This example displays a list of invalid file path characters to the console.</source>
          <target state="translated">Este exemplo exibe uma lista de caracteres de caminho de arquivo inválido para o console.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.Read(System.Char[],System.Int32,System.Int32)">
          <source>Although the code tries to display a list of all invalid file path characters, not all of the characters are within the displayable set of characters.</source>
          <target state="translated">Embora o código tenta exibir uma lista de todos os caracteres de caminho de arquivo inválido, nem todos os caracteres são dentro do conjunto de caracteres de exibição.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.Read(System.Char[],System.Int32,System.Int32)">
          <source>Because the list of invalid characters can vary based on the system, output for this code may also vary.</source>
          <target state="translated">Como a lista de caracteres inválidos pode variar com base no sistema, a saída para este código também pode variar.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.Read(System.Char[],System.Int32,System.Int32)">
          <source>The buffer length minus <ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than <ph id="ph2">&lt;paramref name="count" /&gt;</ph>.</source>
          <target state="translated">O tamanho do buffer menos <ph id="ph1">&lt;paramref name="index" /&gt;</ph> é menor que <ph id="ph2">&lt;paramref name="count" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.Read(System.Char[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.Read(System.Char[],System.Int32,System.Int32)">
          <source>The number of decoded characters to read is greater than <ph id="ph1">&lt;paramref name="count" /&gt;</ph>.</source>
          <target state="translated">O número de caracteres decodificados a serem lidos é maior que <ph id="ph1">&lt;paramref name="count" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.Read(System.Char[],System.Int32,System.Int32)">
          <source>This can happen if a Unicode decoder returns fallback characters or a surrogate pair.</source>
          <target state="translated">Isso poderá ocorrer se um decodificador de Unicode retornar caracteres de fallback ou um par alternativo.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.Read(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.Read(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> ou <ph id="ph2">&lt;paramref name="count" /&gt;</ph> é negativo.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.Read(System.Char[],System.Int32,System.Int32)">
          <source>The stream is closed.</source>
          <target state="translated">O fluxo está fechado.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.Read(System.Char[],System.Int32,System.Int32)">
          <source>An I/O error occurs.</source>
          <target state="translated">Ocorre um erro de E/S.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.Read7BitEncodedInt">
          <source>Reads in a 32-bit integer in compressed format.</source>
          <target state="translated">Lê um inteiro de 32 bits em formato compactado.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.Read7BitEncodedInt">
          <source>A 32-bit integer in compressed format.</source>
          <target state="translated">Um inteiro de 32 bits em formato compactado.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.Read7BitEncodedInt">
          <source><ph id="ph1">&lt;xref:System.IO.BinaryReader&gt;</ph> does not restore the file position after an unsuccessful read.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.BinaryReader&gt;</ph> não restaure a posição do arquivo depois de ler um malsucedida.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.Read7BitEncodedInt">
          <source>If the integer will fit in seven bits, the integer takes only one byte of space.</source>
          <target state="translated">Se o número inteiro se ajustarão em sete bits, o inteiro tem apenas um byte de espaço.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.Read7BitEncodedInt">
          <source>The integer is expected to have been written through <ph id="ph1">&lt;xref:System.IO.BinaryWriter.Write7BitEncodedInt%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">O número inteiro deve ter sido gravado por meio de <ph id="ph1">&lt;xref:System.IO.BinaryWriter.Write7BitEncodedInt%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.Read7BitEncodedInt">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Para obter uma lista de tarefas comuns de e/s, consulte <bpt id="p1">[</bpt>tarefas comuns de e/s<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.Read7BitEncodedInt">
          <source>The end of the stream is reached.</source>
          <target state="translated">O final do fluxo foi atingido.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.Read7BitEncodedInt">
          <source>The stream is closed.</source>
          <target state="translated">O fluxo está fechado.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.Read7BitEncodedInt">
          <source>An I/O error occurs.</source>
          <target state="translated">Ocorre um erro de E/S.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.Read7BitEncodedInt">
          <source>The stream is corrupted.</source>
          <target state="translated">O fluxo está corrompido.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadBoolean">
          <source>Reads a <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> value from the current stream and advances the current position of the stream by one byte.</source>
          <target state="translated">Lê um valor <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> do fluxo atual e avança a posição atual do fluxo em um byte.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadBoolean">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the byte is nonzero; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o byte for diferente de zero; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadBoolean">
          <source><ph id="ph1">&lt;xref:System.IO.BinaryReader&gt;</ph> does not restore the file position after an unsuccessful read.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.BinaryReader&gt;</ph> não restaure a posição do arquivo depois de ler um malsucedida.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadBoolean">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Para obter uma lista de tarefas comuns de e/s, consulte <bpt id="p1">[</bpt>tarefas comuns de e/s<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadBoolean">
          <source>The following code example demonstrates how to store and retrieve application settings in a file.</source>
          <target state="translated">O exemplo de código a seguir demonstra como armazenar e recuperar as configurações de aplicativo em um arquivo.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadBoolean">
          <source>The end of the stream is reached.</source>
          <target state="translated">O final do fluxo foi atingido.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadBoolean">
          <source>The stream is closed.</source>
          <target state="translated">O fluxo está fechado.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadBoolean">
          <source>An I/O error occurs.</source>
          <target state="translated">Ocorre um erro de E/S.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadByte">
          <source>Reads the next byte from the current stream and advances the current position of the stream by one byte.</source>
          <target state="translated">Lê o próximo byte do fluxo atual e avança a posição atual do fluxo em um byte.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadByte">
          <source>The next byte read from the current stream.</source>
          <target state="translated">O próximo byte lido do fluxo atual.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadByte">
          <source><ph id="ph1">&lt;xref:System.IO.BinaryReader&gt;</ph> does not restore the file position after an unsuccessful read.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.BinaryReader&gt;</ph> não restaure a posição do arquivo depois de ler um malsucedida.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadByte">
          <source>Because of data formatting conflicts, using this method with the following encodings is not recommended:</source>
          <target state="translated">Devido a conflitos de formatação de dados, não é recomendável usar esse método com as seguintes codificações:</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadByte">
          <source>UTF-7</source>
          <target state="translated">UTF-7</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadByte">
          <source>ISO-2022-JP</source>
          <target state="translated">ISO-2022-JP</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadByte">
          <source>ISCII</source>
          <target state="translated">ISCII</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadByte">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Para obter uma lista de tarefas comuns de e/s, consulte <bpt id="p1">[</bpt>tarefas comuns de e/s<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadByte">
          <source>The following code example shows how to write binary data using memory as a backing store, and then verify that the data was written correctly.</source>
          <target state="translated">O exemplo de código a seguir mostra como gravar dados binários usando memória como um repositório de backup e, em seguida, verifique se que os dados foram gravados corretamente.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadByte">
          <source>The end of the stream is reached.</source>
          <target state="translated">O final do fluxo foi atingido.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadByte">
          <source>The stream is closed.</source>
          <target state="translated">O fluxo está fechado.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadByte">
          <source>An I/O error occurs.</source>
          <target state="translated">Ocorre um erro de E/S.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadBytes(System.Int32)">
          <source>The number of bytes to read.</source>
          <target state="translated">O número de bytes a serem lidos.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadBytes(System.Int32)">
          <source>This value must be 0 or a non-negative number or an exception will occur.</source>
          <target state="translated">Esse valor deve ser 0 ou um número que não seja negativo; caso contrário, uma exceção ocorrerá.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadBytes(System.Int32)">
          <source>Reads the specified number of bytes from the current stream into a byte array and advances the current position by that number of bytes.</source>
          <target state="translated">Lê o número especificado de bytes do fluxo atual em uma matriz de bytes e avança a posição atual pelo número de bytes.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadBytes(System.Int32)">
          <source>A byte array containing data read from the underlying stream.</source>
          <target state="translated">Uma matriz de bytes que contém os dados lidos do fluxo subjacente.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadBytes(System.Int32)">
          <source>This might be less than the number of bytes requested if the end of the stream is reached.</source>
          <target state="translated">Isso poderá ser menor que o número de bytes solicitado se o final do fluxo for atingido.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadBytes(System.Int32)">
          <source><ph id="ph1">&lt;xref:System.IO.BinaryReader&gt;</ph> does not restore the file position after an unsuccessful read operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.BinaryReader&gt;</ph> não restaure a posição do arquivo depois que um bem-sucedida da operação de leitura.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadBytes(System.Int32)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Para obter uma lista de tarefas comuns de e/s, consulte <bpt id="p1">[</bpt>tarefas comuns de e/s<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadBytes(System.Int32)">
          <source>The following code example shows how to write binary data using memory as a backing store, and then verify that the data was written correctly.</source>
          <target state="translated">O exemplo de código a seguir mostra como gravar dados binários usando memória como um repositório de backup e, em seguida, verifique se que os dados foram gravados corretamente.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadBytes(System.Int32)">
          <source>This example reads the contents of a file and displays it to the console as dump text.</source>
          <target state="translated">Este exemplo lê o conteúdo de um arquivo e o exibe no console como texto de despejo.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadBytes(System.Int32)">
          <source>The end of the file that is being read is detected when the length of the <ph id="ph1">&lt;xref:System.Byte&gt;</ph> array returned from <ph id="ph2">&lt;xref:System.IO.BinaryReader.ReadBytes%2A&gt;</ph> is zero.</source>
          <target state="translated">O final do arquivo que está sendo lido é detectado quando o comprimento do <ph id="ph1">&lt;xref:System.Byte&gt;</ph> matriz retornada de <ph id="ph2">&lt;xref:System.IO.BinaryReader.ReadBytes%2A&gt;</ph> é zero.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadBytes(System.Int32)">
          <source>The number of decoded characters to read is greater than <ph id="ph1">&lt;paramref name="count" /&gt;</ph>.</source>
          <target state="translated">O número de caracteres decodificados a serem lidos é maior que <ph id="ph1">&lt;paramref name="count" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadBytes(System.Int32)">
          <source>This can happen if a Unicode decoder returns fallback characters or a surrogate pair.</source>
          <target state="translated">Isso poderá ocorrer se um decodificador de Unicode retornar caracteres de fallback ou um par alternativo.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadBytes(System.Int32)">
          <source>An I/O error occurs.</source>
          <target state="translated">Ocorre um erro de E/S.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadBytes(System.Int32)">
          <source>The stream is closed.</source>
          <target state="translated">O fluxo está fechado.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadBytes(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="count" /&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="count" /&gt;</ph> é negativo.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadChar">
          <source>Reads the next character from the current stream and advances the current position of the stream in accordance with the <ph id="ph1">&lt;see langword="Encoding" /&gt;</ph> used and the specific character being read from the stream.</source>
          <target state="translated">Lê o caractere seguinte do fluxo atual e avança a posição atual do fluxo de acordo com o <ph id="ph1">&lt;see langword="Encoding" /&gt;</ph> usado e o caractere específico que está sendo lido do fluxo.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadChar">
          <source>A character read from the current stream.</source>
          <target state="translated">Um caractere lido do fluxo atual.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadChar">
          <source>If the <ph id="ph1">&lt;xref:System.IO.BinaryReader.ReadChar%2A&gt;</ph> method attempts to read a surrogate character in the stream an exception will be raised and the position in the stream will advance.</source>
          <target state="translated">Se o <ph id="ph1">&lt;xref:System.IO.BinaryReader.ReadChar%2A&gt;</ph> método tenta ler um caractere substituto no fluxo de uma exceção será gerada e avançará a posição no fluxo.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadChar">
          <source>The position is restored to the original location before <ph id="ph1">&lt;xref:System.IO.BinaryReader.ReadChar%2A&gt;</ph> was called if the stream is seekable; however, if the stream is unseekable, the position will not be corrected.</source>
          <target state="translated">A posição é restaurada para o local original antes de <ph id="ph1">&lt;xref:System.IO.BinaryReader.ReadChar%2A&gt;</ph> foi chamado se o fluxo é pesquisável; no entanto, se o fluxo é unseekable, a posição não será corrigida.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadChar">
          <source>If surrogate characters can be expected in the stream, use the <ph id="ph1">&lt;xref:System.IO.BinaryReader.ReadChars%2A&gt;</ph> method instead.</source>
          <target state="translated">Se os caracteres substitutos podem ser esperados no fluxo, use o <ph id="ph1">&lt;xref:System.IO.BinaryReader.ReadChars%2A&gt;</ph> método em vez disso.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadChar">
          <source>Because of data formatting conflicts, using this method with the following encodings is not recommended:</source>
          <target state="translated">Devido a conflitos de formatação de dados, não é recomendável usar esse método com as seguintes codificações:</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadChar">
          <source>UTF-7</source>
          <target state="translated">UTF-7</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadChar">
          <source>ISO-2022-JP</source>
          <target state="translated">ISO-2022-JP</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadChar">
          <source>ISCII</source>
          <target state="translated">ISCII</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadChar">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Para obter uma lista de tarefas comuns de e/s, consulte <bpt id="p1">[</bpt>tarefas comuns de e/s<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadChar">
          <source>The following code example shows how to read and write data using memory as a backing store.</source>
          <target state="translated">O exemplo de código a seguir mostra como ler e gravar dados de uso da memória como um armazenamento de backup.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadChar">
          <source>The end of the stream is reached.</source>
          <target state="translated">O final do fluxo foi atingido.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadChar">
          <source>The stream is closed.</source>
          <target state="translated">O fluxo está fechado.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadChar">
          <source>An I/O error occurs.</source>
          <target state="translated">Ocorre um erro de E/S.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadChar">
          <source>A surrogate character was read.</source>
          <target state="translated">Um caractere alternativo foi lido.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadChars(System.Int32)">
          <source>The number of characters to read.</source>
          <target state="translated">O número de caracteres a serem lidos.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadChars(System.Int32)">
          <source>Reads the specified number of characters from the current stream, returns the data in a character array, and advances the current position in accordance with the <ph id="ph1">&lt;see langword="Encoding" /&gt;</ph> used and the specific character being read from the stream.</source>
          <target state="translated">Lê o número especificado de caracteres do fluxo atual, retorna os dados em uma matriz de caracteres e avança a posição atual de acordo com o <ph id="ph1">&lt;see langword="Encoding" /&gt;</ph> usado e o caractere específico que está sendo lido no fluxo.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadChars(System.Int32)">
          <source>A character array containing data read from the underlying stream.</source>
          <target state="translated">Uma matriz de caracteres que contém os dados lidos do fluxo subjacente.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadChars(System.Int32)">
          <source>This might be less than the number of characters requested if the end of the stream is reached.</source>
          <target state="translated">Isso poderá ser menor do que o número de caracteres solicitado se o final do fluxo for atingido.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadChars(System.Int32)">
          <source><ph id="ph1">&lt;xref:System.IO.BinaryReader&gt;</ph> does not restore the file position after an unsuccessful read operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.BinaryReader&gt;</ph> não restaure a posição do arquivo depois que um bem-sucedida da operação de leitura.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadChars(System.Int32)">
          <source>When reading from network streams, in some rare cases, the <ph id="ph1">&lt;xref:System.IO.BinaryReader.ReadChars%2A&gt;</ph> method might read an extra character from the stream if the <ph id="ph2">&lt;xref:System.IO.BinaryReader&gt;</ph> was constructed with Unicode encoding.</source>
          <target state="translated">Durante a leitura de fluxos de rede, em alguns casos raros, o <ph id="ph1">&lt;xref:System.IO.BinaryReader.ReadChars%2A&gt;</ph> método pode ler um caractere extra do fluxo se o <ph id="ph2">&lt;xref:System.IO.BinaryReader&gt;</ph> foi construído com Unicode codificação.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadChars(System.Int32)">
          <source>If this occurs, you can use the <ph id="ph1">&lt;xref:System.IO.BinaryReader.ReadBytes%2A&gt;</ph> method to read a fixed-length byte array, and then pass that array to the <ph id="ph2">&lt;xref:System.IO.BinaryReader.ReadChars%2A&gt;</ph> method.</source>
          <target state="translated">Se isso ocorrer, você pode usar o <ph id="ph1">&lt;xref:System.IO.BinaryReader.ReadBytes%2A&gt;</ph> método para ler uma matriz de bytes de comprimento fixo e, em seguida, passar a matriz para o <ph id="ph2">&lt;xref:System.IO.BinaryReader.ReadChars%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadChars(System.Int32)">
          <source>The following code example shows how to read and write data using memory as a backing store.</source>
          <target state="translated">O exemplo de código a seguir mostra como ler e gravar dados de uso da memória como um armazenamento de backup.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadChars(System.Int32)">
          <source>The number of decoded characters to read is greater than <ph id="ph1">&lt;paramref name="count" /&gt;</ph>.</source>
          <target state="translated">O número de caracteres decodificados a serem lidos é maior que <ph id="ph1">&lt;paramref name="count" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadChars(System.Int32)">
          <source>This can happen if a Unicode decoder returns fallback characters or a surrogate pair.</source>
          <target state="translated">Isso poderá ocorrer se um decodificador de Unicode retornar caracteres de fallback ou um par alternativo.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadChars(System.Int32)">
          <source>The stream is closed.</source>
          <target state="translated">O fluxo está fechado.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadChars(System.Int32)">
          <source>An I/O error occurs.</source>
          <target state="translated">Ocorre um erro de E/S.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadChars(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="count" /&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="count" /&gt;</ph> é negativo.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadDecimal">
          <source>Reads a decimal value from the current stream and advances the current position of the stream by sixteen bytes.</source>
          <target state="translated">Lê um valor decimal do fluxo atual e avança a posição atual do fluxo em 16 bytes.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadDecimal">
          <source>A decimal value read from the current stream.</source>
          <target state="translated">Um valor decimal lido do fluxo atual.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadDecimal">
          <source><ph id="ph1">&lt;xref:System.IO.BinaryReader&gt;</ph> does not restore the file position after an unsuccessful read.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.BinaryReader&gt;</ph> não restaure a posição do arquivo depois de ler um malsucedida.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadDecimal">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Para obter uma lista de tarefas comuns de e/s, consulte <bpt id="p1">[</bpt>tarefas comuns de e/s<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadDecimal">
          <source>The end of the stream is reached.</source>
          <target state="translated">O final do fluxo foi atingido.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadDecimal">
          <source>The stream is closed.</source>
          <target state="translated">O fluxo está fechado.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadDecimal">
          <source>An I/O error occurs.</source>
          <target state="translated">Ocorre um erro de E/S.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadDouble">
          <source>Reads an 8-byte floating point value from the current stream and advances the current position of the stream by eight bytes.</source>
          <target state="translated">Lê um valor de ponto flutuante de 8 bytes do fluxo atual e avança a posição atual do fluxo em oito bytes.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadDouble">
          <source>An 8-byte floating point value read from the current stream.</source>
          <target state="translated">Um valor de ponto flutuante de 8 bytes lido do fluxo atual.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadDouble">
          <source><ph id="ph1">&lt;xref:System.IO.BinaryReader&gt;</ph> does not restore the file position after an unsuccessful read.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.BinaryReader&gt;</ph> não restaure a posição do arquivo depois de ler um malsucedida.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadDouble">
          <source><ph id="ph1">`BinaryReader`</ph> reads this data type in little-endian format.</source>
          <target state="translated"><ph id="ph1">`BinaryReader`</ph> lê esse tipo de dados no formato little-endian.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadDouble">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Para obter uma lista de tarefas comuns de e/s, consulte <bpt id="p1">[</bpt>tarefas comuns de e/s<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadDouble">
          <source>The following code example shows how to read and write <ph id="ph1">`Double`</ph> data to memory by using the <ph id="ph2">`BinaryReader`</ph> and <ph id="ph3">&lt;xref:System.IO.BinaryWriter&gt;</ph> classes on top of the <ph id="ph4">&lt;xref:System.IO.MemoryStream&gt;</ph> class.</source>
          <target state="translated">O exemplo de código a seguir mostra como ler e gravar <ph id="ph1">`Double`</ph> dados na memória usando o <ph id="ph2">`BinaryReader`</ph> e <ph id="ph3">&lt;xref:System.IO.BinaryWriter&gt;</ph> classes sobre a <ph id="ph4">&lt;xref:System.IO.MemoryStream&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadDouble">
          <source><ph id="ph1">`MemoryStream`</ph> only reads and writes <ph id="ph2">`Byte`</ph> data.</source>
          <target state="translated"><ph id="ph1">`MemoryStream`</ph> apenas lê e grava <ph id="ph2">`Byte`</ph> dados.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadDouble">
          <source>The end of the stream is reached.</source>
          <target state="translated">O final do fluxo foi atingido.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadDouble">
          <source>The stream is closed.</source>
          <target state="translated">O fluxo está fechado.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadDouble">
          <source>An I/O error occurs.</source>
          <target state="translated">Ocorre um erro de E/S.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadInt16">
          <source>Reads a 2-byte signed integer from the current stream and advances the current position of the stream by two bytes.</source>
          <target state="translated">Lê um inteiro com sinal de 2 bytes do fluxo atual e avança a posição atual do fluxo em dois bytes.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadInt16">
          <source>A 2-byte signed integer read from the current stream.</source>
          <target state="translated">Um inteiro com sinal de 2 bytes lido do fluxo atual.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadInt16">
          <source><ph id="ph1">&lt;xref:System.IO.BinaryReader&gt;</ph> does not restore the file position after an unsuccessful read.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.BinaryReader&gt;</ph> não restaure a posição do arquivo depois de ler um malsucedida.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadInt16">
          <source><ph id="ph1">`BinaryReader`</ph> reads this data type in little-endian format.</source>
          <target state="translated"><ph id="ph1">`BinaryReader`</ph> lê esse tipo de dados no formato little-endian.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadInt16">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Para obter uma lista de tarefas comuns de e/s, consulte <bpt id="p1">[</bpt>tarefas comuns de e/s<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadInt16">
          <source>The end of the stream is reached.</source>
          <target state="translated">O final do fluxo foi atingido.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadInt16">
          <source>The stream is closed.</source>
          <target state="translated">O fluxo está fechado.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadInt16">
          <source>An I/O error occurs.</source>
          <target state="translated">Ocorre um erro de E/S.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadInt32">
          <source>Reads a 4-byte signed integer from the current stream and advances the current position of the stream by four bytes.</source>
          <target state="translated">Lê um inteiro com sinal de 4 bytes do fluxo atual e avança a posição atual do fluxo em quatro bytes.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadInt32">
          <source>A 4-byte signed integer read from the current stream.</source>
          <target state="translated">Um inteiro com sinal de 4 bytes lido do fluxo atual.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadInt32">
          <source><ph id="ph1">&lt;xref:System.IO.BinaryReader&gt;</ph> does not restore the file position after an unsuccessful read.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.BinaryReader&gt;</ph> não restaure a posição do arquivo depois de ler um malsucedida.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadInt32">
          <source><ph id="ph1">&lt;xref:System.IO.BinaryReader&gt;</ph> reads this data type in little-endian format.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.BinaryReader&gt;</ph> lê esse tipo de dados no formato little-endian.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadInt32">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Para obter uma lista de tarefas comuns de e/s, consulte <bpt id="p1">[</bpt>tarefas comuns de e/s<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadInt32">
          <source>The following code example demonstrates how to store and retrieve application settings in a file.</source>
          <target state="translated">O exemplo de código a seguir demonstra como armazenar e recuperar as configurações de aplicativo em um arquivo.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadInt32">
          <source>The end of the stream is reached.</source>
          <target state="translated">O final do fluxo foi atingido.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadInt32">
          <source>The stream is closed.</source>
          <target state="translated">O fluxo está fechado.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadInt32">
          <source>An I/O error occurs.</source>
          <target state="translated">Ocorre um erro de E/S.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadInt64">
          <source>Reads an 8-byte signed integer from the current stream and advances the current position of the stream by eight bytes.</source>
          <target state="translated">Lê um inteiro com sinal de oito bytes do fluxo atual e avança a posição atual do fluxo em oito bytes.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadInt64">
          <source>An 8-byte signed integer read from the current stream.</source>
          <target state="translated">Um inteiro com sinal de oito bytes lido do fluxo atual.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadInt64">
          <source><ph id="ph1">&lt;xref:System.IO.BinaryReader&gt;</ph> does not restore the file position after an unsuccessful read.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.BinaryReader&gt;</ph> não restaure a posição do arquivo depois de ler um malsucedida.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadInt64">
          <source><ph id="ph1">`BinaryReader`</ph> reads this data type in little-endian format.</source>
          <target state="translated"><ph id="ph1">`BinaryReader`</ph> lê esse tipo de dados no formato little-endian.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadInt64">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Para obter uma lista de tarefas comuns de e/s, consulte <bpt id="p1">[</bpt>tarefas comuns de e/s<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadInt64">
          <source>The end of the stream is reached.</source>
          <target state="translated">O final do fluxo foi atingido.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadInt64">
          <source>The stream is closed.</source>
          <target state="translated">O fluxo está fechado.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadInt64">
          <source>An I/O error occurs.</source>
          <target state="translated">Ocorre um erro de E/S.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadSByte">
          <source>Reads a signed byte from this stream and advances the current position of the stream by one byte.</source>
          <target state="translated">Lê um byte assinado desse fluxo e avança a posição atual do fluxo em um byte.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadSByte">
          <source>A signed byte read from the current stream.</source>
          <target state="translated">Um byte assinado lido do fluxo atual.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadSByte">
          <source><ph id="ph1">&lt;xref:System.IO.BinaryReader&gt;</ph> does not restore the file position after an unsuccessful read.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.BinaryReader&gt;</ph> não restaure a posição do arquivo depois de ler um malsucedida.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadSByte">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Para obter uma lista de tarefas comuns de e/s, consulte <bpt id="p1">[</bpt>tarefas comuns de e/s<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadSByte">
          <source>The end of the stream is reached.</source>
          <target state="translated">O final do fluxo foi atingido.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadSByte">
          <source>The stream is closed.</source>
          <target state="translated">O fluxo está fechado.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadSByte">
          <source>An I/O error occurs.</source>
          <target state="translated">Ocorre um erro de E/S.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadSingle">
          <source>Reads a 4-byte floating point value from the current stream and advances the current position of the stream by four bytes.</source>
          <target state="translated">Lê um valor de ponto flutuante de 4 bytes do fluxo atual e avança a posição atual do fluxo em quatro bytes.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadSingle">
          <source>A 4-byte floating point value read from the current stream.</source>
          <target state="translated">Um valor de ponto flutuante de 4 bytes lido do fluxo atual.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadSingle">
          <source><ph id="ph1">&lt;xref:System.IO.BinaryReader&gt;</ph> does not restore the file position after an unsuccessful read.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.BinaryReader&gt;</ph> não restaure a posição do arquivo depois de ler um malsucedida.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadSingle">
          <source><ph id="ph1">`BinaryReader`</ph> reads this data type in little-endian format.</source>
          <target state="translated"><ph id="ph1">`BinaryReader`</ph> lê esse tipo de dados no formato little-endian.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadSingle">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Para obter uma lista de tarefas comuns de e/s, consulte <bpt id="p1">[</bpt>tarefas comuns de e/s<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadSingle">
          <source>The following code example demonstrates how to store and retrieve application settings in a file.</source>
          <target state="translated">O exemplo de código a seguir demonstra como armazenar e recuperar as configurações de aplicativo em um arquivo.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadSingle">
          <source>The end of the stream is reached.</source>
          <target state="translated">O final do fluxo foi atingido.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadSingle">
          <source>The stream is closed.</source>
          <target state="translated">O fluxo está fechado.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadSingle">
          <source>An I/O error occurs.</source>
          <target state="translated">Ocorre um erro de E/S.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadString">
          <source>Reads a string from the current stream.</source>
          <target state="translated">Lê uma cadeia de caracteres do fluxo atual.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadString">
          <source>The string is prefixed with the length, encoded as an integer seven bits at a time.</source>
          <target state="translated">A cadeia de caracteres é prefixada com o tamanho, codificado como um inteiro, sete bits por vez.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadString">
          <source>The string being read.</source>
          <target state="translated">A cadeia de caracteres que está sendo lida.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadString">
          <source><ph id="ph1">&lt;xref:System.IO.BinaryReader&gt;</ph> does not restore the file position after an unsuccessful read.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.BinaryReader&gt;</ph> não restaure a posição do arquivo depois de ler um malsucedida.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadString">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Para obter uma lista de tarefas comuns de e/s, consulte <bpt id="p1">[</bpt>tarefas comuns de e/s<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadString">
          <source>The following code example demonstrates how to store and retrieve application settings in a file.</source>
          <target state="translated">O exemplo de código a seguir demonstra como armazenar e recuperar as configurações de aplicativo em um arquivo.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadString">
          <source>The end of the stream is reached.</source>
          <target state="translated">O final do fluxo foi atingido.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadString">
          <source>The stream is closed.</source>
          <target state="translated">O fluxo está fechado.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadString">
          <source>An I/O error occurs.</source>
          <target state="translated">Ocorre um erro de E/S.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadUInt16">
          <source>Reads a 2-byte unsigned integer from the current stream using little-endian encoding and advances the position of the stream by two bytes.</source>
          <target state="translated">Lê um inteiro sem sinal de 2 bytes do fluxo atual usando a codificação little-endian e avança a posição do fluxo em dois bytes.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadUInt16">
          <source>A 2-byte unsigned integer read from this stream.</source>
          <target state="translated">Um inteiro sem sinal de 2 bytes lido desse fluxo.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadUInt16">
          <source><ph id="ph1">&lt;xref:System.IO.BinaryReader&gt;</ph> does not restore the file position after an unsuccessful read.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.BinaryReader&gt;</ph> não restaure a posição do arquivo depois de ler um malsucedida.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadUInt16">
          <source><ph id="ph1">`BinaryReader`</ph> reads this data type in little-endian format.</source>
          <target state="translated"><ph id="ph1">`BinaryReader`</ph> lê esse tipo de dados no formato little-endian.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadUInt16">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Para obter uma lista de tarefas comuns de e/s, consulte <bpt id="p1">[</bpt>tarefas comuns de e/s<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadUInt16">
          <source>The end of the stream is reached.</source>
          <target state="translated">O final do fluxo foi atingido.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadUInt16">
          <source>The stream is closed.</source>
          <target state="translated">O fluxo está fechado.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadUInt16">
          <source>An I/O error occurs.</source>
          <target state="translated">Ocorre um erro de E/S.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadUInt32">
          <source>Reads a 4-byte unsigned integer from the current stream and advances the position of the stream by four bytes.</source>
          <target state="translated">Lê um inteiro sem sinal de quatro bytes do fluxo atual e avança a posição do fluxo em quatro bytes.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadUInt32">
          <source>A 4-byte unsigned integer read from this stream.</source>
          <target state="translated">Um inteiro sem sinal de 4 bytes lido desse fluxo.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadUInt32">
          <source><ph id="ph1">&lt;xref:System.IO.BinaryReader&gt;</ph> does not restore the file position after an unsuccessful read.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.BinaryReader&gt;</ph> não restaure a posição do arquivo depois de ler um malsucedida.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadUInt32">
          <source><ph id="ph1">`BinaryReader`</ph> reads this data type in little-endian format.</source>
          <target state="translated"><ph id="ph1">`BinaryReader`</ph> lê esse tipo de dados no formato little-endian.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadUInt32">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Para obter uma lista de tarefas comuns de e/s, consulte <bpt id="p1">[</bpt>tarefas comuns de e/s<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadUInt32">
          <source>The end of the stream is reached.</source>
          <target state="translated">O final do fluxo foi atingido.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadUInt32">
          <source>The stream is closed.</source>
          <target state="translated">O fluxo está fechado.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadUInt32">
          <source>An I/O error occurs.</source>
          <target state="translated">Ocorre um erro de E/S.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadUInt64">
          <source>Reads an 8-byte unsigned integer from the current stream and advances the position of the stream by eight bytes.</source>
          <target state="translated">Lê um inteiro sem sinal de 8 bytes do fluxo atual e avança a posição do fluxo em oito bytes.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadUInt64">
          <source>An 8-byte unsigned integer read from this stream.</source>
          <target state="translated">Um inteiro sem sinal de 8 bytes lido desse fluxo.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadUInt64">
          <source><ph id="ph1">&lt;xref:System.IO.BinaryReader&gt;</ph> does not restore the file position after an unsuccessful read.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.BinaryReader&gt;</ph> não restaure a posição do arquivo depois de ler um malsucedida.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadUInt64">
          <source><ph id="ph1">`BinaryReader`</ph> reads this data type in little-endian format.</source>
          <target state="translated"><ph id="ph1">`BinaryReader`</ph> lê esse tipo de dados no formato little-endian.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadUInt64">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Para obter uma lista de tarefas comuns de e/s, consulte <bpt id="p1">[</bpt>tarefas comuns de e/s<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadUInt64">
          <source>The end of the stream is reached.</source>
          <target state="translated">O final do fluxo foi atingido.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadUInt64">
          <source>An I/O error occurs.</source>
          <target state="translated">Ocorre um erro de E/S.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadUInt64">
          <source>The stream is closed.</source>
          <target state="translated">O fluxo está fechado.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>