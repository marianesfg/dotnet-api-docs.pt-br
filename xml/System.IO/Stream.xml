<Type Name="Stream" FullName="System.IO.Stream">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c2a48ad6254044761826100b2be9db53d138b868" />
    <Meta Name="ms.sourcegitcommit" Value="f9e3295b6cc303a611a73a84c4b27f9da792ad0d" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/26/2018" />
    <Meta Name="ms.locfileid" Value="31911266" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class Stream : MarshalByRefObject, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit Stream extends System.MarshalByRefObject implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.IO.Stream" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Stream&#xA;Inherits MarshalByRefObject&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Stream abstract : MarshalByRefObject, IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.IO</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="feb6f-101">Fornece uma exibição genérica de uma sequência de bytes.</span>
      <span class="sxs-lookup">
        <span data-stu-id="feb6f-101">Provides a generic view of a sequence of bytes.</span>
      </span>
      <span data-ttu-id="feb6f-102">Esta é uma classe abstrata.</span>
      <span class="sxs-lookup">
        <span data-stu-id="feb6f-102">This is an abstract class.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="feb6f-103"><xref:System.IO.Stream> é a classe base abstrata de todos os fluxos.</span><span class="sxs-lookup"><span data-stu-id="feb6f-103"><xref:System.IO.Stream> is the abstract base class of all streams.</span></span> <span data-ttu-id="feb6f-104">Um fluxo é uma abstração de uma sequência de bytes, como um arquivo, um dispositivo de arquivos entrada/saída, um pipe de comunicação de inter- processo, ou um soquete TCP/IP.</span><span class="sxs-lookup"><span data-stu-id="feb6f-104">A stream is an abstraction of a sequence of bytes, such as a file, an input/output device, an inter-process communication pipe, or a TCP/IP socket.</span></span> <span data-ttu-id="feb6f-105">O <xref:System.IO.Stream> classe e suas classes derivadas fornecem uma exibição genérica desses tipos diferentes de entrada e saída e isolar o programador de detalhes específicos do sistema operacional e os dispositivos subjacentes.</span><span class="sxs-lookup"><span data-stu-id="feb6f-105">The <xref:System.IO.Stream> class and its derived classes provide a generic view of these different types of input and output, and isolate the programmer from the specific details of the operating system and the underlying devices.</span></span>  
  
 <span data-ttu-id="feb6f-106">Fluxos envolvem estas três operações fundamentais:</span><span class="sxs-lookup"><span data-stu-id="feb6f-106">Streams involve three fundamental operations:</span></span>  
  
-   <span data-ttu-id="feb6f-107">Você pode ler a partir de fluxos.</span><span class="sxs-lookup"><span data-stu-id="feb6f-107">You can read from streams.</span></span> <span data-ttu-id="feb6f-108">Leitura é a transferência de dados de um fluxo em uma estrutura de dados, como uma matriz de bytes.</span><span class="sxs-lookup"><span data-stu-id="feb6f-108">Reading is the transfer of data from a stream into a data structure, such as an array of bytes.</span></span>  
  
-   <span data-ttu-id="feb6f-109">Você pode escrever fluxos.</span><span class="sxs-lookup"><span data-stu-id="feb6f-109">You can write to streams.</span></span> <span data-ttu-id="feb6f-110">A gravação é a transferência de dados de uma estrutura de dados em um fluxo.</span><span class="sxs-lookup"><span data-stu-id="feb6f-110">Writing is the transfer of data from a data structure into a stream.</span></span>  
  
-   <span data-ttu-id="feb6f-111">Fluxos podem suportar busca.</span><span class="sxs-lookup"><span data-stu-id="feb6f-111">Streams can support seeking.</span></span> <span data-ttu-id="feb6f-112">Busca refere-se a consulta e a modificação da posição atual dentro de um fluxo.</span><span class="sxs-lookup"><span data-stu-id="feb6f-112">Seeking refers to querying and modifying the current position within a stream.</span></span> <span data-ttu-id="feb6f-113">Busca de recurso depende do tipo de repositório de backup tem um fluxo.</span><span class="sxs-lookup"><span data-stu-id="feb6f-113">Seek capability depends on the kind of backing store a stream has.</span></span> <span data-ttu-id="feb6f-114">Por exemplo, fluxos de rede não têm unificado conceito de uma posição atual e, portanto, normalmente não oferecem suporte a busca.</span><span class="sxs-lookup"><span data-stu-id="feb6f-114">For example, network streams have no unified concept of a current position, and therefore typically do not support seeking.</span></span>  
  
 <span data-ttu-id="feb6f-115">Algumas das mais comumente usado fluxos que herdam de <xref:System.IO.Stream> são <xref:System.IO.FileStream>, e <xref:System.IO.MemoryStream>.</span><span class="sxs-lookup"><span data-stu-id="feb6f-115">Some of the more commonly used streams that inherit from <xref:System.IO.Stream> are <xref:System.IO.FileStream>, and <xref:System.IO.MemoryStream>.</span></span>  
  
 <span data-ttu-id="feb6f-116">Dependendo da fonte de dados subjacente ou o repositório, os fluxos podem suportar apenas alguns desses recursos.</span><span class="sxs-lookup"><span data-stu-id="feb6f-116">Depending on the underlying data source or repository, streams might support only some of these capabilities.</span></span> <span data-ttu-id="feb6f-117">Você pode consultar um fluxo para seus recursos usando o <xref:System.IO.Stream.CanRead%2A>, <xref:System.IO.Stream.CanWrite%2A>, e <xref:System.IO.Stream.CanSeek%2A> propriedades da <xref:System.IO.Stream> classe.</span><span class="sxs-lookup"><span data-stu-id="feb6f-117">You can query a stream for its capabilities by using the <xref:System.IO.Stream.CanRead%2A>, <xref:System.IO.Stream.CanWrite%2A>, and <xref:System.IO.Stream.CanSeek%2A> properties of the <xref:System.IO.Stream> class.</span></span>  
  
 <span data-ttu-id="feb6f-118">O <xref:System.IO.Stream.Read%2A> e <xref:System.IO.Stream.Write%2A> métodos ler e gravar dados em uma variedade de formatos.</span><span class="sxs-lookup"><span data-stu-id="feb6f-118">The <xref:System.IO.Stream.Read%2A> and <xref:System.IO.Stream.Write%2A> methods read and write data in a variety of formats.</span></span> <span data-ttu-id="feb6f-119">Para fluxos de suporte para busca, use o <xref:System.IO.Stream.Seek%2A> e <xref:System.IO.Stream.SetLength%2A> métodos e <xref:System.IO.Stream.Position%2A> e <xref:System.IO.Stream.Length%2A> propriedades para consultar e modificar a posição atual e o comprimento de um fluxo.</span><span class="sxs-lookup"><span data-stu-id="feb6f-119">For streams that support seeking, use the <xref:System.IO.Stream.Seek%2A> and <xref:System.IO.Stream.SetLength%2A> methods and the <xref:System.IO.Stream.Position%2A> and <xref:System.IO.Stream.Length%2A> properties to query and modify the current position and length of a stream.</span></span>  
  
 <span data-ttu-id="feb6f-120">Este tipo implementa o <xref:System.IDisposable> interface.</span><span class="sxs-lookup"><span data-stu-id="feb6f-120">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="feb6f-121">Quando você terminar de usar o tipo, descarte-direta ou indiretamente.</span><span class="sxs-lookup"><span data-stu-id="feb6f-121">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="feb6f-122">Para descartar o tipo diretamente, chame seu <xref:System.IDisposable.Dispose%2A> método em um `try` / `catch` bloco.</span><span class="sxs-lookup"><span data-stu-id="feb6f-122">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="feb6f-123">Para descartar indiretamente dele, use uma construção de linguagem, como `using` (em c#) ou `Using` (no Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="feb6f-123">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="feb6f-124">Para obter mais informações, consulte a seção "Usando um objeto que implementa IDisposable" o <xref:System.IDisposable> tópico de interface.</span><span class="sxs-lookup"><span data-stu-id="feb6f-124">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 <span data-ttu-id="feb6f-125">Descartando um <xref:System.IO.Stream> objeto libera todos os dados armazenados em buffer e chama essencialmente o <xref:System.IO.Stream.Flush%2A> método para você.</span><span class="sxs-lookup"><span data-stu-id="feb6f-125">Disposing a <xref:System.IO.Stream> object flushes any buffered data, and essentially calls the <xref:System.IO.Stream.Flush%2A> method for you.</span></span> <span data-ttu-id="feb6f-126"><xref:System.IO.Stream.Dispose%2A> também libera recursos do sistema operacional, como identificadores de arquivos, conexões de rede ou memória usada para qualquer buffer interno.</span><span class="sxs-lookup"><span data-stu-id="feb6f-126"><xref:System.IO.Stream.Dispose%2A> also releases operating system resources such as file handles, network connections, or memory used for any internal buffering.</span></span> <span data-ttu-id="feb6f-127">O <xref:System.IO.BufferedStream> classe fornece a capacidade de quebra automática de um fluxo em buffer em torno de outro fluxo para melhorar a leitura e gravação de desempenho.</span><span class="sxs-lookup"><span data-stu-id="feb6f-127">The <xref:System.IO.BufferedStream> class provides the capability of wrapping a buffered stream around another stream in order to improve read and write performance.</span></span>  
  
 <span data-ttu-id="feb6f-128">Começando com o [!INCLUDE[net_v45](~/includes/net-v45-md.md)], o <xref:System.IO.Stream> classe inclui métodos assíncronos para simplificar as operações assíncronas.</span><span class="sxs-lookup"><span data-stu-id="feb6f-128">Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], the <xref:System.IO.Stream> class includes async methods to simplify asynchronous operations.</span></span> <span data-ttu-id="feb6f-129">Contém um método assíncrono `Async` em seu nome, como <xref:System.IO.Stream.ReadAsync%2A>, <xref:System.IO.Stream.WriteAsync%2A>, <xref:System.IO.Stream.CopyToAsync%2A>, e <xref:System.IO.Stream.FlushAsync%2A>.</span><span class="sxs-lookup"><span data-stu-id="feb6f-129">An async method contains `Async` in its name, such as <xref:System.IO.Stream.ReadAsync%2A>, <xref:System.IO.Stream.WriteAsync%2A>, <xref:System.IO.Stream.CopyToAsync%2A>, and <xref:System.IO.Stream.FlushAsync%2A>.</span></span> <span data-ttu-id="feb6f-130">Esses métodos permitem executar operações de e/s de uso intensivo de recursos sem bloquear o thread principal.</span><span class="sxs-lookup"><span data-stu-id="feb6f-130">These methods enable you to perform resource-intensive I/O operations without blocking the main thread.</span></span> <span data-ttu-id="feb6f-131">Essa consideração sobre o desempenho é particularmente importante em um aplicativo [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] ou [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] em que uma operação demorada de fluxo pode bloquear o thread de interface do usuário e fazer seu aplicativo parecer como se não estivesse funcionando.</span><span class="sxs-lookup"><span data-stu-id="feb6f-131">This performance consideration is particularly important in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app or [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] app where a time-consuming stream operation can block the UI thread and make your app appear as if it is not working.</span></span> <span data-ttu-id="feb6f-132">Os métodos assíncronos são usados em conjunto com o `async` e `await` palavras-chave no Visual Basic e c#.</span><span class="sxs-lookup"><span data-stu-id="feb6f-132">The async methods are used in conjunction with the `async` and `await` keywords in Visual Basic and C#.</span></span>  
  
 <span data-ttu-id="feb6f-133">Quando usado em uma [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] aplicativo, <xref:System.IO.Stream> inclui dois métodos de extensão: <xref:System.IO.WindowsRuntimeStreamExtensions.AsInputStream%2A> e <xref:System.IO.WindowsRuntimeStreamExtensions.AsOutputStream%2A>.</span><span class="sxs-lookup"><span data-stu-id="feb6f-133">When used in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app, <xref:System.IO.Stream> includes two extension methods: <xref:System.IO.WindowsRuntimeStreamExtensions.AsInputStream%2A> and <xref:System.IO.WindowsRuntimeStreamExtensions.AsOutputStream%2A>.</span></span> <span data-ttu-id="feb6f-134">Esses métodos convertem um <xref:System.IO.Stream> objeto em um fluxo no [!INCLUDE[wrt](~/includes/wrt-md.md)].</span><span class="sxs-lookup"><span data-stu-id="feb6f-134">These methods convert a <xref:System.IO.Stream> object to a stream in the [!INCLUDE[wrt](~/includes/wrt-md.md)].</span></span> <span data-ttu-id="feb6f-135">Você também pode converter um fluxo no [!INCLUDE[wrt](~/includes/wrt-md.md)] para um <xref:System.IO.Stream> objeto usando o <xref:System.IO.WindowsRuntimeStreamExtensions.AsStreamForRead%2A> e <xref:System.IO.WindowsRuntimeStreamExtensions.AsStreamForWrite%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="feb6f-135">You can also convert a stream in the [!INCLUDE[wrt](~/includes/wrt-md.md)] to a <xref:System.IO.Stream> object by using the <xref:System.IO.WindowsRuntimeStreamExtensions.AsStreamForRead%2A> and <xref:System.IO.WindowsRuntimeStreamExtensions.AsStreamForWrite%2A> methods.</span></span> <span data-ttu-id="feb6f-136">Para obter mais informações, consulte [como: converter entre fluxos do .NET Framework e tempo de execução do Windows](~/docs/standard/io/how-to-convert-between-dotnet-streams-and-winrt-streams.md)</span><span class="sxs-lookup"><span data-stu-id="feb6f-136">For more information, see [How to: Convert Between .NET Framework Streams and Windows Runtime Streams](~/docs/standard/io/how-to-convert-between-dotnet-streams-and-winrt-streams.md)</span></span>  
  
 <span data-ttu-id="feb6f-137">Algumas implementações de fluxo executam buffer local dos dados subjacentes para melhorar o desempenho.</span><span class="sxs-lookup"><span data-stu-id="feb6f-137">Some stream implementations perform local buffering of the underlying data to improve performance.</span></span> <span data-ttu-id="feb6f-138">Para tais fluxos, você pode usar o <xref:System.IO.Stream.Flush%2A> ou <xref:System.IO.Stream.FlushAsync%2A> método para limpar qualquer buffers internos e certifique-se de que todos os dados foram gravados para a fonte de dados ou o repositório subjacente.</span><span class="sxs-lookup"><span data-stu-id="feb6f-138">For such streams, you can use the <xref:System.IO.Stream.Flush%2A> or <xref:System.IO.Stream.FlushAsync%2A> method to clear any internal buffers and ensure that all data has been written to the underlying data source or repository.</span></span>  
  
 <span data-ttu-id="feb6f-139">Se você precisar de um fluxo com nenhum armazenamento de backup (também conhecido como um bloco de bits), use o <xref:System.IO.Stream.Null> campo a recuperar uma instância de um fluxo que foi projetado para essa finalidade.</span><span class="sxs-lookup"><span data-stu-id="feb6f-139">If you need a stream with no backing store (also known as a bit bucket), use the <xref:System.IO.Stream.Null> field to retrieve an instance of a stream that is designed for this purpose.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="feb6f-140">O exemplo a seguir demonstra como usar duas <xref:System.IO.FileStream> objetos de forma assíncrona copiar os arquivos de um diretório para outro diretório.</span><span class="sxs-lookup"><span data-stu-id="feb6f-140">The following example demonstrates how to use two <xref:System.IO.FileStream> objects to asynchronously copy the files from one directory to another directory.</span></span> <span data-ttu-id="feb6f-141">O <xref:System.IO.FileStream> classe deriva de <xref:System.IO.Stream> classe.</span><span class="sxs-lookup"><span data-stu-id="feb6f-141">The <xref:System.IO.FileStream> class derives from the <xref:System.IO.Stream> class.</span></span> <span data-ttu-id="feb6f-142">Observe que o manipulador de eventos <xref:System.Web.UI.WebControls.Button.Click> para o controle <xref:System.Windows.Controls.Button> está marcado com o modificador `async`, pois ele chama um método assíncrono.</span><span class="sxs-lookup"><span data-stu-id="feb6f-142">Notice that the <xref:System.Web.UI.WebControls.Button.Click> event handler for the <xref:System.Windows.Controls.Button> control is marked with the `async` modifier because it calls an asynchronous method.</span></span>  
  
 [!code-csharp[Asynchronous_File_IO_async#1](~/samples/snippets/csharp/VS_Snippets_CLR/Asynchronous_File_IO_async/cs/example.cs#1)]
 [!code-vb[Asynchronous_File_IO_async#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Asynchronous_File_IO_async/vb/example.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="feb6f-143">Quando você implementa uma classe derivada de <see cref="T:System.IO.Stream" />, você deve fornecer implementações para o <see cref="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)" /> e <see cref="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)" /> métodos.</span>
        <span class="sxs-lookup">
          <span data-stu-id="feb6f-143">When you implement a derived class of <see cref="T:System.IO.Stream" />, you must provide implementations for the <see cref="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)" /> and <see cref="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)" /> methods.</span>
        </span>
        <span data-ttu-id="feb6f-144">Os métodos assíncronos <see cref="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" />, <see cref="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" />, e <see cref="M:System.IO.Stream.CopyToAsync(System.IO.Stream)" /> usar os métodos síncronos <see cref="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)" /> e <see cref="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)" /> em suas implementações.</span>
        <span class="sxs-lookup">
          <span data-stu-id="feb6f-144">The asynchronous methods <see cref="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" />, <see cref="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" />, and <see cref="M:System.IO.Stream.CopyToAsync(System.IO.Stream)" /> use the synchronous methods <see cref="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)" /> and <see cref="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)" /> in their implementations.</span>
        </span>
        <span data-ttu-id="feb6f-145">Portanto, suas implementações de <see cref="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)" /> e <see cref="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)" /> funcionarão corretamente com os métodos assíncronos.</span>
        <span class="sxs-lookup">
          <span data-stu-id="feb6f-145">Therefore, your implementations of <see cref="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)" /> and <see cref="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)" /> will work correctly with the asynchronous methods.</span>
        </span>
        <span data-ttu-id="feb6f-146">As implementações padrão de <see cref="M:System.IO.Stream.ReadByte" /> e <see cref="M:System.IO.Stream.WriteByte(System.Byte)" /> criar uma nova matriz de byte único elemento e, em seguida, chamar as implementações de <see cref="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)" /> e <see cref="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)" />.</span>
        <span class="sxs-lookup">
          <span data-stu-id="feb6f-146">The default implementations of <see cref="M:System.IO.Stream.ReadByte" /> and <see cref="M:System.IO.Stream.WriteByte(System.Byte)" /> create a new single-element byte array, and then call your implementations of <see cref="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)" /> and <see cref="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)" />.</span>
        </span>
        <span data-ttu-id="feb6f-147">Quando você deriva de <see cref="T:System.IO.Stream" />, recomendamos que você substitua esses métodos para acessar o buffer interno, se você tiver um, para um desempenho significativamente melhor.</span>
        <span class="sxs-lookup">
          <span data-stu-id="feb6f-147">When you derive from <see cref="T:System.IO.Stream" />, we recommend that you override these methods to access your internal buffer, if you have one, for substantially better performance.</span>
        </span>
        <span data-ttu-id="feb6f-148">Você também deve fornecer implementações de <see cref="P:System.IO.Stream.CanRead" />, <see cref="P:System.IO.Stream.CanSeek" />, <see cref="P:System.IO.Stream.CanWrite" />, <see cref="M:System.IO.Stream.Flush" />, <see cref="P:System.IO.Stream.Length" />, <see cref="P:System.IO.Stream.Position" />, <see cref="M:System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)" />, e <see cref="M:System.IO.Stream.SetLength(System.Int64)" />.</span>
        <span class="sxs-lookup">
          <span data-stu-id="feb6f-148">You must also provide implementations of <see cref="P:System.IO.Stream.CanRead" />, <see cref="P:System.IO.Stream.CanSeek" />, <see cref="P:System.IO.Stream.CanWrite" />, <see cref="M:System.IO.Stream.Flush" />, <see cref="P:System.IO.Stream.Length" />, <see cref="P:System.IO.Stream.Position" />, <see cref="M:System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)" />, and <see cref="M:System.IO.Stream.SetLength(System.Int64)" />.</span>
        </span>
        <span data-ttu-id="feb6f-149">Não substituir o <see cref="M:System.IO.Stream.Close" /> método, em vez disso, colocar todos o <see cref="T:System.IO.Stream" /> lógica de limpeza no <see cref="M:System.IO.Stream.Dispose(System.Boolean)" /> método.</span>
        <span class="sxs-lookup">
          <span data-stu-id="feb6f-149">Do not override the <see cref="M:System.IO.Stream.Close" /> method, instead, put all the <see cref="T:System.IO.Stream" /> cleanup logic in the <see cref="M:System.IO.Stream.Dispose(System.Boolean)" /> method.</span>
        </span>
        <span data-ttu-id="feb6f-150">Para obter mais informações, consulte [implementar um método Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
        <span class="sxs-lookup">
          <span data-stu-id="feb6f-150">For more information, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
        </span>
      </para>
    </block>
    <altmember cref="T:System.IO.FileStream" />
    <altmember cref="T:System.IO.MemoryStream" />
    <altmember cref="T:System.IO.BufferedStream" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Stream ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Stream();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="feb6f-151">Inicializa uma nova instância da classe <see cref="T:System.IO.Stream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-151">Initializes a new instance of the <see cref="T:System.IO.Stream" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="feb6f-152"><xref:System.IO.Stream> é a classe base abstrata de todos os fluxos.</span><span class="sxs-lookup"><span data-stu-id="feb6f-152"><xref:System.IO.Stream> is the abstract base class of all streams.</span></span>  
  
 <span data-ttu-id="feb6f-153">Algumas das mais comumente usado fluxos que herdam de <xref:System.IO.Stream> são <xref:System.IO.FileStream>, e <xref:System.IO.MemoryStream>.</span><span class="sxs-lookup"><span data-stu-id="feb6f-153">Some of the more commonly used streams that inherit from <xref:System.IO.Stream> are <xref:System.IO.FileStream>, and <xref:System.IO.MemoryStream>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginRead">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginRead (byte[] buffer, int offset, int count, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginRead(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginRead (buffer As Byte(), offset As Integer, count As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginRead(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="feb6f-154">O buffer para ler os dados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-154">The buffer to read the data into.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="feb6f-155">O deslocamento de bytes no <c>buffer</c> em que se começa a gravar os dados lidos do fluxo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-155">The byte offset in <c>buffer</c> at which to begin writing data read from the stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="feb6f-156">O número máximo de bytes a serem lidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-156">The maximum number of bytes to read.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="feb6f-157">Um retorno de chamada assíncrono opcional, a ser chamado quando a leitura for concluída.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-157">An optional asynchronous callback, to be called when the read is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="feb6f-158">Um objeto fornecido pelo usuário que distingue essa solicitação de leitura assíncrona específica de outras solicitações.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-158">A user-provided object that distinguishes this particular asynchronous read request from other requests.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="feb6f-159">Inicia uma operação de leitura assíncrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-159">Begins an asynchronous read operation.</span>
          </span>
          <span data-ttu-id="feb6f-160">(Considere o uso de <see cref="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" /> em seu lugar.)</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-160">(Consider using <see cref="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" /> instead.)</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="feb6f-161">Um <see cref="T:System.IAsyncResult" /> que representa a operação de leitura assíncrona, que ainda pode estar pendente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-161">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous read, which could still be pending.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="feb6f-162">No .NET Framework 4, e em versões anteriores, você precisa usar métodos como <xref:System.IO.Stream.BeginRead%2A> e <xref:System.IO.Stream.EndRead%2A> para implementar operações de E/S assíncronas.</span><span class="sxs-lookup"><span data-stu-id="feb6f-162">In the .NET Framework 4 and earlier versions, you have to use methods such as <xref:System.IO.Stream.BeginRead%2A> and <xref:System.IO.Stream.EndRead%2A> to implement asynchronous I/O operations.</span></span> <span data-ttu-id="feb6f-163">Esses métodos ainda estão disponíveis no [!INCLUDE[net_v45](~/includes/net-v45-md.md)] para dar suporte a código herdado; no entanto, os novos métodos assíncronos, tais como <xref:System.IO.Stream.ReadAsync%2A>, <xref:System.IO.Stream.WriteAsync%2A>, <xref:System.IO.Stream.CopyToAsync%2A>, e <xref:System.IO.Stream.FlushAsync%2A>, ajudam a implementar operações de e/s assíncronas mais facilmente.</span><span class="sxs-lookup"><span data-stu-id="feb6f-163">These methods are still available in the [!INCLUDE[net_v45](~/includes/net-v45-md.md)] to support legacy code; however, the new async methods, such as <xref:System.IO.Stream.ReadAsync%2A>, <xref:System.IO.Stream.WriteAsync%2A>, <xref:System.IO.Stream.CopyToAsync%2A>, and <xref:System.IO.Stream.FlushAsync%2A>, help you implement asynchronous I/O operations more easily.</span></span>  
  
 <span data-ttu-id="feb6f-164">A implementação padrão de `BeginRead` em um fluxo de chamadas a <xref:System.IO.Stream.Read%2A> método de forma síncrona, o que significa que `Read` podem bloquear em alguns fluxos.</span><span class="sxs-lookup"><span data-stu-id="feb6f-164">The default implementation of `BeginRead` on a stream calls the <xref:System.IO.Stream.Read%2A> method synchronously, which means that `Read` might block on some streams.</span></span> <span data-ttu-id="feb6f-165">No entanto, instâncias de classes, como `FileStream` e `NetworkStream` suporte para operações assíncronas totalmente se as instâncias de tem sido abertas assincronamente.</span><span class="sxs-lookup"><span data-stu-id="feb6f-165">However, instances of classes such as `FileStream` and `NetworkStream` fully support asynchronous operations if the instances have been opened asynchronously.</span></span> <span data-ttu-id="feb6f-166">Portanto, chamadas para `BeginRead` não bloqueará esses fluxos.</span><span class="sxs-lookup"><span data-stu-id="feb6f-166">Therefore, calls to `BeginRead` will not block on those streams.</span></span> <span data-ttu-id="feb6f-167">Você pode substituir `BeginRead` (usando delegados assíncronos, por exemplo) para fornecer o comportamento assíncrono.</span><span class="sxs-lookup"><span data-stu-id="feb6f-167">You can override `BeginRead` (by using async delegates, for example) to provide asynchronous behavior.</span></span>  
  
 <span data-ttu-id="feb6f-168">Passar o `IAsyncResult` retornar o valor para o <xref:System.IO.Stream.EndRead%2A> método do fluxo para determinar o número de bytes foram lidas e para liberar recursos do sistema operacional usados para leitura.</span><span class="sxs-lookup"><span data-stu-id="feb6f-168">Pass the `IAsyncResult` return value to the <xref:System.IO.Stream.EndRead%2A> method of the stream to determine how many bytes were read and to release operating system resources used for reading.</span></span> <span data-ttu-id="feb6f-169"><xref:System.IO.Stream.EndRead%2A> deve ser chamado uma vez para cada chamada a <xref:System.IO.Stream.BeginRead%2A>.</span><span class="sxs-lookup"><span data-stu-id="feb6f-169"><xref:System.IO.Stream.EndRead%2A> must be called once for every call to <xref:System.IO.Stream.BeginRead%2A>.</span></span> <span data-ttu-id="feb6f-170">Você pode fazer isso usando o mesmo código que chamou `BeginRead` ou em um retorno de chamada transmitido para `BeginRead`.</span><span class="sxs-lookup"><span data-stu-id="feb6f-170">You can do this either by using the same code that called `BeginRead` or in a callback passed to `BeginRead`.</span></span>  
  
 <span data-ttu-id="feb6f-171">A posição atual no fluxo é atualizada quando a gravação ou leitura assíncrona é emitida, não quando a operação de e/s é concluída.</span><span class="sxs-lookup"><span data-stu-id="feb6f-171">The current position in the stream is updated when the asynchronous read or write is issued, not when the I/O operation completes.</span></span>  
  
 <span data-ttu-id="feb6f-172">Várias solicitações assíncronas simultâneas renderizam a ordem de conclusão de solicitação indefinido.</span><span class="sxs-lookup"><span data-stu-id="feb6f-172">Multiple simultaneous asynchronous requests render the request completion order uncertain.</span></span>  
  
 <span data-ttu-id="feb6f-173">Use o <xref:System.IO.Stream.CanRead%2A> propriedade para determinar se a instância atual oferece suporte à leitura.</span><span class="sxs-lookup"><span data-stu-id="feb6f-173">Use the <xref:System.IO.Stream.CanRead%2A> property to determine whether the current instance supports reading.</span></span>  
  
 <span data-ttu-id="feb6f-174">Se um fluxo está fechado ou se você passar um argumento inválido, as exceções são geradas imediatamente de `BeginRead`.</span><span class="sxs-lookup"><span data-stu-id="feb6f-174">If a stream is closed or you pass an invalid argument, exceptions are thrown immediately from `BeginRead`.</span></span> <span data-ttu-id="feb6f-175">Erros que ocorrem durante uma solicitação de leitura assíncrona, como uma falha de disco durante a solicitação de e/s, ocorrer no thread de pool de thread e lançam exceções ao chamar `EndRead`.</span><span class="sxs-lookup"><span data-stu-id="feb6f-175">Errors that occur during an asynchronous read request, such as a disk failure during the I/O request, occur on the thread pool thread and throw exceptions when calling `EndRead`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="feb6f-176">Tentativa de uma leitura assíncrona após o final do fluxo ou ocorre um erro de disco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-176">Attempted an asynchronous read past the end of the stream, or a disk error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="feb6f-177">Um ou mais argumentos são inválidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-177">One or more of the arguments is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="feb6f-178">Foram chamados métodos depois que o fluxo foi fechado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-178">Methods were called after the stream was closed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="feb6f-179">A implementação <see langword="Stream" /> atual não dá suporte à operação de leitura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-179">The current <see langword="Stream" /> implementation does not support the read operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginWrite">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginWrite (byte[] buffer, int offset, int count, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginWrite(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginWrite (buffer As Byte(), offset As Integer, count As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginWrite(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="feb6f-180">O buffer do qual os dados serão gravados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-180">The buffer to write data from.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="feb6f-181">O deslocamento de bytes no <c>buffer</c> do qual iniciar a gravação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-181">The byte offset in <c>buffer</c> from which to begin writing.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="feb6f-182">O número máximo de bytes a serem gravados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-182">The maximum number of bytes to write.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="feb6f-183">Um retorno de chamada assíncrona opcional, a ser chamada quando a operação de gravação for concluída.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-183">An optional asynchronous callback, to be called when the write is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="feb6f-184">Um objeto fornecido pelo usuário que distingue essa solicitação de gravação assíncrona específica de outras solicitações.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-184">A user-provided object that distinguishes this particular asynchronous write request from other requests.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="feb6f-185">Inicia uma operação de gravação assíncrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-185">Begins an asynchronous write operation.</span>
          </span>
          <span data-ttu-id="feb6f-186">(Considere o uso de <see cref="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" /> em seu lugar.)</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-186">(Consider using <see cref="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" /> instead.)</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="feb6f-187">Um <see langword="IAsyncResult" /> que representa a gravação assíncrona, que ainda pode estar pendente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-187">An <see langword="IAsyncResult" /> that represents the asynchronous write, which could still be pending.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="feb6f-188">No .NET Framework 4, e em versões anteriores, você precisa usar métodos como <xref:System.IO.Stream.BeginWrite%2A> e <xref:System.IO.Stream.EndWrite%2A> para implementar operações de E/S assíncronas.</span><span class="sxs-lookup"><span data-stu-id="feb6f-188">In the .NET Framework 4 and earlier versions, you have to use methods such as <xref:System.IO.Stream.BeginWrite%2A> and <xref:System.IO.Stream.EndWrite%2A> to implement asynchronous I/O operations.</span></span> <span data-ttu-id="feb6f-189">Esses métodos ainda estão disponíveis no [!INCLUDE[net_v45](~/includes/net-v45-md.md)] para dar suporte a código herdado; no entanto, os novos métodos assíncronos, tais como <xref:System.IO.Stream.ReadAsync%2A>, <xref:System.IO.Stream.WriteAsync%2A>, <xref:System.IO.Stream.CopyToAsync%2A>, e <xref:System.IO.Stream.FlushAsync%2A>, ajudam a implementar operações de e/s assíncronas mais facilmente.</span><span class="sxs-lookup"><span data-stu-id="feb6f-189">These methods are still available in the [!INCLUDE[net_v45](~/includes/net-v45-md.md)] to support legacy code; however, the new async methods, such as <xref:System.IO.Stream.ReadAsync%2A>, <xref:System.IO.Stream.WriteAsync%2A>, <xref:System.IO.Stream.CopyToAsync%2A>, and <xref:System.IO.Stream.FlushAsync%2A>, help you implement asynchronous I/O operations more easily.</span></span>  
  
 <span data-ttu-id="feb6f-190">A implementação padrão de `BeginWrite` em um fluxo de chamadas a <xref:System.IO.Stream.Write%2A> método de forma síncrona, o que significa que `Write` podem bloquear em alguns fluxos.</span><span class="sxs-lookup"><span data-stu-id="feb6f-190">The default implementation of `BeginWrite` on a stream calls the <xref:System.IO.Stream.Write%2A> method synchronously, which means that `Write` might block on some streams.</span></span> <span data-ttu-id="feb6f-191">No entanto, instâncias de classes, como `FileStream` e `NetworkStream` suporte para operações assíncronas totalmente se as instâncias de tem sido abertas assincronamente.</span><span class="sxs-lookup"><span data-stu-id="feb6f-191">However, instances of classes such as `FileStream` and `NetworkStream` fully support asynchronous operations if the instances have been opened asynchronously.</span></span> <span data-ttu-id="feb6f-192">Portanto, chamadas para `BeginWrite` não bloqueará esses fluxos.</span><span class="sxs-lookup"><span data-stu-id="feb6f-192">Therefore, calls to `BeginWrite` will not block on those streams.</span></span> <span data-ttu-id="feb6f-193">Você pode substituir `BeginWrite` (usando delegados assíncronos, por exemplo) para fornecer o comportamento assíncrono.</span><span class="sxs-lookup"><span data-stu-id="feb6f-193">You can override `BeginWrite` (by using async delegates, for example) to provide asynchronous behavior.</span></span>  
  
 <span data-ttu-id="feb6f-194">Passar o `IAsyncResult` retornado pelo método atual para <xref:System.IO.Stream.EndWrite%2A> para garantir que a gravação é concluída e libera recursos adequadamente.</span><span class="sxs-lookup"><span data-stu-id="feb6f-194">Pass the `IAsyncResult` returned by the current method to <xref:System.IO.Stream.EndWrite%2A> to ensure that the write completes and frees resources appropriately.</span></span> <span data-ttu-id="feb6f-195"><xref:System.IO.Stream.EndWrite%2A> deve ser chamado uma vez para cada chamada a <xref:System.IO.Stream.BeginWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="feb6f-195"><xref:System.IO.Stream.EndWrite%2A> must be called once for every call to <xref:System.IO.Stream.BeginWrite%2A>.</span></span> <span data-ttu-id="feb6f-196">Você pode fazer isso usando o mesmo código que chamou `BeginWrite` ou em um retorno de chamada transmitido para `BeginWrite`.</span><span class="sxs-lookup"><span data-stu-id="feb6f-196">You can do this either by using the same code that called `BeginWrite` or in a callback passed to `BeginWrite`.</span></span> <span data-ttu-id="feb6f-197">Se ocorrer um erro durante uma gravação assíncrona, uma exceção será lançada não até `EndWrite` é chamado com o `IAsyncResult` retornado por esse método.</span><span class="sxs-lookup"><span data-stu-id="feb6f-197">If an error occurs during an asynchronous write, an exception will not be thrown until `EndWrite` is called with the `IAsyncResult` returned by this method.</span></span>  
  
 <span data-ttu-id="feb6f-198">Se um fluxo gravável, gravando no final do fluxo expande o fluxo.</span><span class="sxs-lookup"><span data-stu-id="feb6f-198">If a stream is writable, writing at the end of the stream expands the stream.</span></span>  
  
 <span data-ttu-id="feb6f-199">A posição atual no fluxo é atualizada quando você emitir a gravação ou leitura assíncrona não quando a operação de e/s é concluída.</span><span class="sxs-lookup"><span data-stu-id="feb6f-199">The current position in the stream is updated when you issue the asynchronous read or write, not when the I/O operation completes.</span></span> <span data-ttu-id="feb6f-200">Várias solicitações assíncronas simultâneas renderizam a ordem de conclusão de solicitação indefinido.</span><span class="sxs-lookup"><span data-stu-id="feb6f-200">Multiple simultaneous asynchronous requests render the request completion order uncertain.</span></span>  
  
 <span data-ttu-id="feb6f-201">Use o <xref:System.IO.Stream.CanWrite%2A> propriedade para determinar se a instância atual oferece suporte à gravação.</span><span class="sxs-lookup"><span data-stu-id="feb6f-201">Use the <xref:System.IO.Stream.CanWrite%2A> property to determine whether the current instance supports writing.</span></span>  
  
 <span data-ttu-id="feb6f-202">Se um fluxo está fechado ou se você passar um argumento inválido, as exceções são geradas imediatamente de `BeginWrite`.</span><span class="sxs-lookup"><span data-stu-id="feb6f-202">If a stream is closed or you pass an invalid argument, exceptions are thrown immediately from `BeginWrite`.</span></span> <span data-ttu-id="feb6f-203">Erros que ocorrem durante uma solicitação de gravação assíncrona, como uma falha de disco durante a solicitação de e/s, ocorrer no thread de pool de thread e lançam exceções ao chamar `EndWrite`.</span><span class="sxs-lookup"><span data-stu-id="feb6f-203">Errors that occur during an asynchronous write request, such as a disk failure during the I/O request, occur on the thread pool thread and throw exceptions when calling `EndWrite`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="feb6f-204">Houve uma tentativa de gravação assíncrona após o final do fluxo ou ocorreu um erro de disco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-204">Attempted an asynchronous write past the end of the stream, or a disk error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="feb6f-205">Um ou mais argumentos são inválidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-205">One or more of the arguments is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="feb6f-206">Foram chamados métodos depois que o fluxo foi fechado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-206">Methods were called after the stream was closed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="feb6f-207">A implementação <see langword="Stream" /> atual não dá suporte à operação de gravação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-207">The current <see langword="Stream" /> implementation does not support the write operation.</span>
          </span>
        </exception>
        <altmember cref="M:System.IO.Stream.EndWrite(System.IAsyncResult)" />
        <altmember cref="P:System.IO.Stream.CanWrite" />
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public abstract bool CanRead { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRead" />
      <MemberSignature Language="DocId" Value="P:System.IO.Stream.CanRead" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property CanRead As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool CanRead { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="feb6f-208">Quando substituído em uma classe derivada, obtém um valor que indica se o fluxo atual dá suporte à leitura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-208">When overridden in a derived class, gets a value indicating whether the current stream supports reading.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="feb6f-209">
            <see langword="true" /> se o fluxo der suporte à leitura; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-209">
              <see langword="true" /> if the stream supports reading; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="feb6f-210">Se uma classe derivada de <xref:System.IO.Stream> não dá suporte para leitura, chamadas para o <xref:System.IO.Stream.Read%2A>, <xref:System.IO.Stream.ReadByte%2A>, e <xref:System.IO.Stream.BeginRead%2A> métodos lançam uma <xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="feb6f-210">If a class derived from <xref:System.IO.Stream> does not support reading, calls to the <xref:System.IO.Stream.Read%2A>, <xref:System.IO.Stream.ReadByte%2A>, and <xref:System.IO.Stream.BeginRead%2A> methods throw a <xref:System.NotSupportedException>.</span></span>  
  
 <span data-ttu-id="feb6f-211">Se o fluxo está fechado, essa propriedade retornará `false`.</span><span class="sxs-lookup"><span data-stu-id="feb6f-211">If the stream is closed, this property returns `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="feb6f-212">A seguir está um exemplo de como usar o `CanRead` propriedade.</span><span class="sxs-lookup"><span data-stu-id="feb6f-212">The following is an example of using the `CanRead` property.</span></span>  
  
 [!code-cpp[Classic FileStream.CanRead Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileStream.CanRead Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileStream.CanRead Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileStream.CanRead Example/CS/source.cs#1)]
 [!code-vb[Classic FileStream.CanRead Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileStream.CanRead Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSeek">
      <MemberSignature Language="C#" Value="public abstract bool CanSeek { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSeek" />
      <MemberSignature Language="DocId" Value="P:System.IO.Stream.CanSeek" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property CanSeek As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool CanSeek { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="feb6f-213">Quando substituído em uma classe derivada, obtém um valor que indica se o fluxo atual dá suporte à busca.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-213">When overridden in a derived class, gets a value indicating whether the current stream supports seeking.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="feb6f-214">
            <see langword="true" /> se o fluxo der suporte à busca, caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-214">
              <see langword="true" /> if the stream supports seeking; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="feb6f-215">Se uma classe derivada de <xref:System.IO.Stream> não dá suporte para busca, chamadas para <xref:System.IO.Stream.Length%2A>, <xref:System.IO.Stream.SetLength%2A>, <xref:System.IO.Stream.Position%2A>, e <xref:System.IO.Stream.Seek%2A> lançar um <xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="feb6f-215">If a class derived from <xref:System.IO.Stream> does not support seeking, calls to <xref:System.IO.Stream.Length%2A>, <xref:System.IO.Stream.SetLength%2A>, <xref:System.IO.Stream.Position%2A>, and <xref:System.IO.Stream.Seek%2A> throw a <xref:System.NotSupportedException>.</span></span>  
  
 <span data-ttu-id="feb6f-216">Se o fluxo está fechado, essa propriedade retornará `false`.</span><span class="sxs-lookup"><span data-stu-id="feb6f-216">If the stream is closed, this property returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanTimeout">
      <MemberSignature Language="C#" Value="public virtual bool CanTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanTimeout" />
      <MemberSignature Language="DocId" Value="P:System.IO.Stream.CanTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanTimeout As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanTimeout { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="feb6f-217">Obtém um valor que determina se o fluxo atual pode atingir o tempo limite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-217">Gets a value that determines whether the current stream can time out.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="feb6f-218">Um valor que determina se o fluxo atual pode atingir o tempo limite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-218">A value that determines whether the current stream can time out.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="feb6f-219">O <xref:System.IO.Stream.CanTimeout%2A> propriedade sempre retorna `false`.</span><span class="sxs-lookup"><span data-stu-id="feb6f-219">The <xref:System.IO.Stream.CanTimeout%2A> property always returns `false`.</span></span> <span data-ttu-id="feb6f-220">Algumas implementações de fluxo exigem um comportamento diferente, como <xref:System.Net.Sockets.NetworkStream>, que o tempo limite se a conectividade de rede for interrompida ou perdida.</span><span class="sxs-lookup"><span data-stu-id="feb6f-220">Some stream implementations require different behavior, such as <xref:System.Net.Sockets.NetworkStream>, which times out if network connectivity is interrupted or lost.</span></span> <span data-ttu-id="feb6f-221">Se você estiver implementando um fluxo que deve ser capaz de atingir o tempo limite, essa propriedade deve ser substituída para retornar `true`.</span><span class="sxs-lookup"><span data-stu-id="feb6f-221">If you are implementing a stream that must be able to time out, this property should be overridden to return `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.Stream.ReadTimeout" />
        <altmember cref="P:System.IO.Stream.WriteTimeout" />
      </Docs>
    </Member>
    <Member MemberName="CanWrite">
      <MemberSignature Language="C#" Value="public abstract bool CanWrite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWrite" />
      <MemberSignature Language="DocId" Value="P:System.IO.Stream.CanWrite" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property CanWrite As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool CanWrite { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="feb6f-222">Quando substituído em uma classe derivada, obtém um valor que indica se o fluxo atual dá suporte à gravação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-222">When overridden in a derived class, gets a value indicating whether the current stream supports writing.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="feb6f-223">
            <see langword="true" /> se o fluxo der suporte à gravação; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-223">
              <see langword="true" /> if the stream supports writing; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="feb6f-224">Se uma classe derivada de <xref:System.IO.Stream> não oferece suporte à gravação, uma chamada para <xref:System.IO.Stream.Write%2A>, <xref:System.IO.Stream.BeginWrite%2A>, ou <xref:System.IO.Stream.WriteByte%2A> lança um <xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="feb6f-224">If a class derived from <xref:System.IO.Stream> does not support writing, a call to <xref:System.IO.Stream.Write%2A>, <xref:System.IO.Stream.BeginWrite%2A>, or <xref:System.IO.Stream.WriteByte%2A> throws a <xref:System.NotSupportedException>.</span></span>  
  
 <span data-ttu-id="feb6f-225">Se o fluxo está fechado, essa propriedade retornará `false`.</span><span class="sxs-lookup"><span data-stu-id="feb6f-225">If the stream is closed, this property returns `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="feb6f-226">A seguir está um exemplo de como usar o `CanWrite` propriedade.</span><span class="sxs-lookup"><span data-stu-id="feb6f-226">The following is an example of using the `CanWrite` property.</span></span>  
  
 [!code-cpp[Classic Stream.CanWrite Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Stream.CanWrite Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Stream.CanWrite Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Stream.CanWrite Example/CS/source.cs#1)]
 [!code-vb[Classic Stream.CanWrite Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Stream.CanWrite Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public virtual void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="feb6f-227">Fecha o fluxo atual e libera todos os recursos (como soquetes e identificadores de arquivos) associados ao fluxo atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-227">Closes the current stream and releases any resources (such as sockets and file handles) associated with the current stream.</span>
          </span>
          <span data-ttu-id="feb6f-228">Em vez de chamar esse método, verifique se o fluxo é descartado corretamente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-228">Instead of calling this method, ensure that the stream is properly disposed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="feb6f-229">Este método chama <xref:System.IO.Stream.Dispose%2A>, especificando `true` para liberar todos os recursos.</span><span class="sxs-lookup"><span data-stu-id="feb6f-229">This method calls <xref:System.IO.Stream.Dispose%2A>, specifying `true` to release all resources.</span></span> <span data-ttu-id="feb6f-230">Você não precisa chamar especificamente a <xref:System.IO.Stream.Close%2A> método.</span><span class="sxs-lookup"><span data-stu-id="feb6f-230">You do not have to specifically call the <xref:System.IO.Stream.Close%2A> method.</span></span> <span data-ttu-id="feb6f-231">Em vez disso, verifique se cada <xref:System.IO.Stream> objeto seja corretamente descartado.</span><span class="sxs-lookup"><span data-stu-id="feb6f-231">Instead, ensure that every <xref:System.IO.Stream> object is properly disposed.</span></span> <span data-ttu-id="feb6f-232">Você pode declarar <xref:System.IO.Stream> objetos dentro de um `using` bloco (ou `Using` bloquear no Visual Basic) para garantir que o fluxo e todos os seus recursos são descartados, ou você pode chamar explicitamente o <xref:System.IO.Stream.Dispose%2A> método.</span><span class="sxs-lookup"><span data-stu-id="feb6f-232">You can declare <xref:System.IO.Stream> objects within a `using` block (or `Using` block in Visual Basic) to ensure that the stream and all of its resources are disposed, or you can explicitly call the <xref:System.IO.Stream.Dispose%2A> method.</span></span>  
  
 <span data-ttu-id="feb6f-233">Liberando o fluxo não liberar seu codificador subjacente, a menos que você chamar explicitamente uma implementação de <xref:System.IO.Stream.Flush%2A> ou `Close`.</span><span class="sxs-lookup"><span data-stu-id="feb6f-233">Flushing the stream will not flush its underlying encoder unless you explicitly call an implementation of <xref:System.IO.Stream.Flush%2A> or `Close`.</span></span> <span data-ttu-id="feb6f-234">Configuração <xref:System.IO.StreamWriter.AutoFlush%2A> para `true` significa que os dados serão liberados do buffer no fluxo, mas o estado de codificador não será liberado.</span><span class="sxs-lookup"><span data-stu-id="feb6f-234">Setting <xref:System.IO.StreamWriter.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="feb6f-235">Isso permite que o codificador deve manter o estado (parcial caracteres) para que ele pode codificar o próximo bloco de caracteres corretamente.</span><span class="sxs-lookup"><span data-stu-id="feb6f-235">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="feb6f-236">Este cenário afeta UTF8 e UTF7 onde determinados caracteres podem ser codificados somente depois que o codificador recebe adjacentes ou mais caracteres.</span><span class="sxs-lookup"><span data-stu-id="feb6f-236">This scenario affects UTF8 and UTF7 where certain characters can be encoded only after the encoder receives the adjacent character or characters.</span></span>  
  
 <span data-ttu-id="feb6f-237">Tentativas de manipular o fluxo após o fluxo foi fechado podem acionar um <xref:System.ObjectDisposedException>.</span><span class="sxs-lookup"><span data-stu-id="feb6f-237">Attempts to manipulate the stream after the stream has been closed might throw an <xref:System.ObjectDisposedException>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="feb6f-238">Em classes derivadas, não substituem o <see cref="M:System.IO.Stream.Close" /> método, em vez disso, colocar todos os <see langword="Stream" /> lógica de limpeza no <see cref="M:System.IO.Stream.Dispose(System.Boolean)" /> método.</span>
            <span class="sxs-lookup">
              <span data-stu-id="feb6f-238">In derived classes, do not override the <see cref="M:System.IO.Stream.Close" /> method, instead, put all of the <see langword="Stream" /> cleanup logic in the <see cref="M:System.IO.Stream.Dispose(System.Boolean)" /> method.</span>
            </span>
            <span data-ttu-id="feb6f-239">Para obter mais informações, consulte [implementar um método Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            <span class="sxs-lookup">
              <span data-stu-id="feb6f-239">For more information, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyTo">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="feb6f-240">Lê os bytes do fluxo atual e os grava em outro fluxo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-240">Reads the bytes from the current stream and writes them to another stream.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.IO.Stream destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.IO.Stream destination) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.CopyTo(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (destination As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(System::IO::Stream ^ destination);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="destination">
          <span data-ttu-id="feb6f-241">O fluxo para o qual o conteúdo do fluxo atual será copiado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-241">The stream to which the contents of the current stream will be copied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="feb6f-242">Lê os bytes do fluxo atual e os grava em outro fluxo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-242">Reads the bytes from the current stream and writes them to another stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="feb6f-243">A cópia começa na posição atual no fluxo atual e não redefinir a posição do fluxo de destino após a conclusão da operação de cópia.</span><span class="sxs-lookup"><span data-stu-id="feb6f-243">Copying begins at the current position in the current stream, and does not reset the position of the destination stream after the copy operation is complete.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="feb6f-244">O exemplo a seguir copia o conteúdo de um <xref:System.IO.FileStream> para um <xref:System.IO.MemoryStream>.</span><span class="sxs-lookup"><span data-stu-id="feb6f-244">The following example copies the contents of a <xref:System.IO.FileStream> to a <xref:System.IO.MemoryStream>.</span></span>  
  
 [!code-csharp[System.IO.Stream.CopyTo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.stream.copyto/cs/program.cs#1)]
 [!code-vb[System.IO.Stream.CopyTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.stream.copyto/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="feb6f-245">
            <paramref name="destination" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-245">
              <paramref name="destination" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="feb6f-246">Não há suporte para a leitura no fluxo atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-246">The current stream does not support reading.</span>
          </span>
          <span data-ttu-id="feb6f-247">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-247">-or-</span>
          </span>
          <span data-ttu-id="feb6f-248">
            <paramref name="destination" /> não dá suporte à gravação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-248">
              <paramref name="destination" /> does not support writing.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="feb6f-249">O fluxo atual ou <paramref name="destination" /> foram fechados antes do método <see cref="M:System.IO.Stream.CopyTo(System.IO.Stream)" /> ser chamado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-249">Either the current stream or <paramref name="destination" /> were closed before the <see cref="M:System.IO.Stream.CopyTo(System.IO.Stream)" /> method was called.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="feb6f-250">Ocorreu um erro de E/S.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-250">An I/O error occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.IO.Stream destination, int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.IO.Stream destination, int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (destination As Stream, bufferSize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(System::IO::Stream ^ destination, int bufferSize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.IO.Stream" />
        <Parameter Name="bufferSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="destination">
          <span data-ttu-id="feb6f-251">O fluxo para o qual o conteúdo do fluxo atual será copiado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-251">The stream to which the contents of the current stream will be copied.</span>
          </span>
        </param>
        <param name="bufferSize">
          <span data-ttu-id="feb6f-252">O tamanho do buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-252">The size of the buffer.</span>
          </span>
          <span data-ttu-id="feb6f-253">Esse valor deve ser maior que zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-253">This value must be greater than zero.</span>
          </span>
          <span data-ttu-id="feb6f-254">O tamanho padrão é 81920.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-254">The default size is 81920.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="feb6f-255">Lê os bytes do fluxo atual e os grava em outro fluxo usando um tamanho do buffer especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-255">Reads the bytes from the current stream and writes them to another stream, using a specified buffer size.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="feb6f-256">A cópia começa na posição atual no fluxo atual e não redefinir a posição do fluxo de destino após a conclusão da operação de cópia.</span><span class="sxs-lookup"><span data-stu-id="feb6f-256">Copying begins at the current position in the current stream, and does not reset the position of the destination stream after the copy operation is complete.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="feb6f-257">
            <paramref name="destination" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-257">
              <paramref name="destination" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="feb6f-258">
            <paramref name="bufferSize" /> é negativo ou zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-258">
              <paramref name="bufferSize" /> is negative or zero.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="feb6f-259">Não há suporte para a leitura no fluxo atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-259">The current stream does not support reading.</span>
          </span>
          <span data-ttu-id="feb6f-260">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-260">-or-</span>
          </span>
          <span data-ttu-id="feb6f-261">
            <paramref name="destination" /> não dá suporte à gravação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-261">
              <paramref name="destination" /> does not support writing.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="feb6f-262">O fluxo atual ou <paramref name="destination" /> foram fechados antes do método <see cref="M:System.IO.Stream.CopyTo(System.IO.Stream)" /> ser chamado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-262">Either the current stream or <paramref name="destination" /> were closed before the <see cref="M:System.IO.Stream.CopyTo(System.IO.Stream)" /> method was called.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="feb6f-263">Ocorreu um erro de E/S.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-263">An I/O error occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyToAsync">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="feb6f-264">Lê de forma assíncrona os bytes do fluxo atual e os grava em outro fluxo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-264">Asynchronously reads the bytes from the current stream and writes them to another stream.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyToAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CopyToAsync (System.IO.Stream destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CopyToAsync(class System.IO.Stream destination) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.CopyToAsync(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Function CopyToAsync (destination As Stream) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ CopyToAsync(System::IO::Stream ^ destination);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="destination">
          <span data-ttu-id="feb6f-265">O fluxo para o qual o conteúdo do fluxo atual será copiado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-265">The stream to which the contents of the current stream will be copied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="feb6f-266">Lê de forma assíncrona os bytes do fluxo atual e os grava em outro fluxo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-266">Asynchronously reads the bytes from the current stream and writes them to another stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="feb6f-267">Uma tarefa que representa a operação de cópia assíncrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-267">A task that represents the asynchronous copy operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="feb6f-268">O <xref:System.IO.Stream.CopyToAsync%2A> método permite que você execute operações de e/s de uso intensivo de recursos sem bloquear o thread principal.</span><span class="sxs-lookup"><span data-stu-id="feb6f-268">The <xref:System.IO.Stream.CopyToAsync%2A> method enables you to perform resource-intensive I/O operations without blocking the main thread.</span></span> <span data-ttu-id="feb6f-269">Essa consideração sobre o desempenho é particularmente importante em um aplicativo [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] ou [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] em que uma operação demorada de fluxo pode bloquear o thread de interface do usuário e fazer seu aplicativo parecer como se não estivesse funcionando.</span><span class="sxs-lookup"><span data-stu-id="feb6f-269">This performance consideration is particularly important in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app or [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] app where a time-consuming stream operation can block the UI thread and make your app appear as if it is not working.</span></span> <span data-ttu-id="feb6f-270">Os métodos assíncronos são usados em conjunto com o `async` e `await` palavras-chave no Visual Basic e c#.</span><span class="sxs-lookup"><span data-stu-id="feb6f-270">The async methods are used in conjunction with the `async` and `await` keywords in Visual Basic and C#.</span></span>  
  
 <span data-ttu-id="feb6f-271">A cópia começa na posição atual no fluxo atual.</span><span class="sxs-lookup"><span data-stu-id="feb6f-271">Copying begins at the current position in the current stream.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="feb6f-272">O exemplo a seguir demonstra como usar duas <xref:System.IO.FileStream> objetos de forma assíncrona copiar os arquivos de um diretório para outro.</span><span class="sxs-lookup"><span data-stu-id="feb6f-272">The following example demonstrates how to use two <xref:System.IO.FileStream> objects to asynchronously copy the files from one directory to another.</span></span> <span data-ttu-id="feb6f-273">O <xref:System.IO.FileStream> classe deriva de <xref:System.IO.Stream> classe.</span><span class="sxs-lookup"><span data-stu-id="feb6f-273">The <xref:System.IO.FileStream> class derives from the <xref:System.IO.Stream> class.</span></span>  <span data-ttu-id="feb6f-274">Observe que o <xref:System.Web.UI.WebControls.Button.Click> manipulador de eventos para o <xref:System.Windows.Controls.Button> controle está marcado com o `async` modificador porque chama um método assíncrono</span><span class="sxs-lookup"><span data-stu-id="feb6f-274">Notice that the <xref:System.Web.UI.WebControls.Button.Click> event handler for the <xref:System.Windows.Controls.Button> control is marked with the `async` modifier because it calls an asynchronous method</span></span>  
  
 [!code-csharp[Asynchronous_File_IO_async#1](~/samples/snippets/csharp/VS_Snippets_CLR/Asynchronous_File_IO_async/cs/example.cs#1)]
 [!code-vb[Asynchronous_File_IO_async#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Asynchronous_File_IO_async/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="feb6f-275">
            <paramref name="destination" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-275">
              <paramref name="destination" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="feb6f-276">O fluxo atual ou o fluxo de destino é descartado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-276">Either the current stream or the destination stream is disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="feb6f-277">O fluxo atual não dá suporte à leitura ou o fluxo de destino não dá suporte à gravação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-277">The current stream does not support reading, or the destination stream does not support writing.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CopyToAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CopyToAsync (System.IO.Stream destination, int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CopyToAsync(class System.IO.Stream destination, int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function CopyToAsync (destination As Stream, bufferSize As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ CopyToAsync(System::IO::Stream ^ destination, int bufferSize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.IO.Stream" />
        <Parameter Name="bufferSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="destination">
          <span data-ttu-id="feb6f-278">O fluxo para o qual o conteúdo do fluxo atual será copiado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-278">The stream to which the contents of the current stream will be copied.</span>
          </span>
        </param>
        <param name="bufferSize">
          <span data-ttu-id="feb6f-279">O tamanho do buffer, em bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-279">The size, in bytes, of the buffer.</span>
          </span>
          <span data-ttu-id="feb6f-280">Esse valor deve ser maior que zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-280">This value must be greater than zero.</span>
          </span>
          <span data-ttu-id="feb6f-281">O tamanho padrão é 81920.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-281">The default size is 81920.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="feb6f-282">Lê de maneira assíncrona os bytes do fluxo atual e os grava em outro fluxo usando um tamanho do buffer especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-282">Asynchronously reads the bytes from the current stream and writes them to another stream, using a specified buffer size.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="feb6f-283">Uma tarefa que representa a operação de cópia assíncrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-283">A task that represents the asynchronous copy operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="feb6f-284">O <xref:System.IO.Stream.CopyToAsync%2A> método permite que você execute operações de e/s de uso intensivo de recursos sem bloquear o thread principal.</span><span class="sxs-lookup"><span data-stu-id="feb6f-284">The <xref:System.IO.Stream.CopyToAsync%2A> method enables you to perform resource-intensive I/O operations without blocking the main thread.</span></span> <span data-ttu-id="feb6f-285">Essa consideração sobre o desempenho é particularmente importante em um aplicativo [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] ou [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] em que uma operação demorada de fluxo pode bloquear o thread de interface do usuário e fazer seu aplicativo parecer como se não estivesse funcionando.</span><span class="sxs-lookup"><span data-stu-id="feb6f-285">This performance consideration is particularly important in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app or [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] app where a time-consuming stream operation can block the UI thread and make your app appear as if it is not working.</span></span> <span data-ttu-id="feb6f-286">Os métodos assíncronos são usados em conjunto com o `async` e `await` palavras-chave no Visual Basic e c#.</span><span class="sxs-lookup"><span data-stu-id="feb6f-286">The async methods are used in conjunction with the `async` and `await` keywords in Visual Basic and C#.</span></span>  
  
 <span data-ttu-id="feb6f-287">A cópia começa na posição atual no fluxo atual.</span><span class="sxs-lookup"><span data-stu-id="feb6f-287">Copying begins at the current position in the current stream.</span></span>  
  
 <span data-ttu-id="feb6f-288">Para obter um exemplo de copiar entre dois fluxos, consulte o <xref:System.IO.Stream.CopyToAsync%28System.IO.Stream%29> de sobrecarga.</span><span class="sxs-lookup"><span data-stu-id="feb6f-288">For an example of copying between two streams, see the <xref:System.IO.Stream.CopyToAsync%28System.IO.Stream%29> overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="feb6f-289">
            <paramref name="destination" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-289">
              <paramref name="destination" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="feb6f-290">
            <paramref name="buffersize" /> é negativo ou zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-290">
              <paramref name="buffersize" /> is negative or zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="feb6f-291">O fluxo atual ou o fluxo de destino é descartado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-291">Either the current stream or the destination stream is disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="feb6f-292">O fluxo atual não dá suporte à leitura ou o fluxo de destino não dá suporte à gravação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-292">The current stream does not support reading, or the destination stream does not support writing.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CopyToAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CopyToAsync (System.IO.Stream destination, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CopyToAsync(class System.IO.Stream destination, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.CopyToAsync(System.IO.Stream,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ CopyToAsync(System::IO::Stream ^ destination, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.IO.Stream" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyToAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task CopyToAsync (System.IO.Stream destination, int bufferSize, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task CopyToAsync(class System.IO.Stream destination, int32 bufferSize, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ CopyToAsync(System::IO::Stream ^ destination, int bufferSize, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.IO.Stream" />
        <Parameter Name="bufferSize" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="destination">
          <span data-ttu-id="feb6f-293">O fluxo para o qual o conteúdo do fluxo atual será copiado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-293">The stream to which the contents of the current stream will be copied.</span>
          </span>
        </param>
        <param name="bufferSize">
          <span data-ttu-id="feb6f-294">O tamanho do buffer, em bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-294">The size, in bytes, of the buffer.</span>
          </span>
          <span data-ttu-id="feb6f-295">Esse valor deve ser maior que zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-295">This value must be greater than zero.</span>
          </span>
          <span data-ttu-id="feb6f-296">O tamanho padrão é 81.920.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-296">The default size is 81920.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="feb6f-297">O token a se monitorar para solicitações de cancelamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-297">The token to monitor for cancellation requests.</span>
          </span>
          <span data-ttu-id="feb6f-298">O valor padrão é <see cref="P:System.Threading.CancellationToken.None" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-298">The default value is <see cref="P:System.Threading.CancellationToken.None" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="feb6f-299">Lê de forma assíncrona os bytes do fluxo atual e os grava em outro fluxo usando um tamanho do buffer especificado e um token de cancelamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-299">Asynchronously reads the bytes from the current stream and writes them to another stream, using a specified buffer size and cancellation token.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="feb6f-300">Uma tarefa que representa a operação de cópia assíncrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-300">A task that represents the asynchronous copy operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="feb6f-301">O <xref:System.IO.Stream.CopyToAsync%2A> método permite que você execute operações de e/s de uso intensivo de recursos sem bloquear o thread principal.</span><span class="sxs-lookup"><span data-stu-id="feb6f-301">The <xref:System.IO.Stream.CopyToAsync%2A> method enables you to perform resource-intensive I/O operations without blocking the main thread.</span></span> <span data-ttu-id="feb6f-302">Essa consideração sobre o desempenho é particularmente importante em um aplicativo [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] ou [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] em que uma operação demorada de fluxo pode bloquear o thread de interface do usuário e fazer seu aplicativo parecer como se não estivesse funcionando.</span><span class="sxs-lookup"><span data-stu-id="feb6f-302">This performance consideration is particularly important in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app or [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] app where a time-consuming stream operation can block the UI thread and make your app appear as if it is not working.</span></span> <span data-ttu-id="feb6f-303">Os métodos assíncronos são usados em conjunto com o `async` e `await` palavras-chave no Visual Basic e c#.</span><span class="sxs-lookup"><span data-stu-id="feb6f-303">The async methods are used in conjunction with the `async` and `await` keywords in Visual Basic and C#.</span></span>  
  
 <span data-ttu-id="feb6f-304">Se a operação foi cancelada antes da conclusão, a tarefa retornada contém o <xref:System.Threading.Tasks.TaskStatus.Canceled> valor para o <xref:System.Threading.Tasks.Task.Status%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="feb6f-304">If the operation is canceled before it completes, the returned task contains the <xref:System.Threading.Tasks.TaskStatus.Canceled> value for the <xref:System.Threading.Tasks.Task.Status%2A> property.</span></span>  
  
 <span data-ttu-id="feb6f-305">A cópia começa na posição atual no fluxo atual.</span><span class="sxs-lookup"><span data-stu-id="feb6f-305">Copying begins at the current position in the current stream.</span></span>  
  
 <span data-ttu-id="feb6f-306">Para obter um exemplo de copiar entre dois fluxos, consulte o <xref:System.IO.Stream.CopyToAsync%28System.IO.Stream%29> de sobrecarga.</span><span class="sxs-lookup"><span data-stu-id="feb6f-306">For an example of copying between two streams, see the <xref:System.IO.Stream.CopyToAsync%28System.IO.Stream%29> overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="feb6f-307">
            <paramref name="destination" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-307">
              <paramref name="destination" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="feb6f-308">
            <paramref name="buffersize" /> é negativo ou zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-308">
              <paramref name="buffersize" /> is negative or zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="feb6f-309">O fluxo atual ou o fluxo de destino é descartado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-309">Either the current stream or the destination stream is disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="feb6f-310">O fluxo atual não dá suporte à leitura ou o fluxo de destino não dá suporte à gravação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-310">The current stream does not support reading, or the destination stream does not support writing.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateWaitHandle">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.WaitHandle CreateWaitHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.WaitHandle CreateWaitHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.CreateWaitHandle" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateWaitHandle () As WaitHandle" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Threading::WaitHandle ^ CreateWaitHandle();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("CreateWaitHandle will be removed eventually.  Please use "new ManualResetEvent(false)" instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.WaitHandle</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="feb6f-311">Aloca um objeto <see cref="T:System.Threading.WaitHandle" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-311">Allocates a <see cref="T:System.Threading.WaitHandle" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="feb6f-312">Uma referência ao <see langword="WaitHandle" /> alocado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-312">A reference to the allocated <see langword="WaitHandle" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="feb6f-313">Quando chamado pela primeira vez, o método atual cria um `WaitHandle` do objeto e o retorna.</span><span class="sxs-lookup"><span data-stu-id="feb6f-313">When called for the first time, the current method creates a `WaitHandle` object and returns it.</span></span> <span data-ttu-id="feb6f-314">Em chamadas subsequentes, `CreateWaitHandle` retorna uma referência a um novo identificador de espera.</span><span class="sxs-lookup"><span data-stu-id="feb6f-314">On subsequent calls, `CreateWaitHandle` returns a reference to a new wait handle.</span></span>  
  
 <span data-ttu-id="feb6f-315">Use este método se você implementa os métodos assíncronos e requer um modo de bloqueio no <xref:System.IO.Stream.EndRead%2A> ou <xref:System.IO.Stream.EndWrite%2A> até que a operação assíncrona é concluída.</span><span class="sxs-lookup"><span data-stu-id="feb6f-315">Use this method if you implement the asynchronous methods and require a way of blocking in <xref:System.IO.Stream.EndRead%2A> or <xref:System.IO.Stream.EndWrite%2A> until the asynchronous operation is complete.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="feb6f-316">Libera todos os recursos usados pelo objeto <see cref="T:System.IO.Stream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-316">Releases all resources used by the <see cref="T:System.IO.Stream" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="feb6f-317">Libera todos os recursos usados pelo <see cref="T:System.IO.Stream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-317">Releases all resources used by the <see cref="T:System.IO.Stream" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="feb6f-318">Esse método descarta o fluxo, escrevendo as alterações ao repositório de backup e fechar o fluxo para liberar recursos.</span><span class="sxs-lookup"><span data-stu-id="feb6f-318">This method disposes the stream, by writing any changes to the backing store and closing the stream to release resources.</span></span>  
  
 <span data-ttu-id="feb6f-319">Chamando `Dispose` permite que os recursos usados pelo <xref:System.IO.Stream> para ser realocada para outros fins.</span><span class="sxs-lookup"><span data-stu-id="feb6f-319">Calling `Dispose` allows the resources used by the <xref:System.IO.Stream> to be reallocated for other purposes.</span></span> <span data-ttu-id="feb6f-320">Para obter mais informações sobre `Dispose`, consulte [limpeza de recursos não gerenciados](~/docs/standard/garbage-collection/unmanaged.md).</span><span class="sxs-lookup"><span data-stu-id="feb6f-320">For more information about `Dispose`, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="feb6f-321">Colocar toda a lógica de limpeza para seu objeto de fluxo em <see cref="M:System.IO.Stream.Dispose(System.Boolean)" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="feb6f-321">Place all cleanup logic for your stream object in <see cref="M:System.IO.Stream.Dispose(System.Boolean)" />.</span>
            </span>
            <span data-ttu-id="feb6f-322">Não substitua <see cref="M:System.IO.Stream.Close" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="feb6f-322">Do not override <see cref="M:System.IO.Stream.Close" />.</span>
            </span>
            <span data-ttu-id="feb6f-323">Observe que, devido aos requisitos de compatibilidade com versões anteriores, implementação desse método diferente com as diretrizes recomendadas para o padrão Dispose.</span>
            <span class="sxs-lookup">
              <span data-stu-id="feb6f-323">Note that because of backward compatibility requirements, this method's implementation differs from the recommended guidance for the Dispose pattern.</span>
            </span>
            <span data-ttu-id="feb6f-324">Este método chama <see cref="M:System.IO.Stream.Close" />, que, em seguida, chama <see cref="M:System.IO.Stream.Dispose(System.Boolean)" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="feb6f-324">This method calls <see cref="M:System.IO.Stream.Close" />, which then calls <see cref="M:System.IO.Stream.Dispose(System.Boolean)" />.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="feb6f-325">
            <see langword="true" /> para liberar recursos gerenciados e não gerenciados; <see langword="false" /> para liberar apenas recursos não gerenciados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-325">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="feb6f-326">Libera os recursos não gerenciados usados pelo <see cref="T:System.IO.Stream" /> e opcionalmente libera os recursos gerenciados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-326">Releases the unmanaged resources used by the <see cref="T:System.IO.Stream" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="feb6f-327">Você deve liberar todos os recursos especificando `true` para `disposing`.</span><span class="sxs-lookup"><span data-stu-id="feb6f-327">You should release all resources by specifying `true` for `disposing`.</span></span> <span data-ttu-id="feb6f-328">Quando `disposing` é `true`, o fluxo também pode garantir dados seja liberados para o buffer subjacente e acessarem outros objetos finalizáveis.</span><span class="sxs-lookup"><span data-stu-id="feb6f-328">When `disposing` is `true`, the stream can also ensure data is flushed to the underlying buffer, and access other finalizable objects.</span></span>  <span data-ttu-id="feb6f-329">Isso talvez não seja possível quando chamado a partir de um finalizador devido à falta de ordenação entre finalizadores.</span><span class="sxs-lookup"><span data-stu-id="feb6f-329">This may not be possible when called from a finalizer due a lack of ordering among finalizers.</span></span>  
  
 <span data-ttu-id="feb6f-330">Se o fluxo está usando um identificador de sistema operacional para se comunicar com sua fonte, considere o uso de uma subclasse de <xref:System.Runtime.InteropServices.SafeHandle> para essa finalidade.</span><span class="sxs-lookup"><span data-stu-id="feb6f-330">If your stream is using an operating system handle to communicate with its source, consider using a subclass of <xref:System.Runtime.InteropServices.SafeHandle> for this purpose.</span></span>  
  
 <span data-ttu-id="feb6f-331">Este método é chamado pelo método público <xref:System.ComponentModel.Component.Dispose%2A> e pelo método <xref:System.Object.Finalize%2A>.</span><span class="sxs-lookup"><span data-stu-id="feb6f-331">This method is called by the public <xref:System.ComponentModel.Component.Dispose%2A> method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="feb6f-332"><xref:System.ComponentModel.Component.Dispose%2A> invoca o método <xref:System.IO.Stream.Dispose%2A> protegido com o parâmetro `disposing` definido como `true`.</span><span class="sxs-lookup"><span data-stu-id="feb6f-332"><xref:System.ComponentModel.Component.Dispose%2A> invokes the protected <xref:System.IO.Stream.Dispose%2A> method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="feb6f-333"><xref:System.Object.Finalize%2A> invoca <xref:System.IO.Stream.Dispose%2A> com `disposing` definido como `false`.</span><span class="sxs-lookup"><span data-stu-id="feb6f-333"><xref:System.Object.Finalize%2A> invokes <xref:System.IO.Stream.Dispose%2A> with `disposing` set to `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="feb6f-334">Em classes derivadas, não substituem o <see cref="M:System.IO.Stream.Close" /> método, em vez disso, colocar toda a lógica de limpeza de fluxo no <see cref="M:System.IO.Stream.Dispose(System.Boolean)" /> método.</span>
            <span class="sxs-lookup">
              <span data-stu-id="feb6f-334">In derived classes, do not override the <see cref="M:System.IO.Stream.Close" /> method, instead, put all of the Stream cleanup logic in the <see cref="M:System.IO.Stream.Dispose(System.Boolean)" /> method.</span>
            </span>
            <span data-ttu-id="feb6f-335">
              <see cref="M:System.ComponentModel.Component.Dispose" /> pode ser chamado várias vezes por outros objetos.</span>
            <span class="sxs-lookup">
              <span data-stu-id="feb6f-335">
                <see cref="M:System.ComponentModel.Component.Dispose" /> can be called multiple times by other objects.</span>
            </span>
            <span data-ttu-id="feb6f-336">Ao substituir <see cref="M:System.IO.Stream.Dispose(System.Boolean)" />, tome cuidado para não referenciar objetos que tenham sido descartados anteriormente em uma chamada anterior para <see cref="M:System.ComponentModel.Component.Dispose" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="feb6f-336">When overriding <see cref="M:System.IO.Stream.Dispose(System.Boolean)" />, be careful not to reference objects that have been previously disposed of in an earlier call to <see cref="M:System.ComponentModel.Component.Dispose" />.</span>
            </span>
            <span data-ttu-id="feb6f-337">Para obter mais informações sobre como implementar <see cref="M:System.IO.Stream.Dispose(System.Boolean)" />, consulte [implementar um método Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            <span class="sxs-lookup">
              <span data-stu-id="feb6f-337">For more information about how to implement <see cref="M:System.IO.Stream.Dispose(System.Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            </span>
            <span data-ttu-id="feb6f-338">Para obter mais informações sobre <see cref="M:System.ComponentModel.Component.Dispose" /> e <see cref="M:System.Object.Finalize" />, consulte [limpeza de recursos não gerenciados](~/docs/standard/garbage-collection/unmanaged.md).</span>
            <span class="sxs-lookup">
              <span data-stu-id="feb6f-338">For more information about <see cref="M:System.ComponentModel.Component.Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="EndRead">
      <MemberSignature Language="C#" Value="public virtual int EndRead (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 EndRead(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.EndRead(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EndRead (asyncResult As IAsyncResult) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int EndRead(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="feb6f-339">A referência à solicitação assíncrona pendente a ser concluída.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-339">The reference to the pending asynchronous request to finish.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="feb6f-340">Espera a leitura assíncrona pendente ser concluída.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-340">Waits for the pending asynchronous read to complete.</span>
          </span>
          <span data-ttu-id="feb6f-341">(Considere o uso de <see cref="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" /> em seu lugar.)</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-341">(Consider using <see cref="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" /> instead.)</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="feb6f-342">O número de bytes lidos do fluxo, entre zero (0) e o número de bytes solicitado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-342">The number of bytes read from the stream, between zero (0) and the number of bytes you requested.</span>
          </span>
          <span data-ttu-id="feb6f-343">Os fluxos retornam zero (0) somente no final do fluxo, caso contrário, eles devem ser bloqueados até que pelo menos um byte esteja disponível.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-343">Streams return zero (0) only at the end of the stream, otherwise, they should block until at least one byte is available.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="feb6f-344">No .NET Framework 4, e em versões anteriores, você precisa usar métodos como <xref:System.IO.Stream.BeginRead%2A> e <xref:System.IO.Stream.EndRead%2A> para implementar operações de E/S assíncronas.</span><span class="sxs-lookup"><span data-stu-id="feb6f-344">In the .NET Framework 4 and earlier versions, you have to use methods such as <xref:System.IO.Stream.BeginRead%2A> and <xref:System.IO.Stream.EndRead%2A> to implement asynchronous I/O operations.</span></span> <span data-ttu-id="feb6f-345">Esses métodos ainda estão disponíveis no [!INCLUDE[net_v45](~/includes/net-v45-md.md)] para dar suporte a código herdado; no entanto, os novos métodos assíncronos, tais como <xref:System.IO.Stream.ReadAsync%2A>, <xref:System.IO.Stream.WriteAsync%2A>, <xref:System.IO.Stream.CopyToAsync%2A>, e <xref:System.IO.Stream.FlushAsync%2A>, ajudam a implementar operações de e/s assíncronas mais facilmente.</span><span class="sxs-lookup"><span data-stu-id="feb6f-345">These methods are still available in the [!INCLUDE[net_v45](~/includes/net-v45-md.md)] to support legacy code; however, the new async methods, such as <xref:System.IO.Stream.ReadAsync%2A>, <xref:System.IO.Stream.WriteAsync%2A>, <xref:System.IO.Stream.CopyToAsync%2A>, and <xref:System.IO.Stream.FlushAsync%2A>, help you implement asynchronous I/O operations more easily.</span></span>  
  
 <span data-ttu-id="feb6f-346">Chamar `EndRead` para determinar o número de bytes que foram lidos do fluxo.</span><span class="sxs-lookup"><span data-stu-id="feb6f-346">Call `EndRead` to determine how many bytes were read from the stream.</span></span>  
  
 <span data-ttu-id="feb6f-347">`EndRead` pode ser chamado uma vez em cada <xref:System.IAsyncResult> de <xref:System.IO.Stream.BeginRead%2A>.</span><span class="sxs-lookup"><span data-stu-id="feb6f-347">`EndRead` can be called once on every <xref:System.IAsyncResult> from <xref:System.IO.Stream.BeginRead%2A>.</span></span>  
  
 <span data-ttu-id="feb6f-348">Esse método bloqueia até que a operação de e/s foi concluída.</span><span class="sxs-lookup"><span data-stu-id="feb6f-348">This method blocks until the I/O operation has completed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="feb6f-349">
            <paramref name="asyncResult" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-349">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="feb6f-350">Um identificador para a operação de leitura pendente não está disponível.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-350">A handle to the pending read operation is not available.</span>
          </span>
          <span data-ttu-id="feb6f-351">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-351">-or-</span>
          </span>
          <span data-ttu-id="feb6f-352">A operação pendente não dá suporte à leitura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-352">The pending operation does not support reading.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="feb6f-353">
            <paramref name="asyncResult" /> não é proveniente de um método <see cref="M:System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> no fluxo atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-353">
              <paramref name="asyncResult" /> did not originate from a <see cref="M:System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> method on the current stream.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="feb6f-354">O fluxo está fechado ou ocorreu um erro interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-354">The stream is closed or an internal error has occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndWrite">
      <MemberSignature Language="C#" Value="public virtual void EndWrite (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndWrite(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.EndWrite(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndWrite (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndWrite(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="feb6f-355">Uma referência à solicitação de E/S assíncrona pendente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-355">A reference to the outstanding asynchronous I/O request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="feb6f-356">Encerra uma operação de gravação assíncrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-356">Ends an asynchronous write operation.</span>
          </span>
          <span data-ttu-id="feb6f-357">(Considere o uso de <see cref="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" /> em seu lugar.)</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-357">(Consider using <see cref="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" /> instead.)</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="feb6f-358">No .NET Framework 4, e em versões anteriores, você precisa usar métodos como <xref:System.IO.Stream.BeginWrite%2A> e <xref:System.IO.Stream.EndWrite%2A> para implementar operações de E/S assíncronas.</span><span class="sxs-lookup"><span data-stu-id="feb6f-358">In the .NET Framework 4 and earlier versions, you have to use methods such as <xref:System.IO.Stream.BeginWrite%2A> and <xref:System.IO.Stream.EndWrite%2A> to implement asynchronous I/O operations.</span></span> <span data-ttu-id="feb6f-359">Esses métodos ainda estão disponíveis no [!INCLUDE[net_v45](~/includes/net-v45-md.md)] para dar suporte a código herdado; no entanto, os novos métodos assíncronos, tais como <xref:System.IO.Stream.ReadAsync%2A>, <xref:System.IO.Stream.WriteAsync%2A>, <xref:System.IO.Stream.CopyToAsync%2A>, e <xref:System.IO.Stream.FlushAsync%2A>, ajudam a implementar operações de e/s assíncronas mais facilmente.</span><span class="sxs-lookup"><span data-stu-id="feb6f-359">These methods are still available in the [!INCLUDE[net_v45](~/includes/net-v45-md.md)] to support legacy code; however, the new async methods, such as <xref:System.IO.Stream.ReadAsync%2A>, <xref:System.IO.Stream.WriteAsync%2A>, <xref:System.IO.Stream.CopyToAsync%2A>, and <xref:System.IO.Stream.FlushAsync%2A>, help you implement asynchronous I/O operations more easily.</span></span>  
  
 <span data-ttu-id="feb6f-360">`EndWrite` deve ser chamado apenas uma vez em cada <xref:System.IAsyncResult> de <xref:System.IO.Stream.BeginWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="feb6f-360">`EndWrite` must be called exactly once on every <xref:System.IAsyncResult> from <xref:System.IO.Stream.BeginWrite%2A>.</span></span>  
  
 <span data-ttu-id="feb6f-361">Esse método bloqueia até que a operação de e/s foi concluída.</span><span class="sxs-lookup"><span data-stu-id="feb6f-361">This method blocks until the I/O operation has completed.</span></span> <span data-ttu-id="feb6f-362">Erros que ocorrem durante uma solicitação de gravação assíncrona, como uma falha de disco durante a solicitação de e/s, ocorrem no thread do pool e ficam visíveis após uma chamada para `EndWrite`.</span><span class="sxs-lookup"><span data-stu-id="feb6f-362">Errors that occur during an asynchronous write request, such as a disk failure during the I/O request, occur on the thread pool thread and become visible upon a call to `EndWrite`.</span></span> <span data-ttu-id="feb6f-363">Exceções geradas pelo thread do pool não estarão visíveis ao chamar `EndWrite`.</span><span class="sxs-lookup"><span data-stu-id="feb6f-363">Exceptions thrown by the thread pool thread will not be visible when calling `EndWrite`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="feb6f-364">
            <paramref name="asyncResult" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-364">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="feb6f-365">Não há um identificador disponível para a operação de gravação pendente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-365">A handle to the pending write operation is not available.</span>
          </span>
          <span data-ttu-id="feb6f-366">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-366">-or-</span>
          </span>
          <span data-ttu-id="feb6f-367">A operação pendente não dá suporte à gravação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-367">The pending operation does not support writing.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="feb6f-368">
            <paramref name="asyncResult" /> não é proveniente de um método <see cref="M:System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> no fluxo atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-368">
              <paramref name="asyncResult" /> did not originate from a <see cref="M:System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> method on the current stream.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="feb6f-369">O fluxo está fechado ou ocorreu um erro interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-369">The stream is closed or an internal error has occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public abstract void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.Flush" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Flush();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="feb6f-370">Quando é substituído em uma classe derivada, limpa todos os buffers nesse fluxo e faz com que todos os dados armazenados em buffer sejam gravados no dispositivo subjacente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-370">When overridden in a derived class, clears all buffers for this stream and causes any buffered data to be written to the underlying device.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="feb6f-371">Substituir `Flush` em fluxos que implementam um buffer.</span><span class="sxs-lookup"><span data-stu-id="feb6f-371">Override `Flush` on streams that implement a buffer.</span></span> <span data-ttu-id="feb6f-372">Use esse método para mover todas as informações de um buffer de base para seu destino, limpe o buffer, ou ambos.</span><span class="sxs-lookup"><span data-stu-id="feb6f-372">Use this method to move any information from an underlying buffer to its destination, clear the buffer, or both.</span></span> <span data-ttu-id="feb6f-373">Dependendo do estado do objeto, você talvez precise modificar a posição atual dentro do fluxo (por exemplo, se dá suporte à busca de fluxo subjacente).</span><span class="sxs-lookup"><span data-stu-id="feb6f-373">Depending upon the state of the object, you might have to modify the current position within the stream (for example, if the underlying stream supports seeking).</span></span> <span data-ttu-id="feb6f-374">Para obter mais informações, consulte <xref:System.IO.Stream.CanSeek%2A>.</span><span class="sxs-lookup"><span data-stu-id="feb6f-374">For additional information see <xref:System.IO.Stream.CanSeek%2A>.</span></span>  
  
 <span data-ttu-id="feb6f-375">Ao usar o <xref:System.IO.StreamWriter> ou <xref:System.IO.BinaryWriter> da classe, não liberar a base <xref:System.IO.Stream> objeto.</span><span class="sxs-lookup"><span data-stu-id="feb6f-375">When using the <xref:System.IO.StreamWriter> or <xref:System.IO.BinaryWriter> class, do not flush the base <xref:System.IO.Stream> object.</span></span> <span data-ttu-id="feb6f-376">Em vez disso, use a classe <xref:System.IO.Stream.Flush%2A> ou <xref:System.IO.Stream.Close%2A> método, que garante que os dados são liberados para o fluxo subjacente primeiro e, em seguida, gravados no arquivo.</span><span class="sxs-lookup"><span data-stu-id="feb6f-376">Instead, use the class's <xref:System.IO.Stream.Flush%2A> or <xref:System.IO.Stream.Close%2A> method, which makes sure that the data is flushed to the underlying stream first and then written to the file.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="feb6f-377">Ocorre um erro de E/S.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-377">An I/O error occurs.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="FlushAsync">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="feb6f-378">Limpa de forma assíncrona todos os buffers nesse fluxo e faz com que os dados armazenados em buffer sejam gravados no dispositivo subjacente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-378">Asynchronously clears all buffers for this stream and causes any buffered data to be written to the underlying device.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task FlushAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task FlushAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.FlushAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function FlushAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ FlushAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="feb6f-379">Limpa de forma assíncrona todos os buffers nesse fluxo e faz com que os dados armazenados em buffer sejam gravados no dispositivo subjacente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-379">Asynchronously clears all buffers for this stream and causes any buffered data to be written to the underlying device.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="feb6f-380">Uma tarefa que representa a operação de liberação assíncrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-380">A task that represents the asynchronous flush operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="feb6f-381">Se uma classe derivada, como <xref:System.IO.Compression.DeflateStream> ou <xref:System.IO.Compression.GZipStream>, não liberar o buffer em sua implementação do <xref:System.IO.Stream.Flush%2A> método, o <xref:System.IO.Stream.FlushAsync%2A> método não liberará o buffer.</span><span class="sxs-lookup"><span data-stu-id="feb6f-381">If a derived class, such as <xref:System.IO.Compression.DeflateStream> or <xref:System.IO.Compression.GZipStream>, does not flush the buffer in its implementation of the <xref:System.IO.Stream.Flush%2A> method, the <xref:System.IO.Stream.FlushAsync%2A> method will not flush the buffer.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="feb6f-382">O fluxo foi descartado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-382">The stream has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task FlushAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task FlushAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.FlushAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ FlushAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
          <span data-ttu-id="feb6f-383">O token a se monitorar para solicitações de cancelamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-383">The token to monitor for cancellation requests.</span>
          </span>
          <span data-ttu-id="feb6f-384">O valor padrão é <see cref="P:System.Threading.CancellationToken.None" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-384">The default value is <see cref="P:System.Threading.CancellationToken.None" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="feb6f-385">Limpa todos os buffers nesse fluxo de forma assíncrona, faz com que os dados armazenados em buffer sejam gravados no dispositivo subjacente e monitora as solicitações de cancelamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-385">Asynchronously clears all buffers for this stream, causes any buffered data to be written to the underlying device, and monitors cancellation requests.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="feb6f-386">Uma tarefa que representa a operação de liberação assíncrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-386">A task that represents the asynchronous flush operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="feb6f-387">Se a operação foi cancelada antes da conclusão, a tarefa retornada contém o <xref:System.Threading.Tasks.TaskStatus.Canceled> valor para o <xref:System.Threading.Tasks.Task.Status%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="feb6f-387">If the operation is canceled before it completes, the returned task contains the <xref:System.Threading.Tasks.TaskStatus.Canceled> value for the <xref:System.Threading.Tasks.Task.Status%2A> property.</span></span>  
  
 <span data-ttu-id="feb6f-388">Se uma classe derivada, como <xref:System.IO.Compression.DeflateStream> ou <xref:System.IO.Compression.GZipStream>, não liberar o buffer em sua implementação do <xref:System.IO.Stream.Flush%2A> método, o <xref:System.IO.Stream.FlushAsync%2A> método não liberará o buffer.</span><span class="sxs-lookup"><span data-stu-id="feb6f-388">If a derived class, such as <xref:System.IO.Compression.DeflateStream> or <xref:System.IO.Compression.GZipStream>, does not flush the buffer in its implementation of the <xref:System.IO.Stream.Flush%2A> method, the <xref:System.IO.Stream.FlushAsync%2A> method will not flush the buffer.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="feb6f-389">O fluxo foi descartado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-389">The stream has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public abstract long Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Length" />
      <MemberSignature Language="DocId" Value="P:System.IO.Stream.Length" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Length As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property long Length { long get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="feb6f-390">Quando substituído em uma classe derivada, obtém o tamanho em bytes do fluxo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-390">When overridden in a derived class, gets the length in bytes of the stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="feb6f-391">Um valor longo que representa o tamanho do fluxo em bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-391">A long value representing the length of the stream in bytes.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="feb6f-392">Uma classe derivada de <see langword="Stream" /> não dá suporte à busca.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-392">A class derived from <see langword="Stream" /> does not support seeking.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="feb6f-393">Foram chamados métodos depois que o fluxo foi fechado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-393">Methods were called after the stream was closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Null">
      <MemberSignature Language="C#" Value="public static readonly System.IO.Stream Null;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.IO.Stream Null" />
      <MemberSignature Language="DocId" Value="F:System.IO.Stream.Null" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Null As Stream " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::IO::Stream ^ Null;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="feb6f-394">Um <see langword="Stream" /> sem repositório de backup.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-394">A <see langword="Stream" /> with no backing store.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="feb6f-395">Use `Null` para redirecionar a saída para um fluxo que não consumirá quaisquer recursos do sistema operacional.</span><span class="sxs-lookup"><span data-stu-id="feb6f-395">Use `Null` to redirect output to a stream that will not consume any operating system resources.</span></span> <span data-ttu-id="feb6f-396">Quando os métodos de `Stream` que fornecem a gravação são chamados em `Null`, simplesmente retorna a chamada e nenhum dado seja gravado.</span><span class="sxs-lookup"><span data-stu-id="feb6f-396">When the methods of `Stream` that provide writing are invoked on `Null`, the call simply returns, and no data is written.</span></span> <span data-ttu-id="feb6f-397">`Null` também implementa um `Read` método que retorna zero sem ler dados.</span><span class="sxs-lookup"><span data-stu-id="feb6f-397">`Null` also implements a `Read` method that returns zero without reading data.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ObjectInvariant">
      <MemberSignature Language="C#" Value="protected virtual void ObjectInvariant ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ObjectInvariant() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.ObjectInvariant" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ObjectInvariant ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ObjectInvariant();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Do not call or override this method.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="feb6f-398">Oferece suporte a um <see cref="T:System.Diagnostics.Contracts.Contract" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-398">Provides support for a <see cref="T:System.Diagnostics.Contracts.Contract" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public abstract long Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Position" />
      <MemberSignature Language="DocId" Value="P:System.IO.Stream.Position" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Property Position As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property long Position { long get(); void set(long value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="feb6f-399">Quando substituído em uma classe derivada, obtém ou define a posição dentro do fluxo atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-399">When overridden in a derived class, gets or sets the position within the current stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="feb6f-400">A posição atual no fluxo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-400">The current position within the stream.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="feb6f-401">O fluxo deve oferecer suporte a busca obter ou definir a posição.</span><span class="sxs-lookup"><span data-stu-id="feb6f-401">The stream must support seeking to get or set the position.</span></span> <span data-ttu-id="feb6f-402">Use o <xref:System.IO.Stream.CanSeek%2A> propriedade para determinar se o fluxo oferece suporte à busca.</span><span class="sxs-lookup"><span data-stu-id="feb6f-402">Use the <xref:System.IO.Stream.CanSeek%2A> property to determine whether the stream supports seeking.</span></span>  
  
 <span data-ttu-id="feb6f-403">Há suporte para busca em qualquer local além do comprimento do fluxo.</span><span class="sxs-lookup"><span data-stu-id="feb6f-403">Seeking to any location beyond the length of the stream is supported.</span></span>  
  
 <span data-ttu-id="feb6f-404">O `Position` propriedade não manter o controle do número de bytes do fluxo que tiverem sido consumidos, ignorado, ou ambos.</span><span class="sxs-lookup"><span data-stu-id="feb6f-404">The `Position` property does not keep track of the number of bytes from the stream that have been consumed, skipped, or both.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="feb6f-405">Ocorre um erro de E/S.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-405">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="feb6f-406">O fluxo não dá suporte à busca.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-406">The stream does not support seeking.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="feb6f-407">Foram chamados métodos depois que o fluxo foi fechado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-407">Methods were called after the stream was closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public virtual int Read (Span&lt;byte&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Read(valuetype System.Span`1&lt;unsigned int8&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.Read(System.Span{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Read (buffer As Span(Of Byte)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Read(Span&lt;System::Byte&gt; buffer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Span&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public abstract int Read (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Read([out] unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Read (buffer As Byte(), offset As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int Read(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="feb6f-408">Uma matriz de bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-408">An array of bytes.</span>
          </span>
          <span data-ttu-id="feb6f-409">Quando esse método é retornado, o buffer conterá a matriz de bytes especificada com os valores entre <c>deslocamento</c> e (<c>deslocamento</c> + <c>contagem</c> - 1) substituídos pelos bytes lidos da origem atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-409">When this method returns, the buffer contains the specified byte array with the values between <c>offset</c> and (<c>offset</c> + <c>count</c> - 1) replaced by the bytes read from the current source.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="feb6f-410">O deslocamento de bytes baseado em zero no <c>buffer</c> em que se começa a armazenar os dados lidos do fluxo atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-410">The zero-based byte offset in <c>buffer</c> at which to begin storing the data read from the current stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="feb6f-411">O número máximo de bytes a serem lidos no fluxo atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-411">The maximum number of bytes to be read from the current stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="feb6f-412">Quando for substituído em uma classe derivada, lê uma sequência de bytes do fluxo atual e avança a posição dentro do fluxo até o número de bytes lidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-412">When overridden in a derived class, reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="feb6f-413">O número total de bytes lidos do buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-413">The total number of bytes read into the buffer.</span>
          </span>
          <span data-ttu-id="feb6f-414">Isso poderá ser menor que o número de bytes solicitado se esses muitos bytes não estiverem disponíveis no momento, ou zero (0) se o final do fluxo tiver sido atingido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-414">This can be less than the number of bytes requested if that many bytes are not currently available, or zero (0) if the end of the stream has been reached.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="feb6f-415">Use o <xref:System.IO.Stream.CanRead%2A> propriedade para determinar se a instância atual oferece suporte à leitura.</span><span class="sxs-lookup"><span data-stu-id="feb6f-415">Use the <xref:System.IO.Stream.CanRead%2A> property to determine whether the current instance supports reading.</span></span> <span data-ttu-id="feb6f-416">Use o <xref:System.IO.Stream.ReadAsync%2A> método de leitura assíncrona no fluxo atual.</span><span class="sxs-lookup"><span data-stu-id="feb6f-416">Use the <xref:System.IO.Stream.ReadAsync%2A> method to read asynchronously from the current stream.</span></span>  
  
 <span data-ttu-id="feb6f-417">As implementações desse método ler um máximo de `count` bytes do atual fluxo e armazená-los em `buffer` começando no `offset`.</span><span class="sxs-lookup"><span data-stu-id="feb6f-417">Implementations of this method read a maximum of `count` bytes from the current stream and store them in `buffer` beginning at `offset`.</span></span> <span data-ttu-id="feb6f-418">A posição atual dentro do fluxo for avançada pelo número de bytes lido; No entanto, se ocorrer uma exceção, a posição atual dentro do fluxo permanece inalterada.</span><span class="sxs-lookup"><span data-stu-id="feb6f-418">The current position within the stream is advanced by the number of bytes read; however, if an exception occurs, the current position within the stream remains unchanged.</span></span> <span data-ttu-id="feb6f-419">Implementações de retornam o número de bytes lidos.</span><span class="sxs-lookup"><span data-stu-id="feb6f-419">Implementations return the number of bytes read.</span></span> <span data-ttu-id="feb6f-420">A implementação será bloqueado até que pelo menos um byte de dados podem ser lidos, que não há dados disponíveis.</span><span class="sxs-lookup"><span data-stu-id="feb6f-420">The implementation will block until at least one byte of data can be read, in the event that no data is available.</span></span> <span data-ttu-id="feb6f-421"><xref:System.IO.Stream.Read%2A> Retorna 0 somente quando não houver nenhuma mais dados no fluxo e não mais é esperado (como um soquete fechado ou o final do arquivo).</span><span class="sxs-lookup"><span data-stu-id="feb6f-421"><xref:System.IO.Stream.Read%2A> returns 0 only when there is no more data in the stream and no more is expected (such as a closed socket or end of file).</span></span> <span data-ttu-id="feb6f-422">Uma implementação está livre para retornar menos bytes que solicitado, mesmo que não foi atingido o fim do fluxo.</span><span class="sxs-lookup"><span data-stu-id="feb6f-422">An implementation is free to return fewer bytes than requested even if the end of the stream has not been reached.</span></span>  
  
 <span data-ttu-id="feb6f-423">Use <xref:System.IO.BinaryReader> para ler tipos de dados primitivos.</span><span class="sxs-lookup"><span data-stu-id="feb6f-423">Use <xref:System.IO.BinaryReader> for reading primitive data types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="feb6f-424">O exemplo a seguir mostra como usar <xref:System.IO.Stream.Read%2A> para ler um bloco de dados.</span><span class="sxs-lookup"><span data-stu-id="feb6f-424">The following example shows how to use <xref:System.IO.Stream.Read%2A> to read a block of data.</span></span>  
  
 [!code-cpp[Classic Stream.Read Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Stream.Read Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Stream.Read Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Stream.Read Example/CS/source.cs#1)]
 [!code-vb[Classic Stream.Read Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Stream.Read Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="feb6f-425">A soma de <paramref name="offset" /> e <paramref name="count" /> é maior que o tamanho do buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-425">The sum of <paramref name="offset" /> and <paramref name="count" /> is larger than the buffer length.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="feb6f-426">
            <paramref name="buffer" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-426">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="feb6f-427">
            <paramref name="offset" /> ou <paramref name="count" /> é negativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-427">
              <paramref name="offset" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="feb6f-428">Ocorre um erro de E/S.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-428">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="feb6f-429">Não há suporte para leitura no fluxo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-429">The stream does not support reading.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="feb6f-430">Foram chamados métodos depois que o fluxo foi fechado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-430">Methods were called after the stream was closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadAsync">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="feb6f-431">Lê uma sequência de bytes do fluxo atual de forma assíncrona e avança a posição no fluxo até o número de bytes lidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-431">Asynchronously reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.ValueTask&lt;int&gt; ReadAsync (Memory&lt;byte&gt; buffer, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;int32&gt; ReadAsync(valuetype System.Memory`1&lt;unsigned int8&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.ReadAsync(System.Memory{System.Byte},System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Memory&lt;System.Byte&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;int&gt; ReadAsync (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadAsync(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadAsync (buffer As Byte(), offset As Integer, count As Integer) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;int&gt; ^ ReadAsync(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="feb6f-432">O buffer no qual os dados serão gravados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-432">The buffer to write the data into.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="feb6f-433">O deslocamento de bytes no <c>buffer</c> em que será iniciada a gravação de dados do fluxo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-433">The byte offset in <c>buffer</c> at which to begin writing data from the stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="feb6f-434">O número máximo de bytes a serem lidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-434">The maximum number of bytes to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="feb6f-435">Lê uma sequência de bytes do fluxo atual de forma assíncrona e avança a posição no fluxo até o número de bytes lidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-435">Asynchronously reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="feb6f-436">Uma tarefa que representa a operação de leitura assíncrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-436">A task that represents the asynchronous read operation.</span>
          </span>
          <span data-ttu-id="feb6f-437">O valor do parâmetro <paramref name="TResult" /> contém o número total de bytes lidos no buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-437">The value of the <paramref name="TResult" /> parameter contains the total number of bytes read into the buffer.</span>
          </span>
          <span data-ttu-id="feb6f-438">O valor do resultado poderá ser menor que o número de bytes solicitados se o número de bytes disponíveis no momento for menor que o número solicitado ou poderá ser 0 (zero) se o final do fluxo foi atingido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-438">The result value can be less than the number of bytes requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero) if the end of the stream has been reached.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="feb6f-439">O <xref:System.IO.Stream.ReadAsync%2A> método permite que você execute operações de e/s de uso intensivo de recursos sem bloquear o thread principal.</span><span class="sxs-lookup"><span data-stu-id="feb6f-439">The <xref:System.IO.Stream.ReadAsync%2A> method enables you to perform resource-intensive I/O operations without blocking the main thread.</span></span> <span data-ttu-id="feb6f-440">Essa consideração sobre o desempenho é particularmente importante em um aplicativo [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] ou [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] em que uma operação demorada de fluxo pode bloquear o thread de interface do usuário e fazer seu aplicativo parecer como se não estivesse funcionando.</span><span class="sxs-lookup"><span data-stu-id="feb6f-440">This performance consideration is particularly important in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app or [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] app where a time-consuming stream operation can block the UI thread and make your app appear as if it is not working.</span></span> <span data-ttu-id="feb6f-441">Os métodos assíncronos são usados em conjunto com o `async` e `await` palavras-chave no Visual Basic e c#.</span><span class="sxs-lookup"><span data-stu-id="feb6f-441">The async methods are used in conjunction with the `async` and `await` keywords in Visual Basic and C#.</span></span>  
  
 <span data-ttu-id="feb6f-442">Use o <xref:System.IO.Stream.CanRead%2A> propriedade para determinar se a instância atual oferece suporte à leitura.</span><span class="sxs-lookup"><span data-stu-id="feb6f-442">Use the <xref:System.IO.Stream.CanRead%2A> property to determine whether the current instance supports reading.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="feb6f-443">O exemplo a seguir mostra como ler de um arquivo de forma assíncrona.</span><span class="sxs-lookup"><span data-stu-id="feb6f-443">The following example shows how to read from a file asynchronously.</span></span> <span data-ttu-id="feb6f-444">O exemplo usa o <xref:System.IO.FileStream> classe que deriva de <xref:System.IO.Stream> classe.</span><span class="sxs-lookup"><span data-stu-id="feb6f-444">The example uses the <xref:System.IO.FileStream> class, which derives from the <xref:System.IO.Stream> class.</span></span>  
  
 [!code-csharp[Asynchronous_File_IO_async#4](~/samples/snippets/csharp/VS_Snippets_CLR/Asynchronous_File_IO_async/cs/example4.cs#4)]
 [!code-vb[Asynchronous_File_IO_async#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Asynchronous_File_IO_async/vb/example4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="feb6f-445">
            <paramref name="buffer" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-445">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="feb6f-446">
            <paramref name="offset" /> ou <paramref name="count" /> é negativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-446">
              <paramref name="offset" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="feb6f-447">A soma de <paramref name="offset" /> e <paramref name="count" /> é maior que o tamanho do buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-447">The sum of <paramref name="offset" /> and <paramref name="count" /> is larger than the buffer length.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="feb6f-448">Não há suporte para leitura no fluxo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-448">The stream does not support reading.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="feb6f-449">O fluxo foi descartado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-449">The stream has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="feb6f-450">O fluxo está sendo usado no momento por uma operação de leitura anterior.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-450">The stream is currently in use by a previous read operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;int&gt; ReadAsync (byte[] buffer, int offset, int count, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadAsync(unsigned int8[] buffer, int32 offset, int32 count, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;int&gt; ^ ReadAsync(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="feb6f-451">O buffer no qual os dados serão gravados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-451">The buffer to write the data into.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="feb6f-452">O deslocamento de bytes no <c>buffer</c> em que será iniciada a gravação de dados do fluxo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-452">The byte offset in <c>buffer</c> at which to begin writing data from the stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="feb6f-453">O número máximo de bytes a serem lidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-453">The maximum number of bytes to read.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="feb6f-454">O token a se monitorar para solicitações de cancelamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-454">The token to monitor for cancellation requests.</span>
          </span>
          <span data-ttu-id="feb6f-455">O valor padrão é <see cref="P:System.Threading.CancellationToken.None" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-455">The default value is <see cref="P:System.Threading.CancellationToken.None" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="feb6f-456">Lê de forma assíncrona uma sequência de bytes do fluxo atual, avança a posição no fluxo até o número de bytes lidos e monitora as solicitações de cancelamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-456">Asynchronously reads a sequence of bytes from the current stream, advances the position within the stream by the number of bytes read, and monitors cancellation requests.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="feb6f-457">Uma tarefa que representa a operação de leitura assíncrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-457">A task that represents the asynchronous read operation.</span>
          </span>
          <span data-ttu-id="feb6f-458">O valor do parâmetro <paramref name="TResult" /> contém o número total de bytes lidos no buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-458">The value of the <paramref name="TResult" /> parameter contains the total number of bytes read into the buffer.</span>
          </span>
          <span data-ttu-id="feb6f-459">O valor do resultado poderá ser menor que o número de bytes solicitados se o número de bytes disponíveis no momento for menor que o número solicitado ou poderá ser 0 (zero) se o final do fluxo foi atingido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-459">The result value can be less than the number of bytes requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero) if the end of the stream has been reached.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="feb6f-460">O <xref:System.IO.Stream.ReadAsync%2A> método permite que você execute operações de e/s de uso intensivo de recursos sem bloquear o thread principal.</span><span class="sxs-lookup"><span data-stu-id="feb6f-460">The <xref:System.IO.Stream.ReadAsync%2A> method enables you to perform resource-intensive I/O operations without blocking the main thread.</span></span> <span data-ttu-id="feb6f-461">Essa consideração sobre o desempenho é particularmente importante em um aplicativo [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] ou [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] em que uma operação demorada de fluxo pode bloquear o thread de interface do usuário e fazer seu aplicativo parecer como se não estivesse funcionando.</span><span class="sxs-lookup"><span data-stu-id="feb6f-461">This performance consideration is particularly important in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app or [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] app where a time-consuming stream operation can block the UI thread and make your app appear as if it is not working.</span></span> <span data-ttu-id="feb6f-462">Os métodos assíncronos são usados em conjunto com o `async` e `await` palavras-chave no Visual Basic e c#.</span><span class="sxs-lookup"><span data-stu-id="feb6f-462">The async methods are used in conjunction with the `async` and `await` keywords in Visual Basic and C#.</span></span>  
  
 <span data-ttu-id="feb6f-463">Use o <xref:System.IO.Stream.CanRead%2A> propriedade para determinar se a instância atual oferece suporte à leitura.</span><span class="sxs-lookup"><span data-stu-id="feb6f-463">Use the <xref:System.IO.Stream.CanRead%2A> property to determine whether the current instance supports reading.</span></span>  
  
 <span data-ttu-id="feb6f-464">Se a operação foi cancelada antes da conclusão, a tarefa retornada contém o <xref:System.Threading.Tasks.TaskStatus.Canceled> valor para o <xref:System.Threading.Tasks.Task.Status%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="feb6f-464">If the operation is canceled before it completes, the returned task contains the <xref:System.Threading.Tasks.TaskStatus.Canceled> value for the <xref:System.Threading.Tasks.Task.Status%2A> property.</span></span>  
  
 <span data-ttu-id="feb6f-465">Para obter um exemplo, consulte o <xref:System.IO.Stream.ReadAsync%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29> de sobrecarga.</span><span class="sxs-lookup"><span data-stu-id="feb6f-465">For an example, see the <xref:System.IO.Stream.ReadAsync%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29> overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="feb6f-466">
            <paramref name="buffer" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-466">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="feb6f-467">
            <paramref name="offset" /> ou <paramref name="count" /> é negativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-467">
              <paramref name="offset" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="feb6f-468">A soma de <paramref name="offset" /> e <paramref name="count" /> é maior que o tamanho do buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-468">The sum of <paramref name="offset" /> and <paramref name="count" /> is larger than the buffer length.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="feb6f-469">Não há suporte para leitura no fluxo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-469">The stream does not support reading.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="feb6f-470">O fluxo foi descartado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-470">The stream has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="feb6f-471">O fluxo está sendo usado no momento por uma operação de leitura anterior.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-471">The stream is currently in use by a previous read operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadByte">
      <MemberSignature Language="C#" Value="public virtual int ReadByte ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ReadByte() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.ReadByte" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadByte () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int ReadByte();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="feb6f-472">Lê um byte do fluxo e avança a posição no fluxo em um byte ou retorna -1 caso esteja no final do fluxo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-472">Reads a byte from the stream and advances the position within the stream by one byte, or returns -1 if at the end of the stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="feb6f-473">O byte sem sinal convertido em um <see langword="Int32" /> ou -1 se o final do fluxo for atingido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-473">The unsigned byte cast to an <see langword="Int32" />, or -1 if at the end of the stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="feb6f-474">Use o <xref:System.IO.Stream.CanRead%2A> propriedade para determinar se a instância atual oferece suporte à leitura.</span><span class="sxs-lookup"><span data-stu-id="feb6f-474">Use the <xref:System.IO.Stream.CanRead%2A> property to determine whether the current instance supports reading.</span></span>  
  
 <span data-ttu-id="feb6f-475">Tentativas de manipular o fluxo após o fluxo foi fechado podem gerar um <xref:System.ObjectDisposedException>.</span><span class="sxs-lookup"><span data-stu-id="feb6f-475">Attempts to manipulate the stream after the stream has been closed could throw an <xref:System.ObjectDisposedException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="feb6f-476">Não há suporte para leitura no fluxo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-476">The stream does not support reading.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="feb6f-477">Foram chamados métodos depois que o fluxo foi fechado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-477">Methods were called after the stream was closed.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="feb6f-478">A implementação padrão em <see langword="Stream" /> cria uma nova matriz de byte único e, em seguida, chama <see cref="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="feb6f-478">The default implementation on <see langword="Stream" /> creates a new single-byte array and then calls <see cref="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)" />.</span>
            </span>
            <span data-ttu-id="feb6f-479">Enquanto estiver formalmente correto, é ineficiente.</span>
            <span class="sxs-lookup">
              <span data-stu-id="feb6f-479">While this is formally correct, it is inefficient.</span>
            </span>
            <span data-ttu-id="feb6f-480">Qualquer fluxo com um buffer interno deve substituir este método e fornecer uma versão muito mais eficiente do que lê o buffer diretamente, evitando a alocação de matriz extra em cada chamada.</span>
            <span class="sxs-lookup">
              <span data-stu-id="feb6f-480">Any stream with an internal buffer should override this method and provide a much more efficient version that reads the buffer directly, avoiding the extra array allocation on every call.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ReadTimeout">
      <MemberSignature Language="C#" Value="public virtual int ReadTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReadTimeout" />
      <MemberSignature Language="DocId" Value="P:System.IO.Stream.ReadTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ReadTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ReadTimeout { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="feb6f-481">Obtém ou define um valor, em milissegundos, que determina quanto tempo o fluxo tentará realizar a leitura antes do tempo limite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-481">Gets or sets a value, in miliseconds, that determines how long the stream will attempt to read before timing out.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="feb6f-482">Um valor, em milissegundos, que determina quanto tempo o fluxo tentará realizar a leitura antes do tempo limite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-482">A value, in miliseconds, that determines how long the stream will attempt to read before timing out.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="feb6f-483">O método <see cref="P:System.IO.Stream.ReadTimeout" /> sempre gera um <see cref="T:System.InvalidOperationException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-483">The <see cref="P:System.IO.Stream.ReadTimeout" /> method always throws an <see cref="T:System.InvalidOperationException" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="feb6f-484">O <see cref="P:System.IO.Stream.ReadTimeout" /> propriedade deve ser substituída para fornecer o comportamento apropriado para o fluxo.</span>
            <span class="sxs-lookup">
              <span data-stu-id="feb6f-484">The <see cref="P:System.IO.Stream.ReadTimeout" /> property should be overridden to provide the appropriate behavior for the stream.</span>
            </span>
            <span data-ttu-id="feb6f-485">Se o fluxo não oferece suporte para o tempo limite, essa propriedade deve gerar um <see cref="T:System.InvalidOperationException" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="feb6f-485">If the stream does not support timing out, this property should raise an <see cref="T:System.InvalidOperationException" />.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public abstract long Seek (long offset, System.IO.SeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 Seek(int64 offset, valuetype System.IO.SeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Seek (offset As Long, origin As SeekOrigin) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract long Seek(long offset, System::IO::SeekOrigin origin);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="origin" Type="System.IO.SeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset">
          <span data-ttu-id="feb6f-486">Um deslocamento de bytes relativo ao parâmetro <c>origem</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-486">A byte offset relative to the <c>origin</c> parameter.</span>
          </span>
        </param>
        <param name="origin">
          <span data-ttu-id="feb6f-487">Um valor do tipo <see cref="T:System.IO.SeekOrigin" /> indicando o ponto de referência usado para obter a nova posição.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-487">A value of type <see cref="T:System.IO.SeekOrigin" /> indicating the reference point used to obtain the new position.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="feb6f-488">Quando substituído em uma classe derivada, define a posição dentro do fluxo atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-488">When overridden in a derived class, sets the position within the current stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="feb6f-489">A nova posição dentro do fluxo atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-489">The new position within the current stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="feb6f-490">Use o <xref:System.IO.Stream.CanSeek%2A> propriedade para determinar se a instância atual oferece suporte à busca.</span><span class="sxs-lookup"><span data-stu-id="feb6f-490">Use the <xref:System.IO.Stream.CanSeek%2A> property to determine whether the current instance supports seeking.</span></span>  
  
 <span data-ttu-id="feb6f-491">Se `offset` é negativo, a nova posição deve preceder a posição especificada pelo `origin` pelo número de bytes especificado por `offset`.</span><span class="sxs-lookup"><span data-stu-id="feb6f-491">If `offset` is negative, the new position is required to precede the position specified by `origin` by the number of bytes specified by `offset`.</span></span> <span data-ttu-id="feb6f-492">Se `offset` é zero (0), a nova posição é necessária para ser a posição especificada pelo `origin`.</span><span class="sxs-lookup"><span data-stu-id="feb6f-492">If `offset` is zero (0), the new position is required to be the position specified by `origin`.</span></span> <span data-ttu-id="feb6f-493">Se `offset` for positivo, a nova posição é necessária para acompanhar a posição especificada pelo `origin` pelo número de bytes especificado por `offset`.</span><span class="sxs-lookup"><span data-stu-id="feb6f-493">If `offset` is positive, the new position is required to follow the position specified by `origin` by the number of bytes specified by `offset`.</span></span>  
  
 <span data-ttu-id="feb6f-494">Classes derivadas de `Stream` suporte busca deve substituir esse método para fornecer a funcionalidade descrita acima.</span><span class="sxs-lookup"><span data-stu-id="feb6f-494">Classes derived from `Stream` that support seeking must override this method to provide the functionality described above.</span></span>  
  
 <span data-ttu-id="feb6f-495">Há suporte para busca em qualquer local além do comprimento do fluxo.</span><span class="sxs-lookup"><span data-stu-id="feb6f-495">Seeking to any location beyond the length of the stream is supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="feb6f-496">Ocorre um erro de E/S.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-496">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="feb6f-497">O fluxo não dá suporte à busca, como se o fluxo fosse construído por meio de uma saída do console ou pipe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-497">The stream does not support seeking, such as if the stream is constructed from a pipe or console output.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="feb6f-498">Foram chamados métodos depois que o fluxo foi fechado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-498">Methods were called after the stream was closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetLength">
      <MemberSignature Language="C#" Value="public abstract void SetLength (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetLength(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.SetLength(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SetLength (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SetLength(long value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="feb6f-499">O tamanho desejado do fluxo atual em bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-499">The desired length of the current stream in bytes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="feb6f-500">Quando substituído em uma classe derivada, define o tamanho do fluxo atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-500">When overridden in a derived class, sets the length of the current stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="feb6f-501">Se o valor especificado é menor que o tamanho atual do fluxo, o fluxo é truncado.</span><span class="sxs-lookup"><span data-stu-id="feb6f-501">If the specified value is less than the current length of the stream, the stream is truncated.</span></span> <span data-ttu-id="feb6f-502">Se o valor especificado é maior do que o tamanho atual do fluxo, o fluxo é expandido.</span><span class="sxs-lookup"><span data-stu-id="feb6f-502">If the specified value is larger than the current length of the stream, the stream is expanded.</span></span> <span data-ttu-id="feb6f-503">Se o fluxo é expandido, o conteúdo do fluxo entre o antigo e o novo tamanho não está definido.</span><span class="sxs-lookup"><span data-stu-id="feb6f-503">If the stream is expanded, the contents of the stream between the old and the new length are not defined.</span></span>  
  
 <span data-ttu-id="feb6f-504">Um fluxo deve dão suporte a gravação e busca de `SetLength` para trabalhar.</span><span class="sxs-lookup"><span data-stu-id="feb6f-504">A stream must support both writing and seeking for `SetLength` to work.</span></span>  
  
 <span data-ttu-id="feb6f-505">Use o <xref:System.IO.Stream.CanWrite%2A> propriedade para determinar se a instância atual oferece suporte à gravação e o <xref:System.IO.Stream.CanSeek%2A> propriedade para determinar se a busca é suportada.</span><span class="sxs-lookup"><span data-stu-id="feb6f-505">Use the <xref:System.IO.Stream.CanWrite%2A> property to determine whether the current instance supports writing, and the <xref:System.IO.Stream.CanSeek%2A> property to determine whether seeking is supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="feb6f-506">Ocorre um erro de E/S.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-506">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="feb6f-507">O fluxo não dá suporte à gravação nem à busca, como se o fluxo fosse construído por meio de uma saída do console ou pipe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-507">The stream does not support both writing and seeking, such as if the stream is constructed from a pipe or console output.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="feb6f-508">Foram chamados métodos depois que o fluxo foi fechado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-508">Methods were called after the stream was closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Synchronized">
      <MemberSignature Language="C#" Value="public static System.IO.Stream Synchronized (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream Synchronized(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.Synchronized(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Stream ^ Synchronized(System::IO::Stream ^ stream);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="feb6f-509">O objeto <see cref="T:System.IO.Stream" /> a ser sincronizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-509">The <see cref="T:System.IO.Stream" /> object to synchronize.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="feb6f-510">Cria um wrapper thread-safe (sincronizado) em torno do objeto <see cref="T:System.IO.Stream" /> especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-510">Creates a thread-safe (synchronized) wrapper around the specified <see cref="T:System.IO.Stream" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="feb6f-511">Um objeto <see cref="T:System.IO.Stream" /> thread-safe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-511">A thread-safe <see cref="T:System.IO.Stream" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="feb6f-512">Esse método retorna uma classe que encapsula especificado <xref:System.IO.Stream> do objeto e restringe o acesso a ele de vários threads.</span><span class="sxs-lookup"><span data-stu-id="feb6f-512">This method returns a class that wraps the specified <xref:System.IO.Stream> object and restricts access to it from multiple threads.</span></span> <span data-ttu-id="feb6f-513">Todos os acessos para o <xref:System.IO.Stream> objeto será thread-safe.</span><span class="sxs-lookup"><span data-stu-id="feb6f-513">All access to the <xref:System.IO.Stream> object will be thread safe.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="feb6f-514">
            <paramref name="stream" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-514">
              <paramref name="stream" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (ReadOnlySpan&lt;byte&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.Write(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (buffer As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(ReadOnlySpan&lt;System::Byte&gt; buffer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public abstract void Write (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Write (buffer As Byte(), offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Write(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="feb6f-515">Uma matriz de bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-515">An array of bytes.</span>
          </span>
          <span data-ttu-id="feb6f-516">Esse método copia os bytes de <c>contagem</c> do <c>buffer</c> para o fluxo atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-516">This method copies <c>count</c> bytes from <c>buffer</c> to the current stream.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="feb6f-517">O deslocamento de bytes baseado em zero no <c>buffer</c> no qual será iniciada a cópia de bytes para o fluxo atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-517">The zero-based byte offset in <c>buffer</c> at which to begin copying bytes to the current stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="feb6f-518">O número de bytes a serem gravados no fluxo atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-518">The number of bytes to be written to the current stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="feb6f-519">Quando for substituído em uma classe derivada, grava uma sequência de bytes no fluxo atual e avança a posição atual dentro desse fluxo até o número de bytes gravados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-519">When overridden in a derived class, writes a sequence of bytes to the current stream and advances the current position within this stream by the number of bytes written.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="feb6f-520">Use o <xref:System.IO.Stream.CanWrite%2A> propriedade para determinar se a instância atual oferece suporte à gravação.</span><span class="sxs-lookup"><span data-stu-id="feb6f-520">Use the <xref:System.IO.Stream.CanWrite%2A> property to determine whether the current instance supports writing.</span></span> <span data-ttu-id="feb6f-521">Use o <xref:System.IO.Stream.WriteAsync%2A> método para gravar de forma assíncrona para o fluxo atual.</span><span class="sxs-lookup"><span data-stu-id="feb6f-521">Use the <xref:System.IO.Stream.WriteAsync%2A> method to write asynchronously to the current stream.</span></span>  
  
 <span data-ttu-id="feb6f-522">Se a operação de gravação for bem-sucedida, a posição dentro do fluxo avança pelo número de bytes gravados.</span><span class="sxs-lookup"><span data-stu-id="feb6f-522">If the write operation is successful, the position within the stream advances by the number of bytes written.</span></span> <span data-ttu-id="feb6f-523">Se ocorrer uma exceção, a posição dentro do fluxo permanecerá inalterada.</span><span class="sxs-lookup"><span data-stu-id="feb6f-523">If an exception occurs, the position within the stream remains unchanged.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="feb6f-524">A soma de <paramref name="offset" /> e <paramref name="count" /> é maior que o comprimento do buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-524">The sum of <paramref name="offset" /> and <paramref name="count" /> is greater than the buffer length.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="feb6f-525">
            <paramref name="buffer" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-525">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="feb6f-526">
            <paramref name="offset" /> ou <paramref name="count" /> é negativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-526">
              <paramref name="offset" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="feb6f-527">Ocorreu um erro de E/S, como não ser possível encontrar o arquivo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-527">An I/O error occured, such as the specified file cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="feb6f-528">Não há suporte para gravação no fluxo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-528">The stream does not support writing.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="feb6f-529">
            <see cref="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)" /> foi chamado depois que o fluxo foi fechado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-529">
              <see cref="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)" /> was called after the stream was closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteAsync">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="feb6f-530">Grava assincronamente uma sequência de bytes no fluxo atual e avança a posição atual dentro desse fluxo no número de bytes gravados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-530">Asynchronously writes a sequence of bytes to the current stream and advances the current position within this stream by the number of bytes written.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.ValueTask WriteAsync (ReadOnlyMemory&lt;byte&gt; buffer, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask WriteAsync(valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.WriteAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlyMemory&lt;System.Byte&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task WriteAsync (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task WriteAsync(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteAsync (buffer As Byte(), offset As Integer, count As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ WriteAsync(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="feb6f-531">O buffer do qual os dados serão gravados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-531">The buffer to write data from.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="feb6f-532">O deslocamento de bytes baseado em zero no <c>buffer</c> do qual será iniciada a cópia de bytes para o fluxo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-532">The zero-based byte offset in <c>buffer</c> from which to begin copying bytes to the stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="feb6f-533">O número máximo de bytes a serem gravados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-533">The maximum number of bytes to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="feb6f-534">Grava assincronamente uma sequência de bytes no fluxo atual e avança a posição atual dentro desse fluxo no número de bytes gravados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-534">Asynchronously writes a sequence of bytes to the current stream and advances the current position within this stream by the number of bytes written.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="feb6f-535">Uma tarefa que representa a operação de gravação assíncrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-535">A task that represents the asynchronous write operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="feb6f-536">O <xref:System.IO.Stream.WriteAsync%2A> método permite que você execute operações de e/s de uso intensivo de recursos sem bloquear o thread principal.</span><span class="sxs-lookup"><span data-stu-id="feb6f-536">The <xref:System.IO.Stream.WriteAsync%2A> method enables you to perform resource-intensive I/O operations without blocking the main thread.</span></span> <span data-ttu-id="feb6f-537">Essa consideração sobre o desempenho é particularmente importante em um aplicativo [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] ou [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] em que uma operação demorada de fluxo pode bloquear o thread de interface do usuário e fazer seu aplicativo parecer como se não estivesse funcionando.</span><span class="sxs-lookup"><span data-stu-id="feb6f-537">This performance consideration is particularly important in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app or [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] app where a time-consuming stream operation can block the UI thread and make your app appear as if it is not working.</span></span> <span data-ttu-id="feb6f-538">Os métodos assíncronos são usados em conjunto com o `async` e `await` palavras-chave no Visual Basic e c#.</span><span class="sxs-lookup"><span data-stu-id="feb6f-538">The async methods are used in conjunction with the `async` and `await` keywords in Visual Basic and C#.</span></span>  
  
 <span data-ttu-id="feb6f-539">Use o <xref:System.IO.Stream.CanWrite%2A> propriedade para determinar se a instância atual oferece suporte à gravação.</span><span class="sxs-lookup"><span data-stu-id="feb6f-539">Use the <xref:System.IO.Stream.CanWrite%2A> property to determine whether the current instance supports writing.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="feb6f-540">O exemplo a seguir mostra como gravar em um arquivo de forma assíncrona.</span><span class="sxs-lookup"><span data-stu-id="feb6f-540">The following example shows how to write asynchronously to a file.</span></span> <span data-ttu-id="feb6f-541">O exemplo usa o <xref:System.IO.FileStream> classe que deriva de <xref:System.IO.Stream> classe.</span><span class="sxs-lookup"><span data-stu-id="feb6f-541">The example uses the <xref:System.IO.FileStream> class, which derives from the <xref:System.IO.Stream> class.</span></span>  
  
 [!code-csharp[Asynchronous_File_IO_async#3](~/samples/snippets/csharp/VS_Snippets_CLR/Asynchronous_File_IO_async/cs/example3.cs#3)]
 [!code-vb[Asynchronous_File_IO_async#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/Asynchronous_File_IO_async/vb/example3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="feb6f-542">
            <paramref name="buffer" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-542">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="feb6f-543">
            <paramref name="offset" /> ou <paramref name="count" /> é negativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-543">
              <paramref name="offset" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="feb6f-544">A soma de <paramref name="offset" /> e <paramref name="count" /> é maior que o tamanho do buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-544">The sum of <paramref name="offset" /> and <paramref name="count" /> is larger than the buffer length.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="feb6f-545">Não há suporte para gravação no fluxo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-545">The stream does not support writing.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="feb6f-546">O fluxo foi descartado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-546">The stream has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="feb6f-547">O fluxo está em uso no momento por uma operação de gravação anterior.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-547">The stream is currently in use by a previous write operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteAsync (byte[] buffer, int offset, int count, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteAsync(unsigned int8[] buffer, int32 offset, int32 count, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteAsync(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="feb6f-548">O buffer do qual os dados serão gravados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-548">The buffer to write data from.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="feb6f-549">O deslocamento de bytes baseado em zero no <c>buffer</c> do qual será iniciada a cópia de bytes para o fluxo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-549">The zero-based byte offset in <c>buffer</c> from which to begin copying bytes to the stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="feb6f-550">O número máximo de bytes a serem gravados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-550">The maximum number of bytes to write.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="feb6f-551">O token a se monitorar para solicitações de cancelamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-551">The token to monitor for cancellation requests.</span>
          </span>
          <span data-ttu-id="feb6f-552">O valor padrão é <see cref="P:System.Threading.CancellationToken.None" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-552">The default value is <see cref="P:System.Threading.CancellationToken.None" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="feb6f-553">Grava uma sequência de bytes no fluxo atual assincronamente, avança a posição atual dentro desse fluxo pelo número de bytes gravados e monitora as solicitações de cancelamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-553">Asynchronously writes a sequence of bytes to the current stream, advances the current position within this stream by the number of bytes written, and monitors cancellation requests.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="feb6f-554">Uma tarefa que representa a operação de gravação assíncrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-554">A task that represents the asynchronous write operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="feb6f-555">O <xref:System.IO.Stream.WriteAsync%2A> método permite que você execute operações de e/s de uso intensivo de recursos sem bloquear o thread principal.</span><span class="sxs-lookup"><span data-stu-id="feb6f-555">The <xref:System.IO.Stream.WriteAsync%2A> method enables you to perform resource-intensive I/O operations without blocking the main thread.</span></span> <span data-ttu-id="feb6f-556">Essa consideração sobre o desempenho é particularmente importante em um aplicativo [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] ou [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] em que uma operação demorada de fluxo pode bloquear o thread de interface do usuário e fazer seu aplicativo parecer como se não estivesse funcionando.</span><span class="sxs-lookup"><span data-stu-id="feb6f-556">This performance consideration is particularly important in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app or [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] app where a time-consuming stream operation can block the UI thread and make your app appear as if it is not working.</span></span> <span data-ttu-id="feb6f-557">Os métodos assíncronos são usados em conjunto com o `async` e `await` palavras-chave no Visual Basic e c#.</span><span class="sxs-lookup"><span data-stu-id="feb6f-557">The async methods are used in conjunction with the `async` and `await` keywords in Visual Basic and C#.</span></span>  
  
 <span data-ttu-id="feb6f-558">Use o <xref:System.IO.Stream.CanWrite%2A> propriedade para determinar se a instância atual oferece suporte à gravação.</span><span class="sxs-lookup"><span data-stu-id="feb6f-558">Use the <xref:System.IO.Stream.CanWrite%2A> property to determine whether the current instance supports writing.</span></span>  
  
 <span data-ttu-id="feb6f-559">Se a operação foi cancelada antes da conclusão, a tarefa retornada contém o <xref:System.Threading.Tasks.TaskStatus.Canceled> valor para o <xref:System.Threading.Tasks.Task.Status%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="feb6f-559">If the operation is canceled before it completes, the returned task contains the <xref:System.Threading.Tasks.TaskStatus.Canceled> value for the <xref:System.Threading.Tasks.Task.Status%2A> property.</span></span>  
  
 <span data-ttu-id="feb6f-560">Para obter um exemplo, consulte o <xref:System.IO.Stream.WriteAsync%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29> de sobrecarga.</span><span class="sxs-lookup"><span data-stu-id="feb6f-560">For an example, see the <xref:System.IO.Stream.WriteAsync%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29> overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="feb6f-561">
            <paramref name="buffer" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-561">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="feb6f-562">
            <paramref name="offset" /> ou <paramref name="count" /> é negativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-562">
              <paramref name="offset" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="feb6f-563">A soma de <paramref name="offset" /> e <paramref name="count" /> é maior que o tamanho do buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-563">The sum of <paramref name="offset" /> and <paramref name="count" /> is larger than the buffer length.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="feb6f-564">Não há suporte para gravação no fluxo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-564">The stream does not support writing.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="feb6f-565">O fluxo foi descartado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-565">The stream has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="feb6f-566">O fluxo está em uso no momento por uma operação de gravação anterior.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-566">The stream is currently in use by a previous write operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteByte">
      <MemberSignature Language="C#" Value="public virtual void WriteByte (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteByte(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.WriteByte(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteByte (value As Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteByte(System::Byte value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="feb6f-567">O byte a ser gravado no fluxo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-567">The byte to write to the stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="feb6f-568">Grava um byte na posição atual no fluxo e avança a posição dentro no fluxo em um byte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-568">Writes a byte to the current position in the stream and advances the position within the stream by one byte.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="feb6f-569">Use o <xref:System.IO.Stream.CanWrite%2A> propriedade para determinar se a instância atual oferece suporte à gravação.</span><span class="sxs-lookup"><span data-stu-id="feb6f-569">Use the <xref:System.IO.Stream.CanWrite%2A> property to determine whether the current instance supports writing.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="feb6f-570">Ocorre um erro de E/S.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-570">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="feb6f-571">O fluxo não dá suporte à gravação ou o fluxo já foi fechado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-571">The stream does not support writing, or the stream is already closed.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="feb6f-572">Foram chamados métodos depois que o fluxo foi fechado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-572">Methods were called after the stream was closed.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="feb6f-573">A implementação padrão em <see langword="Stream" /> cria uma nova matriz de byte único e, em seguida, chama <see cref="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="feb6f-573">The default implementation on <see langword="Stream" /> creates a new single-byte array and then calls <see cref="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)" />.</span>
            </span>
            <span data-ttu-id="feb6f-574">Enquanto estiver formalmente correto, é ineficiente.</span>
            <span class="sxs-lookup">
              <span data-stu-id="feb6f-574">While this is formally correct, it is inefficient.</span>
            </span>
            <span data-ttu-id="feb6f-575">Qualquer fluxo com um buffer interno deve substituir este método e fornecer uma versão muito mais eficiente do que grava no buffer diretamente, evitando a alocação de matriz extra em cada chamada.</span>
            <span class="sxs-lookup">
              <span data-stu-id="feb6f-575">Any stream with an internal buffer should override this method and provide a much more efficient version that writes to the buffer directly, avoiding the extra array allocation on every call.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="WriteTimeout">
      <MemberSignature Language="C#" Value="public virtual int WriteTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 WriteTimeout" />
      <MemberSignature Language="DocId" Value="P:System.IO.Stream.WriteTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property WriteTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int WriteTimeout { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="feb6f-576">Obtém ou define um valor, em milissegundos, que determina quanto tempo o fluxo tentará realizar a gravação antes do tempo limite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-576">Gets or sets a value, in miliseconds, that determines how long the stream will attempt to write before timing out.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="feb6f-577">Um valor, em milissegundos, que determina quanto tempo o fluxo tentará realizar a gravação antes do tempo limite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-577">A value, in miliseconds, that determines how long the stream will attempt to write before timing out.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="feb6f-578">O método <see cref="P:System.IO.Stream.WriteTimeout" /> sempre gera um <see cref="T:System.InvalidOperationException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feb6f-578">The <see cref="P:System.IO.Stream.WriteTimeout" /> method always throws an <see cref="T:System.InvalidOperationException" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="feb6f-579">O <see cref="P:System.IO.Stream.WriteTimeout" /> propriedade deve ser substituída para fornecer o comportamento apropriado para o fluxo.</span>
            <span class="sxs-lookup">
              <span data-stu-id="feb6f-579">The <see cref="P:System.IO.Stream.WriteTimeout" /> property should be overridden to provide the appropriate behavior for the stream.</span>
            </span>
            <span data-ttu-id="feb6f-580">Se o fluxo não oferece suporte para o tempo limite, essa propriedade deve gerar um <see cref="T:System.InvalidOperationException" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="feb6f-580">If the stream does not support timing out, this property should raise an <see cref="T:System.InvalidOperationException" />.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>