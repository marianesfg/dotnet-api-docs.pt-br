<Type Name="FileSystemWatcher" FullName="System.IO.FileSystemWatcher">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e87b26ec400399826b4f5e5b8d1daf942933af86" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36485075" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class FileSystemWatcher : System.ComponentModel.Component, System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FileSystemWatcher extends System.ComponentModel.Component implements class System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="DocId" Value="T:System.IO.FileSystemWatcher" />
  <TypeSignature Language="VB.NET" Value="Public Class FileSystemWatcher&#xA;Inherits Component&#xA;Implements ISupportInitialize" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileSystemWatcher : System::ComponentModel::Component, System::ComponentModel::ISupportInitialize" />
  <TypeSignature Language="F#" Value="type FileSystemWatcher = class&#xA;    inherit Component&#xA;    interface ISupportInitialize" />
  <AssemblyInfo>
    <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Changed")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.IO.IODescription("")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="1fc6c-101">Listens to the file system change notifications and raises events when a directory, or file in a directory, changes.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1fc6c-101">Listens to the file system change notifications and raises events when a directory, or file in a directory, changes.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fc6c-102">Use <xref:System.IO.FileSystemWatcher> para aguardar as alterações em um diretório especificado.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-102">Use <xref:System.IO.FileSystemWatcher> to watch for changes in a specified directory.</span></span> <span data-ttu-id="1fc6c-103">Você pode detectar alterações em arquivos e subdiretórios do diretório especificado.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-103">You can watch for changes in files and subdirectories of the specified directory.</span></span> <span data-ttu-id="1fc6c-104">Você pode criar um componente para assistir a arquivos em um computador local, uma unidade de rede ou um computador remoto.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-104">You can create a component to watch files on a local computer, a network drive, or a remote computer.</span></span>  
  
 <span data-ttu-id="1fc6c-105">Para detectar alterações em todos os arquivos, defina o <xref:System.IO.FileSystemWatcher.Filter%2A> propriedade como uma cadeia de caracteres vazia ("") ou usar caracteres curinga ("*.\*").</span><span class="sxs-lookup"><span data-stu-id="1fc6c-105">To watch for changes in all files, set the <xref:System.IO.FileSystemWatcher.Filter%2A> property to an empty string ("") or use wildcards ("*.\*").</span></span> <span data-ttu-id="1fc6c-106">Para assistir a um arquivo específico, defina o <xref:System.IO.FileSystemWatcher.Filter%2A> propriedade para o nome do arquivo.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-106">To watch a specific file, set the <xref:System.IO.FileSystemWatcher.Filter%2A> property to the file name.</span></span> <span data-ttu-id="1fc6c-107">Por exemplo, para detectar alterações no arquivo doc, defina o <xref:System.IO.FileSystemWatcher.Filter%2A> propriedade como "Doc".</span><span class="sxs-lookup"><span data-stu-id="1fc6c-107">For example, to watch for changes in the file MyDoc.txt, set the <xref:System.IO.FileSystemWatcher.Filter%2A> property to "MyDoc.txt".</span></span> <span data-ttu-id="1fc6c-108">Você também pode observar as alterações em um determinado tipo de arquivo.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-108">You can also watch for changes in a certain type of file.</span></span> <span data-ttu-id="1fc6c-109">Por exemplo, para detectar alterações em arquivos de texto, defina o <xref:System.IO.FileSystemWatcher.Filter%2A> propriedade como "\*. txt".</span><span class="sxs-lookup"><span data-stu-id="1fc6c-109">For example, to watch for changes in text files, set the <xref:System.IO.FileSystemWatcher.Filter%2A> property to "\*.txt".</span></span>  
  
 <span data-ttu-id="1fc6c-110">Há vários tipos de alterações que você pode observar em um arquivo ou diretório.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-110">There are several types of changes you can watch for in a directory or file.</span></span> <span data-ttu-id="1fc6c-111">Por exemplo, você pode detectar alterações em `Attributes`, o `LastWrite` data e hora, ou o `Size` de arquivos ou diretórios.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-111">For example, you can watch for changes in `Attributes`, the `LastWrite` date and time, or the `Size` of files or directories.</span></span> <span data-ttu-id="1fc6c-112">Isso é feito definindo o <xref:System.IO.FileSystemWatcher.NotifyFilter%2A> propriedade para um do <xref:System.IO.NotifyFilters> valores.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-112">This is done by setting the <xref:System.IO.FileSystemWatcher.NotifyFilter%2A> property to one of the <xref:System.IO.NotifyFilters> values.</span></span> <span data-ttu-id="1fc6c-113">Para obter mais informações sobre o tipo de alterações que você pode assistir, consulte <xref:System.IO.NotifyFilters>.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-113">For more information on the type of changes you can watch, see <xref:System.IO.NotifyFilters>.</span></span>  
  
 <span data-ttu-id="1fc6c-114">Você pode observar renomear, exclusão ou criação de arquivos ou diretórios.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-114">You can watch for renaming, deletion, or creation of files or directories.</span></span> <span data-ttu-id="1fc6c-115">Por exemplo, para assistir a renomeação de arquivos de texto, defina o <xref:System.IO.FileSystemWatcher.Filter%2A> propriedade como "\*.txt" e chame o <xref:System.IO.FileSystemWatcher.WaitForChanged%2A> método com um <xref:System.IO.WatcherChangeTypes.Renamed> especificado para o parâmetro.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-115">For example, to watch for renaming of text files, set the <xref:System.IO.FileSystemWatcher.Filter%2A> property to "\*.txt" and call the <xref:System.IO.FileSystemWatcher.WaitForChanged%2A> method with a <xref:System.IO.WatcherChangeTypes.Renamed> specified for its parameter.</span></span>  
  
 <span data-ttu-id="1fc6c-116">O sistema operacional Windows notifica o componente de alterações de arquivo em um buffer criado pelo <xref:System.IO.FileSystemWatcher>.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-116">The Windows operating system notifies your component of file changes in a buffer created by the <xref:System.IO.FileSystemWatcher>.</span></span> <span data-ttu-id="1fc6c-117">Se houver muitas alterações em um curto período de tempo, o buffer pode estourar.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-117">If there are many changes in a short time, the buffer can overflow.</span></span> <span data-ttu-id="1fc6c-118">Isso faz com que o componente de perder o controle de alterações no diretório e somente ele fornecerá notificação ampla.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-118">This causes the component to lose track of changes in the directory, and it will only provide blanket notification.</span></span> <span data-ttu-id="1fc6c-119">Aumentar o tamanho do buffer com o <xref:System.IO.FileSystemWatcher.InternalBufferSize%2A> propriedade é cara, já que provém de memória não-paginável que não pode ser trocada por disco, mantenha o buffer menor ainda grande suficiente para não perder qualquer arquivo de eventos de alteração.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-119">Increasing the size of the buffer with the <xref:System.IO.FileSystemWatcher.InternalBufferSize%2A> property is expensive, as it comes from non-paged memory that cannot be swapped out to disk, so keep the buffer as small yet large enough to not miss any file change events.</span></span> <span data-ttu-id="1fc6c-120">Para evitar um estouro de buffer, use o <xref:System.IO.FileSystemWatcher.NotifyFilter%2A> e <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A> notificações de alteração de propriedades para que você pode filtrar indesejados.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-120">To avoid a buffer overflow, use the <xref:System.IO.FileSystemWatcher.NotifyFilter%2A> and <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A> properties so you can filter out unwanted change notifications.</span></span>  
  
 <span data-ttu-id="1fc6c-121">Para obter uma lista de valores de propriedade inicial para uma instância do <xref:System.IO.FileSystemWatcher>, consulte o <xref:System.IO.FileSystemWatcher.%23ctor%2A> construtor.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-121">For a list of initial property values for an instance of <xref:System.IO.FileSystemWatcher>, see the <xref:System.IO.FileSystemWatcher.%23ctor%2A> constructor.</span></span>  
  
 <span data-ttu-id="1fc6c-122">Observe o seguinte ao usar o <xref:System.IO.FileSystemWatcher> classe.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-122">Please note the following when using the <xref:System.IO.FileSystemWatcher> class.</span></span>  
  
-   <span data-ttu-id="1fc6c-123">Arquivos ocultos não são ignorados.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-123">Hidden files are not ignored.</span></span>  
  
-   <span data-ttu-id="1fc6c-124">Em alguns sistemas, <xref:System.IO.FileSystemWatcher> informa as alterações nos arquivos usando o formato de nome de 8.3 arquivo curto.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-124">In some systems, <xref:System.IO.FileSystemWatcher> reports changes to files using the short 8.3 file name format.</span></span> <span data-ttu-id="1fc6c-125">Por exemplo, uma alteração "LongFileName.LongExtension" poderia ser relatada como "LongFil ~. LON".</span><span class="sxs-lookup"><span data-stu-id="1fc6c-125">For example, a change to  "LongFileName.LongExtension" could be reported as "LongFil~.Lon".</span></span>  
  
-   <span data-ttu-id="1fc6c-126">Esta classe contém uma demanda de link e uma demanda de herança no nível de classe que se aplica a todos os membros.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-126">This class contains a link demand and an inheritance demand at the class level that applies to all members.</span></span> <span data-ttu-id="1fc6c-127">Um <xref:System.Security.SecurityException> é lançado quando o chamador imediato ou a classe derivada não tem permissão de confiança total.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-127">A <xref:System.Security.SecurityException> is thrown when either the immediate caller or the derived class does not have full-trust permission.</span></span> <span data-ttu-id="1fc6c-128">Para obter detalhes sobre as exigências de segurança, consulte [demandas de Link](~/docs/framework/misc/link-demands.md).</span><span class="sxs-lookup"><span data-stu-id="1fc6c-128">For details about security demands, see [Link Demands](~/docs/framework/misc/link-demands.md).</span></span>  
  
-   <span data-ttu-id="1fc6c-129">O tamanho máximo que você pode definir para o <xref:System.IO.FileSystemWatcher.InternalBufferSize%2A> propriedade para um diretório de monitoramento na rede é 64 KB.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-129">The maximum size you can set for the <xref:System.IO.FileSystemWatcher.InternalBufferSize%2A> property for monitoring a directory over the network is 64 KB.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1fc6c-130">Executando <xref:System.IO.FileSystemWatcher> no Windows 98 não tem suporte.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-130">Running <xref:System.IO.FileSystemWatcher> on Windows 98 is not supported.</span></span>  
  
## <a name="copying-and-moving-folders"></a><span data-ttu-id="1fc6c-131">Copiando e movendo pastas</span><span class="sxs-lookup"><span data-stu-id="1fc6c-131">Copying and moving folders</span></span>  
 <span data-ttu-id="1fc6c-132">O sistema operacional e <xref:System.IO.FileSystemWatcher> objeto interpretar uma ação de copiar e colar ou uma movimentação como uma ação de renomeação de uma pasta e seu conteúdo.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-132">The operating system and <xref:System.IO.FileSystemWatcher> object interpret a cut-and-paste action or a move action as a rename action for a folder and its contents.</span></span> <span data-ttu-id="1fc6c-133">Se você recortar e colar uma pasta com arquivos em uma pasta que é inspecionada, o <xref:System.IO.FileSystemWatcher> objeto informa apenas a pasta como novos, mas não seu conteúdo porque eles são essencialmente somente renomeados.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-133">If you cut and paste a folder with files into a folder being watched, the <xref:System.IO.FileSystemWatcher> object reports only the folder as new, but not its contents because they are essentially only renamed.</span></span>  
  
 <span data-ttu-id="1fc6c-134">Para ser notificado que o conteúdo das pastas foram movido ou copiado para uma pasta monitorada, fornecer <xref:System.IO.FileSystemWatcher.OnChanged%2A> e <xref:System.IO.FileSystemWatcher.OnRenamed%2A> métodos do manipulador de eventos como sugerido na tabela a seguir.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-134">To be notified that the contents of folders have been moved or copied into a watched folder, provide <xref:System.IO.FileSystemWatcher.OnChanged%2A> and <xref:System.IO.FileSystemWatcher.OnRenamed%2A> event handler methods as suggested in the following table.</span></span>  
  
|<span data-ttu-id="1fc6c-135">Manipulador de eventos</span><span class="sxs-lookup"><span data-stu-id="1fc6c-135">Event Handler</span></span>|<span data-ttu-id="1fc6c-136">Eventos manipulados</span><span class="sxs-lookup"><span data-stu-id="1fc6c-136">Events Handled</span></span>|<span data-ttu-id="1fc6c-137">Executa</span><span class="sxs-lookup"><span data-stu-id="1fc6c-137">Performs</span></span>|  
|-------------------|--------------------|--------------|  
|<xref:System.IO.FileSystemWatcher.OnChanged%2A>|<span data-ttu-id="1fc6c-138"><xref:System.IO.FileSystemWatcher.Changed>, <xref:System.IO.FileSystemWatcher.Created>, <xref:System.IO.FileSystemWatcher.Deleted></span><span class="sxs-lookup"><span data-stu-id="1fc6c-138"><xref:System.IO.FileSystemWatcher.Changed>, <xref:System.IO.FileSystemWatcher.Created>, <xref:System.IO.FileSystemWatcher.Deleted></span></span>|<span data-ttu-id="1fc6c-139">Relatório de alterações em atributos de arquivo, arquivos criados e arquivos excluídos.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-139">Report changes in file attributes, created files, and deleted files.</span></span>|  
|<xref:System.IO.FileSystemWatcher.OnRenamed%2A>|<xref:System.IO.FileSystemWatcher.Renamed>|<span data-ttu-id="1fc6c-140">Lista os novos e antigos caminhos de arquivos renomeados e pastas, expandir recursivamente, se necessário.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-140">List the old and new paths of renamed files and folders, expanding recursively if needed.</span></span>|  
  
## <a name="events-and-buffer-sizes"></a><span data-ttu-id="1fc6c-141">Eventos e tamanhos de buffer</span><span class="sxs-lookup"><span data-stu-id="1fc6c-141">Events and Buffer Sizes</span></span>  
 <span data-ttu-id="1fc6c-142">Observe que vários fatores podem afetar o sistema de arquivos de eventos de alteração são gerados, conforme descrito a seguir:</span><span class="sxs-lookup"><span data-stu-id="1fc6c-142">Note that several factors can affect which file system change events are raised, as described by the following:</span></span>  
  
-   <span data-ttu-id="1fc6c-143">Operações de sistema de arquivos comuns podem gerar mais de um evento.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-143">Common file system operations might raise more than one event.</span></span> <span data-ttu-id="1fc6c-144">Por exemplo, quando um arquivo é movido de um diretório para outro, várias <xref:System.IO.FileSystemWatcher.OnChanged%2A> e alguns <xref:System.IO.FileSystemWatcher.OnCreated%2A> e <xref:System.IO.FileSystemWatcher.OnDeleted%2A> eventos poderão ser gerados.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-144">For example, when a file is moved from one directory to another, several <xref:System.IO.FileSystemWatcher.OnChanged%2A> and some <xref:System.IO.FileSystemWatcher.OnCreated%2A> and <xref:System.IO.FileSystemWatcher.OnDeleted%2A> events might be raised.</span></span> <span data-ttu-id="1fc6c-145">Mover que um arquivo é uma operação complexa que consiste em várias operações simples, portanto, gerando vários eventos.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-145">Moving a file is a complex operation that consists of multiple simple operations, therefore raising multiple events.</span></span> <span data-ttu-id="1fc6c-146">Da mesma forma, alguns aplicativos (por exemplo, um software antivírus) podem causar a eventos do sistema de arquivos adicionais que são detectados pelo <xref:System.IO.FileSystemWatcher>.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-146">Likewise, some applications (for example, antivirus software) might cause additional file system events that are detected by <xref:System.IO.FileSystemWatcher>.</span></span>  
  
-   <span data-ttu-id="1fc6c-147">O <xref:System.IO.FileSystemWatcher> pode assistir discos, desde que eles não são alternados ou removidos.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-147">The <xref:System.IO.FileSystemWatcher> can watch disks as long as they are not switched or removed.</span></span> <span data-ttu-id="1fc6c-148">O <xref:System.IO.FileSystemWatcher> não gerar eventos para CDs e DVDs, porque não é possível alterar os carimbos de hora e propriedades.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-148">The <xref:System.IO.FileSystemWatcher> does not raise events for CDs and DVDs, because time stamps and properties cannot change.</span></span> <span data-ttu-id="1fc6c-149">Computadores remotos devem ter uma das plataformas necessárias instaladas para o componente funcione corretamente.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-149">Remote computers must have one of the required platforms installed for the component to function properly.</span></span>  
  
-   <span data-ttu-id="1fc6c-150">Se vários <xref:System.IO.FileSystemWatcher> objetos observam o mesmo caminho UNC no Windows XP antes de Service Pack 1 ou Windows 2000 SP2 ou anterior, e somente um dos objetos irá gerar um evento.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-150">If multiple <xref:System.IO.FileSystemWatcher> objects are watching the same UNC path in Windows XP prior to Service Pack 1, or Windows 2000 SP2 or earlier, then only one of the objects will raise an event.</span></span> <span data-ttu-id="1fc6c-151">Em computadores executando o Windows XP SP1 e mais recente, Windows 2000 SP3 ou posterior ou Windows Server 2003, todos os <xref:System.IO.FileSystemWatcher> objetos gerará os eventos adequados.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-151">On machines running Windows XP SP1 and newer, Windows 2000 SP3 or newer or Windows Server 2003, all <xref:System.IO.FileSystemWatcher> objects will raise the appropriate events.</span></span>  
  
 <span data-ttu-id="1fc6c-152">Observe que um <xref:System.IO.FileSystemWatcher> poderá perder um evento quando o tamanho do buffer é excedido.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-152">Note that a <xref:System.IO.FileSystemWatcher> may miss an event when the buffer size is exceeded.</span></span> <span data-ttu-id="1fc6c-153">Para evitar a perda de eventos, siga estas diretrizes:</span><span class="sxs-lookup"><span data-stu-id="1fc6c-153">To avoid missing events, follow these guidelines:</span></span>  
  
-   <span data-ttu-id="1fc6c-154">Aumentar o tamanho do buffer, definindo o <xref:System.IO.FileSystemWatcher.InternalBufferSize%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-154">Increase the buffer size by setting the <xref:System.IO.FileSystemWatcher.InternalBufferSize%2A> property.</span></span>  
  
-   <span data-ttu-id="1fc6c-155">Evite observar arquivos com nomes de arquivo longos, como um nome de arquivo longo contribuem para preencher o buffer.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-155">Avoid watching files with long file names, because a long file name contributes to filling up the buffer.</span></span> <span data-ttu-id="1fc6c-156">Considere a possibilidade de renomear esses arquivos usando nomes mais curtos.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-156">Consider renaming these files using shorter names.</span></span>  
  
-   <span data-ttu-id="1fc6c-157">Manter o código mais curto possível de manipulação de eventos.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-157">Keep your event handling code as short as possible.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1fc6c-158">O exemplo a seguir cria um <xref:System.IO.FileSystemWatcher> para inspecionar o diretório especificado em tempo de execução.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-158">The following example creates a <xref:System.IO.FileSystemWatcher> to watch the directory specified at run time.</span></span> <span data-ttu-id="1fc6c-159">O componente é definido para detectar alterações em `LastWrite` e `LastAccess` do tempo, a criação, exclusão ou renomeação de arquivos de texto no diretório.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-159">The component is set to watch for changes in `LastWrite` and `LastAccess` time, the creation, deletion, or renaming of text files in the directory.</span></span> <span data-ttu-id="1fc6c-160">Se um arquivo for alterado, criado ou excluído, o caminho para o arquivo imprime no console.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-160">If a file is changed, created, or deleted, the path to the file prints to the console.</span></span> <span data-ttu-id="1fc6c-161">Quando um arquivo é renomeado, os caminhos de novos e antigos de impressão para o console.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-161">When a file is renamed, the old and new paths print to the console.</span></span>  
  
 <span data-ttu-id="1fc6c-162">Use o <xref:System.Diagnostics> e <xref:System.IO> namespaces para este exemplo.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-162">Use the <xref:System.Diagnostics> and <xref:System.IO> namespaces for this example.</span></span>  
  
 [!code-cpp[Classic NotifyFilters Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic NotifyFilters Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NotifyFilters Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic NotifyFilters Example/CS/source.cs#1)]
 [!code-vb[Classic NotifyFilters Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic NotifyFilters Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission">
      <span data-ttu-id="1fc6c-163">para derivar do <see cref="T:System.Diagnostics.ProcessStartInfo" /> classe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1fc6c-163">for deriving from the <see cref="T:System.Diagnostics.ProcessStartInfo" /> class.</span>
      </span>
      <span data-ttu-id="1fc6c-164">Valor de demanda: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />; Conjuntos de permissões nomeadas: <see langword="FullTrust" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1fc6c-164">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />; Named Permission Sets: <see langword="FullTrust" />.</span>
      </span>
    </permission>
    <altmember cref="P:System.IO.FileSystemWatcher.NotifyFilter" />
    <altmember cref="T:System.IO.NotifyFilters" />
    <altmember cref="T:System.IO.FileSystemEventArgs" />
    <altmember cref="T:System.IO.FileSystemEventHandler" />
    <altmember cref="P:System.IO.FileSystemWatcher.Filter" />
    <altmember cref="P:System.IO.FileSystemWatcher.IncludeSubdirectories" />
    <altmember cref="T:System.IO.InternalBufferOverflowException" />
    <altmember cref="T:System.IO.RenamedEventArgs" />
    <altmember cref="T:System.IO.RenamedEventHandler" />
    <altmember cref="T:System.IO.WaitForChangedResult" />
    <altmember cref="T:System.IO.WatcherChangeTypes" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1fc6c-165">Initializes a new instance of the <see cref="T:System.IO.FileSystemWatcher" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fc6c-165">Initializes a new instance of the <see cref="T:System.IO.FileSystemWatcher" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileSystemWatcher ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemWatcher.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileSystemWatcher();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1fc6c-166">Initializes a new instance of the <see cref="T:System.IO.FileSystemWatcher" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fc6c-166">Initializes a new instance of the <see cref="T:System.IO.FileSystemWatcher" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fc6c-167">Você não pode assistir a um computador remoto que não tenha o Windows NT ou Windows 2000.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-167">You cannot watch a remote computer that does not have Windows NT or Windows 2000.</span></span> <span data-ttu-id="1fc6c-168">Você não pode assistir a um computador remoto do Windows NT 4.0 em um computador Windows NT 4.0.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-168">You cannot watch a remote Windows NT 4.0 computer from a Windows NT 4.0 computer.</span></span>  
  
 <span data-ttu-id="1fc6c-169">A tabela a seguir mostra os valores de propriedade inicial para uma instância do <xref:System.IO.FileSystemWatcher>.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-169">The following table shows initial property values for an instance of <xref:System.IO.FileSystemWatcher>.</span></span>  
  
|<span data-ttu-id="1fc6c-170">Propriedade</span><span class="sxs-lookup"><span data-stu-id="1fc6c-170">Property</span></span>|<span data-ttu-id="1fc6c-171">Valor inicial</span><span class="sxs-lookup"><span data-stu-id="1fc6c-171">Initial Value</span></span>|  
|--------------|-------------------|  
|<xref:System.IO.FileSystemWatcher.NotifyFilter%2A>|<span data-ttu-id="1fc6c-172">combinação de OR bit a bit de `LastWrite`, `FileName`, e `DirectoryName`</span><span class="sxs-lookup"><span data-stu-id="1fc6c-172">bitwise OR combination of `LastWrite`, `FileName`, and `DirectoryName`</span></span>|  
|<xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A>|`false`|  
|<xref:System.IO.FileSystemWatcher.Filter%2A>|<span data-ttu-id="1fc6c-173">"*. \*"(Assista a todos os arquivos.)</span><span class="sxs-lookup"><span data-stu-id="1fc6c-173">"*.\*" (Watch all files.)</span></span>|  
|<xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A>|`false`|  
|<xref:System.IO.FileSystemWatcher.InternalBufferSize%2A>|<span data-ttu-id="1fc6c-174">8192</span><span class="sxs-lookup"><span data-stu-id="1fc6c-174">8192</span></span>|  
|<xref:System.IO.FileSystemWatcher.Path%2A>|<span data-ttu-id="1fc6c-175">cadeia de caracteres vazia ("")</span><span class="sxs-lookup"><span data-stu-id="1fc6c-175">empty string ("")</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="1fc6c-176">O componente não observará o diretório especificado até o <xref:System.IO.FileSystemWatcher.Path%2A> for definida, e <xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A> é `true`.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-176">The component will not watch the specified directory until the <xref:System.IO.FileSystemWatcher.Path%2A> is set, and <xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A> is `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1fc6c-177">O exemplo a seguir cria um <xref:System.IO.FileSystemWatcher> objeto assistir o diretório especificado em tempo de execução.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-177">The following example creates a <xref:System.IO.FileSystemWatcher> object to watch the directory specified at run time.</span></span> <span data-ttu-id="1fc6c-178">O <xref:System.IO.FileSystemWatcher> objeto observa alterações em `LastWrite` e `LastAccess` vezes e para a criação, exclusão ou renomeação de texto arquivos no diretório.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-178">The <xref:System.IO.FileSystemWatcher> object watches for changes in `LastWrite` and `LastAccess` times, and for the creation, deletion, or renaming of text files in the directory.</span></span> <span data-ttu-id="1fc6c-179">Se um arquivo for alterado, criado ou excluído, o caminho para o arquivo exibe no console.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-179">If a file is changed, created, or deleted, the path to the file displays to the console.</span></span> <span data-ttu-id="1fc6c-180">Quando um arquivo é renomeado, os caminhos antigos e novos exibem no console.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-180">When a file is renamed, the old and new paths display to the console.</span></span>  
  
 <span data-ttu-id="1fc6c-181">Este exemplo usa o <xref:System.Diagnostics> e <xref:System.IO> namespaces.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-181">This example uses the <xref:System.Diagnostics> and <xref:System.IO> namespaces.</span></span>  
  
 [!code-cpp[Classic NotifyFilters Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic NotifyFilters Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NotifyFilters Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic NotifyFilters Example/CS/source.cs#1)]
 [!code-vb[Classic NotifyFilters Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic NotifyFilters Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="1fc6c-182">para confiança total do chamador imediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fc6c-182">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="1fc6c-183">Este membro não pode ser usado pelo código parcialmente confiável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fc6c-183">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="T:System.IO.NotifyFilters" />
        <altmember cref="T:System.IO.FileSystemEventArgs" />
        <altmember cref="T:System.IO.FileSystemEventHandler" />
        <altmember cref="T:System.IO.InternalBufferOverflowException" />
        <altmember cref="P:System.IO.FileSystemWatcher.Path" />
        <altmember cref="T:System.IO.RenamedEventArgs" />
        <altmember cref="T:System.IO.RenamedEventHandler" />
        <altmember cref="T:System.IO.WaitForChangedResult" />
        <altmember cref="T:System.IO.WatcherChangeTypes" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileSystemWatcher (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemWatcher.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileSystemWatcher(System::String ^ path);" />
      <MemberSignature Language="F#" Value="new System.IO.FileSystemWatcher : string -&gt; System.IO.FileSystemWatcher" Usage="new System.IO.FileSystemWatcher path" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="1fc6c-184">The directory to monitor, in standard or Universal Naming Convention (UNC) notation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fc6c-184">The directory to monitor, in standard or Universal Naming Convention (UNC) notation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1fc6c-185">Initializes a new instance of the <see cref="T:System.IO.FileSystemWatcher" /> class, given the specified directory to monitor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fc6c-185">Initializes a new instance of the <see cref="T:System.IO.FileSystemWatcher" /> class, given the specified directory to monitor.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="1fc6c-186">O componente não observará o diretório especificado até o <xref:System.IO.FileSystemWatcher.Path%2A> for definida, e <xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A> é `true`.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-186">The component will not watch the specified directory until the <xref:System.IO.FileSystemWatcher.Path%2A> is set, and <xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A> is `true`.</span></span>  
  
 <span data-ttu-id="1fc6c-187">O componente pode assistir a arquivos no seu computador pessoal, uma unidade de rede ou um computador remoto.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-187">The component can watch files on your personal computer, a network drive, or a remote computer.</span></span>  
  
 <span data-ttu-id="1fc6c-188">Você não pode assistir a um computador remoto que não tenha o Windows NT ou Windows 2000.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-188">You cannot watch a remote computer that does not have Windows NT or Windows 2000.</span></span> <span data-ttu-id="1fc6c-189">Você não pode assistir a um computador remoto do Windows NT 4.0 em um computador Windows NT 4.0.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-189">You cannot watch a remote Windows NT 4.0 computer from a Windows NT 4.0 computer.</span></span> <span data-ttu-id="1fc6c-190">O <xref:System.IO.FileSystemWatcher.Filter%2A> por padrão, a propriedade é definida para inspecionar todos os arquivos.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-190">The <xref:System.IO.FileSystemWatcher.Filter%2A> property is set by default to watch all files.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1fc6c-191">The <paramref name="path" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fc6c-191">The <paramref name="path" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1fc6c-192">The <paramref name="path" /> parameter is an empty string ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fc6c-192">The <paramref name="path" /> parameter is an empty string ("").</span>
          </span>
          <span data-ttu-id="1fc6c-193">-or-  The path specified through the <paramref name="path" /> parameter does not exist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fc6c-193">-or-  The path specified through the <paramref name="path" /> parameter does not exist.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="1fc6c-194">
            <paramref name="path" /> is too long.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fc6c-194">
              <paramref name="path" /> is too long.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="1fc6c-195">para confiança total do chamador imediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fc6c-195">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="1fc6c-196">Este membro não pode ser usado pelo código parcialmente confiável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fc6c-196">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="T:System.IO.NotifyFilters" />
        <altmember cref="T:System.IO.FileSystemEventArgs" />
        <altmember cref="T:System.IO.FileSystemEventHandler" />
        <altmember cref="P:System.IO.FileSystemWatcher.Filter" />
        <altmember cref="T:System.IO.InternalBufferOverflowException" />
        <altmember cref="P:System.IO.FileSystemWatcher.Path" />
        <altmember cref="T:System.IO.RenamedEventArgs" />
        <altmember cref="T:System.IO.RenamedEventHandler" />
        <altmember cref="T:System.IO.WaitForChangedResult" />
        <altmember cref="T:System.IO.WatcherChangeTypes" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileSystemWatcher (string path, string filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, string filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemWatcher.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, filter As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileSystemWatcher(System::String ^ path, System::String ^ filter);" />
      <MemberSignature Language="F#" Value="new System.IO.FileSystemWatcher : string * string -&gt; System.IO.FileSystemWatcher" Usage="new System.IO.FileSystemWatcher (path, filter)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="filter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="1fc6c-197">The directory to monitor, in standard or Universal Naming Convention (UNC) notation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fc6c-197">The directory to monitor, in standard or Universal Naming Convention (UNC) notation.</span>
          </span>
        </param>
        <param name="filter">
          <span data-ttu-id="1fc6c-198">The type of files to watch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fc6c-198">The type of files to watch.</span>
          </span>
          <span data-ttu-id="1fc6c-199">For example, "\*.txt" watches for changes to all text files.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fc6c-199">For example, "\*.txt" watches for changes to all text files.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1fc6c-200">Initializes a new instance of the <see cref="T:System.IO.FileSystemWatcher" /> class, given the specified directory and type of files to monitor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fc6c-200">Initializes a new instance of the <see cref="T:System.IO.FileSystemWatcher" /> class, given the specified directory and type of files to monitor.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="1fc6c-201">O componente não observará o diretório especificado até o <xref:System.IO.FileSystemWatcher.Path%2A> for definida, e <xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A> é `true`.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-201">The component will not watch the specified directory until the <xref:System.IO.FileSystemWatcher.Path%2A> is set, and <xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A> is `true`.</span></span>  
  
 <span data-ttu-id="1fc6c-202">O componente pode assistir a arquivos no seu computador pessoal, uma unidade de rede ou um computador remoto.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-202">The component can watch files on your personal computer, a network drive, or a remote computer.</span></span>  
  
 <span data-ttu-id="1fc6c-203">Você não pode assistir a um computador remoto que não tenha o Windows NT ou Windows 2000.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-203">You cannot watch a remote computer that does not have Windows NT or Windows 2000.</span></span> <span data-ttu-id="1fc6c-204">Você não pode assistir a um computador remoto do Windows NT 4.0 em um computador Windows NT 4.0.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-204">You cannot watch a remote Windows NT 4.0 computer from a Windows NT 4.0 computer.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1fc6c-205">The <paramref name="path" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fc6c-205">The <paramref name="path" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="1fc6c-206">-or-  The <paramref name="filter" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fc6c-206">-or-  The <paramref name="filter" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1fc6c-207">The <paramref name="path" /> parameter is an empty string ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fc6c-207">The <paramref name="path" /> parameter is an empty string ("").</span>
          </span>
          <span data-ttu-id="1fc6c-208">-or-  The path specified through the <paramref name="path" /> parameter does not exist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fc6c-208">-or-  The path specified through the <paramref name="path" /> parameter does not exist.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="1fc6c-209">
            <paramref name="path" /> is too long.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fc6c-209">
              <paramref name="path" /> is too long.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="1fc6c-210">para confiança total do chamador imediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fc6c-210">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="1fc6c-211">Este membro não pode ser usado pelo código parcialmente confiável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fc6c-211">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="T:System.IO.NotifyFilters" />
        <altmember cref="T:System.IO.FileSystemEventArgs" />
        <altmember cref="T:System.IO.FileSystemEventHandler" />
        <altmember cref="P:System.IO.FileSystemWatcher.Filter" />
        <altmember cref="T:System.IO.InternalBufferOverflowException" />
        <altmember cref="P:System.IO.FileSystemWatcher.Path" />
        <altmember cref="T:System.IO.RenamedEventArgs" />
        <altmember cref="T:System.IO.RenamedEventHandler" />
        <altmember cref="T:System.IO.WaitForChangedResult" />
        <altmember cref="T:System.IO.WatcherChangeTypes" />
      </Docs>
    </Member>
    <Member MemberName="BeginInit">
      <MemberSignature Language="C#" Value="public void BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemWatcher.BeginInit" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginInit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginInit();" />
      <MemberSignature Language="F#" Value="abstract member BeginInit : unit -&gt; unit&#xA;override this.BeginInit : unit -&gt; unit" Usage="fileSystemWatcher.BeginInit " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.BeginInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1fc6c-212">Begins the initialization of a <see cref="T:System.IO.FileSystemWatcher" /> used on a form or used by another component.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fc6c-212">Begins the initialization of a <see cref="T:System.IO.FileSystemWatcher" /> used on a form or used by another component.</span>
          </span>
          <span data-ttu-id="1fc6c-213">The initialization occurs at run time.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fc6c-213">The initialization occurs at run time.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fc6c-214">O [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] design ambiente usa esse método para iniciar a inicialização de um componente usado em um formulário ou usado por outro componente.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-214">The [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] design environment uses this method to start the initialization of a component used on a form or used by another component.</span></span> <span data-ttu-id="1fc6c-215">O <xref:System.IO.FileSystemWatcher.EndInit%2A> método termina a inicialização.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-215">The <xref:System.IO.FileSystemWatcher.EndInit%2A> method ends the initialization.</span></span> <span data-ttu-id="1fc6c-216">Usando o <xref:System.IO.FileSystemWatcher.BeginInit%2A> e <xref:System.IO.FileSystemWatcher.EndInit%2A> métodos impede que o controle que está sendo usada antes de ser totalmente inicializado.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-216">Using the <xref:System.IO.FileSystemWatcher.BeginInit%2A> and <xref:System.IO.FileSystemWatcher.EndInit%2A> methods prevents the control from being used before it is fully initialized.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IO.FileSystemWatcher.EndInit" />
      </Docs>
    </Member>
    <Member MemberName="Changed">
      <MemberSignature Language="C#" Value="public event System.IO.FileSystemEventHandler Changed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.IO.FileSystemEventHandler Changed" />
      <MemberSignature Language="DocId" Value="E:System.IO.FileSystemWatcher.Changed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Changed As FileSystemEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::IO::FileSystemEventHandler ^ Changed;" />
      <MemberSignature Language="F#" Value="member this.Changed : System.IO.FileSystemEventHandler " Usage="member this.Changed : System.IO.FileSystemEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.IO.IODescription("Occurs when a file/directory change matches the filter")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileSystemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1fc6c-217">Occurs when a file or directory in the specified <see cref="P:System.IO.FileSystemWatcher.Path" /> is changed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fc6c-217">Occurs when a file or directory in the specified <see cref="P:System.IO.FileSystemWatcher.Path" /> is changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fc6c-218">O <xref:System.IO.FileSystemWatcher.Changed> é gerado quando as alterações são feitas para o tamanho, atributos de sistema, da última gravação do tempo, último tempo de acesso ou permissões de segurança de um arquivo ou diretório no diretório que está sendo monitorado.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-218">The <xref:System.IO.FileSystemWatcher.Changed> event is raised when changes are made to the size, system attributes, last write time, last access time, or security permissions of a file or directory in the directory being monitored.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1fc6c-219">Operações de sistema de arquivos comuns podem gerar mais de um evento.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-219">Common file system operations might raise more than one event.</span></span> <span data-ttu-id="1fc6c-220">Por exemplo, quando um arquivo é movido de um diretório para outro, várias <xref:System.IO.FileSystemWatcher.OnChanged%2A> e alguns <xref:System.IO.FileSystemWatcher.OnCreated%2A> e <xref:System.IO.FileSystemWatcher.OnDeleted%2A> eventos poderão ser gerados.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-220">For example, when a file is moved from one directory to another, several <xref:System.IO.FileSystemWatcher.OnChanged%2A> and some <xref:System.IO.FileSystemWatcher.OnCreated%2A> and <xref:System.IO.FileSystemWatcher.OnDeleted%2A> events might be raised.</span></span> <span data-ttu-id="1fc6c-221">Mover que um arquivo é uma operação complexa que consiste em várias operações simples, portanto, gerando vários eventos.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-221">Moving a file is a complex operation that consists of multiple simple operations, therefore raising multiple events.</span></span> <span data-ttu-id="1fc6c-222">Da mesma forma, alguns aplicativos (por exemplo, um software antivírus) podem causar a eventos do sistema de arquivos adicionais que são detectados pelo <xref:System.IO.FileSystemWatcher>.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-222">Likewise, some applications (for example, antivirus software) might cause additional file system events that are detected by <xref:System.IO.FileSystemWatcher>.</span></span>  
  
 <span data-ttu-id="1fc6c-223">Use <xref:System.IO.FileSystemWatcher.NotifyFilter%2A> para restringir o número de notificações gerada quando esse evento é manipulado.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-223">Use <xref:System.IO.FileSystemWatcher.NotifyFilter%2A> to restrict the number of notifications raised when this event is handled.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1fc6c-224">O <xref:System.IO.FileSystemWatcher.Changed> é gerado inesperadamente quando um arquivo é renomeado, mas não é gerado quando um diretório é renomeado.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-224">The <xref:System.IO.FileSystemWatcher.Changed> event is raised unexpectedly when a file is renamed, but is not raised when a directory is renamed.</span></span> <span data-ttu-id="1fc6c-225">Para assistir a renomeação, use o <xref:System.IO.FileSystemWatcher.Renamed> evento.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-225">To watch for renaming, use the <xref:System.IO.FileSystemWatcher.Renamed> event.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1fc6c-226">A ordem na qual o <xref:System.IO.FileSystemWatcher.Changed> é gerado em relação à outra <xref:System.IO.FileSystemWatcher> eventos podem ser alterado quando o <xref:System.IO.FileSystemWatcher.SynchronizingObject%2A> propriedade não é `null`.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-226">The order in which the <xref:System.IO.FileSystemWatcher.Changed> event is raised in relation to the other <xref:System.IO.FileSystemWatcher> events may change when the <xref:System.IO.FileSystemWatcher.SynchronizingObject%2A> property is not `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1fc6c-227">O exemplo a seguir usa o <xref:System.IO.FileSystemWatcher.Changed> evento para exibir o caminho do arquivo para o console sempre que o arquivo observado é alterado.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-227">The following example uses the <xref:System.IO.FileSystemWatcher.Changed> event to display the file path to the console whenever the watched file is changed.</span></span>  
  
 [!code-cpp[Classic NotifyFilters Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic NotifyFilters Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NotifyFilters Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic NotifyFilters Example/CS/source.cs#1)]
 [!code-vb[Classic NotifyFilters Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic NotifyFilters Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.FileSystemWatcher.NotifyFilter" />
        <altmember cref="M:System.IO.FileSystemWatcher.OnChanged(System.IO.FileSystemEventArgs)" />
        <altmember cref="P:System.IO.FileSystemWatcher.SynchronizingObject" />
        <altmember cref="T:System.IO.FileSystemEventArgs" />
        <altmember cref="T:System.IO.FileSystemEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="Created">
      <MemberSignature Language="C#" Value="public event System.IO.FileSystemEventHandler Created;" />
      <MemberSignature Language="ILAsm" Value=".event class System.IO.FileSystemEventHandler Created" />
      <MemberSignature Language="DocId" Value="E:System.IO.FileSystemWatcher.Created" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Created As FileSystemEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::IO::FileSystemEventHandler ^ Created;" />
      <MemberSignature Language="F#" Value="member this.Created : System.IO.FileSystemEventHandler " Usage="member this.Created : System.IO.FileSystemEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.IO.IODescription("Occurs when a file/directory creation matches the filter")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileSystemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1fc6c-228">Occurs when a file or directory in the specified <see cref="P:System.IO.FileSystemWatcher.Path" /> is created.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fc6c-228">Occurs when a file or directory in the specified <see cref="P:System.IO.FileSystemWatcher.Path" /> is created.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fc6c-229">Algumas ocorrências comuns, como copiar ou mover um arquivo ou diretório, não corresponde diretamente a um evento, mas essas ocorrências gerar eventos a serem gerados.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-229">Some common occurrences, such as copying or moving a file or directory, do not correspond directly to an event, but these occurrences do cause events to be raised.</span></span> <span data-ttu-id="1fc6c-230">Quando você copia um arquivo ou diretório, o sistema gera um <xref:System.IO.FileSystemWatcher.Created> evento no diretório ao qual o arquivo foi copiado, se esse diretório é que é inspecionado.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-230">When you copy a file or directory, the system raises a <xref:System.IO.FileSystemWatcher.Created> event in the directory to which the file was copied, if that directory is being watched.</span></span> <span data-ttu-id="1fc6c-231">Se o diretório do qual você copiou foi que é inspecionado por outra instância do <xref:System.IO.FileSystemWatcher>, nenhum evento será gerado.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-231">If the directory from which you copied was being watched by another instance of <xref:System.IO.FileSystemWatcher>, no event would be raised.</span></span> <span data-ttu-id="1fc6c-232">Por exemplo, crie duas instâncias de <xref:System.IO.FileSystemWatcher>.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-232">For example, you create two instances of <xref:System.IO.FileSystemWatcher>.</span></span> <span data-ttu-id="1fc6c-233">FileSystemWatcher1 é definido como assistir "C:\My Documents" e FileSystemWatcher2 é definido como assistir "C:\Your documentos".</span><span class="sxs-lookup"><span data-stu-id="1fc6c-233">FileSystemWatcher1 is set to watch "C:\My Documents", and FileSystemWatcher2 is set to watch "C:\Your Documents".</span></span> <span data-ttu-id="1fc6c-234">Se você copiar um arquivo de "Meus documentos" em "Seus documentos", um <xref:System.IO.FileSystemWatcher.Created> evento será gerado por FileSystemWatcher2, mas nenhum evento é gerado para FileSystemWatcher1.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-234">If you copy a file from "My Documents" into "Your Documents", a <xref:System.IO.FileSystemWatcher.Created> event will be raised by FileSystemWatcher2, but no event is raised for FileSystemWatcher1.</span></span> <span data-ttu-id="1fc6c-235">Ao contrário de copiar, mover um arquivo ou diretório aumentaria dois eventos.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-235">Unlike copying, moving a file or directory would raise two events.</span></span> <span data-ttu-id="1fc6c-236">Do exemplo anterior, se você moveu um arquivo de "Meus documentos" para "Seus documentos", um <xref:System.IO.FileSystemWatcher.Created> deve ser gerado por FileSystemWatcher2 e um <xref:System.IO.FileSystemWatcher.Deleted> deve ser gerado por FileSystemWatcher1.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-236">From the previous example, if you moved a file from "My Documents" to "Your Documents", a <xref:System.IO.FileSystemWatcher.Created> event would be raised by FileSystemWatcher2 and a <xref:System.IO.FileSystemWatcher.Deleted> event would be raised by FileSystemWatcher1.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1fc6c-237">Operações de sistema de arquivos comuns podem gerar mais de um evento.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-237">Common file system operations might raise more than one event.</span></span> <span data-ttu-id="1fc6c-238">Por exemplo, quando um arquivo é movido de um diretório para outro, várias <xref:System.IO.FileSystemWatcher.OnChanged%2A> e alguns <xref:System.IO.FileSystemWatcher.OnCreated%2A> e <xref:System.IO.FileSystemWatcher.OnDeleted%2A> eventos poderão ser gerados.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-238">For example, when a file is moved from one directory to another, several <xref:System.IO.FileSystemWatcher.OnChanged%2A> and some <xref:System.IO.FileSystemWatcher.OnCreated%2A> and <xref:System.IO.FileSystemWatcher.OnDeleted%2A> events might be raised.</span></span> <span data-ttu-id="1fc6c-239">Mover que um arquivo é uma operação complexa que consiste em várias operações simples, portanto, gerando vários eventos.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-239">Moving a file is a complex operation that consists of multiple simple operations, therefore raising multiple events.</span></span> <span data-ttu-id="1fc6c-240">Da mesma forma, alguns aplicativos (por exemplo, um software antivírus) podem causar a eventos do sistema de arquivos adicionais que são detectados pelo <xref:System.IO.FileSystemWatcher>.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-240">Likewise, some applications (for example, antivirus software) might cause additional file system events that are detected by <xref:System.IO.FileSystemWatcher>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1fc6c-241">A ordem na qual o <xref:System.IO.FileSystemWatcher.Created> é gerado em relação à outra <xref:System.IO.FileSystemWatcher> eventos podem ser alterado quando o <xref:System.IO.FileSystemWatcher.SynchronizingObject%2A> propriedade não é `null`.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-241">The order in which the <xref:System.IO.FileSystemWatcher.Created> event is raised in relation to the other <xref:System.IO.FileSystemWatcher> events may change when the <xref:System.IO.FileSystemWatcher.SynchronizingObject%2A> property is not `null`.</span></span>  
  
 <span data-ttu-id="1fc6c-242">O <xref:System.IO.FileSystemWatcher.OnCreated%2A> é gerado como um arquivo é criado.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-242">The <xref:System.IO.FileSystemWatcher.OnCreated%2A> event is raised as soon as a file is created.</span></span> <span data-ttu-id="1fc6c-243">Se um arquivo está sendo copiado ou transferido para um diretório monitorado, o <xref:System.IO.FileSystemWatcher.OnCreated%2A> evento ocorrerá imediatamente, seguido por um ou mais <xref:System.IO.FileSystemWatcher.OnChanged%2A> eventos.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-243">If a file is being copied or transferred into a watched directory, the <xref:System.IO.FileSystemWatcher.OnCreated%2A> event will be raised immediately, followed by one or more <xref:System.IO.FileSystemWatcher.OnChanged%2A> events.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1fc6c-244">O exemplo a seguir usa o <xref:System.IO.FileSystemWatcher.Created> evento para exibir o caminho do arquivo para o console sempre que o arquivo observado é criado.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-244">The following example uses the <xref:System.IO.FileSystemWatcher.Created> event to display the file path to the console whenever the watched file is created.</span></span>  
  
 [!code-cpp[Classic NotifyFilters Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic NotifyFilters Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NotifyFilters Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic NotifyFilters Example/CS/source.cs#1)]
 [!code-vb[Classic NotifyFilters Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic NotifyFilters Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.IO.FileSystemWatcher.Deleted" />
        <altmember cref="M:System.IO.FileSystemWatcher.OnDeleted(System.IO.FileSystemEventArgs)" />
        <altmember cref="P:System.IO.FileSystemWatcher.SynchronizingObject" />
        <altmember cref="T:System.IO.FileSystemEventArgs" />
        <altmember cref="T:System.IO.FileSystemEventHandler" />
        <altmember cref="M:System.IO.FileSystemWatcher.OnCreated(System.IO.FileSystemEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Deleted">
      <MemberSignature Language="C#" Value="public event System.IO.FileSystemEventHandler Deleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.IO.FileSystemEventHandler Deleted" />
      <MemberSignature Language="DocId" Value="E:System.IO.FileSystemWatcher.Deleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deleted As FileSystemEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::IO::FileSystemEventHandler ^ Deleted;" />
      <MemberSignature Language="F#" Value="member this.Deleted : System.IO.FileSystemEventHandler " Usage="member this.Deleted : System.IO.FileSystemEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.IO.IODescription("Occurs when a file/directory deletion matches the filter")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileSystemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1fc6c-245">Occurs when a file or directory in the specified <see cref="P:System.IO.FileSystemWatcher.Path" /> is deleted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fc6c-245">Occurs when a file or directory in the specified <see cref="P:System.IO.FileSystemWatcher.Path" /> is deleted.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fc6c-246">Algumas ocorrências comuns, como copiar ou mover um arquivo ou diretório, não corresponde diretamente a um evento, mas essas ocorrências gerar eventos a serem gerados.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-246">Some common occurrences, such as copying or moving a file or directory, do not correspond directly to an event, but these occurrences do cause events to be raised.</span></span> <span data-ttu-id="1fc6c-247">Quando você copia um arquivo ou diretório, o sistema gera um <xref:System.IO.FileSystemWatcher.Created> evento no diretório ao qual o arquivo foi copiado, se esse diretório é que é inspecionado.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-247">When you copy a file or directory, the system raises a <xref:System.IO.FileSystemWatcher.Created> event in the directory to which the file was copied, if that directory is being watched.</span></span> <span data-ttu-id="1fc6c-248">Se o diretório do qual você copiou foi que é inspecionado por outra instância do <xref:System.IO.FileSystemWatcher>, nenhum evento será gerado.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-248">If the directory from which you copied was being watched by another instance of <xref:System.IO.FileSystemWatcher>, no event would be raised.</span></span> <span data-ttu-id="1fc6c-249">Por exemplo, crie duas instâncias de <xref:System.IO.FileSystemWatcher>.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-249">For example, you create two instances of <xref:System.IO.FileSystemWatcher>.</span></span> <span data-ttu-id="1fc6c-250">FileSystemWatcher1 é definido como assistir "C:\My Documents" e FileSystemWatcher2 é definido como assistir "C:\Your documentos".</span><span class="sxs-lookup"><span data-stu-id="1fc6c-250">FileSystemWatcher1 is set to watch "C:\My Documents", and FileSystemWatcher2 is set to watch "C:\Your Documents".</span></span> <span data-ttu-id="1fc6c-251">Se você copiar um arquivo de "Meus documentos" em "Seus documentos", um <xref:System.IO.FileSystemWatcher.Created> evento será gerado por FileSystemWatcher2, mas nenhum evento é gerado para FileSystemWatcher1.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-251">If you copy a file from "My Documents" into "Your Documents", a <xref:System.IO.FileSystemWatcher.Created> event will be raised by FileSystemWatcher2, but no event is raised for FileSystemWatcher1.</span></span> <span data-ttu-id="1fc6c-252">Ao contrário de copiar, mover um arquivo ou diretório aumentaria dois eventos.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-252">Unlike copying, moving a file or directory would raise two events.</span></span> <span data-ttu-id="1fc6c-253">Do exemplo anterior, se você moveu um arquivo de "Meus documentos" para "Seus documentos", um <xref:System.IO.FileSystemWatcher.Created> deve ser gerado por FileSystemWatcher2 e um <xref:System.IO.FileSystemWatcher.Deleted> deve ser gerado por FileSystemWatcher1.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-253">From the previous example, if you moved a file from "My Documents" to "Your Documents", a <xref:System.IO.FileSystemWatcher.Created> event would be raised by FileSystemWatcher2 and a <xref:System.IO.FileSystemWatcher.Deleted> event would be raised by FileSystemWatcher1.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1fc6c-254">Operações de sistema de arquivos comuns podem gerar mais de um evento.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-254">Common file system operations might raise more than one event.</span></span> <span data-ttu-id="1fc6c-255">Por exemplo, quando um arquivo é movido de um diretório para outro, várias <xref:System.IO.FileSystemWatcher.OnChanged%2A> e alguns <xref:System.IO.FileSystemWatcher.OnCreated%2A> e <xref:System.IO.FileSystemWatcher.OnDeleted%2A> eventos poderão ser gerados.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-255">For example, when a file is moved from one directory to another, several <xref:System.IO.FileSystemWatcher.OnChanged%2A> and some <xref:System.IO.FileSystemWatcher.OnCreated%2A> and <xref:System.IO.FileSystemWatcher.OnDeleted%2A> events might be raised.</span></span> <span data-ttu-id="1fc6c-256">Mover que um arquivo é uma operação complexa que consiste em várias operações simples, portanto, gerando vários eventos.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-256">Moving a file is a complex operation that consists of multiple simple operations, therefore raising multiple events.</span></span> <span data-ttu-id="1fc6c-257">Da mesma forma, alguns aplicativos (por exemplo, um software antivírus) podem causar a eventos do sistema de arquivos adicionais que são detectados pelo <xref:System.IO.FileSystemWatcher>.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-257">Likewise, some applications (for example, antivirus software) might cause additional file system events that are detected by <xref:System.IO.FileSystemWatcher>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1fc6c-258">A ordem na qual o <xref:System.IO.FileSystemWatcher.Deleted> é gerado em relação à outra <xref:System.IO.FileSystemWatcher> eventos podem ser alterado quando o <xref:System.IO.FileSystemWatcher.SynchronizingObject%2A> propriedade não é `null`.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-258">The order in which the <xref:System.IO.FileSystemWatcher.Deleted> event is raised in relation to the other <xref:System.IO.FileSystemWatcher> events may change when the <xref:System.IO.FileSystemWatcher.SynchronizingObject%2A> property is not `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1fc6c-259">O exemplo a seguir usa o <xref:System.IO.FileSystemWatcher.Deleted> evento para exibir o caminho do arquivo para o console sempre que o arquivo observado é excluído.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-259">The following example uses the <xref:System.IO.FileSystemWatcher.Deleted> event to display the file path to the console whenever the watched file is deleted.</span></span>  
  
 [!code-cpp[Classic NotifyFilters Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic NotifyFilters Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NotifyFilters Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic NotifyFilters Example/CS/source.cs#1)]
 [!code-vb[Classic NotifyFilters Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic NotifyFilters Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.IO.FileSystemWatcher.Created" />
        <altmember cref="M:System.IO.FileSystemWatcher.OnCreated(System.IO.FileSystemEventArgs)" />
        <altmember cref="P:System.IO.FileSystemWatcher.SynchronizingObject" />
        <altmember cref="T:System.IO.FileSystemEventArgs" />
        <altmember cref="T:System.IO.FileSystemEventHandler" />
        <altmember cref="M:System.IO.FileSystemWatcher.OnDeleted(System.IO.FileSystemEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public virtual void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemWatcher.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="override this.Dispose : unit -&gt; unit" Usage="fileSystemWatcher.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemWatcher.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="fileSystemWatcher.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="1fc6c-260">
            <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fc6c-260">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1fc6c-261">Releases the unmanaged resources used by the <see cref="T:System.IO.FileSystemWatcher" /> and optionally releases the managed resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fc6c-261">Releases the unmanaged resources used by the <see cref="T:System.IO.FileSystemWatcher" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fc6c-262">Este método é chamado pelo método público <xref:System.ComponentModel.Component.Dispose%2A> e pelo método <xref:System.Object.Finalize%2A>.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-262">This method is called by the public <xref:System.ComponentModel.Component.Dispose%2A> method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="1fc6c-263"><xref:System.ComponentModel.Component.Dispose%2A> invoca o método <xref:System.IO.FileSystemWatcher.Dispose%2A> protegido com o parâmetro `disposing` definido como `true`.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-263"><xref:System.ComponentModel.Component.Dispose%2A> invokes the protected <xref:System.IO.FileSystemWatcher.Dispose%2A> method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="1fc6c-264"><xref:System.Object.Finalize%2A> invoca <xref:System.IO.FileSystemWatcher.Dispose%2A> com `disposing` definido como `false`.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-264"><xref:System.Object.Finalize%2A> invokes <xref:System.IO.FileSystemWatcher.Dispose%2A> with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="1fc6c-265">Quando o `disposing` parâmetro é `true`, esse método libera todos os recursos mantidos por qualquer objeto gerenciado que este <xref:System.IO.Compression.DeflateStream> referências.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-265">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.IO.Compression.DeflateStream> references.</span></span> <span data-ttu-id="1fc6c-266">Este método invoca o método <xref:System.ComponentModel.Component.Dispose%2A> de cada objeto referenciado.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-266">This method invokes the <xref:System.ComponentModel.Component.Dispose%2A> method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="1fc6c-267">
            <para>
              <see cref="M:System.ComponentModel.Component.Dispose" /> pode ser chamado várias vezes por outros objetos. Ao substituir <see cref="M:System.IO.FileSystemWatcher.Dispose(System.Boolean)" /> cuidado para não fazer referência a objetos que têm foi descartados anteriormente em uma chamada anterior para <see cref="M:System.ComponentModel.Component.Dispose" />. Para obter mais informações sobre como implementar <see cref="M:System.IO.FileSystemWatcher.Dispose(System.Boolean)" />, consulte [implementando um Method](~/docs/standard/garbage-collection/implementing-dispose.md) Dispose.  Para obter mais informações sobre <see cref="M:System.ComponentModel.Component.Dispose" /> e <see cref="M:System.Object.Finalize" />, consulte [limpeza de backup gerenciado Resources](~/docs/standard/garbage-collection/unmanaged.md).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="1fc6c-267">
              <para>
                <see cref="M:System.ComponentModel.Component.Dispose" /> can be called multiple times by other objects. When overriding <see cref="M:System.IO.FileSystemWatcher.Dispose(System.Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see cref="M:System.ComponentModel.Component.Dispose" />. For more information about how to implement <see cref="M:System.IO.FileSystemWatcher.Dispose(System.Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  For more information about <see cref="M:System.ComponentModel.Component.Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="EnableRaisingEvents">
      <MemberSignature Language="C#" Value="public bool EnableRaisingEvents { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableRaisingEvents" />
      <MemberSignature Language="DocId" Value="P:System.IO.FileSystemWatcher.EnableRaisingEvents" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableRaisingEvents As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableRaisingEvents { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableRaisingEvents : bool with get, set" Usage="System.IO.FileSystemWatcher.EnableRaisingEvents" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.IO.IODescription("Flag to indicate if this instance is active")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1fc6c-268">Gets or sets a value indicating whether the component is enabled.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fc6c-268">Gets or sets a value indicating whether the component is enabled.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1fc6c-269">
            <see langword="true" /> se o componente estiver habilitado; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fc6c-269">
              <see langword="true" /> if the component is enabled; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="1fc6c-270">O padrão é <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fc6c-270">The default is <see langword="false" />.</span>
          </span>
          <span data-ttu-id="1fc6c-271">Se você estiver usando o componente em um designer em [! INCLUDE[vsprvslong](~/Includes/vsprvslong-MD.MD)], o padrão é <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fc6c-271">If you are using the component on a designer in [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)], the default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fc6c-272">O componente não gerará eventos, a menos que você defina <xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A> para `true`.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-272">The component will not raise events unless you set <xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A> to `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1fc6c-273">O componente não observará o diretório especificado até o <xref:System.IO.FileSystemWatcher.Path%2A> propriedade foi definida e <xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A> é `true`.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-273">The component will not watch the specified directory until the <xref:System.IO.FileSystemWatcher.Path%2A> property has been set and <xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A> is `true`.</span></span>  
  
 <span data-ttu-id="1fc6c-274">O <xref:System.IO.FileSystemWatcher.WaitForChanged%2A> método permite que os manipuladores de eventos a ser invocado para responder às alterações de arquivo, mesmo se essa propriedade é definida como `false`.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-274">The <xref:System.IO.FileSystemWatcher.WaitForChanged%2A> method allows event handlers to be invoked to respond to file changes even if this property is set to `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1fc6c-275">O exemplo a seguir cria um <xref:System.IO.FileSystemWatcher> para inspecionar o diretório especificado em tempo de execução.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-275">The following example creates a <xref:System.IO.FileSystemWatcher> to watch the directory specified at run time.</span></span> <span data-ttu-id="1fc6c-276">O componente é definido para detectar alterações em `LastWrite` e `LastAccess` do tempo, a criação, exclusão ou renomeação de arquivos de texto no diretório.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-276">The component is set to watch for changes in `LastWrite` and `LastAccess` time, the creation, deletion, or renaming of text files in the directory.</span></span> <span data-ttu-id="1fc6c-277">Se um arquivo for alterado, criado ou excluído, o caminho para o arquivo imprime no console.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-277">If a file is changed, created, or deleted, the path to the file prints to the console.</span></span> <span data-ttu-id="1fc6c-278">Quando um arquivo é renomeado, os caminhos de novos e antigos de impressão para o console.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-278">When a file is renamed, the old and new paths print to the console.</span></span>  
  
 <span data-ttu-id="1fc6c-279">Use o <xref:System.Diagnostics> e <xref:System.IO> namespaces para este exemplo.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-279">Use the <xref:System.Diagnostics> and <xref:System.IO> namespaces for this example.</span></span>  
  
 [!code-cpp[Classic NotifyFilters Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic NotifyFilters Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NotifyFilters Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic NotifyFilters Example/CS/source.cs#1)]
 [!code-vb[Classic NotifyFilters Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic NotifyFilters Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="1fc6c-280">The <see cref="T:System.IO.FileSystemWatcher" /> object has been disposed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fc6c-280">The <see cref="T:System.IO.FileSystemWatcher" /> object has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="1fc6c-281">The current operating system is not Microsoft Windows NT or later.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fc6c-281">The current operating system is not Microsoft Windows NT or later.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="1fc6c-282">The directory specified in <see cref="P:System.IO.FileSystemWatcher.Path" /> could not be found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fc6c-282">The directory specified in <see cref="P:System.IO.FileSystemWatcher.Path" /> could not be found.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1fc6c-283">
            <see cref="P:System.IO.FileSystemWatcher.Path" /> has not been set or is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fc6c-283">
              <see cref="P:System.IO.FileSystemWatcher.Path" /> has not been set or is invalid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndInit">
      <MemberSignature Language="C#" Value="public void EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemWatcher.EndInit" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndInit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndInit();" />
      <MemberSignature Language="F#" Value="abstract member EndInit : unit -&gt; unit&#xA;override this.EndInit : unit -&gt; unit" Usage="fileSystemWatcher.EndInit " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.EndInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1fc6c-284">Ends the initialization of a <see cref="T:System.IO.FileSystemWatcher" /> used on a form or used by another component.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fc6c-284">Ends the initialization of a <see cref="T:System.IO.FileSystemWatcher" /> used on a form or used by another component.</span>
          </span>
          <span data-ttu-id="1fc6c-285">The initialization occurs at run time.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fc6c-285">The initialization occurs at run time.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fc6c-286">O [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] design ambiente usa esse método para terminar a inicialização de um componente usado em um formulário ou usado por outro componente.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-286">The [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] design environment uses this method to end the initialization of a component used on a form or used by another component.</span></span> <span data-ttu-id="1fc6c-287">O <xref:System.IO.FileSystemWatcher.BeginInit%2A> método inicia a inicialização.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-287">The <xref:System.IO.FileSystemWatcher.BeginInit%2A> method starts the initialization.</span></span> <span data-ttu-id="1fc6c-288">Usando o <xref:System.IO.FileSystemWatcher.BeginInit%2A> e <xref:System.IO.FileSystemWatcher.EndInit%2A> métodos impede que o controle que está sendo usada antes de ser totalmente inicializado.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-288">Using the <xref:System.IO.FileSystemWatcher.BeginInit%2A> and <xref:System.IO.FileSystemWatcher.EndInit%2A> methods prevents the control from being used before it is fully initialized.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IO.FileSystemWatcher.BeginInit" />
      </Docs>
    </Member>
    <Member MemberName="Error">
      <MemberSignature Language="C#" Value="public event System.IO.ErrorEventHandler Error;" />
      <MemberSignature Language="ILAsm" Value=".event class System.IO.ErrorEventHandler Error" />
      <MemberSignature Language="DocId" Value="E:System.IO.FileSystemWatcher.Error" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Error As ErrorEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::IO::ErrorEventHandler ^ Error;" />
      <MemberSignature Language="F#" Value="member this.Error : System.IO.ErrorEventHandler " Usage="member this.Error : System.IO.ErrorEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.ErrorEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1fc6c-289">Occurs when the instance of <see cref="T:System.IO.FileSystemWatcher" /> is unable to continue monitoring changes or when the internal buffer overflows.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fc6c-289">Occurs when the instance of <see cref="T:System.IO.FileSystemWatcher" /> is unable to continue monitoring changes or when the internal buffer overflows.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fc6c-290">Esse evento é gerado sempre que algo impede o <xref:System.IO.FileSystemWatcher> objeto de monitoramento de alterações.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-290">This event is raised whenever something prevents the <xref:System.IO.FileSystemWatcher> object from monitoring changes.</span></span> <span data-ttu-id="1fc6c-291">Por exemplo, se o objeto está monitorando as alterações em um diretório remoto e a conexão a esse diretório é perdido, o <xref:System.IO.FileSystemWatcher.Error> é gerado.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-291">For example, if the object is monitoring changes in a remote directory and the connection to that directory is lost, the <xref:System.IO.FileSystemWatcher.Error> event is raised.</span></span>  
  
 <span data-ttu-id="1fc6c-292">O sistema notifica sobre alterações de arquivo e armazena essas alterações em um buffer que o componente cria e passa para as APIs.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-292">The system notifies you of file changes, and it stores those changes in a buffer that the component creates and passes to the APIs.</span></span> <span data-ttu-id="1fc6c-293">Se houver muitas alterações em um curto período de tempo, o buffer pode estourar.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-293">If there are many changes in a short time, the buffer can overflow.</span></span> <span data-ttu-id="1fc6c-294">Isso faz com que o componente de perder o controle de alterações no diretório e somente ele fornecerá notificação ampla.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-294">This causes the component to lose track of changes in the directory, and it will only provide blanket notification.</span></span> <span data-ttu-id="1fc6c-295">Aumentar o tamanho do buffer é caro, porque se trata de não paginado da memória que não pode ser trocada por disco, portanto mantenha o buffer tão pequeno quanto possível.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-295">Increasing the size of the buffer is expensive, because it comes from non paged memory that cannot be swapped out to disk, so keep the buffer as small as possible.</span></span> <span data-ttu-id="1fc6c-296">Para evitar um estouro de buffer, use o <xref:System.IO.FileSystemWatcher.NotifyFilter%2A>, <xref:System.IO.FileSystemWatcher.Filter%2A>, e <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A> notificações de alteração de propriedades para filtrar indesejados.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-296">To avoid a buffer overflow, use the <xref:System.IO.FileSystemWatcher.NotifyFilter%2A>, <xref:System.IO.FileSystemWatcher.Filter%2A>, and <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A> properties to filter out unwanted change notifications.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1fc6c-297">Operações de sistema de arquivos comuns podem gerar mais de um evento.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-297">Common file system operations might raise more than one event.</span></span> <span data-ttu-id="1fc6c-298">Por exemplo, quando um arquivo é movido de um diretório para outro, várias <xref:System.IO.FileSystemWatcher.OnChanged%2A> e alguns <xref:System.IO.FileSystemWatcher.OnCreated%2A> e <xref:System.IO.FileSystemWatcher.OnDeleted%2A> eventos poderão ser gerados.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-298">For example, when a file is moved from one directory to another, several <xref:System.IO.FileSystemWatcher.OnChanged%2A> and some <xref:System.IO.FileSystemWatcher.OnCreated%2A> and <xref:System.IO.FileSystemWatcher.OnDeleted%2A> events might be raised.</span></span> <span data-ttu-id="1fc6c-299">Mover que um arquivo é uma operação complexa que consiste em várias operações simples, portanto, gerando vários eventos.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-299">Moving a file is a complex operation that consists of multiple simple operations, therefore raising multiple events.</span></span> <span data-ttu-id="1fc6c-300">Da mesma forma, alguns aplicativos (por exemplo, um software antivírus) podem causar a eventos do sistema de arquivos adicionais que são detectados pelo <xref:System.IO.FileSystemWatcher>.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-300">Likewise, some applications (for example, antivirus software) might cause additional file system events that are detected by <xref:System.IO.FileSystemWatcher>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.FileSystemWatcher.NotifyFilter" />
        <altmember cref="T:System.IO.ErrorEventArgs" />
        <altmember cref="T:System.IO.ErrorEventHandler" />
        <altmember cref="P:System.IO.FileSystemWatcher.Filter" />
        <altmember cref="P:System.IO.FileSystemWatcher.IncludeSubdirectories" />
        <altmember cref="M:System.IO.FileSystemWatcher.OnError(System.IO.ErrorEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public string Filter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Filter" />
      <MemberSignature Language="DocId" Value="P:System.IO.FileSystemWatcher.Filter" />
      <MemberSignature Language="VB.NET" Value="Public Property Filter As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Filter { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Filter : string with get, set" Usage="System.IO.FileSystemWatcher.Filter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("*.*")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RecommendedAsConfigurable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.IO.IODescription("File name filter pattern")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1fc6c-301">Gets or sets the filter string used to determine what files are monitored in a directory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fc6c-301">Gets or sets the filter string used to determine what files are monitored in a directory.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1fc6c-302">Cadeia de caracteres de filtro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fc6c-302">The filter string.</span>
          </span>
          <span data-ttu-id="1fc6c-303">O padrão é "*. \*"(Inspeciona todos os arquivos.)</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fc6c-303">The default is "*.\*" (Watches all files.)</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fc6c-304">Para assistir a alterações em todos os arquivos, defina o <xref:System.IO.FileSystemWatcher.Filter%2A> propriedade como uma cadeia de caracteres vazia ("").</span><span class="sxs-lookup"><span data-stu-id="1fc6c-304">To watch changes in all files, set the <xref:System.IO.FileSystemWatcher.Filter%2A> property to an empty string ("").</span></span> <span data-ttu-id="1fc6c-305">Para assistir a um arquivo específico, defina o <xref:System.IO.FileSystemWatcher.Filter%2A> propriedade para o nome do arquivo.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-305">To watch a specific file, set the <xref:System.IO.FileSystemWatcher.Filter%2A> property to the file name.</span></span> <span data-ttu-id="1fc6c-306">Por exemplo, para detectar alterações no arquivo doc, defina o <xref:System.IO.FileSystemWatcher.Filter%2A> propriedade como "Doc".</span><span class="sxs-lookup"><span data-stu-id="1fc6c-306">For example, to watch for changes in the file MyDoc.txt, set the <xref:System.IO.FileSystemWatcher.Filter%2A> property to "MyDoc.txt".</span></span> <span data-ttu-id="1fc6c-307">Você também pode observar as alterações em um determinado tipo de arquivo.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-307">You can also watch for changes in a certain type of file.</span></span> <span data-ttu-id="1fc6c-308">Por exemplo, para detectar alterações em arquivos de texto, defina o <xref:System.IO.FileSystemWatcher.Filter%2A> propriedade como "\*.txt".</span><span class="sxs-lookup"><span data-stu-id="1fc6c-308">For example, to watch for changes in any text files, set the <xref:System.IO.FileSystemWatcher.Filter%2A> property to "\*.txt".</span></span> <span data-ttu-id="1fc6c-309">Uso de vários filtros, como "\*. txt&#124;\*. doc" não tem suporte.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-309">Use of multiple filters such as "\*.txt&#124;\*.doc" is not supported.</span></span>  
  
 <span data-ttu-id="1fc6c-310">O <xref:System.IO.FileSystemWatcher.Filter%2A> propriedade pode ser alterada após o <xref:System.IO.FileSystemWatcher> objeto começou a receber eventos.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-310">The <xref:System.IO.FileSystemWatcher.Filter%2A> property can be changed after the <xref:System.IO.FileSystemWatcher> object has started receiving events.</span></span>  
  
 <span data-ttu-id="1fc6c-311">Para obter mais informações sobre como filtrar notificações indesejados, consulte o <xref:System.IO.FileSystemWatcher.NotifyFilter%2A>, <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A>, e <xref:System.IO.FileSystemWatcher.InternalBufferSize%2A> propriedades.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-311">For more information about filtering out unwanted notifications, see the <xref:System.IO.FileSystemWatcher.NotifyFilter%2A>, <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A>, and <xref:System.IO.FileSystemWatcher.InternalBufferSize%2A> properties.</span></span>  
  
 <span data-ttu-id="1fc6c-312"><xref:System.IO.FileSystemWatcher.Filter%2A> aceita caracteres curinga para arquivos correspondentes, conforme mostrado nos exemplos a seguir.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-312"><xref:System.IO.FileSystemWatcher.Filter%2A> accepts wildcards for matching files, as shown in the following examples.</span></span>  
  
|<span data-ttu-id="1fc6c-313">Cadeia de caracteres de filtro</span><span class="sxs-lookup"><span data-stu-id="1fc6c-313">Filter string</span></span>|<span data-ttu-id="1fc6c-314">Inspeciona os seguintes arquivos</span><span class="sxs-lookup"><span data-stu-id="1fc6c-314">Watches the following files</span></span>|  
|-------------------|---------------------------------|  
|<span data-ttu-id="1fc6c-315">*.\*</span><span class="sxs-lookup"><span data-stu-id="1fc6c-315">*.\*</span></span>|<span data-ttu-id="1fc6c-316">Todos os arquivos (padrão).</span><span class="sxs-lookup"><span data-stu-id="1fc6c-316">All files (default).</span></span> <span data-ttu-id="1fc6c-317">Uma cadeia de caracteres vazia ("") também detecta todos os arquivos.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-317">An empty string ("") also watches all files.</span></span>|  
|<span data-ttu-id="1fc6c-318">\*.txt</span><span class="sxs-lookup"><span data-stu-id="1fc6c-318">\*.txt</span></span>|<span data-ttu-id="1fc6c-319">Todos os arquivos com uma extensão "txt".</span><span class="sxs-lookup"><span data-stu-id="1fc6c-319">All files with a "txt" extension.</span></span>|  
|<span data-ttu-id="1fc6c-320">\*recipe.doc</span><span class="sxs-lookup"><span data-stu-id="1fc6c-320">\*recipe.doc</span></span>|<span data-ttu-id="1fc6c-321">Todos os arquivos que terminam em "receita" com uma extensão de "documento".</span><span class="sxs-lookup"><span data-stu-id="1fc6c-321">All files ending in "recipe" with a "doc" extension.</span></span>|  
|<span data-ttu-id="1fc6c-322">win\*.xml</span><span class="sxs-lookup"><span data-stu-id="1fc6c-322">win\*.xml</span></span>|<span data-ttu-id="1fc6c-323">Todos os arquivos que começam com "win" com a extensão "xml".</span><span class="sxs-lookup"><span data-stu-id="1fc6c-323">All files beginning with "win" with an "xml" extension.</span></span>|  
|<span data-ttu-id="1fc6c-324">Vendas \* 200?. xls</span><span class="sxs-lookup"><span data-stu-id="1fc6c-324">Sales\*200?.xls</span></span>|<span data-ttu-id="1fc6c-325">Coincide com o seguinte:</span><span class="sxs-lookup"><span data-stu-id="1fc6c-325">Matches the following:</span></span><br /><br /> <span data-ttu-id="1fc6c-326">Julho de vendas 2001.xlsSales agosto 2002.xlsSales março 2004.xls</span><span class="sxs-lookup"><span data-stu-id="1fc6c-326">Sales July 2001.xlsSales Aug 2002.xlsSales March 2004.xls</span></span><br /><br /> <span data-ttu-id="1fc6c-327">mas não coincide com:</span><span class="sxs-lookup"><span data-stu-id="1fc6c-327">but does not match:</span></span><br /><br /> <span data-ttu-id="1fc6c-328">Novembro de vendas 1999.xls</span><span class="sxs-lookup"><span data-stu-id="1fc6c-328">Sales Nov 1999.xls</span></span>|  
|<span data-ttu-id="1fc6c-329">MyReport.Doc</span><span class="sxs-lookup"><span data-stu-id="1fc6c-329">MyReport.Doc</span></span>|<span data-ttu-id="1fc6c-330">Inspeciona somente MyReport</span><span class="sxs-lookup"><span data-stu-id="1fc6c-330">Watches only MyReport.doc</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1fc6c-331">O exemplo a seguir cria um <xref:System.IO.FileSystemWatcher> para inspecionar o diretório especificado em tempo de execução.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-331">The following example creates a <xref:System.IO.FileSystemWatcher> to watch the directory specified at run time.</span></span> <span data-ttu-id="1fc6c-332">O componente é definido para detectar alterações em `LastWrite` e `LastAccess` do tempo, a criação, exclusão ou renomeação de arquivos de texto no diretório.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-332">The component is set to watch for changes in `LastWrite` and `LastAccess` time, the creation, deletion, or renaming of text files in the directory.</span></span> <span data-ttu-id="1fc6c-333">Se um arquivo for alterado, criado ou excluído, o caminho para o arquivo imprime no console.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-333">If a file is changed, created, or deleted, the path to the file prints to the console.</span></span> <span data-ttu-id="1fc6c-334">Quando um arquivo é renomeado, os caminhos de novos e antigos de impressão para o console.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-334">When a file is renamed, the old and new paths print to the console.</span></span>  
  
 <span data-ttu-id="1fc6c-335">Use o <xref:System.Diagnostics> e <xref:System.IO> namespaces para este exemplo.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-335">Use the <xref:System.Diagnostics> and <xref:System.IO> namespaces for this example.</span></span>  
  
 [!code-cpp[Classic NotifyFilters Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic NotifyFilters Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NotifyFilters Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic NotifyFilters Example/CS/source.cs#1)]
 [!code-vb[Classic NotifyFilters Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic NotifyFilters Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.FileSystemWatcher.NotifyFilter" />
        <altmember cref="P:System.IO.FileSystemWatcher.IncludeSubdirectories" />
        <altmember cref="P:System.IO.FileSystemWatcher.InternalBufferSize" />
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~FileSystemWatcher ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemWatcher.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!FileSystemWatcher ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="fileSystemWatcher.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeSubdirectories">
      <MemberSignature Language="C#" Value="public bool IncludeSubdirectories { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeSubdirectories" />
      <MemberSignature Language="DocId" Value="P:System.IO.FileSystemWatcher.IncludeSubdirectories" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeSubdirectories As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeSubdirectories { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IncludeSubdirectories : bool with get, set" Usage="System.IO.FileSystemWatcher.IncludeSubdirectories" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.IO.IODescription("Flag to indicate we want to watch subdirectories")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1fc6c-336">Gets or sets a value indicating whether subdirectories within the specified path should be monitored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fc6c-336">Gets or sets a value indicating whether subdirectories within the specified path should be monitored.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1fc6c-337">
            <see langword="true" /> se você quiser monitorar subdiretórios; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fc6c-337">
              <see langword="true" /> if you want to monitor subdirectories; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="1fc6c-338">O padrão é <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fc6c-338">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fc6c-339">Definir <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A> para `true` quando você deseja observar as notificações de alteração para arquivos e pastas contidas no diretório especificado por meio de <xref:System.IO.FileSystemWatcher.Path%2A> propriedade e seus subdiretórios.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-339">Set <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A> to `true` when you want to watch for change notifications for files and directories contained within the directory specified through the <xref:System.IO.FileSystemWatcher.Path%2A> property, and its subdirectories.</span></span> <span data-ttu-id="1fc6c-340">Definindo o <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A> propriedade `false` ajuda a reduzir o número de notificações enviadas para o buffer interno.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-340">Setting the <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A> property to `false` helps reduce the number of notifications sent to the internal buffer.</span></span> <span data-ttu-id="1fc6c-341">Para obter mais informações sobre a filtragem de notificações indesejadas, consulte o <xref:System.IO.FileSystemWatcher.NotifyFilter%2A> e <xref:System.IO.FileSystemWatcher.InternalBufferSize%2A> propriedades.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-341">For more information on filtering out unwanted notifications, see the <xref:System.IO.FileSystemWatcher.NotifyFilter%2A> and <xref:System.IO.FileSystemWatcher.InternalBufferSize%2A> properties.</span></span>  
  
 <span data-ttu-id="1fc6c-342">Quando `true`, <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A> é recursiva através da árvore inteira sub, não apenas os diretórios filhos imediatos.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-342">When `true`, <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A> is recursive through the entire sub tree, not just the immediate child directories.</span></span> <span data-ttu-id="1fc6c-343">Retorna o caminho relativo para um arquivo ou diretório dentro da árvore de sub o <xref:System.IO.FileSystemEventArgs.Name%2A> propriedade de <xref:System.IO.FileSystemEventArgs> e o <xref:System.IO.RenamedEventArgs.OldName%2A> propriedade <xref:System.IO.RenamedEventArgs>, com base nas alterações que você está procurando.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-343">The relative path to a file or directory within the sub tree returns in the <xref:System.IO.FileSystemEventArgs.Name%2A> property of <xref:System.IO.FileSystemEventArgs> and the <xref:System.IO.RenamedEventArgs.OldName%2A> property of <xref:System.IO.RenamedEventArgs>, depending on changes you are watching for.</span></span> <span data-ttu-id="1fc6c-344">Você pode obter o caminho totalmente qualificado do <xref:System.IO.FileSystemEventArgs.FullPath%2A> propriedade de <xref:System.IO.FileSystemEventArgs> e o <xref:System.IO.RenamedEventArgs.OldFullPath%2A> propriedade <xref:System.IO.RenamedEventArgs>, de acordo com as alterações que você está procurando.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-344">You can get the fully qualified path from the <xref:System.IO.FileSystemEventArgs.FullPath%2A> property of <xref:System.IO.FileSystemEventArgs> and the <xref:System.IO.RenamedEventArgs.OldFullPath%2A> property of <xref:System.IO.RenamedEventArgs>, depending on the changes you are watching for.</span></span>  
  
 <span data-ttu-id="1fc6c-345">Se um diretório é criado na árvore do diretório que você está observando, sub e <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A> é `true`, esse diretório automaticamente será observado.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-345">If a directory is created in the sub tree of the directory you are watching, and <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A> is `true`, that directory will automatically be watched.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.FileSystemWatcher.NotifyFilter" />
        <altmember cref="T:System.IO.FileSystemEventArgs" />
        <altmember cref="P:System.IO.FileSystemWatcher.Filter" />
        <altmember cref="P:System.IO.FileSystemEventArgs.FullPath" />
        <altmember cref="P:System.IO.RenamedEventArgs.OldFullPath" />
        <altmember cref="P:System.IO.FileSystemWatcher.InternalBufferSize" />
        <altmember cref="P:System.IO.FileSystemEventArgs.Name" />
        <altmember cref="P:System.IO.RenamedEventArgs.OldName" />
        <altmember cref="P:System.IO.FileSystemWatcher.Path" />
        <altmember cref="T:System.IO.RenamedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="InternalBufferSize">
      <MemberSignature Language="C#" Value="public int InternalBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 InternalBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.IO.FileSystemWatcher.InternalBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property InternalBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int InternalBufferSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.InternalBufferSize : int with get, set" Usage="System.IO.FileSystemWatcher.InternalBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(8192)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1fc6c-346">Gets or sets the size (in bytes) of the internal buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fc6c-346">Gets or sets the size (in bytes) of the internal buffer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1fc6c-347">O tamanho do buffer interno em bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fc6c-347">The internal buffer size in bytes.</span>
          </span>
          <span data-ttu-id="1fc6c-348">O padrão é 8192 (8 KB).</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fc6c-348">The default is 8192 (8 KB).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fc6c-349">Você pode definir o buffer de 4 KB ou maior, mas ele não deve exceder 64 KB.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-349">You can set the buffer to 4 KB or larger, but it must not exceed 64 KB.</span></span> <span data-ttu-id="1fc6c-350">Se você tentar definir o <xref:System.IO.FileSystemWatcher.InternalBufferSize%2A> propriedade para menos de 4096 bytes, o valor será descartada e o <xref:System.IO.FileSystemWatcher.InternalBufferSize%2A> estiver definida como 4096 bytes.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-350">If you try to set the <xref:System.IO.FileSystemWatcher.InternalBufferSize%2A> property to less than 4096 bytes, your value is discarded and the <xref:System.IO.FileSystemWatcher.InternalBufferSize%2A> property is set to 4096 bytes.</span></span> <span data-ttu-id="1fc6c-351">Para melhor desempenho, use um múltiplo de 4 KB em computadores baseados em Intel.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-351">For best performance, use a multiple of 4 KB on Intel-based computers.</span></span>  
  
 <span data-ttu-id="1fc6c-352">O sistema notifica o componente de alterações de arquivo e armazena essas alterações em um buffer que o componente cria e passa para as APIs.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-352">The system notifies the component of file changes, and it stores those changes in a buffer the component creates and passes to the APIs.</span></span> <span data-ttu-id="1fc6c-353">Cada evento pode usar até 16 bytes de memória, não incluindo o nome do arquivo.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-353">Each event can use up to 16 bytes of memory, not including the file name.</span></span> <span data-ttu-id="1fc6c-354">Se houver muitas alterações em um curto período de tempo, o buffer pode estourar.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-354">If there are many changes in a short time, the buffer can overflow.</span></span> <span data-ttu-id="1fc6c-355">Isso faz com que o componente de perder o controle de alterações no diretório e somente ele fornecerá notificação ampla.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-355">This causes the component to lose track of changes in the directory, and it will only provide blanket notification.</span></span> <span data-ttu-id="1fc6c-356">Pode impedir o aumento do tamanho do buffer de eventos de alteração do sistema de arquivo ausente.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-356">Increasing the size of the buffer can prevent missing file system change events.</span></span> <span data-ttu-id="1fc6c-357">No entanto, aumentando o tamanho do buffer é caro, porque se trata de memória não-paginável que não pode ser trocada por disco, mantenha o buffer tão pequenas quanto possível.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-357">However, increasing buffer size is expensive, because it comes from non-paged memory that cannot be swapped out to disk, so keep the buffer as small as possible.</span></span> <span data-ttu-id="1fc6c-358">Para evitar um estouro de buffer, use o <xref:System.IO.FileSystemWatcher.NotifyFilter%2A> e <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A> notificações de alteração de propriedades para filtrar indesejados.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-358">To avoid a buffer overflow, use the <xref:System.IO.FileSystemWatcher.NotifyFilter%2A> and <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A> properties to filter out unwanted change notifications.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.FileSystemWatcher.NotifyFilter" />
        <altmember cref="M:System.IO.FileSystemWatcher.OnError(System.IO.ErrorEventArgs)" />
        <altmember cref="P:System.IO.FileSystemWatcher.Filter" />
        <altmember cref="P:System.IO.FileSystemWatcher.IncludeSubdirectories" />
        <altmember cref="T:System.IO.InternalBufferOverflowException" />
      </Docs>
    </Member>
    <Member MemberName="NotifyFilter">
      <MemberSignature Language="C#" Value="public System.IO.NotifyFilters NotifyFilter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.NotifyFilters NotifyFilter" />
      <MemberSignature Language="DocId" Value="P:System.IO.FileSystemWatcher.NotifyFilter" />
      <MemberSignature Language="VB.NET" Value="Public Property NotifyFilter As NotifyFilters" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::NotifyFilters NotifyFilter { System::IO::NotifyFilters get(); void set(System::IO::NotifyFilters value); };" />
      <MemberSignature Language="F#" Value="member this.NotifyFilter : System.IO.NotifyFilters with get, set" Usage="System.IO.FileSystemWatcher.NotifyFilter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.IO.IODescription("Flag to indicate which change event we want to monitor")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.NotifyFilters</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1fc6c-359">Gets or sets the type of changes to watch for.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fc6c-359">Gets or sets the type of changes to watch for.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1fc6c-360">Um dos valores de <see cref="T:System.IO.NotifyFilters" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fc6c-360">One of the <see cref="T:System.IO.NotifyFilters" /> values.</span>
          </span>
          <span data-ttu-id="1fc6c-361">O padrão é a combinação OR bit a bit de <see langword="LastWrite" />, <see langword="FileName" /> e <see langword="DirectoryName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fc6c-361">The default is the bitwise OR combination of <see langword="LastWrite" />, <see langword="FileName" />, and <see langword="DirectoryName" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fc6c-362">Você pode combinar os membros do <xref:System.IO.NotifyFilters> enumeração observar mais de um tipo de alteração de cada vez.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-362">You can combine the members of the <xref:System.IO.NotifyFilters> enumeration to watch for more than one type of change at a time.</span></span> <span data-ttu-id="1fc6c-363">Por exemplo, você pode assistir para alterações no tamanho de um arquivo e alterações no `LastWrite` tempo.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-363">For example, you can watch for changes in size of a file, and for changes in the `LastWrite` time.</span></span> <span data-ttu-id="1fc6c-364">Isso gera um evento sempre que houver uma alteração no tamanho do arquivo ou pasta ou uma alteração no `LastWrite` de arquivo ou pasta.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-364">This raises an event anytime there is a change in file or folder size, or a change in the `LastWrite` time of the file or folder.</span></span>  
  
 <span data-ttu-id="1fc6c-365">Essa é uma maneira para filtrar notificações indesejadas.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-365">This is one way to filter out unwanted notifications.</span></span> <span data-ttu-id="1fc6c-366">Para obter mais informações sobre a filtragem de notificações indesejadas, consulte o <xref:System.IO.FileSystemWatcher.Filter%2A>, <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A>, e <xref:System.IO.FileSystemWatcher.InternalBufferSize%2A> propriedades.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-366">For more information on filtering out unwanted notifications, see the <xref:System.IO.FileSystemWatcher.Filter%2A>, <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A>, and <xref:System.IO.FileSystemWatcher.InternalBufferSize%2A> properties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1fc6c-367">O exemplo a seguir cria um <xref:System.IO.FileSystemWatcher> para inspecionar o diretório especificado em tempo de execução.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-367">The following example creates a <xref:System.IO.FileSystemWatcher> to watch the directory specified at run time.</span></span> <span data-ttu-id="1fc6c-368">O componente é definido para detectar alterações em `LastWrite` e `LastAccess` do tempo, a criação, exclusão ou renomeação de arquivos de texto no diretório.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-368">The component is set to watch for changes in `LastWrite` and `LastAccess` time, the creation, deletion, or renaming of text files in the directory.</span></span> <span data-ttu-id="1fc6c-369">Se um arquivo for alterado, criado ou excluído, o caminho para o arquivo imprime no console.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-369">If a file is changed, created, or deleted, the path to the file prints to the console.</span></span> <span data-ttu-id="1fc6c-370">Quando um arquivo é renomeado, os caminhos de novos e antigos de impressão para o console.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-370">When a file is renamed, the old and new paths print to the console.</span></span>  
  
 <span data-ttu-id="1fc6c-371">Use o <xref:System.Diagnostics> e <xref:System.IO> namespaces para este exemplo.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-371">Use the <xref:System.Diagnostics> and <xref:System.IO> namespaces for this example.</span></span>  
  
 [!code-cpp[Classic NotifyFilters Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic NotifyFilters Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NotifyFilters Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic NotifyFilters Example/CS/source.cs#1)]
 [!code-vb[Classic NotifyFilters Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic NotifyFilters Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1fc6c-372">The value is not a valid bitwise OR combination of the <see cref="T:System.IO.NotifyFilters" /> values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fc6c-372">The value is not a valid bitwise OR combination of the <see cref="T:System.IO.NotifyFilters" /> values.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="1fc6c-373">The value that is being set is not valid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fc6c-373">The value that is being set is not valid.</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.NotifyFilters" />
        <altmember cref="P:System.IO.FileSystemWatcher.Filter" />
        <altmember cref="P:System.IO.FileSystemWatcher.IncludeSubdirectories" />
        <altmember cref="P:System.IO.FileSystemWatcher.InternalBufferSize" />
      </Docs>
    </Member>
    <Member MemberName="OnChanged">
      <MemberSignature Language="C#" Value="protected void OnChanged (System.IO.FileSystemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnChanged(class System.IO.FileSystemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemWatcher.OnChanged(System.IO.FileSystemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnChanged (e As FileSystemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnChanged(System::IO::FileSystemEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.OnChanged : System.IO.FileSystemEventArgs -&gt; unit" Usage="fileSystemWatcher.OnChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.IO.FileSystemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="1fc6c-374">A <see cref="T:System.IO.FileSystemEventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fc6c-374">A <see cref="T:System.IO.FileSystemEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1fc6c-375">Raises the <see cref="E:System.IO.FileSystemWatcher.Changed" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fc6c-375">Raises the <see cref="E:System.IO.FileSystemWatcher.Changed" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fc6c-376"><xref:System.IO.FileSystemWatcher.OnChanged%2A> é chamado quando as alterações são feitas para o tamanho, atributos de sistema, último tempo de gravação, hora do último acesso ou as permissões de segurança de um arquivo ou diretório no diretório que está sendo monitorado.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-376"><xref:System.IO.FileSystemWatcher.OnChanged%2A> is called when changes are made to the size, system attributes, last write time, last access time, or security permissions of a file or directory in the directory being monitored.</span></span>  
  
 <span data-ttu-id="1fc6c-377">Use o <xref:System.IO.FileSystemWatcher.NotifyFilter%2A> propriedade para restringir o número de eventos gerados quando o <xref:System.IO.FileSystemWatcher.Changed> evento é manipulado.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-377">Use the <xref:System.IO.FileSystemWatcher.NotifyFilter%2A> property to restrict the number of events raised when the <xref:System.IO.FileSystemWatcher.Changed> event is handled.</span></span>  
  
 <span data-ttu-id="1fc6c-378">O <xref:System.IO.FileSystemWatcher.OnCreated%2A> é gerado como um arquivo é criado.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-378">The <xref:System.IO.FileSystemWatcher.OnCreated%2A> event is raised as soon as a file is created.</span></span> <span data-ttu-id="1fc6c-379">Se um arquivo está sendo copiado ou transferido para um diretório monitorado, o <xref:System.IO.FileSystemWatcher.OnCreated%2A> evento ocorrerá imediatamente, seguido por um ou mais <xref:System.IO.FileSystemWatcher.OnChanged%2A> eventos.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-379">If a file is being copied or transferred into a watched directory, the <xref:System.IO.FileSystemWatcher.OnCreated%2A> event will be raised immediately, followed by one or more <xref:System.IO.FileSystemWatcher.OnChanged%2A> events.</span></span>  
  
 <span data-ttu-id="1fc6c-380">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-380">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="1fc6c-381">Para obter mais informações, consulte [tratamento e gerando eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="1fc6c-381">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="1fc6c-382">
            <para>Ao substituir <see cref="M:System.IO.FileSystemWatcher.OnChanged(System.IO.FileSystemEventArgs)" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.IO.FileSystemWatcher.OnChanged(System.IO.FileSystemEventArgs)" /> método.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="1fc6c-382">
              <para>When overriding <see cref="M:System.IO.FileSystemWatcher.OnChanged(System.IO.FileSystemEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.IO.FileSystemWatcher.OnChanged(System.IO.FileSystemEventArgs)" /> method.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.IO.FileSystemWatcher.Changed" />
        <altmember cref="P:System.IO.FileSystemWatcher.NotifyFilter" />
        <altmember cref="T:System.IO.FileSystemEventArgs" />
        <altmember cref="T:System.IO.FileSystemEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="OnCreated">
      <MemberSignature Language="C#" Value="protected void OnCreated (System.IO.FileSystemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnCreated(class System.IO.FileSystemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemWatcher.OnCreated(System.IO.FileSystemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnCreated (e As FileSystemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnCreated(System::IO::FileSystemEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.OnCreated : System.IO.FileSystemEventArgs -&gt; unit" Usage="fileSystemWatcher.OnCreated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.IO.FileSystemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="1fc6c-383">A <see cref="T:System.IO.FileSystemEventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fc6c-383">A <see cref="T:System.IO.FileSystemEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1fc6c-384">Raises the <see cref="E:System.IO.FileSystemWatcher.Created" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fc6c-384">Raises the <see cref="E:System.IO.FileSystemWatcher.Created" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fc6c-385"><xref:System.IO.FileSystemWatcher.OnCreated%2A> é chamado quando um arquivo ou diretório é criado no diretório que está sendo monitorado.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-385"><xref:System.IO.FileSystemWatcher.OnCreated%2A> is called when a file or directory is created in the directory being monitored.</span></span>  
  
 <span data-ttu-id="1fc6c-386">Algumas ocorrências comuns, como copiar ou mover um arquivo ou diretório, não corresponde diretamente a um evento, mas essas ocorrências gerar eventos a serem gerados.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-386">Some common occurrences, such as copying or moving a file or directory, do not correspond directly to an event, but these occurrences do cause events to be raised.</span></span> <span data-ttu-id="1fc6c-387">Quando você copia um arquivo ou diretório, o sistema gera um <xref:System.IO.FileSystemWatcher.Created> evento no diretório ao qual o arquivo foi copiado, se esse diretório é que é inspecionado.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-387">When you copy a file or directory, the system raises a <xref:System.IO.FileSystemWatcher.Created> event in the directory to which the file was copied, if that directory is being watched.</span></span> <span data-ttu-id="1fc6c-388">Se o diretório do qual você copiou foi que é inspecionado por outra instância do <xref:System.IO.FileSystemWatcher>, nenhum evento será gerado.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-388">If the directory from which you copied was being watched by another instance of <xref:System.IO.FileSystemWatcher>, no event would be raised.</span></span> <span data-ttu-id="1fc6c-389">Por exemplo, crie duas instâncias de <xref:System.IO.FileSystemWatcher>.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-389">For example, you create two instances of <xref:System.IO.FileSystemWatcher>.</span></span> <span data-ttu-id="1fc6c-390">FileSystemWatcher1 é definido como assistir "C:\My Documents" e FileSystemWatcher2 é definido como assistir "C:\Your documentos".</span><span class="sxs-lookup"><span data-stu-id="1fc6c-390">FileSystemWatcher1 is set to watch "C:\My Documents", and FileSystemWatcher2 is set to watch "C:\Your Documents".</span></span> <span data-ttu-id="1fc6c-391">Se você copiar um arquivo de "Meus documentos" e colá-lo em "Seus documentos", um <xref:System.IO.FileSystemWatcher.Created> evento será gerado no FileSystemWatcher2, mas nenhum evento é gerado para FileSystemWatcher1.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-391">If you copy a file from "My Documents" and paste it into "Your Documents", a <xref:System.IO.FileSystemWatcher.Created> event will be raised in FileSystemWatcher2, but no event is raised for FileSystemWatcher1.</span></span> <span data-ttu-id="1fc6c-392">Ao contrário de copiar, mover um arquivo ou diretório gera dois eventos.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-392">Unlike copying, moving a file or directory raises two events.</span></span> <span data-ttu-id="1fc6c-393">Do exemplo anterior, se você moveu um arquivo de "Meus documentos" para "Seus documentos", um <xref:System.IO.FileSystemWatcher.Created> evento será gerado no FileSystemWatcher2 e um <xref:System.IO.FileSystemWatcher.Deleted> deve ser gerado no FileSystemWatcher1.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-393">From the previous example, if you moved a file from "My Documents" to "Your Documents", a <xref:System.IO.FileSystemWatcher.Created> event would be raised in FileSystemWatcher2 and a <xref:System.IO.FileSystemWatcher.Deleted> event would be raised in FileSystemWatcher1.</span></span>  
  
 <span data-ttu-id="1fc6c-394">O <xref:System.IO.FileSystemWatcher.OnCreated%2A> é gerado como um arquivo é criado.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-394">The <xref:System.IO.FileSystemWatcher.OnCreated%2A> event is raised as soon as a file is created.</span></span> <span data-ttu-id="1fc6c-395">Se um arquivo está sendo copiado ou transferido para um diretório monitorado, o <xref:System.IO.FileSystemWatcher.OnCreated%2A> evento ocorrerá imediatamente, seguido por um ou mais <xref:System.IO.FileSystemWatcher.OnChanged%2A> eventos.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-395">If a file is being copied or transferred into a watched directory, the <xref:System.IO.FileSystemWatcher.OnCreated%2A> event will be raised immediately, followed by one or more <xref:System.IO.FileSystemWatcher.OnChanged%2A> events.</span></span>  
  
 <span data-ttu-id="1fc6c-396">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-396">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="1fc6c-397">Para obter mais informações, consulte [tratamento e gerando eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="1fc6c-397">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="1fc6c-398">
            <para>Ao substituir <see cref="M:System.IO.FileSystemWatcher.OnCreated(System.IO.FileSystemEventArgs)" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.IO.FileSystemWatcher.OnCreated(System.IO.FileSystemEventArgs)" /> método.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="1fc6c-398">
              <para>When overriding <see cref="M:System.IO.FileSystemWatcher.OnCreated(System.IO.FileSystemEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.IO.FileSystemWatcher.OnCreated(System.IO.FileSystemEventArgs)" /> method.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.IO.FileSystemWatcher.Created" />
        <altmember cref="E:System.IO.FileSystemWatcher.Deleted" />
        <altmember cref="T:System.IO.FileSystemEventArgs" />
        <altmember cref="T:System.IO.FileSystemEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="OnDeleted">
      <MemberSignature Language="C#" Value="protected void OnDeleted (System.IO.FileSystemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnDeleted(class System.IO.FileSystemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemWatcher.OnDeleted(System.IO.FileSystemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnDeleted (e As FileSystemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnDeleted(System::IO::FileSystemEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.OnDeleted : System.IO.FileSystemEventArgs -&gt; unit" Usage="fileSystemWatcher.OnDeleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.IO.FileSystemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="1fc6c-399">A <see cref="T:System.IO.FileSystemEventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fc6c-399">A <see cref="T:System.IO.FileSystemEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1fc6c-400">Raises the <see cref="E:System.IO.FileSystemWatcher.Deleted" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fc6c-400">Raises the <see cref="E:System.IO.FileSystemWatcher.Deleted" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fc6c-401"><xref:System.IO.FileSystemWatcher.OnDeleted%2A> é chamado quando um arquivo ou diretório dentro do diretório que está sendo monitorado, é excluído.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-401"><xref:System.IO.FileSystemWatcher.OnDeleted%2A> is called when a file or directory, within the directory being monitored, is deleted.</span></span>  
  
 <span data-ttu-id="1fc6c-402">Algumas ocorrências comuns, como copiar ou mover um arquivo ou diretório, não corresponde diretamente a um evento, mas essas ocorrências gerar eventos a serem gerados.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-402">Some common occurrences, such as copying or moving a file or directory, do not correspond directly to an event, but these occurrences do cause events to be raised.</span></span> <span data-ttu-id="1fc6c-403">Quando você copia um arquivo ou diretório, o sistema gera um <xref:System.IO.FileSystemWatcher.Created> evento no diretório ao qual o arquivo foi copiado, se esse diretório é que é inspecionado.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-403">When you copy a file or directory, the system raises a <xref:System.IO.FileSystemWatcher.Created> event in the directory to which the file was copied, if that directory is being watched.</span></span> <span data-ttu-id="1fc6c-404">Se o diretório do qual você copiou foi que é inspecionado por outra instância do <xref:System.IO.FileSystemWatcher>, nenhum evento será gerado.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-404">If the directory from which you copied was being watched by another instance of <xref:System.IO.FileSystemWatcher>, no event would be raised.</span></span> <span data-ttu-id="1fc6c-405">Por exemplo, crie duas instâncias de <xref:System.IO.FileSystemWatcher>.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-405">For example, you create two instances of <xref:System.IO.FileSystemWatcher>.</span></span> <span data-ttu-id="1fc6c-406">FileSystemWatcher1 é definido como assistir "C:\My Documents" e FileSystemWatcher2 é definido como assistir "C:\Your documentos".</span><span class="sxs-lookup"><span data-stu-id="1fc6c-406">FileSystemWatcher1 is set to watch "C:\My Documents", and FileSystemWatcher2 is set to watch "C:\Your Documents".</span></span> <span data-ttu-id="1fc6c-407">Se você copiar um arquivo de "Meus documentos" em "Seus documentos", um <xref:System.IO.FileSystemWatcher.Created> evento será gerado por FileSystemWatcher2, mas nenhum evento é gerado para FileSystemWatcher1.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-407">If you copy a file from "My Documents" into "Your Documents", a <xref:System.IO.FileSystemWatcher.Created> event will be raised by FileSystemWatcher2, but no event is raised for FileSystemWatcher1.</span></span> <span data-ttu-id="1fc6c-408">Ao contrário de copiar, mover um arquivo ou diretório gera dois eventos.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-408">Unlike copying, moving a file or directory raises two events.</span></span> <span data-ttu-id="1fc6c-409">Do exemplo anterior, se você moveu um arquivo de "Meus documentos" para "Seus documentos", um <xref:System.IO.FileSystemWatcher.Created> deve ser gerado por FileSystemWatcher2 e um <xref:System.IO.FileSystemWatcher.Deleted> deve ser gerado por FileSystemWatcher1.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-409">From the previous example, if you moved a file from "My Documents" to "Your Documents", a <xref:System.IO.FileSystemWatcher.Created> event would be raised by FileSystemWatcher2 and a <xref:System.IO.FileSystemWatcher.Deleted> event would be raised by FileSystemWatcher1.</span></span>  
  
 <span data-ttu-id="1fc6c-410">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-410">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="1fc6c-411">Para obter mais informações, consulte [tratamento e gerando eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="1fc6c-411">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="1fc6c-412">
            <para>Ao substituir <see cref="M:System.IO.FileSystemWatcher.OnDeleted(System.IO.FileSystemEventArgs)" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.IO.FileSystemWatcher.OnDeleted(System.IO.FileSystemEventArgs)" /> método.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="1fc6c-412">
              <para>When overriding <see cref="M:System.IO.FileSystemWatcher.OnDeleted(System.IO.FileSystemEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.IO.FileSystemWatcher.OnDeleted(System.IO.FileSystemEventArgs)" /> method.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.IO.FileSystemWatcher.Created" />
        <altmember cref="E:System.IO.FileSystemWatcher.Deleted" />
        <altmember cref="T:System.IO.FileSystemEventArgs" />
        <altmember cref="T:System.IO.FileSystemEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="OnError">
      <MemberSignature Language="C#" Value="protected void OnError (System.IO.ErrorEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnError(class System.IO.ErrorEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemWatcher.OnError(System.IO.ErrorEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnError (e As ErrorEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnError(System::IO::ErrorEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.OnError : System.IO.ErrorEventArgs -&gt; unit" Usage="fileSystemWatcher.OnError e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.IO.ErrorEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="1fc6c-413">An <see cref="T:System.IO.ErrorEventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fc6c-413">An <see cref="T:System.IO.ErrorEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1fc6c-414">Raises the <see cref="E:System.IO.FileSystemWatcher.Error" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fc6c-414">Raises the <see cref="E:System.IO.FileSystemWatcher.Error" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fc6c-415"><xref:System.IO.FileSystemWatcher.OnError%2A> é chamado quando ocorre um erro.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-415"><xref:System.IO.FileSystemWatcher.OnError%2A> is called when an error occurs.</span></span>  
  
 <span data-ttu-id="1fc6c-416">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-416">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="1fc6c-417">Para obter mais informações, consulte [tratamento e gerando eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="1fc6c-417">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="1fc6c-418">
            <para>Ao substituir <see cref="M:System.IO.FileSystemWatcher.OnError(System.IO.ErrorEventArgs)" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.IO.FileSystemWatcher.OnError(System.IO.ErrorEventArgs)" /> método.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="1fc6c-418">
              <para>When overriding <see cref="M:System.IO.FileSystemWatcher.OnError(System.IO.ErrorEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.IO.FileSystemWatcher.OnError(System.IO.ErrorEventArgs)" /> method.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.IO.FileSystemWatcher.Error" />
        <altmember cref="T:System.IO.ErrorEventArgs" />
        <altmember cref="T:System.IO.ErrorEventHandler" />
        <altmember cref="T:System.IO.InternalBufferOverflowException" />
      </Docs>
    </Member>
    <Member MemberName="OnRenamed">
      <MemberSignature Language="C#" Value="protected void OnRenamed (System.IO.RenamedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnRenamed(class System.IO.RenamedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemWatcher.OnRenamed(System.IO.RenamedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnRenamed (e As RenamedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnRenamed(System::IO::RenamedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.OnRenamed : System.IO.RenamedEventArgs -&gt; unit" Usage="fileSystemWatcher.OnRenamed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.IO.RenamedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="1fc6c-419">A <see cref="T:System.IO.RenamedEventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fc6c-419">A <see cref="T:System.IO.RenamedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1fc6c-420">Raises the <see cref="E:System.IO.FileSystemWatcher.Renamed" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fc6c-420">Raises the <see cref="E:System.IO.FileSystemWatcher.Renamed" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fc6c-421"><xref:System.IO.FileSystemWatcher.OnRenamed%2A> é chamado quando um arquivo ou diretório dentro do diretório que está sendo monitorado é renomeado.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-421"><xref:System.IO.FileSystemWatcher.OnRenamed%2A> is called when a file or directory within the directory being monitored is renamed.</span></span> <span data-ttu-id="1fc6c-422">Seu <xref:System.IO.RenamedEventArgs> argumento contém informações sobre a operação de renomeação, como o tipo de alteração, o caminho antigo e novo e o nome antigo e novo.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-422">Its <xref:System.IO.RenamedEventArgs> argument contains information about the renaming operation, such as the type of change, the old and new path, and the old and new name.</span></span> <span data-ttu-id="1fc6c-423">Observe que seu <xref:System.IO.FileSystemEventArgs.Name> propriedade pode ser nula para renomeado eventos se o <xref:System.IO.FileSystemWatcher> não obter correspondência eventos antigo e novo nome do sistema operacional.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-423">Note that its <xref:System.IO.FileSystemEventArgs.Name> property may be null for renamed events if the <xref:System.IO.FileSystemWatcher> does not get matching old and new name events from the operating system.</span></span> 
  
 <span data-ttu-id="1fc6c-424">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-424">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="1fc6c-425">Para obter mais informações, consulte [tratamento e gerando eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="1fc6c-425">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="1fc6c-426">
            <para>Ao substituir <see cref="M:System.IO.FileSystemWatcher.OnRenamed(System.IO.RenamedEventArgs)" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.IO.FileSystemWatcher.OnRenamed(System.IO.RenamedEventArgs)" /> método.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="1fc6c-426">
              <para>When overriding <see cref="M:System.IO.FileSystemWatcher.OnRenamed(System.IO.RenamedEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.IO.FileSystemWatcher.OnRenamed(System.IO.RenamedEventArgs)" /> method.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.IO.FileSystemWatcher.Renamed" />
        <altmember cref="T:System.IO.RenamedEventArgs" />
        <altmember cref="T:System.IO.RenamedEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.IO.FileSystemWatcher.Path" />
      <MemberSignature Language="VB.NET" Value="Public Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Path : string with get, set" Usage="System.IO.FileSystemWatcher.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Diagnostics.Design.FSWPathEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RecommendedAsConfigurable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.IO.IODescription("The directory to monitor")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1fc6c-427">Gets or sets the path of the directory to watch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fc6c-427">Gets or sets the path of the directory to watch.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1fc6c-428">O caminho a ser monitorado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fc6c-428">The path to monitor.</span>
          </span>
          <span data-ttu-id="1fc6c-429">O padrão é uma cadeia de caracteres vazia ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fc6c-429">The default is an empty string ("").</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fc6c-430">Este é um caminho totalmente qualificado para um diretório.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-430">This is a fully qualified path to a directory.</span></span> <span data-ttu-id="1fc6c-431">Se o <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A> é de propriedade `true`, esse diretório é a raiz em que o sistema aguarda alterações; caso contrário, é o diretório somente observado.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-431">If the <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A> property is `true`, this directory is the root at which the system watches for changes; otherwise it is the only directory watched.</span></span> <span data-ttu-id="1fc6c-432">Para assistir a um arquivo específico, defina o <xref:System.IO.FileSystemWatcher.Path%2A> propriedade para o diretório correto, totalmente qualificado e o <xref:System.IO.FileSystemWatcher.Filter%2A> propriedade para o nome do arquivo.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-432">To watch a specific file, set the <xref:System.IO.FileSystemWatcher.Path%2A> property to the fully qualified, correct directory, and the <xref:System.IO.FileSystemWatcher.Filter%2A> property to the file name.</span></span>  
  
 <span data-ttu-id="1fc6c-433">O <xref:System.IO.FileSystemWatcher.Path%2A> propriedade dá suporte a caminhos de convenção de nomenclatura Universal (UNC).</span><span class="sxs-lookup"><span data-stu-id="1fc6c-433">The <xref:System.IO.FileSystemWatcher.Path%2A> property supports Universal Naming Convention (UNC) paths.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1fc6c-434">Essa propriedade deve ser definida antes que o componente pode detectar alterações.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-434">This property must be set before the component can watch for changes.</span></span>  
  
 <span data-ttu-id="1fc6c-435">Quando um diretório é renomeado, o <xref:System.IO.FileSystemWatcher> anexa novamente automaticamente para o item renomeado recentemente.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-435">When a directory is renamed, the <xref:System.IO.FileSystemWatcher> automatically reattaches itself to the newly renamed item.</span></span> <span data-ttu-id="1fc6c-436">Por exemplo, se você definir o <xref:System.IO.FileSystemWatcher.Path%2A> propriedade como "C:\My Documents" e, em seguida, renomeie manualmente o diretório "C:\Your documentos", o componente continua a escuta as notificações de alteração no diretório renomeada recentemente.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-436">For example, if you set the <xref:System.IO.FileSystemWatcher.Path%2A> property to "C:\My Documents" and then manually rename the directory to "C:\Your Documents", the component continues listening for change notifications on the newly renamed directory.</span></span> <span data-ttu-id="1fc6c-437">No entanto, quando você pede a <xref:System.IO.FileSystemWatcher.Path%2A> propriedade, ele contém o caminho antigo.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-437">However, when you ask for the <xref:System.IO.FileSystemWatcher.Path%2A> property, it contains the old path.</span></span> <span data-ttu-id="1fc6c-438">Isso acontece porque o componente determina inspeciona se o diretório base o identificador, em vez do nome do diretório.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-438">This happens because the component determines what directory watches based on the handle, rather than the name of the directory.</span></span> <span data-ttu-id="1fc6c-439">A renomeação não afeta o identificador.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-439">Renaming does not affect the handle.</span></span> <span data-ttu-id="1fc6c-440">Portanto, se você destruir o componente e, em seguida, recriá-lo sem atualizar o <xref:System.IO.FileSystemWatcher.Path%2A> propriedade, seu aplicativo falhará porque o diretório não existe mais.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-440">So, if you destroy the component, and then recreate it without updating the <xref:System.IO.FileSystemWatcher.Path%2A> property, your application will fail because the directory no longer exists.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1fc6c-441">O exemplo a seguir cria um <xref:System.IO.FileSystemWatcher> para inspecionar o diretório especificado em tempo de execução.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-441">The following example creates a <xref:System.IO.FileSystemWatcher> to watch the directory specified at run time.</span></span> <span data-ttu-id="1fc6c-442">O componente é definido para detectar alterações em `LastWrite` e `LastAccess` do tempo, a criação, exclusão ou renomeação de arquivos de texto no diretório.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-442">The component is set to watch for changes in `LastWrite` and `LastAccess` time, the creation, deletion, or renaming of text files in the directory.</span></span> <span data-ttu-id="1fc6c-443">Se um arquivo for alterado, criado ou excluído, o caminho para o arquivo imprime no console.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-443">If a file is changed, created, or deleted, the path to the file prints to the console.</span></span> <span data-ttu-id="1fc6c-444">Quando um arquivo é renomeado, os caminhos de novos e antigos de impressão para o console.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-444">When a file is renamed, the old and new paths print to the console.</span></span>  
  
 <span data-ttu-id="1fc6c-445">Use o <xref:System.Diagnostics> e <xref:System.IO> namespaces para este exemplo.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-445">Use the <xref:System.Diagnostics> and <xref:System.IO> namespaces for this example.</span></span>  
  
 [!code-cpp[Classic NotifyFilters Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic NotifyFilters Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NotifyFilters Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic NotifyFilters Example/CS/source.cs#1)]
 [!code-vb[Classic NotifyFilters Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic NotifyFilters Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1fc6c-446">The specified path does not exist or could not be found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fc6c-446">The specified path does not exist or could not be found.</span>
          </span>
          <span data-ttu-id="1fc6c-447">-or-  The specified path contains wildcard characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fc6c-447">-or-  The specified path contains wildcard characters.</span>
          </span>
          <span data-ttu-id="1fc6c-448">-or-  The specified path contains invalid path characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fc6c-448">-or-  The specified path contains invalid path characters.</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.FileSystemWatcher" />
        <altmember cref="P:System.IO.FileSystemWatcher.Filter" />
      </Docs>
    </Member>
    <Member MemberName="Renamed">
      <MemberSignature Language="C#" Value="public event System.IO.RenamedEventHandler Renamed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.IO.RenamedEventHandler Renamed" />
      <MemberSignature Language="DocId" Value="E:System.IO.FileSystemWatcher.Renamed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Renamed As RenamedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::IO::RenamedEventHandler ^ Renamed;" />
      <MemberSignature Language="F#" Value="member this.Renamed : System.IO.RenamedEventHandler " Usage="member this.Renamed : System.IO.RenamedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.IO.IODescription("Occurs when a file/directory rename matches the filter")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.RenamedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1fc6c-449">Occurs when a file or directory in the specified <see cref="P:System.IO.FileSystemWatcher.Path" /> is renamed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fc6c-449">Occurs when a file or directory in the specified <see cref="P:System.IO.FileSystemWatcher.Path" /> is renamed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fc6c-450">O `Renamed` evento é um <xref:System.IO.RenamedEventHandler> delegado que tem a seguinte assinatura:</span><span class="sxs-lookup"><span data-stu-id="1fc6c-450">The `Renamed` event is an <xref:System.IO.RenamedEventHandler> delegate that has the following signature:</span></span>

 ```csharp
public delegate void Renamed(object sender, RenamedEventArgs e);
 ```
 ```vb
Public Delegate Sub RenamedEventHandler(sender As Object, e As RenamedEventArgs)
 ```
 <span data-ttu-id="1fc6c-451">O <xref:System.IO.RenamedEventArgs> objeto fornece informações sobre a operação de renomeação, como o tipo de renomeação (o <xref:System.IO.FileSystemEventArgs.ChangeType> propriedade), o nome antigo e novo e o caminho antigo e novo.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-451">The <xref:System.IO.RenamedEventArgs> object provides information about the renaming operation, such as the type of the rename (the <xref:System.IO.FileSystemEventArgs.ChangeType> property), the old and new name, and the old and new path.</span></span> <span data-ttu-id="1fc6c-452">Observe que o <xref:System.IO.FileSystemEventArgs.Name> propriedade pode ser nula para renomeado eventos se o <xref:System.IO.FileSystemWatcher> não obter correspondência eventos antigo e novo nome do sistema operacional.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-452">Note that the <xref:System.IO.FileSystemEventArgs.Name> property may be null for renamed events if the <xref:System.IO.FileSystemWatcher> does not get matching old and new name events from the operating system.</span></span>

 <span data-ttu-id="1fc6c-453">Renomeação do diretório que você está observando não gerará uma notificação.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-453">Renaming the directory you are watching will not raise a notification.</span></span> <span data-ttu-id="1fc6c-454">As notificações são geradas somente para entradas de dentro do diretório que você está observando.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-454">Notifications are only raised for entries inside the directory you are watching.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1fc6c-455">O exemplo a seguir usa o <xref:System.IO.FileSystemWatcher.Renamed> evento para exibir o caminho do arquivo para o console sempre que o arquivo observado é renomeado.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-455">The following example uses the <xref:System.IO.FileSystemWatcher.Renamed> event to display the file path to the console whenever the watched file is renamed.</span></span>  
  
 [!code-cpp[Classic NotifyFilters Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic NotifyFilters Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NotifyFilters Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic NotifyFilters Example/CS/source.cs#1)]
 [!code-vb[Classic NotifyFilters Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic NotifyFilters Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IO.FileSystemWatcher.OnRenamed(System.IO.RenamedEventArgs)" />
        <altmember cref="P:System.IO.FileSystemWatcher.SynchronizingObject" />
        <altmember cref="P:System.IO.FileSystemWatcher.Path" />
        <altmember cref="T:System.IO.RenamedEventArgs" />
        <altmember cref="T:System.IO.RenamedEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="Site">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.ISite Site { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.ISite Site" />
      <MemberSignature Language="DocId" Value="P:System.IO.FileSystemWatcher.Site" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Site As ISite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::ISite ^ Site { System::ComponentModel::ISite ^ get(); void set(System::ComponentModel::ISite ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Site : System.ComponentModel.ISite with get, set" Usage="System.IO.FileSystemWatcher.Site" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ISite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1fc6c-456">Gets or sets an <see cref="T:System.ComponentModel.ISite" /> for the <see cref="T:System.IO.FileSystemWatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fc6c-456">Gets or sets an <see cref="T:System.ComponentModel.ISite" /> for the <see cref="T:System.IO.FileSystemWatcher" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1fc6c-457">Um <see cref="T:System.ComponentModel.ISite" /> para o <see cref="T:System.IO.FileSystemWatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fc6c-457">An <see cref="T:System.ComponentModel.ISite" /> for the <see cref="T:System.IO.FileSystemWatcher" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fc6c-458">Sites de associar um <xref:System.ComponentModel.Component> para um <xref:System.ComponentModel.Design.IDesignerHost.Container%2A> e habilitar a comunicação entre eles, bem como fornecer uma maneira para o contêiner gerenciar seus componentes.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-458">Sites bind a <xref:System.ComponentModel.Component> to a <xref:System.ComponentModel.Design.IDesignerHost.Container%2A> and enable communication between them, as well as provide a way for the container to manage its components.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SynchronizingObject">
      <MemberSignature Language="C#" Value="public System.ComponentModel.ISynchronizeInvoke SynchronizingObject { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.ISynchronizeInvoke SynchronizingObject" />
      <MemberSignature Language="DocId" Value="P:System.IO.FileSystemWatcher.SynchronizingObject" />
      <MemberSignature Language="VB.NET" Value="Public Property SynchronizingObject As ISynchronizeInvoke" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::ISynchronizeInvoke ^ SynchronizingObject { System::ComponentModel::ISynchronizeInvoke ^ get(); void set(System::ComponentModel::ISynchronizeInvoke ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SynchronizingObject : System.ComponentModel.ISynchronizeInvoke with get, set" Usage="System.IO.FileSystemWatcher.SynchronizingObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.IO.IODescription("The object used to marshal the event handler calls resulting from a directory change")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ISynchronizeInvoke</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1fc6c-459">Gets or sets the object used to marshal the event handler calls issued as a result of a directory change.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fc6c-459">Gets or sets the object used to marshal the event handler calls issued as a result of a directory change.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1fc6c-460">O <see cref="T:System.ComponentModel.ISynchronizeInvoke" /> que representa o objeto usado para realizar marshaling das chamadas do manipulador de eventos emitidas como resultado de uma alteração de diretório.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fc6c-460">The <see cref="T:System.ComponentModel.ISynchronizeInvoke" /> that represents the object used to marshal the event handler calls issued as a result of a directory change.</span>
          </span>
          <span data-ttu-id="1fc6c-461">O padrão é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fc6c-461">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fc6c-462">Quando <xref:System.IO.FileSystemWatcher.SynchronizingObject%2A> é `null`, métodos de manipulação de <xref:System.IO.FileSystemWatcher.Changed>, <xref:System.IO.FileSystemWatcher.Created>, <xref:System.IO.FileSystemWatcher.Deleted>, e <xref:System.IO.FileSystemWatcher.Renamed> eventos são chamados em um thread do pool de threads do sistema.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-462">When <xref:System.IO.FileSystemWatcher.SynchronizingObject%2A> is `null`, methods handling the <xref:System.IO.FileSystemWatcher.Changed>, <xref:System.IO.FileSystemWatcher.Created>, <xref:System.IO.FileSystemWatcher.Deleted>, and <xref:System.IO.FileSystemWatcher.Renamed> events are called on a thread from the system thread pool.</span></span> <span data-ttu-id="1fc6c-463">Para obter mais informações sobre pools de threads do sistema, consulte <xref:System.Threading.ThreadPool>.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-463">For more information on system thread pools, see <xref:System.Threading.ThreadPool>.</span></span>  
  
 <span data-ttu-id="1fc6c-464">Quando o <xref:System.IO.FileSystemWatcher.Changed>, <xref:System.IO.FileSystemWatcher.Created>, <xref:System.IO.FileSystemWatcher.Deleted>, e <xref:System.IO.FileSystemWatcher.Renamed> eventos são tratados por um componente de Windows Forms visual, como um <xref:System.Windows.Forms.Button>, acessar o componente através do pool de threads de sistema pode não funcionar, ou pode resultar em uma exceção.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-464">When the <xref:System.IO.FileSystemWatcher.Changed>, <xref:System.IO.FileSystemWatcher.Created>, <xref:System.IO.FileSystemWatcher.Deleted>, and <xref:System.IO.FileSystemWatcher.Renamed> events are handled by a visual Windows Forms component, such as a <xref:System.Windows.Forms.Button>, accessing the component through the system thread pool might not work, or may result in an exception.</span></span> <span data-ttu-id="1fc6c-465">Evitar isso definindo <xref:System.IO.FileSystemWatcher.SynchronizingObject%2A> para um componente de Windows Forms, que faz com que os métodos que manipulam o <xref:System.IO.FileSystemWatcher.Changed>, <xref:System.IO.FileSystemWatcher.Created>, <xref:System.IO.FileSystemWatcher.Deleted>, e <xref:System.IO.FileSystemWatcher.Renamed> eventos a ser chamado no mesmo thread em que o componente foi criado.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-465">Avoid this by setting <xref:System.IO.FileSystemWatcher.SynchronizingObject%2A> to a Windows Forms component, which causes the methods that handle the <xref:System.IO.FileSystemWatcher.Changed>, <xref:System.IO.FileSystemWatcher.Created>, <xref:System.IO.FileSystemWatcher.Deleted>, and <xref:System.IO.FileSystemWatcher.Renamed> events to be called on the same thread on which the component was created.</span></span>  
  
 <span data-ttu-id="1fc6c-466">Se o <xref:System.IO.FileSystemWatcher> é usado dentro de [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] em um designer de formulários do Windows, <xref:System.IO.FileSystemWatcher.SynchronizingObject%2A> define automaticamente para o controle que contém o <xref:System.IO.FileSystemWatcher>.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-466">If the <xref:System.IO.FileSystemWatcher> is used inside [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] in a Windows Forms designer, <xref:System.IO.FileSystemWatcher.SynchronizingObject%2A> automatically sets to the control that contains the <xref:System.IO.FileSystemWatcher>.</span></span> <span data-ttu-id="1fc6c-467">Por exemplo, se você colocar um <xref:System.IO.FileSystemWatcher> em um designer para Form1 (que herda de <xref:System.Windows.Forms.Form>) o <xref:System.IO.FileSystemWatcher.SynchronizingObject%2A> propriedade <xref:System.IO.FileSystemWatcher> é definido como a instância do Form1.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-467">For example, if you place a <xref:System.IO.FileSystemWatcher> on a designer for Form1 (which inherits from <xref:System.Windows.Forms.Form>) the <xref:System.IO.FileSystemWatcher.SynchronizingObject%2A> property of <xref:System.IO.FileSystemWatcher> is set to the instance of Form1.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ISynchronizeInvoke" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WaitForChanged">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1fc6c-468">A synchronous method that returns a structure that contains specific information on the change that occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fc6c-468">A synchronous method that returns a structure that contains specific information on the change that occurred.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WaitForChanged">
      <MemberSignature Language="C#" Value="public System.IO.WaitForChangedResult WaitForChanged (System.IO.WatcherChangeTypes changeType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.IO.WaitForChangedResult WaitForChanged(valuetype System.IO.WatcherChangeTypes changeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemWatcher.WaitForChanged(System.IO.WatcherChangeTypes)" />
      <MemberSignature Language="VB.NET" Value="Public Function WaitForChanged (changeType As WatcherChangeTypes) As WaitForChangedResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::WaitForChangedResult WaitForChanged(System::IO::WatcherChangeTypes changeType);" />
      <MemberSignature Language="F#" Value="member this.WaitForChanged : System.IO.WatcherChangeTypes -&gt; System.IO.WaitForChangedResult" Usage="fileSystemWatcher.WaitForChanged changeType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.WaitForChangedResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="changeType" Type="System.IO.WatcherChangeTypes" />
      </Parameters>
      <Docs>
        <param name="changeType">
          <span data-ttu-id="1fc6c-469">The <see cref="T:System.IO.WatcherChangeTypes" /> to watch for.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fc6c-469">The <see cref="T:System.IO.WatcherChangeTypes" /> to watch for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1fc6c-470">A synchronous method that returns a structure that contains specific information on the change that occurred, given the type of change you want to monitor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fc6c-470">A synchronous method that returns a structure that contains specific information on the change that occurred, given the type of change you want to monitor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1fc6c-471">A <see cref="T:System.IO.WaitForChangedResult" /> that contains specific information on the change that occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fc6c-471">A <see cref="T:System.IO.WaitForChangedResult" /> that contains specific information on the change that occurred.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fc6c-472">Este método espera indefinidamente até que a primeira alteração ocorre e, em seguida, retorna.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-472">This method waits indefinitely until the first change occurs and then returns.</span></span> <span data-ttu-id="1fc6c-473">Isso é o mesmo que usar <xref:System.IO.FileSystemWatcher.WaitForChanged%2A> com o `timeout` parâmetro definido como -1.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-473">This is the same as using <xref:System.IO.FileSystemWatcher.WaitForChanged%2A> with the `timeout` parameter set to -1.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1fc6c-474">Esse método permite que um manipulador de eventos a ser invocado para responder a mesmo que as alterações do arquivo de <xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A> está definida como `false`.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-474">This method allows an event handler to be invoked to respond to file changes even if the <xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A> property is set to `false`.</span></span>  
  
 <span data-ttu-id="1fc6c-475">Em alguns sistemas, <xref:System.IO.FileSystemWatcher> informa as alterações nos arquivos usando o formato de nome de 8.3 arquivo curto.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-475">In some systems, <xref:System.IO.FileSystemWatcher> reports changes to files using the short 8.3 file name format.</span></span> <span data-ttu-id="1fc6c-476">Por exemplo, uma alteração "LongFileName.LongExtension" poderia ser relatada como "LongFi ~. LON".</span><span class="sxs-lookup"><span data-stu-id="1fc6c-476">For example, a change to  "LongFileName.LongExtension" could be reported as "LongFi~.Lon".</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.WaitForChangedResult" />
      </Docs>
    </Member>
    <Member MemberName="WaitForChanged">
      <MemberSignature Language="C#" Value="public System.IO.WaitForChangedResult WaitForChanged (System.IO.WatcherChangeTypes changeType, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.IO.WaitForChangedResult WaitForChanged(valuetype System.IO.WatcherChangeTypes changeType, int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemWatcher.WaitForChanged(System.IO.WatcherChangeTypes,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function WaitForChanged (changeType As WatcherChangeTypes, timeout As Integer) As WaitForChangedResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::WaitForChangedResult WaitForChanged(System::IO::WatcherChangeTypes changeType, int timeout);" />
      <MemberSignature Language="F#" Value="member this.WaitForChanged : System.IO.WatcherChangeTypes * int -&gt; System.IO.WaitForChangedResult" Usage="fileSystemWatcher.WaitForChanged (changeType, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.WaitForChangedResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="changeType" Type="System.IO.WatcherChangeTypes" />
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="changeType">
          <span data-ttu-id="1fc6c-477">The <see cref="T:System.IO.WatcherChangeTypes" /> to watch for.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fc6c-477">The <see cref="T:System.IO.WatcherChangeTypes" /> to watch for.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="1fc6c-478">The time (in milliseconds) to wait before timing out.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fc6c-478">The time (in milliseconds) to wait before timing out.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1fc6c-479">A synchronous method that returns a structure that contains specific information on the change that occurred, given the type of change you want to monitor and the time (in milliseconds) to wait before timing out.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fc6c-479">A synchronous method that returns a structure that contains specific information on the change that occurred, given the type of change you want to monitor and the time (in milliseconds) to wait before timing out.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1fc6c-480">A <see cref="T:System.IO.WaitForChangedResult" /> that contains specific information on the change that occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fc6c-480">A <see cref="T:System.IO.WaitForChangedResult" /> that contains specific information on the change that occurred.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fc6c-481">Esse método aguarda até que uma alteração ocorre ou ele expirou. Um valor de -1 para o `timeout` significa esperar indefinidamente.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-481">This method waits until a change occurs or it has timed out. A value of -1 for the `timeout` parameter means wait indefinitely.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1fc6c-482">Esse método permite que um manipulador de eventos a ser invocado para responder a mesmo que as alterações do arquivo de <xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A> está definida como `false`.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-482">This method allows an event handler to be invoked to respond to file changes even if the <xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A> property is set to `false`.</span></span>  
  
 <span data-ttu-id="1fc6c-483">Em alguns sistemas, <xref:System.IO.FileSystemWatcher> informa as alterações nos arquivos usando o formato de nome de 8.3 arquivo curto.</span><span class="sxs-lookup"><span data-stu-id="1fc6c-483">In some systems, <xref:System.IO.FileSystemWatcher> reports changes to files using the short 8.3 file name format.</span></span> <span data-ttu-id="1fc6c-484">Por exemplo, uma alteração "LongFileName.LongExtension" poderia ser relatada como "LongFi ~. LON".</span><span class="sxs-lookup"><span data-stu-id="1fc6c-484">For example, a change to  "LongFileName.LongExtension" could be reported as "LongFi~.Lon".</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.WaitForChangedResult" />
      </Docs>
    </Member>
  </Members>
</Type>