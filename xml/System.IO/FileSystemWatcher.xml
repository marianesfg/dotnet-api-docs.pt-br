<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="FileSystemWatcher.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5f524b1e2438cea1c3c824aa9514a36244ccff373.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f524b1e2438cea1c3c824aa9514a36244ccff373</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IO.FileSystemWatcher">
          <source>Listens to the file system change notifications and raises events when a directory, or file in a directory, changes.</source>
          <target state="translated">Monitora as notificações de alteração do sistema de arquivos e gera eventos quando um diretório, ou um arquivo em um diretório, é alterado.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>Use <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> to watch for changes in a specified directory.</source>
          <target state="translated">Use <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> para aguardar as alterações em um diretório especificado.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>You can watch for changes in files and subdirectories of the specified directory.</source>
          <target state="translated">Você pode detectar alterações em arquivos e subdiretórios do diretório especificado.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>You can create a component to watch files on a local computer, a network drive, or a remote computer.</source>
          <target state="translated">Você pode criar um componente para assistir a arquivos em um computador local, uma unidade de rede ou um computador remoto.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>To watch for changes in all files, set the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Filter%2A&gt;</ph> property to an empty string ("") or use wildcards ("*.<ph id="ph2">\*</ph>").</source>
          <target state="translated">Para detectar alterações em todos os arquivos, defina o <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Filter%2A&gt;</ph> propriedade como uma cadeia de caracteres vazia ("") ou usar caracteres curinga ("*.<ph id="ph2">\*</ph>").</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>To watch a specific file, set the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Filter%2A&gt;</ph> property to the file name.</source>
          <target state="translated">Para assistir a um arquivo específico, defina o <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Filter%2A&gt;</ph> propriedade para o nome do arquivo.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>For example, to watch for changes in the file MyDoc.txt, set the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Filter%2A&gt;</ph> property to "MyDoc.txt".</source>
          <target state="translated">Por exemplo, para detectar alterações no arquivo doc, defina o <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Filter%2A&gt;</ph> propriedade como "Doc".</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>You can also watch for changes in a certain type of file.</source>
          <target state="translated">Você também pode observar as alterações em um determinado tipo de arquivo.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>For example, to watch for changes in text files, set the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Filter%2A&gt;</ph> property to "<ph id="ph2">\*</ph>.txt".</source>
          <target state="translated">Por exemplo, para detectar alterações em arquivos de texto, defina o <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Filter%2A&gt;</ph> propriedade como "<ph id="ph2">\*</ph>. txt".</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>There are several types of changes you can watch for in a directory or file.</source>
          <target state="translated">Há vários tipos de alterações que você pode observar em um arquivo ou diretório.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>For example, you can watch for changes in <ph id="ph1">`Attributes`</ph>, the <ph id="ph2">`LastWrite`</ph> date and time, or the <ph id="ph3">`Size`</ph> of files or directories.</source>
          <target state="translated">Por exemplo, você pode detectar alterações em <ph id="ph1">`Attributes`</ph>, o <ph id="ph2">`LastWrite`</ph> data e hora, ou o <ph id="ph3">`Size`</ph> de arquivos ou diretórios.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>This is done by setting the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.NotifyFilter%2A&gt;</ph> property to one of the <ph id="ph2">&lt;xref:System.IO.NotifyFilters&gt;</ph> values.</source>
          <target state="translated">Isso é feito definindo o <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.NotifyFilter%2A&gt;</ph> propriedade para um do <ph id="ph2">&lt;xref:System.IO.NotifyFilters&gt;</ph> valores.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>For more information on the type of changes you can watch, see <ph id="ph1">&lt;xref:System.IO.NotifyFilters&gt;</ph>.</source>
          <target state="translated">Para obter mais informações sobre o tipo de alterações que você pode assistir, consulte <ph id="ph1">&lt;xref:System.IO.NotifyFilters&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>You can watch for renaming, deletion, or creation of files or directories.</source>
          <target state="translated">Você pode observar renomear, exclusão ou criação de arquivos ou diretórios.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>For example, to watch for renaming of text files, set the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Filter%2A&gt;</ph> property to "*.txt" and call the <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.WaitForChanged%2A&gt;</ph> method with a <ph id="ph3">&lt;xref:System.IO.WatcherChangeTypes.Renamed&gt;</ph> specified for its parameter.</source>
          <target state="translated">Por exemplo, para assistir a renomeação de arquivos de texto, defina o <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Filter%2A&gt;</ph> propriedade como "*.txt" e chame o <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.WaitForChanged%2A&gt;</ph> método com um <ph id="ph3">&lt;xref:System.IO.WatcherChangeTypes.Renamed&gt;</ph> especificado para o parâmetro.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>The Windows operating system notifies your component of file changes in a buffer created by the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph>.</source>
          <target state="translated">O sistema operacional Windows notifica o componente de alterações de arquivo em um buffer criado pelo <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>If there are many changes in a short time, the buffer can overflow.</source>
          <target state="translated">Se houver muitas alterações em um curto período de tempo, o buffer pode estourar.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>This causes the component to lose track of changes in the directory, and it will only provide blanket notification.</source>
          <target state="translated">Isso faz com que o componente de perder o controle de alterações no diretório e somente ele fornecerá notificação ampla.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>Increasing the size of the buffer with the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.InternalBufferSize%2A&gt;</ph> property is expensive, as it comes from non-paged memory that cannot be swapped out to disk, so keep the buffer as small yet large enough to not miss any file change events.</source>
          <target state="translated">Aumentar o tamanho do buffer com o <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.InternalBufferSize%2A&gt;</ph> propriedade é cara, já que provém de memória não-paginável que não pode ser trocada por disco, mantenha o buffer menor ainda grande suficiente para não perder qualquer arquivo de eventos de alteração.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>To avoid a buffer overflow, use the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.NotifyFilter%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A&gt;</ph> properties so you can filter out unwanted change notifications.</source>
          <target state="translated">Para evitar um estouro de buffer, use o <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.NotifyFilter%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A&gt;</ph> notificações de alteração de propriedades para que você pode filtrar indesejados.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>For a list of initial property values for an instance of <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph>, see the <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.%23ctor%2A&gt;</ph> constructor.</source>
          <target state="translated">Para obter uma lista de valores de propriedade inicial para uma instância do <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph>, consulte o <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.%23ctor%2A&gt;</ph> construtor.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>Please note the following when using the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> class.</source>
          <target state="translated">Observe o seguinte ao usar o <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>Hidden files are not ignored.</source>
          <target state="translated">Arquivos ocultos não são ignorados.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>In some systems, <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> reports changes to files using the short 8.3 file name format.</source>
          <target state="translated">Em alguns sistemas, <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> informa as alterações nos arquivos usando o formato de nome de 8.3 arquivo curto.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>For example, a change to  "LongFileName.LongExtension" could be reported as "LongFil~.Lon".</source>
          <target state="translated">Por exemplo, uma alteração "LongFileName.LongExtension" poderia ser relatada como "LongFil ~. LON".</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>This class contains a link demand and an inheritance demand at the class level that applies to all members.</source>
          <target state="translated">Esta classe contém uma demanda de link e uma demanda de herança no nível de classe que se aplica a todos os membros.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>A <ph id="ph1">&lt;xref:System.Security.SecurityException&gt;</ph> is thrown when either the immediate caller or the derived class does not have full-trust permission.</source>
          <target state="translated">Um <ph id="ph1">&lt;xref:System.Security.SecurityException&gt;</ph> é lançado quando o chamador imediato ou a classe derivada não tem permissão de confiança total.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>For details about security demands, see <bpt id="p1">[</bpt>Link Demands<ept id="p1">](~/docs/framework/misc/link-demands.md)</ept>.</source>
          <target state="translated">Para obter detalhes sobre as exigências de segurança, consulte <bpt id="p1">[</bpt>demandas de Link<ept id="p1">](~/docs/framework/misc/link-demands.md)</ept>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>The maximum size you can set for the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.InternalBufferSize%2A&gt;</ph> property for monitoring a directory over the network is 64 KB.</source>
          <target state="translated">O tamanho máximo que você pode definir para o <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.InternalBufferSize%2A&gt;</ph> propriedade para um diretório de monitoramento na rede é 64 KB.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>Running <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> on Windows 98 is not supported.</source>
          <target state="translated">Executando <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> no Windows 98 não tem suporte.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>Copying and moving folders</source>
          <target state="translated">Copiando e movendo pastas</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>The operating system and <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> object interpret a cut-and-paste action or a move action as a rename action for a folder and its contents.</source>
          <target state="translated">O sistema operacional e <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> objeto interpretar uma ação de copiar e colar ou uma movimentação como uma ação de renomeação de uma pasta e seu conteúdo.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>If you cut and paste a folder with files into a folder being watched, the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> object reports only the folder as new, but not its contents because they are essentially only renamed.</source>
          <target state="translated">Se você recortar e colar uma pasta com arquivos em uma pasta que é inspecionada, o <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> objeto informa apenas a pasta como novos, mas não seu conteúdo porque eles são essencialmente somente renomeados.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>To be notified that the contents of folders have been moved or copied into a watched folder, provide <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.OnChanged%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.OnRenamed%2A&gt;</ph> event handler methods as suggested in the following table.</source>
          <target state="translated">Para ser notificado que o conteúdo das pastas foram movido ou copiado para uma pasta monitorada, fornecer <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.OnChanged%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.OnRenamed%2A&gt;</ph> métodos do manipulador de eventos como sugerido na tabela a seguir.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>Event Handler</source>
          <target state="translated">Manipulador de eventos</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>Events Handled</source>
          <target state="translated">Eventos manipulados</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>Performs</source>
          <target state="translated">Executa</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source><ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Changed&gt;</ph>, <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.Created&gt;</ph>, <ph id="ph3">&lt;xref:System.IO.FileSystemWatcher.Deleted&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Changed&gt;</ph>, <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.Created&gt;</ph>, <ph id="ph3">&lt;xref:System.IO.FileSystemWatcher.Deleted&gt;</ph></target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>Report changes in file attributes, created files, and deleted files.</source>
          <target state="translated">Relatório de alterações em atributos de arquivo, arquivos criados e arquivos excluídos.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>List the old and new paths of renamed files and folders, expanding recursively if needed.</source>
          <target state="translated">Lista os novos e antigos caminhos de arquivos renomeados e pastas, expandir recursivamente, se necessário.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>Events and Buffer Sizes</source>
          <target state="translated">Eventos e tamanhos de buffer</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>Note that several factors can affect which file system change events are raised, as described by the following:</source>
          <target state="translated">Observe que vários fatores podem afetar o sistema de arquivos de eventos de alteração são gerados, conforme descrito a seguir:</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>Common file system operations might raise more than one event.</source>
          <target state="translated">Operações de sistema de arquivos comuns podem gerar mais de um evento.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>For example, when a file is moved from one directory to another, several <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.OnChanged%2A&gt;</ph> and some <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.OnCreated%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.IO.FileSystemWatcher.OnDeleted%2A&gt;</ph> events might be raised.</source>
          <target state="translated">Por exemplo, quando um arquivo é movido de um diretório para outro, várias <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.OnChanged%2A&gt;</ph> e alguns <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.OnCreated%2A&gt;</ph> e <ph id="ph3">&lt;xref:System.IO.FileSystemWatcher.OnDeleted%2A&gt;</ph> eventos poderão ser gerados.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>Moving a file is a complex operation that consists of multiple simple operations, therefore raising multiple events.</source>
          <target state="translated">Mover que um arquivo é uma operação complexa que consiste em várias operações simples, portanto, gerando vários eventos.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>Likewise, some applications (for example, antivirus software) might cause additional file system events that are detected by <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph>.</source>
          <target state="translated">Da mesma forma, alguns aplicativos (por exemplo, um software antivírus) podem causar a eventos do sistema de arquivos adicionais que são detectados pelo <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>The <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> can watch disks as long as they are not switched or removed.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> pode assistir discos, desde que eles não são alternados ou removidos.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>The <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> does not raise events for CDs and DVDs, because time stamps and properties cannot change.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> não gerar eventos para CDs e DVDs, porque não é possível alterar os carimbos de hora e propriedades.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>Remote computers must have one of the required platforms installed for the component to function properly.</source>
          <target state="translated">Computadores remotos devem ter uma das plataformas necessárias instaladas para o componente funcione corretamente.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>If multiple <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> objects are watching the same UNC path in Windows XP prior to Service Pack 1, or Windows 2000 SP2 or earlier, then only one of the objects will raise an event.</source>
          <target state="translated">Se vários <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> objetos observam o mesmo caminho UNC no Windows XP antes de Service Pack 1 ou Windows 2000 SP2 ou anterior, e somente um dos objetos irá gerar um evento.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>On machines running Windows XP SP1 and newer, Windows 2000 SP3 or newer or Windows Server 2003, all <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> objects will raise the appropriate events.</source>
          <target state="translated">Em computadores executando o Windows XP SP1 e mais recente, Windows 2000 SP3 ou posterior ou Windows Server 2003, todos os <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> objetos gerará os eventos adequados.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>Note that a <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> may miss an event when the buffer size is exceeded.</source>
          <target state="translated">Observe que um <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> poderá perder um evento quando o tamanho do buffer é excedido.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>To avoid missing events, follow these guidelines:</source>
          <target state="translated">Para evitar a perda de eventos, siga estas diretrizes:</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>Increase the buffer size by setting the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.InternalBufferSize%2A&gt;</ph> property.</source>
          <target state="translated">Aumentar o tamanho do buffer, definindo o <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.InternalBufferSize%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>Avoid watching files with long file names, because a long file name contributes to filling up the buffer.</source>
          <target state="translated">Evite observar arquivos com nomes de arquivo longos, como um nome de arquivo longo contribuem para preencher o buffer.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>Consider renaming these files using shorter names.</source>
          <target state="translated">Considere a possibilidade de renomear esses arquivos usando nomes mais curtos.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>Keep your event handling code as short as possible.</source>
          <target state="translated">Manter o código mais curto possível de manipulação de eventos.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> to watch the directory specified at run time.</source>
          <target state="translated">O exemplo a seguir cria um <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> para inspecionar o diretório especificado em tempo de execução.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>The component is set to watch for changes in <ph id="ph1">`LastWrite`</ph> and <ph id="ph2">`LastAccess`</ph> time, the creation, deletion, or renaming of text files in the directory.</source>
          <target state="translated">O componente é definido para detectar alterações em <ph id="ph1">`LastWrite`</ph> e <ph id="ph2">`LastAccess`</ph> do tempo, a criação, exclusão ou renomeação de arquivos de texto no diretório.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>If a file is changed, created, or deleted, the path to the file prints to the console.</source>
          <target state="translated">Se um arquivo for alterado, criado ou excluído, o caminho para o arquivo imprime no console.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>When a file is renamed, the old and new paths print to the console.</source>
          <target state="translated">Quando um arquivo é renomeado, os caminhos de novos e antigos de impressão para o console.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>Use the <ph id="ph1">&lt;xref:System.Diagnostics&gt;</ph> and <ph id="ph2">&lt;xref:System.IO&gt;</ph> namespaces for this example.</source>
          <target state="translated">Use o <ph id="ph1">&lt;xref:System.Diagnostics&gt;</ph> e <ph id="ph2">&lt;xref:System.IO&gt;</ph> namespaces para este exemplo.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>for deriving from the <ph id="ph1">&lt;see cref="T:System.Diagnostics.ProcessStartInfo" /&gt;</ph> class.</source>
          <target state="translated">para derivar do <ph id="ph1">&lt;see cref="T:System.Diagnostics.ProcessStartInfo" /&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileSystemWatcher">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" /&gt;</ph>; Named Permission Sets: <ph id="ph2">&lt;see langword="FullTrust" /&gt;</ph>.</source>
          <target state="translated">Valor de demanda: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" /&gt;</ph>; Conjuntos de permissões nomeadas: <ph id="ph2">&lt;see langword="FullTrust" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="T:System.IO.FileSystemWatcher">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.FileSystemWatcher" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.IO.FileSystemWatcher" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.IO.FileSystemWatcher.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.FileSystemWatcher" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.IO.FileSystemWatcher" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.#ctor">
          <source>You cannot watch a remote computer that does not have Windows NT or Windows 2000.</source>
          <target state="translated">Você não pode assistir a um computador remoto que não tenha o Windows NT ou Windows 2000.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.#ctor">
          <source>You cannot watch a remote Windows NT 4.0 computer from a Windows NT 4.0 computer.</source>
          <target state="translated">Você não pode assistir a um computador remoto do Windows NT 4.0 em um computador Windows NT 4.0.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.#ctor">
          <source>The following table shows initial property values for an instance of <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph>.</source>
          <target state="translated">A tabela a seguir mostra os valores de propriedade inicial para uma instância do <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.#ctor">
          <source>Property</source>
          <target state="translated">Propriedade</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.#ctor">
          <source>Initial Value</source>
          <target state="translated">Valor inicial</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.#ctor">
          <source>bitwise OR combination of <ph id="ph1">`LastWrite`</ph>, <ph id="ph2">`FileName`</ph>, and <ph id="ph3">`DirectoryName`</ph></source>
          <target state="translated">combinação de OR bit a bit de <ph id="ph1">`LastWrite`</ph>, <ph id="ph2">`FileName`</ph>, e <ph id="ph3">`DirectoryName`</ph></target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.#ctor">
          <source>"*.<ph id="ph1">\*</ph>" (Watch all files.)</source>
          <target state="translated">"*. <ph id="ph1">\*</ph>"(Assista a todos os arquivos.)</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.#ctor">
          <source>8192</source>
          <target state="translated">8192</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.#ctor">
          <source>empty string ("")</source>
          <target state="translated">Cadeia de caracteres vazia ("")</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.#ctor">
          <source>The component will not watch the specified directory until the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Path%2A&gt;</ph> is set, and <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A&gt;</ph> is <ph id="ph3">`true`</ph>.</source>
          <target state="translated">O componente não observará o diretório especificado até o <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Path%2A&gt;</ph> for definida, e <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A&gt;</ph> é <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.#ctor">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> object to watch the directory specified at run time.</source>
          <target state="translated">O exemplo a seguir cria um <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> objeto assistir o diretório especificado em tempo de execução.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.#ctor">
          <source>The <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> object watches for changes in <ph id="ph2">`LastWrite`</ph> and <ph id="ph3">`LastAccess`</ph> times, and for the creation, deletion, or renaming of text files in the directory.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> objeto observa alterações em <ph id="ph2">`LastWrite`</ph> e <ph id="ph3">`LastAccess`</ph> vezes e para a criação, exclusão ou renomeação de texto arquivos no diretório.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.#ctor">
          <source>If a file is changed, created, or deleted, the path to the file displays to the console.</source>
          <target state="translated">Se um arquivo for alterado, criado ou excluído, o caminho para o arquivo exibe no console.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.#ctor">
          <source>When a file is renamed, the old and new paths display to the console.</source>
          <target state="translated">Quando um arquivo é renomeado, os caminhos antigos e novos exibem no console.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.#ctor">
          <source>This example uses the <ph id="ph1">&lt;xref:System.Diagnostics&gt;</ph> and <ph id="ph2">&lt;xref:System.IO&gt;</ph> namespaces.</source>
          <target state="translated">Este exemplo usa o <ph id="ph1">&lt;xref:System.Diagnostics&gt;</ph> e <ph id="ph2">&lt;xref:System.IO&gt;</ph> namespaces.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.#ctor">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">para confiança total do chamador imediato.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.#ctor">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">Este membro não pode ser usado pelo código parcialmente confiável.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.IO.FileSystemWatcher.#ctor(System.String)">
          <source>The directory to monitor, in standard or Universal Naming Convention (UNC) notation.</source>
          <target state="translated">O diretório a ser monitorado, em notação UNC (Universal Naming Convention) ou padrão.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.IO.FileSystemWatcher.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.FileSystemWatcher" /&gt;</ph> class, given the specified directory to monitor.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.IO.FileSystemWatcher" /&gt;</ph>, conforme o diretório especificado para monitorar.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.#ctor(System.String)">
          <source>The component will not watch the specified directory until the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Path%2A&gt;</ph> is set, and <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A&gt;</ph> is <ph id="ph3">`true`</ph>.</source>
          <target state="translated">O componente não observará o diretório especificado até o <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Path%2A&gt;</ph> for definida, e <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A&gt;</ph> é <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.#ctor(System.String)">
          <source>The component can watch files on your personal computer, a network drive, or a remote computer.</source>
          <target state="translated">O componente pode assistir a arquivos no seu computador pessoal, uma unidade de rede ou um computador remoto.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.#ctor(System.String)">
          <source>You cannot watch a remote computer that does not have Windows NT or Windows 2000.</source>
          <target state="translated">Você não pode assistir a um computador remoto que não tenha o Windows NT ou Windows 2000.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.#ctor(System.String)">
          <source>You cannot watch a remote Windows NT 4.0 computer from a Windows NT 4.0 computer.</source>
          <target state="translated">Você não pode assistir a um computador remoto do Windows NT 4.0 em um computador Windows NT 4.0.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.#ctor(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Filter%2A&gt;</ph> property is set by default to watch all files.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Filter%2A&gt;</ph> por padrão, a propriedade é definida para inspecionar todos os arquivos.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.IO.FileSystemWatcher.#ctor(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="path" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">O parâmetro <ph id="ph1">&lt;paramref name="path" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.IO.FileSystemWatcher.#ctor(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="path" /&gt;</ph> parameter is an empty string ("").</source>
          <target state="translated">O parâmetro <ph id="ph1">&lt;paramref name="path" /&gt;</ph> é uma cadeia de caracteres vazia ("").</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.IO.FileSystemWatcher.#ctor(System.String)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.IO.FileSystemWatcher.#ctor(System.String)">
          <source>The path specified through the <ph id="ph1">&lt;paramref name="path" /&gt;</ph> parameter does not exist.</source>
          <target state="translated">O caminho especificado por meio do parâmetro <ph id="ph1">&lt;paramref name="path" /&gt;</ph> não existe.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.IO.FileSystemWatcher.#ctor(System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is too long.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> é muito longo.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.#ctor(System.String)">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">para confiança total do chamador imediato.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.#ctor(System.String)">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">Este membro não pode ser usado pelo código parcialmente confiável.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.IO.FileSystemWatcher.#ctor(System.String,System.String)">
          <source>The directory to monitor, in standard or Universal Naming Convention (UNC) notation.</source>
          <target state="translated">O diretório a ser monitorado, em notação UNC (Universal Naming Convention) ou padrão.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.IO.FileSystemWatcher.#ctor(System.String,System.String)">
          <source>The type of files to watch.</source>
          <target state="translated">O tipo de arquivos a ser inspecionado.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.IO.FileSystemWatcher.#ctor(System.String,System.String)">
          <source>For example, "*.txt" watches for changes to all text files.</source>
          <target state="translated">Por exemplo, "*. txt" observa alterações em todos os arquivos de texto.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.IO.FileSystemWatcher.#ctor(System.String,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.FileSystemWatcher" /&gt;</ph> class, given the specified directory and type of files to monitor.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.IO.FileSystemWatcher" /&gt;</ph>, conforme o diretório especificado e os tipos de arquivo a se monitorar.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.#ctor(System.String,System.String)">
          <source>The component will not watch the specified directory until the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Path%2A&gt;</ph> is set, and <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A&gt;</ph> is <ph id="ph3">`true`</ph>.</source>
          <target state="translated">O componente não observará o diretório especificado até o <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Path%2A&gt;</ph> for definida, e <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A&gt;</ph> é <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.#ctor(System.String,System.String)">
          <source>The component can watch files on your personal computer, a network drive, or a remote computer.</source>
          <target state="translated">O componente pode assistir a arquivos no seu computador pessoal, uma unidade de rede ou um computador remoto.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.#ctor(System.String,System.String)">
          <source>You cannot watch a remote computer that does not have Windows NT or Windows 2000.</source>
          <target state="translated">Você não pode assistir a um computador remoto que não tenha o Windows NT ou Windows 2000.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.#ctor(System.String,System.String)">
          <source>You cannot watch a remote Windows NT 4.0 computer from a Windows NT 4.0 computer.</source>
          <target state="translated">Você não pode assistir a um computador remoto do Windows NT 4.0 em um computador Windows NT 4.0.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.IO.FileSystemWatcher.#ctor(System.String,System.String)">
          <source>The <ph id="ph1">&lt;paramref name="path" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">O parâmetro <ph id="ph1">&lt;paramref name="path" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.IO.FileSystemWatcher.#ctor(System.String,System.String)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.IO.FileSystemWatcher.#ctor(System.String,System.String)">
          <source>The <ph id="ph1">&lt;paramref name="filter" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">O parâmetro <ph id="ph1">&lt;paramref name="filter" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.IO.FileSystemWatcher.#ctor(System.String,System.String)">
          <source>The <ph id="ph1">&lt;paramref name="path" /&gt;</ph> parameter is an empty string ("").</source>
          <target state="translated">O parâmetro <ph id="ph1">&lt;paramref name="path" /&gt;</ph> é uma cadeia de caracteres vazia ("").</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.IO.FileSystemWatcher.#ctor(System.String,System.String)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.IO.FileSystemWatcher.#ctor(System.String,System.String)">
          <source>The path specified through the <ph id="ph1">&lt;paramref name="path" /&gt;</ph> parameter does not exist.</source>
          <target state="translated">O caminho especificado por meio do parâmetro <ph id="ph1">&lt;paramref name="path" /&gt;</ph> não existe.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.IO.FileSystemWatcher.#ctor(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is too long.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> é muito longo.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.#ctor(System.String,System.String)">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">para confiança total do chamador imediato.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.#ctor(System.String,System.String)">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">Este membro não pode ser usado pelo código parcialmente confiável.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.IO.FileSystemWatcher.BeginInit">
          <source>Begins the initialization of a <ph id="ph1">&lt;see cref="T:System.IO.FileSystemWatcher" /&gt;</ph> used on a form or used by another component.</source>
          <target state="translated">Inicia a inicialização de um <ph id="ph1">&lt;see cref="T:System.IO.FileSystemWatcher" /&gt;</ph> usado em um formulário ou por outro componente.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.IO.FileSystemWatcher.BeginInit">
          <source>The initialization occurs at run time.</source>
          <target state="translated">A inicialização ocorre no tempo de execução.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.BeginInit">
          <source>The <ph id="ph1">[!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]</ph> design environment uses this method to start the initialization of a component used on a form or used by another component.</source>
          <target state="translated">O <ph id="ph1">[!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]</ph> design ambiente usa esse método para iniciar a inicialização de um componente usado em um formulário ou usado por outro componente.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.BeginInit">
          <source>The <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.EndInit%2A&gt;</ph> method ends the initialization.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.EndInit%2A&gt;</ph> método termina a inicialização.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.BeginInit">
          <source>Using the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.BeginInit%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.EndInit%2A&gt;</ph> methods prevents the control from being used before it is fully initialized.</source>
          <target state="translated">Usando o <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.BeginInit%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.EndInit%2A&gt;</ph> métodos impede que o controle que está sendo usada antes de ser totalmente inicializado.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="E:System.IO.FileSystemWatcher.Changed">
          <source>Occurs when a file or directory in the specified <ph id="ph1">&lt;see cref="P:System.IO.FileSystemWatcher.Path" /&gt;</ph> is changed.</source>
          <target state="translated">Ocorre quando um arquivo ou diretório no <ph id="ph1">&lt;see cref="P:System.IO.FileSystemWatcher.Path" /&gt;</ph> especificado é alterado.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Changed">
          <source>The <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Changed&gt;</ph> event is raised when changes are made to the size, system attributes, last write time, last access time, or security permissions of a file or directory in the directory being monitored.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Changed&gt;</ph> é gerado quando as alterações são feitas para o tamanho, atributos de sistema, da última gravação do tempo, último tempo de acesso ou permissões de segurança de um arquivo ou diretório no diretório que está sendo monitorado.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Changed">
          <source>Common file system operations might raise more than one event.</source>
          <target state="translated">Operações de sistema de arquivos comuns podem gerar mais de um evento.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Changed">
          <source>For example, when a file is moved from one directory to another, several <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.OnChanged%2A&gt;</ph> and some <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.OnCreated%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.IO.FileSystemWatcher.OnDeleted%2A&gt;</ph> events might be raised.</source>
          <target state="translated">Por exemplo, quando um arquivo é movido de um diretório para outro, várias <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.OnChanged%2A&gt;</ph> e alguns <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.OnCreated%2A&gt;</ph> e <ph id="ph3">&lt;xref:System.IO.FileSystemWatcher.OnDeleted%2A&gt;</ph> eventos poderão ser gerados.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Changed">
          <source>Moving a file is a complex operation that consists of multiple simple operations, therefore raising multiple events.</source>
          <target state="translated">Mover que um arquivo é uma operação complexa que consiste em várias operações simples, portanto, gerando vários eventos.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Changed">
          <source>Likewise, some applications (for example, antivirus software) might cause additional file system events that are detected by <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph>.</source>
          <target state="translated">Da mesma forma, alguns aplicativos (por exemplo, um software antivírus) podem causar a eventos do sistema de arquivos adicionais que são detectados pelo <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Changed">
          <source>Use <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.NotifyFilter%2A&gt;</ph> to restrict the number of notifications raised when this event is handled.</source>
          <target state="translated">Use <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.NotifyFilter%2A&gt;</ph> para restringir o número de notificações gerada quando esse evento é manipulado.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Changed">
          <source>The <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Changed&gt;</ph> event is raised unexpectedly when a file is renamed, but is not raised when a directory is renamed.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Changed&gt;</ph> é gerado inesperadamente quando um arquivo é renomeado, mas não é gerado quando um diretório é renomeado.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Changed">
          <source>To watch for renaming, use the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Renamed&gt;</ph> event.</source>
          <target state="translated">Para assistir a renomeação, use o <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Renamed&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Changed">
          <source>The order in which the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Changed&gt;</ph> event is raised in relation to the other <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> events may change when the <ph id="ph3">&lt;xref:System.IO.FileSystemWatcher.SynchronizingObject%2A&gt;</ph> property is not <ph id="ph4">`null`</ph>.</source>
          <target state="translated">A ordem na qual o <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Changed&gt;</ph> é gerado em relação à outra <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> eventos podem ser alterado quando o <ph id="ph3">&lt;xref:System.IO.FileSystemWatcher.SynchronizingObject%2A&gt;</ph> propriedade não é <ph id="ph4">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Changed">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Changed&gt;</ph> event to display the file path to the console whenever the watched file is changed.</source>
          <target state="translated">O exemplo a seguir usa o <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Changed&gt;</ph> evento para exibir o caminho do arquivo para o console sempre que o arquivo observado é alterado.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="E:System.IO.FileSystemWatcher.Created">
          <source>Occurs when a file or directory in the specified <ph id="ph1">&lt;see cref="P:System.IO.FileSystemWatcher.Path" /&gt;</ph> is created.</source>
          <target state="translated">Ocorre quando um arquivo ou diretório no <ph id="ph1">&lt;see cref="P:System.IO.FileSystemWatcher.Path" /&gt;</ph> especificado é criado.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Created">
          <source>Some common occurrences, such as copying or moving a file or directory, do not correspond directly to an event, but these occurrences do cause events to be raised.</source>
          <target state="translated">Algumas ocorrências comuns, como copiar ou mover um arquivo ou diretório, não corresponde diretamente a um evento, mas essas ocorrências gerar eventos a serem gerados.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Created">
          <source>When you copy a file or directory, the system raises a <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Created&gt;</ph> event in the directory to which the file was copied, if that directory is being watched.</source>
          <target state="translated">Quando você copia um arquivo ou diretório, o sistema gera um <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Created&gt;</ph> evento no diretório ao qual o arquivo foi copiado, se esse diretório é que é inspecionado.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Created">
          <source>If the directory from which you copied was being watched by another instance of <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph>, no event would be raised.</source>
          <target state="translated">Se o diretório do qual você copiou foi que é inspecionado por outra instância do <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph>, nenhum evento será gerado.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Created">
          <source>For example, you create two instances of <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph>.</source>
          <target state="translated">Por exemplo, crie duas instâncias de <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Created">
          <source>FileSystemWatcher1 is set to watch "C:\My Documents", and FileSystemWatcher2 is set to watch "C:\Your Documents".</source>
          <target state="translated">FileSystemWatcher1 é definido como assistir "C:\My Documents" e FileSystemWatcher2 é definido como assistir "C:\Your documentos".</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Created">
          <source>If you copy a file from "My Documents" into "Your Documents", a <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Created&gt;</ph> event will be raised by FileSystemWatcher2, but no event is raised for FileSystemWatcher1.</source>
          <target state="translated">Se você copiar um arquivo de "Meus documentos" em "Seus documentos", um <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Created&gt;</ph> evento será gerado por FileSystemWatcher2, mas nenhum evento é gerado para FileSystemWatcher1.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Created">
          <source>Unlike copying, moving a file or directory would raise two events.</source>
          <target state="translated">Ao contrário de copiar, mover um arquivo ou diretório aumentaria dois eventos.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Created">
          <source>From the previous example, if you moved a file from "My Documents" to "Your Documents", a <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Created&gt;</ph> event would be raised by FileSystemWatcher2 and a <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.Deleted&gt;</ph> event would be raised by FileSystemWatcher1.</source>
          <target state="translated">Do exemplo anterior, se você moveu um arquivo de "Meus documentos" para "Seus documentos", um <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Created&gt;</ph> deve ser gerado por FileSystemWatcher2 e um <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.Deleted&gt;</ph> deve ser gerado por FileSystemWatcher1.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Created">
          <source>Common file system operations might raise more than one event.</source>
          <target state="translated">Operações de sistema de arquivos comuns podem gerar mais de um evento.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Created">
          <source>For example, when a file is moved from one directory to another, several <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.OnChanged%2A&gt;</ph> and some <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.OnCreated%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.IO.FileSystemWatcher.OnDeleted%2A&gt;</ph> events might be raised.</source>
          <target state="translated">Por exemplo, quando um arquivo é movido de um diretório para outro, várias <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.OnChanged%2A&gt;</ph> e alguns <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.OnCreated%2A&gt;</ph> e <ph id="ph3">&lt;xref:System.IO.FileSystemWatcher.OnDeleted%2A&gt;</ph> eventos poderão ser gerados.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Created">
          <source>Moving a file is a complex operation that consists of multiple simple operations, therefore raising multiple events.</source>
          <target state="translated">Mover que um arquivo é uma operação complexa que consiste em várias operações simples, portanto, gerando vários eventos.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Created">
          <source>Likewise, some applications (for example, antivirus software) might cause additional file system events that are detected by <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph>.</source>
          <target state="translated">Da mesma forma, alguns aplicativos (por exemplo, um software antivírus) podem causar a eventos do sistema de arquivos adicionais que são detectados pelo <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Created">
          <source>The order in which the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Created&gt;</ph> event is raised in relation to the other <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> events may change when the <ph id="ph3">&lt;xref:System.IO.FileSystemWatcher.SynchronizingObject%2A&gt;</ph> property is not <ph id="ph4">`null`</ph>.</source>
          <target state="translated">A ordem na qual o <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Created&gt;</ph> é gerado em relação à outra <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> eventos podem ser alterado quando o <ph id="ph3">&lt;xref:System.IO.FileSystemWatcher.SynchronizingObject%2A&gt;</ph> propriedade não é <ph id="ph4">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Created">
          <source>The <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.OnCreated%2A&gt;</ph> event is raised as soon as a file is created.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.OnCreated%2A&gt;</ph> é gerado como um arquivo é criado.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Created">
          <source>If a file is being copied or transferred into a watched directory, the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.OnCreated%2A&gt;</ph> event will be raised immediately, followed by one or more <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.OnChanged%2A&gt;</ph> events.</source>
          <target state="translated">Se um arquivo está sendo copiado ou transferido para um diretório monitorado, o <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.OnCreated%2A&gt;</ph> evento ocorrerá imediatamente, seguido por um ou mais <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.OnChanged%2A&gt;</ph> eventos.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Created">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Created&gt;</ph> event to display the file path to the console whenever the watched file is created.</source>
          <target state="translated">O exemplo a seguir usa o <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Created&gt;</ph> evento para exibir o caminho do arquivo para o console sempre que o arquivo observado é criado.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="E:System.IO.FileSystemWatcher.Deleted">
          <source>Occurs when a file or directory in the specified <ph id="ph1">&lt;see cref="P:System.IO.FileSystemWatcher.Path" /&gt;</ph> is deleted.</source>
          <target state="translated">Ocorre quando um arquivo ou diretório no <ph id="ph1">&lt;see cref="P:System.IO.FileSystemWatcher.Path" /&gt;</ph> especificado é excluído.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Deleted">
          <source>Some common occurrences, such as copying or moving a file or directory, do not correspond directly to an event, but these occurrences do cause events to be raised.</source>
          <target state="translated">Algumas ocorrências comuns, como copiar ou mover um arquivo ou diretório, não corresponde diretamente a um evento, mas essas ocorrências gerar eventos a serem gerados.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Deleted">
          <source>When you copy a file or directory, the system raises a <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Created&gt;</ph> event in the directory to which the file was copied, if that directory is being watched.</source>
          <target state="translated">Quando você copia um arquivo ou diretório, o sistema gera um <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Created&gt;</ph> evento no diretório ao qual o arquivo foi copiado, se esse diretório é que é inspecionado.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Deleted">
          <source>If the directory from which you copied was being watched by another instance of <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph>, no event would be raised.</source>
          <target state="translated">Se o diretório do qual você copiou foi que é inspecionado por outra instância do <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph>, nenhum evento será gerado.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Deleted">
          <source>For example, you create two instances of <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph>.</source>
          <target state="translated">Por exemplo, crie duas instâncias de <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Deleted">
          <source>FileSystemWatcher1 is set to watch "C:\My Documents", and FileSystemWatcher2 is set to watch "C:\Your Documents".</source>
          <target state="translated">FileSystemWatcher1 é definido como assistir "C:\My Documents" e FileSystemWatcher2 é definido como assistir "C:\Your documentos".</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Deleted">
          <source>If you copy a file from "My Documents" into "Your Documents", a <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Created&gt;</ph> event will be raised by FileSystemWatcher2, but no event is raised for FileSystemWatcher1.</source>
          <target state="translated">Se você copiar um arquivo de "Meus documentos" em "Seus documentos", um <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Created&gt;</ph> evento será gerado por FileSystemWatcher2, mas nenhum evento é gerado para FileSystemWatcher1.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Deleted">
          <source>Unlike copying, moving a file or directory would raise two events.</source>
          <target state="translated">Ao contrário de copiar, mover um arquivo ou diretório aumentaria dois eventos.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Deleted">
          <source>From the previous example, if you moved a file from "My Documents" to "Your Documents", a <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Created&gt;</ph> event would be raised by FileSystemWatcher2 and a <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.Deleted&gt;</ph> event would be raised by FileSystemWatcher1.</source>
          <target state="translated">Do exemplo anterior, se você moveu um arquivo de "Meus documentos" para "Seus documentos", um <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Created&gt;</ph> deve ser gerado por FileSystemWatcher2 e um <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.Deleted&gt;</ph> deve ser gerado por FileSystemWatcher1.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Deleted">
          <source>Common file system operations might raise more than one event.</source>
          <target state="translated">Operações de sistema de arquivos comuns podem gerar mais de um evento.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Deleted">
          <source>For example, when a file is moved from one directory to another, several <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.OnChanged%2A&gt;</ph> and some <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.OnCreated%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.IO.FileSystemWatcher.OnDeleted%2A&gt;</ph> events might be raised.</source>
          <target state="translated">Por exemplo, quando um arquivo é movido de um diretório para outro, várias <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.OnChanged%2A&gt;</ph> e alguns <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.OnCreated%2A&gt;</ph> e <ph id="ph3">&lt;xref:System.IO.FileSystemWatcher.OnDeleted%2A&gt;</ph> eventos poderão ser gerados.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Deleted">
          <source>Moving a file is a complex operation that consists of multiple simple operations, therefore raising multiple events.</source>
          <target state="translated">Mover que um arquivo é uma operação complexa que consiste em várias operações simples, portanto, gerando vários eventos.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Deleted">
          <source>Likewise, some applications (for example, antivirus software) might cause additional file system events that are detected by <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph>.</source>
          <target state="translated">Da mesma forma, alguns aplicativos (por exemplo, um software antivírus) podem causar a eventos do sistema de arquivos adicionais que são detectados pelo <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Deleted">
          <source>The order in which the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Deleted&gt;</ph> event is raised in relation to the other <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> events may change when the <ph id="ph3">&lt;xref:System.IO.FileSystemWatcher.SynchronizingObject%2A&gt;</ph> property is not <ph id="ph4">`null`</ph>.</source>
          <target state="translated">A ordem na qual o <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Deleted&gt;</ph> é gerado em relação à outra <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> eventos podem ser alterado quando o <ph id="ph3">&lt;xref:System.IO.FileSystemWatcher.SynchronizingObject%2A&gt;</ph> propriedade não é <ph id="ph4">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Deleted">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Deleted&gt;</ph> event to display the file path to the console whenever the watched file is deleted.</source>
          <target state="translated">O exemplo a seguir usa o <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Deleted&gt;</ph> evento para exibir o caminho do arquivo para o console sempre que o arquivo observado é excluído.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.IO.FileSystemWatcher.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para liberar recursos gerenciados e não gerenciados; <ph id="ph2">&lt;see langword="false" /&gt;</ph> para liberar apenas recursos não gerenciados.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.IO.FileSystemWatcher.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.IO.FileSystemWatcher" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated">Libera os recursos não gerenciados usados pelo <ph id="ph1">&lt;see cref="T:System.IO.FileSystemWatcher" /&gt;</ph> e opcionalmente libera os recursos gerenciados.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph> method and the <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">Este método é chamado pelo método público <ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph> e pelo método <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph> invokes the protected <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.Dispose%2A&gt;</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph> invoca o método <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.Dispose%2A&gt;</ph> protegido com o parâmetro <ph id="ph3">`disposing`</ph> definido como <ph id="ph4">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.Dispose%2A&gt;</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invoca <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.Dispose%2A&gt;</ph> com <ph id="ph3">`disposing`</ph> definido como <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this <ph id="ph3">&lt;xref:System.IO.Compression.DeflateStream&gt;</ph> references.</source>
          <target state="translated">Quando o <ph id="ph1">`disposing`</ph> parâmetro é <ph id="ph2">`true`</ph>, esse método libera todos os recursos mantidos por qualquer objeto gerenciado que este <ph id="ph3">&lt;xref:System.IO.Compression.DeflateStream&gt;</ph> referências.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph> method of each referenced object.</source>
          <target state="translated">Este método invoca o método <ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph> de cada objeto referenciado.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see cref="M:System.ComponentModel.Component.Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.ComponentModel.Component.Dispose" /&gt;</ph> pode ser chamado várias vezes por outros objetos.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.IO.FileSystemWatcher.Dispose(System.Boolean)" /&gt;</ph> be careful not to reference objects that have been previously disposed of in an earlier call to <ph id="ph2">&lt;see cref="M:System.ComponentModel.Component.Dispose" /&gt;</ph>.</source>
          <target state="translated">Ao substituir <ph id="ph1">&lt;see cref="M:System.IO.FileSystemWatcher.Dispose(System.Boolean)" /&gt;</ph> cuidado para não fazer referência a objetos que têm foi descartados anteriormente em uma chamada anterior para <ph id="ph2">&lt;see cref="M:System.ComponentModel.Component.Dispose" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see cref="M:System.IO.FileSystemWatcher.Dispose(System.Boolean)" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">Para obter mais informações sobre como implementar <ph id="ph1">&lt;see cref="M:System.IO.FileSystemWatcher.Dispose(System.Boolean)" /&gt;</ph>, consulte <bpt id="p1">[</bpt>implementar um método Dispose<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see cref="M:System.ComponentModel.Component.Dispose" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</source>
          <target state="translated">Para obter mais informações sobre <ph id="ph1">&lt;see cref="M:System.ComponentModel.Component.Dispose" /&gt;</ph> e <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, consulte <bpt id="p1">[</bpt>limpeza de recursos não gerenciados<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="P:System.IO.FileSystemWatcher.EnableRaisingEvents">
          <source>Gets or sets a value indicating whether the component is enabled.</source>
          <target state="translated">Obtém ou define um valor que indica se o componente está habilitado.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.EnableRaisingEvents">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the component is enabled; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o componente estiver habilitado; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.EnableRaisingEvents">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">O padrão é <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.EnableRaisingEvents">
          <source>If you are using the component on a designer in <ph id="ph1">[!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]</ph>, the default is <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Se você estiver usando o componente em um designer no <ph id="ph1">[!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]</ph>, o padrão é <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.EnableRaisingEvents">
          <source>The component will not raise events unless you set <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A&gt;</ph> to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">O componente não gerará eventos, a menos que você defina <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A&gt;</ph> para <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.EnableRaisingEvents">
          <source>The component will not watch the specified directory until the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Path%2A&gt;</ph> property has been set and <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A&gt;</ph> is <ph id="ph3">`true`</ph>.</source>
          <target state="translated">O componente não observará o diretório especificado até o <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Path%2A&gt;</ph> propriedade foi definida e <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A&gt;</ph> é <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.EnableRaisingEvents">
          <source>The <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.WaitForChanged%2A&gt;</ph> method allows event handlers to be invoked to respond to file changes even if this property is set to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.WaitForChanged%2A&gt;</ph> método permite que os manipuladores de eventos a ser invocado para responder às alterações de arquivo, mesmo se essa propriedade é definida como <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.EnableRaisingEvents">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> to watch the directory specified at run time.</source>
          <target state="translated">O exemplo a seguir cria um <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> para inspecionar o diretório especificado em tempo de execução.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.EnableRaisingEvents">
          <source>The component is set to watch for changes in <ph id="ph1">`LastWrite`</ph> and <ph id="ph2">`LastAccess`</ph> time, the creation, deletion, or renaming of text files in the directory.</source>
          <target state="translated">O componente é definido para detectar alterações em <ph id="ph1">`LastWrite`</ph> e <ph id="ph2">`LastAccess`</ph> do tempo, a criação, exclusão ou renomeação de arquivos de texto no diretório.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.EnableRaisingEvents">
          <source>If a file is changed, created, or deleted, the path to the file prints to the console.</source>
          <target state="translated">Se um arquivo for alterado, criado ou excluído, o caminho para o arquivo imprime no console.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.EnableRaisingEvents">
          <source>When a file is renamed, the old and new paths print to the console.</source>
          <target state="translated">Quando um arquivo é renomeado, os caminhos de novos e antigos de impressão para o console.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.EnableRaisingEvents">
          <source>Use the <ph id="ph1">&lt;xref:System.Diagnostics&gt;</ph> and <ph id="ph2">&lt;xref:System.IO&gt;</ph> namespaces for this example.</source>
          <target state="translated">Use o <ph id="ph1">&lt;xref:System.Diagnostics&gt;</ph> e <ph id="ph2">&lt;xref:System.IO&gt;</ph> namespaces para este exemplo.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="P:System.IO.FileSystemWatcher.EnableRaisingEvents">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.FileSystemWatcher" /&gt;</ph> object has been disposed.</source>
          <target state="translated">O objeto <ph id="ph1">&lt;see cref="T:System.IO.FileSystemWatcher" /&gt;</ph> foi descartado.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="P:System.IO.FileSystemWatcher.EnableRaisingEvents">
          <source>The current operating system is not Microsoft Windows NT or later.</source>
          <target state="translated">O sistema operacional atual não é o Microsoft Windows NT ou posterior.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="P:System.IO.FileSystemWatcher.EnableRaisingEvents">
          <source>The directory specified in <ph id="ph1">&lt;see cref="P:System.IO.FileSystemWatcher.Path" /&gt;</ph> could not be found.</source>
          <target state="translated">Não foi possível encontrar o diretório especificado em <ph id="ph1">&lt;see cref="P:System.IO.FileSystemWatcher.Path" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="P:System.IO.FileSystemWatcher.EnableRaisingEvents">
          <source><ph id="ph1">&lt;see cref="P:System.IO.FileSystemWatcher.Path" /&gt;</ph> has not been set or is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.IO.FileSystemWatcher.Path" /&gt;</ph> não foi definido ou é inválido.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.IO.FileSystemWatcher.EndInit">
          <source>Ends the initialization of a <ph id="ph1">&lt;see cref="T:System.IO.FileSystemWatcher" /&gt;</ph> used on a form or used by another component.</source>
          <target state="translated">Encerra a inicialização de um <ph id="ph1">&lt;see cref="T:System.IO.FileSystemWatcher" /&gt;</ph> usado em um formulário ou por outro componente.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.IO.FileSystemWatcher.EndInit">
          <source>The initialization occurs at run time.</source>
          <target state="translated">A inicialização ocorre no tempo de execução.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.EndInit">
          <source>The <ph id="ph1">[!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]</ph> design environment uses this method to end the initialization of a component used on a form or used by another component.</source>
          <target state="translated">O <ph id="ph1">[!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]</ph> design ambiente usa esse método para terminar a inicialização de um componente usado em um formulário ou usado por outro componente.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.EndInit">
          <source>The <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.BeginInit%2A&gt;</ph> method starts the initialization.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.BeginInit%2A&gt;</ph> método inicia a inicialização.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.EndInit">
          <source>Using the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.BeginInit%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.EndInit%2A&gt;</ph> methods prevents the control from being used before it is fully initialized.</source>
          <target state="translated">Usando o <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.BeginInit%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.EndInit%2A&gt;</ph> métodos impede que o controle que está sendo usada antes de ser totalmente inicializado.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="E:System.IO.FileSystemWatcher.Error">
          <source>Occurs when the instance of <ph id="ph1">&lt;see cref="T:System.IO.FileSystemWatcher" /&gt;</ph> is unable to continue monitoring changes or when the internal buffer overflows.</source>
          <target state="translated">Ocorre quando a instância de <ph id="ph1">&lt;see cref="T:System.IO.FileSystemWatcher" /&gt;</ph> não pode continuar a monitorar alterações ou quando o buffer interno estoura.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Error">
          <source>This event is raised whenever something prevents the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> object from monitoring changes.</source>
          <target state="translated">Esse evento é gerado sempre que algo impede o <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> objeto de monitoramento de alterações.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Error">
          <source>For example, if the object is monitoring changes in a remote directory and the connection to that directory is lost, the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Error&gt;</ph> event is raised.</source>
          <target state="translated">Por exemplo, se o objeto está monitorando as alterações em um diretório remoto e a conexão a esse diretório é perdido, o <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Error&gt;</ph> é gerado.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Error">
          <source>The system notifies you of file changes, and it stores those changes in a buffer that the component creates and passes to the APIs.</source>
          <target state="translated">O sistema notifica sobre alterações de arquivo e armazena essas alterações em um buffer que o componente cria e passa para as APIs.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Error">
          <source>If there are many changes in a short time, the buffer can overflow.</source>
          <target state="translated">Se houver muitas alterações em um curto período de tempo, o buffer pode estourar.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Error">
          <source>This causes the component to lose track of changes in the directory, and it will only provide blanket notification.</source>
          <target state="translated">Isso faz com que o componente de perder o controle de alterações no diretório e somente ele fornecerá notificação ampla.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Error">
          <source>Increasing the size of the buffer is expensive, because it comes from non paged memory that cannot be swapped out to disk, so keep the buffer as small as possible.</source>
          <target state="translated">Aumentar o tamanho do buffer é caro, porque se trata de não paginado da memória que não pode ser trocada por disco, portanto mantenha o buffer tão pequeno quanto possível.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Error">
          <source>To avoid a buffer overflow, use the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.NotifyFilter%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.Filter%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A&gt;</ph> properties to filter out unwanted change notifications.</source>
          <target state="translated">Para evitar um estouro de buffer, use o <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.NotifyFilter%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.Filter%2A&gt;</ph>, e <ph id="ph3">&lt;xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A&gt;</ph> notificações de alteração de propriedades para filtrar indesejados.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Error">
          <source>Common file system operations might raise more than one event.</source>
          <target state="translated">Operações de sistema de arquivos comuns podem gerar mais de um evento.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Error">
          <source>For example, when a file is moved from one directory to another, several <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.OnChanged%2A&gt;</ph> and some <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.OnCreated%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.IO.FileSystemWatcher.OnDeleted%2A&gt;</ph> events might be raised.</source>
          <target state="translated">Por exemplo, quando um arquivo é movido de um diretório para outro, várias <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.OnChanged%2A&gt;</ph> e alguns <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.OnCreated%2A&gt;</ph> e <ph id="ph3">&lt;xref:System.IO.FileSystemWatcher.OnDeleted%2A&gt;</ph> eventos poderão ser gerados.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Error">
          <source>Moving a file is a complex operation that consists of multiple simple operations, therefore raising multiple events.</source>
          <target state="translated">Mover que um arquivo é uma operação complexa que consiste em várias operações simples, portanto, gerando vários eventos.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Error">
          <source>Likewise, some applications (for example, antivirus software) might cause additional file system events that are detected by <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph>.</source>
          <target state="translated">Da mesma forma, alguns aplicativos (por exemplo, um software antivírus) podem causar a eventos do sistema de arquivos adicionais que são detectados pelo <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="P:System.IO.FileSystemWatcher.Filter">
          <source>Gets or sets the filter string used to determine what files are monitored in a directory.</source>
          <target state="translated">Obtém ou define a cadeia de caracteres de filtro usada para determinar quais arquivos são monitorados em um diretório.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Filter">
          <source>The filter string.</source>
          <target state="translated">Cadeia de caracteres de filtro.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Filter">
          <source>The default is "*.<ph id="ph1">\*</ph>" (Watches all files.)</source>
          <target state="translated">O padrão é "*. <ph id="ph1">\*</ph>"(Inspeciona todos os arquivos.)</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Filter">
          <source>To watch changes in all files, set the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Filter%2A&gt;</ph> property to an empty string ("").</source>
          <target state="translated">Para assistir a alterações em todos os arquivos, defina o <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Filter%2A&gt;</ph> propriedade como uma cadeia de caracteres vazia ("").</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Filter">
          <source>To watch a specific file, set the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Filter%2A&gt;</ph> property to the file name.</source>
          <target state="translated">Para assistir a um arquivo específico, defina o <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Filter%2A&gt;</ph> propriedade para o nome do arquivo.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Filter">
          <source>For example, to watch for changes in the file MyDoc.txt, set the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Filter%2A&gt;</ph> property to "MyDoc.txt".</source>
          <target state="translated">Por exemplo, para detectar alterações no arquivo doc, defina o <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Filter%2A&gt;</ph> propriedade como "Doc".</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Filter">
          <source>You can also watch for changes in a certain type of file.</source>
          <target state="translated">Você também pode observar as alterações em um determinado tipo de arquivo.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Filter">
          <source>For example, to watch for changes in any text files, set the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Filter%2A&gt;</ph> property to "*.txt".</source>
          <target state="translated">Por exemplo, para detectar alterações em arquivos de texto, defina o <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Filter%2A&gt;</ph> propriedade como "*.txt".</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Filter">
          <source>Use of multiple filters such as "<ph id="ph1">\*</ph>.txt&amp;#124;<ph id="ph2">\*</ph>.doc" is not supported.</source>
          <target state="translated">Uso de vários filtros, como "<ph id="ph1">\*</ph>. txt&amp;#124;<ph id="ph2">\*</ph>. doc" não tem suporte.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Filter">
          <source>The <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Filter%2A&gt;</ph> property can be changed after the <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> object has started receiving events.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Filter%2A&gt;</ph> propriedade pode ser alterada após o <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> objeto começou a receber eventos.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Filter">
          <source>For more information about filtering out unwanted notifications, see the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.NotifyFilter%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.IO.FileSystemWatcher.InternalBufferSize%2A&gt;</ph> properties.</source>
          <target state="translated">Para obter mais informações sobre como filtrar notificações indesejados, consulte o <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.NotifyFilter%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A&gt;</ph>, e <ph id="ph3">&lt;xref:System.IO.FileSystemWatcher.InternalBufferSize%2A&gt;</ph> propriedades.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Filter">
          <source><ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Filter%2A&gt;</ph> accepts wildcards for matching files, as shown in the following examples.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Filter%2A&gt;</ph> aceita caracteres curinga para arquivos correspondentes, conforme mostrado nos exemplos a seguir.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Filter">
          <source>Filter string</source>
          <target state="translated">Cadeia de caracteres de filtro</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Filter">
          <source>Watches the following files</source>
          <target state="translated">Inspeciona os seguintes arquivos</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Filter">
          <source>*.<ph id="ph1">\*</ph></source>
          <target state="translated">*.<ph id="ph1">\*</ph></target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Filter">
          <source>All files (default).</source>
          <target state="translated">Todos os arquivos (padrão).</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Filter">
          <source>An empty string ("") also watches all files.</source>
          <target state="translated">Uma cadeia de caracteres vazia ("") também detecta todos os arquivos.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Filter">
          <source>*.txt</source>
          <target state="translated">*.txt</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Filter">
          <source>All files with a "txt" extension.</source>
          <target state="translated">Todos os arquivos com uma extensão "txt".</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Filter">
          <source>*recipe.doc</source>
          <target state="translated">*recipe.doc</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Filter">
          <source>All files ending in "recipe" with a "doc" extension.</source>
          <target state="translated">Todos os arquivos que terminam em "receita" com uma extensão de "documento".</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Filter">
          <source>win*.xml</source>
          <target state="translated">win*.xml</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Filter">
          <source>All files beginning with "win" with an "xml" extension.</source>
          <target state="translated">Todos os arquivos que começam com "win" com a extensão "xml".</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Filter">
          <source>Sales*200?.xls</source>
          <target state="translated">Sales*200?.xls</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Filter">
          <source>Matches the following:</source>
          <target state="translated">Coincide com o seguinte:</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Filter">
          <source>Sales July 2001.xlsSales Aug 2002.xlsSales March 2004.xls</source>
          <target state="translated">Julho de vendas 2001.xlsSales agosto 2002.xlsSales março 2004.xls</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Filter">
          <source>but does not match:</source>
          <target state="translated">mas não coincide com:</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Filter">
          <source>Sales Nov 1999.xls</source>
          <target state="translated">Novembro de vendas 1999.xls</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Filter">
          <source>MyReport.Doc</source>
          <target state="translated">MyReport.Doc</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Filter">
          <source>Watches only MyReport.doc</source>
          <target state="translated">Inspeciona somente MyReport</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Filter">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> to watch the directory specified at run time.</source>
          <target state="translated">O exemplo a seguir cria um <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> para inspecionar o diretório especificado em tempo de execução.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Filter">
          <source>The component is set to watch for changes in <ph id="ph1">`LastWrite`</ph> and <ph id="ph2">`LastAccess`</ph> time, the creation, deletion, or renaming of text files in the directory.</source>
          <target state="translated">O componente é definido para detectar alterações em <ph id="ph1">`LastWrite`</ph> e <ph id="ph2">`LastAccess`</ph> do tempo, a criação, exclusão ou renomeação de arquivos de texto no diretório.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Filter">
          <source>If a file is changed, created, or deleted, the path to the file prints to the console.</source>
          <target state="translated">Se um arquivo for alterado, criado ou excluído, o caminho para o arquivo imprime no console.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Filter">
          <source>When a file is renamed, the old and new paths print to the console.</source>
          <target state="translated">Quando um arquivo é renomeado, os caminhos de novos e antigos de impressão para o console.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Filter">
          <source>Use the <ph id="ph1">&lt;xref:System.Diagnostics&gt;</ph> and <ph id="ph2">&lt;xref:System.IO&gt;</ph> namespaces for this example.</source>
          <target state="translated">Use o <ph id="ph1">&lt;xref:System.Diagnostics&gt;</ph> e <ph id="ph2">&lt;xref:System.IO&gt;</ph> namespaces para este exemplo.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="P:System.IO.FileSystemWatcher.IncludeSubdirectories">
          <source>Gets or sets a value indicating whether subdirectories within the specified path should be monitored.</source>
          <target state="translated">Obtém ou define um valor que indica se as subpastas no caminho especificado devem ser monitoradas.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.IncludeSubdirectories">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if you want to monitor subdirectories; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se você quiser monitorar subdiretórios; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.IncludeSubdirectories">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">O padrão é <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.IncludeSubdirectories">
          <source>Set <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A&gt;</ph> to <ph id="ph2">`true`</ph> when you want to watch for change notifications for files and directories contained within the directory specified through the <ph id="ph3">&lt;xref:System.IO.FileSystemWatcher.Path%2A&gt;</ph> property, and its subdirectories.</source>
          <target state="translated">Definir <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A&gt;</ph> para <ph id="ph2">`true`</ph> quando você deseja observar as notificações de alteração para arquivos e pastas contidas no diretório especificado por meio de <ph id="ph3">&lt;xref:System.IO.FileSystemWatcher.Path%2A&gt;</ph> propriedade e seus subdiretórios.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.IncludeSubdirectories">
          <source>Setting the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A&gt;</ph> property to <ph id="ph2">`false`</ph> helps reduce the number of notifications sent to the internal buffer.</source>
          <target state="translated">Definindo o <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A&gt;</ph> propriedade <ph id="ph2">`false`</ph> ajuda a reduzir o número de notificações enviadas para o buffer interno.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.IncludeSubdirectories">
          <source>For more information on filtering out unwanted notifications, see the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.NotifyFilter%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.InternalBufferSize%2A&gt;</ph> properties.</source>
          <target state="translated">Para obter mais informações sobre a filtragem de notificações indesejadas, consulte o <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.NotifyFilter%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.InternalBufferSize%2A&gt;</ph> propriedades.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.IncludeSubdirectories">
          <source>When <ph id="ph1">`true`</ph>, <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A&gt;</ph> is recursive through the entire sub tree, not just the immediate child directories.</source>
          <target state="translated">Quando <ph id="ph1">`true`</ph>, <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A&gt;</ph> é recursiva através da árvore inteira sub, não apenas os diretórios filhos imediatos.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.IncludeSubdirectories">
          <source>The relative path to a file or directory within the sub tree returns in the <ph id="ph1">&lt;xref:System.IO.FileSystemEventArgs.Name%2A&gt;</ph> property of <ph id="ph2">&lt;xref:System.IO.FileSystemEventArgs&gt;</ph> and the <ph id="ph3">&lt;xref:System.IO.RenamedEventArgs.OldName%2A&gt;</ph> property of <ph id="ph4">&lt;xref:System.IO.RenamedEventArgs&gt;</ph>, depending on changes you are watching for.</source>
          <target state="translated">Retorna o caminho relativo para um arquivo ou diretório dentro da árvore de sub o <ph id="ph1">&lt;xref:System.IO.FileSystemEventArgs.Name%2A&gt;</ph> propriedade de <ph id="ph2">&lt;xref:System.IO.FileSystemEventArgs&gt;</ph> e o <ph id="ph3">&lt;xref:System.IO.RenamedEventArgs.OldName%2A&gt;</ph> propriedade <ph id="ph4">&lt;xref:System.IO.RenamedEventArgs&gt;</ph>, com base nas alterações que você está procurando.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.IncludeSubdirectories">
          <source>You can get the fully qualified path from the <ph id="ph1">&lt;xref:System.IO.FileSystemEventArgs.FullPath%2A&gt;</ph> property of <ph id="ph2">&lt;xref:System.IO.FileSystemEventArgs&gt;</ph> and the <ph id="ph3">&lt;xref:System.IO.RenamedEventArgs.OldFullPath%2A&gt;</ph> property of <ph id="ph4">&lt;xref:System.IO.RenamedEventArgs&gt;</ph>, depending on the changes you are watching for.</source>
          <target state="translated">Você pode obter o caminho totalmente qualificado do <ph id="ph1">&lt;xref:System.IO.FileSystemEventArgs.FullPath%2A&gt;</ph> propriedade de <ph id="ph2">&lt;xref:System.IO.FileSystemEventArgs&gt;</ph> e o <ph id="ph3">&lt;xref:System.IO.RenamedEventArgs.OldFullPath%2A&gt;</ph> propriedade <ph id="ph4">&lt;xref:System.IO.RenamedEventArgs&gt;</ph>, de acordo com as alterações que você está procurando.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.IncludeSubdirectories">
          <source>If a directory is created in the sub tree of the directory you are watching, and <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A&gt;</ph> is <ph id="ph2">`true`</ph>, that directory will automatically be watched.</source>
          <target state="translated">Se um diretório é criado na árvore do diretório que você está observando, sub e <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A&gt;</ph> é <ph id="ph2">`true`</ph>, esse diretório automaticamente será observado.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="P:System.IO.FileSystemWatcher.InternalBufferSize">
          <source>Gets or sets the size (in bytes) of the internal buffer.</source>
          <target state="translated">Obtém ou define o tamanho (em bytes) do buffer interno.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.InternalBufferSize">
          <source>The internal buffer size in bytes.</source>
          <target state="translated">O tamanho do buffer interno em bytes.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.InternalBufferSize">
          <source>The default is 8192 (8 KB).</source>
          <target state="translated">O padrão é 8192 (8 KB).</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.InternalBufferSize">
          <source>You can set the buffer to 4 KB or larger, but it must not exceed 64 KB.</source>
          <target state="translated">Você pode definir o buffer de 4 KB ou maior, mas ele não deve exceder 64 KB.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.InternalBufferSize">
          <source>If you try to set the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.InternalBufferSize%2A&gt;</ph> property to less than 4096 bytes, your value is discarded and the <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.InternalBufferSize%2A&gt;</ph> property is set to 4096 bytes.</source>
          <target state="translated">Se você tentar definir o <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.InternalBufferSize%2A&gt;</ph> propriedade para menos de 4096 bytes, o valor será descartada e o <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.InternalBufferSize%2A&gt;</ph> estiver definida como 4096 bytes.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.InternalBufferSize">
          <source>For best performance, use a multiple of 4 KB on Intel-based computers.</source>
          <target state="translated">Para melhor desempenho, use um múltiplo de 4 KB em computadores baseados em Intel.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.InternalBufferSize">
          <source>The system notifies the component of file changes, and it stores those changes in a buffer the component creates and passes to the APIs.</source>
          <target state="translated">O sistema notifica o componente de alterações de arquivo e armazena essas alterações em um buffer que o componente cria e passa para as APIs.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.InternalBufferSize">
          <source>Each event can use up to 16 bytes of memory, not including the file name.</source>
          <target state="translated">Cada evento pode usar até 16 bytes de memória, não incluindo o nome do arquivo.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.InternalBufferSize">
          <source>If there are many changes in a short time, the buffer can overflow.</source>
          <target state="translated">Se houver muitas alterações em um curto período de tempo, o buffer pode estourar.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.InternalBufferSize">
          <source>This causes the component to lose track of changes in the directory, and it will only provide blanket notification.</source>
          <target state="translated">Isso faz com que o componente de perder o controle de alterações no diretório e somente ele fornecerá notificação ampla.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.InternalBufferSize">
          <source>Increasing the size of the buffer can prevent missing file system change events.</source>
          <target state="translated">Pode impedir o aumento do tamanho do buffer de eventos de alteração do sistema de arquivo ausente.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.InternalBufferSize">
          <source>However, increasing buffer size is expensive, because it comes from non-paged memory that cannot be swapped out to disk, so keep the buffer as small as possible.</source>
          <target state="translated">No entanto, aumentando o tamanho do buffer é caro, porque se trata de memória não-paginável que não pode ser trocada por disco, mantenha o buffer tão pequenas quanto possível.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.InternalBufferSize">
          <source>To avoid a buffer overflow, use the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.NotifyFilter%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A&gt;</ph> properties to filter out unwanted change notifications.</source>
          <target state="translated">Para evitar um estouro de buffer, use o <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.NotifyFilter%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A&gt;</ph> notificações de alteração de propriedades para filtrar indesejados.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="P:System.IO.FileSystemWatcher.NotifyFilter">
          <source>Gets or sets the type of changes to watch for.</source>
          <target state="translated">Obtém ou define o tipo de alterações a serem observadas.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.NotifyFilter">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.IO.NotifyFilters" /&gt;</ph> values.</source>
          <target state="translated">Um dos valores de <ph id="ph1">&lt;see cref="T:System.IO.NotifyFilters" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.NotifyFilter">
          <source>The default is the bitwise OR combination of <ph id="ph1">&lt;see langword="LastWrite" /&gt;</ph>, <ph id="ph2">&lt;see langword="FileName" /&gt;</ph>, and <ph id="ph3">&lt;see langword="DirectoryName" /&gt;</ph>.</source>
          <target state="translated">O padrão é a combinação OR bit a bit de <ph id="ph1">&lt;see langword="LastWrite" /&gt;</ph>, <ph id="ph2">&lt;see langword="FileName" /&gt;</ph> e <ph id="ph3">&lt;see langword="DirectoryName" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.NotifyFilter">
          <source>You can combine the members of the <ph id="ph1">&lt;xref:System.IO.NotifyFilters&gt;</ph> enumeration to watch for more than one type of change at a time.</source>
          <target state="translated">Você pode combinar os membros do <ph id="ph1">&lt;xref:System.IO.NotifyFilters&gt;</ph> enumeração observar mais de um tipo de alteração de cada vez.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.NotifyFilter">
          <source>For example, you can watch for changes in size of a file, and for changes in the <ph id="ph1">`LastWrite`</ph> time.</source>
          <target state="translated">Por exemplo, você pode assistir para alterações no tamanho de um arquivo e alterações no <ph id="ph1">`LastWrite`</ph> tempo.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.NotifyFilter">
          <source>This raises an event anytime there is a change in file or folder size, or a change in the <ph id="ph1">`LastWrite`</ph> time of the file or folder.</source>
          <target state="translated">Isso gera um evento sempre que houver uma alteração no tamanho do arquivo ou pasta ou uma alteração no <ph id="ph1">`LastWrite`</ph> de arquivo ou pasta.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.NotifyFilter">
          <source>This is one way to filter out unwanted notifications.</source>
          <target state="translated">Essa é uma maneira para filtrar notificações indesejadas.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.NotifyFilter">
          <source>For more information on filtering out unwanted notifications, see the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Filter%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.IO.FileSystemWatcher.InternalBufferSize%2A&gt;</ph> properties.</source>
          <target state="translated">Para obter mais informações sobre a filtragem de notificações indesejadas, consulte o <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Filter%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A&gt;</ph>, e <ph id="ph3">&lt;xref:System.IO.FileSystemWatcher.InternalBufferSize%2A&gt;</ph> propriedades.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.NotifyFilter">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> to watch the directory specified at run time.</source>
          <target state="translated">O exemplo a seguir cria um <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> para inspecionar o diretório especificado em tempo de execução.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.NotifyFilter">
          <source>The component is set to watch for changes in <ph id="ph1">`LastWrite`</ph> and <ph id="ph2">`LastAccess`</ph> time, the creation, deletion, or renaming of text files in the directory.</source>
          <target state="translated">O componente é definido para detectar alterações em <ph id="ph1">`LastWrite`</ph> e <ph id="ph2">`LastAccess`</ph> do tempo, a criação, exclusão ou renomeação de arquivos de texto no diretório.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.NotifyFilter">
          <source>If a file is changed, created, or deleted, the path to the file prints to the console.</source>
          <target state="translated">Se um arquivo for alterado, criado ou excluído, o caminho para o arquivo imprime no console.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.NotifyFilter">
          <source>When a file is renamed, the old and new paths print to the console.</source>
          <target state="translated">Quando um arquivo é renomeado, os caminhos de novos e antigos de impressão para o console.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.NotifyFilter">
          <source>Use the <ph id="ph1">&lt;xref:System.Diagnostics&gt;</ph> and <ph id="ph2">&lt;xref:System.IO&gt;</ph> namespaces for this example.</source>
          <target state="translated">Use o <ph id="ph1">&lt;xref:System.Diagnostics&gt;</ph> e <ph id="ph2">&lt;xref:System.IO&gt;</ph> namespaces para este exemplo.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="P:System.IO.FileSystemWatcher.NotifyFilter">
          <source>The value is not a valid bitwise OR combination of the <ph id="ph1">&lt;see cref="T:System.IO.NotifyFilters" /&gt;</ph> values.</source>
          <target state="translated">O valor não é uma combinação OR bit a bit válida dos valores <ph id="ph1">&lt;see cref="T:System.IO.NotifyFilters" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="P:System.IO.FileSystemWatcher.NotifyFilter">
          <source>The value that is being set is not valid.</source>
          <target state="translated">O valor que está sendo definido não é válido.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="M:System.IO.FileSystemWatcher.OnChanged(System.IO.FileSystemEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.FileSystemEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.IO.FileSystemEventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.IO.FileSystemWatcher.OnChanged(System.IO.FileSystemEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.IO.FileSystemWatcher.Changed" /&gt;</ph> event.</source>
          <target state="translated">Aciona o evento <ph id="ph1">&lt;see cref="E:System.IO.FileSystemWatcher.Changed" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.OnChanged(System.IO.FileSystemEventArgs)">
          <source><ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.OnChanged%2A&gt;</ph> is called when changes are made to the size, system attributes, last write time, last access time, or security permissions of a file or directory in the directory being monitored.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.OnChanged%2A&gt;</ph> é chamado quando as alterações são feitas para o tamanho, atributos de sistema, último tempo de gravação, hora do último acesso ou as permissões de segurança de um arquivo ou diretório no diretório que está sendo monitorado.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.OnChanged(System.IO.FileSystemEventArgs)">
          <source>Use the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.NotifyFilter%2A&gt;</ph> property to restrict the number of events raised when the <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.Changed&gt;</ph> event is handled.</source>
          <target state="translated">Use o <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.NotifyFilter%2A&gt;</ph> propriedade para restringir o número de eventos gerados quando o <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.Changed&gt;</ph> evento é manipulado.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.OnChanged(System.IO.FileSystemEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.OnCreated%2A&gt;</ph> event is raised as soon as a file is created.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.OnCreated%2A&gt;</ph> é gerado como um arquivo é criado.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.OnChanged(System.IO.FileSystemEventArgs)">
          <source>If a file is being copied or transferred into a watched directory, the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.OnCreated%2A&gt;</ph> event will be raised immediately, followed by one or more <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.OnChanged%2A&gt;</ph> events.</source>
          <target state="translated">Se um arquivo está sendo copiado ou transferido para um diretório monitorado, o <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.OnCreated%2A&gt;</ph> evento ocorrerá imediatamente, seguido por um ou mais <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.OnChanged%2A&gt;</ph> eventos.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.OnChanged(System.IO.FileSystemEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.OnChanged(System.IO.FileSystemEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](~/docs/standard/events/index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.OnChanged(System.IO.FileSystemEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.IO.FileSystemWatcher.OnChanged(System.IO.FileSystemEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.IO.FileSystemWatcher.OnChanged(System.IO.FileSystemEventArgs)" /&gt;</ph> method.</source>
          <target state="translated">Ao substituir <ph id="ph1">&lt;see cref="M:System.IO.FileSystemWatcher.OnChanged(System.IO.FileSystemEventArgs)" /&gt;</ph> em uma classe derivada, certifique-se de chamar a classe base <ph id="ph2">&lt;see cref="M:System.IO.FileSystemWatcher.OnChanged(System.IO.FileSystemEventArgs)" /&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.IO.FileSystemWatcher.OnCreated(System.IO.FileSystemEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.FileSystemEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.IO.FileSystemEventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="M:System.IO.FileSystemWatcher.OnCreated(System.IO.FileSystemEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.IO.FileSystemWatcher.Created" /&gt;</ph> event.</source>
          <target state="translated">Aciona o evento <ph id="ph1">&lt;see cref="E:System.IO.FileSystemWatcher.Created" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.OnCreated(System.IO.FileSystemEventArgs)">
          <source><ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.OnCreated%2A&gt;</ph> is called when a file or directory is created in the directory being monitored.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.OnCreated%2A&gt;</ph> é chamado quando um arquivo ou diretório é criado no diretório que está sendo monitorado.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.OnCreated(System.IO.FileSystemEventArgs)">
          <source>Some common occurrences, such as copying or moving a file or directory, do not correspond directly to an event, but these occurrences do cause events to be raised.</source>
          <target state="translated">Algumas ocorrências comuns, como copiar ou mover um arquivo ou diretório, não corresponde diretamente a um evento, mas essas ocorrências gerar eventos a serem gerados.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.OnCreated(System.IO.FileSystemEventArgs)">
          <source>When you copy a file or directory, the system raises a <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Created&gt;</ph> event in the directory to which the file was copied, if that directory is being watched.</source>
          <target state="translated">Quando você copia um arquivo ou diretório, o sistema gera um <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Created&gt;</ph> evento no diretório ao qual o arquivo foi copiado, se esse diretório é que é inspecionado.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.OnCreated(System.IO.FileSystemEventArgs)">
          <source>If the directory from which you copied was being watched by another instance of <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph>, no event would be raised.</source>
          <target state="translated">Se o diretório do qual você copiou foi que é inspecionado por outra instância do <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph>, nenhum evento será gerado.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.OnCreated(System.IO.FileSystemEventArgs)">
          <source>For example, you create two instances of <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph>.</source>
          <target state="translated">Por exemplo, crie duas instâncias de <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.OnCreated(System.IO.FileSystemEventArgs)">
          <source>FileSystemWatcher1 is set to watch "C:\My Documents", and FileSystemWatcher2 is set to watch "C:\Your Documents".</source>
          <target state="translated">FileSystemWatcher1 é definido como assistir "C:\My Documents" e FileSystemWatcher2 é definido como assistir "C:\Your documentos".</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.OnCreated(System.IO.FileSystemEventArgs)">
          <source>If you copy a file from "My Documents" and paste it into "Your Documents", a <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Created&gt;</ph> event will be raised in FileSystemWatcher2, but no event is raised for FileSystemWatcher1.</source>
          <target state="translated">Se você copiar um arquivo de "Meus documentos" e colá-lo em "Seus documentos", um <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Created&gt;</ph> evento será gerado no FileSystemWatcher2, mas nenhum evento é gerado para FileSystemWatcher1.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.OnCreated(System.IO.FileSystemEventArgs)">
          <source>Unlike copying, moving a file or directory raises two events.</source>
          <target state="translated">Ao contrário de copiar, mover um arquivo ou diretório gera dois eventos.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.OnCreated(System.IO.FileSystemEventArgs)">
          <source>From the previous example, if you moved a file from "My Documents" to "Your Documents", a <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Created&gt;</ph> event would be raised in FileSystemWatcher2 and a <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.Deleted&gt;</ph> event would be raised in FileSystemWatcher1.</source>
          <target state="translated">Do exemplo anterior, se você moveu um arquivo de "Meus documentos" para "Seus documentos", um <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Created&gt;</ph> evento será gerado no FileSystemWatcher2 e um <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.Deleted&gt;</ph> deve ser gerado no FileSystemWatcher1.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.OnCreated(System.IO.FileSystemEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.OnCreated%2A&gt;</ph> event is raised as soon as a file is created.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.OnCreated%2A&gt;</ph> é gerado como um arquivo é criado.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.OnCreated(System.IO.FileSystemEventArgs)">
          <source>If a file is being copied or transferred into a watched directory, the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.OnCreated%2A&gt;</ph> event will be raised immediately, followed by one or more <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.OnChanged%2A&gt;</ph> events.</source>
          <target state="translated">Se um arquivo está sendo copiado ou transferido para um diretório monitorado, o <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.OnCreated%2A&gt;</ph> evento ocorrerá imediatamente, seguido por um ou mais <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.OnChanged%2A&gt;</ph> eventos.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.OnCreated(System.IO.FileSystemEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.OnCreated(System.IO.FileSystemEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](~/docs/standard/events/index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.OnCreated(System.IO.FileSystemEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.IO.FileSystemWatcher.OnCreated(System.IO.FileSystemEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.IO.FileSystemWatcher.OnCreated(System.IO.FileSystemEventArgs)" /&gt;</ph> method.</source>
          <target state="translated">Ao substituir <ph id="ph1">&lt;see cref="M:System.IO.FileSystemWatcher.OnCreated(System.IO.FileSystemEventArgs)" /&gt;</ph> em uma classe derivada, certifique-se de chamar a classe base <ph id="ph2">&lt;see cref="M:System.IO.FileSystemWatcher.OnCreated(System.IO.FileSystemEventArgs)" /&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" uid="M:System.IO.FileSystemWatcher.OnDeleted(System.IO.FileSystemEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.FileSystemEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.IO.FileSystemEventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" uid="M:System.IO.FileSystemWatcher.OnDeleted(System.IO.FileSystemEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.IO.FileSystemWatcher.Deleted" /&gt;</ph> event.</source>
          <target state="translated">Aciona o evento <ph id="ph1">&lt;see cref="E:System.IO.FileSystemWatcher.Deleted" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.OnDeleted(System.IO.FileSystemEventArgs)">
          <source><ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.OnDeleted%2A&gt;</ph> is called when a file or directory, within the directory being monitored, is deleted.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.OnDeleted%2A&gt;</ph> é chamado quando um arquivo ou diretório dentro do diretório que está sendo monitorado, é excluído.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.OnDeleted(System.IO.FileSystemEventArgs)">
          <source>Some common occurrences, such as copying or moving a file or directory, do not correspond directly to an event, but these occurrences do cause events to be raised.</source>
          <target state="translated">Algumas ocorrências comuns, como copiar ou mover um arquivo ou diretório, não corresponde diretamente a um evento, mas essas ocorrências gerar eventos a serem gerados.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.OnDeleted(System.IO.FileSystemEventArgs)">
          <source>When you copy a file or directory, the system raises a <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Created&gt;</ph> event in the directory to which the file was copied, if that directory is being watched.</source>
          <target state="translated">Quando você copia um arquivo ou diretório, o sistema gera um <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Created&gt;</ph> evento no diretório ao qual o arquivo foi copiado, se esse diretório é que é inspecionado.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.OnDeleted(System.IO.FileSystemEventArgs)">
          <source>If the directory from which you copied was being watched by another instance of <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph>, no event would be raised.</source>
          <target state="translated">Se o diretório do qual você copiou foi que é inspecionado por outra instância do <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph>, nenhum evento será gerado.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.OnDeleted(System.IO.FileSystemEventArgs)">
          <source>For example, you create two instances of <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph>.</source>
          <target state="translated">Por exemplo, crie duas instâncias de <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.OnDeleted(System.IO.FileSystemEventArgs)">
          <source>FileSystemWatcher1 is set to watch "C:\My Documents", and FileSystemWatcher2 is set to watch "C:\Your Documents".</source>
          <target state="translated">FileSystemWatcher1 é definido como assistir "C:\My Documents" e FileSystemWatcher2 é definido como assistir "C:\Your documentos".</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.OnDeleted(System.IO.FileSystemEventArgs)">
          <source>If you copy a file from "My Documents" into "Your Documents", a <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Created&gt;</ph> event will be raised by FileSystemWatcher2, but no event is raised for FileSystemWatcher1.</source>
          <target state="translated">Se você copiar um arquivo de "Meus documentos" em "Seus documentos", um <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Created&gt;</ph> evento será gerado por FileSystemWatcher2, mas nenhum evento é gerado para FileSystemWatcher1.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.OnDeleted(System.IO.FileSystemEventArgs)">
          <source>Unlike copying, moving a file or directory raises two events.</source>
          <target state="translated">Ao contrário de copiar, mover um arquivo ou diretório gera dois eventos.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.OnDeleted(System.IO.FileSystemEventArgs)">
          <source>From the previous example, if you moved a file from "My Documents" to "Your Documents", a <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Created&gt;</ph> event would be raised by FileSystemWatcher2 and a <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.Deleted&gt;</ph> event would be raised by FileSystemWatcher1.</source>
          <target state="translated">Do exemplo anterior, se você moveu um arquivo de "Meus documentos" para "Seus documentos", um <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Created&gt;</ph> deve ser gerado por FileSystemWatcher2 e um <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.Deleted&gt;</ph> deve ser gerado por FileSystemWatcher1.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.OnDeleted(System.IO.FileSystemEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.OnDeleted(System.IO.FileSystemEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](~/docs/standard/events/index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.OnDeleted(System.IO.FileSystemEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.IO.FileSystemWatcher.OnDeleted(System.IO.FileSystemEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.IO.FileSystemWatcher.OnDeleted(System.IO.FileSystemEventArgs)" /&gt;</ph> method.</source>
          <target state="translated">Ao substituir <ph id="ph1">&lt;see cref="M:System.IO.FileSystemWatcher.OnDeleted(System.IO.FileSystemEventArgs)" /&gt;</ph> em uma classe derivada, certifique-se de chamar a classe base <ph id="ph2">&lt;see cref="M:System.IO.FileSystemWatcher.OnDeleted(System.IO.FileSystemEventArgs)" /&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" uid="M:System.IO.FileSystemWatcher.OnError(System.IO.ErrorEventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IO.ErrorEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.IO.ErrorEventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="M:System.IO.FileSystemWatcher.OnError(System.IO.ErrorEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.IO.FileSystemWatcher.Error" /&gt;</ph> event.</source>
          <target state="translated">Aciona o evento <ph id="ph1">&lt;see cref="E:System.IO.FileSystemWatcher.Error" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.OnError(System.IO.ErrorEventArgs)">
          <source><ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.OnError%2A&gt;</ph> is called when an error occurs.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.OnError%2A&gt;</ph> é chamado quando ocorre um erro.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.OnError(System.IO.ErrorEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.OnError(System.IO.ErrorEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](~/docs/standard/events/index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.OnError(System.IO.ErrorEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.IO.FileSystemWatcher.OnError(System.IO.ErrorEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.IO.FileSystemWatcher.OnError(System.IO.ErrorEventArgs)" /&gt;</ph> method.</source>
          <target state="translated">Ao substituir <ph id="ph1">&lt;see cref="M:System.IO.FileSystemWatcher.OnError(System.IO.ErrorEventArgs)" /&gt;</ph> em uma classe derivada, certifique-se de chamar a classe base <ph id="ph2">&lt;see cref="M:System.IO.FileSystemWatcher.OnError(System.IO.ErrorEventArgs)" /&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" uid="M:System.IO.FileSystemWatcher.OnRenamed(System.IO.RenamedEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.RenamedEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.IO.RenamedEventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="M:System.IO.FileSystemWatcher.OnRenamed(System.IO.RenamedEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.IO.FileSystemWatcher.Renamed" /&gt;</ph> event.</source>
          <target state="translated">Aciona o evento <ph id="ph1">&lt;see cref="E:System.IO.FileSystemWatcher.Renamed" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.OnRenamed(System.IO.RenamedEventArgs)">
          <source><ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.OnRenamed%2A&gt;</ph> is called when a file or directory within the directory being monitored is renamed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.OnRenamed%2A&gt;</ph> é chamado quando um arquivo ou diretório dentro do diretório que está sendo monitorado é renomeado.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.OnRenamed(System.IO.RenamedEventArgs)">
          <source>Its <ph id="ph1">&lt;xref:System.IO.RenamedEventArgs&gt;</ph> argument contains information about the renaming operation, such as the type of change, the old and new path, and the old and new name.</source>
          <target state="translated">Seu <ph id="ph1">&lt;xref:System.IO.RenamedEventArgs&gt;</ph> argumento contém informações sobre a operação de renomeação, como o tipo de alteração, o caminho antigo e novo e o nome antigo e novo.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.OnRenamed(System.IO.RenamedEventArgs)">
          <source>Note that its <ph id="ph1">&lt;xref:System.IO.FileSystemEventArgs.Name&gt;</ph> property may be null for renamed events if the <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> does not get matching old and new name events from the operating system.</source>
          <target state="translated">Observe que seu <ph id="ph1">&lt;xref:System.IO.FileSystemEventArgs.Name&gt;</ph> propriedade pode ser nula para renomeado eventos se o <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> não obter correspondência eventos antigo e novo nome do sistema operacional.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.OnRenamed(System.IO.RenamedEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.OnRenamed(System.IO.RenamedEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](~/docs/standard/events/index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.OnRenamed(System.IO.RenamedEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.IO.FileSystemWatcher.OnRenamed(System.IO.RenamedEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.IO.FileSystemWatcher.OnRenamed(System.IO.RenamedEventArgs)" /&gt;</ph> method.</source>
          <target state="translated">Ao substituir <ph id="ph1">&lt;see cref="M:System.IO.FileSystemWatcher.OnRenamed(System.IO.RenamedEventArgs)" /&gt;</ph> em uma classe derivada, certifique-se de chamar a classe base <ph id="ph2">&lt;see cref="M:System.IO.FileSystemWatcher.OnRenamed(System.IO.RenamedEventArgs)" /&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" uid="P:System.IO.FileSystemWatcher.Path">
          <source>Gets or sets the path of the directory to watch.</source>
          <target state="translated">Obtém ou define o caminho do diretório a ser inspecionado.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Path">
          <source>The path to monitor.</source>
          <target state="translated">O caminho a ser monitorado.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Path">
          <source>The default is an empty string ("").</source>
          <target state="translated">O padrão é uma cadeia de caracteres vazia ("").</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Path">
          <source>This is a fully qualified path to a directory.</source>
          <target state="translated">Este é um caminho totalmente qualificado para um diretório.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Path">
          <source>If the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A&gt;</ph> property is <ph id="ph2">`true`</ph>, this directory is the root at which the system watches for changes; otherwise it is the only directory watched.</source>
          <target state="translated">Se o <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A&gt;</ph> é de propriedade <ph id="ph2">`true`</ph>, esse diretório é a raiz em que o sistema aguarda alterações; caso contrário, é o diretório somente observado.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Path">
          <source>To watch a specific file, set the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Path%2A&gt;</ph> property to the fully qualified, correct directory, and the <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.Filter%2A&gt;</ph> property to the file name.</source>
          <target state="translated">Para assistir a um arquivo específico, defina o <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Path%2A&gt;</ph> propriedade para o diretório correto, totalmente qualificado e o <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.Filter%2A&gt;</ph> propriedade para o nome do arquivo.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Path">
          <source>The <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Path%2A&gt;</ph> property supports Universal Naming Convention (UNC) paths.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Path%2A&gt;</ph> propriedade dá suporte a caminhos de convenção de nomenclatura Universal (UNC).</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Path">
          <source>This property must be set before the component can watch for changes.</source>
          <target state="translated">Essa propriedade deve ser definida antes que o componente pode detectar alterações.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Path">
          <source>When a directory is renamed, the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> automatically reattaches itself to the newly renamed item.</source>
          <target state="translated">Quando um diretório é renomeado, o <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> anexa novamente automaticamente para o item renomeado recentemente.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Path">
          <source>For example, if you set the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Path%2A&gt;</ph> property to "C:\My Documents" and then manually rename the directory to "C:\Your Documents", the component continues listening for change notifications on the newly renamed directory.</source>
          <target state="translated">Por exemplo, se você definir o <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Path%2A&gt;</ph> propriedade como "C:\My Documents" e, em seguida, renomeie manualmente o diretório "C:\Your documentos", o componente continua a escuta as notificações de alteração no diretório renomeada recentemente.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Path">
          <source>However, when you ask for the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Path%2A&gt;</ph> property, it contains the old path.</source>
          <target state="translated">No entanto, quando você pede a <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Path%2A&gt;</ph> propriedade, ele contém o caminho antigo.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Path">
          <source>This happens because the component determines what directory watches based on the handle, rather than the name of the directory.</source>
          <target state="translated">Isso acontece porque o componente determina inspeciona se o diretório base o identificador, em vez do nome do diretório.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Path">
          <source>Renaming does not affect the handle.</source>
          <target state="translated">A renomeação não afeta o identificador.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Path">
          <source>So, if you destroy the component, and then recreate it without updating the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Path%2A&gt;</ph> property, your application will fail because the directory no longer exists.</source>
          <target state="translated">Portanto, se você destruir o componente e, em seguida, recriá-lo sem atualizar o <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Path%2A&gt;</ph> propriedade, seu aplicativo falhará porque o diretório não existe mais.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Path">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> to watch the directory specified at run time.</source>
          <target state="translated">O exemplo a seguir cria um <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> para inspecionar o diretório especificado em tempo de execução.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Path">
          <source>The component is set to watch for changes in <ph id="ph1">`LastWrite`</ph> and <ph id="ph2">`LastAccess`</ph> time, the creation, deletion, or renaming of text files in the directory.</source>
          <target state="translated">O componente é definido para detectar alterações em <ph id="ph1">`LastWrite`</ph> e <ph id="ph2">`LastAccess`</ph> do tempo, a criação, exclusão ou renomeação de arquivos de texto no diretório.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Path">
          <source>If a file is changed, created, or deleted, the path to the file prints to the console.</source>
          <target state="translated">Se um arquivo for alterado, criado ou excluído, o caminho para o arquivo imprime no console.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Path">
          <source>When a file is renamed, the old and new paths print to the console.</source>
          <target state="translated">Quando um arquivo é renomeado, os caminhos de novos e antigos de impressão para o console.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Path">
          <source>Use the <ph id="ph1">&lt;xref:System.Diagnostics&gt;</ph> and <ph id="ph2">&lt;xref:System.IO&gt;</ph> namespaces for this example.</source>
          <target state="translated">Use o <ph id="ph1">&lt;xref:System.Diagnostics&gt;</ph> e <ph id="ph2">&lt;xref:System.IO&gt;</ph> namespaces para este exemplo.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" uid="P:System.IO.FileSystemWatcher.Path">
          <source>The specified path does not exist or could not be found.</source>
          <target state="translated">O caminho especificado não existe ou não pôde ser encontrado.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="P:System.IO.FileSystemWatcher.Path">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="P:System.IO.FileSystemWatcher.Path">
          <source>The specified path contains wildcard characters.</source>
          <target state="translated">O caminho especificado contém caracteres curinga.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" uid="P:System.IO.FileSystemWatcher.Path">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" uid="P:System.IO.FileSystemWatcher.Path">
          <source>The specified path contains invalid path characters.</source>
          <target state="translated">O caminho especificado contém caracteres de caminho inválidos.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" uid="E:System.IO.FileSystemWatcher.Renamed">
          <source>Occurs when a file or directory in the specified <ph id="ph1">&lt;see cref="P:System.IO.FileSystemWatcher.Path" /&gt;</ph> is renamed.</source>
          <target state="translated">Ocorre quando um arquivo ou diretório no <ph id="ph1">&lt;see cref="P:System.IO.FileSystemWatcher.Path" /&gt;</ph> especificado é renomeado.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Renamed">
          <source>The <ph id="ph1">`Renamed`</ph> event is an <ph id="ph2">&lt;xref:System.IO.RenamedEventHandler&gt;</ph> delegate that has the following signature:</source>
          <target state="translated">O <ph id="ph1">`Renamed`</ph> evento é um <ph id="ph2">&lt;xref:System.IO.RenamedEventHandler&gt;</ph> delegado que tem a seguinte assinatura:</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Renamed">
          <source>The <ph id="ph1">&lt;xref:System.IO.RenamedEventArgs&gt;</ph> object provides information about the renaming operation, such as the type of the rename (the <ph id="ph2">&lt;xref:System.IO.FileSystemEventArgs.ChangeType&gt;</ph> property), the old and new name, and the old and new path.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.IO.RenamedEventArgs&gt;</ph> objeto fornece informações sobre a operação de renomeação, como o tipo de renomeação (o <ph id="ph2">&lt;xref:System.IO.FileSystemEventArgs.ChangeType&gt;</ph> propriedade), o nome antigo e novo e o caminho antigo e novo.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Renamed">
          <source>Note that the <ph id="ph1">&lt;xref:System.IO.FileSystemEventArgs.Name&gt;</ph> property may be null for renamed events if the <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> does not get matching old and new name events from the operating system.</source>
          <target state="translated">Observe que o <ph id="ph1">&lt;xref:System.IO.FileSystemEventArgs.Name&gt;</ph> propriedade pode ser nula para renomeado eventos se o <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> não obter correspondência eventos antigo e novo nome do sistema operacional.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Renamed">
          <source>Renaming the directory you are watching will not raise a notification.</source>
          <target state="translated">Renomeação do diretório que você está observando não gerará uma notificação.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Renamed">
          <source>Notifications are only raised for entries inside the directory you are watching.</source>
          <target state="translated">As notificações são geradas somente para entradas de dentro do diretório que você está observando.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IO.FileSystemWatcher.Renamed">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Renamed&gt;</ph> event to display the file path to the console whenever the watched file is renamed.</source>
          <target state="translated">O exemplo a seguir usa o <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Renamed&gt;</ph> evento para exibir o caminho do arquivo para o console sempre que o arquivo observado é renomeado.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" uid="P:System.IO.FileSystemWatcher.Site">
          <source>Gets or sets an <ph id="ph1">&lt;see cref="T:System.ComponentModel.ISite" /&gt;</ph> for the <ph id="ph2">&lt;see cref="T:System.IO.FileSystemWatcher" /&gt;</ph>.</source>
          <target state="translated">Obtém ou define um <ph id="ph1">&lt;see cref="T:System.ComponentModel.ISite" /&gt;</ph> para o <ph id="ph2">&lt;see cref="T:System.IO.FileSystemWatcher" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Site">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.ISite" /&gt;</ph> for the <ph id="ph2">&lt;see cref="T:System.IO.FileSystemWatcher" /&gt;</ph>.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.ComponentModel.ISite" /&gt;</ph> para o <ph id="ph2">&lt;see cref="T:System.IO.FileSystemWatcher" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.Site">
          <source>Sites bind a <ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> to a <ph id="ph2">&lt;xref:System.ComponentModel.Design.IDesignerHost.Container%2A&gt;</ph> and enable communication between them, as well as provide a way for the container to manage its components.</source>
          <target state="translated">Sites de associar um <ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> para um <ph id="ph2">&lt;xref:System.ComponentModel.Design.IDesignerHost.Container%2A&gt;</ph> e habilitar a comunicação entre eles, bem como fornecer uma maneira para o contêiner gerenciar seus componentes.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" uid="P:System.IO.FileSystemWatcher.SynchronizingObject">
          <source>Gets or sets the object used to marshal the event handler calls issued as a result of a directory change.</source>
          <target state="translated">Obtém ou define o objeto usado para realizar marshaling das chamadas do manipulador de eventos emitidas como resultado de uma alteração de diretório.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.SynchronizingObject">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.ISynchronizeInvoke" /&gt;</ph> that represents the object used to marshal the event handler calls issued as a result of a directory change.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.ComponentModel.ISynchronizeInvoke" /&gt;</ph> que representa o objeto usado para realizar marshaling das chamadas do manipulador de eventos emitidas como resultado de uma alteração de diretório.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.SynchronizingObject">
          <source>The default is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">O padrão é <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.SynchronizingObject">
          <source>When <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.SynchronizingObject%2A&gt;</ph> is <ph id="ph2">`null`</ph>, methods handling the <ph id="ph3">&lt;xref:System.IO.FileSystemWatcher.Changed&gt;</ph>, <ph id="ph4">&lt;xref:System.IO.FileSystemWatcher.Created&gt;</ph>, <ph id="ph5">&lt;xref:System.IO.FileSystemWatcher.Deleted&gt;</ph>, and <ph id="ph6">&lt;xref:System.IO.FileSystemWatcher.Renamed&gt;</ph> events are called on a thread from the system thread pool.</source>
          <target state="translated">Quando <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.SynchronizingObject%2A&gt;</ph> é <ph id="ph2">`null`</ph>, métodos de manipulação de <ph id="ph3">&lt;xref:System.IO.FileSystemWatcher.Changed&gt;</ph>, <ph id="ph4">&lt;xref:System.IO.FileSystemWatcher.Created&gt;</ph>, <ph id="ph5">&lt;xref:System.IO.FileSystemWatcher.Deleted&gt;</ph>, e <ph id="ph6">&lt;xref:System.IO.FileSystemWatcher.Renamed&gt;</ph> eventos são chamados em um thread do pool de threads do sistema.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.SynchronizingObject">
          <source>For more information on system thread pools, see <ph id="ph1">&lt;xref:System.Threading.ThreadPool&gt;</ph>.</source>
          <target state="translated">Para obter mais informações sobre pools de threads do sistema, consulte <ph id="ph1">&lt;xref:System.Threading.ThreadPool&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.SynchronizingObject">
          <source>When the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Changed&gt;</ph>, <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.Created&gt;</ph>, <ph id="ph3">&lt;xref:System.IO.FileSystemWatcher.Deleted&gt;</ph>, and <ph id="ph4">&lt;xref:System.IO.FileSystemWatcher.Renamed&gt;</ph> events are handled by a visual Windows Forms component, such as a <ph id="ph5">&lt;xref:System.Windows.Forms.Button&gt;</ph>, accessing the component through the system thread pool might not work, or may result in an exception.</source>
          <target state="translated">Quando o <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.Changed&gt;</ph>, <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.Created&gt;</ph>, <ph id="ph3">&lt;xref:System.IO.FileSystemWatcher.Deleted&gt;</ph>, e <ph id="ph4">&lt;xref:System.IO.FileSystemWatcher.Renamed&gt;</ph> eventos são tratados por um componente de Windows Forms visual, como um <ph id="ph5">&lt;xref:System.Windows.Forms.Button&gt;</ph>, acessar o componente através do pool de threads de sistema pode não funcionar, ou pode resultar em uma exceção.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.SynchronizingObject">
          <source>Avoid this by setting <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.SynchronizingObject%2A&gt;</ph> to a Windows Forms component, which causes the methods that handle the <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.Changed&gt;</ph>, <ph id="ph3">&lt;xref:System.IO.FileSystemWatcher.Created&gt;</ph>, <ph id="ph4">&lt;xref:System.IO.FileSystemWatcher.Deleted&gt;</ph>, and <ph id="ph5">&lt;xref:System.IO.FileSystemWatcher.Renamed&gt;</ph> events to be called on the same thread on which the component was created.</source>
          <target state="translated">Evitar isso definindo <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.SynchronizingObject%2A&gt;</ph> para um componente de Windows Forms, que faz com que os métodos que manipulam o <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.Changed&gt;</ph>, <ph id="ph3">&lt;xref:System.IO.FileSystemWatcher.Created&gt;</ph>, <ph id="ph4">&lt;xref:System.IO.FileSystemWatcher.Deleted&gt;</ph>, e <ph id="ph5">&lt;xref:System.IO.FileSystemWatcher.Renamed&gt;</ph> eventos a ser chamado no mesmo thread em que o componente foi criado.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.SynchronizingObject">
          <source>If the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> is used inside <ph id="ph2">[!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]</ph> in a Windows Forms designer, <ph id="ph3">&lt;xref:System.IO.FileSystemWatcher.SynchronizingObject%2A&gt;</ph> automatically sets to the control that contains the <ph id="ph4">&lt;xref:System.IO.FileSystemWatcher&gt;</ph>.</source>
          <target state="translated">Se o <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> é usado dentro de <ph id="ph2">[!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]</ph> em um designer de formulários do Windows, <ph id="ph3">&lt;xref:System.IO.FileSystemWatcher.SynchronizingObject%2A&gt;</ph> define automaticamente para o controle que contém o <ph id="ph4">&lt;xref:System.IO.FileSystemWatcher&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileSystemWatcher.SynchronizingObject">
          <source>For example, if you place a <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> on a designer for Form1 (which inherits from <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph>) the <ph id="ph3">&lt;xref:System.IO.FileSystemWatcher.SynchronizingObject%2A&gt;</ph> property of <ph id="ph4">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> is set to the instance of Form1.</source>
          <target state="translated">Por exemplo, se você colocar um <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> em um designer para Form1 (que herda de <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph>) o <ph id="ph3">&lt;xref:System.IO.FileSystemWatcher.SynchronizingObject%2A&gt;</ph> propriedade <ph id="ph4">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> é definido como a instância do Form1.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" uid="T:System.IO.FileSystemWatcher">
          <source>A synchronous method that returns a structure that contains specific information on the change that occurred.</source>
          <target state="translated">Um método síncrono que retorna uma estrutura que contém informações específicas sobre a alteração ocorrida.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" uid="M:System.IO.FileSystemWatcher.WaitForChanged(System.IO.WatcherChangeTypes)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.WatcherChangeTypes" /&gt;</ph> to watch for.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.IO.WatcherChangeTypes" /&gt;</ph> a ser inspecionado.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" uid="M:System.IO.FileSystemWatcher.WaitForChanged(System.IO.WatcherChangeTypes)">
          <source>A synchronous method that returns a structure that contains specific information on the change that occurred, given the type of change you want to monitor.</source>
          <target state="translated">Um método síncrono que retorna uma estrutura que contém informações específicas sobre a alteração ocorrida, considerando o tipo de alteração que você deseja monitorar.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" uid="M:System.IO.FileSystemWatcher.WaitForChanged(System.IO.WatcherChangeTypes)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.WaitForChangedResult" /&gt;</ph> that contains specific information on the change that occurred.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.IO.WaitForChangedResult" /&gt;</ph> que contém informações específicas sobre a alteração ocorrida.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.WaitForChanged(System.IO.WatcherChangeTypes)">
          <source>This method waits indefinitely until the first change occurs and then returns.</source>
          <target state="translated">Este método espera indefinidamente até que a primeira alteração ocorre e, em seguida, retorna.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.WaitForChanged(System.IO.WatcherChangeTypes)">
          <source>This is the same as using <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.WaitForChanged%2A&gt;</ph> with the <ph id="ph2">`timeout`</ph> parameter set to -1.</source>
          <target state="translated">Isso é o mesmo que usar <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.WaitForChanged%2A&gt;</ph> com o <ph id="ph2">`timeout`</ph> parâmetro definido como -1.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.WaitForChanged(System.IO.WatcherChangeTypes)">
          <source>This method allows an event handler to be invoked to respond to file changes even if the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A&gt;</ph> property is set to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Esse método permite que um manipulador de eventos a ser invocado para responder a mesmo que as alterações do arquivo de <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A&gt;</ph> está definida como <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.WaitForChanged(System.IO.WatcherChangeTypes)">
          <source>In some systems, <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> reports changes to files using the short 8.3 file name format.</source>
          <target state="translated">Em alguns sistemas, <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> informa as alterações nos arquivos usando o formato de nome de 8.3 arquivo curto.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.WaitForChanged(System.IO.WatcherChangeTypes)">
          <source>For example, a change to  "LongFileName.LongExtension" could be reported as "LongFi~.Lon".</source>
          <target state="translated">Por exemplo, uma alteração "LongFileName.LongExtension" poderia ser relatada como "LongFi ~. LON".</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" uid="M:System.IO.FileSystemWatcher.WaitForChanged(System.IO.WatcherChangeTypes,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.WatcherChangeTypes" /&gt;</ph> to watch for.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.IO.WatcherChangeTypes" /&gt;</ph> a ser inspecionado.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" uid="M:System.IO.FileSystemWatcher.WaitForChanged(System.IO.WatcherChangeTypes,System.Int32)">
          <source>The time (in milliseconds) to wait before timing out.</source>
          <target state="translated">O tempo (em milissegundos) de espera antes do tempo limite.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" uid="M:System.IO.FileSystemWatcher.WaitForChanged(System.IO.WatcherChangeTypes,System.Int32)">
          <source>A synchronous method that returns a structure that contains specific information on the change that occurred, given the type of change you want to monitor and the time (in milliseconds) to wait before timing out.</source>
          <target state="translated">Um método síncrono que retorna uma estrutura que contém informações específicas sobre a alteração ocorrida, considerando o tipo de alteração que você deseja monitorar e o tempo (em milissegundos) de espera antes do tempo limite.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" uid="M:System.IO.FileSystemWatcher.WaitForChanged(System.IO.WatcherChangeTypes,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.WaitForChangedResult" /&gt;</ph> that contains specific information on the change that occurred.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.IO.WaitForChangedResult" /&gt;</ph> que contém informações específicas sobre a alteração ocorrida.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.WaitForChanged(System.IO.WatcherChangeTypes,System.Int32)">
          <source>This method waits until a change occurs or it has timed out. A value of -1 for the <ph id="ph1">`timeout`</ph> parameter means wait indefinitely.</source>
          <target state="translated">Esse método aguarda até que uma alteração ocorre ou ele expirou. Um valor de -1 para o <ph id="ph1">`timeout`</ph> significa esperar indefinidamente.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.WaitForChanged(System.IO.WatcherChangeTypes,System.Int32)">
          <source>This method allows an event handler to be invoked to respond to file changes even if the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A&gt;</ph> property is set to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Esse método permite que um manipulador de eventos a ser invocado para responder a mesmo que as alterações do arquivo de <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A&gt;</ph> está definida como <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.WaitForChanged(System.IO.WatcherChangeTypes,System.Int32)">
          <source>In some systems, <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> reports changes to files using the short 8.3 file name format.</source>
          <target state="translated">Em alguns sistemas, <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> informa as alterações nos arquivos usando o formato de nome de 8.3 arquivo curto.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileSystemWatcher.WaitForChanged(System.IO.WatcherChangeTypes,System.Int32)">
          <source>For example, a change to  "LongFileName.LongExtension" could be reported as "LongFi~.Lon".</source>
          <target state="translated">Por exemplo, uma alteração "LongFileName.LongExtension" poderia ser relatada como "LongFi ~. LON".</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>