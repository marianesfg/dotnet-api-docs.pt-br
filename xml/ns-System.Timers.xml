<Namespace Name="System.Timers">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="16e8a11b0b2e9a1da17eb506a6408b9e4ee97265" />
    <Meta Name="ms.sourcegitcommit" Value="df6cf590aa3087f6c7c202712eee781c6a3c8f96" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="05/10/2018" />
    <Meta Name="ms.locfileid" Value="30736170" />
  </Metadata>
  <Docs>
    <summary>
      <span data-ttu-id="d89c0-101">O namespace <see cref="N:System.Timers" /> fornece o componente <see cref="T:System.Timers.Timer" />, que permite a você acionar um evento em um intervalo especificado.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d89c0-101">The <see cref="N:System.Timers" /> namespace provides the <see cref="T:System.Timers.Timer" /> component, which allows you to raise an event on a specified interval.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d89c0-102">O <xref:System.Timers.Timer> componente é um temporizador com base em servidor, que permite que você especifique um intervalo recorrente no qual o <xref:System.Timers.Timer.Elapsed> é gerado em seu aplicativo.</span><span class="sxs-lookup"><span data-stu-id="d89c0-102">The <xref:System.Timers.Timer> component is a server-based timer, which allows you to specify a recurring interval at which the <xref:System.Timers.Timer.Elapsed> event is raised in your application.</span></span> <span data-ttu-id="d89c0-103">Em seguida, você pode manipular esse evento para fornecer processamento regular.</span><span class="sxs-lookup"><span data-stu-id="d89c0-103">You can then handle this event to provide regular processing.</span></span> <span data-ttu-id="d89c0-104">Por exemplo, suponha que você tem um servidor crítico que deve ser mantido em execução 24 horas por dia, 7 dias por semana.</span><span class="sxs-lookup"><span data-stu-id="d89c0-104">For example, suppose you have a critical server that must be kept running 24 hours a day, 7 days a week.</span></span> <span data-ttu-id="d89c0-105">Você pode criar um serviço que usa um <xref:System.Timers.Timer> periodicamente Verifique o servidor e verifique se o sistema está em execução.</span><span class="sxs-lookup"><span data-stu-id="d89c0-105">You could create a service that uses a <xref:System.Timers.Timer> to periodically check the server and ensure that the system is up and running.</span></span> <span data-ttu-id="d89c0-106">Se o sistema não está respondendo, o serviço pode tentar reiniciar o servidor ou notificar um administrador.</span><span class="sxs-lookup"><span data-stu-id="d89c0-106">If the system is not responding, the service could attempt to restart the server or notify an administrator.</span></span>  
  
 <span data-ttu-id="d89c0-107">O servidor com base em <xref:System.Timers.Timer> é projetado para uso com os threads de trabalho em um ambiente multithreaded.</span><span class="sxs-lookup"><span data-stu-id="d89c0-107">The server-based <xref:System.Timers.Timer> is designed for use with worker threads in a multithreaded environment.</span></span> <span data-ttu-id="d89c0-108">Timers de servidor podem mover entre threads para lidar com a elevação <xref:System.Timers.Timer.Elapsed> evento, resultando em mais precisão de temporizadores do Windows em gera o evento no tempo.</span><span class="sxs-lookup"><span data-stu-id="d89c0-108">Server timers can move among threads to handle the raised <xref:System.Timers.Timer.Elapsed> event, resulting in more accuracy than Windows timers in raising the event on time.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
</Namespace>