<Namespace Name="System.Timers">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="16e8a11b0b2e9a1da17eb506a6408b9e4ee97265" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="30736170" />
  </Metadata>
  <Docs>
    <summary>O namespace <see cref="N:System.Timers" /> fornece o componente <see cref="T:System.Timers.Timer" />, que permite a você acionar um evento em um intervalo especificado.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Timers.Timer> componente é um timer com base em servidor, que permite que você especifique um intervalo recorrente no qual o <xref:System.Timers.Timer.Elapsed> é gerado em seu aplicativo. Em seguida, você pode manipular esse evento para fornecer processamento regular. Por exemplo, suponha que você tem um servidor crítico que deve ser mantido em execução 24 horas por dia, 7 dias por semana. Você pode criar um serviço que usa um <xref:System.Timers.Timer> periodicamente, verifique o servidor e certifique-se de que o sistema está em execução. Se o sistema não estiver respondendo, o serviço pode tentar reiniciar o servidor ou notificar um administrador.  
  
 O servidor com base em <xref:System.Timers.Timer> foi projetado para uso com threads de trabalho em um ambiente multithreaded. Temporizadores de servidor podem mover entre threads para lidar com a elevação <xref:System.Timers.Timer.Elapsed> evento, resultando em mais precisão do que os temporizadores do Windows em acionar o evento no tempo.  
  
 ]]></format>
    </remarks>
  </Docs>
</Namespace>