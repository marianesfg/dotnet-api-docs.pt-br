<Type Name="SyndicationLink" FullName="System.ServiceModel.Syndication.SyndicationLink">
  <TypeSignature Language="C#" Value="public class SyndicationLink" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SyndicationLink extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Syndication.SyndicationLink" />
  <TypeSignature Language="VB.NET" Value="Public Class SyndicationLink" />
  <TypeSignature Language="C++ CLI" Value="public ref class SyndicationLink" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="94a75-101">Representa um link dentro de um feed ou item de distribuição.</span><span class="sxs-lookup"><span data-stu-id="94a75-101">Represents a link within a syndication feed or item.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94a75-102"><xref:System.ServiceModel.Syndication.SyndicationLink> pode ser adicionado a um <xref:System.ServiceModel.Syndication.SyndicationFeed> ou <xref:System.ServiceModel.Syndication.SyndicationItem>.</span><span class="sxs-lookup"><span data-stu-id="94a75-102"><xref:System.ServiceModel.Syndication.SyndicationLink> can be added to a <xref:System.ServiceModel.Syndication.SyndicationFeed> or <xref:System.ServiceModel.Syndication.SyndicationItem>.</span></span> <span data-ttu-id="94a75-103">Quando serializado Atom 1.0 um <xref:System.ServiceModel.Syndication.SyndicationLink> é gravado como um `<link>` elemento, com o <xref:System.ServiceModel.Syndication.SyndicationLink> propriedades escritas como atributos do `<link>` elemento.</span><span class="sxs-lookup"><span data-stu-id="94a75-103">When serialized to Atom 1.0 a <xref:System.ServiceModel.Syndication.SyndicationLink> is written out as a `<link>` element, with the <xref:System.ServiceModel.Syndication.SyndicationLink> properties written out as attributes of the `<link>` element.</span></span> <span data-ttu-id="94a75-104">Quando serializado para RSS 2.0, o primeiro <xref:System.ServiceModel.Syndication.SyndicationLink> com uma relação de valor de 'alternativa' é gravada como um `<link>` elemento.</span><span class="sxs-lookup"><span data-stu-id="94a75-104">When serialized to RSS 2.0, the first <xref:System.ServiceModel.Syndication.SyndicationLink> with a relationship value of ‘alternate’ is written out as a `<link>` element.</span></span> <span data-ttu-id="94a75-105">Links adicionais são gravados como uma `<a10:link>` elementos.</span><span class="sxs-lookup"><span data-stu-id="94a75-105">Any additional links are written out as a `<a10:link>` elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="94a75-106">O exemplo a seguir mostra como usar o <xref:System.ServiceModel.Syndication.SyndicationLink> classe.</span><span class="sxs-lookup"><span data-stu-id="94a75-106">The following example shows how to use the <xref:System.ServiceModel.Syndication.SyndicationLink> class.</span></span>  
  
 [!code-csharp[SyndicationLink#0](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationlink/cs/program.cs#0)]
 [!code-vb[SyndicationLink#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationlink/vb/snippets.vb#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="94a75-107">Inicializa uma nova instância da classe <see cref="T:System.ServiceModel.Syndication.SyndicationLink" />.</span><span class="sxs-lookup"><span data-stu-id="94a75-107">Initializes a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SyndicationLink ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationLink.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SyndicationLink();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="94a75-108">Cria uma nova instância da instância <see cref="T:System.ServiceModel.Syndication.SyndicationLink" />.</span><span class="sxs-lookup"><span data-stu-id="94a75-108">Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> instance.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SyndicationLink (System.ServiceModel.Syndication.SyndicationLink source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Syndication.SyndicationLink source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationLink.#ctor(System.ServiceModel.Syndication.SyndicationLink)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (source As SyndicationLink)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SyndicationLink(System::ServiceModel::Syndication::SyndicationLink ^ source);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="source" Type="System.ServiceModel.Syndication.SyndicationLink" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="94a75-109">Uma instância <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> usada para inicializar a nova instância.</span><span class="sxs-lookup"><span data-stu-id="94a75-109">The <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> instance used to initialize the new instance.</span></span></param>
        <summary><span data-ttu-id="94a75-110">Inicializa uma nova instância da classe <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> com a instância especificada.</span><span class="sxs-lookup"><span data-stu-id="94a75-110">Initializes a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> class with the specified instance.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SyndicationLink (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationLink.#ctor(System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SyndicationLink(Uri ^ uri);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri"><span data-ttu-id="94a75-111">O URI para o recurso vinculado.</span><span class="sxs-lookup"><span data-stu-id="94a75-111">The URI to the linked resource.</span></span></param>
        <summary><span data-ttu-id="94a75-112">Inicializa uma nova instância da classe <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> com o <see cref="T:System.Uri" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="94a75-112">Initializes a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> class with the specified <see cref="T:System.Uri" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="94a75-113">O exemplo a seguir mostra como chamar este construtor.</span><span class="sxs-lookup"><span data-stu-id="94a75-113">The following example shows how to call this constructor.</span></span>  
  
 [!code-csharp[SyndicationLink#1](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationlink/cs/program.cs#1)]
 [!code-vb[SyndicationLink#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationlink/vb/snippets.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SyndicationLink (Uri uri, string relationshipType, string title, string mediaType, long length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri uri, string relationshipType, string title, string mediaType, int64 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationLink.#ctor(System.Uri,System.String,System.String,System.String,System.Int64)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SyndicationLink(Uri ^ uri, System::String ^ relationshipType, System::String ^ title, System::String ^ mediaType, long length);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="relationshipType" Type="System.String" />
        <Parameter Name="title" Type="System.String" />
        <Parameter Name="mediaType" Type="System.String" />
        <Parameter Name="length" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="uri"><span data-ttu-id="94a75-114">O URI para o recurso vinculado.</span><span class="sxs-lookup"><span data-stu-id="94a75-114">The URI to the linked resource.</span></span></param>
        <param name="relationshipType"><span data-ttu-id="94a75-115">Tipo de relacionamento.</span><span class="sxs-lookup"><span data-stu-id="94a75-115">The relationship type.</span></span></param>
        <param name="title"><span data-ttu-id="94a75-116">O título do link.</span><span class="sxs-lookup"><span data-stu-id="94a75-116">The title of the link.</span></span></param>
        <param name="mediaType"><span data-ttu-id="94a75-117">O tipo de mídia do link.</span><span class="sxs-lookup"><span data-stu-id="94a75-117">The media type of the link.</span></span></param>
        <param name="length"><span data-ttu-id="94a75-118">O comprimento do conteúdo vinculado.</span><span class="sxs-lookup"><span data-stu-id="94a75-118">The length of the linked content.</span></span></param>
        <summary><span data-ttu-id="94a75-119">Inicializa uma nova instância da classe <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> com <see cref="T:System.Uri" />, tipo de relação, título, tipo de mídia e comprimento especificados.</span><span class="sxs-lookup"><span data-stu-id="94a75-119">Initializes a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> class with the specified <see cref="T:System.Uri" />, relation type, title, media type, and length.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94a75-120">Tipos de relação conhecidos incluem:</span><span class="sxs-lookup"><span data-stu-id="94a75-120">Well-known relationship types include:</span></span>  
  
-   <span data-ttu-id="94a75-121">`alternate` -O link identifica uma versão alternativa do recurso descrito pelo Feed recipiente ou do Item.</span><span class="sxs-lookup"><span data-stu-id="94a75-121">`alternate` - The link identifies an alternate version of the resource described by the containing Feed or Item.</span></span>  
  
-   <span data-ttu-id="94a75-122">`related` -O link identifica um recurso relacionado Feed recipiente ou do Item.</span><span class="sxs-lookup"><span data-stu-id="94a75-122">`related` - The link identifies a resource related to the containing Feed or Item.</span></span>  
  
-   <span data-ttu-id="94a75-123">`self` -O link identifica um recurso equivalente ao Feed recipiente ou do Item.</span><span class="sxs-lookup"><span data-stu-id="94a75-123">`self` - The link identifies a resource equivalent to the containing Feed or Item.</span></span>  
  
-   <span data-ttu-id="94a75-124">`enclosure` -O link identifica um recurso relacionado que é potencialmente grande em tamanho e pode exigir tratamento especial.</span><span class="sxs-lookup"><span data-stu-id="94a75-124">`enclosure` - The link identifies a related resource that is potentially large in size and might require special handling.</span></span> <span data-ttu-id="94a75-125">Essa relação de link é frequentemente usada quando podcasts ou arquivos de áudio são distribuídos em um Feed.</span><span class="sxs-lookup"><span data-stu-id="94a75-125">This link relation is often used when podcasts or audio files are distributed in a Feed.</span></span>  
  
-   <span data-ttu-id="94a75-126">`via` -O link identifica um recurso que é a origem das informações fornecidas no Feed recipiente ou do Item.</span><span class="sxs-lookup"><span data-stu-id="94a75-126">`via` - The link identifies a resource that is the source of the information provided in the containing Feed or Item.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="94a75-127">O exemplo a seguir mostra como chamar este construtor.</span><span class="sxs-lookup"><span data-stu-id="94a75-127">The following example shows how to call this constructor.</span></span>  
  
 [!code-csharp[SyndicationLink#0](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationlink/cs/program.cs#0)]
 [!code-vb[SyndicationLink#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationlink/vb/snippets.vb#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AttributeExtensions">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.Dictionary&lt;System.Xml.XmlQualifiedName,string&gt; AttributeExtensions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.Dictionary`2&lt;class System.Xml.XmlQualifiedName, string&gt; AttributeExtensions" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationLink.AttributeExtensions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AttributeExtensions As Dictionary(Of XmlQualifiedName, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::Dictionary&lt;System::Xml::XmlQualifiedName ^, System::String ^&gt; ^ AttributeExtensions { System::Collections::Generic::Dictionary&lt;System::Xml::XmlQualifiedName ^, System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ServiceModel.Syndication.ISyndicationElement.AttributeExtensions</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;System.Xml.XmlQualifiedName,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="94a75-128">Obtém as extensões de atributo do link.</span><span class="sxs-lookup"><span data-stu-id="94a75-128">Gets the attribute extensions of the link.</span></span></summary>
        <value><span data-ttu-id="94a75-129">Um dicionário que contém uma coleção de extensões de atributo.</span><span class="sxs-lookup"><span data-stu-id="94a75-129">A dictionary that contains a collection of attribute extensions.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94a75-130"><xref:System.ServiceModel.Syndication.SyndicationLink.AttributeExtensions%2A> permite que você adicione atributos personalizados para o <xref:System.ServiceModel.Syndication.SyndicationLink>.</span><span class="sxs-lookup"><span data-stu-id="94a75-130"><xref:System.ServiceModel.Syndication.SyndicationLink.AttributeExtensions%2A> allows you to add custom attributes to the <xref:System.ServiceModel.Syndication.SyndicationLink>.</span></span> <span data-ttu-id="94a75-131">Quando serializado para Atom 1.0, os atributos personalizados aparecem dentro de `<link>` elemento.</span><span class="sxs-lookup"><span data-stu-id="94a75-131">When serialized to Atom 1.0, the custom attributes appear within the `<link>` element.</span></span> <span data-ttu-id="94a75-132">Quando serializado para RSS 2.0, os atributos personalizados aparecem no `<a10:link>` elemento.</span><span class="sxs-lookup"><span data-stu-id="94a75-132">When serialized to RSS 2.0, the custom attributes appear in the `<a10:link>` element.</span></span> <span data-ttu-id="94a75-133">Pode ser adicionado a qualquer atributo XML válido.</span><span class="sxs-lookup"><span data-stu-id="94a75-133">Any valid XML attribute can be added.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="94a75-134">O código a seguir mostra como adicionar uma extensão de atributo para um link de distribuição.</span><span class="sxs-lookup"><span data-stu-id="94a75-134">The following code shows how to add an attribute extension to a syndication link.</span></span>  
  
 [!code-csharp[LooselyTypedExtensions#4](~/samples/snippets/csharp/VS_Snippets_CFX/looselytypedextensions/cs/snippets.cs#4)]
 [!code-vb[LooselyTypedExtensions#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/looselytypedextensions/vb/snippets.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseUri">
      <MemberSignature Language="C#" Value="public Uri BaseUri { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri BaseUri" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationLink.BaseUri" />
      <MemberSignature Language="VB.NET" Value="Public Property BaseUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ BaseUri { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="94a75-135">Obtém e define o URI de base do link de sindicalização.</span><span class="sxs-lookup"><span data-stu-id="94a75-135">Gets and sets the base URI of the syndication link.</span></span></summary>
        <value><span data-ttu-id="94a75-136">Um <see cref="T:System.Uri" /> instância que contém o URI de base do link de distribuição.</span><span class="sxs-lookup"><span data-stu-id="94a75-136">A <see cref="T:System.Uri" /> instance that contains the base URI of the syndication link.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="94a75-137">O código a seguir mostra como definir o URI de base de um link de distribuição.</span><span class="sxs-lookup"><span data-stu-id="94a75-137">The following code shows how to set the base URI of a syndication link.</span></span>  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual System.ServiceModel.Syndication.SyndicationLink Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Syndication.SyndicationLink Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationLink.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As SyndicationLink" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ServiceModel::Syndication::SyndicationLink ^ Clone();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Syndication.SyndicationLink</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="94a75-138">Cria uma cópia da instância <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> atual.</span><span class="sxs-lookup"><span data-stu-id="94a75-138">Creates a copy of the current <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> instance.</span></span></summary>
        <returns><span data-ttu-id="94a75-139">Uma nova instância de <see cref="T:System.ServiceModel.Syndication.SyndicationLink" />.</span><span class="sxs-lookup"><span data-stu-id="94a75-139">A new <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="94a75-140">O código a seguir mostra como criar um clone de um link de distribuição.</span><span class="sxs-lookup"><span data-stu-id="94a75-140">The following code shows how to create a clone of a syndication link.</span></span>  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateAlternateLink">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="94a75-141">Cria um novo objeto <see cref="T:System.ServiceModel.Syndication.SyndicationLink" />.</span><span class="sxs-lookup"><span data-stu-id="94a75-141">Creates a new <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94a75-142">Esse método cria um novo <xref:System.ServiceModel.Syndication.SyndicationLink> objeto e conjuntos de <xref:System.ServiceModel.Syndication.SyndicationLink.RelationshipType%2A> para `alternate`.</span><span class="sxs-lookup"><span data-stu-id="94a75-142">This method creates a new <xref:System.ServiceModel.Syndication.SyndicationLink> object and sets <xref:System.ServiceModel.Syndication.SyndicationLink.RelationshipType%2A> to `alternate`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateAlternateLink">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Syndication.SyndicationLink CreateAlternateLink (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Syndication.SyndicationLink CreateAlternateLink(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationLink.CreateAlternateLink(System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Syndication::SyndicationLink ^ CreateAlternateLink(Uri ^ uri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Syndication.SyndicationLink</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri"><span data-ttu-id="94a75-143">O URI do recurso vinculado.</span><span class="sxs-lookup"><span data-stu-id="94a75-143">The URI of the linked resource.</span></span></param>
        <summary><span data-ttu-id="94a75-144">Cria um novo objeto <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> com o <see cref="T:System.Uri" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="94a75-144">Creates a new <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> object with the specified <see cref="T:System.Uri" />.</span></span></summary>
        <returns><span data-ttu-id="94a75-145">Uma nova instância de <see cref="T:System.ServiceModel.Syndication.SyndicationLink" />.</span><span class="sxs-lookup"><span data-stu-id="94a75-145">A new <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="94a75-146">O exemplo a seguir mostra como criar um link alternativo.</span><span class="sxs-lookup"><span data-stu-id="94a75-146">The following example shows how to create an alternate link.</span></span>  
  
 [!code-csharp[SyndicationLink#4](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationlink/cs/program.cs#4)]
 [!code-vb[SyndicationLink#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationlink/vb/snippets.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAlternateLink">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Syndication.SyndicationLink CreateAlternateLink (Uri uri, string mediaType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Syndication.SyndicationLink CreateAlternateLink(class System.Uri uri, string mediaType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationLink.CreateAlternateLink(System.Uri,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Syndication::SyndicationLink ^ CreateAlternateLink(Uri ^ uri, System::String ^ mediaType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Syndication.SyndicationLink</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="mediaType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uri"><span data-ttu-id="94a75-147">O URI do recurso vinculado.</span><span class="sxs-lookup"><span data-stu-id="94a75-147">The URI of the linked resource.</span></span></param>
        <param name="mediaType"><span data-ttu-id="94a75-148">O tipo de mídia do link.</span><span class="sxs-lookup"><span data-stu-id="94a75-148">The media type of the link.</span></span></param>
        <summary><span data-ttu-id="94a75-149">Cria um novo objeto <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> com o tipo de mídia e o <see cref="T:System.Uri" /> especificados.</span><span class="sxs-lookup"><span data-stu-id="94a75-149">Creates a new <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> object with the specified <see cref="T:System.Uri" /> and media type.</span></span></summary>
        <returns><span data-ttu-id="94a75-150">Uma nova instância de <see cref="T:System.ServiceModel.Syndication.SyndicationLink" />.</span><span class="sxs-lookup"><span data-stu-id="94a75-150">A new <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="94a75-151">O exemplo a seguir mostra como criar um link alternativo.</span><span class="sxs-lookup"><span data-stu-id="94a75-151">The following example shows how to create an alternate link.</span></span>  
  
 [!code-csharp[SyndicationLink#5](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationlink/cs/program.cs#5)]
 [!code-vb[SyndicationLink#5](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationlink/vb/snippets.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMediaEnclosureLink">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Syndication.SyndicationLink CreateMediaEnclosureLink (Uri uri, string mediaType, long length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Syndication.SyndicationLink CreateMediaEnclosureLink(class System.Uri uri, string mediaType, int64 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationLink.CreateMediaEnclosureLink(System.Uri,System.String,System.Int64)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Syndication::SyndicationLink ^ CreateMediaEnclosureLink(Uri ^ uri, System::String ^ mediaType, long length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Syndication.SyndicationLink</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="mediaType" Type="System.String" />
        <Parameter Name="length" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="uri"><span data-ttu-id="94a75-152">O URI do recurso vinculado.</span><span class="sxs-lookup"><span data-stu-id="94a75-152">The URI of the linked resource.</span></span></param>
        <param name="mediaType"><span data-ttu-id="94a75-153">O tipo de mídia do link.</span><span class="sxs-lookup"><span data-stu-id="94a75-153">The media type of the link.</span></span></param>
        <param name="length"><span data-ttu-id="94a75-154">O comprimento do conteúdo vinculado.</span><span class="sxs-lookup"><span data-stu-id="94a75-154">The length of the linked content.</span></span></param>
        <summary><span data-ttu-id="94a75-155">Cria um vínculo de compartimento de mídia com o URI, o tipo de mídia e o comprimento especificados.</span><span class="sxs-lookup"><span data-stu-id="94a75-155">Creates a media enclosure link with the specified URI, media type, and length.</span></span></summary>
        <returns><span data-ttu-id="94a75-156">Uma nova instância de <see cref="T:System.ServiceModel.Syndication.SyndicationLink" />.</span><span class="sxs-lookup"><span data-stu-id="94a75-156">A new <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94a75-157">Esse método cria um novo <xref:System.ServiceModel.Syndication.SyndicationLink> objeto e conjuntos de <xref:System.ServiceModel.Syndication.SyndicationLink.RelationshipType%2A> para `enclosure`.</span><span class="sxs-lookup"><span data-stu-id="94a75-157">This method creates a new <xref:System.ServiceModel.Syndication.SyndicationLink> object and sets <xref:System.ServiceModel.Syndication.SyndicationLink.RelationshipType%2A> to `enclosure`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="94a75-158">O exemplo a seguir mostra como criar um link de compartimento de mídia.</span><span class="sxs-lookup"><span data-stu-id="94a75-158">The following example shows how to create a media enclosure link.</span></span>  
  
 [!code-csharp[SyndicationLink#6](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationlink/cs/program.cs#6)]
 [!code-vb[SyndicationLink#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationlink/vb/snippets.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateSelfLink">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="94a75-159">Cria um novo <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> com o tipo de relacionamento definido como <see langword="self" />.</span><span class="sxs-lookup"><span data-stu-id="94a75-159">Creates a new <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> with the relationship type set to <see langword="self" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94a75-160">Esse método cria um novo <xref:System.ServiceModel.Syndication.SyndicationLink> objeto e conjuntos de <xref:System.ServiceModel.Syndication.SyndicationLink.RelationshipType%2A> para `self`.</span><span class="sxs-lookup"><span data-stu-id="94a75-160">This method creates a new <xref:System.ServiceModel.Syndication.SyndicationLink> object and sets <xref:System.ServiceModel.Syndication.SyndicationLink.RelationshipType%2A> to `self`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateSelfLink">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Syndication.SyndicationLink CreateSelfLink (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Syndication.SyndicationLink CreateSelfLink(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationLink.CreateSelfLink(System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Syndication::SyndicationLink ^ CreateSelfLink(Uri ^ uri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Syndication.SyndicationLink</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri"><span data-ttu-id="94a75-161">O URI para o recurso vinculado.</span><span class="sxs-lookup"><span data-stu-id="94a75-161">The URI to the linked resource.</span></span></param>
        <summary><span data-ttu-id="94a75-162">Cria um novo <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> com o URI e o tipo de relacionamento especificados definidos como <see langword="self" />.</span><span class="sxs-lookup"><span data-stu-id="94a75-162">Creates a new <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> with the specified URI and relationship type set to <see langword="self" />.</span></span></summary>
        <returns><span data-ttu-id="94a75-163">Uma instância de <see cref="T:System.ServiceModel.Syndication.SyndicationLink" />.</span><span class="sxs-lookup"><span data-stu-id="94a75-163">A <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="94a75-164">O exemplo a seguir mostra como criar um link de autoatendimento.</span><span class="sxs-lookup"><span data-stu-id="94a75-164">The following example shows how to create a self link.</span></span>  
  
 [!code-csharp[SyndicationLink#7](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationlink/cs/program.cs#7)]
 [!code-vb[SyndicationLink#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationlink/vb/snippets.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSelfLink">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Syndication.SyndicationLink CreateSelfLink (Uri uri, string mediaType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Syndication.SyndicationLink CreateSelfLink(class System.Uri uri, string mediaType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationLink.CreateSelfLink(System.Uri,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Syndication::SyndicationLink ^ CreateSelfLink(Uri ^ uri, System::String ^ mediaType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Syndication.SyndicationLink</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="mediaType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uri"><span data-ttu-id="94a75-165">O URI para o recurso vinculado.</span><span class="sxs-lookup"><span data-stu-id="94a75-165">The URI to the linked resource.</span></span></param>
        <param name="mediaType"><span data-ttu-id="94a75-166">O tipo de mídia do link.</span><span class="sxs-lookup"><span data-stu-id="94a75-166">The media type of the link.</span></span></param>
        <summary><span data-ttu-id="94a75-167">Cria um novo <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> com o URI, o tipo de mídia e o tipo de relacionamento especificados definidos como <see langword="self" />.</span><span class="sxs-lookup"><span data-stu-id="94a75-167">Creates a new <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> with the specified URI, media type, and relationship type set to <see langword="self" />.</span></span></summary>
        <returns><span data-ttu-id="94a75-168">Uma instância de <see cref="T:System.ServiceModel.Syndication.SyndicationLink" />.</span><span class="sxs-lookup"><span data-stu-id="94a75-168">A <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="94a75-169">O exemplo a seguir mostra como criar um link de autoatendimento.</span><span class="sxs-lookup"><span data-stu-id="94a75-169">The following example shows how to create a self link.</span></span>  
  
 [!code-csharp[SyndicationLink#8](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationlink/cs/program.cs#8)]
 [!code-vb[SyndicationLink#8](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationlink/vb/snippets.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ElementExtensions">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Syndication.SyndicationElementExtensionCollection ElementExtensions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Syndication.SyndicationElementExtensionCollection ElementExtensions" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationLink.ElementExtensions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ElementExtensions As SyndicationElementExtensionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Syndication::SyndicationElementExtensionCollection ^ ElementExtensions { System::ServiceModel::Syndication::SyndicationElementExtensionCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ServiceModel.Syndication.ISyndicationElement.ElementExtensions</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Syndication.SyndicationElementExtensionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="94a75-170">Obtém as extensões de elemento para o <see cref="T:System.ServiceModel.Syndication.SyndicationLink" />.</span><span class="sxs-lookup"><span data-stu-id="94a75-170">Gets the element extensions for the <see cref="T:System.ServiceModel.Syndication.SyndicationLink" />.</span></span></summary>
        <value><span data-ttu-id="94a75-171">Um <see cref="T:System.ServiceModel.Syndication.SyndicationElementExtensionCollection" /> que contém as extensões de elemento para o <see cref="T:System.ServiceModel.Syndication.SyndicationLink" />.</span><span class="sxs-lookup"><span data-stu-id="94a75-171">A <see cref="T:System.ServiceModel.Syndication.SyndicationElementExtensionCollection" /> that contains the element extensions for the <see cref="T:System.ServiceModel.Syndication.SyndicationLink" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94a75-172">Extensões de elemento são os elementos XML válidos que não são especificados nas especificações do Atom 1.0 ou o RSS 2.0.</span><span class="sxs-lookup"><span data-stu-id="94a75-172">Element extensions are valid XML elements that are not specified in either the Atom 1.0 or RSS 2.0 specifications.</span></span> <span data-ttu-id="94a75-173">Você pode adicionar qualquer elemento XML válido como uma extensão, desde que o namespace é diferente do namespace delimitador.</span><span class="sxs-lookup"><span data-stu-id="94a75-173">You can add any valid XML element as an extension, provided its namespace is different from the enclosing namespace.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="94a75-174">O código a seguir mostra como adicionar uma extensão de elemento em um link de distribuição.</span><span class="sxs-lookup"><span data-stu-id="94a75-174">The following code shows how to add an element extension to a syndication link.</span></span>  
  
 [!code-csharp[LooselyTypedExtensions#5](~/samples/snippets/csharp/VS_Snippets_CFX/looselytypedextensions/cs/snippets.cs#5)]
 [!code-vb[LooselyTypedExtensions#5](~/samples/snippets/visualbasic/VS_Snippets_CFX/looselytypedextensions/vb/snippets.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAbsoluteUri">
      <MemberSignature Language="C#" Value="public Uri GetAbsoluteUri ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Uri GetAbsoluteUri() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationLink.GetAbsoluteUri" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAbsoluteUri () As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Uri ^ GetAbsoluteUri();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="94a75-175">Obtém o URI absoluto para o <see cref="T:System.ServiceModel.Syndication.SyndicationLink" />.</span><span class="sxs-lookup"><span data-stu-id="94a75-175">Gets the absolute URI for the <see cref="T:System.ServiceModel.Syndication.SyndicationLink" />.</span></span></summary>
        <returns><span data-ttu-id="94a75-176">Uma instância <see cref="T:System.Uri" /> que contém o URI absoluto do <see cref="T:System.ServiceModel.Syndication.SyndicationLink" />.</span><span class="sxs-lookup"><span data-stu-id="94a75-176">A <see cref="T:System.Uri" /> instance that contains the absolute URI of the <see cref="T:System.ServiceModel.Syndication.SyndicationLink" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="94a75-177">O código a seguir mostra como obter o URI absoluto de um link de distribuição.</span><span class="sxs-lookup"><span data-stu-id="94a75-177">The following code shows how to get the absolute URI of a syndication link.</span></span>  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public long Length { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Length" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationLink.Length" />
      <MemberSignature Language="VB.NET" Value="Public Property Length As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long Length { long get(); void set(long value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="94a75-178">Obtém e define o comprimento do recurso vinculado em bytes.</span><span class="sxs-lookup"><span data-stu-id="94a75-178">Gets and sets the length of the linked resource in bytes.</span></span></summary>
        <value><span data-ttu-id="94a75-179">O comprimento do recurso vinculado.</span><span class="sxs-lookup"><span data-stu-id="94a75-179">The length of the linked resource.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94a75-180">Quando serializado Atom 1.0 a <xref:System.ServiceModel.Syndication.SyndicationLink.Length%2A> propriedade é gravada como um `length` atributo o `<link>` elemento.</span><span class="sxs-lookup"><span data-stu-id="94a75-180">When serialized to Atom 1.0 the <xref:System.ServiceModel.Syndication.SyndicationLink.Length%2A> property is written as a `length` attribute in the `<link>` element.</span></span>  
  
 <span data-ttu-id="94a75-181">Quando serializado para RSS 2.0 esse valor é gravado como o `length` atributo do `<a10:link>` elemento.</span><span class="sxs-lookup"><span data-stu-id="94a75-181">When serialized to RSS 2.0 this value is written as the `length` attribute of the `<a10:link>` element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="94a75-182">O código a seguir mostra como definir o comprimento de um link de distribuição.</span><span class="sxs-lookup"><span data-stu-id="94a75-182">The following code shows how to set the length of a syndication link.</span></span>  
  
  
  
 <span data-ttu-id="94a75-183">O XML a seguir mostra como o <xref:System.ServiceModel.Syndication.SyndicationLink.Length%2A> propriedade é serializada como Atom 1.0.</span><span class="sxs-lookup"><span data-stu-id="94a75-183">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationLink.Length%2A> property is serialized to Atom 1.0.</span></span>  
  
 [!code-xml[SyndicationLink#2](~/samples/snippets/xml/VS_Snippets_CFX/syndicationlink/XML/atom.xml#2)]  
  
 <span data-ttu-id="94a75-184">O XML a seguir mostra como o <xref:System.ServiceModel.Syndication.SyndicationLink.Length%2A> propriedade é serializada como RSS 2.0.</span><span class="sxs-lookup"><span data-stu-id="94a75-184">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationLink.Length%2A> property is serialized to RSS 2.0.</span></span>  
  
 [!code-xml[SyndicationLink#3](~/samples/snippets/xml/VS_Snippets_CFX/syndicationlink/XML/rss.xml#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MediaType">
      <MemberSignature Language="C#" Value="public string MediaType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MediaType" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationLink.MediaType" />
      <MemberSignature Language="VB.NET" Value="Public Property MediaType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MediaType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="94a75-185">Obtém e define o tipo de mídia do recurso vinculado.</span><span class="sxs-lookup"><span data-stu-id="94a75-185">Gets and sets the media type of the linked resource.</span></span></summary>
        <value><span data-ttu-id="94a75-186">O tipo de mídia do recurso vinculado.</span><span class="sxs-lookup"><span data-stu-id="94a75-186">The media type of the linked resource.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94a75-187">Quando serializado Atom 1.0 esse valor é gravado como um `type` atributo o `<link>` elemento.</span><span class="sxs-lookup"><span data-stu-id="94a75-187">When serialized to Atom 1.0 this value is written as a `type` attribute in the `<link>` element.</span></span> <span data-ttu-id="94a75-188">Quando serializado para RSS 2.0 esse valor é gravado como o `type` atributo o `<a10:link>` elemento.</span><span class="sxs-lookup"><span data-stu-id="94a75-188">When serialized to RSS 2.0 this value is written as the `type` attribute in the `<a10:link>` element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="94a75-189">O código a seguir mostra como definir o tipo de mídia em um link de distribuição.</span><span class="sxs-lookup"><span data-stu-id="94a75-189">The following code shows how to set the media type on a syndication link.</span></span>  
  
  
  
 <span data-ttu-id="94a75-190">O XML a seguir mostra como o <xref:System.ServiceModel.Syndication.SyndicationLink.MediaType%2A> propriedade é serializada como Atom 1.0.</span><span class="sxs-lookup"><span data-stu-id="94a75-190">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationLink.MediaType%2A> property is serialized to Atom 1.0.</span></span>  
  
 [!code-xml[SyndicationLink#2](~/samples/snippets/xml/VS_Snippets_CFX/syndicationlink/XML/atom.xml#2)]  
  
 <span data-ttu-id="94a75-191">O XML a seguir mostra como o <xref:System.ServiceModel.Syndication.SyndicationLink.MediaType%2A> propriedade é serializada como RSS 2.0.</span><span class="sxs-lookup"><span data-stu-id="94a75-191">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationLink.MediaType%2A> property is serialized to RSS 2.0.</span></span>  
  
 [!code-xml[SyndicationLink#3](~/samples/snippets/xml/VS_Snippets_CFX/syndicationlink/XML/rss.xml#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RelationshipType">
      <MemberSignature Language="C#" Value="public string RelationshipType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RelationshipType" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationLink.RelationshipType" />
      <MemberSignature Language="VB.NET" Value="Public Property RelationshipType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RelationshipType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="94a75-192">Obtém e define o tipo de relacionamento do recurso vinculado.</span><span class="sxs-lookup"><span data-stu-id="94a75-192">Gets and sets the relationship type of the linked resource.</span></span></summary>
        <value><span data-ttu-id="94a75-193">O tipo de relação do recurso vinculado.</span><span class="sxs-lookup"><span data-stu-id="94a75-193">The relationship type of the linked resource.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94a75-194">Tipos de relação conhecidos incluem:</span><span class="sxs-lookup"><span data-stu-id="94a75-194">Well-known relationship types include:</span></span>  
  
-   <span data-ttu-id="94a75-195">`alternate` -O link identifica uma versão alternativa do recurso descrito pelo Feed recipiente ou do Item.</span><span class="sxs-lookup"><span data-stu-id="94a75-195">`alternate` - The link identifies an alternate version of the resource described by the containing Feed or Item.</span></span>  
  
-   <span data-ttu-id="94a75-196">`related` -O link identifica um recurso relacionado Feed recipiente ou do Item.</span><span class="sxs-lookup"><span data-stu-id="94a75-196">`related` - The link identifies a resource related to the containing Feed or Item.</span></span>  
  
-   <span data-ttu-id="94a75-197">`self` -O link identifica um recurso equivalente ao Feed recipiente ou do Item.</span><span class="sxs-lookup"><span data-stu-id="94a75-197">`self` - The link identifies a resource equivalent to the containing Feed or Item.</span></span>  
  
-   <span data-ttu-id="94a75-198">`enclosure` -O link identifica um recurso relacionado que é potencialmente grande em tamanho e pode exigir tratamento especial.</span><span class="sxs-lookup"><span data-stu-id="94a75-198">`enclosure` - The link identifies a related resource that is potentially large in size and might require special handling.</span></span> <span data-ttu-id="94a75-199">Essa relação de link é frequentemente usada quando podcasts ou arquivos de áudio são distribuídos em um Feed.</span><span class="sxs-lookup"><span data-stu-id="94a75-199">This link relation is often used when podcasts or audio files are distributed in a Feed.</span></span>  
  
-   <span data-ttu-id="94a75-200">`via` -O link identifica um recurso que é a origem das informações fornecidas no Feed recipiente ou do Item.</span><span class="sxs-lookup"><span data-stu-id="94a75-200">`via` - The link identifies a resource that is the source of the information provided in the containing Feed or Item.</span></span>  
  
 <span data-ttu-id="94a75-201">Quando serializado Atom 1.0 esse valor é escrito como o `rel` atributo do `<link>` elemento.</span><span class="sxs-lookup"><span data-stu-id="94a75-201">When serialized to Atom 1.0 this value is written out as the `rel` attribute of the `<link>` element.</span></span> <span data-ttu-id="94a75-202">Quando serializado para RSS 2.0, esse valor é escrito como o `rel` atributo o `<a10:link>` elemento.</span><span class="sxs-lookup"><span data-stu-id="94a75-202">When serialized to RSS 2.0, this value is written out as the `rel` attribute in the `<a10:link>` element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="94a75-203">O código a seguir mostra como definir o tipo de relação de um link de distribuição.</span><span class="sxs-lookup"><span data-stu-id="94a75-203">The following code shows how to set the relationship type of a syndication link.</span></span>  
  
  
  
 <span data-ttu-id="94a75-204">O XML a seguir mostra como o <xref:System.ServiceModel.Syndication.SyndicationLink.RelationshipType%2A> propriedade é serializada como Atom 1.0.</span><span class="sxs-lookup"><span data-stu-id="94a75-204">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationLink.RelationshipType%2A> property is serialized to Atom 1.0.</span></span>  
  
 [!code-xml[SyndicationLink#2](~/samples/snippets/xml/VS_Snippets_CFX/syndicationlink/XML/atom.xml#2)]  
  
 <span data-ttu-id="94a75-205">O XML a seguir mostra como o <xref:System.ServiceModel.Syndication.SyndicationLink.RelationshipType%2A> propriedade é serializada como RSS 2.0.</span><span class="sxs-lookup"><span data-stu-id="94a75-205">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationLink.RelationshipType%2A> property is serialized to RSS 2.0.</span></span>  
  
 [!code-xml[SyndicationLink#3](~/samples/snippets/xml/VS_Snippets_CFX/syndicationlink/XML/rss.xml#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationLink.Title" />
      <MemberSignature Language="VB.NET" Value="Public Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Title { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="94a75-206">Obtém e define o título do recurso vinculado.</span><span class="sxs-lookup"><span data-stu-id="94a75-206">Gets and sets the title of the linked resource.</span></span></summary>
        <value><span data-ttu-id="94a75-207">O título do recurso vinculado.</span><span class="sxs-lookup"><span data-stu-id="94a75-207">The title of the linked resource.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94a75-208">Quando serializado Atom 1.0 esse valor é escrito como o `title` atributo o `<link>` elemento.</span><span class="sxs-lookup"><span data-stu-id="94a75-208">When serialized to Atom 1.0 this value is written out as the `title` attribute in the `<link>` element.</span></span>  
  
 <span data-ttu-id="94a75-209">Quando serializado para RSS 2.0 o título é gravado como o `title` atributo o `<a10:link>` elemento.</span><span class="sxs-lookup"><span data-stu-id="94a75-209">When serialized to RSS 2.0 the title is written out as the `title` attribute in the `<a10:link>` element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="94a75-210">O código a seguir mostra como definir o título de um link de distribuição.</span><span class="sxs-lookup"><span data-stu-id="94a75-210">The following code shows how to set the title of a syndication link.</span></span>  
  
 [!code-csharp[SyndicationLink#0](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationlink/cs/program.cs#0)]
 [!code-vb[SyndicationLink#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationlink/vb/snippets.vb#0)]  
  
 <span data-ttu-id="94a75-211">O XML a seguir mostra como o <xref:System.ServiceModel.Syndication.SyndicationLink.Title%2A> propriedade é serializada como Atom 1.0.</span><span class="sxs-lookup"><span data-stu-id="94a75-211">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationLink.Title%2A> property is serialized to Atom 1.0.</span></span>  
  
 [!code-xml[SyndicationLink#2](~/samples/snippets/xml/VS_Snippets_CFX/syndicationlink/XML/atom.xml#2)]  
  
 <span data-ttu-id="94a75-212">O XML a seguir mostra como o <xref:System.ServiceModel.Syndication.SyndicationLink.Title%2A> propriedade é serializada como RSS 2.0.</span><span class="sxs-lookup"><span data-stu-id="94a75-212">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationLink.Title%2A> property is serialized to RSS 2.0.</span></span>  
  
 [!code-xml[SyndicationLink#3](~/samples/snippets/xml/VS_Snippets_CFX/syndicationlink/XML/rss.xml#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParseAttribute">
      <MemberSignature Language="C#" Value="protected internal virtual bool TryParseAttribute (string name, string ns, string value, string version);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool TryParseAttribute(string name, string ns, string value, string version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationLink.TryParseAttribute(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function TryParseAttribute (name As String, ns As String, value As String, version As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool TryParseAttribute(System::String ^ name, System::String ^ ns, System::String ^ value, System::String ^ version);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="version" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="94a75-213">O nome do elemento.</span><span class="sxs-lookup"><span data-stu-id="94a75-213">The name of the element.</span></span></param>
        <param name="ns"><span data-ttu-id="94a75-214">O namespace do elemento.</span><span class="sxs-lookup"><span data-stu-id="94a75-214">The namespace of the element.</span></span></param>
        <param name="value"><span data-ttu-id="94a75-215">O atributo a ser analisado.</span><span class="sxs-lookup"><span data-stu-id="94a75-215">The attribute to parse.</span></span></param>
        <param name="version"><span data-ttu-id="94a75-216">A versão de sindicalização a ser usada durante a análise.</span><span class="sxs-lookup"><span data-stu-id="94a75-216">The syndication version to use when parsing.</span></span></param>
        <summary><span data-ttu-id="94a75-217">Tenta analisar uma extensão de atributo.</span><span class="sxs-lookup"><span data-stu-id="94a75-217">Attempts to parse an attribute extension.</span></span></summary>
        <returns><span data-ttu-id="94a75-218">Um valor que especifica se a extensão de atributo foi analisada com êxito.</span><span class="sxs-lookup"><span data-stu-id="94a75-218">A value that specifies whether the attribute extension was parsed successfully.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94a75-219">Extensões de atributo são os atributos personalizados que não são definidos pelas especificações Atom 1.0 ou RSS 2.0.</span><span class="sxs-lookup"><span data-stu-id="94a75-219">Attribute extensions are custom attributes that are not defined by the Atom 1.0 or RSS 2.0 specifications.</span></span> <span data-ttu-id="94a75-220">Elas são serializadas como um atributo do `<link`> elemento.</span><span class="sxs-lookup"><span data-stu-id="94a75-220">They are serialized as an attribute of the `<link`> element.</span></span> <span data-ttu-id="94a75-221">Esse método é um ponto de extensão que permite que você manipule a desserialização de uma extensão de atributo personalizado.</span><span class="sxs-lookup"><span data-stu-id="94a75-221">This method is an extension point that allows you to handle the deserialization of a custom attribute extension.</span></span> <span data-ttu-id="94a75-222">Para fazer isso, você deve derivar uma classe de <xref:System.ServiceModel.Syndication.SyndicationLink> e substitua esse método.</span><span class="sxs-lookup"><span data-stu-id="94a75-222">To do this, you must derive a class from <xref:System.ServiceModel.Syndication.SyndicationLink> and override this method.</span></span> <span data-ttu-id="94a75-223">Este método é chamado para todas as extensões de atributo não reconhecido.</span><span class="sxs-lookup"><span data-stu-id="94a75-223">This method is called for all unrecognized attribute extensions.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="94a75-224">XML inválido encontrado durante a leitura.</span><span class="sxs-lookup"><span data-stu-id="94a75-224">Invalid XML encountered during read.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryParseElement">
      <MemberSignature Language="C#" Value="protected internal virtual bool TryParseElement (System.Xml.XmlReader reader, string version);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool TryParseElement(class System.Xml.XmlReader reader, string version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationLink.TryParseElement(System.Xml.XmlReader,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function TryParseElement (reader As XmlReader, version As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool TryParseElement(System::Xml::XmlReader ^ reader, System::String ^ version);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="version" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="94a75-225">O <see cref="T:System.Xml.XmlReader" /> para leitura.</span><span class="sxs-lookup"><span data-stu-id="94a75-225">The <see cref="T:System.Xml.XmlReader" /> to read from.</span></span></param>
        <param name="version"><span data-ttu-id="94a75-226">A versão de sindicalização a ser usada durante a análise.</span><span class="sxs-lookup"><span data-stu-id="94a75-226">The syndication version to use while parsing.</span></span></param>
        <summary><span data-ttu-id="94a75-227">Tenta analisar uma extensão de elemento.</span><span class="sxs-lookup"><span data-stu-id="94a75-227">Attempts to parse an element extension.</span></span></summary>
        <returns><span data-ttu-id="94a75-228">Um valor que especifica se a extensão de elemento foi analisada com êxito.</span><span class="sxs-lookup"><span data-stu-id="94a75-228">A value that specifies whether the element extension was parsed successfully.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94a75-229">Extensões de elemento são os elementos XML válidos que não são especificados nas especificações do Atom 1.0 ou o RSS 2.0.</span><span class="sxs-lookup"><span data-stu-id="94a75-229">Element extensions are valid XML elements that are not specified in either the Atom 1.0 or RSS 2.0 specifications.</span></span> <span data-ttu-id="94a75-230">Você pode adicionar qualquer elemento XML válido como uma extensão, desde que o namespace é diferente do namespace delimitador.</span><span class="sxs-lookup"><span data-stu-id="94a75-230">You can add any valid XML element as an extension, provided its namespace is different from the enclosing namespace.</span></span> <span data-ttu-id="94a75-231">Esse método é um ponto de extensão que permite que você manipule a desserialização de uma extensão de elemento personalizado.</span><span class="sxs-lookup"><span data-stu-id="94a75-231">This method is an extension point that allows you to handle the deserialization of a custom element extension.</span></span> <span data-ttu-id="94a75-232">Para fazer isso, você deve derivar uma classe de <xref:System.ServiceModel.Syndication.SyndicationLink> e substitua esse método.</span><span class="sxs-lookup"><span data-stu-id="94a75-232">To do this, you must derive a class from <xref:System.ServiceModel.Syndication.SyndicationLink> and override this method.</span></span> <span data-ttu-id="94a75-233">Este método é chamado para todas as extensões de elemento não reconhecido.</span><span class="sxs-lookup"><span data-stu-id="94a75-233">This method is called for all unrecognized element extensions.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="94a75-234">XML inválido encontrado durante a leitura.</span><span class="sxs-lookup"><span data-stu-id="94a75-234">Invalid XML encountered during read.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Uri">
      <MemberSignature Language="C#" Value="public Uri Uri { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Uri" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationLink.Uri" />
      <MemberSignature Language="VB.NET" Value="Public Property Uri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Uri { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="94a75-235">Obtém e define o URI do recurso vinculado.</span><span class="sxs-lookup"><span data-stu-id="94a75-235">Gets and sets the URI for the linked resource.</span></span></summary>
        <value><span data-ttu-id="94a75-236">Um <see cref="T:System.Uri" /> instância que contém o URI para o recurso vinculado.</span><span class="sxs-lookup"><span data-stu-id="94a75-236">A <see cref="T:System.Uri" /> instance that contains the URI for the linked resource.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94a75-237">Quando serializado Atom 1.0 esse valor é escrito como o `href` atributo o `<link>` elemento.</span><span class="sxs-lookup"><span data-stu-id="94a75-237">When serialized to Atom 1.0 this value is written out as the `href` attribute in the `<link>` element.</span></span>  
  
 <span data-ttu-id="94a75-238">Quando serializado para RSS 2.0, esse valor é escrito como o `href` atributo o `<a10:link>` elemento.</span><span class="sxs-lookup"><span data-stu-id="94a75-238">When serialized to RSS 2.0, this value is written out as the `href` attribute in the `<a10:link>` element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="94a75-239">O código a seguir mostra como definir o URI de um link de distribuição.</span><span class="sxs-lookup"><span data-stu-id="94a75-239">The following code shows how to set the URI of a syndication link.</span></span>  
  
  
  
 <span data-ttu-id="94a75-240">O XML a seguir mostra como o <xref:System.ServiceModel.Syndication.SyndicationLink.Uri%2A> propriedade é serializada como Atom 1.0.</span><span class="sxs-lookup"><span data-stu-id="94a75-240">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationLink.Uri%2A> property is serialized to Atom 1.0.</span></span>  
  
 [!code-xml[SyndicationLink#2](~/samples/snippets/xml/VS_Snippets_CFX/syndicationlink/XML/atom.xml#2)]  
  
 <span data-ttu-id="94a75-241">O XML a seguir mostra como o <xref:System.ServiceModel.Syndication.SyndicationLink.Uri%2A> propriedade é serializada como RSS 2.0.</span><span class="sxs-lookup"><span data-stu-id="94a75-241">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationLink.Uri%2A> property is serialized to RSS 2.0.</span></span>  
  
 [!code-xml[SyndicationLink#3](~/samples/snippets/xml/VS_Snippets_CFX/syndicationlink/XML/rss.xml#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAttributeExtensions">
      <MemberSignature Language="C#" Value="protected internal virtual void WriteAttributeExtensions (System.Xml.XmlWriter writer, string version);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void WriteAttributeExtensions(class System.Xml.XmlWriter writer, string version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationLink.WriteAttributeExtensions(System.Xml.XmlWriter,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub WriteAttributeExtensions (writer As XmlWriter, version As String)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void WriteAttributeExtensions(System::Xml::XmlWriter ^ writer, System::String ^ version);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="version" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="94a75-242">O <see cref="T:System.Xml.XmlReader" /> no qual ocorrerá a gravação.</span><span class="sxs-lookup"><span data-stu-id="94a75-242">The <see cref="T:System.Xml.XmlReader" /> to write to.</span></span></param>
        <param name="version"><span data-ttu-id="94a75-243">A versão de sindicalização a ser usada durante a gravação.</span><span class="sxs-lookup"><span data-stu-id="94a75-243">The syndication version to use while writing.</span></span></param>
        <summary><span data-ttu-id="94a75-244">Grava as extensões de atributo no <see cref="T:System.Xml.XmlWriter" /> especificado usando a versão de sindicalização especificada.</span><span class="sxs-lookup"><span data-stu-id="94a75-244">Writes the attribute extensions to the specified <see cref="T:System.Xml.XmlWriter" /> using the specified syndication version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94a75-245">Extensões de atributo são os atributos personalizados que não são definidos pelas especificações Atom 1.0 ou RSS 2.0.</span><span class="sxs-lookup"><span data-stu-id="94a75-245">Attribute extensions are custom attributes that are not defined by the Atom 1.0 or RSS 2.0 specifications.</span></span> <span data-ttu-id="94a75-246">Elas são serializadas como um atributo do `<link>` elemento.</span><span class="sxs-lookup"><span data-stu-id="94a75-246">They are serialized as an attribute of the `<link>` element.</span></span> <span data-ttu-id="94a75-247">Esse método é um ponto de extensão que permite que você manipule a serialização de extensões do atributo personalizado.</span><span class="sxs-lookup"><span data-stu-id="94a75-247">This method is an extension point that allows you to handle the serialization of custom attribute extensions.</span></span> <span data-ttu-id="94a75-248">Para fazer isso, você deve derivar uma classe de <xref:System.ServiceModel.Syndication.SyndicationLink> e substitua esse método.</span><span class="sxs-lookup"><span data-stu-id="94a75-248">To do this, you must derive a class from <xref:System.ServiceModel.Syndication.SyndicationLink> and override this method.</span></span> <span data-ttu-id="94a75-249">Este método é chamado para todas as extensões de atributo não reconhecido.</span><span class="sxs-lookup"><span data-stu-id="94a75-249">This method is called for all unrecognized attribute extensions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteElementExtensions">
      <MemberSignature Language="C#" Value="protected internal virtual void WriteElementExtensions (System.Xml.XmlWriter writer, string version);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void WriteElementExtensions(class System.Xml.XmlWriter writer, string version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationLink.WriteElementExtensions(System.Xml.XmlWriter,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub WriteElementExtensions (writer As XmlWriter, version As String)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void WriteElementExtensions(System::Xml::XmlWriter ^ writer, System::String ^ version);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="version" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="94a75-250">O <see cref="T:System.Xml.XmlReader" /> no qual ocorrerá a gravação.</span><span class="sxs-lookup"><span data-stu-id="94a75-250">The <see cref="T:System.Xml.XmlReader" /> to write to.</span></span></param>
        <param name="version"><span data-ttu-id="94a75-251">A versão de sindicalização a ser usada durante a gravação.</span><span class="sxs-lookup"><span data-stu-id="94a75-251">The syndication version to use while writing.</span></span></param>
        <summary><span data-ttu-id="94a75-252">Grava as extensões de elemento no <see cref="T:System.Xml.XmlWriter" /> especificado usando a versão de sindicalização especificada.</span><span class="sxs-lookup"><span data-stu-id="94a75-252">Writes the element extensions to the specified <see cref="T:System.Xml.XmlWriter" /> using the specified syndication version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94a75-253">Extensões de elemento são os elementos XML válidos que não são especificados nas especificações do Atom 1.0 ou o RSS 2.0.</span><span class="sxs-lookup"><span data-stu-id="94a75-253">Element extensions are valid XML elements that are not specified in either the Atom 1.0 or RSS 2.0 specifications.</span></span> <span data-ttu-id="94a75-254">Você pode adicionar qualquer elemento XML válido como uma extensão, desde que o namespace é diferente do namespace delimitador.</span><span class="sxs-lookup"><span data-stu-id="94a75-254">You can add any valid XML element as an extension, provided its namespace is different from the enclosing namespace.</span></span> <span data-ttu-id="94a75-255">Esse método é um ponto de extensão que permite que você manipule a serialização de extensões de elemento personalizado.</span><span class="sxs-lookup"><span data-stu-id="94a75-255">This method is an extension point that allows you to handle the serialization of custom element extensions.</span></span> <span data-ttu-id="94a75-256">Para fazer isso, você deve derivar uma classe de <xref:System.ServiceModel.Syndication.SyndicationLink> e substitua esse método.</span><span class="sxs-lookup"><span data-stu-id="94a75-256">To do this, you must derive a class from <xref:System.ServiceModel.Syndication.SyndicationLink> and override this method.</span></span> <span data-ttu-id="94a75-257">Este método é chamado para todas as extensões de elemento não reconhecido.</span><span class="sxs-lookup"><span data-stu-id="94a75-257">This method is called for all unrecognized element extensions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>