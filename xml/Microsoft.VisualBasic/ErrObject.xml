<Type Name="ErrObject" FullName="Microsoft.VisualBasic.ErrObject">
  <TypeSignature Language="C#" Value="public sealed class ErrObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ErrObject extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.ErrObject" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ErrObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class ErrObject sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="d6cf2-101">O módulo <see langword="ErrObject" /> contém propriedades e procedimentos usados para identificar e manipular erros no tempo de execução usando o objeto <see langword="Err" />.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-101">The <see langword="ErrObject" /> module contains properties and procedures used to identify and handle run-time errors using the <see langword="Err" /> object.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6cf2-102">O `ErrObject` módulo oferece suporte a `Err` objeto.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-102">The `ErrObject` module supports the `Err` object.</span></span> <span data-ttu-id="d6cf2-103">Para obter mais informações, consulte <xref:Microsoft.VisualBasic.Information.Err%2A>.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-103">For more information, see <xref:Microsoft.VisualBasic.Information.Err%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d6cf2-104">Este exemplo usa as propriedades do `Err` objeto na construção de uma caixa de diálogo de mensagem de erro.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-104">This example uses the properties of the `Err` object in constructing an error-message dialog box.</span></span> <span data-ttu-id="d6cf2-105">Observe o que acontece quando você usa o `Clear` método primeiro: quando você gera um erro do Visual Basic com o `Raise` método, valores padrão do Visual Basic tornam-se as propriedades do `Err` objeto.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-105">Notice what happens when you use the `Clear` method first: When you then generate a Visual Basic error with the `Raise` method, Visual Basic's default values become the properties of the `Err` object.</span></span>  
  
```  
Dim Msg As String  
' If an error occurs, construct an error message.  
On Error Resume Next   ' Defer error handling.  
Err.Clear  
Err.Raise(6)   ' Generate an "Overflow" error.  
' Check for error, then show message.  
If Err.Number <> 0 Then  
    Msg = "Error # " & Str(Err.Number) & " was generated by " _  
        & Err.Source & ControlChars.CrLf & Err.Description  
    MsgBox(Msg, MsgBoxStyle.Information, "Error")  
End If  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
  </Docs>
  <Members>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ErrObject.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d6cf2-106">Limpa todas as configurações de propriedade do objeto <see langword="Err" />.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-106">Clears all property settings of the <see langword="Err" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6cf2-107">Use `Clear` para limpar explicitamente o `Err` objeto depois que um erro foi tratado, como quando você usa adiado tratamento de erros com `On Error Resume Next`.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-107">Use `Clear` to explicitly clear the `Err` object after an error has been handled, such as when you use deferred error handling with `On Error Resume Next`.</span></span> <span data-ttu-id="d6cf2-108">O `Clear` método é chamado automaticamente sempre que qualquer uma das instruções a seguir executa:</span><span class="sxs-lookup"><span data-stu-id="d6cf2-108">The `Clear` method is called automatically whenever any of the following statements executes:</span></span>  
  
-   <span data-ttu-id="d6cf2-109">Qualquer tipo de `Resume` instrução</span><span class="sxs-lookup"><span data-stu-id="d6cf2-109">Any type of `Resume` statement</span></span>  
  
-   <span data-ttu-id="d6cf2-110">`Exit Sub`, `Exit Function` ou `Exit Property`</span><span class="sxs-lookup"><span data-stu-id="d6cf2-110">`Exit Sub`, `Exit Function`, or `Exit Property`</span></span>  
  
-   <span data-ttu-id="d6cf2-111">Qualquer `On Error` instrução</span><span class="sxs-lookup"><span data-stu-id="d6cf2-111">Any `On Error` statement</span></span>  
  
-   <span data-ttu-id="d6cf2-112">Qualquer `Try...Catch...Finally` instrução</span><span class="sxs-lookup"><span data-stu-id="d6cf2-112">Any `Try...Catch...Finally` statement</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="d6cf2-113">O `On Error Resume Next` construção pode ser preferível `On Error GoTo` ao tratar erros gerados durante o acesso a outros objetos.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-113">The `On Error Resume Next` construct may be preferable to `On Error GoTo` when handling errors generated during access to other objects.</span></span> <span data-ttu-id="d6cf2-114">Verificando `Err` após cada interação com um objeto remove ambiguidade sobre qual objeto foi acessado pelo código: pode ter certeza de qual objeto colocado o código de erro no `Err.Number`, bem como de objeto que originalmente gerou o erro (o objeto especificado no `Err.Source`).</span><span class="sxs-lookup"><span data-stu-id="d6cf2-114">Checking `Err` after each interaction with an object removes ambiguity about which object was accessed by the code: You can be sure which object placed the error code in `Err.Number`, as well as which object originally generated the error (the object specified in `Err.Source`).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d6cf2-115">Este exemplo usa o `Err` do objeto `Clear` método para redefinir as propriedades numéricas do `Err` objeto zero e suas propriedades de cadeia de caracteres em cadeias de caracteres de comprimento zero.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-115">This example uses the `Err` object's `Clear` method to reset the numeric properties of the `Err` object to zero and its string properties to zero-length strings.</span></span> <span data-ttu-id="d6cf2-116">Sem a chamada para `Clear`, a segunda chamada para `MsgBox` exibirá a mesma mensagem de erro.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-116">Without the call to `Clear`, the second call to `MsgBox` would display the same error message.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ErrObject.Description" />
      <MemberSignature Language="VB.NET" Value="Public Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Description { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d6cf2-117">Retorna ou define uma expressão <see langword="String" /> que contém uma cadeia de caracteres descritiva associada a um erro.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-117">Returns or sets a <see langword="String" /> expression containing a descriptive string associated with an error.</span></span> <span data-ttu-id="d6cf2-118">Leitura/gravação.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-118">Read/write.</span></span></summary>
        <value><span data-ttu-id="d6cf2-119">Retorna ou define uma expressão <see langword="String" /> que contém uma cadeia de caracteres descritiva associada a um erro.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-119">Returns or sets a <see langword="String" /> expression containing a descriptive string associated with an error.</span></span> <span data-ttu-id="d6cf2-120">Leitura/gravação.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-120">Read/write.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6cf2-121">O `Description` configuração da propriedade consiste em uma breve descrição do erro.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-121">The `Description` property setting consists of a short description of the error.</span></span> <span data-ttu-id="d6cf2-122">Use esta propriedade para alertar o usuário a um erro que você não pode ou não desejar tratar.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-122">Use this property to alert the user to an error that you cannot or do not want to handle.</span></span> <span data-ttu-id="d6cf2-123">Ao gerar um erro definido pelo usuário, atribuir uma breve descrição do seu erro para o `Description` propriedade.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-123">When generating a user-defined error, assign a short description of your error to the `Description` property.</span></span> <span data-ttu-id="d6cf2-124">Se o `Description` propriedade não está preenchida e o valor da <xref:Microsoft.VisualBasic.ErrObject.Number%2A> propriedade corresponde a um erro de tempo de execução do Visual Basic, em seguida, a cadeia de caracteres retornada pelo <xref:Microsoft.VisualBasic.Conversion.ErrorToString%2A> função é definida `Description` propriedade quando o erro é gerado.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-124">If the `Description` property is not filled in, and the value of the <xref:Microsoft.VisualBasic.ErrObject.Number%2A> property corresponds to a Visual Basic run-time error, then the string returned by the <xref:Microsoft.VisualBasic.Conversion.ErrorToString%2A> function is set in the `Description` property when the error is generated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d6cf2-125">Este exemplo atribui uma mensagem definida pelo usuário para o `Description` propriedade o `Err` objeto.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-125">This example assigns a user-defined message to the `Description` property of the `Err` object.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="Erl">
      <MemberSignature Language="C#" Value="public int Erl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Erl" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ErrObject.Erl" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Erl As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Erl { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d6cf2-126">Retorna um inteiro que indica o número de linha da última instrução executada.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-126">Returns an integer indicating the line number of the last executed statement.</span></span> <span data-ttu-id="d6cf2-127">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-127">Read-only.</span></span></summary>
        <value><span data-ttu-id="d6cf2-128">Retorna um inteiro que indica o número de linha da última instrução executada.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-128">Returns an integer indicating the line number of the last executed statement.</span></span> <span data-ttu-id="d6cf2-129">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-129">Read-only.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6cf2-130">Se o Visual Basic encontre sem números de linha, ele retornará 0.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-130">If Visual Basic encounters no line numbers, it returns 0.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d6cf2-131">Este exemplo usa o `Erl` propriedade para indicar o número da linha.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-131">This example uses the `Erl` property to indicate the line number.</span></span>  
  
```  
10:     On Error Resume Next  
20:     Err.Raise(60000)  
' Returns 20.  
30:     MsgBox(Erl())  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="GetException">
      <MemberSignature Language="C#" Value="public Exception GetException ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance class System.Exception GetException() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ErrObject.GetException" />
      <MemberSignature Language="VB.NET" Value="Public Function GetException () As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Exception ^ GetException();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d6cf2-132">Retorna a exceção que representa o erro ocorrido.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-132">Returns the exception representing the error that occurred.</span></span></summary>
        <returns><span data-ttu-id="d6cf2-133">Retorna a exceção que representa o erro ocorrido.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-133">Returns the exception representing the error that occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6cf2-134">O `GetException` função está disponível somente a partir de `Err` classe de objeto.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-134">The `GetException` function is available only from the `Err` object class.</span></span> <span data-ttu-id="d6cf2-135">Ele funciona com o `Exception` propriedade o `Err` objeto para exibir o erro que ocorreu.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-135">It works with the `Exception` property of the `Err` object to display the error that has occurred.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d6cf2-136">O código a seguir exibe a mensagem atribuída a exceção de `Err` objeto:</span><span class="sxs-lookup"><span data-stu-id="d6cf2-136">The following code displays the message assigned to the exception in the `Err` object:</span></span>  
  
 [!code-vb[VbVbalrCatRef#66](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#66)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="HelpContext">
      <MemberSignature Language="C#" Value="public int HelpContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 HelpContext" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ErrObject.HelpContext" />
      <MemberSignature Language="VB.NET" Value="Public Property HelpContext As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int HelpContext { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d6cf2-137">Retorna ou define um <see langword="Integer" /> que contém a ID de contexto para um tópico em um arquivo de Ajuda.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-137">Returns or sets an <see langword="Integer" /> containing the context ID for a topic in a Help file.</span></span> <span data-ttu-id="d6cf2-138">Leitura/gravação.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-138">Read/write.</span></span></summary>
        <value><span data-ttu-id="d6cf2-139">Retorna ou define um <see langword="Integer" /> que contém a ID de contexto para um tópico em um arquivo de Ajuda.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-139">Returns or sets an <see langword="Integer" /> containing the context ID for a topic in a Help file.</span></span> <span data-ttu-id="d6cf2-140">Leitura/gravação.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-140">Read/write.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6cf2-141">O `HelpContext` propriedade é usada para exibir a Ajuda contextual para um aplicativo.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-141">The `HelpContext` property is used to display context-sensitive Help for an application.</span></span> <span data-ttu-id="d6cf2-142">Se for especificado um arquivo de Ajuda em `HelpFile`, o `HelpContext` propriedade é usada para exibir automaticamente o arquivo de Ajuda identificado.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-142">If a Help file is specified in `HelpFile`, the `HelpContext` property is used to automatically display the Help file identified.</span></span> <span data-ttu-id="d6cf2-143">Se o `HelpFile` e `HelpContext` propriedades estão vazias, o valor da <xref:Microsoft.VisualBasic.ErrObject.Number%2A> propriedade é verificada.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-143">If both the `HelpFile` and `HelpContext` properties are empty, the value of the <xref:Microsoft.VisualBasic.ErrObject.Number%2A> property  is checked.</span></span> <span data-ttu-id="d6cf2-144">Se o valor de `Number` propriedade corresponde a um valor de erro de tempo de execução do Visual Basic e, em seguida, a ID do contexto de Ajuda do Visual Basic para o erro é usada.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-144">If the value of the `Number` property corresponds to a Visual Basic run-time error value, then the Visual Basic Help context ID for the error is used.</span></span> <span data-ttu-id="d6cf2-145">Se o valor de `Number` propriedade não corresponde a um erro do Visual Basic, a tela conteúdo para o arquivo de Ajuda do Visual Basic é exibida.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-145">If the value of the `Number` property does not correspond to a Visual Basic error, the contents screen for the Visual Basic Help file is displayed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d6cf2-146">Você deve escrever rotinas em seu aplicativo para manipular erros típicos.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-146">You should write routines in your application to handle typical errors.</span></span> <span data-ttu-id="d6cf2-147">Ao programar com um objeto, você pode usar o arquivo de Ajuda do objeto para melhorar a qualidade do seu tratamento de erros ou para exibir uma mensagem significativa para o usuário se o erro não é recuperável.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-147">When programming with an object, you can use the object's Help file to improve the quality of your error handling, or to display a meaningful message to your user if the error is not recoverable.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d6cf2-148">Este exemplo usa o `HelpContext` propriedade o `Err` objeto para mostrar o tópico de Ajuda do Visual Basic para o `Overflow` erro.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-148">This example uses the `HelpContext` property of the `Err` object to show the Visual Basic Help topic for the `Overflow` error.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="HelpFile">
      <MemberSignature Language="C#" Value="public string HelpFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HelpFile" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ErrObject.HelpFile" />
      <MemberSignature Language="VB.NET" Value="Public Property HelpFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HelpFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d6cf2-149">Retorna ou define uma expressão <see langword="String" /> que contém o caminho totalmente qualificado para um arquivo de Ajuda.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-149">Returns or sets a <see langword="String" /> expression containing the fully qualified path to a Help file.</span></span> <span data-ttu-id="d6cf2-150">Leitura/gravação.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-150">Read/write.</span></span></summary>
        <value><span data-ttu-id="d6cf2-151">Retorna ou define uma expressão <see langword="String" /> que contém o caminho totalmente qualificado para um arquivo de Ajuda.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-151">Returns or sets a <see langword="String" /> expression containing the fully qualified path to a Help file.</span></span> <span data-ttu-id="d6cf2-152">Leitura/gravação.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-152">Read/write.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6cf2-153">Se um arquivo de Ajuda é especificado pelo `HelpFile` propriedade, ele é chamado automaticamente quando o usuário pressiona a tecla de Ajuda (ou a tecla F1) na caixa de diálogo de mensagem de erro.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-153">If a Help file is specified by the `HelpFile` property, it is automatically called when the user presses the Help key (or the F1 key) in the error message dialog box.</span></span> <span data-ttu-id="d6cf2-154">Se o `HelpContext` propriedade contém um contexto válido ID para o arquivo especificado, esse tópico é exibido automaticamente.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-154">If the `HelpContext` property contains a valid context ID for the specified file, that topic is automatically displayed.</span></span> <span data-ttu-id="d6cf2-155">Se nenhum `HelpFile` for especificado, o arquivo de Ajuda do Visual Basic é exibido.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-155">If no `HelpFile` is specified, the Visual Basic Help file is displayed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d6cf2-156">Você deve escrever rotinas em seu aplicativo para manipular erros típicos.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-156">You should write routines in your application to handle typical errors.</span></span> <span data-ttu-id="d6cf2-157">Ao programar com um objeto, você pode usar o arquivo de Ajuda do objeto para melhorar a qualidade do seu tratamento de erros ou para exibir uma mensagem significativa para o usuário se o erro não é recuperável.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-157">When programming with an object, you can use the object's Help file to improve the quality of your error handling, or to display a meaningful message to your user if the error is not recoverable.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d6cf2-158">Este exemplo usa o `HelpFile` propriedade o `Err` objeto para iniciar o sistema de Ajuda.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-158">This example uses the `HelpFile` property of the `Err` object to start the Help system.</span></span> <span data-ttu-id="d6cf2-159">Por padrão, o `HelpFile` propriedade contém o nome do arquivo de Ajuda do Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-159">By default, the `HelpFile` property contains the name of the Visual Basic Help file.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="LastDllError">
      <MemberSignature Language="C#" Value="public int LastDllError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LastDllError" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ErrObject.LastDllError" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LastDllError As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LastDllError { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d6cf2-160">Retorna um código de erro do sistema produzido por uma chamada a uma DLL (biblioteca de vínculo dinâmico).</span><span class="sxs-lookup"><span data-stu-id="d6cf2-160">Returns a system error code produced by a call to a dynamic-link library (DLL).</span></span> <span data-ttu-id="d6cf2-161">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-161">Read-only.</span></span></summary>
        <value><span data-ttu-id="d6cf2-162">Retorna um código de erro do sistema produzido por uma chamada a uma DLL (biblioteca de vínculo dinâmico).</span><span class="sxs-lookup"><span data-stu-id="d6cf2-162">Returns a system error code produced by a call to a dynamic-link library (DLL).</span></span> <span data-ttu-id="d6cf2-163">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-163">Read-only.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6cf2-164">O <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> a propriedade se aplica somente a chamadas DLL feitas do código do Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-164">The <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> property applies only to DLL calls made from Visual Basic code.</span></span> <span data-ttu-id="d6cf2-165">Quando essa chamada é feita, a função chamada normalmente retorna um código indicando êxito ou falha e o <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> propriedade é preenchida.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-165">When such a call is made, the called function usually returns a code indicating success or failure, and the <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> property is filled.</span></span> <span data-ttu-id="d6cf2-166">Verifique a documentação para as funções da DLL determinar os valores de retorno que indicam o êxito ou falha.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-166">Check the documentation for the DLL's functions to determine the return values that indicate success or failure.</span></span> <span data-ttu-id="d6cf2-167">Sempre que o código de falha for retornado, o aplicativo do Visual Basic deve verificar imediatamente a <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-167">Whenever the failure code is returned, the Visual Basic application should immediately check the <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> property.</span></span> <span data-ttu-id="d6cf2-168">Nenhuma exceção é gerada quando o <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> está definida.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-168">No exception is raised when the <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> property is set.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d6cf2-169">O <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> propriedade é protegida por <xref:System.Security.Permissions.SecurityAction.LinkDemand>, que ajuda a impedir que está sendo acessado de código não confiável.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-169">The <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> property is protected by <xref:System.Security.Permissions.SecurityAction.LinkDemand>, which helps prevent it from being accessed from untrusted code.</span></span> <span data-ttu-id="d6cf2-170">No entanto, <xref:System.Security.Permissions.SecurityAction.LinkDemand> requer apenas o chamador imediato para ter <xref:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode%2A> permissão.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-170">However, <xref:System.Security.Permissions.SecurityAction.LinkDemand> requires only the immediate caller to have <xref:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode%2A> permission.</span></span> <span data-ttu-id="d6cf2-171">Se seu código pode ser chamado de código parcialmente confiável, expor o valor de <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> sem validação é um risco de segurança.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-171">If your code can be called from partially trusted code, exposing the value of <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> without validation is a security risk.</span></span>  
>   
>  <span data-ttu-id="d6cf2-172">Para limitações importantes sobre como usar o <xref:System.Security.Permissions.SecurityAction.LinkDemand> membro, consulte [exigem vs. LinkDemand](http://msdn.microsoft.com/library/1ab877f2-70f4-4e0d-8116-943999dfe8f5).</span><span class="sxs-lookup"><span data-stu-id="d6cf2-172">For important limitations about how to use the <xref:System.Security.Permissions.SecurityAction.LinkDemand> member, see [Demand vs. LinkDemand](http://msdn.microsoft.com/library/1ab877f2-70f4-4e0d-8116-943999dfe8f5).</span></span> <span data-ttu-id="d6cf2-173">Para obter mais informações sobre permissões, consulte <xref:System.Security.Permissions.SecurityPermission> e [permissões de acesso do código](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span><span class="sxs-lookup"><span data-stu-id="d6cf2-173">For more information about permissions, see <xref:System.Security.Permissions.SecurityPermission> and [Code Access Permissions](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span></span>  
  
 <span data-ttu-id="d6cf2-174">Observe, para dispositivos inteligentes, que essa propriedade sempre retorna zero.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-174">Note   For smart devices this property always returns zero.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d6cf2-175">O exemplo a seguir mostra como você pode usar o `LastDllError` propriedade depois de chamar uma função da API do Windows.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-175">The following example shows how you can use the `LastDllError` property after calling a function in the Windows API.</span></span> <span data-ttu-id="d6cf2-176">O `PrintWindowCoordinates` procedimento usa um identificador para uma janela e chama o `GetWindowRect` função.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-176">The `PrintWindowCoordinates` procedure takes a handle to a window and calls the `GetWindowRect` function.</span></span> <span data-ttu-id="d6cf2-177">`GetWindowRect` preenche a estrutura de dados com os comprimentos dos lados do retângulo que compõem a janela.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-177">`GetWindowRect` fills the RECT data structure with the lengths of the sides of the rectangle that make up the window.</span></span> <span data-ttu-id="d6cf2-178">Se você passar um identificador inválido, ocorrerá um erro e o número do erro está disponível por meio de `LastDllError` propriedade.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-178">If you pass an invalid handle, an error occurs, and the error number is available through the `LastDllError` property.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#8)]  
[!code-vb[VbVbalrErrorHandling#9](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#9)]  
[!code-vb[VbVbalrErrorHandling#10](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#10)]  
  
 [!code-vb[VbVbalrErrorHandling#11](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="Number">
      <MemberSignature Language="C#" Value="public int Number { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Number" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ErrObject.Number" />
      <MemberSignature Language="VB.NET" Value="Public Property Number As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Number { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d6cf2-179">Retorna ou define um valor numérico que especifica um erro.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-179">Returns or sets a numeric value specifying an error.</span></span> <span data-ttu-id="d6cf2-180">Leitura/gravação.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-180">Read/write.</span></span></summary>
        <value><span data-ttu-id="d6cf2-181">Retorna ou define um valor numérico que especifica um erro.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-181">Returns or sets a numeric value specifying an error.</span></span> <span data-ttu-id="d6cf2-182">Leitura/gravação.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-182">Read/write.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6cf2-183">Todos os `Raise` argumentos exceto `Number` são opcionais.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-183">All of the `Raise` arguments except `Number` are optional.</span></span> <span data-ttu-id="d6cf2-184">Se você omitir argumentos opcionais e as configurações de propriedade do `Err` objeto contém valores que não foram limpos, esses valores servem como os valores para o erro.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-184">If you omit optional arguments, and the property settings of the `Err` object contain values that have not been cleared, those values serve as the values for your error.</span></span>  
  
 <span data-ttu-id="d6cf2-185">Porque o `Err` objeto fornece informações mais sofisticadas do que quando você gera erros com o `Error` instrução, `Raise` é útil para gerar erros ao gravar módulos de classe.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-185">Because the `Err` object gives richer information than when you generate errors with the `Error` statement, `Raise` is useful for generating errors when writing class modules.</span></span> <span data-ttu-id="d6cf2-186">Por exemplo, com o `Raise` método, a origem que gerou o erro pode ser especificada no `Source` propriedade, ajuda online para o erro pode ser referenciada e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-186">For example, with the `Raise` method, the source that generated the error can be specified in the `Source` property, online Help for the error can be referenced, and so on.</span></span>  
  
 <span data-ttu-id="d6cf2-187">Ao retornar um erro definido pelo usuário de um objeto, definir `Err.Number` adicionando o número selecionado como um código de erro para o `VbObjectError` constante.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-187">When returning a user-defined error from an object, set `Err.Number` by adding the number you selected as an error code to the `VbObjectError` constant.</span></span> <span data-ttu-id="d6cf2-188">Por exemplo, você deve usar o código a seguir para retornar o número 1051 como um código de erro:</span><span class="sxs-lookup"><span data-stu-id="d6cf2-188">For example, you use the following code to return the number 1051 as an error code:</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#13](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#13)]  
  
   
  
## Examples  
 <span data-ttu-id="d6cf2-189">Este exemplo ilustra um uso típico de `Number` propriedade em uma rotina de tratamento de erros.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-189">This example illustrates a typical use of the `Number` property in an error-handling routine.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#12](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#12)]  
  
 <span data-ttu-id="d6cf2-190">Este exemplo usa o `Err` do objeto `Raise` método para gerar um erro original dentro de uma função escrito em Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-190">This example uses the `Err` object's `Raise` method to generate an original error within a function written in Visual Basic.</span></span> <span data-ttu-id="d6cf2-191">A função de chamada pode capturar o erro e relatá-lo para o usuário.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-191">The calling function can catch the error and report it to the user.</span></span> <span data-ttu-id="d6cf2-192">Observe que este procedimento `CallingProcedure` contrasta o tipo de informação que você pode derivar de um `Err` objeto com as informações que você pode derivar de um `Exception` objeto.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-192">Notice that procedure `CallingProcedure` contrasts the type of information that you can derive from an `Err` object with the information that you can derive from an `Exception` object.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#14](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d6cf2-193"><paramref name="Number" /> é maior que 65535.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-193"><paramref name="Number" /> is greater than 65535.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="Raise">
      <MemberSignature Language="C#" Value="public void Raise (int Number, object Source = null, object Description = null, object HelpFile = null, object HelpContext = null);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void Raise(int32 Number, object Source, object Description, object HelpFile, object HelpContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Raise (Number As Integer, Optional Source As Object = null, Optional Description As Object = null, Optional HelpFile As Object = null, Optional HelpContext As Object = null)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Int32" />
        <Parameter Name="Source" Type="System.Object" />
        <Parameter Name="Description" Type="System.Object" />
        <Parameter Name="HelpFile" Type="System.Object" />
        <Parameter Name="HelpContext" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Number"><span data-ttu-id="d6cf2-194">Necessário.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-194">Required.</span></span> <span data-ttu-id="d6cf2-195"><see langword="Long" /> inteiro que identifica a natureza do erro.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-195"><see langword="Long" /> integer that identifies the nature of the error.</span></span> <span data-ttu-id="d6cf2-196">Erros do Visual Basic estão no intervalo 0 – 65535; o intervalo de 0 – 512 é reservado para erros do sistema; o intervalo 513 – 65535 está disponível para erros definidos pelo usuário.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-196">Visual Basic errors are in the range 0–65535; the range 0–512 is reserved for system errors; the range 513–65535 is available for user-defined errors.</span></span> <span data-ttu-id="d6cf2-197">Ao definir a propriedade <see langword="Number" /> com seu próprio código de erro em um módulo de classe, você adiciona seu número de código de erro à constante <see langword="vbObjectError" />.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-197">When setting the <see langword="Number" /> property to your own error code in a class module, you add your error code number to the <see langword="vbObjectError" /> constant.</span></span> <span data-ttu-id="d6cf2-198">Por exemplo, para gerar o erro número 513, atribua <c>vbObjectError + 513</c> à propriedade <see langword="Number" />.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-198">For example, to generate the error number 513, assign <c>vbObjectError + 513</c> to the <see langword="Number" /> property.</span></span></param>
        <param name="Source"><span data-ttu-id="d6cf2-199">Opcional.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-199">Optional.</span></span> <span data-ttu-id="d6cf2-200"><see langword="String" /> expressão que nomeia o objeto ou aplicativo que gerou o erro.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-200"><see langword="String" /> expression naming the object or application that generated the error.</span></span> <span data-ttu-id="d6cf2-201">Ao configurar essa propriedade para um objeto, use o formato <c>projeto</c>.<c>classe</c>.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-201">When setting this property for an object, use the form <c>project</c>.<c>class</c>.</span></span> <span data-ttu-id="d6cf2-202">Se <c>Source</c> não for especificado, a ID do processo do projeto atual do Visual Basic será usada.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-202">If <c>Source</c> is not specified, the process ID of the current Visual Basic project is used.</span></span></param>
        <param name="Description"><span data-ttu-id="d6cf2-203">Opcional.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-203">Optional.</span></span> <span data-ttu-id="d6cf2-204"><see langword="String" /> expressão que descreve o erro.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-204"><see langword="String" /> expression describing the error.</span></span> <span data-ttu-id="d6cf2-205">Se não for especificado, o valor na propriedade <see langword="Number" /> será examinado.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-205">If unspecified, the value in the <see langword="Number" /> property is examined.</span></span> <span data-ttu-id="d6cf2-206">Se ele pode ser mapeado para um código de erro em tempo de execução do Visual Basic, a cadeia de caracteres que seria retornada pela função <see langword="Error" /> é usada como a propriedade <see langword="Description" />.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-206">If it can be mapped to a Visual Basic run-time error code, the string that would be returned by the <see langword="Error" /> function is used as the <see langword="Description" /> property.</span></span> <span data-ttu-id="d6cf2-207">Se não houver nenhum erro do Visual Basic correspondente à propriedade <see langword="Number" />, a mensagem "Erro definido pelo aplicativo ou definido pelo objeto" será usada.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-207">If there is no Visual Basic error corresponding to the <see langword="Number" /> property, the "Application-defined or object-defined error" message is used.</span></span></param>
        <param name="HelpFile"><span data-ttu-id="d6cf2-208">Opcional.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-208">Optional.</span></span> <span data-ttu-id="d6cf2-209">O caminho totalmente qualificado para o arquivo de Ajuda no qual se pode encontrar ajuda sobre este erro.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-209">The fully qualified path to the Help file in which help on this error can be found.</span></span> <span data-ttu-id="d6cf2-210">Se não for especificado, o Visual Basic usará a unidade totalmente qualificada, o caminho e o nome do arquivo de Ajuda do Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-210">If unspecified, Visual Basic uses the fully qualified drive, path, and file name of the Visual Basic Help file.</span></span></param>
        <param name="HelpContext"><span data-ttu-id="d6cf2-211">Opcional.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-211">Optional.</span></span> <span data-ttu-id="d6cf2-212">A ID de contexto que identifica um tópico no <c>HelpFile</c> que fornece ajuda para o erro.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-212">The context ID identifying a topic within <c>HelpFile</c> that provides help for the error.</span></span> <span data-ttu-id="d6cf2-213">Se omitida, a ID de contexto do arquivo de Ajuda do Visual Basic para o erro correspondente à propriedade <see langword="Number" /> será usada, se ela existir.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-213">If omitted, the Visual Basic Help-file context ID for the error corresponding to the <see langword="Number" /> property is used, if it exists.</span></span></param>
        <summary><span data-ttu-id="d6cf2-214">Gera um erro em tempo de execução; pode ser usado em vez da instrução <see langword="Error" />.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-214">Generates a run-time error; can be used instead of the <see langword="Error" /> statement.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6cf2-215">Todos os `Raise` argumentos exceto `Number` são opcionais.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-215">All of the `Raise` arguments except `Number` are optional.</span></span> <span data-ttu-id="d6cf2-216">Se você omitir argumentos opcionais e as configurações de propriedade do `Err` objeto contém valores que não foram limpos, esses valores servem como os valores para o erro.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-216">If you omit optional arguments, and the property settings of the `Err` object contain values that have not been cleared, those values serve as the values for your error.</span></span>  
  
 <span data-ttu-id="d6cf2-217">Porque o `Err` objeto fornece informações mais sofisticadas do que quando você gera erros com o `Error` instrução, `Raise` é útil para gerar erros ao gravar módulos de classe.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-217">Because the `Err` object gives richer information than when you generate errors with the `Error` statement, `Raise` is useful for generating errors when writing class modules.</span></span> <span data-ttu-id="d6cf2-218">Por exemplo, com o `Raise` método, a origem que gerou o erro pode ser especificada no `Source` propriedade, ajuda online para o erro pode ser referenciada e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-218">For example, with the `Raise` method, the source that generated the error can be specified in the `Source` property, online Help for the error can be referenced, and so on.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d6cf2-219">Este exemplo usa o `Err` do objeto `Raise` método para gerar um erro dentro de uma função escrito em Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-219">This example uses the `Err` object's `Raise` method to generate an error within a function written in Visual Basic.</span></span> <span data-ttu-id="d6cf2-220">A função de chamada pode capturar o erro e relatá-lo para o usuário com uma caixa de mensagem.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-220">The calling function can catch the error and report it to the user with a message box.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#14](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#14)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public string Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Source" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ErrObject.Source" />
      <MemberSignature Language="VB.NET" Value="Public Property Source As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Source { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d6cf2-221">Retorna ou define uma expressão <see langword="String" /> que especifica o nome do objeto ou aplicativo gerou o erro originalmente.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-221">Returns or sets a <see langword="String" /> expression specifying the name of the object or application that originally generated the error.</span></span> <span data-ttu-id="d6cf2-222">Leitura/gravação.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-222">Read/write.</span></span></summary>
        <value><span data-ttu-id="d6cf2-223">Retorna ou define uma expressão <see langword="String" /> que especifica o nome do objeto ou aplicativo gerou o erro originalmente.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-223">Returns or sets a <see langword="String" /> expression specifying the name of the object or application that originally generated the error.</span></span> <span data-ttu-id="d6cf2-224">Leitura/gravação.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-224">Read/write.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6cf2-225">O `Source` propriedade especifica uma `String` expressão que representa o objeto que gerou o erro; a expressão é normalmente o nome de classe do objeto ou ID de processo.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-225">The `Source` property specifies a `String` expression representing the object that generated the error; the expression is usually the object's class name or process ID.</span></span> <span data-ttu-id="d6cf2-226">Use o `Source` propriedade para fornecer informações quando seu código é incapaz de lidar com um erro gerado em um objeto acessado.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-226">Use the `Source` property to provide information when your code is unable to handle an error generated in an accessed object.</span></span> <span data-ttu-id="d6cf2-227">Por exemplo, se você acessar o Microsoft Excel e gera um `Division by zero` erro, o Microsoft Excel define `Err.Number` seu código de erro para esse erro e conjuntos de `Source` para "Application".</span><span class="sxs-lookup"><span data-stu-id="d6cf2-227">For example, if you access Microsoft Excel and it generates a `Division by zero` error, Microsoft Excel sets `Err.Number` to its error code for that error and sets `Source` to "Excel.Application".</span></span>  
  
 <span data-ttu-id="d6cf2-228">Quando o aplicativo está gerando um erro de código, `Source` é a ID através de programação. do seu aplicativo</span><span class="sxs-lookup"><span data-stu-id="d6cf2-228">When the application is generating an error from code, `Source` is your application's programmatic ID.</span></span> <span data-ttu-id="d6cf2-229">Dentro de uma classe, `Source` deve conter um nome com a forma *projeto*.* classe*.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-229">Within a class, `Source` should contain a name having the form *project*.*class*.</span></span> <span data-ttu-id="d6cf2-230">Quando ocorre um erro inesperado no seu código, o `Source` propriedade é preenchida automaticamente.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-230">When an unexpected error occurs in your code, the `Source` property is automatically filled in.</span></span> <span data-ttu-id="d6cf2-231">Para erros em um módulo, `Source` contém o nome do projeto.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-231">For errors in a module, `Source` contains the project name.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d6cf2-232">Este exemplo demonstra o uso do `Source` propriedade em uma rotina de tratamento de erros comuns.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-232">This example demonstrates the use of the `Source` property in a typical error-handling routine.</span></span> <span data-ttu-id="d6cf2-233">Quando um erro é gerado por `Class1`, a cadeia de caracteres `"Class1"` é atribuído para o `Source` propriedade do `Err` objeto.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-233">When an error is raised from `Class1`, the string `"Class1"` is assigned to the `Source` property of the `Err` object.</span></span> <span data-ttu-id="d6cf2-234">Essa cadeia de caracteres é então exibida na mensagem informativa indicando a origem e o número do erro.</span><span class="sxs-lookup"><span data-stu-id="d6cf2-234">This string is then displayed in an informative message indicating the source and number of the error.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#15](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
  </Members>
</Type>