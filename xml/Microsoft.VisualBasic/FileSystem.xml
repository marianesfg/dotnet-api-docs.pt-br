<Type Name="FileSystem" FullName="Microsoft.VisualBasic.FileSystem">
  <TypeSignature Language="C#" Value="public sealed class FileSystem" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit FileSystem extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.FileSystem" />
  <TypeSignature Language="VB.NET" Value="Public Module FileSystem" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileSystem sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Microsoft.VisualBasic.CompilerServices.StandardModule</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="8a329-101">O módulo <see langword="FileSystem" /> contém os procedimentos usados para executar operações de arquivo, diretório ou pasta e sistema.</span><span class="sxs-lookup"><span data-stu-id="8a329-101">The <see langword="FileSystem" /> module contains the procedures that are used to perform file, directory or folder, and system operations.</span></span> <span data-ttu-id="8a329-102">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S de arquivo do que usando o módulo <see langword="FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-102">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than using the <see langword="FileSystem" /> module.</span></span> <span data-ttu-id="8a329-103">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-103">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a329-104">Este módulo oferece suporte a palavras-chave de linguagem Visual Basic e membros da biblioteca em tempo de execução que acessam arquivos e pastas.</span><span class="sxs-lookup"><span data-stu-id="8a329-104">This module supports the Visual Basic language keywords and run-time library members that access files and folders.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a329-105">Este exemplo usa o `GetAttr` função para determinar os atributos de um arquivo e diretório ou pasta.</span><span class="sxs-lookup"><span data-stu-id="8a329-105">This example uses the `GetAttr` function to determine the attributes of a file and directory or folder.</span></span>  
  
 [!code-vb[VbVbalrCatRef#25](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#25)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ChDir">
      <MemberSignature Language="C#" Value="public static void ChDir (string Path);" />
      <MemberSignature Language="ILAsm" Value=".method public static void ChDir(string Path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.ChDir(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ChDir (Path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ChDir(System::String ^ Path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Path"><span data-ttu-id="8a329-106">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-106">Required.</span></span> <span data-ttu-id="8a329-107">Uma expressão <see langword="String" /> que identifica qual diretório ou pasta se torna o novo diretório ou pasta padrão.</span><span class="sxs-lookup"><span data-stu-id="8a329-107">A <see langword="String" /> expression that identifies which directory or folder becomes the new default directory or folder.</span></span> <span data-ttu-id="8a329-108"><c>Path</c> pode incluir a unidade.</span><span class="sxs-lookup"><span data-stu-id="8a329-108"><c>Path</c> may include the drive.</span></span> <span data-ttu-id="8a329-109">Se nenhuma unidade for especificada, o <see langword="ChDir" /> alterará o diretório ou pasta padrão na unidade atual.</span><span class="sxs-lookup"><span data-stu-id="8a329-109">If no drive is specified, <see langword="ChDir" /> changes the default directory or folder on the current drive.</span></span></param>
        <summary><span data-ttu-id="8a329-110">Altera o diretório ou pasta atual.</span><span class="sxs-lookup"><span data-stu-id="8a329-110">Changes the current directory or folder.</span></span> <span data-ttu-id="8a329-111">O recurso <see langword="My" /> oferece maior produtividade e desempenho em operações de E/S de arquivo do que a função <see langword="ChDir" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-111">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than the <see langword="ChDir" /> function.</span></span> <span data-ttu-id="8a329-112">Para obter mais informações, consulte <see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-112">For more information, see <see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" /> .</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a329-113">O `ChDir` função altera o diretório padrão, mas não a unidade padrão.</span><span class="sxs-lookup"><span data-stu-id="8a329-113">The `ChDir` function changes the default directory, but not the default drive.</span></span> <span data-ttu-id="8a329-114">Por exemplo, se a unidade padrão é C, a instrução a seguir altera o diretório padrão na unidade D, mas C permanece a unidade padrão:</span><span class="sxs-lookup"><span data-stu-id="8a329-114">For example, if the default drive is C, the following statement changes the default directory on drive D, but C remains the default drive:</span></span>  
  
 [!code-vb[VbVbalrCatRef#39](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#39)]  
  
 <span data-ttu-id="8a329-115">Você pode tornar relativo alterações de diretório é, digitando dois pontos, da seguinte maneira:</span><span class="sxs-lookup"><span data-stu-id="8a329-115">You can make relative directory changes is by typing two periods, as follows:</span></span>  
  
 [!code-vb[VbVbalrCatRef#40](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#40)]  
  
> [!IMPORTANT]
>  <span data-ttu-id="8a329-116">O `ChDir` função requer permissão de código não gerenciado, o que pode afetar sua execução em situações de confiança parcial.</span><span class="sxs-lookup"><span data-stu-id="8a329-116">The `ChDir` function requires unmanaged code permission, which may affect its execution in partial-trust situations.</span></span> <span data-ttu-id="8a329-117">Para obter mais informações, consulte <xref:System.Security.Permissions.SecurityPermission> e.</span><span class="sxs-lookup"><span data-stu-id="8a329-117">For more information, see <xref:System.Security.Permissions.SecurityPermission> and .</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a329-118">Este exemplo usa o `ChDir` função para alterar o diretório atual ou a pasta.</span><span class="sxs-lookup"><span data-stu-id="8a329-118">This example uses the `ChDir` function to change the current directory or folder.</span></span>  
  
 [!code-vb[VbVbalrCatRef#41](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#41)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8a329-119"><paramref name="Path" /> está vazio.</span><span class="sxs-lookup"><span data-stu-id="8a329-119"><paramref name="Path" /> is empty.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="8a329-120">Uma unidade inválida foi especificada ou a unidade está indisponível.</span><span class="sxs-lookup"><span data-stu-id="8a329-120">Invalid drive is specified, or drive is unavailable.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.ChDrive" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.CurDir" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Dir" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.MkDir(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.RmDir(System.String)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.FileNotFoundException" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ChDrive">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8a329-121">Altera a unidade atual.</span><span class="sxs-lookup"><span data-stu-id="8a329-121">Changes the current drive.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ChDrive">
      <MemberSignature Language="C#" Value="public static void ChDrive (char Drive);" />
      <MemberSignature Language="ILAsm" Value=".method public static void ChDrive(char Drive) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.ChDrive(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ChDrive (Drive As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ChDrive(char Drive);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Drive" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="Drive"><span data-ttu-id="8a329-122">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-122">Required.</span></span> <span data-ttu-id="8a329-123">Expressão de cadeia de caracteres que especifica uma unidade existente.</span><span class="sxs-lookup"><span data-stu-id="8a329-123">String expression that specifies an existing drive.</span></span> <span data-ttu-id="8a329-124">Se você fornecer uma cadeia de caracteres de tamanho zero (""), a unidade atual não será alterada.</span><span class="sxs-lookup"><span data-stu-id="8a329-124">If you supply a zero-length string (""), the current drive does not change.</span></span> <span data-ttu-id="8a329-125">Se o argumento <c>Unidade</c> for uma cadeia de vários caracteres, <see langword="ChDrive" /> usará somente a primeira letra.</span><span class="sxs-lookup"><span data-stu-id="8a329-125">If the <c>Drive</c> argument is a multiple-character string, <see langword="ChDrive" /> uses only the first letter.</span></span></param>
        <summary><span data-ttu-id="8a329-126">Altera a unidade atual.</span><span class="sxs-lookup"><span data-stu-id="8a329-126">Changes the current drive.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a329-127">O `ChDrive` função requer permissão de código não gerenciado, o que pode afetar sua execução em situações de confiança parcial.</span><span class="sxs-lookup"><span data-stu-id="8a329-127">The `ChDrive` function requires unmanaged-code permission, which may affect its execution in partial-trust situations.</span></span> <span data-ttu-id="8a329-128">Para obter mais informações, consulte <xref:System.Security.Permissions.SecurityPermission> e [permissões de acesso do código](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span><span class="sxs-lookup"><span data-stu-id="8a329-128">For more information, see <xref:System.Security.Permissions.SecurityPermission> and [Code Access Permissions](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a329-129">Este exemplo usa o `ChDrive` função para alterar a unidade atual.</span><span class="sxs-lookup"><span data-stu-id="8a329-129">This example uses the `ChDrive` function to change the current drive.</span></span> <span data-ttu-id="8a329-130">A função gera uma exceção se a unidade não existe.</span><span class="sxs-lookup"><span data-stu-id="8a329-130">The function throws an exception if the drive does not exist.</span></span>  
  
 [!code-vb[VbVbalrCatRef#32](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#32)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="8a329-131">Uma unidade inválida foi especificada ou a unidade está indisponível.</span><span class="sxs-lookup"><span data-stu-id="8a329-131">Invalid drive is specified, or drive is unavailable.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.ChDir(System.String)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.CurDir" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Dir" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.MkDir(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.RmDir(System.String)" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="ChDrive">
      <MemberSignature Language="C#" Value="public static void ChDrive (string Drive);" />
      <MemberSignature Language="ILAsm" Value=".method public static void ChDrive(string Drive) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.ChDrive(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ChDrive (Drive As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ChDrive(System::String ^ Drive);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Drive" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Drive"><span data-ttu-id="8a329-132">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-132">Required.</span></span> <span data-ttu-id="8a329-133">Expressão de cadeia de caracteres que especifica uma unidade existente.</span><span class="sxs-lookup"><span data-stu-id="8a329-133">String expression that specifies an existing drive.</span></span> <span data-ttu-id="8a329-134">Se você fornecer uma cadeia de caracteres de tamanho zero (""), a unidade atual não será alterada.</span><span class="sxs-lookup"><span data-stu-id="8a329-134">If you supply a zero-length string (""), the current drive does not change.</span></span> <span data-ttu-id="8a329-135">Se o argumento <c>Unidade</c> for uma cadeia de vários caracteres, <see langword="ChDrive" /> usará somente a primeira letra.</span><span class="sxs-lookup"><span data-stu-id="8a329-135">If the <c>Drive</c> argument is a multiple-character string, <see langword="ChDrive" /> uses only the first letter.</span></span></param>
        <summary><span data-ttu-id="8a329-136">Altera a unidade atual.</span><span class="sxs-lookup"><span data-stu-id="8a329-136">Changes the current drive.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a329-137">O `ChDrive` função requer permissão de código não gerenciado, o que pode afetar sua execução em situações de confiança parcial.</span><span class="sxs-lookup"><span data-stu-id="8a329-137">The `ChDrive` function requires unmanaged-code permission, which may affect its execution in partial-trust situations.</span></span> <span data-ttu-id="8a329-138">Para obter mais informações, consulte <xref:System.Security.Permissions.SecurityPermission> e [permissões de acesso do código](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span><span class="sxs-lookup"><span data-stu-id="8a329-138">For more information, see <xref:System.Security.Permissions.SecurityPermission> and [Code Access Permissions](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a329-139">Este exemplo usa o `ChDrive` função para alterar a unidade atual.</span><span class="sxs-lookup"><span data-stu-id="8a329-139">This example uses the `ChDrive` function to change the current drive.</span></span> <span data-ttu-id="8a329-140">A função gera uma exceção se a unidade não existe.</span><span class="sxs-lookup"><span data-stu-id="8a329-140">The function throws an exception if the drive does not exist.</span></span>  
  
 [!code-vb[VbVbalrCatRef#32](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#32)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="8a329-141">Uma unidade inválida foi especificada ou a unidade está indisponível.</span><span class="sxs-lookup"><span data-stu-id="8a329-141">Invalid drive is specified, or drive is unavailable.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.ChDir(System.String)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.CurDir" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Dir" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.MkDir(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.RmDir(System.String)" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CurDir">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8a329-142">Retorna uma cadeia de caracteres que representa o caminho atual.</span><span class="sxs-lookup"><span data-stu-id="8a329-142">Returns a string representing the current path.</span></span> <span data-ttu-id="8a329-143">O <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> oferece maior produtividade e desempenho em operações de E/S de arquivo que <see langword="CurDir" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-143">The <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> gives you better productivity and performance in file I/O operations than <see langword="CurDir" />.</span></span> <span data-ttu-id="8a329-144">Para obter mais informações, consulte <see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-144">For more information, see <see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CurDir">
      <MemberSignature Language="C#" Value="public static string CurDir ();" />
      <MemberSignature Language="ILAsm" Value=".method public static string CurDir() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.CurDir" />
      <MemberSignature Language="VB.NET" Value="Public Function CurDir () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ CurDir();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8a329-145">Retorna uma cadeia de caracteres que representa o caminho atual.</span><span class="sxs-lookup"><span data-stu-id="8a329-145">Returns a string representing the current path.</span></span> <span data-ttu-id="8a329-146">O <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> oferece maior produtividade e desempenho em operações de E/S de arquivo que <see langword="CurDir" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-146">The <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> gives you better productivity and performance in file I/O operations than <see langword="CurDir" />.</span></span> <span data-ttu-id="8a329-147">Para obter mais informações, consulte <see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-147">For more information, see <see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" />.</span></span></summary>
        <returns><span data-ttu-id="8a329-148">Uma cadeia de caracteres que representa o caminho atual.</span><span class="sxs-lookup"><span data-stu-id="8a329-148">A string representing the current path.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8a329-149">Este exemplo usa o `CurDir` função para retornar o caminho atual.</span><span class="sxs-lookup"><span data-stu-id="8a329-149">This example uses the `CurDir` function to return the current path.</span></span>  
  
 [!code-vb[VbVbalrCatRef#65](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#65)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.ChDrive" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.ChDir(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.MkDir(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.RmDir(System.String)" />
        <altmember cref="T:System.IO.IOException" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="CurDir">
      <MemberSignature Language="C#" Value="public static string CurDir (char Drive);" />
      <MemberSignature Language="ILAsm" Value=".method public static string CurDir(char Drive) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.CurDir(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function CurDir (Drive As Char) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ CurDir(char Drive);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Drive" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="Drive"><span data-ttu-id="8a329-150">Opcional.</span><span class="sxs-lookup"><span data-stu-id="8a329-150">Optional.</span></span> <span data-ttu-id="8a329-151">A expressão <see langword="Char" /> que especifica uma unidade existente.</span><span class="sxs-lookup"><span data-stu-id="8a329-151"><see langword="Char" /> expression that specifies an existing drive.</span></span> <span data-ttu-id="8a329-152">Se nenhuma unidade for especificada ou, se <c>Unidade</c> for uma cadeia de caracteres de tamanho zero (""), <see langword="CurDir" /> retornará o caminho da unidade atual.</span><span class="sxs-lookup"><span data-stu-id="8a329-152">If no drive is specified, or if <c>Drive</c> is a zero-length string (""), <see langword="CurDir" /> returns the path for the current drive.</span></span></param>
        <summary><span data-ttu-id="8a329-153">Retorna uma cadeia de caracteres que representa o caminho atual.</span><span class="sxs-lookup"><span data-stu-id="8a329-153">Returns a string representing the current path.</span></span> <span data-ttu-id="8a329-154">O <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> oferece maior produtividade e desempenho em operações de E/S de arquivo que <see langword="CurDir" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-154">The <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> gives you better productivity and performance in file I/O operations than <see langword="CurDir" />.</span></span> <span data-ttu-id="8a329-155">Para obter mais informações, consulte <see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-155">For more information, see <see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" />.</span></span></summary>
        <returns><span data-ttu-id="8a329-156">Uma cadeia de caracteres que representa o caminho atual.</span><span class="sxs-lookup"><span data-stu-id="8a329-156">A string representing the current path.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8a329-157">Este exemplo usa o `CurDir` função para retornar o caminho atual.</span><span class="sxs-lookup"><span data-stu-id="8a329-157">This example uses the `CurDir` function to return the current path.</span></span>  
  
 [!code-vb[VbVbalrCatRef#65](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#65)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.ChDrive" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.ChDir(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.MkDir(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.RmDir(System.String)" />
        <altmember cref="T:System.IO.IOException" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dir">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8a329-158">Retorna uma cadeia de caracteres que representa o nome de um arquivo, diretório ou pasta que corresponde a um padrão ou atributo de arquivo especificado ou o rótulo de volume de uma unidade.</span><span class="sxs-lookup"><span data-stu-id="8a329-158">Returns a string representing the name of a file, directory, or folder that matches a specified pattern or file attribute, or the volume label of a drive.</span></span> <span data-ttu-id="8a329-159">O <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> oferece maior produtividade e desempenho em operações de E/S de arquivo do que a função <see langword="Dir" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-159">The <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> gives you better productivity and performance in file I/O operations than the <see langword="Dir" /> function.</span></span> <span data-ttu-id="8a329-160">Consulte <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)" /> para obter mais informações.</span><span class="sxs-lookup"><span data-stu-id="8a329-160">See <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)" /> for more information.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dir">
      <MemberSignature Language="C#" Value="public static string Dir ();" />
      <MemberSignature Language="ILAsm" Value=".method public static string Dir() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Dir" />
      <MemberSignature Language="VB.NET" Value="Public Function Dir () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Dir();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8a329-161">Retorna uma cadeia de caracteres que representa o nome de um arquivo, diretório ou pasta que corresponde a um padrão ou atributo de arquivo especificado ou o rótulo de volume de uma unidade.</span><span class="sxs-lookup"><span data-stu-id="8a329-161">Returns a string representing the name of a file, directory, or folder that matches a specified pattern or file attribute, or the volume label of a drive.</span></span> <span data-ttu-id="8a329-162">O <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> oferece maior produtividade e desempenho em operações de E/S de arquivo do que a função <see langword="Dir" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-162">The <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> gives you better productivity and performance in file I/O operations than the <see langword="Dir" /> function.</span></span> <span data-ttu-id="8a329-163">Consulte <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)" /> para obter mais informações.</span><span class="sxs-lookup"><span data-stu-id="8a329-163">See <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)" /> for more information.</span></span></summary>
        <returns><span data-ttu-id="8a329-164">Uma cadeia de caracteres representando o nome de um arquivo, diretório ou pasta correspondente a um padrão especificado ou atributo de arquivo ou o rótulo de volume de uma unidade.</span><span class="sxs-lookup"><span data-stu-id="8a329-164">A string representing the name of a file, directory, or folder that matches a specified pattern or file attribute, or the volume label of a drive.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a329-165">O `Dir` função oferece suporte ao uso de vários caracteres (`*`) e de caractere único (`?`) curingas para especificar vários arquivos.</span><span class="sxs-lookup"><span data-stu-id="8a329-165">The `Dir` function supports the use of multiple-character (`*`) and single-character (`?`) wildcards to specify multiple files.</span></span>  
  
 <span data-ttu-id="8a329-166">`VbVolume` Retorna o rótulo do volume para a unidade em vez de um nome de arquivo específico.</span><span class="sxs-lookup"><span data-stu-id="8a329-166">`VbVolume` returns the volume label for the drive instead of a specific file name.</span></span>  
  
 <span data-ttu-id="8a329-167">Você deve fornecer um `PathName` na primeira vez que você chamar o `Dir` função.</span><span class="sxs-lookup"><span data-stu-id="8a329-167">You must supply a `PathName` the first time that you call the `Dir` function.</span></span> <span data-ttu-id="8a329-168">Para recuperar o próximo item, você pode fazer chamadas subsequentes para o `Dir` função sem parâmetros.</span><span class="sxs-lookup"><span data-stu-id="8a329-168">To retrieve the next item, you can make subsequent calls to the `Dir` function without parameters.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8a329-169">Para executar corretamente, o `Dir` função requer o <xref:System.Security.Permissions.FileIOPermissionAccess.Read> e <xref:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery> sinalizadores de <xref:System.Security.Permissions.FileIOPermission> para ser concedida ao código em execução.</span><span class="sxs-lookup"><span data-stu-id="8a329-169">To run correctly, the `Dir` function requires the <xref:System.Security.Permissions.FileIOPermissionAccess.Read> and <xref:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery> flags of <xref:System.Security.Permissions.FileIOPermission> to be granted to the executing code.</span></span> <span data-ttu-id="8a329-170">Para obter mais informações, consulte <xref:System.Security.Permissions.FileIOPermission>, <xref:System.Security.SecurityException>, e [permissões de acesso do código](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span><span class="sxs-lookup"><span data-stu-id="8a329-170">For more information, see <xref:System.Security.Permissions.FileIOPermission>, <xref:System.Security.SecurityException>, and [Code Access Permissions](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span></span>  
  
 <span data-ttu-id="8a329-171">O `Attributes` valores de enumeração de argumento são da seguinte maneira:</span><span class="sxs-lookup"><span data-stu-id="8a329-171">The `Attributes` argument enumeration values are as follows:</span></span>  
  
|<span data-ttu-id="8a329-172">Valor</span><span class="sxs-lookup"><span data-stu-id="8a329-172">Value</span></span>|<span data-ttu-id="8a329-173">Constante</span><span class="sxs-lookup"><span data-stu-id="8a329-173">Constant</span></span>|<span data-ttu-id="8a329-174">Descrição</span><span class="sxs-lookup"><span data-stu-id="8a329-174">Description</span></span>|  
|-|-|-|  
|`Normal`|`vbnormal`|<span data-ttu-id="8a329-175">Padrão.</span><span class="sxs-lookup"><span data-stu-id="8a329-175">Default.</span></span> <span data-ttu-id="8a329-176">Especifica arquivos sem atributos.</span><span class="sxs-lookup"><span data-stu-id="8a329-176">Specifies files without attributes.</span></span>|  
|`ReadOnly`|`vbReadOnly`|<span data-ttu-id="8a329-177">Especifica arquivos somente leitura e também arquivos sem atributos.</span><span class="sxs-lookup"><span data-stu-id="8a329-177">Specifies read-only files, and also files without attributes.</span></span>|  
|`Hidden`|`vbHidden`|<span data-ttu-id="8a329-178">Especifica arquivos ocultos e também arquivos sem atributos.</span><span class="sxs-lookup"><span data-stu-id="8a329-178">Specifies hidden files, and also files without attributes.</span></span>|  
|`System`|`vbSystem`|<span data-ttu-id="8a329-179">Especifica os arquivos do sistema e arquivos sem atributos.</span><span class="sxs-lookup"><span data-stu-id="8a329-179">Specifies system files, and also files without attributes.</span></span>|  
|`Volume`|`vbVolume`|<span data-ttu-id="8a329-180">Especifica o rótulo do volume; Se qualquer outro atributo for especificado, `vbVolume` será ignorado.</span><span class="sxs-lookup"><span data-stu-id="8a329-180">Specifies volume label; if any other attribute is specified, `vbVolume` is ignored.</span></span>|  
|`Directory`|`vbDirectory`|<span data-ttu-id="8a329-181">Especifica diretórios ou pastas e arquivos sem atributos.</span><span class="sxs-lookup"><span data-stu-id="8a329-181">Specifies directories or folders, and also files without attributes.</span></span>|  
|`Archive`|`vbArchive`|<span data-ttu-id="8a329-182">O arquivo foi alterado desde o último backup.</span><span class="sxs-lookup"><span data-stu-id="8a329-182">File has changed since last backup.</span></span>|  
|`Alias`|`vbAlias`|<span data-ttu-id="8a329-183">O arquivo tem um nome diferente.</span><span class="sxs-lookup"><span data-stu-id="8a329-183">File has a different name.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="8a329-184">Essas enumerações são especificadas pela linguagem Visual Basic e podem ser usadas em qualquer lugar no seu código em vez dos valores reais.</span><span class="sxs-lookup"><span data-stu-id="8a329-184">These enumerations are specified by the Visual Basic language and can be used anywhere in your code instead of the actual values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a329-185">Este exemplo usa o `Dir` para verificar se existem determinados arquivos e diretórios.</span><span class="sxs-lookup"><span data-stu-id="8a329-185">This example uses the `Dir` function to check if certain files and directories exist.</span></span>  
  
 [!code-vb[VbVbalrCatRef#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.ChDir(System.String)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.ChDrive" />
        <altmember cref="T:Microsoft.VisualBasic.FileAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Dir">
      <MemberSignature Language="C#" Value="public static string Dir (string PathName, Microsoft.VisualBasic.FileAttribute Attributes = Microsoft.VisualBasic.FileAttribute.Normal);" />
      <MemberSignature Language="ILAsm" Value=".method public static string Dir(string PathName, valuetype Microsoft.VisualBasic.FileAttribute Attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Dir(System.String,Microsoft.VisualBasic.FileAttribute)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dir (PathName As String, Optional Attributes As FileAttribute = Microsoft.VisualBasic.FileAttribute.Normal) As String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="PathName" Type="System.String" />
        <Parameter Name="Attributes" Type="Microsoft.VisualBasic.FileAttribute" />
      </Parameters>
      <Docs>
        <param name="PathName"><span data-ttu-id="8a329-186">Opcional.</span><span class="sxs-lookup"><span data-stu-id="8a329-186">Optional.</span></span> <span data-ttu-id="8a329-187">Expressão de <see langword="String" /> que especifica um nome de arquivo, diretório ou pasta ou um rótulo de volume de unidade.</span><span class="sxs-lookup"><span data-stu-id="8a329-187"><see langword="String" /> expression that specifies a file name, directory or folder name, or drive volume label.</span></span> <span data-ttu-id="8a329-188">Uma cadeia de caracteres de tamanho zero (<see langword="&quot;&quot;" />) será retornada se <c>PathName</c> não for encontrado.</span><span class="sxs-lookup"><span data-stu-id="8a329-188">A zero-length string (<see langword="&quot;&quot;" />) is returned if <c>PathName</c> is not found.</span></span></param>
        <param name="Attributes"><span data-ttu-id="8a329-189">Opcional.</span><span class="sxs-lookup"><span data-stu-id="8a329-189">Optional.</span></span> <span data-ttu-id="8a329-190">Enumeração ou expressão numérica cujo valor especifica atributos de arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-190">Enumeration or numeric expression whose value specifies file attributes.</span></span> <span data-ttu-id="8a329-191">Se omitido, <see langword="Dir" /> retorna arquivos que correspondem a <c>PathName</c>, mas não têm atributos.</span><span class="sxs-lookup"><span data-stu-id="8a329-191">If omitted, <see langword="Dir" /> returns files that match <c>PathName</c> but have no attributes.</span></span></param>
        <summary><span data-ttu-id="8a329-192">Retorna uma cadeia de caracteres que representa o nome de um arquivo, diretório ou pasta que corresponde a um padrão ou atributo de arquivo especificado ou o rótulo de volume de uma unidade.</span><span class="sxs-lookup"><span data-stu-id="8a329-192">Returns a string representing the name of a file, directory, or folder that matches a specified pattern or file attribute, or the volume label of a drive.</span></span> <span data-ttu-id="8a329-193">O <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> oferece maior produtividade e desempenho em operações de E/S de arquivo do que a função <see langword="Dir" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-193">The <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> gives you better productivity and performance in file I/O operations than the <see langword="Dir" /> function.</span></span> <span data-ttu-id="8a329-194">Consulte <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)" /> para obter mais informações.</span><span class="sxs-lookup"><span data-stu-id="8a329-194">See <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)" /> for more information.</span></span></summary>
        <returns><span data-ttu-id="8a329-195">Uma cadeia de caracteres representando o nome de um arquivo, diretório ou pasta correspondente a um padrão especificado ou atributo de arquivo ou o rótulo de volume de uma unidade.</span><span class="sxs-lookup"><span data-stu-id="8a329-195">A string representing the name of a file, directory, or folder that matches a specified pattern or file attribute, or the volume label of a drive.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a329-196">O `Dir` função oferece suporte ao uso de vários caracteres (`*`) e de caractere único (`?`) curingas para especificar vários arquivos.</span><span class="sxs-lookup"><span data-stu-id="8a329-196">The `Dir` function supports the use of multiple-character (`*`) and single-character (`?`) wildcards to specify multiple files.</span></span>  
  
 <span data-ttu-id="8a329-197">`VbVolume` Retorna o rótulo do volume para a unidade em vez de um nome de arquivo específico.</span><span class="sxs-lookup"><span data-stu-id="8a329-197">`VbVolume` returns the volume label for the drive instead of a specific file name.</span></span>  
  
 <span data-ttu-id="8a329-198">Você deve fornecer um `PathName` na primeira vez que você chamar o `Dir` função.</span><span class="sxs-lookup"><span data-stu-id="8a329-198">You must supply a `PathName` the first time that you call the `Dir` function.</span></span> <span data-ttu-id="8a329-199">Para recuperar o próximo item, você pode fazer chamadas subsequentes para o `Dir` função sem parâmetros.</span><span class="sxs-lookup"><span data-stu-id="8a329-199">To retrieve the next item, you can make subsequent calls to the `Dir` function with no parameters.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8a329-200">Para executar corretamente, o `Dir` função requer o <xref:System.Security.Permissions.FileIOPermissionAccess.Read> e <xref:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery> sinalizadores de <xref:System.Security.Permissions.FileIOPermission> para ser concedida ao código em execução.</span><span class="sxs-lookup"><span data-stu-id="8a329-200">To run correctly, the `Dir` function requires the <xref:System.Security.Permissions.FileIOPermissionAccess.Read> and <xref:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery> flags of <xref:System.Security.Permissions.FileIOPermission> to be granted to the executing code.</span></span> <span data-ttu-id="8a329-201">Para obter mais informações, consulte <xref:System.Security.Permissions.FileIOPermission>, <xref:System.Security.SecurityException>, e [permissões de acesso do código](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span><span class="sxs-lookup"><span data-stu-id="8a329-201">For more information, see <xref:System.Security.Permissions.FileIOPermission>, <xref:System.Security.SecurityException>, and [Code Access Permissions](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span></span>  
  
 <span data-ttu-id="8a329-202">O `Attributes` valores de enumeração de argumento são da seguinte maneira:</span><span class="sxs-lookup"><span data-stu-id="8a329-202">The `Attributes` argument enumeration values are as follows:</span></span>  
  
|<span data-ttu-id="8a329-203">Valor</span><span class="sxs-lookup"><span data-stu-id="8a329-203">Value</span></span>|<span data-ttu-id="8a329-204">Constante</span><span class="sxs-lookup"><span data-stu-id="8a329-204">Constant</span></span>|<span data-ttu-id="8a329-205">Descrição</span><span class="sxs-lookup"><span data-stu-id="8a329-205">Description</span></span>|  
|-|-|-|  
|`Normal`|`vbnormal`|<span data-ttu-id="8a329-206">Padrão.</span><span class="sxs-lookup"><span data-stu-id="8a329-206">Default.</span></span> <span data-ttu-id="8a329-207">Especifica os arquivos que não apresentam atributos.</span><span class="sxs-lookup"><span data-stu-id="8a329-207">Specifies files that have no attributes.</span></span>|  
|`ReadOnly`|`vbReadOnly`|<span data-ttu-id="8a329-208">Especifica arquivos somente leitura, além de arquivos que não apresentam atributos.</span><span class="sxs-lookup"><span data-stu-id="8a329-208">Specifies read-only files, in addition to files that have no attributes.</span></span>|  
|`Hidden`|`vbHidden`|<span data-ttu-id="8a329-209">Especifica arquivos ocultos, além de arquivos que não apresentam atributos.</span><span class="sxs-lookup"><span data-stu-id="8a329-209">Specifies hidden files, in addition to files that have no attributes.</span></span>|  
|`System`|`vbSystem`|<span data-ttu-id="8a329-210">Especifica os arquivos do sistema, além de arquivos que não apresentam atributos.</span><span class="sxs-lookup"><span data-stu-id="8a329-210">Specifies system files, in addition to files that have no attributes.</span></span>|  
|`Volume`|`vbVolume`|<span data-ttu-id="8a329-211">Especifica o rótulo do volume; Se qualquer outro atributo for especificado, `vbVolume` será ignorado.</span><span class="sxs-lookup"><span data-stu-id="8a329-211">Specifies volume label; if any other attribute is specified, `vbVolume` is ignored.</span></span>|  
|`Directory`|`vbDirectory`|<span data-ttu-id="8a329-212">Especifica diretórios ou pastas, além de arquivos que não apresentam atributos.</span><span class="sxs-lookup"><span data-stu-id="8a329-212">Specifies directories or folders, in addition to files that have no attributes.</span></span>|  
|`Archive`|`vbArchive`|<span data-ttu-id="8a329-213">O arquivo foi alterado desde o último backup.</span><span class="sxs-lookup"><span data-stu-id="8a329-213">File has changed since last backup.</span></span>|  
|`Alias`|`vbAlias`|<span data-ttu-id="8a329-214">O arquivo tem um nome diferente.</span><span class="sxs-lookup"><span data-stu-id="8a329-214">File has a different name.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="8a329-215">Essas enumerações são especificadas pela linguagem Visual Basic e podem ser usadas em qualquer lugar no seu código no lugar dos valores reais.</span><span class="sxs-lookup"><span data-stu-id="8a329-215">These enumerations are specified by the Visual Basic language and can be used anywhere in your code in place of the actual values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a329-216">Este exemplo usa o `Dir` para verificar se existem determinados arquivos e diretórios.</span><span class="sxs-lookup"><span data-stu-id="8a329-216">This example uses the `Dir` function to check if certain files and directories exist.</span></span>  
  
 [!code-vb[VbVbalrCatRef#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.ChDir(System.String)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.ChDrive" />
        <altmember cref="T:Microsoft.VisualBasic.FileAttribute" />
      </Docs>
    </Member>
    <Member MemberName="EOF">
      <MemberSignature Language="C#" Value="public static bool EOF (int FileNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool EOF(int32 FileNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.EOF(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function EOF (FileNumber As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool EOF(int FileNumber);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="8a329-217">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-217">Required.</span></span> <span data-ttu-id="8a329-218">Um <see langword="Integer" /> que contém qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="8a329-218">An <see langword="Integer" /> that contains any valid file number.</span></span></param>
        <summary><span data-ttu-id="8a329-219">Retorna um valor booliano <see langword="True" /> quando o final de um arquivo aberto para <see langword="Random" /> ou <see langword="Input" /> sequencial foi atingido.</span><span class="sxs-lookup"><span data-stu-id="8a329-219">Returns a Boolean value <see langword="True" /> when the end of a file opened for <see langword="Random" /> or sequential <see langword="Input" /> has been reached.</span></span></summary>
        <returns><span data-ttu-id="8a329-220">Retorna um valor booliano <see langword="True" /> quando o final de um arquivo aberto para <see langword="Random" /> ou <see langword="Input" /> sequencial foi atingido.</span><span class="sxs-lookup"><span data-stu-id="8a329-220">Returns a Boolean value <see langword="True" /> when the end of a file opened for <see langword="Random" /> or sequential <see langword="Input" /> has been reached.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a329-221">Use `EOF` para evitar o erro gerado pela tentativa de obter entrada passou do final de um arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-221">Use `EOF` to avoid the error generated by attempting to get input past the end of a file.</span></span>  
  
 <span data-ttu-id="8a329-222">O `EOF` função retorna `False` até o final do arquivo foi atingido.</span><span class="sxs-lookup"><span data-stu-id="8a329-222">The `EOF` function returns `False` until the end of the file has been reached.</span></span> <span data-ttu-id="8a329-223">Com arquivos abertos para `Random` ou `Binary` acesso, `EOF` retorna `False` até que a última execução `FileGet` função é não é possível ler um registro inteiro.</span><span class="sxs-lookup"><span data-stu-id="8a329-223">With files opened for `Random` or `Binary` access, `EOF` returns `False` until the last executed `FileGet` function is unable to read a whole record.</span></span>  
  
 <span data-ttu-id="8a329-224">Com arquivos abertos para `Binary` acesso, a tentativa de ler o arquivo usando o `Input` funcionar até `EOF` retorna `True` gera um erro.</span><span class="sxs-lookup"><span data-stu-id="8a329-224">With files opened for `Binary` access, an attempt to read through the file using the `Input` function until `EOF` returns `True` generates an error.</span></span> <span data-ttu-id="8a329-225">Use o `LOF` e `Loc` funções, em vez de `EOF` ao ler arquivos binários com `Input`, ou use `Get` ao usar o `EOF` função.</span><span class="sxs-lookup"><span data-stu-id="8a329-225">Use the `LOF` and `Loc` functions instead of `EOF` when reading binary files with `Input`, or use `Get` when using the `EOF` function.</span></span> <span data-ttu-id="8a329-226">Com arquivos abertos para `Output`, `EOF` sempre retorna `True`.</span><span class="sxs-lookup"><span data-stu-id="8a329-226">With files opened for `Output`, `EOF` always returns `True`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a329-227">Este exemplo usa o `EOF` função para detectar o final de um arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-227">This example uses the `EOF` function to detect the end of a file.</span></span> <span data-ttu-id="8a329-228">Este exemplo supõe que `Testfile` é um arquivo de texto que contém várias linhas de texto.</span><span class="sxs-lookup"><span data-stu-id="8a329-228">This example assumes that `Testfile` is a text file that contains several lines of text.</span></span>  
  
 [!code-vb[VbVbalrCatRef#62](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#62)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="8a329-229">O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="8a329-229">File mode is invalid.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Loc(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.LOF(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FileAttr">
      <MemberSignature Language="C#" Value="public static Microsoft.VisualBasic.OpenMode FileAttr (int FileNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype Microsoft.VisualBasic.OpenMode FileAttr(int32 FileNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileAttr(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function FileAttr (FileNumber As Integer) As OpenMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::VisualBasic::OpenMode FileAttr(int FileNumber);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.OpenMode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="8a329-230">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-230">Required.</span></span> <span data-ttu-id="8a329-231"><see langword="Integer" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-231"><see langword="Integer" />.</span></span> <span data-ttu-id="8a329-232">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="8a329-232">Any valid file number.</span></span></param>
        <summary><span data-ttu-id="8a329-233">Retorna uma enumeração que representa o modo de arquivo para arquivos abertos usando a função <see langword="FileOpen" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-233">Returns an enumeration representing the file mode for files opened using the <see langword="FileOpen" /> function.</span></span> <span data-ttu-id="8a329-234">O <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> oferece maior produtividade e desempenho em operações de E/S de arquivo do que a função <see langword="FileAttr" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-234">The <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> gives you better productivity and performance in file I/O operations than the <see langword="FileAttr" /> function.</span></span> <span data-ttu-id="8a329-235">Consulte <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)" /> para obter mais informações.</span><span class="sxs-lookup"><span data-stu-id="8a329-235">See <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)" /> for more information.</span></span></summary>
        <returns><span data-ttu-id="8a329-236">Os seguintes valores de enumeração indicam o modo de acesso do arquivo:</span><span class="sxs-lookup"><span data-stu-id="8a329-236">The following enumeration values indicate the file access mode:</span></span>  
  
 <span data-ttu-id="8a329-237"><list type="table"><item><term> Valor</span><span class="sxs-lookup"><span data-stu-id="8a329-237"><list type="table"><item><term> Value</span></span>  
  
 <span data-ttu-id="8a329-238"></term><description> Modo</span><span class="sxs-lookup"><span data-stu-id="8a329-238"></term><description> Mode</span></span>  
  
 <span data-ttu-id="8a329-239"></description></item><item><term> 1</span><span class="sxs-lookup"><span data-stu-id="8a329-239"></description></item><item><term> 1</span></span>  
  
 <span data-ttu-id="8a329-240"></term><description><see langword="OpenMode.Input" /></description></item><item><term> 2</span><span class="sxs-lookup"><span data-stu-id="8a329-240"></term><description><see langword="OpenMode.Input" /></description></item><item><term> 2</span></span>  
  
 <span data-ttu-id="8a329-241"></term><description><see langword="OpenMode.Output" /></description></item><item><term> 4</span><span class="sxs-lookup"><span data-stu-id="8a329-241"></term><description><see langword="OpenMode.Output" /></description></item><item><term> 4</span></span>  
  
 <span data-ttu-id="8a329-242"></term><description><see langword="OpenMode.Random" /></description></item><item><term> 8</span><span class="sxs-lookup"><span data-stu-id="8a329-242"></term><description><see langword="OpenMode.Random" /></description></item><item><term> 8</span></span>  
  
 <span data-ttu-id="8a329-243"></term><description><see langword="OpenMode.Append" /></description></item><item><term> 32</span><span class="sxs-lookup"><span data-stu-id="8a329-243"></term><description><see langword="OpenMode.Append" /></description></item><item><term> 32</span></span>  
  
 </term><description><see langword="OpenMode.Binary" /></description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a329-244">Essa função retorna uma enumeração que representa o modo de arquivo para arquivos abertos usando o `FileOpen` função.</span><span class="sxs-lookup"><span data-stu-id="8a329-244">This function returns an enumeration representing the file mode for files opened using the `FileOpen` function.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a329-245">Este exemplo usa o `FileAttr` função para retornar o modo de arquivo de um arquivo aberto.</span><span class="sxs-lookup"><span data-stu-id="8a329-245">This example uses the `FileAttr` function to return the file mode of an open file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#46](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#46)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SetAttr(System.String,Microsoft.VisualBasic.FileAttribute)" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FileClose">
      <MemberSignature Language="C#" Value="public static void FileClose (params int[] FileNumbers);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileClose(int32[] FileNumbers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileClose(System.Int32[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileClose (ParamArray FileNumbers As Integer())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void FileClose(... cli::array &lt;int&gt; ^ FileNumbers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumbers" Type="System.Int32[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="FileNumbers"><span data-ttu-id="8a329-246">Opcional.</span><span class="sxs-lookup"><span data-stu-id="8a329-246">Optional.</span></span> <span data-ttu-id="8a329-247">Matriz de parâmetros de 0 ou mais canais que serão fechados.</span><span class="sxs-lookup"><span data-stu-id="8a329-247">Parameter array of 0 or more channels to be closed.</span></span></param>
        <summary><span data-ttu-id="8a329-248">Conclui a E/S (Entrada/Saída) para um arquivo aberto usando a função <see langword="FileOpen" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-248">Concludes input/output (I/O) to a file opened using the <see langword="FileOpen" /> function.</span></span> <span data-ttu-id="8a329-249"><see langword="My" /> oferece maior produtividade e desempenho em operações de E/S de arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-249"><see langword="My" /> gives you better productivity and performance in file I/O operations.</span></span> <span data-ttu-id="8a329-250">Consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> para obter mais informações.</span><span class="sxs-lookup"><span data-stu-id="8a329-250">See <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> for more information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a329-251">O `FileClose` função é fornecida para compatibilidade com versões anteriores e pode afetar o desempenho.</span><span class="sxs-lookup"><span data-stu-id="8a329-251">The `FileClose` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="8a329-252">Para aplicativos legados não, o `My.Computer.FileSystem` objeto fornece um melhor desempenho.</span><span class="sxs-lookup"><span data-stu-id="8a329-252">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="8a329-253">Para obter mais informações, consulte [como: ler texto de arquivos com um StreamReader](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-text-from-files-with-a-streamreader.md),[como: gravar texto em arquivos com um StreamWriter](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files-with-a-streamwriter.md), e [passo a passo: Manipulando arquivos e diretórios no Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/walkthrough-manipulating-files-and-directories.md).</span><span class="sxs-lookup"><span data-stu-id="8a329-253">For more information, see [How to: Read Text from Files with a StreamReader](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-text-from-files-with-a-streamreader.md),[How to: Write Text to Files with a StreamWriter](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files-with-a-streamwriter.md), and [Walkthrough: Manipulating Files and Directories in Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/walkthrough-manipulating-files-and-directories.md).</span></span>  
  
 <span data-ttu-id="8a329-254">Se você omitir `FileNumbers`, todos os arquivos ativos abertos pelo `FileOpen` função estão fechados.</span><span class="sxs-lookup"><span data-stu-id="8a329-254">If you omit `FileNumbers`, all active files opened by the `FileOpen` function are closed.</span></span>  
  
 <span data-ttu-id="8a329-255">Quando você fechar arquivos que foram abertos para `Output` ou `Append`, o buffer final da saída é gravado no buffer de sistema operacional para esse arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-255">When you close files that were opened for `Output` or `Append`, the final buffer of output is written to the operating system buffer for that file.</span></span> <span data-ttu-id="8a329-256">Todos os buffers espaço associado fechado arquivo seja liberado.</span><span class="sxs-lookup"><span data-stu-id="8a329-256">All buffer space associated with the closed file is released.</span></span>  
  
 <span data-ttu-id="8a329-257">Quando o `FileClose` função é executada, a associação de um arquivo com o arquivo de número termina.</span><span class="sxs-lookup"><span data-stu-id="8a329-257">When the `FileClose` function is executed, the association of a file with its file number ends.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a329-258">Este exemplo usa o `FileClose` função para fechar um arquivo aberto para `Input`.</span><span class="sxs-lookup"><span data-stu-id="8a329-258">This example uses the `FileClose` function to close a file opened for `Input`.</span></span>  
  
 [!code-vb[VbVbalrCatRef#69](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#69)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="8a329-259"><paramref name="FileNumber" /> não existe.</span><span class="sxs-lookup"><span data-stu-id="8a329-259"><paramref name="FileNumber" /> does not exist.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Reset" />
      </Docs>
    </Member>
    <Member MemberName="FileCopy">
      <MemberSignature Language="C#" Value="public static void FileCopy (string Source, string Destination);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileCopy(string Source, string Destination) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileCopy(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileCopy (Source As String, Destination As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void FileCopy(System::String ^ Source, System::String ^ Destination);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Source" Type="System.String" />
        <Parameter Name="Destination" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Source"><span data-ttu-id="8a329-260">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-260">Required.</span></span> <span data-ttu-id="8a329-261">A expressão <see langword="String" /> que especifica o nome do arquivo a ser copiado.</span><span class="sxs-lookup"><span data-stu-id="8a329-261"><see langword="String" /> expression that specifies the name of the file to be copied.</span></span> <span data-ttu-id="8a329-262"><c>Source</c> pode incluir o diretório ou a pasta, e a unidade do arquivo de origem.</span><span class="sxs-lookup"><span data-stu-id="8a329-262"><c>Source</c> may include the directory or folder, and drive, of the source file.</span></span></param>
        <param name="Destination"><span data-ttu-id="8a329-263">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-263">Required.</span></span> <span data-ttu-id="8a329-264">A expressão <see langword="String" /> que especifica o nome do arquivo de destino.</span><span class="sxs-lookup"><span data-stu-id="8a329-264"><see langword="String" /> expression that specifies the destination file name.</span></span> <span data-ttu-id="8a329-265"><c>Destination</c> pode incluir o diretório ou a pasta e a unidade do arquivo de destino.</span><span class="sxs-lookup"><span data-stu-id="8a329-265"><c>Destination</c> may include the directory or folder, and drive, of the destination file.</span></span></param>
        <summary><span data-ttu-id="8a329-266">Copia um arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-266">Copies a file.</span></span> <span data-ttu-id="8a329-267">O <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> oferece maior produtividade e desempenho em operações de E/S de arquivo que <see langword="FileCopy" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-267">The <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> gives you better productivity and performance in file I/O operations than <see langword="FileCopy" />.</span></span> <span data-ttu-id="8a329-268">Consulte <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String)" /> para obter mais informações.</span><span class="sxs-lookup"><span data-stu-id="8a329-268">See <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String)" /> for more information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a329-269">Se você tentar usar o `FileCopy` de função em um arquivo aberto, ocorrerá um erro.</span><span class="sxs-lookup"><span data-stu-id="8a329-269">If you try to use the `FileCopy` function on a currently open file, an error occurs.</span></span>  
  
 <span data-ttu-id="8a329-270">`FileCopy` requer confiança total para trabalhar na unidade local.</span><span class="sxs-lookup"><span data-stu-id="8a329-270">`FileCopy` requires full trust to work on the local drive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a329-271">Este exemplo usa o `FileCopy` função para copiar um arquivo para outro.</span><span class="sxs-lookup"><span data-stu-id="8a329-271">This example uses the `FileCopy` function to copy one file to another.</span></span> <span data-ttu-id="8a329-272">Para fins deste exemplo, suponha que `SrcFile` é um arquivo que contém dados.</span><span class="sxs-lookup"><span data-stu-id="8a329-272">For purposes of this example, assume that `SrcFile` is a file that contains data.</span></span>  
  
 [!code-vb[VbVbalrCatRef#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8a329-273"><paramref name="Source" /> ou <paramref name="Destination" /> é inválido ou não foi especificado.</span><span class="sxs-lookup"><span data-stu-id="8a329-273"><paramref name="Source" /> or <paramref name="Destination" /> is invalid or not specified.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="8a329-274">O arquivo já está aberto.</span><span class="sxs-lookup"><span data-stu-id="8a329-274">File is already open.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="8a329-275">Arquivo inexistente.</span><span class="sxs-lookup"><span data-stu-id="8a329-275">File does not exist.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Kill(System.String)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
        <altmember cref="T:System.IO.FileNotFoundException" />
      </Docs>
    </Member>
    <Member MemberName="FileDateTime">
      <MemberSignature Language="C#" Value="public static DateTime FileDateTime (string PathName);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype System.DateTime FileDateTime(string PathName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileDateTime(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FileDateTime (PathName As String) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime FileDateTime(System::String ^ PathName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="PathName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="PathName"><span data-ttu-id="8a329-276">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-276">Required.</span></span> <span data-ttu-id="8a329-277">Expressão <see langword="String" /> que especifica um nome de arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-277"><see langword="String" /> expression that specifies a file name.</span></span> <span data-ttu-id="8a329-278"><c>PathName</c> pode incluir o diretório ou a pasta, bem como a unidade.</span><span class="sxs-lookup"><span data-stu-id="8a329-278"><c>PathName</c> may include the directory or folder, and the drive.</span></span></param>
        <summary><span data-ttu-id="8a329-279">Retorna um valor <see langword="Date" /> que indica a data e hora em que ocorreu a gravação em um arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-279">Returns a <see langword="Date" /> value that indicates the date and time a file was written to.</span></span> <span data-ttu-id="8a329-280">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FileDateTime" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-280">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileDateTime" />.</span></span> <span data-ttu-id="8a329-281">Para obter mais informações, consulte <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-281">For more information, see <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)" /></span></span></summary>
        <returns>
          <span data-ttu-id="8a329-282">Retorna um valor <see langword="Date" /> que indica a data e hora em que um arquivo foi criado ou modificado pela última vez.</span><span class="sxs-lookup"><span data-stu-id="8a329-282"><see langword="Date" /> value that indicates the date and time a file was created or last modified.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8a329-283">Este exemplo usa o `FileDateTime` função para determinar a data e a hora de um arquivo foi criada ou modificado pela última vez.</span><span class="sxs-lookup"><span data-stu-id="8a329-283">This example uses the `FileDateTime` function to determine the date and time a file was created or last modified.</span></span> <span data-ttu-id="8a329-284">O formato de data e hora exibido é baseado nas configurações de localidade do sistema.</span><span class="sxs-lookup"><span data-stu-id="8a329-284">The format of the date and time displayed is based on the locale settings of the system.</span></span>  
  
 [!code-vb[VbVbalrCatRef#34](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#34)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8a329-285"><paramref name="PathName" /> é inválido ou contém caracteres curinga.</span><span class="sxs-lookup"><span data-stu-id="8a329-285"><paramref name="PathName" /> is invalid or contains wildcards.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="8a329-286">O arquivo de destino não existe.</span><span class="sxs-lookup"><span data-stu-id="8a329-286">Target file does not exist.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileLen(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.FileNotFoundException" />
      </Docs>
    </Member>
    <MemberGroup MemberName="FileGet">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8a329-287">Lê dados de um arquivo aberto de disco em uma variável.</span><span class="sxs-lookup"><span data-stu-id="8a329-287">Reads data from an open disk file into a variable.</span></span> <span data-ttu-id="8a329-288">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FileGet" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-288">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span></span> <span data-ttu-id="8a329-289">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-289">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FileGet">
      <MemberSignature Language="C#" Value="public static void FileGet (int FileNumber, ref bool Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGet(int32 FileNumber, bool&amp; Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Boolean@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGet (FileNumber As Integer, ByRef Value As Boolean, Optional RecordNumber As Long = -1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Boolean&amp;" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="8a329-290">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-290">Required.</span></span> <span data-ttu-id="8a329-291">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="8a329-291">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="8a329-292">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-292">Required.</span></span> <span data-ttu-id="8a329-293">Nome de variável válido no qual os dados são lidos.</span><span class="sxs-lookup"><span data-stu-id="8a329-293">Valid variable name into which data is read.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="8a329-294">Opcional.</span><span class="sxs-lookup"><span data-stu-id="8a329-294">Optional.</span></span> <span data-ttu-id="8a329-295">Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a leitura começa.</span><span class="sxs-lookup"><span data-stu-id="8a329-295">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span></span></param>
        <summary><span data-ttu-id="8a329-296">Lê dados de um arquivo aberto de disco em uma variável.</span><span class="sxs-lookup"><span data-stu-id="8a329-296">Reads data from an open disk file into a variable.</span></span> <span data-ttu-id="8a329-297">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FileGet" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-297">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span></span> <span data-ttu-id="8a329-298">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-298">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /></span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a329-299">`FileGet` só é válido em `Random` e `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="8a329-299">`FileGet` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="8a329-300">Dados lidos com `FileGet` geralmente são gravados em um arquivo com `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="8a329-300">Data read with `FileGet` is usually written to a file with `FilePut`.</span></span>  
  
 <span data-ttu-id="8a329-301">O primeiro registro ou byte em um arquivo está na posição 1, o segundo registro ou byte está na posição 2 e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="8a329-301">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="8a329-302">Se você omitir `RecordNumber`, o próximo registro ou byte após a última `FileGet` ou `FilePut` função (ou apontada pelo último `Seek` função) é lido.</span><span class="sxs-lookup"><span data-stu-id="8a329-302">If you omit `RecordNumber`, the next record or byte following the last `FileGet` or `FilePut` function (or pointed to by the last `Seek` function) is read.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8a329-303">Durante a leitura de arquivos, não faça decisões sobre o conteúdo de um arquivo com base na extensão de nome de arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-303">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="8a329-304">Por exemplo, um arquivo chamado Form1. vb pode não ser um arquivo de origem do Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="8a329-304">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="8a329-305">Modo aleatório</span><span class="sxs-lookup"><span data-stu-id="8a329-305">Random Mode</span></span>  
 <span data-ttu-id="8a329-306">Para arquivos abertos no `Random` modo, as seguintes regras se aplicam:</span><span class="sxs-lookup"><span data-stu-id="8a329-306">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="8a329-307">Se o comprimento dos dados que está sendo lidos é menor do que o comprimento especificado no `RecordLength` cláusula do `FileOpen` função `FileGet` lê registros subsequentes em limites de comprimento de registro.</span><span class="sxs-lookup"><span data-stu-id="8a329-307">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FileGet` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="8a329-308">O espaço entre o final de um registro e o início do próximo registro é preenchido com o conteúdo existente no buffer de arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-308">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="8a329-309">Porque a quantidade de dados não pode ser determinada com certeza, geralmente é recomendável ter o comprimento do registro corresponde ao tamanho dos dados que está sendo lidos.</span><span class="sxs-lookup"><span data-stu-id="8a329-309">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="8a329-310">Por padrão, se a variável que está sendo lida for uma cadeia de caracteres `FileGet` lê um descritor de dois bytes que contém o comprimento da cadeia de caracteres e, em seguida, lê os dados que vão para a variável.</span><span class="sxs-lookup"><span data-stu-id="8a329-310">By default, if the variable being read into is a string, `FileGet` reads a two-byte descriptor that contains the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="8a329-311">Portanto, o comprimento do registro especificado pelo `RecordLength` cláusula do `FileOpen` função deve ser pelo menos dois bytes maior do que o comprimento real da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="8a329-311">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="8a329-312">Visual Basic 6.0 e versões anteriores oferecem suporte a cadeias de caracteres de comprimento fixo; Quando colocado em um arquivo, o descritor de comprimento não é gravado.</span><span class="sxs-lookup"><span data-stu-id="8a329-312">Visual Basic 6.0 and earlier versions support fixed-length strings; when put to a file, the length descriptor is not written.</span></span> <span data-ttu-id="8a329-313">Se você deseja ler uma cadeia de caracteres sem o descritor, deve passar `True` para o `StringIsFixedLength` parâmetro e a cadeia de caracteres lida deve ter o comprimento correto.</span><span class="sxs-lookup"><span data-stu-id="8a329-313">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="8a329-314">Se a variável que está sendo lida for uma matriz, você pode optar por ler um descritor para o tamanho e a dimensão da matriz.</span><span class="sxs-lookup"><span data-stu-id="8a329-314">If the variable being read into is an array, you can choose whether to read a descriptor for the size and dimension of the array.</span></span> <span data-ttu-id="8a329-315">Para gravar o descritor, defina o `ArrayIsDynamic` parâmetro `True`.</span><span class="sxs-lookup"><span data-stu-id="8a329-315">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="8a329-316">Ao ler a matriz, você precisa coincidir com a forma que de matriz foi escrita.</span><span class="sxs-lookup"><span data-stu-id="8a329-316">When reading the array, you have to match the way the array was written.</span></span> <span data-ttu-id="8a329-317">Se ele foi gravado com o descritor, você precisa ler o descritor.</span><span class="sxs-lookup"><span data-stu-id="8a329-317">If it was written with the descriptor, you have to read the descriptor.</span></span> <span data-ttu-id="8a329-318">Se o descritor não for usado, o tamanho e limites da matriz passaram para `FileGet` determinar o que ler.</span><span class="sxs-lookup"><span data-stu-id="8a329-318">If the descriptor is not used, the size and bounds of the array passed into `FileGet` determine what to read.</span></span>  
  
     <span data-ttu-id="8a329-319">O descritor especifica a classificação de matriz, o tamanho e o limite inferior de cada classificação.</span><span class="sxs-lookup"><span data-stu-id="8a329-319">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="8a329-320">Seu comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="8a329-320">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="8a329-321">O comprimento do registro especificado pelo `RecordLength` parâmetro o `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessários para gravar os dados de matriz e o descritor de matriz.</span><span class="sxs-lookup"><span data-stu-id="8a329-321">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="8a329-322">Por exemplo, a seguinte declaração de matriz necessitará de 218 bytes quando a matriz é gravada no disco.</span><span class="sxs-lookup"><span data-stu-id="8a329-322">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#21)]  
  
     <span data-ttu-id="8a329-323">Os 218 bytes são distribuídos da seguinte maneira:</span><span class="sxs-lookup"><span data-stu-id="8a329-323">The 218 bytes are distributed as follows:</span></span>  
  
    -   <span data-ttu-id="8a329-324">18 bytes para o descritor: (2 + 8 \* 2)</span><span class="sxs-lookup"><span data-stu-id="8a329-324">18 bytes for the descriptor: (2 + 8 \* 2)</span></span>  
  
    -   <span data-ttu-id="8a329-325">200 bytes para os dados: (5 * 10 * 4).</span><span class="sxs-lookup"><span data-stu-id="8a329-325">200 bytes for the data: (5 * 10 * 4).</span></span>  
  
-   <span data-ttu-id="8a329-326">Se a variável que está sendo lida for qualquer outro tipo de variável (não uma cadeia de caracteres de comprimento variável ou um objeto), `FileGet` lê apenas os dados da variável.</span><span class="sxs-lookup"><span data-stu-id="8a329-326">If the variable being read into is any other type of variable (not a variable-length string or an object), `FileGet` reads only the variable data.</span></span> <span data-ttu-id="8a329-327">O comprimento do registro especificado pelo `RecordLength` cláusula de `FileOpen` função deve ser maior ou igual ao comprimento dos dados que está sendo lidos.</span><span class="sxs-lookup"><span data-stu-id="8a329-327">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being read.</span></span>  
  
-   <span data-ttu-id="8a329-328">`FileGet` lê os elementos de estruturas como se cada um estava sendo lido individualmente, exceto que não há nenhum preenchimento entre elementos.</span><span class="sxs-lookup"><span data-stu-id="8a329-328">`FileGet` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="8a329-329">No disco, uma matriz dinâmica em um tipo definido pelo usuário (gravado com `FilePut`) é prefixado por um descritor cujo comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="8a329-329">On disk, a dynamic array in a user-defined type (written with `FilePut`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="8a329-330">O comprimento do registro especificado pelo `RecordLength` cláusula de `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessários para ler os elementos individuais.</span><span class="sxs-lookup"><span data-stu-id="8a329-330">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements.</span></span> <span data-ttu-id="8a329-331">Isso inclui qualquer matrizes e seus descritores.</span><span class="sxs-lookup"><span data-stu-id="8a329-331">This includes any arrays and their descriptors.</span></span> <span data-ttu-id="8a329-332">O `VBFixedString` atributo pode ser aplicado a campos de cadeia de caracteres nas estruturas para indicar o tamanho de uma cadeia de caracteres quando gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="8a329-332">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of a string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="8a329-333">Modo binário</span><span class="sxs-lookup"><span data-stu-id="8a329-333">Binary Mode</span></span>  
 <span data-ttu-id="8a329-334">Para arquivos abertos no `Binary` modo, a maioria do `Random` modo regras se aplicam, com algumas exceções.</span><span class="sxs-lookup"><span data-stu-id="8a329-334">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="8a329-335">As seguintes regras para arquivos abertos no `Binary` modo diferem das regras para `Random` modo:</span><span class="sxs-lookup"><span data-stu-id="8a329-335">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="8a329-336">A cláusula `RecordLength` na função de `FileOpen` não está em vigor.</span><span class="sxs-lookup"><span data-stu-id="8a329-336">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="8a329-337">`FileGet` lê todas as variáveis do disco de maneira contígua; ou seja, sem nenhum preenchimento entre registros.</span><span class="sxs-lookup"><span data-stu-id="8a329-337">`FileGet` reads all variables from disk contiguously; that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="8a329-338">Para qualquer matriz que não seja uma matriz em uma estrutura, `FileGet` lê apenas os dados.</span><span class="sxs-lookup"><span data-stu-id="8a329-338">For any array other than an array in a structure, `FileGet` reads only the data.</span></span> <span data-ttu-id="8a329-339">Nenhum descritor é lido.</span><span class="sxs-lookup"><span data-stu-id="8a329-339">No descriptor is read.</span></span>  
  
-   <span data-ttu-id="8a329-340">`FileGet` lê cadeias de caracteres de comprimento variável que não são elementos das estruturas sem esperar o descritor de dois bytes de comprimento.</span><span class="sxs-lookup"><span data-stu-id="8a329-340">`FileGet` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="8a329-341">O número de bytes lidos é igual ao número de caracteres já na cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="8a329-341">The number of bytes read equals the number of characters already in the string.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="8a329-342">Leitura de um arquivo usando o`FileGet` função requer `Read` acessar do <xref:System.Security.Permissions.FileIOPermissionAccess> enumeração.</span><span class="sxs-lookup"><span data-stu-id="8a329-342">Reading from a file by using the`FileGet` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8a329-343"><paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</span><span class="sxs-lookup"><span data-stu-id="8a329-343"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="8a329-344">O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="8a329-344">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="FileGet">
      <MemberSignature Language="C#" Value="public static void FileGet (int FileNumber, ref byte Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGet(int32 FileNumber, unsigned int8&amp; Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Byte@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGet (FileNumber As Integer, ByRef Value As Byte, Optional RecordNumber As Long = -1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Byte&amp;" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="8a329-345">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-345">Required.</span></span> <span data-ttu-id="8a329-346">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="8a329-346">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="8a329-347">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-347">Required.</span></span> <span data-ttu-id="8a329-348">Nome de variável válido no qual os dados são lidos.</span><span class="sxs-lookup"><span data-stu-id="8a329-348">Valid variable name into which data is read.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="8a329-349">Opcional.</span><span class="sxs-lookup"><span data-stu-id="8a329-349">Optional.</span></span> <span data-ttu-id="8a329-350">Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a leitura começa.</span><span class="sxs-lookup"><span data-stu-id="8a329-350">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span></span></param>
        <summary><span data-ttu-id="8a329-351">Lê dados de um arquivo aberto de disco em uma variável.</span><span class="sxs-lookup"><span data-stu-id="8a329-351">Reads data from an open disk file into a variable.</span></span> <span data-ttu-id="8a329-352">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FileGet" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-352">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span></span> <span data-ttu-id="8a329-353">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-353">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a329-354">`FileGet` só é válido em `Random` e `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="8a329-354">`FileGet` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="8a329-355">Dados lidos com `FileGet` geralmente são gravados em um arquivo com `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="8a329-355">Data read with `FileGet` is usually written to a file with `FilePut`.</span></span>  
  
 <span data-ttu-id="8a329-356">O primeiro registro ou byte em um arquivo está na posição 1, o segundo registro ou byte está na posição 2 e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="8a329-356">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="8a329-357">Se você omitir `RecordNumber`, o próximo registro ou byte após a última `FileGet` ou `FilePut` função (ou apontada pelo último `Seek` função) é lido.</span><span class="sxs-lookup"><span data-stu-id="8a329-357">If you omit `RecordNumber`, the next record or byte following the last `FileGet` or `FilePut` function (or pointed to by the last `Seek` function) is read.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8a329-358">Durante a leitura de arquivos, não faça decisões sobre o conteúdo de um arquivo com base na extensão de nome de arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-358">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="8a329-359">Por exemplo, um arquivo chamado Form1. vb pode não ser um arquivo de origem do Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="8a329-359">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="8a329-360">Modo aleatório</span><span class="sxs-lookup"><span data-stu-id="8a329-360">Random Mode</span></span>  
 <span data-ttu-id="8a329-361">Para arquivos abertos no `Random` modo, as seguintes regras se aplicam:</span><span class="sxs-lookup"><span data-stu-id="8a329-361">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="8a329-362">Se o comprimento dos dados que está sendo lidos é menor do que o comprimento especificado no `RecordLength` cláusula do `FileOpen` função `FileGet` lê registros subsequentes em limites de comprimento de registro.</span><span class="sxs-lookup"><span data-stu-id="8a329-362">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FileGet` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="8a329-363">O espaço entre o final de um registro e o início do próximo registro é preenchido com o conteúdo existente no buffer de arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-363">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="8a329-364">Porque a quantidade de dados não pode ser determinada com certeza, geralmente é recomendável ter o comprimento do registro corresponde ao tamanho dos dados que está sendo lidos.</span><span class="sxs-lookup"><span data-stu-id="8a329-364">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="8a329-365">Por padrão, se a variável que está sendo lida for uma cadeia de caracteres `FileGet` lê um descritor de dois bytes que contém o comprimento da cadeia de caracteres e, em seguida, lê os dados que vão para a variável.</span><span class="sxs-lookup"><span data-stu-id="8a329-365">By default, if the variable being read into is a string, `FileGet` reads a two-byte descriptor that contains the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="8a329-366">Portanto, o comprimento do registro especificado pelo `RecordLength` cláusula do `FileOpen` função deve ser pelo menos dois bytes maior do que o comprimento real da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="8a329-366">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="8a329-367">Visual Basic 6.0 e versões anteriores oferecem suporte a cadeias de caracteres de comprimento fixo; Quando colocado em um arquivo, o descritor de comprimento não é gravado.</span><span class="sxs-lookup"><span data-stu-id="8a329-367">Visual Basic 6.0 and earlier versions support fixed-length strings; when put to a file, the length descriptor is not written.</span></span> <span data-ttu-id="8a329-368">Se você deseja ler uma cadeia de caracteres sem o descritor, deve passar `True` para o `StringIsFixedLength` parâmetro e a cadeia de caracteres lida deve ter o comprimento correto.</span><span class="sxs-lookup"><span data-stu-id="8a329-368">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="8a329-369">Se a variável que está sendo lida for uma matriz, você pode optar por ler um descritor para o tamanho e a dimensão da matriz.</span><span class="sxs-lookup"><span data-stu-id="8a329-369">If the variable being read into is an array, you can choose whether to read a descriptor for the size and dimension of the array.</span></span> <span data-ttu-id="8a329-370">Para gravar o descritor, defina o `ArrayIsDynamic` parâmetro `True`.</span><span class="sxs-lookup"><span data-stu-id="8a329-370">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="8a329-371">Ao ler a matriz, você precisa coincidir com a forma que de matriz foi escrita.</span><span class="sxs-lookup"><span data-stu-id="8a329-371">When reading the array, you have to match the way the array was written.</span></span> <span data-ttu-id="8a329-372">Se ele foi gravado com o descritor, você precisa ler o descritor.</span><span class="sxs-lookup"><span data-stu-id="8a329-372">If it was written with the descriptor, you have to read the descriptor.</span></span> <span data-ttu-id="8a329-373">Se o descritor não for usado.</span><span class="sxs-lookup"><span data-stu-id="8a329-373">If the descriptor is not used.</span></span> <span data-ttu-id="8a329-374">Em seguida, o tamanho e limites da matriz passaram para `FileGet` determinar o que ler.</span><span class="sxs-lookup"><span data-stu-id="8a329-374">Then the size and bounds of the array passed into `FileGet` determine what to read.</span></span>  
  
     <span data-ttu-id="8a329-375">O descritor especifica a classificação de matriz, o tamanho e o limite inferior de cada classificação.</span><span class="sxs-lookup"><span data-stu-id="8a329-375">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="8a329-376">Seu comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="8a329-376">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="8a329-377">O comprimento do registro especificado pelo `RecordLength` parâmetro o `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessários para gravar os dados de matriz e o descritor de matriz.</span><span class="sxs-lookup"><span data-stu-id="8a329-377">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="8a329-378">Por exemplo, a seguinte declaração de matriz necessitará de 218 bytes quando a matriz é gravada no disco.</span><span class="sxs-lookup"><span data-stu-id="8a329-378">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#21)]  
  
     <span data-ttu-id="8a329-379">Os 218 bytes são distribuídos da seguinte maneira:</span><span class="sxs-lookup"><span data-stu-id="8a329-379">The 218 bytes are distributed as follows:</span></span>  
  
    -   <span data-ttu-id="8a329-380">18 bytes para o descritor: (2 + 8 \* 2)</span><span class="sxs-lookup"><span data-stu-id="8a329-380">18 bytes for the descriptor: (2 + 8 \* 2)</span></span>  
  
    -   <span data-ttu-id="8a329-381">200 bytes para os dados: (5 * 10 * 4).</span><span class="sxs-lookup"><span data-stu-id="8a329-381">200 bytes for the data: (5 * 10 * 4).</span></span>  
  
-   <span data-ttu-id="8a329-382">Se a variável que está sendo lida for qualquer outro tipo de variável (não uma cadeia de caracteres de comprimento variável ou um objeto), `FileGet` lê apenas os dados da variável.</span><span class="sxs-lookup"><span data-stu-id="8a329-382">If the variable being read into is any other type of variable (not a variable-length string or an object), `FileGet` reads only the variable data.</span></span> <span data-ttu-id="8a329-383">O comprimento do registro especificado pelo `RecordLength` cláusula de `FileOpen` função deve ser maior ou igual ao comprimento dos dados que está sendo lidos.</span><span class="sxs-lookup"><span data-stu-id="8a329-383">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being read.</span></span>  
  
-   <span data-ttu-id="8a329-384">`FileGet` lê os elementos de estruturas como se cada um estava sendo lido individualmente, exceto que não há nenhum preenchimento entre elementos.</span><span class="sxs-lookup"><span data-stu-id="8a329-384">`FileGet` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="8a329-385">No disco, uma matriz dinâmica em um tipo definido pelo usuário (gravado com `FilePut`) é prefixado por um descritor cujo comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="8a329-385">On disk, a dynamic array in a user-defined type (written with `FilePut`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="8a329-386">O comprimento do registro especificado pelo `RecordLength` cláusula de `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessários para ler os elementos individuais.</span><span class="sxs-lookup"><span data-stu-id="8a329-386">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements.</span></span> <span data-ttu-id="8a329-387">Isso inclui qualquer matrizes e seus descritores.</span><span class="sxs-lookup"><span data-stu-id="8a329-387">This includes any arrays and their descriptors.</span></span> <span data-ttu-id="8a329-388">O `VBFixedString` atributo pode ser aplicado a campos de cadeia de caracteres nas estruturas para indicar o tamanho de uma cadeia de caracteres quando gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="8a329-388">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of a string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="8a329-389">Modo binário</span><span class="sxs-lookup"><span data-stu-id="8a329-389">Binary Mode</span></span>  
 <span data-ttu-id="8a329-390">Para arquivos abertos no `Binary` modo, a maioria do `Random` modo regras se aplicam, com algumas exceções.</span><span class="sxs-lookup"><span data-stu-id="8a329-390">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="8a329-391">As seguintes regras para arquivos abertos no `Binary` modo diferem das regras para `Random` modo:</span><span class="sxs-lookup"><span data-stu-id="8a329-391">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="8a329-392">A cláusula `RecordLength` na função de `FileOpen` não está em vigor.</span><span class="sxs-lookup"><span data-stu-id="8a329-392">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="8a329-393">`FileGet` lê todas as variáveis do disco de maneira contígua; ou seja, sem nenhum preenchimento entre registros.</span><span class="sxs-lookup"><span data-stu-id="8a329-393">`FileGet` reads all variables from disk contiguously; that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="8a329-394">Para qualquer matriz que não seja uma matriz em uma estrutura, `FileGet` lê apenas os dados.</span><span class="sxs-lookup"><span data-stu-id="8a329-394">For any array other than an array in a structure, `FileGet` reads only the data.</span></span> <span data-ttu-id="8a329-395">Nenhum descritor é lido.</span><span class="sxs-lookup"><span data-stu-id="8a329-395">No descriptor is read.</span></span>  
  
-   <span data-ttu-id="8a329-396">`FileGet` lê cadeias de caracteres de comprimento variável que não são elementos das estruturas sem esperar o descritor de dois bytes de comprimento.</span><span class="sxs-lookup"><span data-stu-id="8a329-396">`FileGet` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="8a329-397">O número de bytes lidos é igual ao número de caracteres já na cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="8a329-397">The number of bytes read equals the number of characters already in the string.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="8a329-398">Leitura de um arquivo usando o `FileGet` função requer `Read` acessar do <xref:System.Security.Permissions.FileIOPermissionAccess> enumeração.</span><span class="sxs-lookup"><span data-stu-id="8a329-398">Reading from a file by using the `FileGet` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8a329-399"><paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</span><span class="sxs-lookup"><span data-stu-id="8a329-399"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="8a329-400">O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="8a329-400">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="FileGet">
      <MemberSignature Language="C#" Value="public static void FileGet (int FileNumber, ref char Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGet(int32 FileNumber, char&amp; Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Char@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGet (FileNumber As Integer, ByRef Value As Char, Optional RecordNumber As Long = -1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Char&amp;" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="8a329-401">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-401">Required.</span></span> <span data-ttu-id="8a329-402">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="8a329-402">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="8a329-403">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-403">Required.</span></span> <span data-ttu-id="8a329-404">Nome de variável válido no qual os dados são lidos.</span><span class="sxs-lookup"><span data-stu-id="8a329-404">Valid variable name into which data is read.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="8a329-405">Opcional.</span><span class="sxs-lookup"><span data-stu-id="8a329-405">Optional.</span></span> <span data-ttu-id="8a329-406">Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a leitura começa.</span><span class="sxs-lookup"><span data-stu-id="8a329-406">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span></span></param>
        <summary><span data-ttu-id="8a329-407">Lê dados de um arquivo aberto de disco em uma variável.</span><span class="sxs-lookup"><span data-stu-id="8a329-407">Reads data from an open disk file into a variable.</span></span> <span data-ttu-id="8a329-408">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FileGet" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-408">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span></span> <span data-ttu-id="8a329-409">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-409">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a329-410">`FileGet` só é válido em `Random` e `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="8a329-410">`FileGet` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="8a329-411">Dados lidos com `FileGet` geralmente são gravados em um arquivo com `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="8a329-411">Data read with `FileGet` is usually written to a file with `FilePut`.</span></span>  
  
 <span data-ttu-id="8a329-412">O primeiro registro ou byte em um arquivo está na posição 1, o segundo registro ou byte está na posição 2 e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="8a329-412">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="8a329-413">Se você omitir `RecordNumber`, o próximo registro ou byte após a última `FileGet` ou `FilePut` função (ou apontada pelo último `Seek` função) é lido.</span><span class="sxs-lookup"><span data-stu-id="8a329-413">If you omit `RecordNumber`, the next record or byte following the last `FileGet` or `FilePut` function (or pointed to by the last `Seek` function) is read.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8a329-414">Durante a leitura de arquivos, não faça decisões sobre o conteúdo de um arquivo com base na extensão de nome de arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-414">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="8a329-415">Por exemplo, um arquivo chamado Form1. vb pode não ser um arquivo de origem do Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="8a329-415">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="8a329-416">Modo aleatório</span><span class="sxs-lookup"><span data-stu-id="8a329-416">Random Mode</span></span>  
 <span data-ttu-id="8a329-417">Para arquivos abertos no `Random` modo, as seguintes regras se aplicam:</span><span class="sxs-lookup"><span data-stu-id="8a329-417">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="8a329-418">Se o comprimento dos dados que está sendo lidos é menor do que o comprimento especificado no `RecordLength` cláusula do `FileOpen` função `FileGet` lê registros subsequentes em limites de comprimento de registro.</span><span class="sxs-lookup"><span data-stu-id="8a329-418">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FileGet` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="8a329-419">O espaço entre o final de um registro e o início do próximo registro é preenchido com o conteúdo existente no buffer de arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-419">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="8a329-420">Porque a quantidade de dados não pode ser determinada com certeza, geralmente é recomendável ter o comprimento do registro corresponde ao tamanho dos dados que está sendo lidos.</span><span class="sxs-lookup"><span data-stu-id="8a329-420">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="8a329-421">Por padrão, se a variável que está sendo lida for uma cadeia de caracteres `FileGet` lê um descritor de dois bytes que contém o comprimento da cadeia de caracteres e, em seguida, lê os dados que vão para a variável.</span><span class="sxs-lookup"><span data-stu-id="8a329-421">By default, if the variable being read into is a string, `FileGet` reads a two-byte descriptor that contains the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="8a329-422">Portanto, o comprimento do registro especificado pelo `RecordLength` cláusula do `FileOpen` função deve ser pelo menos dois bytes maior do que o comprimento real da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="8a329-422">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="8a329-423">Visual Basic 6.0 e versões anteriores oferecem suporte a cadeias de caracteres de comprimento fixo; Quando colocado em um arquivo, o descritor de comprimento não é gravado.</span><span class="sxs-lookup"><span data-stu-id="8a329-423">Visual Basic 6.0 and earlier versions support fixed-length strings; when put to a file, the length descriptor is not written.</span></span> <span data-ttu-id="8a329-424">Se você deseja ler uma cadeia de caracteres sem o descritor, deve passar `True` para o `StringIsFixedLength` parâmetro e a cadeia de caracteres lida deve ter o comprimento correto.</span><span class="sxs-lookup"><span data-stu-id="8a329-424">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="8a329-425">Se a variável que está sendo lida for uma matriz, você pode optar por ler um descritor para o tamanho e a dimensão da matriz.</span><span class="sxs-lookup"><span data-stu-id="8a329-425">If the variable being read into is an array, you can choose whether to read a descriptor for the size and dimension of the array.</span></span> <span data-ttu-id="8a329-426">Para gravar o descritor, defina o `ArrayIsDynamic` parâmetro `True`.</span><span class="sxs-lookup"><span data-stu-id="8a329-426">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="8a329-427">Ao ler a matriz, você precisa coincidir com a forma que de matriz foi escrita.</span><span class="sxs-lookup"><span data-stu-id="8a329-427">When reading the array, you have to match the way the array was written.</span></span> <span data-ttu-id="8a329-428">Se ele foi gravado com o descritor, você precisa ler o descritor.</span><span class="sxs-lookup"><span data-stu-id="8a329-428">If it was written with the descriptor, you have to read the descriptor.</span></span> <span data-ttu-id="8a329-429">Se o descritor não for usado, o tamanho e limites da matriz passaram para `FileGet` determinar o que ler.</span><span class="sxs-lookup"><span data-stu-id="8a329-429">If the descriptor is not used, the size and bounds of the array passed into `FileGet` determine what to read.</span></span>  
  
     <span data-ttu-id="8a329-430">O descritor especifica a classificação de matriz, o tamanho e o limite inferior de cada classificação.</span><span class="sxs-lookup"><span data-stu-id="8a329-430">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="8a329-431">Seu comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="8a329-431">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="8a329-432">O comprimento do registro especificado pelo `RecordLength` parâmetro o `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessários para gravar os dados de matriz e o descritor de matriz.</span><span class="sxs-lookup"><span data-stu-id="8a329-432">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="8a329-433">Por exemplo, a seguinte declaração de matriz necessitará de 218 bytes quando a matriz é gravada no disco.</span><span class="sxs-lookup"><span data-stu-id="8a329-433">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#21)]  
  
     <span data-ttu-id="8a329-434">Os 218 bytes são distribuídos da seguinte maneira:</span><span class="sxs-lookup"><span data-stu-id="8a329-434">The 218 bytes are distributed as follows:</span></span>  
  
    -   <span data-ttu-id="8a329-435">18 bytes para o descritor: (2 + 8 \* 2)</span><span class="sxs-lookup"><span data-stu-id="8a329-435">18 bytes for the descriptor: (2 + 8 \* 2)</span></span>  
  
    -   <span data-ttu-id="8a329-436">200 bytes para os dados: (5 * 10 * 4).</span><span class="sxs-lookup"><span data-stu-id="8a329-436">200 bytes for the data: (5 * 10 * 4).</span></span>  
  
-   <span data-ttu-id="8a329-437">Se a variável que está sendo lida for qualquer outro tipo de variável (não uma cadeia de caracteres de comprimento variável ou um objeto), `FileGet` lê apenas os dados da variável.</span><span class="sxs-lookup"><span data-stu-id="8a329-437">If the variable being read into is any other type of variable (not a variable-length string or an object), `FileGet` reads only the variable data.</span></span> <span data-ttu-id="8a329-438">O comprimento do registro especificado pelo `RecordLength` cláusula de `FileOpen` função deve ser maior ou igual ao comprimento dos dados que está sendo lidos.</span><span class="sxs-lookup"><span data-stu-id="8a329-438">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being read.</span></span>  
  
-   <span data-ttu-id="8a329-439">`FileGet` lê os elementos de estruturas como se cada um estava sendo lido individualmente, exceto que não há nenhum preenchimento entre elementos.</span><span class="sxs-lookup"><span data-stu-id="8a329-439">`FileGet` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="8a329-440">No disco, uma matriz dinâmica em um tipo definido pelo usuário (gravado com `FilePut`) é prefixado por um descritor cujo comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="8a329-440">On disk, a dynamic array in a user-defined type (written with `FilePut`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="8a329-441">O comprimento do registro especificado pelo `RecordLength` cláusula de `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessários para ler os elementos individuais.</span><span class="sxs-lookup"><span data-stu-id="8a329-441">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements.</span></span> <span data-ttu-id="8a329-442">Isso inclui qualquer matrizes e seus descritores.</span><span class="sxs-lookup"><span data-stu-id="8a329-442">This includes any arrays and their descriptors.</span></span> <span data-ttu-id="8a329-443">O `VBFixedString` atributo pode ser aplicado a campos de cadeia de caracteres nas estruturas para indicar o tamanho de uma cadeia de caracteres quando gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="8a329-443">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of a string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="8a329-444">Modo binário</span><span class="sxs-lookup"><span data-stu-id="8a329-444">Binary Mode</span></span>  
 <span data-ttu-id="8a329-445">Para arquivos abertos no `Binary` modo, a maioria do `Random` modo regras se aplicam, com algumas exceções.</span><span class="sxs-lookup"><span data-stu-id="8a329-445">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="8a329-446">As seguintes regras para arquivos abertos no `Binary` modo diferem das regras para `Random` modo:</span><span class="sxs-lookup"><span data-stu-id="8a329-446">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="8a329-447">A cláusula `RecordLength` na função de `FileOpen` não está em vigor.</span><span class="sxs-lookup"><span data-stu-id="8a329-447">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="8a329-448">`FileGet` lê todas as variáveis do disco de maneira contígua; ou seja, sem nenhum preenchimento entre registros.</span><span class="sxs-lookup"><span data-stu-id="8a329-448">`FileGet` reads all variables from disk contiguously; that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="8a329-449">Para qualquer matriz que não seja uma matriz em uma estrutura, `FileGet` lê apenas os dados.</span><span class="sxs-lookup"><span data-stu-id="8a329-449">For any array other than an array in a structure, `FileGet` reads only the data.</span></span> <span data-ttu-id="8a329-450">Nenhum descritor é lido.</span><span class="sxs-lookup"><span data-stu-id="8a329-450">No descriptor is read.</span></span>  
  
-   <span data-ttu-id="8a329-451">`FileGet` lê cadeias de caracteres de comprimento variável que não são elementos das estruturas sem esperar o descritor de dois bytes de comprimento.</span><span class="sxs-lookup"><span data-stu-id="8a329-451">`FileGet` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="8a329-452">O número de bytes lidos é igual ao número de caracteres já na cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="8a329-452">The number of bytes read equals the number of characters already in the string.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="8a329-453">Leitura de um arquivo usando o `FileGet` função requer `Read` acessar do <xref:System.Security.Permissions.FileIOPermissionAccess> enumeração.</span><span class="sxs-lookup"><span data-stu-id="8a329-453">Reading from a file by using the `FileGet` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8a329-454"><paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</span><span class="sxs-lookup"><span data-stu-id="8a329-454"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="8a329-455">O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="8a329-455">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="FileGet">
      <MemberSignature Language="C#" Value="public static void FileGet (int FileNumber, ref DateTime Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGet(int32 FileNumber, valuetype System.DateTime&amp; Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.DateTime@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGet (FileNumber As Integer, ByRef Value As DateTime, Optional RecordNumber As Long = -1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.DateTime&amp;" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="8a329-456">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-456">Required.</span></span> <span data-ttu-id="8a329-457">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="8a329-457">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="8a329-458">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-458">Required.</span></span> <span data-ttu-id="8a329-459">Nome de variável válido no qual os dados são lidos.</span><span class="sxs-lookup"><span data-stu-id="8a329-459">Valid variable name into which data is read.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="8a329-460">Opcional.</span><span class="sxs-lookup"><span data-stu-id="8a329-460">Optional.</span></span> <span data-ttu-id="8a329-461">Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a leitura começa.</span><span class="sxs-lookup"><span data-stu-id="8a329-461">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span></span></param>
        <summary><span data-ttu-id="8a329-462">Lê dados de um arquivo aberto de disco em uma variável.</span><span class="sxs-lookup"><span data-stu-id="8a329-462">Reads data from an open disk file into a variable.</span></span> <span data-ttu-id="8a329-463">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FileGet" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-463">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span></span> <span data-ttu-id="8a329-464">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-464">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a329-465">`FileGet` só é válido em `Random` e `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="8a329-465">`FileGet` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="8a329-466">Dados lidos com `FileGet` geralmente são gravados em um arquivo com `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="8a329-466">Data read with `FileGet` is usually written to a file with `FilePut`.</span></span>  
  
 <span data-ttu-id="8a329-467">O primeiro registro ou byte em um arquivo está na posição 1, o segundo registro ou byte está na posição 2 e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="8a329-467">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="8a329-468">Se você omitir `RecordNumber`, o próximo registro ou byte após a última `FileGet` ou `FilePut` função (ou apontada pelo último `Seek` função) é lido.</span><span class="sxs-lookup"><span data-stu-id="8a329-468">If you omit `RecordNumber`, the next record or byte following the last `FileGet` or `FilePut` function (or pointed to by the last `Seek` function) is read.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8a329-469">Durante a leitura de arquivos, não faça decisões sobre o conteúdo de um arquivo com base na extensão de nome de arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-469">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="8a329-470">Por exemplo, um arquivo chamado Form1. vb pode não ser um arquivo de origem do Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="8a329-470">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="8a329-471">Modo aleatório</span><span class="sxs-lookup"><span data-stu-id="8a329-471">Random Mode</span></span>  
 <span data-ttu-id="8a329-472">Para arquivos abertos no `Random` modo, as seguintes regras se aplicam:</span><span class="sxs-lookup"><span data-stu-id="8a329-472">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="8a329-473">Se o comprimento dos dados que está sendo lidos é menor do que o comprimento especificado no `RecordLength` cláusula do `FileOpen` função`FileGet` lê registros subsequentes em limites de comprimento de registro.</span><span class="sxs-lookup"><span data-stu-id="8a329-473">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function,`FileGet` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="8a329-474">O espaço entre o final de um registro e o início do próximo registro é preenchido com o conteúdo existente no buffer de arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-474">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="8a329-475">Porque a quantidade de dados não pode ser determinada com certeza, geralmente é recomendável ter o comprimento do registro corresponde ao tamanho dos dados que está sendo lidos.</span><span class="sxs-lookup"><span data-stu-id="8a329-475">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="8a329-476">Por padrão, se a variável que está sendo lida for uma cadeia de caracteres `FileGet` lê um descritor de dois bytes que contém o comprimento da cadeia de caracteres e, em seguida, lê os dados que vão para a variável.</span><span class="sxs-lookup"><span data-stu-id="8a329-476">By default, if the variable being read into is a string, `FileGet` reads a two-byte descriptor that contains the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="8a329-477">Portanto, o comprimento do registro especificado pelo `RecordLength` cláusula do `FileOpen` função deve ser pelo menos dois bytes maior do que o comprimento real da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="8a329-477">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="8a329-478">Visual Basic 6.0 e versões anteriores oferecem suporte a cadeias de caracteres de comprimento fixo; Quando colocado em um arquivo, o descritor de comprimento não é gravado.</span><span class="sxs-lookup"><span data-stu-id="8a329-478">Visual Basic 6.0 and earlier versions support fixed-length strings; when put to a file, the length descriptor is not written.</span></span> <span data-ttu-id="8a329-479">Se você deseja ler uma cadeia de caracteres sem o descritor, deve passar `True` para o `StringIsFixedLength` parâmetro e a cadeia de caracteres lida deve ter o comprimento correto.</span><span class="sxs-lookup"><span data-stu-id="8a329-479">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="8a329-480">Se a variável que está sendo lida for uma matriz, você pode optar por ler um descritor para o tamanho e a dimensão da matriz.</span><span class="sxs-lookup"><span data-stu-id="8a329-480">If the variable being read into is an array, you can choose whether to read a descriptor for the size and dimension of the array.</span></span> <span data-ttu-id="8a329-481">Para gravar o descritor, defina o `ArrayIsDynamic` parâmetro `True`.</span><span class="sxs-lookup"><span data-stu-id="8a329-481">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="8a329-482">Ao ler a matriz, você precisa coincidir com a forma que de matriz foi escrita.</span><span class="sxs-lookup"><span data-stu-id="8a329-482">When reading the array, you have to match the way the array was written.</span></span> <span data-ttu-id="8a329-483">Se ele foi gravado com o descritor, você precisa ler o descritor.</span><span class="sxs-lookup"><span data-stu-id="8a329-483">If it was written with the descriptor, you have to read the descriptor.</span></span> <span data-ttu-id="8a329-484">Se o descritor não for usado, o tamanho e limites da matriz passaram para `FileGet` determinar o que ler.</span><span class="sxs-lookup"><span data-stu-id="8a329-484">If the descriptor is not used, the size and bounds of the array passed into `FileGet` determine what to read.</span></span>  
  
     <span data-ttu-id="8a329-485">O descritor especifica a classificação de matriz, o tamanho e o limite inferior de cada classificação.</span><span class="sxs-lookup"><span data-stu-id="8a329-485">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="8a329-486">Seu comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="8a329-486">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="8a329-487">O comprimento do registro especificado pelo `RecordLength` parâmetro o `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessários para gravar os dados de matriz e o descritor de matriz.</span><span class="sxs-lookup"><span data-stu-id="8a329-487">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="8a329-488">Por exemplo, a seguinte declaração de matriz necessitará de 218 bytes quando a matriz é gravada no disco.</span><span class="sxs-lookup"><span data-stu-id="8a329-488">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#21)]  
  
     <span data-ttu-id="8a329-489">Os 218 bytes são distribuídos da seguinte maneira:</span><span class="sxs-lookup"><span data-stu-id="8a329-489">The 218 bytes are distributed as follows:</span></span>  
  
    -   <span data-ttu-id="8a329-490">18 bytes para o descritor: (2 + 8 \* 2)</span><span class="sxs-lookup"><span data-stu-id="8a329-490">18 bytes for the descriptor: (2 + 8 \* 2)</span></span>  
  
    -   <span data-ttu-id="8a329-491">200 bytes para os dados: (5 * 10 * 4).</span><span class="sxs-lookup"><span data-stu-id="8a329-491">200 bytes for the data: (5 * 10 * 4).</span></span>  
  
-   <span data-ttu-id="8a329-492">Se a variável que está sendo lida for qualquer outro tipo de variável (não uma cadeia de caracteres de comprimento variável ou um objeto), `FileGet` lê apenas os dados da variável.</span><span class="sxs-lookup"><span data-stu-id="8a329-492">If the variable being read into is any other type of variable (not a variable-length string or an object), `FileGet` reads only the variable data.</span></span> <span data-ttu-id="8a329-493">O comprimento do registro especificado pelo `RecordLength` cláusula de `FileOpen` função deve ser maior ou igual ao comprimento dos dados que está sendo lidos.</span><span class="sxs-lookup"><span data-stu-id="8a329-493">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being read.</span></span>  
  
-   <span data-ttu-id="8a329-494">`FileGet` lê os elementos de estruturas como se cada um estava sendo lido individualmente, exceto que não há nenhum preenchimento entre elementos.</span><span class="sxs-lookup"><span data-stu-id="8a329-494">`FileGet` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="8a329-495">No disco, uma matriz dinâmica em um tipo definido pelo usuário (gravado com `FilePut`) é prefixado por um descritor cujo comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="8a329-495">On disk, a dynamic array in a user-defined type (written with `FilePut`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="8a329-496">O comprimento do registro especificado pelo `RecordLength` cláusula de `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessários para ler os elementos individuais.</span><span class="sxs-lookup"><span data-stu-id="8a329-496">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements.</span></span> <span data-ttu-id="8a329-497">Isso inclui qualquer matrizes e seus descritores.</span><span class="sxs-lookup"><span data-stu-id="8a329-497">This includes any arrays and their descriptors.</span></span> <span data-ttu-id="8a329-498">O `VBFixedString` atributo pode ser aplicado a campos de cadeia de caracteres nas estruturas para indicar o tamanho de uma cadeia de caracteres quando gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="8a329-498">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of a string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="8a329-499">Modo binário</span><span class="sxs-lookup"><span data-stu-id="8a329-499">Binary Mode</span></span>  
 <span data-ttu-id="8a329-500">Para arquivos abertos no `Binary` modo, a maioria do `Random` modo regras se aplicam, com algumas exceções.</span><span class="sxs-lookup"><span data-stu-id="8a329-500">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="8a329-501">As seguintes regras para arquivos abertos no `Binary` modo diferem das regras para `Random` modo:</span><span class="sxs-lookup"><span data-stu-id="8a329-501">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="8a329-502">A cláusula `RecordLength` na função de `FileOpen` não está em vigor.</span><span class="sxs-lookup"><span data-stu-id="8a329-502">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="8a329-503">`FileGet` lê todas as variáveis do disco de maneira contígua; ou seja, sem nenhum preenchimento entre registros.</span><span class="sxs-lookup"><span data-stu-id="8a329-503">`FileGet` reads all variables from disk contiguously; that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="8a329-504">Para qualquer matriz que não seja uma matriz em uma estrutura, `FileGet` lê apenas os dados.</span><span class="sxs-lookup"><span data-stu-id="8a329-504">For any array other than an array in a structure, `FileGet` reads only the data.</span></span> <span data-ttu-id="8a329-505">Nenhum descritor é lido.</span><span class="sxs-lookup"><span data-stu-id="8a329-505">No descriptor is read.</span></span>  
  
-   <span data-ttu-id="8a329-506">`FileGet` lê cadeias de caracteres de comprimento variável que não são elementos das estruturas sem esperar o descritor de dois bytes de comprimento.</span><span class="sxs-lookup"><span data-stu-id="8a329-506">`FileGet` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="8a329-507">O número de bytes lidos é igual ao número de caracteres já na cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="8a329-507">The number of bytes read equals the number of characters already in the string.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="8a329-508">Leitura de um arquivo usando o `FileGet` função requer `Read` acessar do <xref:System.Security.Permissions.FileIOPermissionAccess> enumeração.</span><span class="sxs-lookup"><span data-stu-id="8a329-508">Reading from a file by using the `FileGet` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8a329-509"><paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</span><span class="sxs-lookup"><span data-stu-id="8a329-509"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="8a329-510">O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="8a329-510">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="FileGet">
      <MemberSignature Language="C#" Value="public static void FileGet (int FileNumber, ref decimal Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGet(int32 FileNumber, valuetype System.Decimal&amp; Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Decimal@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGet (FileNumber As Integer, ByRef Value As Decimal, Optional RecordNumber As Long = -1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Decimal&amp;" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="8a329-511">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-511">Required.</span></span> <span data-ttu-id="8a329-512">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="8a329-512">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="8a329-513">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-513">Required.</span></span> <span data-ttu-id="8a329-514">Nome de variável válido no qual os dados são lidos.</span><span class="sxs-lookup"><span data-stu-id="8a329-514">Valid variable name into which data is read.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="8a329-515">Opcional.</span><span class="sxs-lookup"><span data-stu-id="8a329-515">Optional.</span></span> <span data-ttu-id="8a329-516">Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a leitura começa.</span><span class="sxs-lookup"><span data-stu-id="8a329-516">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span></span></param>
        <summary><span data-ttu-id="8a329-517">Lê dados de um arquivo aberto de disco em uma variável.</span><span class="sxs-lookup"><span data-stu-id="8a329-517">Reads data from an open disk file into a variable.</span></span> <span data-ttu-id="8a329-518">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FileGet" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-518">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span></span> <span data-ttu-id="8a329-519">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-519">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a329-520">`FileGet` só é válido em `Random` e `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="8a329-520">`FileGet` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="8a329-521">Dados lidos com `FileGet` costumam ser gravados em um arquivo usando-se `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="8a329-521">Data read with `FileGet` is usually written to a file by using `FilePut`.</span></span>  
  
 <span data-ttu-id="8a329-522">O primeiro registro ou byte em um arquivo está na posição 1, o segundo registro ou byte está na posição 2 e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="8a329-522">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="8a329-523">Se você omitir `RecordNumber`, o próximo registro ou byte após a última `FileGet` ou `FilePut` função (ou apontada pelo último `Seek` função) é lido.</span><span class="sxs-lookup"><span data-stu-id="8a329-523">If you omit `RecordNumber`, the next record or byte following the last `FileGet` or `FilePut` function (or pointed to by the last `Seek` function) is read.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8a329-524">Durante a leitura de arquivos, não faça decisões sobre o conteúdo de um arquivo com base na extensão de nome de arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-524">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="8a329-525">Por exemplo, um arquivo chamado Form1. vb pode não ser um arquivo de origem do Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="8a329-525">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="8a329-526">Modo aleatório</span><span class="sxs-lookup"><span data-stu-id="8a329-526">Random Mode</span></span>  
 <span data-ttu-id="8a329-527">Para arquivos abertos no `Random` modo, as seguintes regras se aplicam:</span><span class="sxs-lookup"><span data-stu-id="8a329-527">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="8a329-528">Se o comprimento dos dados que está sendo lidos é menor do que o comprimento especificado no `RecordLength` cláusula do `FileOpen` função `FileGet` lê registros subsequentes em limites de comprimento de registro.</span><span class="sxs-lookup"><span data-stu-id="8a329-528">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FileGet` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="8a329-529">O espaço entre o final de um registro e o início do próximo registro é preenchido com o conteúdo existente no buffer de arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-529">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="8a329-530">Porque a quantidade de dados não pode ser determinada com certeza, geralmente é recomendável ter o comprimento do registro corresponde ao tamanho dos dados que está sendo lidos.</span><span class="sxs-lookup"><span data-stu-id="8a329-530">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="8a329-531">Por padrão, se a variável que está sendo lida for uma cadeia de caracteres `FileGet` lê um descritor de dois bytes que contém o comprimento da cadeia de caracteres e, em seguida, lê os dados que vão para a variável.</span><span class="sxs-lookup"><span data-stu-id="8a329-531">By default, if the variable being read into is a string, `FileGet` reads a two-byte descriptor that contains the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="8a329-532">Portanto, o comprimento do registro especificado pelo `RecordLength` cláusula do `FileOpen` função deve ser pelo menos dois bytes maior do que o comprimento real da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="8a329-532">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="8a329-533">Visual Basic 6.0 e versões anteriores oferecem suporte a cadeias de caracteres de comprimento fixo; Quando colocado em um arquivo, o descritor de comprimento não é gravado.</span><span class="sxs-lookup"><span data-stu-id="8a329-533">Visual Basic 6.0 and earlier versions support fixed-length strings; when put to a file, the length descriptor is not written.</span></span> <span data-ttu-id="8a329-534">Se você deseja ler uma cadeia de caracteres sem o descritor, deve passar `True` para o `StringIsFixedLength` parâmetro e a cadeia de caracteres lida deve ter o comprimento correto.</span><span class="sxs-lookup"><span data-stu-id="8a329-534">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="8a329-535">Se a variável que está sendo lida for uma matriz, você pode optar por ler um descritor para o tamanho e a dimensão da matriz.</span><span class="sxs-lookup"><span data-stu-id="8a329-535">If the variable being read into is an array, you can choose whether to read a descriptor for the size and dimension of the array.</span></span> <span data-ttu-id="8a329-536">Para gravar o descritor, defina o `ArrayIsDynamic` parâmetro `True`.</span><span class="sxs-lookup"><span data-stu-id="8a329-536">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="8a329-537">Ao ler a matriz, você precisa coincidir com a forma que de matriz foi escrita.</span><span class="sxs-lookup"><span data-stu-id="8a329-537">When reading the array, you have to match the way the array was written.</span></span> <span data-ttu-id="8a329-538">Se ele foi gravado com o descritor, você precisa ler o descritor.</span><span class="sxs-lookup"><span data-stu-id="8a329-538">If it was written with the descriptor, you have to read the descriptor.</span></span> <span data-ttu-id="8a329-539">Se o descritor não for usado, o tamanho e limites da matriz passaram para `FileGet` determinar o que ler.</span><span class="sxs-lookup"><span data-stu-id="8a329-539">If the descriptor is not used, the size and bounds of the array passed into `FileGet` determine what to read.</span></span>  
  
     <span data-ttu-id="8a329-540">O descritor especifica a classificação de matriz, o tamanho e o limite inferior de cada classificação.</span><span class="sxs-lookup"><span data-stu-id="8a329-540">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="8a329-541">Seu comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="8a329-541">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="8a329-542">O comprimento do registro especificado pelo `RecordLength` parâmetro o `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessários para gravar os dados de matriz e o descritor de matriz.</span><span class="sxs-lookup"><span data-stu-id="8a329-542">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="8a329-543">Por exemplo, a seguinte declaração de matriz necessitará de 218 bytes quando a matriz é gravada no disco.</span><span class="sxs-lookup"><span data-stu-id="8a329-543">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#21)]  
  
     <span data-ttu-id="8a329-544">Os 218 bytes são distribuídos da seguinte maneira:</span><span class="sxs-lookup"><span data-stu-id="8a329-544">The 218 bytes are distributed as follows:</span></span>  
  
    -   <span data-ttu-id="8a329-545">18 bytes para o descritor: (2 + 8 \* 2)</span><span class="sxs-lookup"><span data-stu-id="8a329-545">18 bytes for the descriptor: (2 + 8 \* 2)</span></span>  
  
    -   <span data-ttu-id="8a329-546">200 bytes para os dados: (5 * 10 * 4).</span><span class="sxs-lookup"><span data-stu-id="8a329-546">200 bytes for the data: (5 * 10 * 4).</span></span>  
  
-   <span data-ttu-id="8a329-547">Se a variável que está sendo lida for qualquer outro tipo de variável (não uma cadeia de caracteres de comprimento variável ou um objeto), `FileGet` lê apenas os dados da variável.</span><span class="sxs-lookup"><span data-stu-id="8a329-547">If the variable being read into is any other type of variable (not a variable-length string or an object), `FileGet` reads only the variable data.</span></span> <span data-ttu-id="8a329-548">O comprimento do registro especificado pelo `RecordLength` cláusula de `FileOpen` função deve ser maior ou igual ao comprimento dos dados que está sendo lidos.</span><span class="sxs-lookup"><span data-stu-id="8a329-548">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being read.</span></span>  
  
-   <span data-ttu-id="8a329-549">`FileGet` lê os elementos de estruturas como se cada um estava sendo lido individualmente, exceto que não há nenhum preenchimento entre elementos.</span><span class="sxs-lookup"><span data-stu-id="8a329-549">`FileGet` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="8a329-550">No disco, uma matriz dinâmica em um tipo definido pelo usuário (gravado com `FilePut`) é prefixado por um descritor cujo comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="8a329-550">On disk, a dynamic array in a user-defined type (written with `FilePut`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="8a329-551">O comprimento do registro especificado pelo `RecordLength` cláusula de `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessários para ler os elementos individuais.</span><span class="sxs-lookup"><span data-stu-id="8a329-551">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements.</span></span> <span data-ttu-id="8a329-552">Isso inclui qualquer matrizes e seus descritores.</span><span class="sxs-lookup"><span data-stu-id="8a329-552">This includes any arrays and their descriptors.</span></span> <span data-ttu-id="8a329-553">O `VBFixedString` atributo pode ser aplicado a campos de cadeia de caracteres nas estruturas para indicar o tamanho de uma cadeia de caracteres quando gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="8a329-553">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of a string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="8a329-554">Modo binário</span><span class="sxs-lookup"><span data-stu-id="8a329-554">Binary Mode</span></span>  
 <span data-ttu-id="8a329-555">Para arquivos abertos no `Binary` modo, a maioria do `Random` modo regras se aplicam, com algumas exceções.</span><span class="sxs-lookup"><span data-stu-id="8a329-555">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="8a329-556">As seguintes regras para arquivos abertos no `Binary` modo diferem das regras para `Random` modo:</span><span class="sxs-lookup"><span data-stu-id="8a329-556">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="8a329-557">A cláusula `RecordLength` na função de `FileOpen` não está em vigor.</span><span class="sxs-lookup"><span data-stu-id="8a329-557">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="8a329-558">`FileGet` lê todas as variáveis do disco de maneira contígua; ou seja, sem nenhum preenchimento entre registros.</span><span class="sxs-lookup"><span data-stu-id="8a329-558">`FileGet` reads all variables from disk contiguously; that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="8a329-559">Para qualquer matriz que não seja uma matriz em uma estrutura, `FileGet` lê apenas os dados.</span><span class="sxs-lookup"><span data-stu-id="8a329-559">For any array other than an array in a structure, `FileGet` reads only the data.</span></span> <span data-ttu-id="8a329-560">Nenhum descritor é lido.</span><span class="sxs-lookup"><span data-stu-id="8a329-560">No descriptor is read.</span></span>  
  
-   <span data-ttu-id="8a329-561">`FileGet` lê cadeias de caracteres de comprimento variável que não são elementos das estruturas sem esperar o descritor de dois bytes de comprimento.</span><span class="sxs-lookup"><span data-stu-id="8a329-561">`FileGet` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="8a329-562">O número de bytes lidos é igual ao número de caracteres já na cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="8a329-562">The number of bytes read equals the number of characters already in the string.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="8a329-563">Leitura de um arquivo usando o `FileGet` função requer `Read` acessar do <xref:System.Security.Permissions.FileIOPermissionAccess> enumeração.</span><span class="sxs-lookup"><span data-stu-id="8a329-563">Reading from a file by using the `FileGet` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8a329-564"><paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</span><span class="sxs-lookup"><span data-stu-id="8a329-564"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="8a329-565">O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="8a329-565">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="FileGet">
      <MemberSignature Language="C#" Value="public static void FileGet (int FileNumber, ref double Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGet(int32 FileNumber, float64&amp; Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Double@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGet (FileNumber As Integer, ByRef Value As Double, Optional RecordNumber As Long = -1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Double&amp;" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="8a329-566">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-566">Required.</span></span> <span data-ttu-id="8a329-567">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="8a329-567">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="8a329-568">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-568">Required.</span></span> <span data-ttu-id="8a329-569">Nome de variável válido no qual os dados são lidos.</span><span class="sxs-lookup"><span data-stu-id="8a329-569">Valid variable name into which data is read.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="8a329-570">Opcional.</span><span class="sxs-lookup"><span data-stu-id="8a329-570">Optional.</span></span> <span data-ttu-id="8a329-571">Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a leitura começa.</span><span class="sxs-lookup"><span data-stu-id="8a329-571">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span></span></param>
        <summary><span data-ttu-id="8a329-572">Lê dados de um arquivo aberto de disco em uma variável.</span><span class="sxs-lookup"><span data-stu-id="8a329-572">Reads data from an open disk file into a variable.</span></span> <span data-ttu-id="8a329-573">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FileGet" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-573">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span></span> <span data-ttu-id="8a329-574">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-574">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a329-575">`FileGet` só é válido em `Random` e `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="8a329-575">`FileGet` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="8a329-576">Dados lidos com `FileGet` costumam ser gravados em um arquivo usando-se `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="8a329-576">Data read with `FileGet` is usually written to a file by using `FilePut`.</span></span>  
  
 <span data-ttu-id="8a329-577">O primeiro registro ou byte em um arquivo está na posição 1, o segundo registro ou byte está na posição 2 e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="8a329-577">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="8a329-578">Se você omitir `RecordNumber`, o próximo registro ou byte após a última `FileGet` ou `FilePut` função (ou apontada pelo último `Seek` função) é lido.</span><span class="sxs-lookup"><span data-stu-id="8a329-578">If you omit `RecordNumber`, the next record or byte following the last `FileGet` or `FilePut` function (or pointed to by the last `Seek` function) is read.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8a329-579">Durante a leitura de arquivos, não faça decisões sobre o conteúdo de um arquivo com base na extensão de nome de arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-579">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="8a329-580">Por exemplo, um arquivo chamado Form1. vb pode não ser um arquivo de origem do Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="8a329-580">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="8a329-581">Modo aleatório</span><span class="sxs-lookup"><span data-stu-id="8a329-581">Random Mode</span></span>  
 <span data-ttu-id="8a329-582">Para arquivos abertos no `Random` modo, as seguintes regras se aplicam:</span><span class="sxs-lookup"><span data-stu-id="8a329-582">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="8a329-583">Se o comprimento dos dados que está sendo lidos é menor do que o comprimento especificado no `RecordLength` cláusula do `FileOpen` função `FileGet` lê registros subsequentes em limites de comprimento de registro.</span><span class="sxs-lookup"><span data-stu-id="8a329-583">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FileGet` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="8a329-584">O espaço entre o final de um registro e o início do próximo registro é preenchido com o conteúdo existente no buffer de arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-584">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="8a329-585">Porque a quantidade de dados não pode ser determinada com certeza, geralmente é recomendável ter o comprimento do registro corresponde ao tamanho dos dados que está sendo lidos.</span><span class="sxs-lookup"><span data-stu-id="8a329-585">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="8a329-586">Por padrão, se a variável que está sendo lida for uma cadeia de caracteres `FileGet` lê um descritor de dois bytes que contém o comprimento da cadeia de caracteres e, em seguida, lê os dados que vão para a variável.</span><span class="sxs-lookup"><span data-stu-id="8a329-586">By default, if the variable being read into is a string, `FileGet` reads a two-byte descriptor that contains the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="8a329-587">Portanto, o comprimento do registro especificado pelo `RecordLength` cláusula do `FileOpen` função deve ser pelo menos dois bytes maior do que o comprimento real da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="8a329-587">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="8a329-588">Visual Basic 6.0 e versões anteriores oferecem suporte a cadeias de caracteres de comprimento fixo; Quando colocado em um arquivo, o descritor de comprimento não é gravado.</span><span class="sxs-lookup"><span data-stu-id="8a329-588">Visual Basic 6.0 and earlier versions support fixed-length strings; when put to a file, the length descriptor is not written.</span></span> <span data-ttu-id="8a329-589">Se você deseja ler uma cadeia de caracteres sem o descritor, deve passar `True` para o `StringIsFixedLength` parâmetro e a cadeia de caracteres lida deve ter o comprimento correto.</span><span class="sxs-lookup"><span data-stu-id="8a329-589">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="8a329-590">Se a variável que está sendo lida for uma matriz, você pode optar por ler um descritor para o tamanho e a dimensão da matriz.</span><span class="sxs-lookup"><span data-stu-id="8a329-590">If the variable being read into is an array, you can choose whether to read a descriptor for the size and dimension of the array.</span></span> <span data-ttu-id="8a329-591">Para gravar o descritor, defina o `ArrayIsDynamic` parâmetro `True`.</span><span class="sxs-lookup"><span data-stu-id="8a329-591">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="8a329-592">Ao ler a matriz, você precisa coincidir com a forma que de matriz foi escrita.</span><span class="sxs-lookup"><span data-stu-id="8a329-592">When reading the array, you have to match the way the array was written.</span></span> <span data-ttu-id="8a329-593">Se ele foi gravado com o descritor, você precisa ler o descritor.</span><span class="sxs-lookup"><span data-stu-id="8a329-593">If it was written with the descriptor, you have to read the descriptor.</span></span> <span data-ttu-id="8a329-594">Se o descritor não for usado, o tamanho e limites da matriz passaram para `FileGet` determinar o que ler.</span><span class="sxs-lookup"><span data-stu-id="8a329-594">If the descriptor is not used, the size and bounds of the array passed into `FileGet` determine what to read.</span></span>  
  
     <span data-ttu-id="8a329-595">O descritor especifica a classificação de matriz, o tamanho e o limite inferior de cada classificação.</span><span class="sxs-lookup"><span data-stu-id="8a329-595">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="8a329-596">Seu comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="8a329-596">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="8a329-597">O comprimento do registro especificado pelo `RecordLength` parâmetro o `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessários para gravar os dados de matriz e o descritor de matriz.</span><span class="sxs-lookup"><span data-stu-id="8a329-597">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="8a329-598">Por exemplo, a seguinte declaração de matriz necessitará de 218 bytes quando a matriz é gravada no disco.</span><span class="sxs-lookup"><span data-stu-id="8a329-598">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#21)]  
  
     <span data-ttu-id="8a329-599">Os 218 bytes são distribuídos da seguinte maneira:</span><span class="sxs-lookup"><span data-stu-id="8a329-599">The 218 bytes are distributed as follows:</span></span>  
  
    -   <span data-ttu-id="8a329-600">18 bytes para o descritor: (2 + 8 \* 2)</span><span class="sxs-lookup"><span data-stu-id="8a329-600">18 bytes for the descriptor: (2 + 8 \* 2)</span></span>  
  
    -   <span data-ttu-id="8a329-601">200 bytes para os dados: (5 * 10 * 4).</span><span class="sxs-lookup"><span data-stu-id="8a329-601">200 bytes for the data: (5 * 10 * 4).</span></span>  
  
-   <span data-ttu-id="8a329-602">Se a variável que está sendo lida for qualquer outro tipo de variável (não uma cadeia de caracteres de comprimento variável ou um objeto), `FileGet` lê apenas os dados da variável.</span><span class="sxs-lookup"><span data-stu-id="8a329-602">If the variable being read into is any other type of variable (not a variable-length string or an object), `FileGet` reads only the variable data.</span></span> <span data-ttu-id="8a329-603">O comprimento do registro especificado pelo `RecordLength` cláusula de `FileOpen` função deve ser maior ou igual ao comprimento dos dados que está sendo lidos.</span><span class="sxs-lookup"><span data-stu-id="8a329-603">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being read.</span></span>  
  
-   <span data-ttu-id="8a329-604">`FileGet` lê os elementos de estruturas como se cada um estava sendo lido individualmente, exceto que não há nenhum preenchimento entre elementos.</span><span class="sxs-lookup"><span data-stu-id="8a329-604">`FileGet` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="8a329-605">No disco, uma matriz dinâmica em um tipo definido pelo usuário (gravado com `FilePut`) é prefixado por um descritor cujo comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="8a329-605">On disk, a dynamic array in a user-defined type (written with `FilePut`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="8a329-606">O comprimento do registro especificado pelo `RecordLength` cláusula de `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessários para ler os elementos individuais.</span><span class="sxs-lookup"><span data-stu-id="8a329-606">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements.</span></span> <span data-ttu-id="8a329-607">Isso inclui qualquer matrizes e seus descritores.</span><span class="sxs-lookup"><span data-stu-id="8a329-607">This includes any arrays and their descriptors.</span></span> <span data-ttu-id="8a329-608">O `VBFixedString` atributo pode ser aplicado a campos de cadeia de caracteres nas estruturas para indicar o tamanho de uma cadeia de caracteres quando gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="8a329-608">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of a string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="8a329-609">Modo binário</span><span class="sxs-lookup"><span data-stu-id="8a329-609">Binary Mode</span></span>  
 <span data-ttu-id="8a329-610">Para arquivos abertos no `Binary` modo, a maioria do `Random` modo regras se aplicam, com algumas exceções.</span><span class="sxs-lookup"><span data-stu-id="8a329-610">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="8a329-611">As seguintes regras para arquivos abertos no `Binary` modo diferem das regras para `Random` modo:</span><span class="sxs-lookup"><span data-stu-id="8a329-611">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="8a329-612">A cláusula `RecordLength` na função de `FileOpen` não está em vigor.</span><span class="sxs-lookup"><span data-stu-id="8a329-612">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="8a329-613">`FileGet` lê todas as variáveis do disco de maneira contígua; ou seja, sem nenhum preenchimento entre registros.</span><span class="sxs-lookup"><span data-stu-id="8a329-613">`FileGet` reads all variables from disk contiguously; that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="8a329-614">Para qualquer matriz que não seja uma matriz em uma estrutura, `FileGet` lê apenas os dados.</span><span class="sxs-lookup"><span data-stu-id="8a329-614">For any array other than an array in a structure, `FileGet` reads only the data.</span></span> <span data-ttu-id="8a329-615">Nenhum descritor é lido.</span><span class="sxs-lookup"><span data-stu-id="8a329-615">No descriptor is read.</span></span>  
  
-   <span data-ttu-id="8a329-616">`FileGet` lê cadeias de caracteres de comprimento variável que não são elementos das estruturas sem esperar o descritor de dois bytes de comprimento.</span><span class="sxs-lookup"><span data-stu-id="8a329-616">`FileGet` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="8a329-617">O número de bytes lidos é igual ao número de caracteres já na cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="8a329-617">The number of bytes read equals the number of characters already in the string.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="8a329-618">Leitura de um arquivo usando o`FileGet` função requer `Read` acessar do <xref:System.Security.Permissions.FileIOPermissionAccess> enumeração.</span><span class="sxs-lookup"><span data-stu-id="8a329-618">Reading from a file by using the`FileGet` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8a329-619"><paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</span><span class="sxs-lookup"><span data-stu-id="8a329-619"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="8a329-620">O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="8a329-620">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="FileGet">
      <MemberSignature Language="C#" Value="public static void FileGet (int FileNumber, ref short Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGet(int32 FileNumber, int16&amp; Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Int16@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGet (FileNumber As Integer, ByRef Value As Short, Optional RecordNumber As Long = -1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Int16&amp;" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="8a329-621">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-621">Required.</span></span> <span data-ttu-id="8a329-622">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="8a329-622">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="8a329-623">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-623">Required.</span></span> <span data-ttu-id="8a329-624">Nome de variável válido no qual os dados são lidos.</span><span class="sxs-lookup"><span data-stu-id="8a329-624">Valid variable name into which data is read.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="8a329-625">Opcional.</span><span class="sxs-lookup"><span data-stu-id="8a329-625">Optional.</span></span> <span data-ttu-id="8a329-626">Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a leitura começa.</span><span class="sxs-lookup"><span data-stu-id="8a329-626">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span></span></param>
        <summary><span data-ttu-id="8a329-627">Lê dados de um arquivo aberto de disco em uma variável.</span><span class="sxs-lookup"><span data-stu-id="8a329-627">Reads data from an open disk file into a variable.</span></span> <span data-ttu-id="8a329-628">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FileGet" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-628">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span></span> <span data-ttu-id="8a329-629">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-629">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a329-630">`FileGet` só é válido em `Random` e `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="8a329-630">`FileGet` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="8a329-631">Dados lidos com `FileGet` costumam ser gravados em um arquivo usando-se `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="8a329-631">Data read with `FileGet` is usually written to a file by using `FilePut`.</span></span>  
  
 <span data-ttu-id="8a329-632">O primeiro registro ou byte em um arquivo está na posição 1, o segundo registro ou byte está na posição 2 e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="8a329-632">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="8a329-633">Se você omitir `RecordNumber`, o próximo registro ou byte após a última `FileGet` ou `FilePut` função (ou apontada pelo último `Seek` função) é lido.</span><span class="sxs-lookup"><span data-stu-id="8a329-633">If you omit `RecordNumber`, the next record or byte following the last `FileGet` or `FilePut` function (or pointed to by the last `Seek` function) is read.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8a329-634">Durante a leitura de arquivos, não faça decisões sobre o conteúdo de um arquivo com base na extensão de nome de arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-634">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="8a329-635">Por exemplo, um arquivo chamado Form1. vb pode não ser um arquivo de origem do Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="8a329-635">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="8a329-636">Modo aleatório</span><span class="sxs-lookup"><span data-stu-id="8a329-636">Random Mode</span></span>  
 <span data-ttu-id="8a329-637">Para arquivos abertos no `Random` modo, as seguintes regras se aplicam:</span><span class="sxs-lookup"><span data-stu-id="8a329-637">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="8a329-638">Se o comprimento dos dados que está sendo lidos é menor do que o comprimento especificado no `RecordLength` cláusula do `FileOpen` função `FileGet` lê registros subsequentes em limites de comprimento de registro.</span><span class="sxs-lookup"><span data-stu-id="8a329-638">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FileGet` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="8a329-639">O espaço entre o final de um registro e o início do próximo registro é preenchido com o conteúdo existente no buffer de arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-639">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="8a329-640">Porque a quantidade de dados não pode ser determinada com certeza, geralmente é recomendável ter o comprimento do registro corresponde ao tamanho dos dados que está sendo lidos.</span><span class="sxs-lookup"><span data-stu-id="8a329-640">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="8a329-641">Por padrão, se a variável que está sendo lida for uma cadeia de caracteres `FileGet` lê um descritor de dois bytes que contém o comprimento da cadeia de caracteres e, em seguida, lê os dados que vão para a variável.</span><span class="sxs-lookup"><span data-stu-id="8a329-641">By default, if the variable being read into is a string, `FileGet` reads a two-byte descriptor that contains the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="8a329-642">Portanto, o comprimento do registro especificado pelo `RecordLength` cláusula do `FileOpen` função deve ser pelo menos dois bytes maior do que o comprimento real da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="8a329-642">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="8a329-643">Visual Basic 6.0 e versões anteriores oferecem suporte a cadeias de caracteres de comprimento fixo; Quando colocado em um arquivo, o descritor de comprimento não é gravado.</span><span class="sxs-lookup"><span data-stu-id="8a329-643">Visual Basic 6.0 and earlier versions support fixed-length strings; when put to a file, the length descriptor is not written.</span></span> <span data-ttu-id="8a329-644">Se você deseja ler uma cadeia de caracteres sem o descritor, deve passar `True` para o `StringIsFixedLength` parâmetro e a cadeia de caracteres lida deve ter o comprimento correto.</span><span class="sxs-lookup"><span data-stu-id="8a329-644">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="8a329-645">Se a variável que está sendo lida for uma matriz, você pode optar por ler um descritor para o tamanho e a dimensão da matriz.</span><span class="sxs-lookup"><span data-stu-id="8a329-645">If the variable being read into is an array, you can choose whether to read a descriptor for the size and dimension of the array.</span></span> <span data-ttu-id="8a329-646">Para gravar o descritor, defina o `ArrayIsDynamic` parâmetro `True`.</span><span class="sxs-lookup"><span data-stu-id="8a329-646">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="8a329-647">Ao ler a matriz, você precisa coincidir com a forma que de matriz foi escrita.</span><span class="sxs-lookup"><span data-stu-id="8a329-647">When reading the array, you have to match the way the array was written.</span></span> <span data-ttu-id="8a329-648">Se ele foi gravado com o descritor, você precisa ler o descritor.</span><span class="sxs-lookup"><span data-stu-id="8a329-648">If it was written with the descriptor, you have to read the descriptor.</span></span> <span data-ttu-id="8a329-649">Se o descritor não for usado, o tamanho e limites da matriz passaram para `FileGet` determinar o que ler.</span><span class="sxs-lookup"><span data-stu-id="8a329-649">If the descriptor is not used, the size and bounds of the array passed into `FileGet` determine what to read.</span></span>  
  
     <span data-ttu-id="8a329-650">O descritor especifica a classificação de matriz, o tamanho e o limite inferior de cada classificação.</span><span class="sxs-lookup"><span data-stu-id="8a329-650">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="8a329-651">Seu comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="8a329-651">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="8a329-652">O comprimento do registro especificado pelo `RecordLength` parâmetro o `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessários para gravar os dados de matriz e o descritor de matriz.</span><span class="sxs-lookup"><span data-stu-id="8a329-652">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="8a329-653">Por exemplo, a seguinte declaração de matriz necessitará de 218 bytes quando a matriz é gravada no disco.</span><span class="sxs-lookup"><span data-stu-id="8a329-653">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#21)]  
  
     <span data-ttu-id="8a329-654">Os 218 bytes são distribuídos da seguinte maneira:</span><span class="sxs-lookup"><span data-stu-id="8a329-654">The 218 bytes are distributed as follows:</span></span>  
  
    -   <span data-ttu-id="8a329-655">18 bytes para o descritor: (2 + 8 \* 2)</span><span class="sxs-lookup"><span data-stu-id="8a329-655">18 bytes for the descriptor: (2 + 8 \* 2)</span></span>  
  
    -   <span data-ttu-id="8a329-656">200 bytes para os dados: (5 * 10 * 4).</span><span class="sxs-lookup"><span data-stu-id="8a329-656">200 bytes for the data: (5 * 10 * 4).</span></span>  
  
-   <span data-ttu-id="8a329-657">Se a variável que está sendo lida for qualquer outro tipo de variável (não uma cadeia de caracteres de comprimento variável ou um objeto), `FileGet` lê apenas os dados da variável.</span><span class="sxs-lookup"><span data-stu-id="8a329-657">If the variable being read into is any other type of variable (not a variable-length string or an object), `FileGet` reads only the variable data.</span></span> <span data-ttu-id="8a329-658">O comprimento do registro especificado pelo `RecordLength` cláusula de `FileOpen` função deve ser maior ou igual ao comprimento dos dados que está sendo lidos.</span><span class="sxs-lookup"><span data-stu-id="8a329-658">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being read.</span></span>  
  
-   <span data-ttu-id="8a329-659">`FileGet` lê os elementos de estruturas como se cada um estava sendo lido individualmente, exceto que não há nenhum preenchimento entre elementos.</span><span class="sxs-lookup"><span data-stu-id="8a329-659">`FileGet` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="8a329-660">No disco, uma matriz dinâmica em um tipo definido pelo usuário (gravado com `FilePut`) é prefixado por um descritor cujo comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="8a329-660">On disk, a dynamic array in a user-defined type (written with `FilePut`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="8a329-661">O comprimento do registro especificado pelo `RecordLength` cláusula de `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessários para ler os elementos individuais.</span><span class="sxs-lookup"><span data-stu-id="8a329-661">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements.</span></span> <span data-ttu-id="8a329-662">Isso inclui qualquer matrizes e seus descritores.</span><span class="sxs-lookup"><span data-stu-id="8a329-662">This includes any arrays and their descriptors.</span></span> <span data-ttu-id="8a329-663">O `VBFixedString` atributo pode ser aplicado a campos de cadeia de caracteres nas estruturas para indicar o tamanho de uma cadeia de caracteres quando gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="8a329-663">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of a string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="8a329-664">Modo binário</span><span class="sxs-lookup"><span data-stu-id="8a329-664">Binary Mode</span></span>  
 <span data-ttu-id="8a329-665">Para arquivos abertos no `Binary` modo, a maioria do `Random` modo regras se aplicam, com algumas exceções.</span><span class="sxs-lookup"><span data-stu-id="8a329-665">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="8a329-666">As seguintes regras para arquivos abertos no `Binary` modo diferem das regras para `Random` modo:</span><span class="sxs-lookup"><span data-stu-id="8a329-666">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="8a329-667">A cláusula `RecordLength` na função de `FileOpen` não está em vigor.</span><span class="sxs-lookup"><span data-stu-id="8a329-667">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="8a329-668">`FileGet` lê todas as variáveis do disco de maneira contígua; ou seja, sem nenhum preenchimento entre registros.</span><span class="sxs-lookup"><span data-stu-id="8a329-668">`FileGet` reads all variables from disk contiguously; that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="8a329-669">Para qualquer matriz que não seja uma matriz em uma estrutura, `FileGet` lê apenas os dados.</span><span class="sxs-lookup"><span data-stu-id="8a329-669">For any array other than an array in a structure, `FileGet` reads only the data.</span></span> <span data-ttu-id="8a329-670">Nenhum descritor é lido.</span><span class="sxs-lookup"><span data-stu-id="8a329-670">No descriptor is read.</span></span>  
  
-   <span data-ttu-id="8a329-671">`FileGet` lê cadeias de caracteres de comprimento variável que não são elementos das estruturas sem esperar o descritor de dois bytes de comprimento.</span><span class="sxs-lookup"><span data-stu-id="8a329-671">`FileGet` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="8a329-672">O número de bytes lidos é igual ao número de caracteres já na cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="8a329-672">The number of bytes read equals the number of characters already in the string.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="8a329-673">Leitura de um arquivo usando o `FileGet` função requer `Read` acessar do <xref:System.Security.Permissions.FileIOPermissionAccess> enumeração.</span><span class="sxs-lookup"><span data-stu-id="8a329-673">Reading from a file by using the `FileGet` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8a329-674"><paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</span><span class="sxs-lookup"><span data-stu-id="8a329-674"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="8a329-675">O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="8a329-675">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="FileGet">
      <MemberSignature Language="C#" Value="public static void FileGet (int FileNumber, ref int Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGet(int32 FileNumber, int32&amp; Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Int32@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGet (FileNumber As Integer, ByRef Value As Integer, Optional RecordNumber As Long = -1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Int32&amp;" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="8a329-676">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-676">Required.</span></span> <span data-ttu-id="8a329-677">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="8a329-677">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="8a329-678">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-678">Required.</span></span> <span data-ttu-id="8a329-679">Nome de variável válido no qual os dados são lidos.</span><span class="sxs-lookup"><span data-stu-id="8a329-679">Valid variable name into which data is read.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="8a329-680">Opcional.</span><span class="sxs-lookup"><span data-stu-id="8a329-680">Optional.</span></span> <span data-ttu-id="8a329-681">Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a leitura começa.</span><span class="sxs-lookup"><span data-stu-id="8a329-681">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span></span></param>
        <summary><span data-ttu-id="8a329-682">Lê dados de um arquivo aberto de disco em uma variável.</span><span class="sxs-lookup"><span data-stu-id="8a329-682">Reads data from an open disk file into a variable.</span></span> <span data-ttu-id="8a329-683">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FileGet" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-683">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span></span> <span data-ttu-id="8a329-684">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-684">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a329-685">`FileGet` só é válido em `Random` e `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="8a329-685">`FileGet` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="8a329-686">Dados lidos com `FileGet` costumam ser gravados em um arquivo usando-se `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="8a329-686">Data read with `FileGet` is usually written to a file by using `FilePut`.</span></span>  
  
 <span data-ttu-id="8a329-687">O primeiro registro ou byte em um arquivo está na posição 1, o segundo registro ou byte está na posição 2 e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="8a329-687">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="8a329-688">Se você omitir `RecordNumber`, o próximo registro ou byte após a última `FileGet` ou `FilePut` função (ou apontada pelo último `Seek` função) é lido.</span><span class="sxs-lookup"><span data-stu-id="8a329-688">If you omit `RecordNumber`, the next record or byte following the last `FileGet` or `FilePut` function (or pointed to by the last `Seek` function) is read.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8a329-689">Durante a leitura de arquivos, não faça decisões sobre o conteúdo de um arquivo com base na extensão de nome de arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-689">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="8a329-690">Por exemplo, um arquivo chamado Form1. vb pode não ser um arquivo de origem do Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="8a329-690">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="8a329-691">Modo aleatório</span><span class="sxs-lookup"><span data-stu-id="8a329-691">Random Mode</span></span>  
 <span data-ttu-id="8a329-692">Para arquivos abertos no `Random` modo, as seguintes regras se aplicam:</span><span class="sxs-lookup"><span data-stu-id="8a329-692">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="8a329-693">Se o comprimento dos dados que está sendo lidos é menor do que o comprimento especificado no `RecordLength` cláusula do `FileOpen` função `FileGet` lê registros subsequentes em limites de comprimento de registro.</span><span class="sxs-lookup"><span data-stu-id="8a329-693">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FileGet` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="8a329-694">O espaço entre o final de um registro e o início do próximo registro é preenchido com o conteúdo existente no buffer de arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-694">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="8a329-695">Porque a quantidade de dados não pode ser determinada com certeza, geralmente é recomendável ter o comprimento do registro corresponde ao tamanho dos dados que está sendo lidos.</span><span class="sxs-lookup"><span data-stu-id="8a329-695">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="8a329-696">Por padrão, se a variável que está sendo lida for uma cadeia de caracteres `FileGet` lê um descritor de dois bytes que contém o comprimento da cadeia de caracteres e, em seguida, lê os dados que vão para a variável.</span><span class="sxs-lookup"><span data-stu-id="8a329-696">By default, if the variable being read into is a string, `FileGet` reads a two-byte descriptor that contains the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="8a329-697">Portanto, o comprimento do registro especificado pelo `RecordLength` cláusula do `FileOpen` função deve ser pelo menos dois bytes maior do que o comprimento real da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="8a329-697">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="8a329-698">Visual Basic 6.0 e versões anteriores oferecem suporte a cadeias de caracteres de comprimento fixo; Quando colocado em um arquivo, o descritor de comprimento não é gravado.</span><span class="sxs-lookup"><span data-stu-id="8a329-698">Visual Basic 6.0 and earlier versions support fixed-length strings; when put to a file, the length descriptor is not written.</span></span> <span data-ttu-id="8a329-699">Se você deseja ler uma cadeia de caracteres sem o descritor, deve passar `True` para o `StringIsFixedLength` parâmetro e a cadeia de caracteres lida deve ter o comprimento correto.</span><span class="sxs-lookup"><span data-stu-id="8a329-699">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="8a329-700">Se a variável que está sendo lida for uma matriz, você pode optar por ler um descritor para o tamanho e a dimensão da matriz.</span><span class="sxs-lookup"><span data-stu-id="8a329-700">If the variable being read into is an array, you can choose whether to read a descriptor for the size and dimension of the array.</span></span> <span data-ttu-id="8a329-701">Para gravar o descritor, defina o `ArrayIsDynamic` parâmetro `True`.</span><span class="sxs-lookup"><span data-stu-id="8a329-701">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="8a329-702">Ao ler a matriz, você precisa coincidir com a forma que de matriz foi escrita.</span><span class="sxs-lookup"><span data-stu-id="8a329-702">When reading the array, you have to match the way the array was written.</span></span> <span data-ttu-id="8a329-703">Se ele foi gravado com o descritor, você precisa ler o descritor.</span><span class="sxs-lookup"><span data-stu-id="8a329-703">If it was written with the descriptor, you have to read the descriptor.</span></span> <span data-ttu-id="8a329-704">Se o descritor não for usado, o tamanho e limites da matriz passaram para `FileGet` determinar o que ler.</span><span class="sxs-lookup"><span data-stu-id="8a329-704">If the descriptor is not used, the size and bounds of the array passed into `FileGet` determine what to read.</span></span>  
  
     <span data-ttu-id="8a329-705">O descritor especifica a classificação de matriz, o tamanho e o limite inferior de cada classificação.</span><span class="sxs-lookup"><span data-stu-id="8a329-705">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="8a329-706">Seu comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="8a329-706">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="8a329-707">O comprimento do registro especificado pelo `RecordLength` parâmetro o `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessários para gravar os dados de matriz e o descritor de matriz.</span><span class="sxs-lookup"><span data-stu-id="8a329-707">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="8a329-708">Por exemplo, a seguinte declaração de matriz necessitará de 218 bytes quando a matriz é gravada no disco.</span><span class="sxs-lookup"><span data-stu-id="8a329-708">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#21)]  
  
     <span data-ttu-id="8a329-709">Os 218 bytes são distribuídos da seguinte maneira:</span><span class="sxs-lookup"><span data-stu-id="8a329-709">The 218 bytes are distributed as follows:</span></span>  
  
    -   <span data-ttu-id="8a329-710">18 bytes para o descritor: (2 + 8 \* 2)</span><span class="sxs-lookup"><span data-stu-id="8a329-710">18 bytes for the descriptor: (2 + 8 \* 2)</span></span>  
  
    -   <span data-ttu-id="8a329-711">200 bytes para os dados: (5 * 10 * 4).</span><span class="sxs-lookup"><span data-stu-id="8a329-711">200 bytes for the data: (5 * 10 * 4).</span></span>  
  
-   <span data-ttu-id="8a329-712">Se a variável que está sendo lida for qualquer outro tipo de variável (não uma cadeia de caracteres de comprimento variável ou um objeto), `FileGet` lê apenas os dados da variável.</span><span class="sxs-lookup"><span data-stu-id="8a329-712">If the variable being read into is any other type of variable (not a variable-length string or an object), `FileGet` reads only the variable data.</span></span> <span data-ttu-id="8a329-713">O comprimento do registro especificado pelo `RecordLength` cláusula de `FileOpen` função deve ser maior ou igual ao comprimento dos dados que está sendo lidos.</span><span class="sxs-lookup"><span data-stu-id="8a329-713">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being read.</span></span>  
  
-   <span data-ttu-id="8a329-714">`FileGet` lê os elementos de estruturas como se cada um estava sendo lido individualmente, exceto que não há nenhum preenchimento entre elementos.</span><span class="sxs-lookup"><span data-stu-id="8a329-714">`FileGet` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="8a329-715">No disco, uma matriz dinâmica em um tipo definido pelo usuário (gravado com `FilePut`) é prefixado por um descritor cujo comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="8a329-715">On disk, a dynamic array in a user-defined type (written with `FilePut`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="8a329-716">O comprimento do registro especificado pelo `RecordLength` cláusula de `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessários para ler os elementos individuais.</span><span class="sxs-lookup"><span data-stu-id="8a329-716">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements.</span></span> <span data-ttu-id="8a329-717">Isso inclui qualquer matrizes e seus descritores.</span><span class="sxs-lookup"><span data-stu-id="8a329-717">This includes any arrays and their descriptors.</span></span> <span data-ttu-id="8a329-718">O `VBFixedString` atributo pode ser aplicado a campos de cadeia de caracteres nas estruturas para indicar o tamanho de uma cadeia de caracteres quando gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="8a329-718">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of a string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="8a329-719">Modo binário</span><span class="sxs-lookup"><span data-stu-id="8a329-719">Binary Mode</span></span>  
 <span data-ttu-id="8a329-720">Para arquivos abertos no `Binary` modo, a maioria do `Random` modo regras se aplicam, com algumas exceções.</span><span class="sxs-lookup"><span data-stu-id="8a329-720">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="8a329-721">As seguintes regras para arquivos abertos no `Binary` modo diferem das regras para `Random` modo:</span><span class="sxs-lookup"><span data-stu-id="8a329-721">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="8a329-722">A cláusula `RecordLength` na função de `FileOpen` não está em vigor.</span><span class="sxs-lookup"><span data-stu-id="8a329-722">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="8a329-723">`FileGet` lê todas as variáveis do disco de maneira contígua; ou seja, sem nenhum preenchimento entre registros.</span><span class="sxs-lookup"><span data-stu-id="8a329-723">`FileGet` reads all variables from disk contiguously; that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="8a329-724">Para qualquer matriz que não seja uma matriz em uma estrutura, `FileGet` lê apenas os dados.</span><span class="sxs-lookup"><span data-stu-id="8a329-724">For any array other than an array in a structure, `FileGet` reads only the data.</span></span> <span data-ttu-id="8a329-725">Nenhum descritor é lido.</span><span class="sxs-lookup"><span data-stu-id="8a329-725">No descriptor is read.</span></span>  
  
-   <span data-ttu-id="8a329-726">`FileGet` lê cadeias de caracteres de comprimento variável que não são elementos das estruturas sem esperar o descritor de dois bytes de comprimento.</span><span class="sxs-lookup"><span data-stu-id="8a329-726">`FileGet` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="8a329-727">O número de bytes lidos é igual ao número de caracteres já na cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="8a329-727">The number of bytes read equals the number of characters already in the string.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="8a329-728">Leitura de um arquivo usando o `FileGet` função requer `Read` acessar do <xref:System.Security.Permissions.FileIOPermissionAccess> enumeração.</span><span class="sxs-lookup"><span data-stu-id="8a329-728">Reading from a file by using the `FileGet` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8a329-729"><paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</span><span class="sxs-lookup"><span data-stu-id="8a329-729"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="8a329-730">O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="8a329-730">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="FileGet">
      <MemberSignature Language="C#" Value="public static void FileGet (int FileNumber, ref long Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGet(int32 FileNumber, int64&amp; Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Int64@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGet (FileNumber As Integer, ByRef Value As Long, Optional RecordNumber As Long = -1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Int64&amp;" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="8a329-731">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-731">Required.</span></span> <span data-ttu-id="8a329-732">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="8a329-732">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="8a329-733">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-733">Required.</span></span> <span data-ttu-id="8a329-734">Nome de variável válido no qual os dados são lidos.</span><span class="sxs-lookup"><span data-stu-id="8a329-734">Valid variable name into which data is read.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="8a329-735">Opcional.</span><span class="sxs-lookup"><span data-stu-id="8a329-735">Optional.</span></span> <span data-ttu-id="8a329-736">Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a leitura começa.</span><span class="sxs-lookup"><span data-stu-id="8a329-736">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span></span></param>
        <summary><span data-ttu-id="8a329-737">Lê dados de um arquivo aberto de disco em uma variável.</span><span class="sxs-lookup"><span data-stu-id="8a329-737">Reads data from an open disk file into a variable.</span></span> <span data-ttu-id="8a329-738">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FileGet" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-738">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span></span> <span data-ttu-id="8a329-739">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-739">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a329-740">`FileGet` só é válido em `Random` e `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="8a329-740">`FileGet` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="8a329-741">Dados lidos com `FileGet` costumam ser gravados em um arquivo usando-se `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="8a329-741">Data read with `FileGet` is usually written to a file by using `FilePut`.</span></span>  
  
 <span data-ttu-id="8a329-742">O primeiro registro ou byte em um arquivo está na posição 1, o segundo registro ou byte está na posição 2 e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="8a329-742">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="8a329-743">Se você omitir `RecordNumber`, o próximo registro ou byte após a última `FileGet` ou `FilePut` função (ou apontada pelo último `Seek` função) é lido.</span><span class="sxs-lookup"><span data-stu-id="8a329-743">If you omit `RecordNumber`, the next record or byte following the last `FileGet` or `FilePut` function (or pointed to by the last `Seek` function) is read.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8a329-744">Durante a leitura de arquivos, não faça decisões sobre o conteúdo de um arquivo com base na extensão de nome de arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-744">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="8a329-745">Por exemplo, um arquivo chamado Form1. vb pode não ser um arquivo de origem do Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="8a329-745">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="8a329-746">Modo aleatório</span><span class="sxs-lookup"><span data-stu-id="8a329-746">Random Mode</span></span>  
 <span data-ttu-id="8a329-747">Para arquivos abertos no `Random` modo, as seguintes regras se aplicam:</span><span class="sxs-lookup"><span data-stu-id="8a329-747">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="8a329-748">Se o comprimento dos dados que está sendo lidos é menor do que o comprimento especificado no `RecordLength` cláusula do `FileOpen` função `FileGet` lê registros subsequentes em limites de comprimento de registro.</span><span class="sxs-lookup"><span data-stu-id="8a329-748">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FileGet` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="8a329-749">O espaço entre o final de um registro e o início do próximo registro é preenchido com o conteúdo existente no buffer de arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-749">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="8a329-750">Porque a quantidade de dados não pode ser determinada com certeza, geralmente é recomendável ter o comprimento do registro corresponde ao tamanho dos dados que está sendo lidos.</span><span class="sxs-lookup"><span data-stu-id="8a329-750">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="8a329-751">Por padrão, se a variável que está sendo lida for uma cadeia de caracteres `FileGet` lê um descritor de dois bytes que contém o comprimento da cadeia de caracteres e, em seguida, lê os dados que vão para a variável.</span><span class="sxs-lookup"><span data-stu-id="8a329-751">By default, if the variable being read into is a string, `FileGet` reads a two-byte descriptor that contains the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="8a329-752">Portanto, o comprimento do registro especificado pelo `RecordLength` cláusula do `FileOpen` função deve ser pelo menos dois bytes maior do que o comprimento real da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="8a329-752">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="8a329-753">Visual Basic 6.0 e versões anteriores oferecem suporte a cadeias de caracteres de comprimento fixo; Quando colocado em um arquivo, o descritor de comprimento não é gravado.</span><span class="sxs-lookup"><span data-stu-id="8a329-753">Visual Basic 6.0 and earlier versions support fixed-length strings; when put to a file, the length descriptor is not written.</span></span> <span data-ttu-id="8a329-754">Se você deseja ler uma cadeia de caracteres sem o descritor, deve passar `True` para o `StringIsFixedLength` parâmetro e a cadeia de caracteres lida deve ter o comprimento correto.</span><span class="sxs-lookup"><span data-stu-id="8a329-754">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="8a329-755">Se a variável que está sendo lida for uma matriz, você pode optar por ler um descritor para o tamanho e a dimensão da matriz.</span><span class="sxs-lookup"><span data-stu-id="8a329-755">If the variable being read into is an array, you can choose whether to read a descriptor for the size and dimension of the array.</span></span> <span data-ttu-id="8a329-756">Para gravar o descritor, defina o `ArrayIsDynamic` parâmetro `True`.</span><span class="sxs-lookup"><span data-stu-id="8a329-756">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="8a329-757">Ao ler a matriz, você precisa coincidir com a forma que de matriz foi escrita.</span><span class="sxs-lookup"><span data-stu-id="8a329-757">When reading the array, you have to match the way the array was written.</span></span> <span data-ttu-id="8a329-758">Se ele foi gravado com o descritor, você precisa ler o descritor.</span><span class="sxs-lookup"><span data-stu-id="8a329-758">If it was written with the descriptor, you have to read the descriptor.</span></span> <span data-ttu-id="8a329-759">Se o descritor não for usado, o tamanho e limites da matriz passaram para `FileGet` determinar o que ler.</span><span class="sxs-lookup"><span data-stu-id="8a329-759">If the descriptor is not used, the size and bounds of the array passed into `FileGet` determine what to read.</span></span>  
  
     <span data-ttu-id="8a329-760">O descritor especifica a classificação de matriz, o tamanho e o limite inferior de cada classificação.</span><span class="sxs-lookup"><span data-stu-id="8a329-760">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="8a329-761">Seu comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="8a329-761">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="8a329-762">O comprimento do registro especificado pelo `RecordLength` parâmetro o `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessários para gravar os dados de matriz e o descritor de matriz.</span><span class="sxs-lookup"><span data-stu-id="8a329-762">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="8a329-763">Por exemplo, a seguinte declaração de matriz necessitará de 218 bytes quando a matriz é gravada no disco.</span><span class="sxs-lookup"><span data-stu-id="8a329-763">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#21)]  
  
     <span data-ttu-id="8a329-764">Os 218 bytes são distribuídos da seguinte maneira:</span><span class="sxs-lookup"><span data-stu-id="8a329-764">The 218 bytes are distributed as follows:</span></span>  
  
    -   <span data-ttu-id="8a329-765">18 bytes para o descritor: (2 + 8 \* 2)</span><span class="sxs-lookup"><span data-stu-id="8a329-765">18 bytes for the descriptor: (2 + 8 \* 2)</span></span>  
  
    -   <span data-ttu-id="8a329-766">200 bytes para os dados: (5 * 10 * 4).</span><span class="sxs-lookup"><span data-stu-id="8a329-766">200 bytes for the data: (5 * 10 * 4).</span></span>  
  
-   <span data-ttu-id="8a329-767">Se a variável que está sendo lida for qualquer outro tipo de variável (não uma cadeia de caracteres de comprimento variável ou um objeto), `FileGet` lê apenas os dados da variável.</span><span class="sxs-lookup"><span data-stu-id="8a329-767">If the variable being read into is any other type of variable (not a variable-length string or an object), `FileGet` reads only the variable data.</span></span> <span data-ttu-id="8a329-768">O comprimento do registro especificado pelo `RecordLength` cláusula de `FileOpen` função deve ser maior ou igual ao comprimento dos dados que está sendo lidos.</span><span class="sxs-lookup"><span data-stu-id="8a329-768">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being read.</span></span>  
  
-   <span data-ttu-id="8a329-769">`FileGet` lê os elementos de estruturas como se cada um estava sendo lido individualmente, exceto que não há nenhum preenchimento entre elementos.</span><span class="sxs-lookup"><span data-stu-id="8a329-769">`FileGet` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="8a329-770">No disco, uma matriz dinâmica em um tipo definido pelo usuário (gravado com `FilePut`) é prefixado por um descritor cujo comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="8a329-770">On disk, a dynamic array in a user-defined type (written with `FilePut`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="8a329-771">O comprimento do registro especificado pelo `RecordLength` cláusula de `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessários para ler os elementos individuais.</span><span class="sxs-lookup"><span data-stu-id="8a329-771">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements.</span></span> <span data-ttu-id="8a329-772">Isso inclui qualquer matrizes e seus descritores.</span><span class="sxs-lookup"><span data-stu-id="8a329-772">This includes any arrays and their descriptors.</span></span> <span data-ttu-id="8a329-773">O `VBFixedString` atributo pode ser aplicado a campos de cadeia de caracteres nas estruturas para indicar o tamanho de uma cadeia de caracteres quando gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="8a329-773">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of a string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="8a329-774">Modo binário</span><span class="sxs-lookup"><span data-stu-id="8a329-774">Binary Mode</span></span>  
 <span data-ttu-id="8a329-775">Para arquivos abertos no `Binary` modo, a maioria do `Random` modo regras se aplicam, com algumas exceções.</span><span class="sxs-lookup"><span data-stu-id="8a329-775">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="8a329-776">As seguintes regras para arquivos abertos no `Binary` modo diferem das regras para `Random` modo:</span><span class="sxs-lookup"><span data-stu-id="8a329-776">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="8a329-777">A cláusula `RecordLength` na função de `FileOpen` não está em vigor.</span><span class="sxs-lookup"><span data-stu-id="8a329-777">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="8a329-778">`FileGet` lê todas as variáveis do disco de maneira contígua; ou seja, sem nenhum preenchimento entre registros.</span><span class="sxs-lookup"><span data-stu-id="8a329-778">`FileGet` reads all variables from disk contiguously; that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="8a329-779">Para qualquer matriz que não seja uma matriz em uma estrutura, `FileGet` lê apenas os dados.</span><span class="sxs-lookup"><span data-stu-id="8a329-779">For any array other than an array in a structure, `FileGet` reads only the data.</span></span> <span data-ttu-id="8a329-780">Nenhum descritor é lido.</span><span class="sxs-lookup"><span data-stu-id="8a329-780">No descriptor is read.</span></span>  
  
-   <span data-ttu-id="8a329-781">`FileGet` lê cadeias de caracteres de comprimento variável que não são elementos das estruturas sem esperar o descritor de dois bytes de comprimento.</span><span class="sxs-lookup"><span data-stu-id="8a329-781">`FileGet` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="8a329-782">O número de bytes lidos é igual ao número de caracteres já na cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="8a329-782">The number of bytes read equals the number of characters already in the string.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="8a329-783">Leitura de um arquivo usando o `FileGet` função requer `Read` acessar do <xref:System.Security.Permissions.FileIOPermissionAccess> enumeração.</span><span class="sxs-lookup"><span data-stu-id="8a329-783">Reading from a file by using the `FileGet` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8a329-784"><paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</span><span class="sxs-lookup"><span data-stu-id="8a329-784"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="8a329-785">O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="8a329-785">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="FileGet">
      <MemberSignature Language="C#" Value="public static void FileGet (int FileNumber, ref float Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGet(int32 FileNumber, float32&amp; Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Single@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGet (FileNumber As Integer, ByRef Value As Single, Optional RecordNumber As Long = -1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Single&amp;" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="8a329-786">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-786">Required.</span></span> <span data-ttu-id="8a329-787">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="8a329-787">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="8a329-788">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-788">Required.</span></span> <span data-ttu-id="8a329-789">Nome de variável válido no qual os dados são lidos.</span><span class="sxs-lookup"><span data-stu-id="8a329-789">Valid variable name into which data is read.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="8a329-790">Opcional.</span><span class="sxs-lookup"><span data-stu-id="8a329-790">Optional.</span></span> <span data-ttu-id="8a329-791">Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a leitura começa.</span><span class="sxs-lookup"><span data-stu-id="8a329-791">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span></span></param>
        <summary><span data-ttu-id="8a329-792">Lê dados de um arquivo aberto de disco em uma variável.</span><span class="sxs-lookup"><span data-stu-id="8a329-792">Reads data from an open disk file into a variable.</span></span> <span data-ttu-id="8a329-793">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FileGet" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-793">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span></span> <span data-ttu-id="8a329-794">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-794">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a329-795">`FileGet` só é válido em `Random` e `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="8a329-795">`FileGet` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="8a329-796">Dados lidos com `FileGet` costumam ser gravados em um arquivo usando-se `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="8a329-796">Data read with `FileGet` is usually written to a file by using `FilePut`.</span></span>  
  
 <span data-ttu-id="8a329-797">O primeiro registro ou byte em um arquivo está na posição 1, o segundo registro ou byte está na posição 2 e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="8a329-797">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="8a329-798">Se você omitir `RecordNumber`, o próximo registro ou byte após a última `FileGet` ou `FilePut` função (ou apontada pelo último `Seek` função) é lido.</span><span class="sxs-lookup"><span data-stu-id="8a329-798">If you omit `RecordNumber`, the next record or byte following the last `FileGet` or `FilePut` function (or pointed to by the last `Seek` function) is read.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8a329-799">Durante a leitura de arquivos, não faça decisões sobre o conteúdo de um arquivo com base na extensão de nome de arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-799">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="8a329-800">Por exemplo, um arquivo chamado Form1. vb pode não ser um arquivo de origem do Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="8a329-800">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="8a329-801">Modo aleatório</span><span class="sxs-lookup"><span data-stu-id="8a329-801">Random Mode</span></span>  
 <span data-ttu-id="8a329-802">Para arquivos abertos no `Random` modo, as seguintes regras se aplicam:</span><span class="sxs-lookup"><span data-stu-id="8a329-802">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="8a329-803">Se o comprimento dos dados que está sendo lidos é menor do que o comprimento especificado no `RecordLength` cláusula do `FileOpen` função `FileGet` lê registros subsequentes em limites de comprimento de registro.</span><span class="sxs-lookup"><span data-stu-id="8a329-803">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FileGet` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="8a329-804">O espaço entre o final de um registro e o início do próximo registro é preenchido com o conteúdo existente no buffer de arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-804">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="8a329-805">Porque a quantidade de dados não pode ser determinada com certeza, geralmente é recomendável ter o comprimento do registro corresponde ao tamanho dos dados que está sendo lidos.</span><span class="sxs-lookup"><span data-stu-id="8a329-805">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="8a329-806">Por padrão, se a variável que está sendo lida for uma cadeia de caracteres `FileGet` lê um descritor de dois bytes que contém o comprimento da cadeia de caracteres e, em seguida, lê os dados que vão para a variável.</span><span class="sxs-lookup"><span data-stu-id="8a329-806">By default, if the variable being read into is a string, `FileGet` reads a two-byte descriptor that contains the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="8a329-807">Portanto, o comprimento do registro especificado pelo `RecordLength` cláusula do `FileOpen` função deve ser pelo menos dois bytes maior do que o comprimento real da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="8a329-807">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="8a329-808">Visual Basic 6.0 e versões anteriores oferecem suporte a cadeias de caracteres de comprimento fixo; Quando colocado em um arquivo, o descritor de comprimento não é gravado.</span><span class="sxs-lookup"><span data-stu-id="8a329-808">Visual Basic 6.0 and earlier versions support fixed-length strings; when put to a file, the length descriptor is not written.</span></span> <span data-ttu-id="8a329-809">Se você deseja ler uma cadeia de caracteres sem o descritor, deve passar `True` para o `StringIsFixedLength` parâmetro e a cadeia de caracteres lida deve ter o comprimento correto.</span><span class="sxs-lookup"><span data-stu-id="8a329-809">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="8a329-810">Se a variável que está sendo lida for uma matriz, você pode optar por ler um descritor para o tamanho e a dimensão da matriz.</span><span class="sxs-lookup"><span data-stu-id="8a329-810">If the variable being read into is an array, you can choose whether to read a descriptor for the size and dimension of the array.</span></span> <span data-ttu-id="8a329-811">Para gravar o descritor, defina o `ArrayIsDynamic` parâmetro `True`.</span><span class="sxs-lookup"><span data-stu-id="8a329-811">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="8a329-812">Ao ler a matriz, você precisa coincidir com a forma que de matriz foi escrita.</span><span class="sxs-lookup"><span data-stu-id="8a329-812">When reading the array, you have to match the way the array was written.</span></span> <span data-ttu-id="8a329-813">Se ele foi gravado com o descritor, você precisa ler o descritor.</span><span class="sxs-lookup"><span data-stu-id="8a329-813">If it was written with the descriptor, you have to read the descriptor.</span></span> <span data-ttu-id="8a329-814">Se o descritor não for usado, o tamanho e limites da matriz passaram para `FileGet` determinar o que ler.</span><span class="sxs-lookup"><span data-stu-id="8a329-814">If the descriptor is not used, the size and bounds of the array passed into `FileGet` determine what to read.</span></span>  
  
     <span data-ttu-id="8a329-815">O descritor especifica a classificação de matriz, o tamanho e o limite inferior de cada classificação.</span><span class="sxs-lookup"><span data-stu-id="8a329-815">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="8a329-816">Seu comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="8a329-816">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="8a329-817">O comprimento do registro especificado pelo `RecordLength` parâmetro o `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessários para gravar os dados de matriz e o descritor de matriz.</span><span class="sxs-lookup"><span data-stu-id="8a329-817">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="8a329-818">Por exemplo, a seguinte declaração de matriz necessitará de 218 bytes quando a matriz é gravada no disco.</span><span class="sxs-lookup"><span data-stu-id="8a329-818">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#21)]  
  
     <span data-ttu-id="8a329-819">Os 218 bytes são distribuídos da seguinte maneira:</span><span class="sxs-lookup"><span data-stu-id="8a329-819">The 218 bytes are distributed as follows:</span></span>  
  
    -   <span data-ttu-id="8a329-820">18 bytes para o descritor: (2 + 8 \* 2)</span><span class="sxs-lookup"><span data-stu-id="8a329-820">18 bytes for the descriptor: (2 + 8 \* 2)</span></span>  
  
    -   <span data-ttu-id="8a329-821">200 bytes para os dados: (5 * 10 * 4).</span><span class="sxs-lookup"><span data-stu-id="8a329-821">200 bytes for the data: (5 * 10 * 4).</span></span>  
  
-   <span data-ttu-id="8a329-822">Se a variável que está sendo lida for qualquer outro tipo de variável (não uma cadeia de caracteres de comprimento variável ou um objeto), `FileGet` lê apenas os dados da variável.</span><span class="sxs-lookup"><span data-stu-id="8a329-822">If the variable being read into is any other type of variable (not a variable-length string or an object), `FileGet` reads only the variable data.</span></span> <span data-ttu-id="8a329-823">O comprimento do registro especificado pelo `RecordLength` cláusula de `FileOpen` função deve ser maior ou igual ao comprimento dos dados que está sendo lidos.</span><span class="sxs-lookup"><span data-stu-id="8a329-823">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being read.</span></span>  
  
-   <span data-ttu-id="8a329-824">`FileGet` lê os elementos de estruturas como se cada um estava sendo lido individualmente, exceto que não há nenhum preenchimento entre elementos.</span><span class="sxs-lookup"><span data-stu-id="8a329-824">`FileGet` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="8a329-825">No disco, uma matriz dinâmica em um tipo definido pelo usuário (gravado com `FilePut`) é prefixado por um descritor cujo comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="8a329-825">On disk, a dynamic array in a user-defined type (written with `FilePut`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="8a329-826">O comprimento do registro especificado pelo `RecordLength` cláusula de `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessários para ler os elementos individuais.</span><span class="sxs-lookup"><span data-stu-id="8a329-826">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements.</span></span> <span data-ttu-id="8a329-827">Isso inclui qualquer matrizes e seus descritores.</span><span class="sxs-lookup"><span data-stu-id="8a329-827">This includes any arrays and their descriptors.</span></span> <span data-ttu-id="8a329-828">O `VBFixedString` atributo pode ser aplicado a campos de cadeia de caracteres nas estruturas para indicar o tamanho de uma cadeia de caracteres quando gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="8a329-828">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of a string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="8a329-829">Modo binário</span><span class="sxs-lookup"><span data-stu-id="8a329-829">Binary Mode</span></span>  
 <span data-ttu-id="8a329-830">Para arquivos abertos no `Binary` modo, a maioria do `Random` modo regras se aplicam, com algumas exceções.</span><span class="sxs-lookup"><span data-stu-id="8a329-830">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="8a329-831">As seguintes regras para arquivos abertos no `Binary` modo diferem das regras para `Random` modo:</span><span class="sxs-lookup"><span data-stu-id="8a329-831">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="8a329-832">A cláusula `RecordLength` na função de `FileOpen` não está em vigor.</span><span class="sxs-lookup"><span data-stu-id="8a329-832">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="8a329-833">`FileGet` lê todas as variáveis do disco de maneira contígua; ou seja, sem nenhum preenchimento entre registros.</span><span class="sxs-lookup"><span data-stu-id="8a329-833">`FileGet` reads all variables from disk contiguously; that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="8a329-834">Para qualquer matriz que não seja uma matriz em uma estrutura, `FileGet` lê apenas os dados.</span><span class="sxs-lookup"><span data-stu-id="8a329-834">For any array other than an array in a structure, `FileGet` reads only the data.</span></span> <span data-ttu-id="8a329-835">Nenhum descritor é lido.</span><span class="sxs-lookup"><span data-stu-id="8a329-835">No descriptor is read.</span></span>  
  
-   <span data-ttu-id="8a329-836">`FileGet` lê cadeias de caracteres de comprimento variável que não são elementos das estruturas sem esperar o descritor de dois bytes de comprimento.</span><span class="sxs-lookup"><span data-stu-id="8a329-836">`FileGet` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="8a329-837">O número de bytes lidos é igual ao número de caracteres já na cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="8a329-837">The number of bytes read equals the number of characters already in the string.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="8a329-838">Leitura de um arquivo usando o `FileGet` função requer `Read` acessar do <xref:System.Security.Permissions.FileIOPermissionAccess> enumeração.</span><span class="sxs-lookup"><span data-stu-id="8a329-838">Reading from a file by using the `FileGet` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8a329-839"><paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</span><span class="sxs-lookup"><span data-stu-id="8a329-839"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="8a329-840">O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="8a329-840">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="FileGet">
      <MemberSignature Language="C#" Value="public static void FileGet (int FileNumber, ref ValueType Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGet(int32 FileNumber, class System.ValueType&amp; Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.ValueType@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGet (FileNumber As Integer, ByRef Value As ValueType, Optional RecordNumber As Long = -1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.ValueType&amp;" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="8a329-841">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-841">Required.</span></span> <span data-ttu-id="8a329-842">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="8a329-842">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="8a329-843">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-843">Required.</span></span> <span data-ttu-id="8a329-844">Nome de variável válido no qual os dados são lidos.</span><span class="sxs-lookup"><span data-stu-id="8a329-844">Valid variable name into which data is read.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="8a329-845">Opcional.</span><span class="sxs-lookup"><span data-stu-id="8a329-845">Optional.</span></span> <span data-ttu-id="8a329-846">Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a leitura começa.</span><span class="sxs-lookup"><span data-stu-id="8a329-846">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span></span></param>
        <summary><span data-ttu-id="8a329-847">Lê dados de um arquivo aberto de disco em uma variável.</span><span class="sxs-lookup"><span data-stu-id="8a329-847">Reads data from an open disk file into a variable.</span></span> <span data-ttu-id="8a329-848">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FileGet" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-848">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span></span> <span data-ttu-id="8a329-849">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-849">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a329-850">`FileGet` só é válido em `Random` e `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="8a329-850">`FileGet` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="8a329-851">Dados lidos com `FileGet` costumam ser gravados em um arquivo usando-se `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="8a329-851">Data read with `FileGet` is usually written to a file by using `FilePut`.</span></span>  
  
 <span data-ttu-id="8a329-852">O primeiro registro ou byte em um arquivo está na posição 1, o segundo registro ou byte está na posição 2 e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="8a329-852">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="8a329-853">Se você omitir `RecordNumber`, o próximo registro ou byte após a última `FileGet` ou `FilePut` função (ou apontada pelo último `Seek` função) é lido.</span><span class="sxs-lookup"><span data-stu-id="8a329-853">If you omit `RecordNumber`, the next record or byte following the last `FileGet` or `FilePut` function (or pointed to by the last `Seek` function) is read.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8a329-854">Durante a leitura de arquivos, não faça decisões sobre o conteúdo de um arquivo com base na extensão de nome de arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-854">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="8a329-855">Por exemplo, um arquivo chamado Form1. vb pode não ser um arquivo de origem do Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="8a329-855">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="8a329-856">Modo aleatório</span><span class="sxs-lookup"><span data-stu-id="8a329-856">Random Mode</span></span>  
 <span data-ttu-id="8a329-857">Para arquivos abertos no `Random` modo, as seguintes regras se aplicam:</span><span class="sxs-lookup"><span data-stu-id="8a329-857">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="8a329-858">Se o comprimento dos dados que está sendo lidos é menor do que o comprimento especificado no `RecordLength` cláusula do `FileOpen` função `FileGet` lê registros subsequentes em limites de comprimento de registro.</span><span class="sxs-lookup"><span data-stu-id="8a329-858">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FileGet` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="8a329-859">O espaço entre o final de um registro e o início do próximo registro é preenchido com o conteúdo existente no buffer de arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-859">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="8a329-860">Porque a quantidade de dados não pode ser determinada com certeza, geralmente é recomendável ter o comprimento do registro corresponde ao tamanho dos dados que está sendo lidos.</span><span class="sxs-lookup"><span data-stu-id="8a329-860">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="8a329-861">Por padrão, se a variável que está sendo lida for uma cadeia de caracteres `FileGet` lê um descritor de dois bytes que contém o comprimento da cadeia de caracteres e, em seguida, lê os dados que vão para a variável.</span><span class="sxs-lookup"><span data-stu-id="8a329-861">By default, if the variable being read into is a string, `FileGet` reads a two-byte descriptor that contains the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="8a329-862">Portanto, o comprimento do registro especificado pelo `RecordLength` cláusula do `FileOpen` função deve ser pelo menos dois bytes maior do que o comprimento real da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="8a329-862">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="8a329-863">Visual Basic 6.0 e versões anteriores oferecem suporte a cadeias de caracteres de comprimento fixo; Quando colocado em um arquivo, o descritor de comprimento não é gravado.</span><span class="sxs-lookup"><span data-stu-id="8a329-863">Visual Basic 6.0 and earlier versions support fixed-length strings; when put to a file, the length descriptor is not written.</span></span> <span data-ttu-id="8a329-864">Se você deseja ler uma cadeia de caracteres sem o descritor, deve passar `True` para o `StringIsFixedLength` parâmetro e a cadeia de caracteres lida deve ter o comprimento correto.</span><span class="sxs-lookup"><span data-stu-id="8a329-864">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="8a329-865">Se a variável que está sendo lida for uma matriz, você pode optar por ler um descritor para o tamanho e a dimensão da matriz.</span><span class="sxs-lookup"><span data-stu-id="8a329-865">If the variable being read into is an array, you can choose whether to read a descriptor for the size and dimension of the array.</span></span> <span data-ttu-id="8a329-866">Para gravar o descritor, defina o `ArrayIsDynamic` parâmetro `True`.</span><span class="sxs-lookup"><span data-stu-id="8a329-866">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="8a329-867">Ao ler a matriz, você precisa coincidir com a forma que de matriz foi escrita.</span><span class="sxs-lookup"><span data-stu-id="8a329-867">When reading the array, you have to match the way the array was written.</span></span> <span data-ttu-id="8a329-868">Se ele foi gravado com o descritor, você precisa ler o descritor.</span><span class="sxs-lookup"><span data-stu-id="8a329-868">If it was written with the descriptor, you have to read the descriptor.</span></span> <span data-ttu-id="8a329-869">Se o descritor não for usado, o tamanho e limites da matriz passaram para `FileGet` determinar o que ler.</span><span class="sxs-lookup"><span data-stu-id="8a329-869">If the descriptor is not used, the size and bounds of the array passed into `FileGet` determine what to read.</span></span>  
  
     <span data-ttu-id="8a329-870">O descritor especifica a classificação de matriz, o tamanho e o limite inferior de cada classificação.</span><span class="sxs-lookup"><span data-stu-id="8a329-870">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="8a329-871">Seu comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="8a329-871">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="8a329-872">O comprimento do registro especificado pelo `RecordLength` parâmetro o `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessários para gravar os dados de matriz e o descritor de matriz.</span><span class="sxs-lookup"><span data-stu-id="8a329-872">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="8a329-873">Por exemplo, a seguinte declaração de matriz necessitará de 218 bytes quando a matriz é gravada no disco.</span><span class="sxs-lookup"><span data-stu-id="8a329-873">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#21)]  
  
     <span data-ttu-id="8a329-874">Os 218 bytes são distribuídos da seguinte maneira:</span><span class="sxs-lookup"><span data-stu-id="8a329-874">The 218 bytes are distributed as follows:</span></span>  
  
    -   <span data-ttu-id="8a329-875">18 bytes para o descritor: (2 + 8 \* 2)</span><span class="sxs-lookup"><span data-stu-id="8a329-875">18 bytes for the descriptor: (2 + 8 \* 2)</span></span>  
  
    -   <span data-ttu-id="8a329-876">200 bytes para os dados: (5 * 10 * 4).</span><span class="sxs-lookup"><span data-stu-id="8a329-876">200 bytes for the data: (5 * 10 * 4).</span></span>  
  
-   <span data-ttu-id="8a329-877">Se a variável que está sendo lida for qualquer outro tipo de variável (não uma cadeia de caracteres de comprimento variável ou um objeto), `FileGet` lê apenas os dados da variável.</span><span class="sxs-lookup"><span data-stu-id="8a329-877">If the variable being read into is any other type of variable (not a variable-length string or an object), `FileGet` reads only the variable data.</span></span> <span data-ttu-id="8a329-878">O comprimento do registro especificado pelo `RecordLength` cláusula de `FileOpen` função deve ser maior ou igual ao comprimento dos dados que está sendo lidos.</span><span class="sxs-lookup"><span data-stu-id="8a329-878">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being read.</span></span>  
  
-   <span data-ttu-id="8a329-879">`FileGet` lê os elementos de estruturas como se cada um estava sendo lido individualmente, exceto que não há nenhum preenchimento entre elementos.</span><span class="sxs-lookup"><span data-stu-id="8a329-879">`FileGet` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="8a329-880">No disco, uma matriz dinâmica em um tipo definido pelo usuário (gravado com `FilePut`) é prefixado por um descritor cujo comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="8a329-880">On disk, a dynamic array in a user-defined type (written with `FilePut`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="8a329-881">O comprimento do registro especificado pelo `RecordLength` cláusula de `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessários para ler os elementos individuais.</span><span class="sxs-lookup"><span data-stu-id="8a329-881">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements.</span></span> <span data-ttu-id="8a329-882">Isso inclui qualquer matrizes e seus descritores.</span><span class="sxs-lookup"><span data-stu-id="8a329-882">This includes any arrays and their descriptors.</span></span> <span data-ttu-id="8a329-883">O `VBFixedString` atributo pode ser aplicado a campos de cadeia de caracteres nas estruturas para indicar o tamanho de uma cadeia de caracteres quando gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="8a329-883">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of a string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="8a329-884">Modo binário</span><span class="sxs-lookup"><span data-stu-id="8a329-884">Binary Mode</span></span>  
 <span data-ttu-id="8a329-885">Para arquivos abertos no `Binary` modo, a maioria do `Random` modo regras se aplicam, com algumas exceções.</span><span class="sxs-lookup"><span data-stu-id="8a329-885">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="8a329-886">As seguintes regras para arquivos abertos no `Binary` modo diferem das regras para `Random` modo:</span><span class="sxs-lookup"><span data-stu-id="8a329-886">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="8a329-887">A cláusula `RecordLength` na função de `FileOpen` não está em vigor.</span><span class="sxs-lookup"><span data-stu-id="8a329-887">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="8a329-888">`FileGet` lê todas as variáveis do disco de maneira contígua; ou seja, sem nenhum preenchimento entre registros.</span><span class="sxs-lookup"><span data-stu-id="8a329-888">`FileGet` reads all variables from disk contiguously; that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="8a329-889">Para qualquer matriz que não seja uma matriz em uma estrutura, `FileGet` lê apenas os dados.</span><span class="sxs-lookup"><span data-stu-id="8a329-889">For any array other than an array in a structure, `FileGet` reads only the data.</span></span> <span data-ttu-id="8a329-890">Nenhum descritor é lido.</span><span class="sxs-lookup"><span data-stu-id="8a329-890">No descriptor is read.</span></span>  
  
-   <span data-ttu-id="8a329-891">`FileGet` lê cadeias de caracteres de comprimento variável que não são elementos das estruturas sem esperar o descritor de dois bytes de comprimento.</span><span class="sxs-lookup"><span data-stu-id="8a329-891">`FileGet` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="8a329-892">O número de bytes lidos é igual ao número de caracteres já na cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="8a329-892">The number of bytes read equals the number of characters already in the string.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="8a329-893">Leitura de um arquivo usando o `FileGet` função requer `Read` acessar do <xref:System.Security.Permissions.FileIOPermissionAccess> enumeração.</span><span class="sxs-lookup"><span data-stu-id="8a329-893">Reading from a file by using the `FileGet` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8a329-894"><paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</span><span class="sxs-lookup"><span data-stu-id="8a329-894"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="8a329-895">O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="8a329-895">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="FileGet">
      <MemberSignature Language="C#" Value="public static void FileGet (int FileNumber, ref string Value, long RecordNumber = -1, bool StringIsFixedLength = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGet(int32 FileNumber, string&amp; Value, int64 RecordNumber, bool StringIsFixedLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.String@,System.Int64,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGet (FileNumber As Integer, ByRef Value As String, Optional RecordNumber As Long = -1, Optional StringIsFixedLength As Boolean = false)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.String&amp;" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
        <Parameter Name="StringIsFixedLength" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="8a329-896">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-896">Required.</span></span> <span data-ttu-id="8a329-897">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="8a329-897">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="8a329-898">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-898">Required.</span></span> <span data-ttu-id="8a329-899">Nome de variável válido no qual os dados são lidos.</span><span class="sxs-lookup"><span data-stu-id="8a329-899">Valid variable name into which data is read.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="8a329-900">Opcional.</span><span class="sxs-lookup"><span data-stu-id="8a329-900">Optional.</span></span> <span data-ttu-id="8a329-901">Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a leitura começa.</span><span class="sxs-lookup"><span data-stu-id="8a329-901">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span></span></param>
        <param name="StringIsFixedLength"><span data-ttu-id="8a329-902">Opcional.</span><span class="sxs-lookup"><span data-stu-id="8a329-902">Optional.</span></span> <span data-ttu-id="8a329-903">Aplica-se somente ao gravar uma cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="8a329-903">Applies only when writing a string.</span></span> <span data-ttu-id="8a329-904">Especifica se deve gravar um descritor de dois bytes para a cadeia de caracteres que descreve o tamanho.</span><span class="sxs-lookup"><span data-stu-id="8a329-904">Specifies whether to write a two-byte descriptor for the string that describes the length.</span></span> <span data-ttu-id="8a329-905">O padrão é <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-905">The default is <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="8a329-906">Lê dados de um arquivo aberto de disco em uma variável.</span><span class="sxs-lookup"><span data-stu-id="8a329-906">Reads data from an open disk file into a variable.</span></span> <span data-ttu-id="8a329-907">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FileGet" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-907">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span></span> <span data-ttu-id="8a329-908">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-908">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a329-909">`FileGet` só é válido em `Random` e `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="8a329-909">`FileGet` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="8a329-910">Dados lidos com `FileGet` costumam ser gravados em um arquivo usando-se `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="8a329-910">Data read with `FileGet` is usually written to a file by using `FilePut`.</span></span>  
  
 <span data-ttu-id="8a329-911">O primeiro registro ou byte em um arquivo está na posição 1, o segundo registro ou byte está na posição 2 e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="8a329-911">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="8a329-912">Se você omitir `RecordNumber`, o próximo registro ou byte após a última `FileGet` ou `FilePut` função (ou apontada pelo último `Seek` função) é lido.</span><span class="sxs-lookup"><span data-stu-id="8a329-912">If you omit `RecordNumber`, the next record or byte following the last `FileGet` or `FilePut` function (or pointed to by the last `Seek` function) is read.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8a329-913">Durante a leitura de arquivos, não faça decisões sobre o conteúdo de um arquivo com base na extensão de nome de arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-913">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="8a329-914">Por exemplo, um arquivo chamado Form1. vb pode não ser um arquivo de origem do Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="8a329-914">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="8a329-915">Modo aleatório</span><span class="sxs-lookup"><span data-stu-id="8a329-915">Random Mode</span></span>  
 <span data-ttu-id="8a329-916">Para arquivos abertos no `Random` modo, as seguintes regras se aplicam:</span><span class="sxs-lookup"><span data-stu-id="8a329-916">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="8a329-917">Se o comprimento dos dados que está sendo lidos é menor do que o comprimento especificado no `RecordLength` cláusula do `FileOpen` função `FileGet` lê registros subsequentes em limites de comprimento de registro.</span><span class="sxs-lookup"><span data-stu-id="8a329-917">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FileGet` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="8a329-918">O espaço entre o final de um registro e o início do próximo registro é preenchido com o conteúdo existente no buffer de arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-918">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="8a329-919">Porque a quantidade de dados não pode ser determinada com certeza, geralmente é recomendável ter o comprimento do registro corresponde ao tamanho dos dados que está sendo lidos.</span><span class="sxs-lookup"><span data-stu-id="8a329-919">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="8a329-920">Por padrão, se a variável que está sendo lida for uma cadeia de caracteres `FileGet` lê um descritor de dois bytes que contém o comprimento da cadeia de caracteres e, em seguida, lê os dados que vão para a variável.</span><span class="sxs-lookup"><span data-stu-id="8a329-920">By default, if the variable being read into is a string, `FileGet` reads a two-byte descriptor that contains the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="8a329-921">Portanto, o comprimento do registro especificado pelo `RecordLength` cláusula do `FileOpen` função deve ser pelo menos dois bytes maior do que o comprimento real da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="8a329-921">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="8a329-922">Visual Basic 6.0 e versões anteriores oferecem suporte a cadeias de caracteres de comprimento fixo; Quando colocado em um arquivo, o descritor de comprimento não é gravado.</span><span class="sxs-lookup"><span data-stu-id="8a329-922">Visual Basic 6.0 and earlier versions support fixed-length strings; when put to a file, the length descriptor is not written.</span></span> <span data-ttu-id="8a329-923">Se você deseja ler uma cadeia de caracteres sem o descritor, deve passar `True` para o `StringIsFixedLength` parâmetro e a cadeia de caracteres lida deve ter o comprimento correto.</span><span class="sxs-lookup"><span data-stu-id="8a329-923">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="8a329-924">Se a variável que está sendo lida for uma matriz, você pode optar por ler um descritor para o tamanho e a dimensão da matriz.</span><span class="sxs-lookup"><span data-stu-id="8a329-924">If the variable being read into is an array, you can choose whether to read a descriptor for the size and dimension of the array.</span></span> <span data-ttu-id="8a329-925">Para gravar o descritor, defina o `ArrayIsDynamic` parâmetro `True`.</span><span class="sxs-lookup"><span data-stu-id="8a329-925">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="8a329-926">Ao ler a matriz, você precisa coincidir com a forma que de matriz foi escrita.</span><span class="sxs-lookup"><span data-stu-id="8a329-926">When reading the array, you have to match the way the array was written.</span></span> <span data-ttu-id="8a329-927">Se ele foi gravado com o descritor, você precisa ler o descritor.</span><span class="sxs-lookup"><span data-stu-id="8a329-927">If it was written with the descriptor, you have to read the descriptor.</span></span> <span data-ttu-id="8a329-928">Se o descritor não for usado, o tamanho e limites da matriz passaram para `FileGet` determinar o que ler.</span><span class="sxs-lookup"><span data-stu-id="8a329-928">If the descriptor is not used, the size and bounds of the array passed into `FileGet` determine what to read.</span></span>  
  
     <span data-ttu-id="8a329-929">O descritor especifica a classificação de matriz, o tamanho e o limite inferior de cada classificação.</span><span class="sxs-lookup"><span data-stu-id="8a329-929">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="8a329-930">Seu comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="8a329-930">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="8a329-931">O comprimento do registro especificado pelo `RecordLength` parâmetro o `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessários para gravar os dados de matriz e o descritor de matriz.</span><span class="sxs-lookup"><span data-stu-id="8a329-931">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="8a329-932">Por exemplo, a seguinte declaração de matriz necessitará de 218 bytes quando a matriz é gravada no disco.</span><span class="sxs-lookup"><span data-stu-id="8a329-932">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#21)]  
  
     <span data-ttu-id="8a329-933">Os 218 bytes são distribuídos da seguinte maneira:</span><span class="sxs-lookup"><span data-stu-id="8a329-933">The 218 bytes are distributed as follows:</span></span>  
  
    -   <span data-ttu-id="8a329-934">18 bytes para o descritor: (2 + 8 \* 2)</span><span class="sxs-lookup"><span data-stu-id="8a329-934">18 bytes for the descriptor: (2 + 8 \* 2)</span></span>  
  
    -   <span data-ttu-id="8a329-935">200 bytes para os dados: (5 * 10 * 4).</span><span class="sxs-lookup"><span data-stu-id="8a329-935">200 bytes for the data: (5 * 10 * 4).</span></span>  
  
-   <span data-ttu-id="8a329-936">Se a variável que está sendo lida for qualquer outro tipo de variável (não uma cadeia de caracteres de comprimento variável ou um objeto), `FileGet` lê apenas os dados da variável.</span><span class="sxs-lookup"><span data-stu-id="8a329-936">If the variable being read into is any other type of variable (not a variable-length string or an object), `FileGet` reads only the variable data.</span></span> <span data-ttu-id="8a329-937">O comprimento do registro especificado pelo `RecordLength` cláusula de `FileOpen` função deve ser maior ou igual ao comprimento dos dados que está sendo lidos.</span><span class="sxs-lookup"><span data-stu-id="8a329-937">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being read.</span></span>  
  
-   <span data-ttu-id="8a329-938">`FileGet` lê os elementos de estruturas como se cada um estava sendo lido individualmente, exceto que não há nenhum preenchimento entre elementos.</span><span class="sxs-lookup"><span data-stu-id="8a329-938">`FileGet` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="8a329-939">No disco, uma matriz dinâmica em um tipo definido pelo usuário (gravado com `FilePut`) é prefixado por um descritor cujo comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="8a329-939">On disk, a dynamic array in a user-defined type (written with `FilePut`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="8a329-940">O comprimento do registro especificado pelo `RecordLength` cláusula de `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessários para ler os elementos individuais.</span><span class="sxs-lookup"><span data-stu-id="8a329-940">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements.</span></span> <span data-ttu-id="8a329-941">Isso inclui qualquer matrizes e seus descritores.</span><span class="sxs-lookup"><span data-stu-id="8a329-941">This includes any arrays and their descriptors.</span></span> <span data-ttu-id="8a329-942">O `VBFixedString` atributo pode ser aplicado a campos de cadeia de caracteres nas estruturas para indicar o tamanho de uma cadeia de caracteres quando gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="8a329-942">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of a string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="8a329-943">Modo binário</span><span class="sxs-lookup"><span data-stu-id="8a329-943">Binary Mode</span></span>  
 <span data-ttu-id="8a329-944">Para arquivos abertos no `Binary` modo, a maioria do `Random` modo regras se aplicam, com algumas exceções.</span><span class="sxs-lookup"><span data-stu-id="8a329-944">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="8a329-945">As seguintes regras para arquivos abertos no `Binary` modo diferem das regras para `Random` modo:</span><span class="sxs-lookup"><span data-stu-id="8a329-945">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="8a329-946">A cláusula `RecordLength` na função de `FileOpen` não está em vigor.</span><span class="sxs-lookup"><span data-stu-id="8a329-946">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="8a329-947">`FileGet` lê todas as variáveis do disco de maneira contígua; ou seja, sem nenhum preenchimento entre registros.</span><span class="sxs-lookup"><span data-stu-id="8a329-947">`FileGet` reads all variables from disk contiguously; that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="8a329-948">Para qualquer matriz que não seja uma matriz em uma estrutura, `FileGet` lê apenas os dados.</span><span class="sxs-lookup"><span data-stu-id="8a329-948">For any array other than an array in a structure, `FileGet` reads only the data.</span></span> <span data-ttu-id="8a329-949">Nenhum descritor é lido.</span><span class="sxs-lookup"><span data-stu-id="8a329-949">No descriptor is read.</span></span>  
  
-   <span data-ttu-id="8a329-950">`FileGet` lê cadeias de caracteres de comprimento variável que não são elementos das estruturas sem esperar o descritor de dois bytes de comprimento.</span><span class="sxs-lookup"><span data-stu-id="8a329-950">`FileGet` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="8a329-951">O número de bytes lidos é igual ao número de caracteres já na cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="8a329-951">The number of bytes read equals the number of characters already in the string.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="8a329-952">Leitura de um arquivo usando o `FileGet` função requer `Read` acessar do <xref:System.Security.Permissions.FileIOPermissionAccess> enumeração.</span><span class="sxs-lookup"><span data-stu-id="8a329-952">Reading from a file by using the `FileGet` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8a329-953"><paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</span><span class="sxs-lookup"><span data-stu-id="8a329-953"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="8a329-954">O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="8a329-954">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="FileGet">
      <MemberSignature Language="C#" Value="public static void FileGet (int FileNumber, ref Array Value, long RecordNumber = -1, bool ArrayIsDynamic = false, bool StringIsFixedLength = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGet(int32 FileNumber, class System.Array&amp; Value, int64 RecordNumber, bool ArrayIsDynamic, bool StringIsFixedLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Array@,System.Int64,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGet (FileNumber As Integer, ByRef Value As Array, Optional RecordNumber As Long = -1, Optional ArrayIsDynamic As Boolean = false, Optional StringIsFixedLength As Boolean = false)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Array&amp;" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
        <Parameter Name="ArrayIsDynamic" Type="System.Boolean" />
        <Parameter Name="StringIsFixedLength" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="8a329-955">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-955">Required.</span></span> <span data-ttu-id="8a329-956">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="8a329-956">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="8a329-957">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-957">Required.</span></span> <span data-ttu-id="8a329-958">Nome de variável válido no qual os dados são lidos.</span><span class="sxs-lookup"><span data-stu-id="8a329-958">Valid variable name into which data is read.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="8a329-959">Opcional.</span><span class="sxs-lookup"><span data-stu-id="8a329-959">Optional.</span></span> <span data-ttu-id="8a329-960">Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a leitura começa.</span><span class="sxs-lookup"><span data-stu-id="8a329-960">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span></span></param>
        <param name="ArrayIsDynamic"><span data-ttu-id="8a329-961">Opcional.</span><span class="sxs-lookup"><span data-stu-id="8a329-961">Optional.</span></span> <span data-ttu-id="8a329-962">Aplica-se somente ao gravar uma matriz.</span><span class="sxs-lookup"><span data-stu-id="8a329-962">Applies only when writing an array.</span></span> <span data-ttu-id="8a329-963">Especifica se a matriz deve ser tratada como dinâmica e se é necessário um descritor de matriz que descreve o tamanho e limites da matriz.</span><span class="sxs-lookup"><span data-stu-id="8a329-963">Specifies whether the array is to be treated as dynamic and whether an array descriptor describing the size and bounds of the array is necessary.</span></span></param>
        <param name="StringIsFixedLength"><span data-ttu-id="8a329-964">Opcional.</span><span class="sxs-lookup"><span data-stu-id="8a329-964">Optional.</span></span> <span data-ttu-id="8a329-965">Aplica-se somente ao gravar uma cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="8a329-965">Applies only when writing a string.</span></span> <span data-ttu-id="8a329-966">Especifica se deve gravar um descritor de dois bytes para a cadeia de caracteres que descreve o tamanho.</span><span class="sxs-lookup"><span data-stu-id="8a329-966">Specifies whether to write a two-byte descriptor for the string that describes the length.</span></span> <span data-ttu-id="8a329-967">O padrão é <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-967">The default is <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="8a329-968">Lê dados de um arquivo aberto de disco em uma variável.</span><span class="sxs-lookup"><span data-stu-id="8a329-968">Reads data from an open disk file into a variable.</span></span> <span data-ttu-id="8a329-969">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FileGet" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-969">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span></span> <span data-ttu-id="8a329-970">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-970">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a329-971">`FileGet` só é válido em `Random` e `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="8a329-971">`FileGet` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="8a329-972">Dados lidos com `FileGet` costumam ser gravados em um arquivo usando-se `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="8a329-972">Data read with `FileGet` is usually written to a file by using `FilePut`.</span></span>  
  
 <span data-ttu-id="8a329-973">O primeiro registro ou byte em um arquivo está na posição 1, o segundo registro ou byte está na posição 2 e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="8a329-973">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="8a329-974">Se você omitir `RecordNumber`, o próximo registro ou byte após a última `FileGet` ou `FilePut` função (ou apontada pelo último `Seek` função) é lido.</span><span class="sxs-lookup"><span data-stu-id="8a329-974">If you omit `RecordNumber`, the next record or byte following the last `FileGet` or `FilePut` function (or pointed to by the last `Seek` function) is read.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8a329-975">Durante a leitura de arquivos, não faça decisões sobre o conteúdo de um arquivo com base na extensão de nome de arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-975">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="8a329-976">Por exemplo, um arquivo chamado Form1. vb pode não ser um arquivo de origem do Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="8a329-976">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="8a329-977">Modo aleatório</span><span class="sxs-lookup"><span data-stu-id="8a329-977">Random Mode</span></span>  
 <span data-ttu-id="8a329-978">Para arquivos abertos no `Random` modo, as seguintes regras se aplicam:</span><span class="sxs-lookup"><span data-stu-id="8a329-978">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="8a329-979">Se o comprimento dos dados que está sendo lidos é menor do que o comprimento especificado no `RecordLength` cláusula do `FileOpen` função `FileGet` lê registros subsequentes em limites de comprimento de registro.</span><span class="sxs-lookup"><span data-stu-id="8a329-979">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FileGet` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="8a329-980">O espaço entre o final de um registro e o início do próximo registro é preenchido com o conteúdo existente no buffer de arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-980">The space between the end of one record and the starting of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="8a329-981">Porque a quantidade de dados não pode ser determinada com certeza, geralmente é recomendável ter o comprimento do registro corresponde ao tamanho dos dados que está sendo lidos.</span><span class="sxs-lookup"><span data-stu-id="8a329-981">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="8a329-982">Por padrão, se a variável que está sendo lida for uma cadeia de caracteres `FileGet` lê um descritor de dois bytes que contém o comprimento da cadeia de caracteres e, em seguida, lê os dados que vão para a variável.</span><span class="sxs-lookup"><span data-stu-id="8a329-982">By default, if the variable being read into is a string, `FileGet` reads a two-byte descriptor that contains the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="8a329-983">Portanto, o comprimento do registro especificado pelo `RecordLength` cláusula do `FileOpen` função deve ser pelo menos dois bytes maior do que o comprimento real da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="8a329-983">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="8a329-984">Visual Basic 6.0 e versões anteriores oferecem suporte a cadeias de caracteres de comprimento fixo; Quando colocado em um arquivo, o descritor de comprimento não é gravado.</span><span class="sxs-lookup"><span data-stu-id="8a329-984">Visual Basic 6.0 and earlier versions support fixed-length strings; when put to a file, the length descriptor is not written.</span></span> <span data-ttu-id="8a329-985">Se você deseja ler uma cadeia de caracteres sem o descritor, deve passar `True` para o `StringIsFixedLength` parâmetro e a cadeia de caracteres lida deve ter o comprimento correto.</span><span class="sxs-lookup"><span data-stu-id="8a329-985">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="8a329-986">Se a variável que está sendo lida for uma matriz, você pode optar por ler um descritor para o tamanho e a dimensão da matriz.</span><span class="sxs-lookup"><span data-stu-id="8a329-986">If the variable being read into is an array, you can choose whether to read a descriptor for the size and dimension of the array.</span></span> <span data-ttu-id="8a329-987">Para gravar o descritor, defina o `ArrayIsDynamic` parâmetro `True`.</span><span class="sxs-lookup"><span data-stu-id="8a329-987">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="8a329-988">Ao ler a matriz, você precisa coincidir com a forma que de matriz foi escrita.</span><span class="sxs-lookup"><span data-stu-id="8a329-988">When reading the array, you have to match the way the array was written.</span></span> <span data-ttu-id="8a329-989">Se ele foi gravado com o descritor, você precisa ler o descritor.</span><span class="sxs-lookup"><span data-stu-id="8a329-989">If it was written with the descriptor, you have to read the descriptor.</span></span> <span data-ttu-id="8a329-990">Se o descritor não for usado, o tamanho e limites da matriz passaram para `FileGet` determinar o que ler.</span><span class="sxs-lookup"><span data-stu-id="8a329-990">If the descriptor is not used, the size and bounds of the array passed into `FileGet` determine what to read.</span></span>  
  
     <span data-ttu-id="8a329-991">O descritor especifica a classificação de matriz, o tamanho e o limite inferior de cada classificação.</span><span class="sxs-lookup"><span data-stu-id="8a329-991">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="8a329-992">Seu comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="8a329-992">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="8a329-993">O comprimento do registro especificado pelo `RecordLength` parâmetro o `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessários para gravar os dados de matriz e o descritor de matriz.</span><span class="sxs-lookup"><span data-stu-id="8a329-993">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="8a329-994">Por exemplo, a seguinte declaração de matriz necessitará de 218 bytes quando a matriz é gravada no disco.</span><span class="sxs-lookup"><span data-stu-id="8a329-994">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#21)]  
  
     <span data-ttu-id="8a329-995">Os 218 bytes são distribuídos da seguinte maneira:</span><span class="sxs-lookup"><span data-stu-id="8a329-995">The 218 bytes are distributed as follows:</span></span>  
  
    -   <span data-ttu-id="8a329-996">18 bytes para o descritor: (2 + 8 \* 2)</span><span class="sxs-lookup"><span data-stu-id="8a329-996">18 bytes for the descriptor: (2 + 8 \* 2)</span></span>  
  
    -   <span data-ttu-id="8a329-997">200 bytes para os dados: (5 * 10 * 4).</span><span class="sxs-lookup"><span data-stu-id="8a329-997">200 bytes for the data: (5 * 10 * 4).</span></span>  
  
-   <span data-ttu-id="8a329-998">Se a variável que está sendo lida for qualquer outro tipo de variável (não uma cadeia de caracteres de comprimento variável ou um objeto), `FileGet` lê apenas os dados da variável.</span><span class="sxs-lookup"><span data-stu-id="8a329-998">If the variable being read into is any other type of variable (not a variable-length string or an object), `FileGet` reads only the variable data.</span></span> <span data-ttu-id="8a329-999">O comprimento do registro especificado pelo `RecordLength` cláusula de `FileOpen` função deve ser maior ou igual ao comprimento dos dados que está sendo lidos.</span><span class="sxs-lookup"><span data-stu-id="8a329-999">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being read.</span></span>  
  
-   <span data-ttu-id="8a329-1000">`FileGet` lê os elementos de estruturas como se cada um estava sendo lido individualmente, exceto que não há nenhum preenchimento entre elementos.</span><span class="sxs-lookup"><span data-stu-id="8a329-1000">`FileGet` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="8a329-1001">No disco, uma matriz dinâmica em um tipo definido pelo usuário (gravado com `FilePut`) é prefixado por um descritor cujo comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="8a329-1001">On disk, a dynamic array in a user-defined type (written with `FilePut`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="8a329-1002">O comprimento do registro especificado pelo `RecordLength` cláusula de `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessários para ler os elementos individuais.</span><span class="sxs-lookup"><span data-stu-id="8a329-1002">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements.</span></span> <span data-ttu-id="8a329-1003">Isso inclui qualquer matrizes e seus descritores.</span><span class="sxs-lookup"><span data-stu-id="8a329-1003">This includes any arrays and their descriptors.</span></span> <span data-ttu-id="8a329-1004">O `VBFixedString` atributo pode ser aplicado a campos de cadeia de caracteres nas estruturas para indicar o tamanho de uma cadeia de caracteres quando gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="8a329-1004">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of a string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="8a329-1005">Modo binário</span><span class="sxs-lookup"><span data-stu-id="8a329-1005">Binary Mode</span></span>  
 <span data-ttu-id="8a329-1006">Para arquivos abertos no `Binary` modo, a maioria do `Random` modo regras se aplicam, com algumas exceções.</span><span class="sxs-lookup"><span data-stu-id="8a329-1006">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="8a329-1007">As seguintes regras para arquivos abertos no `Binary` modo diferem das regras para `Random` modo:</span><span class="sxs-lookup"><span data-stu-id="8a329-1007">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="8a329-1008">A cláusula `RecordLength` na função de `FileOpen` não está em vigor.</span><span class="sxs-lookup"><span data-stu-id="8a329-1008">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="8a329-1009">`FileGet` lê todas as variáveis do disco de maneira contígua; ou seja, sem nenhum preenchimento entre registros.</span><span class="sxs-lookup"><span data-stu-id="8a329-1009">`FileGet` reads all variables from disk contiguously; that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="8a329-1010">Para qualquer matriz que não seja uma matriz em uma estrutura, `FileGet` lê apenas os dados.</span><span class="sxs-lookup"><span data-stu-id="8a329-1010">For any array other than an array in a structure, `FileGet` reads only the data.</span></span> <span data-ttu-id="8a329-1011">Nenhum descritor é lido.</span><span class="sxs-lookup"><span data-stu-id="8a329-1011">No descriptor is read.</span></span>  
  
-   <span data-ttu-id="8a329-1012">`FileGet` lê cadeias de caracteres de comprimento variável que não são elementos das estruturas sem esperar o descritor de dois bytes de comprimento.</span><span class="sxs-lookup"><span data-stu-id="8a329-1012">`FileGet` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="8a329-1013">O número de bytes lidos é igual ao número de caracteres já na cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="8a329-1013">The number of bytes read equals the number of characters already in the string.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="8a329-1014">Leitura de um arquivo usando o `FileGet` função requer `Read` acessar do <xref:System.Security.Permissions.FileIOPermissionAccess> enumeração.</span><span class="sxs-lookup"><span data-stu-id="8a329-1014">Reading from a file by using the `FileGet` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8a329-1015"><paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</span><span class="sxs-lookup"><span data-stu-id="8a329-1015"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="8a329-1016">O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="8a329-1016">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="FileGetObject">
      <MemberSignature Language="C#" Value="public static void FileGetObject (int FileNumber, ref object Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGetObject(int32 FileNumber, object&amp; Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGetObject (FileNumber As Integer, ByRef Value As Object, Optional RecordNumber As Long = -1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="8a329-1017">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-1017">Required.</span></span> <span data-ttu-id="8a329-1018">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="8a329-1018">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="8a329-1019">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-1019">Required.</span></span> <span data-ttu-id="8a329-1020">Nome de variável válido no qual os dados são lidos.</span><span class="sxs-lookup"><span data-stu-id="8a329-1020">Valid variable name into which data is read.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="8a329-1021">Opcional.</span><span class="sxs-lookup"><span data-stu-id="8a329-1021">Optional.</span></span> <span data-ttu-id="8a329-1022">Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a leitura começa.</span><span class="sxs-lookup"><span data-stu-id="8a329-1022">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span></span></param>
        <summary><span data-ttu-id="8a329-1023">Lê dados de um arquivo aberto de disco em uma variável.</span><span class="sxs-lookup"><span data-stu-id="8a329-1023">Reads data from an open disk file into a variable.</span></span>  <span data-ttu-id="8a329-1024">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FileGetObject" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-1024">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGetObject" />.</span></span> <span data-ttu-id="8a329-1025">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-1025">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a329-1026">O `FileGetObject` função é usada em vez de `FileGet` para evitar ambiguidades no tempo de compilação se tipo `Object` é retornado em vez de outro tipo, como `Integer`, `Long`, `Short`e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="8a329-1026">The `FileGetObject` function is used instead of `FileGet` to avoid ambiguities at compile time if type `Object` is returned instead of another type, such as `Integer`, `Long`, `Short`, and so forth.</span></span>  
  
 <span data-ttu-id="8a329-1027">Se você pretende gravar o `Variant` tipo `FileGetObject` é necessária.</span><span class="sxs-lookup"><span data-stu-id="8a329-1027">If you intend to write out the `Variant` type, `FileGetObject` is required.</span></span> <span data-ttu-id="8a329-1028">Em caso de dúvida, se você estiver usando um objeto para o segundo parâmetro, é sempre recomendável que você use `FilePutObject` e `FileGetObject`.</span><span class="sxs-lookup"><span data-stu-id="8a329-1028">When in doubt, if you are using an object for the second parameter, it is always suggested that you use `FilePutObject` and `FileGetObject`.</span></span>  
  
 <span data-ttu-id="8a329-1029">`FileGetObject` só é válido em `Random` e `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="8a329-1029">`FileGetObject` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="8a329-1030">Dados lidos com `FileGetObject` geralmente são gravados com `FilePutObject`.</span><span class="sxs-lookup"><span data-stu-id="8a329-1030">Data read with `FileGetObject` is usually written with `FilePutObject`.</span></span>  
  
 <span data-ttu-id="8a329-1031">O primeiro registro ou byte em um arquivo está na posição 1, o segundo registro ou byte está na posição 2 e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="8a329-1031">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="8a329-1032">Se você omitir `RecordNumber`, `FileGetObject` lê o registro ou byte após a última `FileGetObject` ou `FilePutObject` função (ou apontada pelo último `Seek` função).</span><span class="sxs-lookup"><span data-stu-id="8a329-1032">If you omit `RecordNumber`, `FileGetObject` reads the record or byte after the last `FileGetObject` or `FilePutObject` function (or pointed to by the last `Seek` function).</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="8a329-1033">Modo aleatório</span><span class="sxs-lookup"><span data-stu-id="8a329-1033">Random Mode</span></span>  
 <span data-ttu-id="8a329-1034">Para arquivos abertos no `Random` modo, as seguintes regras se aplicam:</span><span class="sxs-lookup"><span data-stu-id="8a329-1034">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="8a329-1035">Se o comprimento dos dados que está sendo lidos é menor do que o comprimento especificado no `RecordLength` cláusula do `FileOpen` função `FileGetObject` lê registros subsequentes em limites de comprimento de registro.</span><span class="sxs-lookup"><span data-stu-id="8a329-1035">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FileGetObject` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="8a329-1036">O espaço entre o final de um registro e o início do próximo registro é preenchido com o conteúdo existente no buffer de arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-1036">The space between the end of one record and the beginning of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="8a329-1037">A quantidade de dados não pode ser determinada com precisão, é recomendável ter o comprimento do registro corresponde ao tamanho dos dados que está sendo lidos.</span><span class="sxs-lookup"><span data-stu-id="8a329-1037">Because the amount of padding data cannot be precisely determined, it is a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="8a329-1038">Se a variável que está sendo lida é uma cadeia de caracteres, por padrão `FileGetObject` lê um descritor de dois bytes que contém o comprimento da cadeia de caracteres e, em seguida, lê os dados que vão para a variável.</span><span class="sxs-lookup"><span data-stu-id="8a329-1038">If the variable being read into is a string, by default `FileGetObject` reads a two-byte descriptor containing the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="8a329-1039">Portanto, o comprimento do registro especificado pelo `RecordLength` cláusula do `FileOpen` função deve ser pelo menos dois bytes maior do que o comprimento real da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="8a329-1039">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="8a329-1040">Visual Basic 6.0 e versões anteriores oferecem suporte a cadeias de caracteres de comprimento fixo e ao ler um arquivo, o descritor de comprimento não é gravado.</span><span class="sxs-lookup"><span data-stu-id="8a329-1040">Visual Basic 6.0 and earlier versions support fixed-length strings and when read to a file, the length descriptor is not written.</span></span> <span data-ttu-id="8a329-1041">Se você deseja ler uma cadeia de caracteres sem o descritor, deve passar `True` para o `StringIsFixedLength` parâmetro e a cadeia de caracteres lida deve ter o comprimento correto.</span><span class="sxs-lookup"><span data-stu-id="8a329-1041">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="8a329-1042">Se a variável que está sendo lida for uma matriz e, em seguida, o comprimento do registro especificado pelo `RecordLength` parâmetro o `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessários para gravar os dados de matriz e o descritor de matriz.</span><span class="sxs-lookup"><span data-stu-id="8a329-1042">If the variable being read into is an array, then the record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="8a329-1043">O descritor especifica a classificação de matriz, o tamanho e o limite inferior de cada classificação.</span><span class="sxs-lookup"><span data-stu-id="8a329-1043">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="8a329-1044">Seu comprimento é igual a 2 mais 8 vezes o número de dimensões: 2 + 8 \* NumberOfDimensions.</span><span class="sxs-lookup"><span data-stu-id="8a329-1044">Its length equals 2 plus 8 times the number of dimensions: 2 + 8 \* NumberOfDimensions.</span></span>  
  
     <span data-ttu-id="8a329-1045">Por exemplo, a seguinte declaração de matriz necessitará de 218 bytes quando a matriz é gravada no disco:</span><span class="sxs-lookup"><span data-stu-id="8a329-1045">For example, the following array declaration requires 218 bytes when the array is written to disk:</span></span>  
  
     [!code-vb[VbVbalrCatRef#27](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#27)]  
  
     <span data-ttu-id="8a329-1046">Os 218 bytes são distribuídos da seguinte maneira: 18 bytes para o descritor (2 + 8 \* 2) e 100 bytes para os dados (5 \* 10 \* 4).</span><span class="sxs-lookup"><span data-stu-id="8a329-1046">The 218 bytes are distributed as follows: 18 bytes for the descriptor (2 + 8 \* 2), and 100 bytes for the data (5 \* 10 \* 4).</span></span>  
  
-   <span data-ttu-id="8a329-1047">`FileGetObject` lê os elementos de estruturas como se cada um estava sendo lido individualmente, exceto que não há nenhum preenchimento entre elementos.</span><span class="sxs-lookup"><span data-stu-id="8a329-1047">`FileGetObject` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="8a329-1048">No disco, uma matriz dinâmica em um tipo definido pelo usuário (gravado com `FilePutObject`) é prefixado por um descritor cujo comprimento é igual a 2 mais 8 vezes o número de dimensões: 2 + 8 \* NumberOfDimensions.</span><span class="sxs-lookup"><span data-stu-id="8a329-1048">On disk, a dynamic array in a user-defined type (written with `FilePutObject`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: 2 + 8 \* NumberOfDimensions.</span></span> <span data-ttu-id="8a329-1049">O comprimento do registro especificado pelo `RecordLength` cláusula o `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessários para ler os elementos individuais, incluindo qualquer matrizes e seus descritores.</span><span class="sxs-lookup"><span data-stu-id="8a329-1049">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements, including any arrays and their descriptors.</span></span> <span data-ttu-id="8a329-1050">O <xref:Microsoft.VisualBasic.VBFixedStringAttribute> classe pode ser aplicada a campos de cadeia de caracteres nas estruturas para indicar o tamanho da cadeia de caracteres quando gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="8a329-1050">The <xref:Microsoft.VisualBasic.VBFixedStringAttribute> class can be applied to string fields in the structures to indicate the size of string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="8a329-1051">Modo binário</span><span class="sxs-lookup"><span data-stu-id="8a329-1051">Binary Mode</span></span>  
 <span data-ttu-id="8a329-1052">Para arquivos abertos no `Binary` modo, todos os `Random` regras se aplicam, com as seguintes exceções:</span><span class="sxs-lookup"><span data-stu-id="8a329-1052">For files opened in `Binary` mode, all of the `Random` rules apply, with these exceptions:</span></span>  
  
-   <span data-ttu-id="8a329-1053">A cláusula `RecordLength` na função de `FileOpen` não está em vigor.</span><span class="sxs-lookup"><span data-stu-id="8a329-1053">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="8a329-1054">`FileGetObject` lê todas as variáveis do disco continuamente, isto é, sem nenhum preenchimento entre os registros.</span><span class="sxs-lookup"><span data-stu-id="8a329-1054">`FileGetObject` reads all variables from disk contiguously, that is, with no padding between records.</span></span>  
  
-   <span data-ttu-id="8a329-1055">Para qualquer matriz que não seja uma matriz em uma estrutura, `FileGetObject` lê apenas os dados.</span><span class="sxs-lookup"><span data-stu-id="8a329-1055">For any array other than an array in a structure, `FileGetObject` reads only the data.</span></span> <span data-ttu-id="8a329-1056">Nenhum descritor é lido.</span><span class="sxs-lookup"><span data-stu-id="8a329-1056">No descriptor is read.</span></span>  
  
 <span data-ttu-id="8a329-1057">`FileGetObject` lê cadeias de caracteres de comprimento variável que não são elementos das estruturas sem esperar o descritor de dois bytes de comprimento.</span><span class="sxs-lookup"><span data-stu-id="8a329-1057">`FileGetObject` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="8a329-1058">O número de bytes lidos é igual ao número de caracteres já na cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="8a329-1058">The number of bytes read equals the number of characters already in the string.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8a329-1059">Durante a leitura de arquivos, não faça decisões sobre o conteúdo de um arquivo com base na extensão de nome de arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-1059">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="8a329-1060">Por exemplo, um arquivo chamado Form1. vb pode não ser um arquivo de origem do Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="8a329-1060">For example, a file named Form1.vb may not be a Visual Basic source file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a329-1061">O exemplo a seguir lê um registro em um arquivo de teste e, em seguida, recupera.</span><span class="sxs-lookup"><span data-stu-id="8a329-1061">The following example reads a record into a test file and then retrieves it.</span></span>  
  
 [!code-vb[VbVbalrCatRef#26](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#26)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
      </Docs>
    </Member>
    <Member MemberName="FileLen">
      <MemberSignature Language="C#" Value="public static long FileLen (string PathName);" />
      <MemberSignature Language="ILAsm" Value=".method public static int64 FileLen(string PathName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileLen(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FileLen (PathName As String) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long FileLen(System::String ^ PathName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="PathName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="PathName"><span data-ttu-id="8a329-1062">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-1062">Required.</span></span> <span data-ttu-id="8a329-1063">Expressão <see langword="String" /> que especifica um arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-1063"><see langword="String" /> expression that specifies a file.</span></span> <span data-ttu-id="8a329-1064"><c>PathName</c> pode incluir o diretório ou a pasta, bem como a unidade.</span><span class="sxs-lookup"><span data-stu-id="8a329-1064"><c>PathName</c> may include the directory or folder, and the drive.</span></span></param>
        <summary><span data-ttu-id="8a329-1065">Retorna um valor <see langword="Long" /> que especifica o tamanho de um arquivo em bytes.</span><span class="sxs-lookup"><span data-stu-id="8a329-1065">Returns a <see langword="Long" /> value that specifies the length of a file in bytes.</span></span> <span data-ttu-id="8a329-1066">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FileLen" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-1066">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileLen" />.</span></span> <span data-ttu-id="8a329-1067">Para obter mais informações, consulte <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-1067">For more information, see <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)" />.</span></span></summary>
        <returns>
          <span data-ttu-id="8a329-1068">Valor <see langword="Long" /> que especifica o tamanho de um arquivo em bytes.</span><span class="sxs-lookup"><span data-stu-id="8a329-1068"><see langword="Long" /> value that specifies the length of a file in bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a329-1069">Se o arquivo especificado estiver aberto quando o `FileLen` função é chamada, o valor retornado representa o tamanho do arquivo no momento em que ele foi aberto.</span><span class="sxs-lookup"><span data-stu-id="8a329-1069">If the specified file is open when the `FileLen` function is called, the value returned represents the size of the file at the time it was opened.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8a329-1070">Para obter o comprimento atual de um arquivo aberto, use o `LOF` função.</span><span class="sxs-lookup"><span data-stu-id="8a329-1070">To obtain the current length of an open file, use the `LOF` function.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a329-1071">Este exemplo usa o `FileLen` função para retornar o comprimento de um arquivo em bytes.</span><span class="sxs-lookup"><span data-stu-id="8a329-1071">This example uses the `FileLen` function to return the length of a file in bytes.</span></span> <span data-ttu-id="8a329-1072">Para fins deste exemplo, suponha que `TestFile` é um arquivo que contém alguns dados.</span><span class="sxs-lookup"><span data-stu-id="8a329-1072">For purposes of this example, assume that `TestFile` is a file that contains some data.</span></span>  
  
 [!code-vb[VbVbalrCatRef#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="8a329-1073">Arquivo inexistente.</span><span class="sxs-lookup"><span data-stu-id="8a329-1073">File does not exist.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileDateTime(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.LOF(System.Int32)" />
        <altmember cref="T:System.IO.FileNotFoundException" />
      </Docs>
    </Member>
    <Member MemberName="FileOpen">
      <MemberSignature Language="C#" Value="public static void FileOpen (int FileNumber, string FileName, Microsoft.VisualBasic.OpenMode Mode, Microsoft.VisualBasic.OpenAccess Access = Microsoft.VisualBasic.OpenAccess.Default, Microsoft.VisualBasic.OpenShare Share = Microsoft.VisualBasic.OpenShare.Default, int RecordLength = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileOpen(int32 FileNumber, string FileName, valuetype Microsoft.VisualBasic.OpenMode Mode, valuetype Microsoft.VisualBasic.OpenAccess Access, valuetype Microsoft.VisualBasic.OpenShare Share, int32 RecordLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileOpen (FileNumber As Integer, FileName As String, Mode As OpenMode, Optional Access As OpenAccess = Microsoft.VisualBasic.OpenAccess.Default, Optional Share As OpenShare = Microsoft.VisualBasic.OpenShare.Default, Optional RecordLength As Integer = -1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="FileName" Type="System.String" />
        <Parameter Name="Mode" Type="Microsoft.VisualBasic.OpenMode" />
        <Parameter Name="Access" Type="Microsoft.VisualBasic.OpenAccess" />
        <Parameter Name="Share" Type="Microsoft.VisualBasic.OpenShare" />
        <Parameter Name="RecordLength" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="8a329-1074">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-1074">Required.</span></span> <span data-ttu-id="8a329-1075">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="8a329-1075">Any valid file number.</span></span> <span data-ttu-id="8a329-1076">Use a função de <see langword="FreeFile" /> para obter o próximo número disponível de arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-1076">Use the <see langword="FreeFile" /> function to obtain the next available file number.</span></span></param>
        <param name="FileName"><span data-ttu-id="8a329-1077">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-1077">Required.</span></span> <span data-ttu-id="8a329-1078">Expressão <see langword="String" /> que especifica um nome de arquivo — pode incluir o diretório ou pasta, e unidade.</span><span class="sxs-lookup"><span data-stu-id="8a329-1078"><see langword="String" /> expression that specifies a file name—may include directory or folder, and drive.</span></span></param>
        <param name="Mode"><span data-ttu-id="8a329-1079">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-1079">Required.</span></span> <span data-ttu-id="8a329-1080">Enumeração especificando o modo de arquivo: <see langword="Append" />, <see langword="Binary" />, <see langword="Input" />, <see langword="Output" /> ou <see langword="Random" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-1080">Enumeration specifying the file mode: <see langword="Append" />, <see langword="Binary" />, <see langword="Input" />, <see langword="Output" />, or <see langword="Random" />.</span></span> <span data-ttu-id="8a329-1081">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.OpenMode" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-1081">For more information, see <see cref="T:Microsoft.VisualBasic.OpenMode" /> .</span></span></param>
        <param name="Access"><span data-ttu-id="8a329-1082">Opcional.</span><span class="sxs-lookup"><span data-stu-id="8a329-1082">Optional.</span></span> <span data-ttu-id="8a329-1083">Enumeração especificando as operações permitidas no arquivo aberto: <see langword="Read" />, <see langword="Write" /> ou <see langword="ReadWrite" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-1083">Enumeration specifying the operations permitted on the open file: <see langword="Read" />, <see langword="Write" />, or <see langword="ReadWrite" />.</span></span> <span data-ttu-id="8a329-1084">Assume o padrão de <see langword="ReadWrite" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-1084">Defaults to <see langword="ReadWrite" />.</span></span> <span data-ttu-id="8a329-1085">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.OpenAccess" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-1085">For more information, see <see cref="T:Microsoft.VisualBasic.OpenAccess" /> .</span></span></param>
        <param name="Share"><span data-ttu-id="8a329-1086">Opcional.</span><span class="sxs-lookup"><span data-stu-id="8a329-1086">Optional.</span></span> <span data-ttu-id="8a329-1087">Enumeração especificando as operações não permitidas no arquivo aberto: <see langword="Shared" />, <see langword="Lock Read" />, <see langword="Lock Write" /> ou <see langword="Lock Read Write" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-1087">Enumeration specifying the operations not permitted on the open file by other processes: <see langword="Shared" />, <see langword="Lock Read" />, <see langword="Lock Write" />, and <see langword="Lock Read Write" />.</span></span> <span data-ttu-id="8a329-1088">Assume o padrão de <see langword="Lock Read Write" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-1088">Defaults to <see langword="Lock Read Write" />.</span></span> <span data-ttu-id="8a329-1089">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.OpenShare" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-1089">For more information, see <see cref="T:Microsoft.VisualBasic.OpenShare" /> .</span></span></param>
        <param name="RecordLength"><span data-ttu-id="8a329-1090">Opcional.</span><span class="sxs-lookup"><span data-stu-id="8a329-1090">Optional.</span></span> <span data-ttu-id="8a329-1091">Número menor que ou igual a 32.767 (bytes).</span><span class="sxs-lookup"><span data-stu-id="8a329-1091">Number less than or equal to 32,767 (bytes).</span></span> <span data-ttu-id="8a329-1092">Para arquivos abertos para acesso aleatório, esse valor é o tamanho do registro.</span><span class="sxs-lookup"><span data-stu-id="8a329-1092">For files opened for random access, this value is the record length.</span></span> <span data-ttu-id="8a329-1093">Para arquivos sequenciais, esse valor é o número de caracteres armazenados em buffer.</span><span class="sxs-lookup"><span data-stu-id="8a329-1093">For sequential files, this value is the number of characters buffered.</span></span></param>
        <summary><span data-ttu-id="8a329-1094">Abre um arquivo para entrada ou saída.</span><span class="sxs-lookup"><span data-stu-id="8a329-1094">Opens a file for input or output.</span></span> <span data-ttu-id="8a329-1095">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FileOpen" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-1095">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileOpen" />.</span></span> <span data-ttu-id="8a329-1096">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-1096">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a329-1097">O `FileOpen` função é fornecida para compatibilidade com versões anteriores e pode afetar o desempenho.</span><span class="sxs-lookup"><span data-stu-id="8a329-1097">The `FileOpen` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="8a329-1098">Para aplicativos legados não, o `My.Computer.FileSystem` objeto fornece um melhor desempenho.</span><span class="sxs-lookup"><span data-stu-id="8a329-1098">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="8a329-1099">Para obter mais informações, consulte [acesso a arquivos com o Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="8a329-1099">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="8a329-1100">Você deve abrir um arquivo antes de qualquer operação de e/s pode ser executada nela.</span><span class="sxs-lookup"><span data-stu-id="8a329-1100">You must open a file before any I/O operation can be performed on it.</span></span> <span data-ttu-id="8a329-1101">`FileOpen` aloca um buffer de e/s para o arquivo e determina o modo de acesso para usar com o buffer.</span><span class="sxs-lookup"><span data-stu-id="8a329-1101">`FileOpen` allocates a buffer for I/O to the file and determines the mode of access to use with the buffer.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8a329-1102">Ao gravar um arquivo, um aplicativo pode ter que criar um arquivo, se o arquivo ao qual ele está tentando gravar não existe.</span><span class="sxs-lookup"><span data-stu-id="8a329-1102">When writing to a file, an application may have to create a file, if the file to which it is trying to write does not exist.</span></span> <span data-ttu-id="8a329-1103">Para fazer isso, ele precisa de permissão para o diretório no qual o arquivo será criado.</span><span class="sxs-lookup"><span data-stu-id="8a329-1103">To do so, it needs permission for the directory in which the file is to be created.</span></span> <span data-ttu-id="8a329-1104">No entanto, se o arquivo especificado por `FileName` existir, o aplicativo precisa `Write` permissão somente para o próprio arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-1104">However, if the file specified by `FileName` does exist, the application needs `Write` permission only to the file itself.</span></span> <span data-ttu-id="8a329-1105">Sempre que possível, para ajudar a melhorar a segurança, crie o arquivo durante a implantação e conceder `Write` permissão para esse arquivo apenas, em vez de todo o diretório.</span><span class="sxs-lookup"><span data-stu-id="8a329-1105">Wherever possible, to help improve security, create the file during deployment and grant `Write` permission to that file only, instead of to the whole directory.</span></span> <span data-ttu-id="8a329-1106">Para ajudar a melhorar a segurança, grave dados em pastas de usuário em vez de para o diretório raiz ou o diretório de arquivos de programa.</span><span class="sxs-lookup"><span data-stu-id="8a329-1106">To help improve security, write data to user directories instead of to the root directory or the Program Files directory.</span></span>  
  
 <span data-ttu-id="8a329-1107">Para abrir o canal pode ser encontrado usando o `FreeFile()` função.</span><span class="sxs-lookup"><span data-stu-id="8a329-1107">The channel to open can be found by using the `FreeFile()` function.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8a329-1108">O `FileOpen` função requer `Read` acessar a partir do `FileIOPermissionAccess` enumeração, que pode afetar sua execução em situações de confiança parcial.</span><span class="sxs-lookup"><span data-stu-id="8a329-1108">The `FileOpen` function requires `Read` access from the `FileIOPermissionAccess` enumeration, which may affect its execution in partial trust situations.</span></span> <span data-ttu-id="8a329-1109">Para obter mais informações, consulte <xref:System.Security.Permissions.FileIOPermissionAccess> enumeração.</span><span class="sxs-lookup"><span data-stu-id="8a329-1109">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a329-1110">Este exemplo ilustra vários usos do `FileOpen` função para habilitar a entrada e saída para um arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-1110">This example illustrates various uses of the `FileOpen` function to enable input and output to a file.</span></span>  
  
 <span data-ttu-id="8a329-1111">O código a seguir abre o arquivo `TestFile` na `Input` modo.</span><span class="sxs-lookup"><span data-stu-id="8a329-1111">The following code opens the file `TestFile` in `Input` mode.</span></span>  
  
 [!code-vb[VbVbalrCatRef#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#5)]  
  
 <span data-ttu-id="8a329-1112">Este exemplo abre o arquivo no `Binary` modo para gravar somente operações.</span><span class="sxs-lookup"><span data-stu-id="8a329-1112">This example opens the file in `Binary` mode for writing operations only.</span></span>  
  
 [!code-vb[VbVbalrCatRef#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#6)]  
  
 <span data-ttu-id="8a329-1113">O exemplo a seguir abre o arquivo no `Random` modo.</span><span class="sxs-lookup"><span data-stu-id="8a329-1113">The following example opens the file in `Random` mode.</span></span> <span data-ttu-id="8a329-1114">O arquivo contém registros da estrutura `Person`.</span><span class="sxs-lookup"><span data-stu-id="8a329-1114">The file contains records of the structure `Person`.</span></span>  
  
 [!code-vb[VbVbalrCatRef#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#7)]  
  
 <span data-ttu-id="8a329-1115">Este exemplo de código abre o arquivo no `Output` modo; pode qualquer processo ler ou gravar no arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-1115">This code example opens the file in `Output` mode; any process can read or write to file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#8)]  
  
 <span data-ttu-id="8a329-1116">Este exemplo de código abre o arquivo no `Binary` modo para leitura; outros processos não é possível ler o arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-1116">This code example opens the file in `Binary` mode for reading; other processes cannot read file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#9](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a329-1117">tamanho do registro é negativo (e não é igual a -1).</span><span class="sxs-lookup"><span data-stu-id="8a329-1117">Record length is negative (and not equal to -1).</span></span></exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="8a329-1118"><paramref name="FileName" /> já está aberto ou <paramref name="FileName" /> é inválido.</span><span class="sxs-lookup"><span data-stu-id="8a329-1118"><paramref name="FileName" /> is already open, or <paramref name="FileName" /> is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileClose(System.Int32[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FreeFile" />
      </Docs>
    </Member>
    <MemberGroup MemberName="FilePut">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8a329-1119">Grava dados de uma variável em um arquivo de disco.</span><span class="sxs-lookup"><span data-stu-id="8a329-1119">Writes data from a variable to a disk file.</span></span> <span data-ttu-id="8a329-1120">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FilePut" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-1120">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span></span> <span data-ttu-id="8a329-1121">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-1121">F For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (int FileNumber, bool Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(int32 FileNumber, bool Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Boolean,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Integer, Value As Boolean, Optional RecordNumber As Long = -1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Boolean" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="8a329-1122">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-1122">Required.</span></span> <span data-ttu-id="8a329-1123">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="8a329-1123">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="8a329-1124">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-1124">Required.</span></span> <span data-ttu-id="8a329-1125">Nome de variável válido que contém dados gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="8a329-1125">Valid variable name that contains data written to disk.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="8a329-1126">Opcional.</span><span class="sxs-lookup"><span data-stu-id="8a329-1126">Optional.</span></span> <span data-ttu-id="8a329-1127">Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a gravação começa.</span><span class="sxs-lookup"><span data-stu-id="8a329-1127">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span></span></param>
        <summary><span data-ttu-id="8a329-1128">Grava dados de uma variável em um arquivo de disco.</span><span class="sxs-lookup"><span data-stu-id="8a329-1128">Writes data from a variable to a disk file.</span></span> <span data-ttu-id="8a329-1129">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FilePut" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-1129">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span></span> <span data-ttu-id="8a329-1130">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-1130">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a329-1131">`FilePut` só é válido em `Random` e `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="8a329-1131">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="8a329-1132">Dados gravados com `FilePut` costumam ser lidos a partir de um arquivo usando `FileGet`.</span><span class="sxs-lookup"><span data-stu-id="8a329-1132">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="8a329-1133">O primeiro registro ou byte em um arquivo está na posição 1, o segundo registro ou byte está na posição 2 e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="8a329-1133">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="8a329-1134">Se você omitir `RecordNumber`, o próximo registro ou byte após a última `FileGet` ou `FilePut` de função ou apontado pela última `Seek` função é gravada.</span><span class="sxs-lookup"><span data-stu-id="8a329-1134">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="8a329-1135">O argumento `StringIsFixedLength` controla se a função interpreta cadeias de caracteres como sendo de tamanho variável ou fixo.</span><span class="sxs-lookup"><span data-stu-id="8a329-1135">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="8a329-1136">`FilePut` não grava o descritor do tamanho quando o argumento é `True`.</span><span class="sxs-lookup"><span data-stu-id="8a329-1136">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="8a329-1137">Se você usar `StringIsFixedLength`  =  `True` com `FilePut`, você deve fazer o mesmo com `FileGet`, e você precisa certificar-se de que a cadeia de caracteres é inicializada com o tamanho esperado.</span><span class="sxs-lookup"><span data-stu-id="8a329-1137">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="8a329-1138">Modo aleatório</span><span class="sxs-lookup"><span data-stu-id="8a329-1138">Random Mode</span></span>  
 <span data-ttu-id="8a329-1139">Para arquivos abertos no `Random` modo, as seguintes regras se aplicam:</span><span class="sxs-lookup"><span data-stu-id="8a329-1139">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="8a329-1140">Se o comprimento dos dados que estão sendo gravados for menor que o comprimento especificado no `RecordLength` cláusula do `FileOpen` função `FilePut` grava registros subsequentes em limites de comprimento de registro.</span><span class="sxs-lookup"><span data-stu-id="8a329-1140">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="8a329-1141">O espaço entre o final de um registro e o início do próximo registro é preenchido com o conteúdo existente no buffer de arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-1141">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="8a329-1142">Porque a quantidade de dados não pode ser determinada com certeza, geralmente é recomendável ter o comprimento do registro corresponde ao tamanho dos dados que estão sendo gravados.</span><span class="sxs-lookup"><span data-stu-id="8a329-1142">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="8a329-1143">Se o comprimento dos dados que estão sendo gravados for maior do que o comprimento especificado no `RecordLength` cláusula do `FileOpen` função, uma exceção será lançada.</span><span class="sxs-lookup"><span data-stu-id="8a329-1143">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="8a329-1144">Caso a variável que está sendo gravada seja uma cadeia de caracteres, `FilePut` grava um descritor de dois bytes que contém o tamanho da cadeia de caracteres e, em seguida, grava os dados que vão para a variável.</span><span class="sxs-lookup"><span data-stu-id="8a329-1144">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="8a329-1145">Portanto, o comprimento do registro especificado pelo `RecordLength` cláusula de `FileOpen` função deve ser pelo menos dois bytes maior do que o comprimento real da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="8a329-1145">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="8a329-1146">Caso a variável que está sendo gravada seja um objeto que contém um tipo numérico, `FilePut` grava dois bytes que identificam o `VarType` do objeto e, em seguida, grava a variável.</span><span class="sxs-lookup"><span data-stu-id="8a329-1146">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="8a329-1147">Por exemplo, ao escrever um objeto que contém um número inteiro, `FilePut` grava seis bytes: dois bytes que identificam o objeto como `VarType(3)` (`Integer`) e quatro bytes que contêm os dados.</span><span class="sxs-lookup"><span data-stu-id="8a329-1147">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="8a329-1148">O comprimento do registro especificado pelo `RecordLength` parâmetro o `FileOpen` função deve ser pelo menos dois bytes maior do que o número real de bytes necessários para armazenar a variável.</span><span class="sxs-lookup"><span data-stu-id="8a329-1148">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="8a329-1149">Se a variável que está sendo gravada for um objeto que contém uma cadeia de caracteres, `FilePut` grava um descritor de dois bytes que identifica o `VarType(8)` do objeto, um descritor de dois bytes indicando o comprimento da cadeia de caracteres e, em seguida, grava os dados de cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="8a329-1149">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="8a329-1150">O comprimento do registro especificado pelo `RecordLength` parâmetro o `FileOpen` função deve ser pelo menos quatro bytes maior do que o comprimento real da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="8a329-1150">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="8a329-1151">Caso queira colocar uma cadeia de caracteres sem o descritor, você deve passar `True` para o parâmetro `StringIsFixedLength`, e a cadeia de caracteres lida deve ter o tamanho correto.</span><span class="sxs-lookup"><span data-stu-id="8a329-1151">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="8a329-1152">Caso a variável gravada seja uma matriz, você tem a opção de gravar ou não um descritor para o tamanho e as dimensões da matriz.</span><span class="sxs-lookup"><span data-stu-id="8a329-1152">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="8a329-1153">O descritor de arquivo para uma matriz dinâmica, mas não para uma matriz de tamanho fixo de gravação do Visual Basic 6.0 e versões anteriores.</span><span class="sxs-lookup"><span data-stu-id="8a329-1153">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="8a329-1154">Visual Basic 2005 tem como padrão não gravar o descritor.</span><span class="sxs-lookup"><span data-stu-id="8a329-1154">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="8a329-1155">Para gravar o descritor, defina o `ArrayIsDynamic` parâmetro `True`.</span><span class="sxs-lookup"><span data-stu-id="8a329-1155">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="8a329-1156">Ao escrever a matriz, você precisa comparar a forma com que a matriz será lida; se ela for lida com o descritor, você precisará escrever o descritor.</span><span class="sxs-lookup"><span data-stu-id="8a329-1156">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="8a329-1157">O descritor especifica a classificação de matriz, o tamanho e o limite inferior de cada classificação.</span><span class="sxs-lookup"><span data-stu-id="8a329-1157">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="8a329-1158">Seu comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="8a329-1158">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="8a329-1159">O comprimento do registro especificado pelo `RecordLength` cláusula de `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessários para gravar os dados de matriz e o descritor de matriz.</span><span class="sxs-lookup"><span data-stu-id="8a329-1159">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="8a329-1160">Por exemplo, a seguinte declaração de matriz necessitará de 218 bytes quando a matriz é gravada no disco.</span><span class="sxs-lookup"><span data-stu-id="8a329-1160">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="8a329-1161">Se a variável que está sendo gravada for qualquer outro tipo de variável (não uma cadeia de caracteres de comprimento variável ou um objeto), `FilePut` grava somente os dados da variável.</span><span class="sxs-lookup"><span data-stu-id="8a329-1161">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="8a329-1162">O comprimento do registro especificado pelo `RecordLength` cláusula de `FileOpen` função deve ser maior ou igual ao comprimento dos dados que estão sendo gravados.</span><span class="sxs-lookup"><span data-stu-id="8a329-1162">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="8a329-1163">`FilePut` grava os elementos de estruturas como se cada um fosse escrito individualmente, exceto que não há nenhum preenchimento entre elementos.</span><span class="sxs-lookup"><span data-stu-id="8a329-1163">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="8a329-1164">O `VBFixedString` atributo pode ser aplicado a campos de cadeia de caracteres nas estruturas para indicar o tamanho da cadeia de caracteres quando gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="8a329-1164">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="8a329-1165">Os campos que têm mais bytes do que o especificado pela cadeia de caracteres de `VBFixedString` atributo são truncados quando gravados em disco,</span><span class="sxs-lookup"><span data-stu-id="8a329-1165">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="8a329-1166">Modo binário</span><span class="sxs-lookup"><span data-stu-id="8a329-1166">Binary Mode</span></span>  
 <span data-ttu-id="8a329-1167">Para arquivos abertos no `Binary` modo, a maioria do `Random` modo regras se aplicam, com algumas exceções.</span><span class="sxs-lookup"><span data-stu-id="8a329-1167">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="8a329-1168">As seguintes regras para arquivos abertos no `Binary` modo diferem das regras para `Random` modo:</span><span class="sxs-lookup"><span data-stu-id="8a329-1168">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="8a329-1169">A cláusula `RecordLength` na função de `FileOpen` não está em vigor.</span><span class="sxs-lookup"><span data-stu-id="8a329-1169">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="8a329-1170">`FilePut` grava todas as variáveis em disco de maneira contígua, ou seja, sem preenchimento entre os registros.</span><span class="sxs-lookup"><span data-stu-id="8a329-1170">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="8a329-1171">Para qualquer matriz que não seja uma matriz em uma estrutura, `FilePut` grava somente os dados.</span><span class="sxs-lookup"><span data-stu-id="8a329-1171">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="8a329-1172">Nenhum descritor é escrito.</span><span class="sxs-lookup"><span data-stu-id="8a329-1172">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="8a329-1173">`FilePut` Grava cadeias de caracteres de comprimento variável que não são elementos das estruturas sem o descritor de dois bytes de comprimento.</span><span class="sxs-lookup"><span data-stu-id="8a329-1173">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="8a329-1174">O número de bytes gravados for igual ao número de caracteres na cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="8a329-1174">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="8a329-1175">Por exemplo, as instruções a seguir gravam 11 bytes no arquivo número 1:</span><span class="sxs-lookup"><span data-stu-id="8a329-1175">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="8a329-1176">A gravação em um arquivo usando a função `FilePut` requer o acesso `Write` da enumeração <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="8a329-1176">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a329-1177">Este exemplo usa o `FilePut` função para gravar dados em um arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-1177">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="8a329-1178">Cinco registros da estrutura `Person` são gravados no arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-1178">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8a329-1179"><paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</span><span class="sxs-lookup"><span data-stu-id="8a329-1179"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="8a329-1180">O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="8a329-1180">File mode is invalid.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (int FileNumber, byte Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(int32 FileNumber, unsigned int8 Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Byte,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Integer, Value As Byte, Optional RecordNumber As Long = -1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Byte" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="8a329-1181">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-1181">Required.</span></span> <span data-ttu-id="8a329-1182">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="8a329-1182">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="8a329-1183">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-1183">Required.</span></span> <span data-ttu-id="8a329-1184">Nome de variável válido que contém dados gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="8a329-1184">Valid variable name that contains data written to disk.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="8a329-1185">Opcional.</span><span class="sxs-lookup"><span data-stu-id="8a329-1185">Optional.</span></span> <span data-ttu-id="8a329-1186">Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a gravação começa.</span><span class="sxs-lookup"><span data-stu-id="8a329-1186">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span></span></param>
        <summary><span data-ttu-id="8a329-1187">Grava dados de uma variável em um arquivo de disco.</span><span class="sxs-lookup"><span data-stu-id="8a329-1187">Writes data from a variable to a disk file.</span></span> <span data-ttu-id="8a329-1188">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FilePut" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-1188">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span></span> <span data-ttu-id="8a329-1189">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-1189">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a329-1190">`FilePut` só é válido em `Random` e `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="8a329-1190">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="8a329-1191">Dados gravados com `FilePut` costumam ser lidos a partir de um arquivo usando `FileGet`.</span><span class="sxs-lookup"><span data-stu-id="8a329-1191">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="8a329-1192">O primeiro registro ou byte em um arquivo está na posição 1, o segundo registro ou byte está na posição 2 e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="8a329-1192">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="8a329-1193">Se você omitir `RecordNumber`, o próximo registro ou byte após a última `FileGet` ou `FilePut` de função ou apontado pela última `Seek` função é gravada.</span><span class="sxs-lookup"><span data-stu-id="8a329-1193">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="8a329-1194">O argumento `StringIsFixedLength` controla se a função interpreta cadeias de caracteres como sendo de tamanho variável ou fixo.</span><span class="sxs-lookup"><span data-stu-id="8a329-1194">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="8a329-1195">`FilePut` não grava o descritor do tamanho quando o argumento é `True`.</span><span class="sxs-lookup"><span data-stu-id="8a329-1195">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="8a329-1196">Se você usar `StringIsFixedLength`  =  `True` com `FilePut`, você deve fazer o mesmo com `FileGet`, e você precisa certificar-se de que a cadeia de caracteres é inicializada com o tamanho esperado.</span><span class="sxs-lookup"><span data-stu-id="8a329-1196">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="8a329-1197">Modo aleatório</span><span class="sxs-lookup"><span data-stu-id="8a329-1197">Random Mode</span></span>  
 <span data-ttu-id="8a329-1198">Para arquivos abertos no `Random` modo, as seguintes regras se aplicam:</span><span class="sxs-lookup"><span data-stu-id="8a329-1198">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="8a329-1199">Se o comprimento dos dados que estão sendo gravados for menor que o comprimento especificado no `RecordLength` cláusula do `FileOpen` função `FilePut` grava registros subsequentes em limites de comprimento de registro.</span><span class="sxs-lookup"><span data-stu-id="8a329-1199">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="8a329-1200">O espaço entre o final de um registro e o início do próximo registro é preenchido com o conteúdo existente no buffer de arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-1200">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="8a329-1201">Porque a quantidade de dados não pode ser determinada com certeza, geralmente é recomendável ter o comprimento do registro corresponde ao tamanho dos dados que estão sendo gravados.</span><span class="sxs-lookup"><span data-stu-id="8a329-1201">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="8a329-1202">Se o comprimento dos dados que estão sendo gravados for maior do que o comprimento especificado no `RecordLength` cláusula do `FileOpen` função, uma exceção será lançada.</span><span class="sxs-lookup"><span data-stu-id="8a329-1202">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="8a329-1203">Caso a variável que está sendo gravada seja uma cadeia de caracteres, `FilePut` grava um descritor de dois bytes que contém o tamanho da cadeia de caracteres e, em seguida, grava os dados que vão para a variável.</span><span class="sxs-lookup"><span data-stu-id="8a329-1203">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="8a329-1204">Portanto, o comprimento do registro especificado pelo `RecordLength` cláusula de `FileOpen` função deve ser pelo menos dois bytes maior do que o comprimento real da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="8a329-1204">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="8a329-1205">Caso a variável que está sendo gravada seja um objeto que contém um tipo numérico, `FilePut` grava dois bytes que identificam o `VarType` do objeto e, em seguida, grava a variável.</span><span class="sxs-lookup"><span data-stu-id="8a329-1205">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="8a329-1206">Por exemplo, ao escrever um objeto que contém um número inteiro, `FilePut` grava seis bytes: dois bytes que identificam o objeto como `VarType(3)` (`Integer`) e quatro bytes que contêm os dados.</span><span class="sxs-lookup"><span data-stu-id="8a329-1206">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="8a329-1207">O comprimento do registro especificado pelo `RecordLength` parâmetro o `FileOpen` função deve ser pelo menos dois bytes maior do que o número real de bytes necessários para armazenar a variável.</span><span class="sxs-lookup"><span data-stu-id="8a329-1207">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="8a329-1208">Se a variável que está sendo gravada for um objeto que contém uma cadeia de caracteres, `FilePut` grava um descritor de dois bytes que identifica o `VarType(8)` do objeto, um descritor de dois bytes indicando o comprimento da cadeia de caracteres e, em seguida, grava os dados de cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="8a329-1208">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="8a329-1209">O comprimento do registro especificado pelo `RecordLength` parâmetro o `FileOpen` função deve ser pelo menos quatro bytes maior do que o comprimento real da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="8a329-1209">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="8a329-1210">Caso queira colocar uma cadeia de caracteres sem o descritor, você deve passar `True` para o parâmetro `StringIsFixedLength`, e a cadeia de caracteres lida deve ter o tamanho correto.</span><span class="sxs-lookup"><span data-stu-id="8a329-1210">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="8a329-1211">Caso a variável gravada seja uma matriz, você tem a opção de gravar ou não um descritor para o tamanho e as dimensões da matriz.</span><span class="sxs-lookup"><span data-stu-id="8a329-1211">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="8a329-1212">O descritor de arquivo para uma matriz dinâmica, mas não para uma matriz de tamanho fixo de gravação do Visual Basic 6.0 e versões anteriores.</span><span class="sxs-lookup"><span data-stu-id="8a329-1212">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="8a329-1213">Visual Basic 2005 tem como padrão não gravar o descritor.</span><span class="sxs-lookup"><span data-stu-id="8a329-1213">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="8a329-1214">Para gravar o descritor, defina o `ArrayIsDynamic` parâmetro `True`.</span><span class="sxs-lookup"><span data-stu-id="8a329-1214">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="8a329-1215">Ao escrever a matriz, você precisa comparar a forma com que a matriz será lida; se ela for lida com o descritor, você precisará escrever o descritor.</span><span class="sxs-lookup"><span data-stu-id="8a329-1215">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="8a329-1216">O descritor especifica a classificação de matriz, o tamanho e o limite inferior de cada classificação.</span><span class="sxs-lookup"><span data-stu-id="8a329-1216">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="8a329-1217">Seu comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="8a329-1217">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="8a329-1218">O comprimento do registro especificado pelo `RecordLength` cláusula de `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessários para gravar os dados de matriz e o descritor de matriz.</span><span class="sxs-lookup"><span data-stu-id="8a329-1218">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="8a329-1219">Por exemplo, a seguinte declaração de matriz necessitará de 218 bytes quando a matriz é gravada no disco.</span><span class="sxs-lookup"><span data-stu-id="8a329-1219">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="8a329-1220">Se a variável que está sendo gravada for qualquer outro tipo de variável (não uma cadeia de caracteres de comprimento variável ou um objeto), `FilePut` grava somente os dados da variável.</span><span class="sxs-lookup"><span data-stu-id="8a329-1220">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="8a329-1221">O comprimento do registro especificado pelo `RecordLength` cláusula de `FileOpen` função deve ser maior ou igual ao comprimento dos dados que estão sendo gravados.</span><span class="sxs-lookup"><span data-stu-id="8a329-1221">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="8a329-1222">`FilePut` grava os elementos de estruturas como se cada um fosse escrito individualmente, exceto que não há nenhum preenchimento entre elementos.</span><span class="sxs-lookup"><span data-stu-id="8a329-1222">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="8a329-1223">O `VBFixedString` atributo pode ser aplicado a campos de cadeia de caracteres nas estruturas para indicar o tamanho da cadeia de caracteres quando gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="8a329-1223">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="8a329-1224">Os campos que têm mais bytes do que o especificado pela cadeia de caracteres de `VBFixedString` atributo são truncados quando gravados em disco,</span><span class="sxs-lookup"><span data-stu-id="8a329-1224">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="8a329-1225">Modo binário</span><span class="sxs-lookup"><span data-stu-id="8a329-1225">Binary Mode</span></span>  
 <span data-ttu-id="8a329-1226">Para arquivos abertos no `Binary` modo, a maioria do `Random` modo regras se aplicam, com algumas exceções.</span><span class="sxs-lookup"><span data-stu-id="8a329-1226">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="8a329-1227">As seguintes regras para arquivos abertos no `Binary` modo diferem das regras para `Random` modo:</span><span class="sxs-lookup"><span data-stu-id="8a329-1227">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="8a329-1228">A cláusula `RecordLength` na função de `FileOpen` não está em vigor.</span><span class="sxs-lookup"><span data-stu-id="8a329-1228">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="8a329-1229">`FilePut` grava todas as variáveis em disco de maneira contígua, ou seja, sem preenchimento entre os registros.</span><span class="sxs-lookup"><span data-stu-id="8a329-1229">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="8a329-1230">Para qualquer matriz que não seja uma matriz em uma estrutura, `FilePut` grava somente os dados.</span><span class="sxs-lookup"><span data-stu-id="8a329-1230">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="8a329-1231">Nenhum descritor é escrito.</span><span class="sxs-lookup"><span data-stu-id="8a329-1231">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="8a329-1232">`FilePut` Grava cadeias de caracteres de comprimento variável que não são elementos das estruturas sem o descritor de dois bytes de comprimento.</span><span class="sxs-lookup"><span data-stu-id="8a329-1232">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="8a329-1233">O número de bytes gravados for igual ao número de caracteres na cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="8a329-1233">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="8a329-1234">Por exemplo, as instruções a seguir gravam 11 bytes no arquivo número 1:</span><span class="sxs-lookup"><span data-stu-id="8a329-1234">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="8a329-1235">A gravação em um arquivo usando a função `FilePut` requer o acesso `Write` da enumeração <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="8a329-1235">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a329-1236">Este exemplo usa o `FilePut` função para gravar dados em um arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-1236">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="8a329-1237">Cinco registros da estrutura `Person` são gravados no arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-1237">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8a329-1238"><paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</span><span class="sxs-lookup"><span data-stu-id="8a329-1238"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="8a329-1239">O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="8a329-1239">File mode is invalid.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (int FileNumber, char Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(int32 FileNumber, char Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Char,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Integer, Value As Char, Optional RecordNumber As Long = -1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Char" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="8a329-1240">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-1240">Required.</span></span> <span data-ttu-id="8a329-1241">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="8a329-1241">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="8a329-1242">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-1242">Required.</span></span> <span data-ttu-id="8a329-1243">Nome de variável válido que contém dados gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="8a329-1243">Valid variable name that contains data written to disk.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="8a329-1244">Opcional.</span><span class="sxs-lookup"><span data-stu-id="8a329-1244">Optional.</span></span> <span data-ttu-id="8a329-1245">Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a gravação começa.</span><span class="sxs-lookup"><span data-stu-id="8a329-1245">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span></span></param>
        <summary><span data-ttu-id="8a329-1246">Grava dados de uma variável em um arquivo de disco.</span><span class="sxs-lookup"><span data-stu-id="8a329-1246">Writes data from a variable to a disk file.</span></span> <span data-ttu-id="8a329-1247">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FilePut" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-1247">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span></span> <span data-ttu-id="8a329-1248">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-1248">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a329-1249">`FilePut` só é válido em `Random` e `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="8a329-1249">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="8a329-1250">Dados gravados com `FilePut` costumam ser lidos a partir de um arquivo usando `FileGet`.</span><span class="sxs-lookup"><span data-stu-id="8a329-1250">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="8a329-1251">O primeiro registro ou byte em um arquivo está na posição 1, o segundo registro ou byte está na posição 2 e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="8a329-1251">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="8a329-1252">Se você omitir `RecordNumber`, o próximo registro ou byte após a última `FileGet` ou `FilePut` de função ou apontado pela última `Seek` função é gravada.</span><span class="sxs-lookup"><span data-stu-id="8a329-1252">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="8a329-1253">O argumento `StringIsFixedLength` controla se a função interpreta cadeias de caracteres como sendo de tamanho variável ou fixo.</span><span class="sxs-lookup"><span data-stu-id="8a329-1253">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="8a329-1254">`FilePut` não grava o descritor do tamanho quando o argumento é `True`.</span><span class="sxs-lookup"><span data-stu-id="8a329-1254">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="8a329-1255">Se você usar `StringIsFixedLength`  =  `True` com `FilePut`, você deve fazer o mesmo com `FileGet`, e você precisa certificar-se de que a cadeia de caracteres é inicializada com o tamanho esperado.</span><span class="sxs-lookup"><span data-stu-id="8a329-1255">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="8a329-1256">Modo aleatório</span><span class="sxs-lookup"><span data-stu-id="8a329-1256">Random Mode</span></span>  
 <span data-ttu-id="8a329-1257">Para arquivos abertos no `Random` modo, as seguintes regras se aplicam:</span><span class="sxs-lookup"><span data-stu-id="8a329-1257">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="8a329-1258">Se o comprimento dos dados que estão sendo gravados for menor que o comprimento especificado no `RecordLength` cláusula do `FileOpen` função `FilePut` grava registros subsequentes em limites de comprimento de registro.</span><span class="sxs-lookup"><span data-stu-id="8a329-1258">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="8a329-1259">O espaço entre o final de um registro e o início do próximo registro é preenchido com o conteúdo existente no buffer de arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-1259">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="8a329-1260">Porque a quantidade de dados não pode ser determinada com certeza, geralmente é recomendável ter o comprimento do registro corresponde ao tamanho dos dados que estão sendo gravados.</span><span class="sxs-lookup"><span data-stu-id="8a329-1260">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="8a329-1261">Se o comprimento dos dados que estão sendo gravados for maior do que o comprimento especificado no `RecordLength` cláusula do `FileOpen` função, uma exceção será lançada.</span><span class="sxs-lookup"><span data-stu-id="8a329-1261">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="8a329-1262">Caso a variável que está sendo gravada seja uma cadeia de caracteres, `FilePut` grava um descritor de dois bytes que contém o tamanho da cadeia de caracteres e, em seguida, grava os dados que vão para a variável.</span><span class="sxs-lookup"><span data-stu-id="8a329-1262">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="8a329-1263">Portanto, o comprimento do registro especificado pelo `RecordLength` cláusula de `FileOpen` função deve ser pelo menos dois bytes maior do que o comprimento real da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="8a329-1263">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="8a329-1264">Caso a variável que está sendo gravada seja um objeto que contém um tipo numérico, `FilePut` grava dois bytes que identificam o `VarType` do objeto e, em seguida, grava a variável.</span><span class="sxs-lookup"><span data-stu-id="8a329-1264">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="8a329-1265">Por exemplo, ao escrever um objeto que contém um número inteiro, `FilePut` grava seis bytes: dois bytes que identificam o objeto como `VarType(3)` (`Integer`) e quatro bytes que contêm os dados.</span><span class="sxs-lookup"><span data-stu-id="8a329-1265">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="8a329-1266">O comprimento do registro especificado pelo `RecordLength` parâmetro o `FileOpen` função deve ser pelo menos dois bytes maior do que o número real de bytes necessários para armazenar a variável.</span><span class="sxs-lookup"><span data-stu-id="8a329-1266">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="8a329-1267">Se a variável que está sendo gravada for um objeto que contém uma cadeia de caracteres, `FilePut` grava um descritor de dois bytes que identifica o `VarType(8)` do objeto, um descritor de dois bytes indicando o comprimento da cadeia de caracteres e, em seguida, grava os dados de cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="8a329-1267">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="8a329-1268">O comprimento do registro especificado pelo `RecordLength` parâmetro o `FileOpen` função deve ser pelo menos quatro bytes maior do que o comprimento real da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="8a329-1268">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="8a329-1269">Caso queira colocar uma cadeia de caracteres sem o descritor, você deve passar `True` para o parâmetro `StringIsFixedLength`, e a cadeia de caracteres lida deve ter o tamanho correto.</span><span class="sxs-lookup"><span data-stu-id="8a329-1269">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="8a329-1270">Caso a variável gravada seja uma matriz, você tem a opção de gravar ou não um descritor para o tamanho e as dimensões da matriz.</span><span class="sxs-lookup"><span data-stu-id="8a329-1270">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="8a329-1271">O descritor de arquivo para uma matriz dinâmica, mas não para uma matriz de tamanho fixo de gravação do Visual Basic 6.0 e versões anteriores.</span><span class="sxs-lookup"><span data-stu-id="8a329-1271">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="8a329-1272">Visual Basic 2005 tem como padrão não gravar o descritor.</span><span class="sxs-lookup"><span data-stu-id="8a329-1272">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="8a329-1273">Para gravar o descritor, defina o `ArrayIsDynamic` parâmetro `True`.</span><span class="sxs-lookup"><span data-stu-id="8a329-1273">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="8a329-1274">Ao escrever a matriz, você precisa comparar a forma com que a matriz será lida; se ela for lida com o descritor, você precisará escrever o descritor.</span><span class="sxs-lookup"><span data-stu-id="8a329-1274">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="8a329-1275">O descritor especifica a classificação de matriz, o tamanho e o limite inferior de cada classificação.</span><span class="sxs-lookup"><span data-stu-id="8a329-1275">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="8a329-1276">Seu comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="8a329-1276">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="8a329-1277">O comprimento do registro especificado pelo `RecordLength` cláusula de `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessários para gravar os dados de matriz e o descritor de matriz.</span><span class="sxs-lookup"><span data-stu-id="8a329-1277">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="8a329-1278">Por exemplo, a seguinte declaração de matriz necessitará de 218 bytes quando a matriz é gravada no disco.</span><span class="sxs-lookup"><span data-stu-id="8a329-1278">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="8a329-1279">Se a variável que está sendo gravada for qualquer outro tipo de variável (não uma cadeia de caracteres de comprimento variável ou um objeto), `FilePut` grava somente os dados da variável.</span><span class="sxs-lookup"><span data-stu-id="8a329-1279">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="8a329-1280">O comprimento do registro especificado pelo `RecordLength` cláusula de `FileOpen` função deve ser maior ou igual ao comprimento dos dados que estão sendo gravados.</span><span class="sxs-lookup"><span data-stu-id="8a329-1280">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="8a329-1281">`FilePut` grava os elementos de estruturas como se cada um fosse escrito individualmente, exceto que não há nenhum preenchimento entre elementos.</span><span class="sxs-lookup"><span data-stu-id="8a329-1281">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="8a329-1282">O `VBFixedString` atributo pode ser aplicado a campos de cadeia de caracteres nas estruturas para indicar o tamanho da cadeia de caracteres quando gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="8a329-1282">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="8a329-1283">Os campos que têm mais bytes do que o especificado pela cadeia de caracteres de `VBFixedString` atributo são truncados quando gravados em disco,</span><span class="sxs-lookup"><span data-stu-id="8a329-1283">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="8a329-1284">Modo binário</span><span class="sxs-lookup"><span data-stu-id="8a329-1284">Binary Mode</span></span>  
 <span data-ttu-id="8a329-1285">Para arquivos abertos no `Binary` modo, a maioria do `Random` modo regras se aplicam, com algumas exceções.</span><span class="sxs-lookup"><span data-stu-id="8a329-1285">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="8a329-1286">As seguintes regras para arquivos abertos no `Binary` modo diferem das regras para `Random` modo:</span><span class="sxs-lookup"><span data-stu-id="8a329-1286">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="8a329-1287">A cláusula `RecordLength` na função de `FileOpen` não está em vigor.</span><span class="sxs-lookup"><span data-stu-id="8a329-1287">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="8a329-1288">`FilePut` grava todas as variáveis em disco de maneira contígua, ou seja, sem preenchimento entre os registros.</span><span class="sxs-lookup"><span data-stu-id="8a329-1288">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="8a329-1289">Para qualquer matriz que não seja uma matriz em uma estrutura, `FilePut` grava somente os dados.</span><span class="sxs-lookup"><span data-stu-id="8a329-1289">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="8a329-1290">Nenhum descritor é escrito.</span><span class="sxs-lookup"><span data-stu-id="8a329-1290">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="8a329-1291">`FilePut` Grava cadeias de caracteres de comprimento variável que não são elementos das estruturas sem o descritor de dois bytes de comprimento.</span><span class="sxs-lookup"><span data-stu-id="8a329-1291">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="8a329-1292">O número de bytes gravados for igual ao número de caracteres na cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="8a329-1292">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="8a329-1293">Por exemplo, as instruções a seguir gravam 11 bytes no arquivo número 1:</span><span class="sxs-lookup"><span data-stu-id="8a329-1293">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="8a329-1294">A gravação em um arquivo usando a função `FilePut` requer o acesso `Write` da enumeração <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="8a329-1294">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a329-1295">Este exemplo usa o `FilePut` função para gravar dados em um arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-1295">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="8a329-1296">Cinco registros da estrutura `Person` são gravados no arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-1296">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8a329-1297"><paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</span><span class="sxs-lookup"><span data-stu-id="8a329-1297"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="8a329-1298">O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="8a329-1298">File mode is invalid.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (int FileNumber, DateTime Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(int32 FileNumber, valuetype System.DateTime Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.DateTime,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Integer, Value As DateTime, Optional RecordNumber As Long = -1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.DateTime" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="8a329-1299">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-1299">Required.</span></span> <span data-ttu-id="8a329-1300">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="8a329-1300">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="8a329-1301">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-1301">Required.</span></span> <span data-ttu-id="8a329-1302">Nome de variável válido que contém dados gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="8a329-1302">Valid variable name that contains data written to disk.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="8a329-1303">Opcional.</span><span class="sxs-lookup"><span data-stu-id="8a329-1303">Optional.</span></span> <span data-ttu-id="8a329-1304">Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a gravação começa.</span><span class="sxs-lookup"><span data-stu-id="8a329-1304">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span></span></param>
        <summary><span data-ttu-id="8a329-1305">Grava dados de uma variável em um arquivo de disco.</span><span class="sxs-lookup"><span data-stu-id="8a329-1305">Writes data from a variable to a disk file.</span></span> <span data-ttu-id="8a329-1306">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FilePut" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-1306">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span></span> <span data-ttu-id="8a329-1307">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-1307">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a329-1308">`FilePut` só é válido em `Random` e `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="8a329-1308">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="8a329-1309">Dados gravados com `FilePut` costumam ser lidos a partir de um arquivo usando `FileGet`.</span><span class="sxs-lookup"><span data-stu-id="8a329-1309">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="8a329-1310">O primeiro registro ou byte em um arquivo está na posição 1, o segundo registro ou byte está na posição 2 e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="8a329-1310">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="8a329-1311">Se você omitir `RecordNumber`, o próximo registro ou byte após a última `FileGet` ou `FilePut` de função ou apontado pela última `Seek` função é gravada.</span><span class="sxs-lookup"><span data-stu-id="8a329-1311">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="8a329-1312">O argumento `StringIsFixedLength` controla se a função interpreta cadeias de caracteres como sendo de tamanho variável ou fixo.</span><span class="sxs-lookup"><span data-stu-id="8a329-1312">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="8a329-1313">`FilePut` não grava o descritor do tamanho quando o argumento é `True`.</span><span class="sxs-lookup"><span data-stu-id="8a329-1313">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="8a329-1314">Se você usar `StringIsFixedLength`  =  `True` com `FilePut`, você deve fazer o mesmo com `FileGet`, e você precisa certificar-se de que a cadeia de caracteres é inicializada com o tamanho esperado.</span><span class="sxs-lookup"><span data-stu-id="8a329-1314">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="8a329-1315">Modo aleatório</span><span class="sxs-lookup"><span data-stu-id="8a329-1315">Random Mode</span></span>  
 <span data-ttu-id="8a329-1316">Para arquivos abertos no `Random` modo, as seguintes regras se aplicam:</span><span class="sxs-lookup"><span data-stu-id="8a329-1316">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="8a329-1317">Se o comprimento dos dados que estão sendo gravados for menor que o comprimento especificado no `RecordLength` cláusula do `FileOpen` função `FilePut` grava registros subsequentes em limites de comprimento de registro.</span><span class="sxs-lookup"><span data-stu-id="8a329-1317">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="8a329-1318">O espaço entre o final de um registro e o início do próximo registro é preenchido com o conteúdo existente no buffer de arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-1318">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="8a329-1319">Porque a quantidade de dados não pode ser determinada com certeza, geralmente é recomendável ter o comprimento do registro corresponde ao tamanho dos dados que estão sendo gravados.</span><span class="sxs-lookup"><span data-stu-id="8a329-1319">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="8a329-1320">Se o comprimento dos dados que estão sendo gravados for maior do que o comprimento especificado no `RecordLength` cláusula do `FileOpen` função, uma exceção será lançada.</span><span class="sxs-lookup"><span data-stu-id="8a329-1320">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="8a329-1321">Caso a variável que está sendo gravada seja uma cadeia de caracteres, `FilePut` grava um descritor de dois bytes que contém o tamanho da cadeia de caracteres e, em seguida, grava os dados que vão para a variável.</span><span class="sxs-lookup"><span data-stu-id="8a329-1321">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="8a329-1322">Portanto, o comprimento do registro especificado pelo `RecordLength` cláusula de `FileOpen` função deve ser pelo menos dois bytes maior do que o comprimento real da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="8a329-1322">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="8a329-1323">Caso a variável que está sendo gravada seja um objeto que contém um tipo numérico, `FilePut` grava dois bytes que identificam o `VarType` do objeto e, em seguida, grava a variável.</span><span class="sxs-lookup"><span data-stu-id="8a329-1323">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="8a329-1324">Por exemplo, ao escrever um objeto que contém um número inteiro, `FilePut` grava seis bytes: dois bytes que identificam o objeto como `VarType(3)` (`Integer`) e quatro bytes que contêm os dados.</span><span class="sxs-lookup"><span data-stu-id="8a329-1324">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="8a329-1325">O comprimento do registro especificado pelo `RecordLength` parâmetro o `FileOpen` função deve ser pelo menos dois bytes maior do que o número real de bytes necessários para armazenar a variável.</span><span class="sxs-lookup"><span data-stu-id="8a329-1325">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="8a329-1326">Se a variável que está sendo gravada for um objeto que contém uma cadeia de caracteres, `FilePut` grava um descritor de dois bytes que identifica o `VarType(8)` do objeto, um descritor de dois bytes indicando o comprimento da cadeia de caracteres e, em seguida, grava os dados de cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="8a329-1326">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="8a329-1327">O comprimento do registro especificado pelo `RecordLength` parâmetro o `FileOpen` função deve ser pelo menos quatro bytes maior do que o comprimento real da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="8a329-1327">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="8a329-1328">Caso queira colocar uma cadeia de caracteres sem o descritor, você deve passar `True` para o parâmetro `StringIsFixedLength`, e a cadeia de caracteres lida deve ter o tamanho correto.</span><span class="sxs-lookup"><span data-stu-id="8a329-1328">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="8a329-1329">Caso a variável gravada seja uma matriz, você tem a opção de gravar ou não um descritor para o tamanho e as dimensões da matriz.</span><span class="sxs-lookup"><span data-stu-id="8a329-1329">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="8a329-1330">O descritor de arquivo para uma matriz dinâmica, mas não para uma matriz de tamanho fixo de gravação do Visual Basic 6.0 e versões anteriores.</span><span class="sxs-lookup"><span data-stu-id="8a329-1330">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="8a329-1331">Visual Basic 2005 tem como padrão não gravar o descritor.</span><span class="sxs-lookup"><span data-stu-id="8a329-1331">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="8a329-1332">Para gravar o descritor, defina o `ArrayIsDynamic` parâmetro `True`.</span><span class="sxs-lookup"><span data-stu-id="8a329-1332">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="8a329-1333">Ao escrever a matriz, você precisa comparar a forma com que a matriz será lida; se ela for lida com o descritor, você precisará escrever o descritor.</span><span class="sxs-lookup"><span data-stu-id="8a329-1333">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="8a329-1334">O descritor especifica a classificação de matriz, o tamanho e o limite inferior de cada classificação.</span><span class="sxs-lookup"><span data-stu-id="8a329-1334">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="8a329-1335">Seu comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="8a329-1335">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="8a329-1336">O comprimento do registro especificado pelo `RecordLength` cláusula de `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessários para gravar os dados de matriz e o descritor de matriz.</span><span class="sxs-lookup"><span data-stu-id="8a329-1336">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="8a329-1337">Por exemplo, a seguinte declaração de matriz necessitará de 218 bytes quando a matriz é gravada no disco.</span><span class="sxs-lookup"><span data-stu-id="8a329-1337">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="8a329-1338">Se a variável que está sendo gravada for qualquer outro tipo de variável (não uma cadeia de caracteres de comprimento variável ou um objeto), `FilePut` grava somente os dados da variável.</span><span class="sxs-lookup"><span data-stu-id="8a329-1338">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="8a329-1339">O comprimento do registro especificado pelo `RecordLength` cláusula de `FileOpen` função deve ser maior ou igual ao comprimento dos dados que estão sendo gravados.</span><span class="sxs-lookup"><span data-stu-id="8a329-1339">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="8a329-1340">`FilePut` grava os elementos de estruturas como se cada um fosse escrito individualmente, exceto que não há nenhum preenchimento entre elementos.</span><span class="sxs-lookup"><span data-stu-id="8a329-1340">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="8a329-1341">O `VBFixedString` atributo pode ser aplicado a campos de cadeia de caracteres nas estruturas para indicar o tamanho da cadeia de caracteres quando gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="8a329-1341">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="8a329-1342">Os campos que têm mais bytes do que o especificado pela cadeia de caracteres de `VBFixedString` atributo são truncados quando gravados em disco,</span><span class="sxs-lookup"><span data-stu-id="8a329-1342">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="8a329-1343">Modo binário</span><span class="sxs-lookup"><span data-stu-id="8a329-1343">Binary Mode</span></span>  
 <span data-ttu-id="8a329-1344">Para arquivos abertos no `Binary` modo, a maioria do `Random` modo regras se aplicam, com algumas exceções.</span><span class="sxs-lookup"><span data-stu-id="8a329-1344">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="8a329-1345">As seguintes regras para arquivos abertos no `Binary` modo diferem das regras para `Random` modo:</span><span class="sxs-lookup"><span data-stu-id="8a329-1345">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="8a329-1346">A cláusula `RecordLength` na função de `FileOpen` não está em vigor.</span><span class="sxs-lookup"><span data-stu-id="8a329-1346">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="8a329-1347">`FilePut` grava todas as variáveis em disco de maneira contígua, ou seja, sem preenchimento entre os registros.</span><span class="sxs-lookup"><span data-stu-id="8a329-1347">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="8a329-1348">Para qualquer matriz que não seja uma matriz em uma estrutura, `FilePut` grava somente os dados.</span><span class="sxs-lookup"><span data-stu-id="8a329-1348">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="8a329-1349">Nenhum descritor é escrito.</span><span class="sxs-lookup"><span data-stu-id="8a329-1349">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="8a329-1350">`FilePut` Grava cadeias de caracteres de comprimento variável que não são elementos das estruturas sem o descritor de dois bytes de comprimento.</span><span class="sxs-lookup"><span data-stu-id="8a329-1350">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="8a329-1351">O número de bytes gravados for igual ao número de caracteres na cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="8a329-1351">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="8a329-1352">Por exemplo, as instruções a seguir gravam 11 bytes no arquivo número 1:</span><span class="sxs-lookup"><span data-stu-id="8a329-1352">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="8a329-1353">A gravação em um arquivo usando a função `FilePut` requer o acesso `Write` da enumeração <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="8a329-1353">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a329-1354">Este exemplo usa o `FilePut` função para gravar dados em um arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-1354">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="8a329-1355">Cinco registros da estrutura `Person` são gravados no arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-1355">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8a329-1356"><paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</span><span class="sxs-lookup"><span data-stu-id="8a329-1356"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="8a329-1357">O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="8a329-1357">File mode is invalid.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (int FileNumber, decimal Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(int32 FileNumber, valuetype System.Decimal Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Decimal,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Integer, Value As Decimal, Optional RecordNumber As Long = -1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Decimal" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="8a329-1358">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-1358">Required.</span></span> <span data-ttu-id="8a329-1359">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="8a329-1359">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="8a329-1360">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-1360">Required.</span></span> <span data-ttu-id="8a329-1361">Nome de variável válido que contém dados gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="8a329-1361">Valid variable name that contains data written to disk.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="8a329-1362">Opcional.</span><span class="sxs-lookup"><span data-stu-id="8a329-1362">Optional.</span></span> <span data-ttu-id="8a329-1363">Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a gravação começa.</span><span class="sxs-lookup"><span data-stu-id="8a329-1363">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span></span></param>
        <summary><span data-ttu-id="8a329-1364">Grava dados de uma variável em um arquivo de disco.</span><span class="sxs-lookup"><span data-stu-id="8a329-1364">Writes data from a variable to a disk file.</span></span> <span data-ttu-id="8a329-1365">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FilePut" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-1365">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span></span> <span data-ttu-id="8a329-1366">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-1366">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a329-1367">`FilePut` só é válido em `Random` e `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="8a329-1367">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="8a329-1368">Dados gravados com `FilePut` costumam ser lidos a partir de um arquivo usando `FileGet`.</span><span class="sxs-lookup"><span data-stu-id="8a329-1368">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="8a329-1369">O primeiro registro ou byte em um arquivo está na posição 1, o segundo registro ou byte está na posição 2 e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="8a329-1369">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="8a329-1370">Se você omitir `RecordNumber`, o próximo registro ou byte após a última `FileGet` ou `FilePut` de função ou apontado pela última `Seek` função é gravada.</span><span class="sxs-lookup"><span data-stu-id="8a329-1370">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="8a329-1371">O argumento `StringIsFixedLength` controla se a função interpreta cadeias de caracteres como sendo de tamanho variável ou fixo.</span><span class="sxs-lookup"><span data-stu-id="8a329-1371">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="8a329-1372">`FilePut` não grava o descritor do tamanho quando o argumento é `True`.</span><span class="sxs-lookup"><span data-stu-id="8a329-1372">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="8a329-1373">Se você usar `StringIsFixedLength`  =  `True` com `FilePut`, você deve fazer o mesmo com `FileGet`, e você precisa certificar-se de que a cadeia de caracteres é inicializada com o tamanho esperado.</span><span class="sxs-lookup"><span data-stu-id="8a329-1373">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="8a329-1374">Modo aleatório</span><span class="sxs-lookup"><span data-stu-id="8a329-1374">Random Mode</span></span>  
 <span data-ttu-id="8a329-1375">Para arquivos abertos no `Random` modo, as seguintes regras se aplicam:</span><span class="sxs-lookup"><span data-stu-id="8a329-1375">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="8a329-1376">Se o comprimento dos dados que estão sendo gravados for menor que o comprimento especificado no `RecordLength` cláusula do `FileOpen` função `FilePut` grava registros subsequentes em limites de comprimento de registro.</span><span class="sxs-lookup"><span data-stu-id="8a329-1376">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="8a329-1377">O espaço entre o final de um registro e o início do próximo registro é preenchido com o conteúdo existente no buffer de arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-1377">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="8a329-1378">Porque a quantidade de dados não pode ser determinada com certeza, geralmente é recomendável ter o comprimento do registro corresponde ao tamanho dos dados que estão sendo gravados.</span><span class="sxs-lookup"><span data-stu-id="8a329-1378">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="8a329-1379">Se o comprimento dos dados que estão sendo gravados for maior do que o comprimento especificado no `RecordLength` cláusula do `FileOpen` função, uma exceção será lançada.</span><span class="sxs-lookup"><span data-stu-id="8a329-1379">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="8a329-1380">Caso a variável que está sendo gravada seja uma cadeia de caracteres, `FilePut` grava um descritor de dois bytes que contém o tamanho da cadeia de caracteres e, em seguida, grava os dados que vão para a variável.</span><span class="sxs-lookup"><span data-stu-id="8a329-1380">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="8a329-1381">Portanto, o comprimento do registro especificado pelo `RecordLength` cláusula de `FileOpen` função deve ser pelo menos dois bytes maior do que o comprimento real da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="8a329-1381">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="8a329-1382">Caso a variável que está sendo gravada seja um objeto que contém um tipo numérico, `FilePut` grava dois bytes que identificam o `VarType` do objeto e, em seguida, grava a variável.</span><span class="sxs-lookup"><span data-stu-id="8a329-1382">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="8a329-1383">Por exemplo, ao escrever um objeto que contém um número inteiro, `FilePut` grava seis bytes: dois bytes que identificam o objeto como `VarType(3)` (`Integer`) e quatro bytes que contêm os dados.</span><span class="sxs-lookup"><span data-stu-id="8a329-1383">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="8a329-1384">O comprimento do registro especificado pelo `RecordLength` parâmetro o `FileOpen` função deve ser pelo menos dois bytes maior do que o número real de bytes necessários para armazenar a variável.</span><span class="sxs-lookup"><span data-stu-id="8a329-1384">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="8a329-1385">Se a variável que está sendo gravada for um objeto que contém uma cadeia de caracteres, `FilePut` grava um descritor de dois bytes que identifica o `VarType(8)` do objeto, um descritor de dois bytes indicando o comprimento da cadeia de caracteres e, em seguida, grava os dados de cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="8a329-1385">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="8a329-1386">O comprimento do registro especificado pelo `RecordLength` parâmetro o `FileOpen` função deve ser pelo menos quatro bytes maior do que o comprimento real da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="8a329-1386">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="8a329-1387">Caso queira colocar uma cadeia de caracteres sem o descritor, você deve passar `True` para o parâmetro `StringIsFixedLength`, e a cadeia de caracteres lida deve ter o tamanho correto.</span><span class="sxs-lookup"><span data-stu-id="8a329-1387">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="8a329-1388">Caso a variável gravada seja uma matriz, você tem a opção de gravar ou não um descritor para o tamanho e as dimensões da matriz.</span><span class="sxs-lookup"><span data-stu-id="8a329-1388">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="8a329-1389">O descritor de arquivo para uma matriz dinâmica, mas não para uma matriz de tamanho fixo de gravação do Visual Basic 6.0 e versões anteriores.</span><span class="sxs-lookup"><span data-stu-id="8a329-1389">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="8a329-1390">Visual Basic 2005 tem como padrão não gravar o descritor.</span><span class="sxs-lookup"><span data-stu-id="8a329-1390">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="8a329-1391">Para gravar o descritor, defina o `ArrayIsDynamic` parâmetro `True`.</span><span class="sxs-lookup"><span data-stu-id="8a329-1391">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="8a329-1392">Ao escrever a matriz, você precisa comparar a forma com que a matriz será lida; se ela for lida com o descritor, você precisará escrever o descritor.</span><span class="sxs-lookup"><span data-stu-id="8a329-1392">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="8a329-1393">O descritor especifica a classificação de matriz, o tamanho e o limite inferior de cada classificação.</span><span class="sxs-lookup"><span data-stu-id="8a329-1393">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="8a329-1394">Seu comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="8a329-1394">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="8a329-1395">O comprimento do registro especificado pelo `RecordLength` cláusula de `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessários para gravar os dados de matriz e o descritor de matriz.</span><span class="sxs-lookup"><span data-stu-id="8a329-1395">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="8a329-1396">Por exemplo, a seguinte declaração de matriz necessitará de 218 bytes quando a matriz é gravada no disco.</span><span class="sxs-lookup"><span data-stu-id="8a329-1396">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="8a329-1397">Se a variável que está sendo gravada for qualquer outro tipo de variável (não uma cadeia de caracteres de comprimento variável ou um objeto), `FilePut` grava somente os dados da variável.</span><span class="sxs-lookup"><span data-stu-id="8a329-1397">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="8a329-1398">O comprimento do registro especificado pelo `RecordLength` cláusula de `FileOpen` função deve ser maior ou igual ao comprimento dos dados que estão sendo gravados.</span><span class="sxs-lookup"><span data-stu-id="8a329-1398">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="8a329-1399">`FilePut` grava os elementos de estruturas como se cada um fosse escrito individualmente, exceto que não há nenhum preenchimento entre elementos.</span><span class="sxs-lookup"><span data-stu-id="8a329-1399">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="8a329-1400">O `VBFixedString` atributo pode ser aplicado a campos de cadeia de caracteres nas estruturas para indicar o tamanho da cadeia de caracteres quando gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="8a329-1400">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="8a329-1401">Os campos que têm mais bytes do que o especificado pela cadeia de caracteres de `VBFixedString` atributo são truncados quando gravados em disco,</span><span class="sxs-lookup"><span data-stu-id="8a329-1401">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="8a329-1402">Modo binário</span><span class="sxs-lookup"><span data-stu-id="8a329-1402">Binary Mode</span></span>  
 <span data-ttu-id="8a329-1403">Para arquivos abertos no `Binary` modo, a maioria do `Random` modo regras se aplicam, com algumas exceções.</span><span class="sxs-lookup"><span data-stu-id="8a329-1403">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="8a329-1404">As seguintes regras para arquivos abertos no `Binary` modo diferem das regras para `Random` modo:</span><span class="sxs-lookup"><span data-stu-id="8a329-1404">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="8a329-1405">A cláusula `RecordLength` na função de `FileOpen` não está em vigor.</span><span class="sxs-lookup"><span data-stu-id="8a329-1405">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="8a329-1406">`FilePut` grava todas as variáveis em disco de maneira contígua, ou seja, sem preenchimento entre os registros.</span><span class="sxs-lookup"><span data-stu-id="8a329-1406">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="8a329-1407">Para qualquer matriz que não seja uma matriz em uma estrutura, `FilePut` grava somente os dados.</span><span class="sxs-lookup"><span data-stu-id="8a329-1407">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="8a329-1408">Nenhum descritor é escrito.</span><span class="sxs-lookup"><span data-stu-id="8a329-1408">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="8a329-1409">`FilePut` Grava cadeias de caracteres de comprimento variável que não são elementos das estruturas sem o descritor de dois bytes de comprimento.</span><span class="sxs-lookup"><span data-stu-id="8a329-1409">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="8a329-1410">O número de bytes gravados for igual ao número de caracteres na cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="8a329-1410">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="8a329-1411">Por exemplo, as instruções a seguir gravam 11 bytes no arquivo número 1:</span><span class="sxs-lookup"><span data-stu-id="8a329-1411">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="8a329-1412">A gravação em um arquivo usando a função `FilePut` requer o acesso `Write` da enumeração <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="8a329-1412">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a329-1413">Este exemplo usa o `FilePut` função para gravar dados em um arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-1413">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="8a329-1414">Cinco registros da estrutura `Person` são gravados no arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-1414">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8a329-1415"><paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</span><span class="sxs-lookup"><span data-stu-id="8a329-1415"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="8a329-1416">O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="8a329-1416">File mode is invalid.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (int FileNumber, double Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(int32 FileNumber, float64 Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Double,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Integer, Value As Double, Optional RecordNumber As Long = -1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Double" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="8a329-1417">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-1417">Required.</span></span> <span data-ttu-id="8a329-1418">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="8a329-1418">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="8a329-1419">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-1419">Required.</span></span> <span data-ttu-id="8a329-1420">Nome de variável válido que contém dados gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="8a329-1420">Valid variable name that contains data written to disk.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="8a329-1421">Opcional.</span><span class="sxs-lookup"><span data-stu-id="8a329-1421">Optional.</span></span> <span data-ttu-id="8a329-1422">Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a gravação começa.</span><span class="sxs-lookup"><span data-stu-id="8a329-1422">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span></span></param>
        <summary><span data-ttu-id="8a329-1423">Grava dados de uma variável em um arquivo de disco.</span><span class="sxs-lookup"><span data-stu-id="8a329-1423">Writes data from a variable to a disk file.</span></span> <span data-ttu-id="8a329-1424">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FilePut" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-1424">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span></span> <span data-ttu-id="8a329-1425">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-1425">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a329-1426">`FilePut` só é válido em `Random` e `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="8a329-1426">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="8a329-1427">Dados gravados com `FilePut` costumam ser lidos a partir de um arquivo usando `FileGet`.</span><span class="sxs-lookup"><span data-stu-id="8a329-1427">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="8a329-1428">O primeiro registro ou byte em um arquivo está na posição 1, o segundo registro ou byte está na posição 2 e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="8a329-1428">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="8a329-1429">Se você omitir `RecordNumber`, o próximo registro ou byte após a última `FileGet` ou `FilePut` de função ou apontado pela última `Seek` função é gravada.</span><span class="sxs-lookup"><span data-stu-id="8a329-1429">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="8a329-1430">O argumento `StringIsFixedLength` controla se a função interpreta cadeias de caracteres como sendo de tamanho variável ou fixo.</span><span class="sxs-lookup"><span data-stu-id="8a329-1430">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="8a329-1431">`FilePut` não grava o descritor do tamanho quando o argumento é `True`.</span><span class="sxs-lookup"><span data-stu-id="8a329-1431">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="8a329-1432">Se você usar `StringIsFixedLength`  =  `True` com `FilePut`, você deve fazer o mesmo com `FileGet`, e você precisa certificar-se de que a cadeia de caracteres é inicializada com o tamanho esperado.</span><span class="sxs-lookup"><span data-stu-id="8a329-1432">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="8a329-1433">Modo aleatório</span><span class="sxs-lookup"><span data-stu-id="8a329-1433">Random Mode</span></span>  
 <span data-ttu-id="8a329-1434">Para arquivos abertos no `Random` modo, as seguintes regras se aplicam:</span><span class="sxs-lookup"><span data-stu-id="8a329-1434">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="8a329-1435">Se o comprimento dos dados que estão sendo gravados for menor que o comprimento especificado no `RecordLength` cláusula do `FileOpen` função `FilePut` grava registros subsequentes em limites de comprimento de registro.</span><span class="sxs-lookup"><span data-stu-id="8a329-1435">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="8a329-1436">O espaço entre o final de um registro e o início do próximo registro é preenchido com o conteúdo existente no buffer de arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-1436">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="8a329-1437">Porque a quantidade de dados não pode ser determinada com certeza, geralmente é recomendável ter o comprimento do registro corresponde ao tamanho dos dados que estão sendo gravados.</span><span class="sxs-lookup"><span data-stu-id="8a329-1437">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="8a329-1438">Se o comprimento dos dados que estão sendo gravados for maior do que o comprimento especificado no `RecordLength` cláusula do `FileOpen` função, uma exceção será lançada.</span><span class="sxs-lookup"><span data-stu-id="8a329-1438">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="8a329-1439">Caso a variável que está sendo gravada seja uma cadeia de caracteres, `FilePut` grava um descritor de dois bytes que contém o tamanho da cadeia de caracteres e, em seguida, grava os dados que vão para a variável.</span><span class="sxs-lookup"><span data-stu-id="8a329-1439">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="8a329-1440">Portanto, o comprimento do registro especificado pelo `RecordLength` cláusula de `FileOpen` função deve ser pelo menos dois bytes maior do que o comprimento real da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="8a329-1440">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="8a329-1441">Caso a variável que está sendo gravada seja um objeto que contém um tipo numérico, `FilePut` grava dois bytes que identificam o `VarType` do objeto e, em seguida, grava a variável.</span><span class="sxs-lookup"><span data-stu-id="8a329-1441">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="8a329-1442">Por exemplo, ao escrever um objeto que contém um número inteiro, `FilePut` grava seis bytes: dois bytes que identificam o objeto como `VarType(3)` (`Integer`) e quatro bytes que contêm os dados.</span><span class="sxs-lookup"><span data-stu-id="8a329-1442">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="8a329-1443">O comprimento do registro especificado pelo `RecordLength` parâmetro o `FileOpen` função deve ser pelo menos dois bytes maior do que o número real de bytes necessários para armazenar a variável.</span><span class="sxs-lookup"><span data-stu-id="8a329-1443">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="8a329-1444">Se a variável que está sendo gravada for um objeto que contém uma cadeia de caracteres, `FilePut` grava um descritor de dois bytes que identifica o `VarType(8)` do objeto, um descritor de dois bytes indicando o comprimento da cadeia de caracteres e, em seguida, grava os dados de cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="8a329-1444">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="8a329-1445">O comprimento do registro especificado pelo `RecordLength` parâmetro o `FileOpen` função deve ser pelo menos quatro bytes maior do que o comprimento real da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="8a329-1445">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="8a329-1446">Caso queira colocar uma cadeia de caracteres sem o descritor, você deve passar `True` para o parâmetro `StringIsFixedLength`, e a cadeia de caracteres lida deve ter o tamanho correto.</span><span class="sxs-lookup"><span data-stu-id="8a329-1446">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="8a329-1447">Caso a variável gravada seja uma matriz, você tem a opção de gravar ou não um descritor para o tamanho e as dimensões da matriz.</span><span class="sxs-lookup"><span data-stu-id="8a329-1447">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="8a329-1448">O descritor de arquivo para uma matriz dinâmica, mas não para uma matriz de tamanho fixo de gravação do Visual Basic 6.0 e versões anteriores.</span><span class="sxs-lookup"><span data-stu-id="8a329-1448">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="8a329-1449">Visual Basic 2005 tem como padrão não gravar o descritor.</span><span class="sxs-lookup"><span data-stu-id="8a329-1449">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="8a329-1450">Para gravar o descritor, defina o `ArrayIsDynamic` parâmetro `True`.</span><span class="sxs-lookup"><span data-stu-id="8a329-1450">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="8a329-1451">Ao escrever a matriz, você precisa comparar a forma com que a matriz será lida; se ela for lida com o descritor, você precisará escrever o descritor.</span><span class="sxs-lookup"><span data-stu-id="8a329-1451">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="8a329-1452">O descritor especifica a classificação de matriz, o tamanho e o limite inferior de cada classificação.</span><span class="sxs-lookup"><span data-stu-id="8a329-1452">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="8a329-1453">Seu comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="8a329-1453">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="8a329-1454">O comprimento do registro especificado pelo `RecordLength` cláusula de `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessários para gravar os dados de matriz e o descritor de matriz.</span><span class="sxs-lookup"><span data-stu-id="8a329-1454">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="8a329-1455">Por exemplo, a seguinte declaração de matriz necessitará de 218 bytes quando a matriz é gravada no disco.</span><span class="sxs-lookup"><span data-stu-id="8a329-1455">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="8a329-1456">Se a variável que está sendo gravada for qualquer outro tipo de variável (não uma cadeia de caracteres de comprimento variável ou um objeto), `FilePut` grava somente os dados da variável.</span><span class="sxs-lookup"><span data-stu-id="8a329-1456">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="8a329-1457">O comprimento do registro especificado pelo `RecordLength` cláusula de `FileOpen` função deve ser maior ou igual ao comprimento dos dados que estão sendo gravados.</span><span class="sxs-lookup"><span data-stu-id="8a329-1457">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="8a329-1458">`FilePut` grava os elementos de estruturas como se cada um fosse escrito individualmente, exceto que não há nenhum preenchimento entre elementos.</span><span class="sxs-lookup"><span data-stu-id="8a329-1458">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="8a329-1459">O `VBFixedString` atributo pode ser aplicado a campos de cadeia de caracteres nas estruturas para indicar o tamanho da cadeia de caracteres quando gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="8a329-1459">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="8a329-1460">Os campos que têm mais bytes do que o especificado pela cadeia de caracteres de `VBFixedString` atributo são truncados quando gravados em disco,</span><span class="sxs-lookup"><span data-stu-id="8a329-1460">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="8a329-1461">Modo binário</span><span class="sxs-lookup"><span data-stu-id="8a329-1461">Binary Mode</span></span>  
 <span data-ttu-id="8a329-1462">Para arquivos abertos no `Binary` modo, a maioria do `Random` modo regras se aplicam, com algumas exceções.</span><span class="sxs-lookup"><span data-stu-id="8a329-1462">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="8a329-1463">As seguintes regras para arquivos abertos no `Binary` modo diferem das regras para `Random` modo:</span><span class="sxs-lookup"><span data-stu-id="8a329-1463">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="8a329-1464">A cláusula `RecordLength` na função de `FileOpen` não está em vigor.</span><span class="sxs-lookup"><span data-stu-id="8a329-1464">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="8a329-1465">`FilePut` grava todas as variáveis em disco de maneira contígua, ou seja, sem preenchimento entre os registros.</span><span class="sxs-lookup"><span data-stu-id="8a329-1465">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="8a329-1466">Para qualquer matriz que não seja uma matriz em uma estrutura, `FilePut` grava somente os dados.</span><span class="sxs-lookup"><span data-stu-id="8a329-1466">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="8a329-1467">Nenhum descritor é escrito.</span><span class="sxs-lookup"><span data-stu-id="8a329-1467">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="8a329-1468">`FilePut` Grava cadeias de caracteres de comprimento variável que não são elementos das estruturas sem o descritor de dois bytes de comprimento.</span><span class="sxs-lookup"><span data-stu-id="8a329-1468">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="8a329-1469">O número de bytes gravados for igual ao número de caracteres na cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="8a329-1469">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="8a329-1470">Por exemplo, as instruções a seguir gravam 11 bytes no arquivo número 1:</span><span class="sxs-lookup"><span data-stu-id="8a329-1470">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="8a329-1471">A gravação em um arquivo usando a função `FilePut` requer o acesso `Write` da enumeração <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="8a329-1471">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a329-1472">Este exemplo usa o `FilePut` função para gravar dados em um arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-1472">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="8a329-1473">Cinco registros da estrutura `Person` são gravados no arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-1473">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8a329-1474"><paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</span><span class="sxs-lookup"><span data-stu-id="8a329-1474"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="8a329-1475">O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="8a329-1475">File mode is invalid.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (int FileNumber, short Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(int32 FileNumber, int16 Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Int16,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Integer, Value As Short, Optional RecordNumber As Long = -1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Int16" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="8a329-1476">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-1476">Required.</span></span> <span data-ttu-id="8a329-1477">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="8a329-1477">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="8a329-1478">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-1478">Required.</span></span> <span data-ttu-id="8a329-1479">Nome de variável válido que contém dados gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="8a329-1479">Valid variable name that contains data written to disk.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="8a329-1480">Opcional.</span><span class="sxs-lookup"><span data-stu-id="8a329-1480">Optional.</span></span> <span data-ttu-id="8a329-1481">Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a gravação começa.</span><span class="sxs-lookup"><span data-stu-id="8a329-1481">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span></span></param>
        <summary><span data-ttu-id="8a329-1482">Grava dados de uma variável em um arquivo de disco.</span><span class="sxs-lookup"><span data-stu-id="8a329-1482">Writes data from a variable to a disk file.</span></span> <span data-ttu-id="8a329-1483">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FilePut" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-1483">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span></span> <span data-ttu-id="8a329-1484">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-1484">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a329-1485">`FilePut` só é válido em `Random` e `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="8a329-1485">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="8a329-1486">Dados gravados com `FilePut` costumam ser lidos a partir de um arquivo usando `FileGet`.</span><span class="sxs-lookup"><span data-stu-id="8a329-1486">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="8a329-1487">O primeiro registro ou byte em um arquivo está na posição 1, o segundo registro ou byte está na posição 2 e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="8a329-1487">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="8a329-1488">Se você omitir `RecordNumber`, o próximo registro ou byte após a última `FileGet` ou `FilePut` de função ou apontado pela última `Seek` função é gravada.</span><span class="sxs-lookup"><span data-stu-id="8a329-1488">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="8a329-1489">O argumento `StringIsFixedLength` controla se a função interpreta cadeias de caracteres como sendo de tamanho variável ou fixo.</span><span class="sxs-lookup"><span data-stu-id="8a329-1489">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="8a329-1490">`FilePut` não grava o descritor do tamanho quando o argumento é `True`.</span><span class="sxs-lookup"><span data-stu-id="8a329-1490">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="8a329-1491">Se você usar `StringIsFixedLength`  =  `True` com `FilePut`, você deve fazer o mesmo com `FileGet`, e você precisa certificar-se de que a cadeia de caracteres é inicializada com o tamanho esperado.</span><span class="sxs-lookup"><span data-stu-id="8a329-1491">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="8a329-1492">Modo aleatório</span><span class="sxs-lookup"><span data-stu-id="8a329-1492">Random Mode</span></span>  
 <span data-ttu-id="8a329-1493">Para arquivos abertos no `Random` modo, as seguintes regras se aplicam:</span><span class="sxs-lookup"><span data-stu-id="8a329-1493">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="8a329-1494">Se o comprimento dos dados que estão sendo gravados for menor que o comprimento especificado no `RecordLength` cláusula do `FileOpen` função `FilePut` grava registros subsequentes em limites de comprimento de registro.</span><span class="sxs-lookup"><span data-stu-id="8a329-1494">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="8a329-1495">O espaço entre o final de um registro e o início do próximo registro é preenchido com o conteúdo existente no buffer de arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-1495">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="8a329-1496">Porque a quantidade de dados não pode ser determinada com certeza, geralmente é recomendável ter o comprimento do registro corresponde ao tamanho dos dados que estão sendo gravados.</span><span class="sxs-lookup"><span data-stu-id="8a329-1496">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="8a329-1497">Se o comprimento dos dados que estão sendo gravados for maior do que o comprimento especificado no `RecordLength` cláusula do `FileOpen` função, uma exceção será lançada.</span><span class="sxs-lookup"><span data-stu-id="8a329-1497">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="8a329-1498">Caso a variável que está sendo gravada seja uma cadeia de caracteres, `FilePut` grava um descritor de dois bytes que contém o tamanho da cadeia de caracteres e, em seguida, grava os dados que vão para a variável.</span><span class="sxs-lookup"><span data-stu-id="8a329-1498">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="8a329-1499">Portanto, o comprimento do registro especificado pelo `RecordLength` cláusula de `FileOpen` função deve ser pelo menos dois bytes maior do que o comprimento real da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="8a329-1499">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="8a329-1500">Caso a variável que está sendo gravada seja um objeto que contém um tipo numérico, `FilePut` grava dois bytes que identificam o `VarType` do objeto e, em seguida, grava a variável.</span><span class="sxs-lookup"><span data-stu-id="8a329-1500">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="8a329-1501">Por exemplo, ao escrever um objeto que contém um número inteiro, `FilePut` grava seis bytes: dois bytes que identificam o objeto como `VarType(3)` (`Integer`) e quatro bytes que contêm os dados.</span><span class="sxs-lookup"><span data-stu-id="8a329-1501">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="8a329-1502">O comprimento do registro especificado pelo `RecordLength` parâmetro o `FileOpen` função deve ser pelo menos dois bytes maior do que o número real de bytes necessários para armazenar a variável.</span><span class="sxs-lookup"><span data-stu-id="8a329-1502">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="8a329-1503">Se a variável que está sendo gravada for um objeto que contém uma cadeia de caracteres, `FilePut` grava um descritor de dois bytes que identifica o`VarType(8)` do objeto, um descritor de dois bytes indicando o comprimento da cadeia de caracteres e, em seguida, grava os dados de cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="8a329-1503">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the`VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="8a329-1504">O comprimento do registro especificado pelo `RecordLength` parâmetro o `FileOpen` função deve ser pelo menos quatro bytes maior do que o comprimento real da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="8a329-1504">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="8a329-1505">Caso queira colocar uma cadeia de caracteres sem o descritor, você deve passar `True` para o parâmetro `StringIsFixedLength`, e a cadeia de caracteres lida deve ter o tamanho correto.</span><span class="sxs-lookup"><span data-stu-id="8a329-1505">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="8a329-1506">Caso a variável gravada seja uma matriz, você tem a opção de gravar ou não um descritor para o tamanho e as dimensões da matriz.</span><span class="sxs-lookup"><span data-stu-id="8a329-1506">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="8a329-1507">O descritor de arquivo para uma matriz dinâmica, mas não para uma matriz de tamanho fixo de gravação do Visual Basic 6.0 e versões anteriores.</span><span class="sxs-lookup"><span data-stu-id="8a329-1507">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="8a329-1508">Visual Basic 2005 tem como padrão não gravar o descritor.</span><span class="sxs-lookup"><span data-stu-id="8a329-1508">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="8a329-1509">Para gravar o descritor, defina o `ArrayIsDynamic` parâmetro `True`.</span><span class="sxs-lookup"><span data-stu-id="8a329-1509">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="8a329-1510">Ao escrever a matriz, você precisa comparar a forma com que a matriz será lida; se ela for lida com o descritor, você precisará escrever o descritor.</span><span class="sxs-lookup"><span data-stu-id="8a329-1510">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="8a329-1511">O descritor especifica a classificação de matriz, o tamanho e o limite inferior de cada classificação.</span><span class="sxs-lookup"><span data-stu-id="8a329-1511">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="8a329-1512">Seu comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="8a329-1512">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="8a329-1513">O comprimento do registro especificado pelo `RecordLength` cláusula de `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessários para gravar os dados de matriz e o descritor de matriz.</span><span class="sxs-lookup"><span data-stu-id="8a329-1513">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="8a329-1514">Por exemplo, a seguinte declaração de matriz necessitará de 218 bytes quando a matriz é gravada no disco.</span><span class="sxs-lookup"><span data-stu-id="8a329-1514">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="8a329-1515">Se a variável que está sendo gravada for qualquer outro tipo de variável (não uma cadeia de caracteres de comprimento variável ou um objeto), `FilePut` grava somente os dados da variável.</span><span class="sxs-lookup"><span data-stu-id="8a329-1515">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="8a329-1516">O comprimento do registro especificado pelo `RecordLength` cláusula de `FileOpen` função deve ser maior ou igual ao comprimento dos dados que estão sendo gravados.</span><span class="sxs-lookup"><span data-stu-id="8a329-1516">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="8a329-1517">`FilePut` grava os elementos de estruturas como se cada um fosse escrito individualmente, exceto que não há nenhum preenchimento entre elementos.</span><span class="sxs-lookup"><span data-stu-id="8a329-1517">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="8a329-1518">O `VBFixedString` atributo pode ser aplicado a campos de cadeia de caracteres nas estruturas para indicar o tamanho da cadeia de caracteres quando gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="8a329-1518">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="8a329-1519">Os campos que têm mais bytes do que o especificado pela cadeia de caracteres de `VBFixedString` atributo são truncados quando gravados em disco,</span><span class="sxs-lookup"><span data-stu-id="8a329-1519">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="8a329-1520">Modo binário</span><span class="sxs-lookup"><span data-stu-id="8a329-1520">Binary Mode</span></span>  
 <span data-ttu-id="8a329-1521">Para arquivos abertos no `Binary` modo, a maioria do `Random` modo regras se aplicam, com algumas exceções.</span><span class="sxs-lookup"><span data-stu-id="8a329-1521">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="8a329-1522">As seguintes regras para arquivos abertos no `Binary` modo diferem das regras para `Random` modo:</span><span class="sxs-lookup"><span data-stu-id="8a329-1522">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="8a329-1523">A cláusula `RecordLength` na função de `FileOpen` não está em vigor.</span><span class="sxs-lookup"><span data-stu-id="8a329-1523">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="8a329-1524">`FilePut` grava todas as variáveis em disco de maneira contígua, ou seja, sem preenchimento entre os registros.</span><span class="sxs-lookup"><span data-stu-id="8a329-1524">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="8a329-1525">Para qualquer matriz que não seja uma matriz em uma estrutura, `FilePut` grava somente os dados.</span><span class="sxs-lookup"><span data-stu-id="8a329-1525">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="8a329-1526">Nenhum descritor é escrito.</span><span class="sxs-lookup"><span data-stu-id="8a329-1526">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="8a329-1527">`FilePut` Grava cadeias de caracteres de comprimento variável que não são elementos das estruturas sem o descritor de dois bytes de comprimento.</span><span class="sxs-lookup"><span data-stu-id="8a329-1527">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="8a329-1528">O número de bytes gravados for igual ao número de caracteres na cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="8a329-1528">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="8a329-1529">Por exemplo, as instruções a seguir gravam 11 bytes no arquivo número 1:</span><span class="sxs-lookup"><span data-stu-id="8a329-1529">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="8a329-1530">A gravação em um arquivo usando a função `FilePut` requer o acesso `Write` da enumeração <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="8a329-1530">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a329-1531">Este exemplo usa o `FilePut` função para gravar dados em um arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-1531">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="8a329-1532">Cinco registros da estrutura `Person` são gravados no arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-1532">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8a329-1533"><paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</span><span class="sxs-lookup"><span data-stu-id="8a329-1533"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="8a329-1534">O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="8a329-1534">File mode is invalid.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (int FileNumber, int Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(int32 FileNumber, int32 Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Int32,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Integer, Value As Integer, Optional RecordNumber As Long = -1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Int32" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="8a329-1535">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-1535">Required.</span></span> <span data-ttu-id="8a329-1536">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="8a329-1536">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="8a329-1537">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-1537">Required.</span></span> <span data-ttu-id="8a329-1538">Nome de variável válido que contém dados gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="8a329-1538">Valid variable name that contains data written to disk.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="8a329-1539">Opcional.</span><span class="sxs-lookup"><span data-stu-id="8a329-1539">Optional.</span></span> <span data-ttu-id="8a329-1540">Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a gravação começa.</span><span class="sxs-lookup"><span data-stu-id="8a329-1540">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span></span></param>
        <summary><span data-ttu-id="8a329-1541">Grava dados de uma variável em um arquivo de disco.</span><span class="sxs-lookup"><span data-stu-id="8a329-1541">Writes data from a variable to a disk file.</span></span> <span data-ttu-id="8a329-1542">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FilePut" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-1542">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span></span> <span data-ttu-id="8a329-1543">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-1543">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a329-1544">`FilePut` só é válido em `Random` e `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="8a329-1544">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="8a329-1545">Dados gravados com `FilePut` costumam ser lidos a partir de um arquivo usando `FileGet`.</span><span class="sxs-lookup"><span data-stu-id="8a329-1545">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="8a329-1546">O primeiro registro ou byte em um arquivo está na posição 1, o segundo registro ou byte está na posição 2 e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="8a329-1546">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="8a329-1547">Se você omitir `RecordNumber`, o próximo registro ou byte após a última `FileGet` ou `FilePut` de função ou apontado pela última `Seek` função é gravada.</span><span class="sxs-lookup"><span data-stu-id="8a329-1547">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="8a329-1548">O argumento `StringIsFixedLength` controla se a função interpreta cadeias de caracteres como sendo de tamanho variável ou fixo.</span><span class="sxs-lookup"><span data-stu-id="8a329-1548">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="8a329-1549">`FilePut` não grava o descritor do tamanho quando o argumento é `True`.</span><span class="sxs-lookup"><span data-stu-id="8a329-1549">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="8a329-1550">Se você usar `StringIsFixedLength`  =  `True` com `FilePut`, você deve fazer o mesmo com `FileGet`, e você precisa certificar-se de que a cadeia de caracteres é inicializada com o tamanho esperado.</span><span class="sxs-lookup"><span data-stu-id="8a329-1550">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="8a329-1551">Modo aleatório</span><span class="sxs-lookup"><span data-stu-id="8a329-1551">Random Mode</span></span>  
 <span data-ttu-id="8a329-1552">Para arquivos abertos no `Random` modo, as seguintes regras se aplicam:</span><span class="sxs-lookup"><span data-stu-id="8a329-1552">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="8a329-1553">Se o comprimento dos dados que estão sendo gravados for menor que o comprimento especificado no `RecordLength` cláusula do `FileOpen` função `FilePut` grava registros subsequentes em limites de comprimento de registro.</span><span class="sxs-lookup"><span data-stu-id="8a329-1553">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="8a329-1554">O espaço entre o final de um registro e o início do próximo registro é preenchido com o conteúdo existente no buffer de arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-1554">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="8a329-1555">Porque a quantidade de dados não pode ser determinada com certeza, geralmente é recomendável ter o comprimento do registro corresponde ao tamanho dos dados que estão sendo gravados.</span><span class="sxs-lookup"><span data-stu-id="8a329-1555">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="8a329-1556">Se o comprimento dos dados que estão sendo gravados for maior do que o comprimento especificado no `RecordLength` cláusula do `FileOpen` função, uma exceção será lançada.</span><span class="sxs-lookup"><span data-stu-id="8a329-1556">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="8a329-1557">Caso a variável que está sendo gravada seja uma cadeia de caracteres, `FilePut` grava um descritor de dois bytes que contém o tamanho da cadeia de caracteres e, em seguida, grava os dados que vão para a variável.</span><span class="sxs-lookup"><span data-stu-id="8a329-1557">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="8a329-1558">Portanto, o comprimento do registro especificado pelo `RecordLength` cláusula de `FileOpen` função deve ser pelo menos dois bytes maior do que o comprimento real da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="8a329-1558">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="8a329-1559">Caso a variável que está sendo gravada seja um objeto que contém um tipo numérico, `FilePut` grava dois bytes que identificam o `VarType` do objeto e, em seguida, grava a variável.</span><span class="sxs-lookup"><span data-stu-id="8a329-1559">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="8a329-1560">Por exemplo, ao escrever um objeto que contém um número inteiro, `FilePut` grava seis bytes: dois bytes que identificam o objeto como `VarType(3)` (`Integer`) e quatro bytes que contêm os dados.</span><span class="sxs-lookup"><span data-stu-id="8a329-1560">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="8a329-1561">O comprimento do registro especificado pelo `RecordLength` parâmetro o `FileOpen` função deve ser pelo menos dois bytes maior do que o número real de bytes necessários para armazenar a variável.</span><span class="sxs-lookup"><span data-stu-id="8a329-1561">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="8a329-1562">Se a variável que está sendo gravada for um objeto que contém uma cadeia de caracteres, `FilePut` grava um descritor de dois bytes que identifica o `VarType(8)` do objeto, um descritor de dois bytes indicando o comprimento da cadeia de caracteres e, em seguida, grava os dados de cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="8a329-1562">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="8a329-1563">O comprimento do registro especificado pelo `RecordLength` parâmetro o `FileOpen` função deve ser pelo menos quatro bytes maior do que o comprimento real da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="8a329-1563">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="8a329-1564">Caso queira colocar uma cadeia de caracteres sem o descritor, você deve passar `True` para o parâmetro `StringIsFixedLength`, e a cadeia de caracteres lida deve ter o tamanho correto.</span><span class="sxs-lookup"><span data-stu-id="8a329-1564">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="8a329-1565">Caso a variável gravada seja uma matriz, você tem a opção de gravar ou não um descritor para o tamanho e as dimensões da matriz.</span><span class="sxs-lookup"><span data-stu-id="8a329-1565">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="8a329-1566">O descritor de arquivo para uma matriz dinâmica, mas não para uma matriz de tamanho fixo de gravação do Visual Basic 6.0 e versões anteriores.</span><span class="sxs-lookup"><span data-stu-id="8a329-1566">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="8a329-1567">Visual Basic 2005 tem como padrão não gravar o descritor.</span><span class="sxs-lookup"><span data-stu-id="8a329-1567">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="8a329-1568">Para gravar o descritor, defina o `ArrayIsDynamic` parâmetro `True`.</span><span class="sxs-lookup"><span data-stu-id="8a329-1568">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="8a329-1569">Ao escrever a matriz, você precisa comparar a forma com que a matriz será lida; se ela for lida com o descritor, você precisará escrever o descritor.</span><span class="sxs-lookup"><span data-stu-id="8a329-1569">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="8a329-1570">O descritor especifica a classificação de matriz, o tamanho e o limite inferior de cada classificação.</span><span class="sxs-lookup"><span data-stu-id="8a329-1570">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="8a329-1571">Seu comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="8a329-1571">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="8a329-1572">O comprimento do registro especificado pelo `RecordLength` cláusula de `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessários para gravar os dados de matriz e o descritor de matriz.</span><span class="sxs-lookup"><span data-stu-id="8a329-1572">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="8a329-1573">Por exemplo, a seguinte declaração de matriz necessitará de 218 bytes quando a matriz é gravada no disco.</span><span class="sxs-lookup"><span data-stu-id="8a329-1573">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="8a329-1574">Se a variável que está sendo gravada for qualquer outro tipo de variável (não uma cadeia de caracteres de comprimento variável ou um objeto), `FilePut` grava somente os dados da variável.</span><span class="sxs-lookup"><span data-stu-id="8a329-1574">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="8a329-1575">O comprimento do registro especificado pelo `RecordLength` cláusula de `FileOpen` função deve ser maior ou igual ao comprimento dos dados que estão sendo gravados.</span><span class="sxs-lookup"><span data-stu-id="8a329-1575">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="8a329-1576">`FilePut` grava os elementos de estruturas como se cada um fosse escrito individualmente, exceto que não há nenhum preenchimento entre elementos.</span><span class="sxs-lookup"><span data-stu-id="8a329-1576">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="8a329-1577">O `VBFixedString` atributo pode ser aplicado a campos de cadeia de caracteres nas estruturas para indicar o tamanho da cadeia de caracteres quando gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="8a329-1577">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="8a329-1578">Os campos que têm mais bytes do que o especificado pela cadeia de caracteres de `VBFixedString` atributo são truncados quando gravados em disco,</span><span class="sxs-lookup"><span data-stu-id="8a329-1578">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="8a329-1579">Modo binário</span><span class="sxs-lookup"><span data-stu-id="8a329-1579">Binary Mode</span></span>  
 <span data-ttu-id="8a329-1580">Para arquivos abertos no `Binary` modo, a maioria do `Random` modo regras se aplicam, com algumas exceções.</span><span class="sxs-lookup"><span data-stu-id="8a329-1580">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="8a329-1581">As seguintes regras para arquivos abertos no `Binary` modo diferem das regras para `Random` modo:</span><span class="sxs-lookup"><span data-stu-id="8a329-1581">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="8a329-1582">A cláusula `RecordLength` na função de `FileOpen` não está em vigor.</span><span class="sxs-lookup"><span data-stu-id="8a329-1582">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="8a329-1583">`FilePut` grava todas as variáveis em disco de maneira contígua, ou seja, sem preenchimento entre os registros.</span><span class="sxs-lookup"><span data-stu-id="8a329-1583">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="8a329-1584">Para qualquer matriz que não seja uma matriz em uma estrutura, `FilePut` grava somente os dados.</span><span class="sxs-lookup"><span data-stu-id="8a329-1584">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="8a329-1585">Nenhum descritor é escrito.</span><span class="sxs-lookup"><span data-stu-id="8a329-1585">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="8a329-1586">`FilePut` Grava cadeias de caracteres de comprimento variável que não são elementos das estruturas sem o descritor de dois bytes de comprimento.</span><span class="sxs-lookup"><span data-stu-id="8a329-1586">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="8a329-1587">O número de bytes gravados for igual ao número de caracteres na cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="8a329-1587">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="8a329-1588">Por exemplo, as instruções a seguir gravam 11 bytes no arquivo número 1:</span><span class="sxs-lookup"><span data-stu-id="8a329-1588">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="8a329-1589">A gravação em um arquivo usando a função `FilePut` requer o acesso `Write` da enumeração <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="8a329-1589">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a329-1590">Este exemplo usa o `FilePut` função para gravar dados em um arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-1590">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="8a329-1591">Cinco registros da estrutura `Person` são gravados no arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-1591">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8a329-1592"><paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</span><span class="sxs-lookup"><span data-stu-id="8a329-1592"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="8a329-1593">O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="8a329-1593">File mode is invalid.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (int FileNumber, long Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(int32 FileNumber, int64 Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Integer, Value As Long, Optional RecordNumber As Long = -1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Int64" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="8a329-1594">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-1594">Required.</span></span> <span data-ttu-id="8a329-1595">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="8a329-1595">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="8a329-1596">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-1596">Required.</span></span> <span data-ttu-id="8a329-1597">Nome de variável válido que contém dados gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="8a329-1597">Valid variable name that contains data written to disk.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="8a329-1598">Opcional.</span><span class="sxs-lookup"><span data-stu-id="8a329-1598">Optional.</span></span> <span data-ttu-id="8a329-1599">Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a gravação começa.</span><span class="sxs-lookup"><span data-stu-id="8a329-1599">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span></span></param>
        <summary><span data-ttu-id="8a329-1600">Grava dados de uma variável em um arquivo de disco.</span><span class="sxs-lookup"><span data-stu-id="8a329-1600">Writes data from a variable to a disk file.</span></span> <span data-ttu-id="8a329-1601">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FilePut" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-1601">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span></span> <span data-ttu-id="8a329-1602">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-1602">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a329-1603">`FilePut` só é válido em `Random` e `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="8a329-1603">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="8a329-1604">Dados gravados com `FilePut` costumam ser lidos a partir de um arquivo usando `FileGet`.</span><span class="sxs-lookup"><span data-stu-id="8a329-1604">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="8a329-1605">O primeiro registro ou byte em um arquivo está na posição 1, o segundo registro ou byte está na posição 2 e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="8a329-1605">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="8a329-1606">Se você omitir `RecordNumber`, o próximo registro ou byte após a última `FileGet` ou `FilePut` de função ou apontado pela última `Seek` função é gravada.</span><span class="sxs-lookup"><span data-stu-id="8a329-1606">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="8a329-1607">O argumento `StringIsFixedLength` controla se a função interpreta cadeias de caracteres como sendo de tamanho variável ou fixo.</span><span class="sxs-lookup"><span data-stu-id="8a329-1607">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="8a329-1608">`FilePut` não grava o descritor do tamanho quando o argumento é `True`.</span><span class="sxs-lookup"><span data-stu-id="8a329-1608">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="8a329-1609">Se você usar `StringIsFixedLength`  =  `True` com `FilePut`, você deve fazer o mesmo com `FileGet`, e você precisa certificar-se de que a cadeia de caracteres é inicializada com o tamanho esperado.</span><span class="sxs-lookup"><span data-stu-id="8a329-1609">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="8a329-1610">Modo aleatório</span><span class="sxs-lookup"><span data-stu-id="8a329-1610">Random Mode</span></span>  
 <span data-ttu-id="8a329-1611">Para arquivos abertos no `Random` modo, as seguintes regras se aplicam:</span><span class="sxs-lookup"><span data-stu-id="8a329-1611">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="8a329-1612">Se o comprimento dos dados que estão sendo gravados for menor que o comprimento especificado no `RecordLength` cláusula do `FileOpen` função `FilePut` grava registros subsequentes em limites de comprimento de registro.</span><span class="sxs-lookup"><span data-stu-id="8a329-1612">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="8a329-1613">O espaço entre o final de um registro e o início do próximo registro é preenchido com o conteúdo existente no buffer de arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-1613">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="8a329-1614">Porque a quantidade de dados não pode ser determinada com certeza, geralmente é recomendável ter o comprimento do registro corresponde ao tamanho dos dados que estão sendo gravados.</span><span class="sxs-lookup"><span data-stu-id="8a329-1614">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="8a329-1615">Se o comprimento dos dados que estão sendo gravados for maior do que o comprimento especificado no `RecordLength` cláusula do `FileOpen` função, uma exceção será lançada.</span><span class="sxs-lookup"><span data-stu-id="8a329-1615">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="8a329-1616">Caso a variável que está sendo gravada seja uma cadeia de caracteres, `FilePut` grava um descritor de dois bytes que contém o tamanho da cadeia de caracteres e, em seguida, grava os dados que vão para a variável.</span><span class="sxs-lookup"><span data-stu-id="8a329-1616">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="8a329-1617">Portanto, o comprimento do registro especificado pelo `RecordLength` cláusula de `FileOpen` função deve ser pelo menos dois bytes maior do que o comprimento real da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="8a329-1617">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="8a329-1618">Caso a variável que está sendo gravada seja um objeto que contém um tipo numérico, `FilePut` grava dois bytes que identificam o `VarType` do objeto e, em seguida, grava a variável.</span><span class="sxs-lookup"><span data-stu-id="8a329-1618">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="8a329-1619">Por exemplo, ao escrever um objeto que contém um número inteiro, `FilePut` grava seis bytes: dois bytes que identificam o objeto como `VarType(3)` (`Integer`) e quatro bytes que contêm os dados.</span><span class="sxs-lookup"><span data-stu-id="8a329-1619">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="8a329-1620">O comprimento do registro especificado pelo `RecordLength` parâmetro o `FileOpen` função deve ser pelo menos dois bytes maior do que o número real de bytes necessários para armazenar a variável.</span><span class="sxs-lookup"><span data-stu-id="8a329-1620">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="8a329-1621">Se a variável que está sendo gravada for um objeto que contém uma cadeia de caracteres, `FilePut` grava um descritor de dois bytes que identifica o `VarType(8)` do objeto, um descritor de dois bytes indicando o comprimento da cadeia de caracteres e, em seguida, grava os dados de cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="8a329-1621">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="8a329-1622">O comprimento do registro especificado pelo `RecordLength` parâmetro o `FileOpen` função deve ser pelo menos quatro bytes maior do que o comprimento real da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="8a329-1622">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="8a329-1623">Caso queira colocar uma cadeia de caracteres sem o descritor, você deve passar `True` para o parâmetro `StringIsFixedLength`, e a cadeia de caracteres lida deve ter o tamanho correto.</span><span class="sxs-lookup"><span data-stu-id="8a329-1623">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="8a329-1624">Caso a variável gravada seja uma matriz, você tem a opção de gravar ou não um descritor para o tamanho e as dimensões da matriz.</span><span class="sxs-lookup"><span data-stu-id="8a329-1624">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="8a329-1625">O descritor de arquivo para uma matriz dinâmica, mas não para uma matriz de tamanho fixo de gravação do Visual Basic 6.0 e versões anteriores.</span><span class="sxs-lookup"><span data-stu-id="8a329-1625">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="8a329-1626">Visual Basic 2005 tem como padrão não gravar o descritor.</span><span class="sxs-lookup"><span data-stu-id="8a329-1626">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="8a329-1627">Para gravar o descritor, defina o `ArrayIsDynamic` parâmetro `True`.</span><span class="sxs-lookup"><span data-stu-id="8a329-1627">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="8a329-1628">Ao escrever a matriz, você precisa comparar a forma com que a matriz será lida; se ela for lida com o descritor, você precisará escrever o descritor.</span><span class="sxs-lookup"><span data-stu-id="8a329-1628">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="8a329-1629">O descritor especifica a classificação de matriz, o tamanho e o limite inferior de cada classificação.</span><span class="sxs-lookup"><span data-stu-id="8a329-1629">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="8a329-1630">Seu comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="8a329-1630">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="8a329-1631">O comprimento do registro especificado pelo `RecordLength` cláusula de `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessários para gravar os dados de matriz e o descritor de matriz.</span><span class="sxs-lookup"><span data-stu-id="8a329-1631">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="8a329-1632">Por exemplo, a seguinte declaração de matriz necessitará de 218 bytes quando a matriz é gravada no disco.</span><span class="sxs-lookup"><span data-stu-id="8a329-1632">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="8a329-1633">Se a variável que está sendo gravada for qualquer outro tipo de variável (não uma cadeia de caracteres de comprimento variável ou um objeto), `FilePut` grava somente os dados da variável.</span><span class="sxs-lookup"><span data-stu-id="8a329-1633">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="8a329-1634">O comprimento do registro especificado pelo `RecordLength` cláusula de `FileOpen` função deve ser maior ou igual ao comprimento dos dados que estão sendo gravados.</span><span class="sxs-lookup"><span data-stu-id="8a329-1634">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="8a329-1635">`FilePut` grava os elementos de estruturas como se cada um fosse escrito individualmente, exceto que não há nenhum preenchimento entre elementos.</span><span class="sxs-lookup"><span data-stu-id="8a329-1635">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="8a329-1636">O `VBFixedString` atributo pode ser aplicado a campos de cadeia de caracteres nas estruturas para indicar o tamanho da cadeia de caracteres quando gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="8a329-1636">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="8a329-1637">Os campos que têm mais bytes do que o especificado pela cadeia de caracteres de `VBFixedString` atributo são truncados quando gravados em disco,</span><span class="sxs-lookup"><span data-stu-id="8a329-1637">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="8a329-1638">Modo binário</span><span class="sxs-lookup"><span data-stu-id="8a329-1638">Binary Mode</span></span>  
 <span data-ttu-id="8a329-1639">Para arquivos abertos no `Binary` modo, a maioria do `Random` modo regras se aplicam, com algumas exceções.</span><span class="sxs-lookup"><span data-stu-id="8a329-1639">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="8a329-1640">As seguintes regras para arquivos abertos no `Binary` modo diferem das regras para `Random` modo:</span><span class="sxs-lookup"><span data-stu-id="8a329-1640">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="8a329-1641">A cláusula `RecordLength` na função de `FileOpen` não está em vigor.</span><span class="sxs-lookup"><span data-stu-id="8a329-1641">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="8a329-1642">`FilePut` grava todas as variáveis em disco de maneira contígua, ou seja, sem preenchimento entre os registros.</span><span class="sxs-lookup"><span data-stu-id="8a329-1642">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="8a329-1643">Para qualquer matriz que não seja uma matriz em uma estrutura, `FilePut` grava somente os dados.</span><span class="sxs-lookup"><span data-stu-id="8a329-1643">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="8a329-1644">Nenhum descritor é escrito.</span><span class="sxs-lookup"><span data-stu-id="8a329-1644">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="8a329-1645">`FilePut` Grava cadeias de caracteres de comprimento variável que não são elementos das estruturas sem o descritor de dois bytes de comprimento.</span><span class="sxs-lookup"><span data-stu-id="8a329-1645">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="8a329-1646">O número de bytes gravados for igual ao número de caracteres na cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="8a329-1646">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="8a329-1647">Por exemplo, as instruções a seguir gravam 11 bytes no arquivo número 1:</span><span class="sxs-lookup"><span data-stu-id="8a329-1647">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="8a329-1648">A gravação em um arquivo usando a função `FilePut` requer o acesso `Write` da enumeração <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="8a329-1648">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a329-1649">Este exemplo usa o `FilePut` função para gravar dados em um arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-1649">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="8a329-1650">Cinco registros da estrutura `Person` são gravados no arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-1650">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8a329-1651"><paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</span><span class="sxs-lookup"><span data-stu-id="8a329-1651"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="8a329-1652">O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="8a329-1652">File mode is invalid.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (int FileNumber, float Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(int32 FileNumber, float32 Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Single,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Integer, Value As Single, Optional RecordNumber As Long = -1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Single" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="8a329-1653">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-1653">Required.</span></span> <span data-ttu-id="8a329-1654">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="8a329-1654">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="8a329-1655">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-1655">Required.</span></span> <span data-ttu-id="8a329-1656">Nome de variável válido que contém dados gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="8a329-1656">Valid variable name that contains data written to disk.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="8a329-1657">Opcional.</span><span class="sxs-lookup"><span data-stu-id="8a329-1657">Optional.</span></span> <span data-ttu-id="8a329-1658">Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a gravação começa.</span><span class="sxs-lookup"><span data-stu-id="8a329-1658">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span></span></param>
        <summary><span data-ttu-id="8a329-1659">Grava dados de uma variável em um arquivo de disco.</span><span class="sxs-lookup"><span data-stu-id="8a329-1659">Writes data from a variable to a disk file.</span></span> <span data-ttu-id="8a329-1660">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FilePut" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-1660">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span></span> <span data-ttu-id="8a329-1661">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-1661">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a329-1662">`FilePut` só é válido em `Random` e `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="8a329-1662">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="8a329-1663">Dados gravados com `FilePut` costumam ser lidos a partir de um arquivo usando `FileGet`.</span><span class="sxs-lookup"><span data-stu-id="8a329-1663">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="8a329-1664">O primeiro registro ou byte em um arquivo está na posição 1, o segundo registro ou byte está na posição 2 e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="8a329-1664">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="8a329-1665">Se você omitir `RecordNumber`, o próximo registro ou byte após a última `FileGet` ou `FilePut` de função ou apontado pela última `Seek` função é gravada.</span><span class="sxs-lookup"><span data-stu-id="8a329-1665">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="8a329-1666">O argumento `StringIsFixedLength` controla se a função interpreta cadeias de caracteres como sendo de tamanho variável ou fixo.</span><span class="sxs-lookup"><span data-stu-id="8a329-1666">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="8a329-1667">`FilePut` não grava o descritor do tamanho quando o argumento é `True`.</span><span class="sxs-lookup"><span data-stu-id="8a329-1667">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="8a329-1668">Se você usar `StringIsFixedLength`  =  `True` com `FilePut`, você deve fazer o mesmo com `FileGet`, e você precisa certificar-se de que a cadeia de caracteres é inicializada com o tamanho esperado.</span><span class="sxs-lookup"><span data-stu-id="8a329-1668">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="8a329-1669">Modo aleatório</span><span class="sxs-lookup"><span data-stu-id="8a329-1669">Random Mode</span></span>  
 <span data-ttu-id="8a329-1670">Para arquivos abertos no `Random` modo, as seguintes regras se aplicam:</span><span class="sxs-lookup"><span data-stu-id="8a329-1670">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="8a329-1671">Se o comprimento dos dados que estão sendo gravados for menor que o comprimento especificado no `RecordLength` cláusula do `FileOpen` função `FilePut` grava registros subsequentes em limites de comprimento de registro.</span><span class="sxs-lookup"><span data-stu-id="8a329-1671">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="8a329-1672">O espaço entre o final de um registro e o início do próximo registro é preenchido com o conteúdo existente no buffer de arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-1672">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="8a329-1673">Porque a quantidade de dados não pode ser determinada com certeza, geralmente é recomendável ter o comprimento do registro corresponde ao tamanho dos dados que estão sendo gravados.</span><span class="sxs-lookup"><span data-stu-id="8a329-1673">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="8a329-1674">Se o comprimento dos dados que estão sendo gravados for maior do que o comprimento especificado no `RecordLength` cláusula do `FileOpen` função, uma exceção será lançada.</span><span class="sxs-lookup"><span data-stu-id="8a329-1674">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="8a329-1675">Caso a variável que está sendo gravada seja uma cadeia de caracteres, `FilePut` grava um descritor de dois bytes que contém o tamanho da cadeia de caracteres e, em seguida, grava os dados que vão para a variável.</span><span class="sxs-lookup"><span data-stu-id="8a329-1675">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="8a329-1676">Portanto, o comprimento do registro especificado pelo `RecordLength` cláusula de `FileOpen` função deve ser pelo menos dois bytes maior do que o comprimento real da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="8a329-1676">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="8a329-1677">Caso a variável que está sendo gravada seja um objeto que contém um tipo numérico, `FilePut` grava dois bytes que identificam o `VarType` do objeto e, em seguida, grava a variável.</span><span class="sxs-lookup"><span data-stu-id="8a329-1677">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="8a329-1678">Por exemplo, ao escrever um objeto que contém um número inteiro, `FilePut` grava seis bytes: dois bytes que identificam o objeto como `VarType(3)` (`Integer`) e quatro bytes que contêm os dados.</span><span class="sxs-lookup"><span data-stu-id="8a329-1678">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="8a329-1679">O comprimento do registro especificado pelo `RecordLength` parâmetro o `FileOpen` função deve ser pelo menos dois bytes maior do que o número real de bytes necessários para armazenar a variável.</span><span class="sxs-lookup"><span data-stu-id="8a329-1679">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="8a329-1680">Se a variável que está sendo gravada for um objeto que contém uma cadeia de caracteres, `FilePut` grava um descritor de dois bytes que identifica o `VarType(8)` do objeto, um descritor de dois bytes indicando o comprimento da cadeia de caracteres e, em seguida, grava os dados de cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="8a329-1680">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="8a329-1681">O comprimento do registro especificado pelo `RecordLength` parâmetro o `FileOpen` função deve ser pelo menos quatro bytes maior do que o comprimento real da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="8a329-1681">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="8a329-1682">Caso queira colocar uma cadeia de caracteres sem o descritor, você deve passar `True` para o parâmetro `StringIsFixedLength`, e a cadeia de caracteres lida deve ter o tamanho correto.</span><span class="sxs-lookup"><span data-stu-id="8a329-1682">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="8a329-1683">Caso a variável gravada seja uma matriz, você tem a opção de gravar ou não um descritor para o tamanho e as dimensões da matriz.</span><span class="sxs-lookup"><span data-stu-id="8a329-1683">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="8a329-1684">O descritor de arquivo para uma matriz dinâmica, mas não para uma matriz de tamanho fixo de gravação do Visual Basic 6.0 e versões anteriores.</span><span class="sxs-lookup"><span data-stu-id="8a329-1684">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="8a329-1685">Visual Basic 2005 tem como padrão não gravar o descritor.</span><span class="sxs-lookup"><span data-stu-id="8a329-1685">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="8a329-1686">Para gravar o descritor, defina o `ArrayIsDynamic` parâmetro `True`.</span><span class="sxs-lookup"><span data-stu-id="8a329-1686">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="8a329-1687">Ao escrever a matriz, você precisa comparar a forma com que a matriz será lida; se ela for lida com o descritor, você precisará escrever o descritor.</span><span class="sxs-lookup"><span data-stu-id="8a329-1687">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="8a329-1688">O descritor especifica a classificação de matriz, o tamanho e o limite inferior de cada classificação.</span><span class="sxs-lookup"><span data-stu-id="8a329-1688">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="8a329-1689">Seu comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="8a329-1689">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="8a329-1690">O comprimento do registro especificado pelo `RecordLength` cláusula de `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessários para gravar os dados de matriz e o descritor de matriz.</span><span class="sxs-lookup"><span data-stu-id="8a329-1690">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="8a329-1691">Por exemplo, a seguinte declaração de matriz necessitará de 218 bytes quando a matriz é gravada no disco.</span><span class="sxs-lookup"><span data-stu-id="8a329-1691">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="8a329-1692">Se a variável que está sendo gravada for qualquer outro tipo de variável (não uma cadeia de caracteres de comprimento variável ou um objeto), `FilePut` grava somente os dados da variável.</span><span class="sxs-lookup"><span data-stu-id="8a329-1692">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="8a329-1693">O comprimento do registro especificado pelo `RecordLength` cláusula de `FileOpen` função deve ser maior ou igual ao comprimento dos dados que estão sendo gravados.</span><span class="sxs-lookup"><span data-stu-id="8a329-1693">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="8a329-1694">`FilePut` grava os elementos de estruturas como se cada um fosse escrito individualmente, exceto que não há nenhum preenchimento entre elementos.</span><span class="sxs-lookup"><span data-stu-id="8a329-1694">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="8a329-1695">O `VBFixedString` atributo pode ser aplicado a campos de cadeia de caracteres nas estruturas para indicar o tamanho da cadeia de caracteres quando gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="8a329-1695">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="8a329-1696">Os campos que têm mais bytes do que o especificado pela cadeia de caracteres de `VBFixedString` atributo são truncados quando gravados em disco,</span><span class="sxs-lookup"><span data-stu-id="8a329-1696">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="8a329-1697">Modo binário</span><span class="sxs-lookup"><span data-stu-id="8a329-1697">Binary Mode</span></span>  
 <span data-ttu-id="8a329-1698">Para arquivos abertos no `Binary` modo, a maioria do `Random` modo regras se aplicam, com algumas exceções.</span><span class="sxs-lookup"><span data-stu-id="8a329-1698">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="8a329-1699">As seguintes regras para arquivos abertos no `Binary` modo diferem das regras para `Random` modo:</span><span class="sxs-lookup"><span data-stu-id="8a329-1699">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="8a329-1700">A cláusula `RecordLength` na função de `FileOpen` não está em vigor.</span><span class="sxs-lookup"><span data-stu-id="8a329-1700">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="8a329-1701">`FilePut` grava todas as variáveis em disco de maneira contígua, ou seja, sem preenchimento entre os registros.</span><span class="sxs-lookup"><span data-stu-id="8a329-1701">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="8a329-1702">Para qualquer matriz que não seja uma matriz em uma estrutura, `FilePut` grava somente os dados.</span><span class="sxs-lookup"><span data-stu-id="8a329-1702">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="8a329-1703">Nenhum descritor é escrito.</span><span class="sxs-lookup"><span data-stu-id="8a329-1703">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="8a329-1704">`FilePut` Grava cadeias de caracteres de comprimento variável que não são elementos das estruturas sem o descritor de dois bytes de comprimento.</span><span class="sxs-lookup"><span data-stu-id="8a329-1704">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="8a329-1705">O número de bytes gravados for igual ao número de caracteres na cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="8a329-1705">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="8a329-1706">Por exemplo, as instruções a seguir gravam 11 bytes no arquivo número 1:</span><span class="sxs-lookup"><span data-stu-id="8a329-1706">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="8a329-1707">A gravação em um arquivo usando a função `FilePut` requer o acesso `Write` da enumeração <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="8a329-1707">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a329-1708">Este exemplo usa o `FilePut` função para gravar dados em um arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-1708">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="8a329-1709">Cinco registros da estrutura `Person` são gravados no arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-1709">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8a329-1710"><paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</span><span class="sxs-lookup"><span data-stu-id="8a329-1710"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="8a329-1711">O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="8a329-1711">File mode is invalid.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (int FileNumber, ValueType Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(int32 FileNumber, class System.ValueType Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.ValueType,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Integer, Value As ValueType, Optional RecordNumber As Long = -1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.ValueType" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="8a329-1712">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-1712">Required.</span></span> <span data-ttu-id="8a329-1713">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="8a329-1713">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="8a329-1714">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-1714">Required.</span></span> <span data-ttu-id="8a329-1715">Nome de variável válido que contém dados gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="8a329-1715">Valid variable name that contains data written to disk.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="8a329-1716">Opcional.</span><span class="sxs-lookup"><span data-stu-id="8a329-1716">Optional.</span></span> <span data-ttu-id="8a329-1717">Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a gravação começa.</span><span class="sxs-lookup"><span data-stu-id="8a329-1717">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span></span></param>
        <summary><span data-ttu-id="8a329-1718">Grava dados de uma variável em um arquivo de disco.</span><span class="sxs-lookup"><span data-stu-id="8a329-1718">Writes data from a variable to a disk file.</span></span> <span data-ttu-id="8a329-1719">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FilePut" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-1719">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span></span> <span data-ttu-id="8a329-1720">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-1720">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a329-1721">`FilePut` só é válido em `Random` e `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="8a329-1721">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="8a329-1722">Dados gravados com `FilePut` costumam ser lidos a partir de um arquivo usando `FileGet`.</span><span class="sxs-lookup"><span data-stu-id="8a329-1722">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="8a329-1723">O primeiro registro ou byte em um arquivo está na posição 1, o segundo registro ou byte está na posição 2 e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="8a329-1723">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="8a329-1724">Se você omitir `RecordNumber`, o próximo registro ou byte após a última `FileGet` ou `FilePut` de função ou apontado pela última `Seek` função é gravada.</span><span class="sxs-lookup"><span data-stu-id="8a329-1724">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="8a329-1725">O argumento `StringIsFixedLength` controla se a função interpreta cadeias de caracteres como sendo de tamanho variável ou fixo.</span><span class="sxs-lookup"><span data-stu-id="8a329-1725">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="8a329-1726">`FilePut` não grava o descritor do tamanho quando o argumento é `True`.</span><span class="sxs-lookup"><span data-stu-id="8a329-1726">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="8a329-1727">Se você usar `StringIsFixedLength`  =  `True` com `FilePut`, você deve fazer o mesmo com `FileGet`, e você precisa certificar-se de que a cadeia de caracteres é inicializada com o tamanho esperado.</span><span class="sxs-lookup"><span data-stu-id="8a329-1727">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="8a329-1728">Modo aleatório</span><span class="sxs-lookup"><span data-stu-id="8a329-1728">Random Mode</span></span>  
 <span data-ttu-id="8a329-1729">Para arquivos abertos no `Random` modo, as seguintes regras se aplicam:</span><span class="sxs-lookup"><span data-stu-id="8a329-1729">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="8a329-1730">Se o comprimento dos dados que estão sendo gravados for menor que o comprimento especificado no`RecordLength` cláusula do `FileOpen` função `FilePut` grava registros subsequentes em limites de comprimento de registro.</span><span class="sxs-lookup"><span data-stu-id="8a329-1730">If the length of the data being written is less than the length specified in the`RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="8a329-1731">O espaço entre o final de um registro e o início do próximo registro é preenchido com o conteúdo existente no buffer de arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-1731">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="8a329-1732">Porque a quantidade de dados não pode ser determinada com certeza, geralmente é recomendável ter o comprimento do registro corresponde ao tamanho dos dados que estão sendo gravados.</span><span class="sxs-lookup"><span data-stu-id="8a329-1732">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="8a329-1733">Se o comprimento dos dados que estão sendo gravados for maior do que o comprimento especificado no `RecordLength` cláusula do `FileOpen` função, uma exceção será lançada.</span><span class="sxs-lookup"><span data-stu-id="8a329-1733">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="8a329-1734">Caso a variável que está sendo gravada seja uma cadeia de caracteres, `FilePut` grava um descritor de dois bytes que contém o tamanho da cadeia de caracteres e, em seguida, grava os dados que vão para a variável.</span><span class="sxs-lookup"><span data-stu-id="8a329-1734">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="8a329-1735">Portanto, o comprimento do registro especificado pelo `RecordLength` cláusula de `FileOpen` função deve ser pelo menos dois bytes maior do que o comprimento real da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="8a329-1735">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="8a329-1736">Caso a variável que está sendo gravada seja um objeto que contém um tipo numérico, `FilePut` grava dois bytes que identificam o `VarType` do objeto e, em seguida, grava a variável.</span><span class="sxs-lookup"><span data-stu-id="8a329-1736">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="8a329-1737">Por exemplo, ao escrever um objeto que contém um número inteiro, `FilePut` grava seis bytes: dois bytes que identificam o objeto como `VarType(3)` (`Integer`) e quatro bytes que contêm os dados.</span><span class="sxs-lookup"><span data-stu-id="8a329-1737">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="8a329-1738">O comprimento do registro especificado pelo `RecordLength` parâmetro o `FileOpen` função deve ser pelo menos dois bytes maior do que o número real de bytes necessários para armazenar a variável.</span><span class="sxs-lookup"><span data-stu-id="8a329-1738">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="8a329-1739">Se a variável que está sendo gravada for um objeto que contém uma cadeia de caracteres, `FilePut` grava um descritor de dois bytes que identifica o `VarType(8)` do objeto, um descritor de dois bytes indicando o comprimento da cadeia de caracteres e, em seguida, grava os dados de cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="8a329-1739">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="8a329-1740">O comprimento do registro especificado pelo `RecordLength` parâmetro o `FileOpen` função deve ser pelo menos quatro bytes maior do que o comprimento real da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="8a329-1740">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="8a329-1741">Caso queira colocar uma cadeia de caracteres sem o descritor, você deve passar `True` para o parâmetro `StringIsFixedLength`, e a cadeia de caracteres lida deve ter o tamanho correto.</span><span class="sxs-lookup"><span data-stu-id="8a329-1741">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="8a329-1742">Caso a variável gravada seja uma matriz, você tem a opção de gravar ou não um descritor para o tamanho e as dimensões da matriz.</span><span class="sxs-lookup"><span data-stu-id="8a329-1742">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="8a329-1743">O descritor de arquivo para uma matriz dinâmica, mas não para uma matriz de tamanho fixo de gravação do Visual Basic 6.0 e versões anteriores.</span><span class="sxs-lookup"><span data-stu-id="8a329-1743">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="8a329-1744">Visual Basic 2005 tem como padrão não gravar o descritor.</span><span class="sxs-lookup"><span data-stu-id="8a329-1744">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="8a329-1745">Para gravar o descritor, defina o `ArrayIsDynamic` parâmetro `True`.</span><span class="sxs-lookup"><span data-stu-id="8a329-1745">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="8a329-1746">Ao escrever a matriz, você precisa comparar a forma com que a matriz será lida; se ela for lida com o descritor, você precisará escrever o descritor.</span><span class="sxs-lookup"><span data-stu-id="8a329-1746">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="8a329-1747">O descritor especifica a classificação de matriz, o tamanho e o limite inferior de cada classificação.</span><span class="sxs-lookup"><span data-stu-id="8a329-1747">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="8a329-1748">Seu comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="8a329-1748">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="8a329-1749">O comprimento do registro especificado pelo `RecordLength` cláusula de `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessários para gravar os dados de matriz e o descritor de matriz.</span><span class="sxs-lookup"><span data-stu-id="8a329-1749">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="8a329-1750">Por exemplo, a seguinte declaração de matriz necessitará de 218 bytes quando a matriz é gravada no disco.</span><span class="sxs-lookup"><span data-stu-id="8a329-1750">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="8a329-1751">Se a variável que está sendo gravada for qualquer outro tipo de variável (não uma cadeia de caracteres de comprimento variável ou um objeto), `FilePut` grava somente os dados da variável.</span><span class="sxs-lookup"><span data-stu-id="8a329-1751">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="8a329-1752">O comprimento do registro especificado pelo `RecordLength` cláusula de `FileOpen` função deve ser maior ou igual ao comprimento dos dados que estão sendo gravados.</span><span class="sxs-lookup"><span data-stu-id="8a329-1752">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="8a329-1753">`FilePut` grava os elementos de estruturas como se cada um fosse escrito individualmente, exceto que não há nenhum preenchimento entre elementos.</span><span class="sxs-lookup"><span data-stu-id="8a329-1753">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="8a329-1754">O `VBFixedString` atributo pode ser aplicado a campos de cadeia de caracteres nas estruturas para indicar o tamanho da cadeia de caracteres quando gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="8a329-1754">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="8a329-1755">Os campos que têm mais bytes do que o especificado pela cadeia de caracteres de `VBFixedString` atributo são truncados quando gravados em disco,</span><span class="sxs-lookup"><span data-stu-id="8a329-1755">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="8a329-1756">Modo binário</span><span class="sxs-lookup"><span data-stu-id="8a329-1756">Binary Mode</span></span>  
 <span data-ttu-id="8a329-1757">Para arquivos abertos no `Binary` modo, a maioria do `Random` modo regras se aplicam, com algumas exceções.</span><span class="sxs-lookup"><span data-stu-id="8a329-1757">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="8a329-1758">As seguintes regras para arquivos abertos no `Binary` modo diferem das regras para `Random` modo:</span><span class="sxs-lookup"><span data-stu-id="8a329-1758">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="8a329-1759">A cláusula `RecordLength` na função de `FileOpen` não está em vigor.</span><span class="sxs-lookup"><span data-stu-id="8a329-1759">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="8a329-1760">`FilePut` grava todas as variáveis em disco de maneira contígua, ou seja, sem preenchimento entre os registros.</span><span class="sxs-lookup"><span data-stu-id="8a329-1760">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="8a329-1761">Para qualquer matriz que não seja uma matriz em uma estrutura, `FilePut` grava somente os dados.</span><span class="sxs-lookup"><span data-stu-id="8a329-1761">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="8a329-1762">Nenhum descritor é escrito.</span><span class="sxs-lookup"><span data-stu-id="8a329-1762">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="8a329-1763">`FilePut` Grava cadeias de caracteres de comprimento variável que não são elementos das estruturas sem o descritor de dois bytes de comprimento.</span><span class="sxs-lookup"><span data-stu-id="8a329-1763">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="8a329-1764">O número de bytes gravados for igual ao número de caracteres na cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="8a329-1764">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="8a329-1765">Por exemplo, as instruções a seguir gravam 11 bytes no arquivo número 1:</span><span class="sxs-lookup"><span data-stu-id="8a329-1765">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="8a329-1766">A gravação em um arquivo usando a função `FilePut` requer o acesso `Write` da enumeração <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="8a329-1766">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a329-1767">Este exemplo usa o `FilePut` função para gravar dados em um arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-1767">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="8a329-1768">Cinco registros da estrutura `Person` são gravados no arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-1768">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8a329-1769"><paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</span><span class="sxs-lookup"><span data-stu-id="8a329-1769"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="8a329-1770">O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="8a329-1770">File mode is invalid.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (object FileNumber, object Value, object RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(object FileNumber, object Value, object RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Object, Value As Object, Optional RecordNumber As Object = -1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This member has been deprecated. Please use FilePutObject to write Object types, or coerce FileNumber and RecordNumber to Integer for writing non-Object types. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Object" />
        <Parameter Name="Value" Type="System.Object" />
        <Parameter Name="RecordNumber" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="8a329-1771">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-1771">Required.</span></span> <span data-ttu-id="8a329-1772">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="8a329-1772">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="8a329-1773">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-1773">Required.</span></span> <span data-ttu-id="8a329-1774">Nome de variável válido que contém dados gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="8a329-1774">Valid variable name that contains data written to disk.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="8a329-1775">Opcional.</span><span class="sxs-lookup"><span data-stu-id="8a329-1775">Optional.</span></span> <span data-ttu-id="8a329-1776">Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a gravação começa.</span><span class="sxs-lookup"><span data-stu-id="8a329-1776">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span></span></param>
        <summary><span data-ttu-id="8a329-1777">Grava dados de uma variável em um arquivo de disco.</span><span class="sxs-lookup"><span data-stu-id="8a329-1777">Writes data from a variable to a disk file.</span></span> <span data-ttu-id="8a329-1778">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FilePut" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-1778">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span></span> <span data-ttu-id="8a329-1779">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-1779">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a329-1780">`FilePut` só é válido em `Random` e `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="8a329-1780">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="8a329-1781">Dados gravados com `FilePut` costumam ser lidos a partir de um arquivo usando `FileGet`.</span><span class="sxs-lookup"><span data-stu-id="8a329-1781">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="8a329-1782">O primeiro registro ou byte em um arquivo está na posição 1, o segundo registro ou byte está na posição 2 e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="8a329-1782">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="8a329-1783">Se você omitir `RecordNumber`, o próximo registro ou byte após a última `FileGet` ou `FilePut` de função ou apontado pela última `Seek` função é gravada.</span><span class="sxs-lookup"><span data-stu-id="8a329-1783">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="8a329-1784">O argumento `StringIsFixedLength` controla se a função interpreta cadeias de caracteres como sendo de tamanho variável ou fixo.</span><span class="sxs-lookup"><span data-stu-id="8a329-1784">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="8a329-1785">`FilePut` não grava o descritor do tamanho quando o argumento é `True`.</span><span class="sxs-lookup"><span data-stu-id="8a329-1785">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="8a329-1786">Se você usar `StringIsFixedLength`  =  `True` com `FilePut`, você deve fazer o mesmo com `FileGet`, e você precisa certificar-se de que a cadeia de caracteres é inicializada com o tamanho esperado.</span><span class="sxs-lookup"><span data-stu-id="8a329-1786">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="8a329-1787">Modo aleatório</span><span class="sxs-lookup"><span data-stu-id="8a329-1787">Random Mode</span></span>  
 <span data-ttu-id="8a329-1788">Para arquivos abertos no `Random` modo, as seguintes regras se aplicam:</span><span class="sxs-lookup"><span data-stu-id="8a329-1788">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="8a329-1789">Se o comprimento dos dados que estão sendo gravados for menor que o comprimento especificado no `RecordLength` cláusula do `FileOpen` função `FilePut` grava registros subsequentes em limites de comprimento de registro.</span><span class="sxs-lookup"><span data-stu-id="8a329-1789">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="8a329-1790">O espaço entre o final de um registro e o início do próximo registro é preenchido com o conteúdo existente no buffer de arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-1790">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="8a329-1791">Porque a quantidade de dados não pode ser determinada com certeza, geralmente é recomendável ter o comprimento do registro corresponde ao tamanho dos dados que estão sendo gravados.</span><span class="sxs-lookup"><span data-stu-id="8a329-1791">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="8a329-1792">Se o comprimento dos dados que estão sendo gravados for maior do que o comprimento especificado no `RecordLength` cláusula do `FileOpen` função, uma exceção será lançada.</span><span class="sxs-lookup"><span data-stu-id="8a329-1792">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="8a329-1793">Caso a variável que está sendo gravada seja uma cadeia de caracteres, `FilePut` grava um descritor de dois bytes que contém o tamanho da cadeia de caracteres e, em seguida, grava os dados que vão para a variável.</span><span class="sxs-lookup"><span data-stu-id="8a329-1793">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="8a329-1794">Portanto, o comprimento do registro especificado pelo `RecordLength` cláusula de `FileOpen` função deve ser pelo menos dois bytes maior do que o comprimento real da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="8a329-1794">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="8a329-1795">Caso a variável que está sendo gravada seja um objeto que contém um tipo numérico, `FilePut` grava dois bytes que identificam o `VarType` do objeto e, em seguida, grava a variável.</span><span class="sxs-lookup"><span data-stu-id="8a329-1795">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="8a329-1796">Por exemplo, ao escrever um objeto que contém um número inteiro, `FilePut` grava seis bytes: dois bytes que identificam o objeto como `VarType(3)` (`Integer`) e quatro bytes que contêm os dados.</span><span class="sxs-lookup"><span data-stu-id="8a329-1796">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="8a329-1797">O comprimento do registro especificado pelo `RecordLength` parâmetro o `FileOpen` função deve ser pelo menos dois bytes maior do que o número real de bytes necessários para armazenar a variável.</span><span class="sxs-lookup"><span data-stu-id="8a329-1797">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="8a329-1798">Se a variável que está sendo gravada for um objeto que contém uma cadeia de caracteres, `FilePut` grava um descritor de dois bytes que identifica o `VarType(8)` do objeto, um descritor de dois bytes indicando o comprimento da cadeia de caracteres e, em seguida, grava os dados de cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="8a329-1798">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="8a329-1799">O comprimento do registro especificado pelo `RecordLength` parâmetro o `FileOpen` função deve ser pelo menos quatro bytes maior do que o comprimento real da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="8a329-1799">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="8a329-1800">Caso queira colocar uma cadeia de caracteres sem o descritor, você deve passar `True` para o parâmetro `StringIsFixedLength`, e a cadeia de caracteres lida deve ter o tamanho correto.</span><span class="sxs-lookup"><span data-stu-id="8a329-1800">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="8a329-1801">Caso a variável gravada seja uma matriz, você tem a opção de gravar ou não um descritor para o tamanho e as dimensões da matriz.</span><span class="sxs-lookup"><span data-stu-id="8a329-1801">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="8a329-1802">O descritor de arquivo para uma matriz dinâmica, mas não para uma matriz de tamanho fixo de gravação do Visual Basic 6.0 e versões anteriores.</span><span class="sxs-lookup"><span data-stu-id="8a329-1802">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="8a329-1803">Visual Basic 2005 tem como padrão não gravar o descritor.</span><span class="sxs-lookup"><span data-stu-id="8a329-1803">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="8a329-1804">Para gravar o descritor, defina o `ArrayIsDynamic` parâmetro `True`.</span><span class="sxs-lookup"><span data-stu-id="8a329-1804">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="8a329-1805">Ao escrever a matriz, você precisa comparar a forma com que a matriz será lida; se ela for lida com o descritor, você precisará escrever o descritor.</span><span class="sxs-lookup"><span data-stu-id="8a329-1805">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="8a329-1806">O descritor especifica a classificação de matriz, o tamanho e o limite inferior de cada classificação.</span><span class="sxs-lookup"><span data-stu-id="8a329-1806">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="8a329-1807">Seu comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="8a329-1807">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="8a329-1808">O comprimento do registro especificado pelo `RecordLength` cláusula de `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessários para gravar os dados de matriz e o descritor de matriz.</span><span class="sxs-lookup"><span data-stu-id="8a329-1808">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="8a329-1809">Por exemplo, a seguinte declaração de matriz necessitará de 218 bytes quando a matriz é gravada no disco.</span><span class="sxs-lookup"><span data-stu-id="8a329-1809">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="8a329-1810">Se a variável que está sendo gravada for qualquer outro tipo de variável (não uma cadeia de caracteres de comprimento variável ou um objeto), `FilePut` grava somente os dados da variável.</span><span class="sxs-lookup"><span data-stu-id="8a329-1810">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="8a329-1811">O comprimento do registro especificado pelo `RecordLength` cláusula de `FileOpen` função deve ser maior ou igual ao comprimento dos dados que estão sendo gravados.</span><span class="sxs-lookup"><span data-stu-id="8a329-1811">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="8a329-1812">`FilePut` grava os elementos de estruturas como se cada um fosse escrito individualmente, exceto que não há nenhum preenchimento entre elementos.</span><span class="sxs-lookup"><span data-stu-id="8a329-1812">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="8a329-1813">O `VBFixedString` atributo pode ser aplicado a campos de cadeia de caracteres nas estruturas para indicar o tamanho da cadeia de caracteres quando gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="8a329-1813">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="8a329-1814">Os campos que têm mais bytes do que o especificado pela cadeia de caracteres de `VBFixedString` atributo são truncados quando gravados em disco,</span><span class="sxs-lookup"><span data-stu-id="8a329-1814">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="8a329-1815">Modo binário</span><span class="sxs-lookup"><span data-stu-id="8a329-1815">Binary Mode</span></span>  
 <span data-ttu-id="8a329-1816">Para arquivos abertos no `Binary` modo, a maioria do `Random` modo regras se aplicam, com algumas exceções.</span><span class="sxs-lookup"><span data-stu-id="8a329-1816">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="8a329-1817">As seguintes regras para arquivos abertos no `Binary` modo diferem das regras para `Random` modo:</span><span class="sxs-lookup"><span data-stu-id="8a329-1817">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="8a329-1818">A cláusula `RecordLength` na função de `FileOpen` não está em vigor.</span><span class="sxs-lookup"><span data-stu-id="8a329-1818">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="8a329-1819">`FilePut` grava todas as variáveis em disco de maneira contígua, ou seja, sem preenchimento entre os registros.</span><span class="sxs-lookup"><span data-stu-id="8a329-1819">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="8a329-1820">Para qualquer matriz que não seja uma matriz em uma estrutura, `FilePut` grava somente os dados.</span><span class="sxs-lookup"><span data-stu-id="8a329-1820">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="8a329-1821">Nenhum descritor é escrito.</span><span class="sxs-lookup"><span data-stu-id="8a329-1821">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="8a329-1822">`FilePut` Grava cadeias de caracteres de comprimento variável que não são elementos das estruturas sem o descritor de dois bytes de comprimento.</span><span class="sxs-lookup"><span data-stu-id="8a329-1822">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="8a329-1823">O número de bytes gravados for igual ao número de caracteres na cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="8a329-1823">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="8a329-1824">Por exemplo, as instruções a seguir gravam 11 bytes no arquivo número 1:</span><span class="sxs-lookup"><span data-stu-id="8a329-1824">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="8a329-1825">A gravação em um arquivo usando a função `FilePut` requer o acesso `Write` da enumeração <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="8a329-1825">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a329-1826">Este exemplo usa o `FilePut` função para gravar dados em um arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-1826">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="8a329-1827">Cinco registros da estrutura `Person` são gravados no arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-1827">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8a329-1828"><paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</span><span class="sxs-lookup"><span data-stu-id="8a329-1828"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="8a329-1829">O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="8a329-1829">File mode is invalid.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (int FileNumber, string Value, long RecordNumber = -1, bool StringIsFixedLength = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(int32 FileNumber, string Value, int64 RecordNumber, bool StringIsFixedLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.String,System.Int64,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Integer, Value As String, Optional RecordNumber As Long = -1, Optional StringIsFixedLength As Boolean = false)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.String" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
        <Parameter Name="StringIsFixedLength" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="8a329-1830">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-1830">Required.</span></span> <span data-ttu-id="8a329-1831">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="8a329-1831">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="8a329-1832">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-1832">Required.</span></span> <span data-ttu-id="8a329-1833">Nome de variável válido que contém dados gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="8a329-1833">Valid variable name that contains data written to disk.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="8a329-1834">Opcional.</span><span class="sxs-lookup"><span data-stu-id="8a329-1834">Optional.</span></span> <span data-ttu-id="8a329-1835">Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a gravação começa.</span><span class="sxs-lookup"><span data-stu-id="8a329-1835">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span></span></param>
        <param name="StringIsFixedLength"><span data-ttu-id="8a329-1836">Opcional.</span><span class="sxs-lookup"><span data-stu-id="8a329-1836">Optional.</span></span> <span data-ttu-id="8a329-1837">Aplica-se somente ao gravar uma cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="8a329-1837">Applies only when writing a string.</span></span> <span data-ttu-id="8a329-1838">Especifica se um descritor de comprimento de cadeia de caracteres de dois bytes da cadeia de caracteres deve ou não ser gravado no arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-1838">Specifies whether to write a two-byte string length descriptor for the string to the file.</span></span> <span data-ttu-id="8a329-1839">O padrão é <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-1839">The default is <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="8a329-1840">Grava dados de uma variável em um arquivo de disco.</span><span class="sxs-lookup"><span data-stu-id="8a329-1840">Writes data from a variable to a disk file.</span></span> <span data-ttu-id="8a329-1841">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FilePut" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-1841">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span></span> <span data-ttu-id="8a329-1842">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-1842">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />..</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a329-1843">`FilePut` só é válido em `Random` e `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="8a329-1843">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="8a329-1844">Dados gravados com `FilePut` costumam ser lidos a partir de um arquivo usando `FileGet`.</span><span class="sxs-lookup"><span data-stu-id="8a329-1844">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="8a329-1845">O primeiro registro ou byte em um arquivo está na posição 1, o segundo registro ou byte está na posição 2 e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="8a329-1845">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="8a329-1846">Se você omitir `RecordNumber`, o próximo registro ou byte após a última `FileGet` ou `FilePut` de função ou apontado pela última `Seek` função é gravada.</span><span class="sxs-lookup"><span data-stu-id="8a329-1846">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="8a329-1847">O argumento `StringIsFixedLength` controla se a função interpreta cadeias de caracteres como sendo de tamanho variável ou fixo.</span><span class="sxs-lookup"><span data-stu-id="8a329-1847">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="8a329-1848">`FilePut` não grava o descritor do tamanho quando o argumento é `True`.</span><span class="sxs-lookup"><span data-stu-id="8a329-1848">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="8a329-1849">Se você usar `StringIsFixedLength`  =  `True` com `FilePut`, você deve fazer o mesmo com `FileGet`, e você precisa certificar-se de que a cadeia de caracteres é inicializada com o tamanho esperado.</span><span class="sxs-lookup"><span data-stu-id="8a329-1849">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="8a329-1850">Modo aleatório</span><span class="sxs-lookup"><span data-stu-id="8a329-1850">Random Mode</span></span>  
 <span data-ttu-id="8a329-1851">Para arquivos abertos no `Random` modo, as seguintes regras se aplicam:</span><span class="sxs-lookup"><span data-stu-id="8a329-1851">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="8a329-1852">Se o comprimento dos dados que estão sendo gravados for menor que o comprimento especificado no `RecordLength` cláusula do `FileOpen` função `FilePut` grava registros subsequentes em limites de comprimento de registro.</span><span class="sxs-lookup"><span data-stu-id="8a329-1852">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="8a329-1853">O espaço entre o final de um registro e o início do próximo registro é preenchido com o conteúdo existente no buffer de arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-1853">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="8a329-1854">Porque a quantidade de dados não pode ser determinada com certeza, geralmente é recomendável ter o comprimento do registro corresponde ao tamanho dos dados que estão sendo gravados.</span><span class="sxs-lookup"><span data-stu-id="8a329-1854">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="8a329-1855">Se o comprimento dos dados que estão sendo gravados for maior do que o comprimento especificado no `RecordLength` cláusula do `FileOpen` função, uma exceção será lançada.</span><span class="sxs-lookup"><span data-stu-id="8a329-1855">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="8a329-1856">Caso a variável que está sendo gravada seja uma cadeia de caracteres, `FilePut` grava um descritor de dois bytes que contém o tamanho da cadeia de caracteres e, em seguida, grava os dados que vão para a variável.</span><span class="sxs-lookup"><span data-stu-id="8a329-1856">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="8a329-1857">Portanto, o comprimento do registro especificado pelo `RecordLength` cláusula de `FileOpen` função deve ser pelo menos dois bytes maior do que o comprimento real da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="8a329-1857">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="8a329-1858">Caso a variável que está sendo gravada seja um objeto que contém um tipo numérico, `FilePut` grava dois bytes que identificam o `VarType` do objeto e, em seguida, grava a variável.</span><span class="sxs-lookup"><span data-stu-id="8a329-1858">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="8a329-1859">Por exemplo, ao escrever um objeto que contém um número inteiro, `FilePut` grava seis bytes: dois bytes que identificam o objeto como `VarType(3)` (`Integer`) e quatro bytes que contêm os dados.</span><span class="sxs-lookup"><span data-stu-id="8a329-1859">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="8a329-1860">O comprimento do registro especificado pelo `RecordLength` parâmetro o `FileOpen` função deve ser pelo menos dois bytes maior do que o número real de bytes necessários para armazenar a variável.</span><span class="sxs-lookup"><span data-stu-id="8a329-1860">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="8a329-1861">Se a variável que está sendo gravada for um objeto que contém uma cadeia de caracteres, `FilePut` grava um descritor de dois bytes que identifica o `VarType(8)` do objeto, um descritor de dois bytes indicando o comprimento da cadeia de caracteres e, em seguida, grava os dados de cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="8a329-1861">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="8a329-1862">O comprimento do registro especificado pelo `RecordLength` parâmetro o `FileOpen` função deve ser pelo menos quatro bytes maior do que o comprimento real da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="8a329-1862">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="8a329-1863">Caso queira colocar uma cadeia de caracteres sem o descritor, você deve passar `True` para o parâmetro `StringIsFixedLength`, e a cadeia de caracteres lida deve ter o tamanho correto.</span><span class="sxs-lookup"><span data-stu-id="8a329-1863">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="8a329-1864">Caso a variável gravada seja uma matriz, você tem a opção de gravar ou não um descritor para o tamanho e as dimensões da matriz.</span><span class="sxs-lookup"><span data-stu-id="8a329-1864">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="8a329-1865">O descritor de arquivo para uma matriz dinâmica, mas não para uma matriz de tamanho fixo de gravação do Visual Basic 6.0 e versões anteriores.</span><span class="sxs-lookup"><span data-stu-id="8a329-1865">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="8a329-1866">Visual Basic 2005 tem como padrão não gravar o descritor.</span><span class="sxs-lookup"><span data-stu-id="8a329-1866">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="8a329-1867">Para gravar o descritor, defina o `ArrayIsDynamic` parâmetro `True`.</span><span class="sxs-lookup"><span data-stu-id="8a329-1867">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="8a329-1868">Ao escrever a matriz, você precisa comparar a forma com que a matriz será lida; se ela for lida com o descritor, você precisará escrever o descritor.</span><span class="sxs-lookup"><span data-stu-id="8a329-1868">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="8a329-1869">O descritor especifica a classificação de matriz, o tamanho e o limite inferior de cada classificação.</span><span class="sxs-lookup"><span data-stu-id="8a329-1869">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="8a329-1870">Seu comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="8a329-1870">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="8a329-1871">O comprimento do registro especificado pelo `RecordLength` cláusula de `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessários para gravar os dados de matriz e o descritor de matriz.</span><span class="sxs-lookup"><span data-stu-id="8a329-1871">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="8a329-1872">Por exemplo, a seguinte declaração de matriz necessitará de 218 bytes quando a matriz é gravada no disco.</span><span class="sxs-lookup"><span data-stu-id="8a329-1872">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="8a329-1873">Se a variável que está sendo gravada for qualquer outro tipo de variável (não uma cadeia de caracteres de comprimento variável ou um objeto), `FilePut` grava somente os dados da variável.</span><span class="sxs-lookup"><span data-stu-id="8a329-1873">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="8a329-1874">O comprimento do registro especificado pelo `RecordLength` cláusula de `FileOpen` função deve ser maior ou igual ao comprimento dos dados que estão sendo gravados.</span><span class="sxs-lookup"><span data-stu-id="8a329-1874">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="8a329-1875">`FilePut` grava os elementos de estruturas como se cada um fosse escrito individualmente, exceto que não há nenhum preenchimento entre elementos.</span><span class="sxs-lookup"><span data-stu-id="8a329-1875">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="8a329-1876">O `VBFixedString` atributo pode ser aplicado a campos de cadeia de caracteres nas estruturas para indicar o tamanho da cadeia de caracteres quando gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="8a329-1876">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="8a329-1877">Os campos que têm mais bytes do que o especificado pela cadeia de caracteres de `VBFixedString` atributo são truncados quando gravados em disco,</span><span class="sxs-lookup"><span data-stu-id="8a329-1877">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="8a329-1878">Modo binário</span><span class="sxs-lookup"><span data-stu-id="8a329-1878">Binary Mode</span></span>  
 <span data-ttu-id="8a329-1879">Para arquivos abertos no `Binary` modo, a maioria do `Random` modo regras se aplicam, com algumas exceções.</span><span class="sxs-lookup"><span data-stu-id="8a329-1879">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="8a329-1880">As seguintes regras para arquivos abertos no `Binary` modo diferem das regras para `Random` modo:</span><span class="sxs-lookup"><span data-stu-id="8a329-1880">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="8a329-1881">A cláusula `RecordLength` na função de `FileOpen` não está em vigor.</span><span class="sxs-lookup"><span data-stu-id="8a329-1881">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="8a329-1882">`FilePut` grava todas as variáveis em disco de maneira contígua, ou seja, sem preenchimento entre os registros.</span><span class="sxs-lookup"><span data-stu-id="8a329-1882">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="8a329-1883">Para qualquer matriz que não seja uma matriz em uma estrutura, `FilePut` grava somente os dados.</span><span class="sxs-lookup"><span data-stu-id="8a329-1883">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="8a329-1884">Nenhum descritor é escrito.</span><span class="sxs-lookup"><span data-stu-id="8a329-1884">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="8a329-1885">`FilePut` Grava cadeias de caracteres de comprimento variável que não são elementos das estruturas sem o descritor de dois bytes de comprimento.</span><span class="sxs-lookup"><span data-stu-id="8a329-1885">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="8a329-1886">O número de bytes gravados for igual ao número de caracteres na cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="8a329-1886">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="8a329-1887">Por exemplo, as instruções a seguir gravam 11 bytes no arquivo número 1:</span><span class="sxs-lookup"><span data-stu-id="8a329-1887">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="8a329-1888">A gravação em um arquivo usando a função `FilePut` requer o acesso `Write` da enumeração <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="8a329-1888">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a329-1889">Este exemplo usa o `FilePut` função para gravar dados em um arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-1889">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="8a329-1890">Cinco registros da estrutura `Person` são gravados no arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-1890">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8a329-1891"><paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</span><span class="sxs-lookup"><span data-stu-id="8a329-1891"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="8a329-1892">O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="8a329-1892">File mode is invalid.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (int FileNumber, Array Value, long RecordNumber = -1, bool ArrayIsDynamic = false, bool StringIsFixedLength = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(int32 FileNumber, class System.Array Value, int64 RecordNumber, bool ArrayIsDynamic, bool StringIsFixedLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Array,System.Int64,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Integer, Value As Array, Optional RecordNumber As Long = -1, Optional ArrayIsDynamic As Boolean = false, Optional StringIsFixedLength As Boolean = false)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Array" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
        <Parameter Name="ArrayIsDynamic" Type="System.Boolean" />
        <Parameter Name="StringIsFixedLength" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="8a329-1893">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-1893">Required.</span></span> <span data-ttu-id="8a329-1894">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="8a329-1894">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="8a329-1895">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-1895">Required.</span></span> <span data-ttu-id="8a329-1896">Nome de variável válido que contém dados gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="8a329-1896">Valid variable name that contains data written to disk.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="8a329-1897">Opcional.</span><span class="sxs-lookup"><span data-stu-id="8a329-1897">Optional.</span></span> <span data-ttu-id="8a329-1898">Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a gravação começa.</span><span class="sxs-lookup"><span data-stu-id="8a329-1898">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span></span></param>
        <param name="ArrayIsDynamic"><span data-ttu-id="8a329-1899">Opcional.</span><span class="sxs-lookup"><span data-stu-id="8a329-1899">Optional.</span></span> <span data-ttu-id="8a329-1900">Aplica-se somente ao gravar uma matriz.</span><span class="sxs-lookup"><span data-stu-id="8a329-1900">Applies only when writing an array.</span></span> <span data-ttu-id="8a329-1901">Especifica se a matriz deve ou não ser tratada como dinâmica e se um descritor de matriz deve ou não ser gravado na cadeia de caracteres que descreve o comprimento.</span><span class="sxs-lookup"><span data-stu-id="8a329-1901">Specifies whether the array is to be treated as dynamic, and whether to write an array descriptor for the string that describes the length.</span></span></param>
        <param name="StringIsFixedLength"><span data-ttu-id="8a329-1902">Opcional.</span><span class="sxs-lookup"><span data-stu-id="8a329-1902">Optional.</span></span> <span data-ttu-id="8a329-1903">Aplica-se somente ao gravar uma cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="8a329-1903">Applies only when writing a string.</span></span> <span data-ttu-id="8a329-1904">Especifica se um descritor de comprimento de cadeia de caracteres de dois bytes da cadeia de caracteres deve ou não ser gravado no arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-1904">Specifies whether to write a two-byte string length descriptor for the string to the file.</span></span> <span data-ttu-id="8a329-1905">O padrão é <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-1905">The default is <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="8a329-1906">Grava dados de uma variável em um arquivo de disco.</span><span class="sxs-lookup"><span data-stu-id="8a329-1906">Writes data from a variable to a disk file.</span></span> <span data-ttu-id="8a329-1907">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FilePut" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-1907">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span></span> <span data-ttu-id="8a329-1908">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-1908">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a329-1909">`FilePut` só é válido em `Random` e `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="8a329-1909">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="8a329-1910">Dados gravados com `FilePut` costumam ser lidos a partir de um arquivo usando `FileGet`.</span><span class="sxs-lookup"><span data-stu-id="8a329-1910">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="8a329-1911">O primeiro registro ou byte em um arquivo está na posição 1, o segundo registro ou byte está na posição 2 e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="8a329-1911">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="8a329-1912">Se você omitir `RecordNumber`, o próximo registro ou byte após a última `FileGet` ou `FilePut` de função ou apontado pela última `Seek` função é gravada.</span><span class="sxs-lookup"><span data-stu-id="8a329-1912">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="8a329-1913">O argumento `StringIsFixedLength` controla se a função interpreta cadeias de caracteres como sendo de tamanho variável ou fixo.</span><span class="sxs-lookup"><span data-stu-id="8a329-1913">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="8a329-1914">`FilePut` não grava o descritor do tamanho quando o argumento é `True`.</span><span class="sxs-lookup"><span data-stu-id="8a329-1914">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="8a329-1915">Se você usar `StringIsFixedLength`  =  `True` com `FilePut`, você deve fazer o mesmo com `FileGet`, e você precisa certificar-se de que a cadeia de caracteres é inicializada com o tamanho esperado.</span><span class="sxs-lookup"><span data-stu-id="8a329-1915">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="8a329-1916">Modo aleatório</span><span class="sxs-lookup"><span data-stu-id="8a329-1916">Random Mode</span></span>  
 <span data-ttu-id="8a329-1917">Para arquivos abertos no `Random` modo, as seguintes regras se aplicam:</span><span class="sxs-lookup"><span data-stu-id="8a329-1917">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="8a329-1918">Se o comprimento dos dados que estão sendo gravados for menor que o comprimento especificado no `RecordLength` cláusula do `FileOpen` função `FilePut` grava registros subsequentes em limites de comprimento de registro.</span><span class="sxs-lookup"><span data-stu-id="8a329-1918">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="8a329-1919">O espaço entre o final de um registro e o início do próximo registro é preenchido com o conteúdo existente no buffer de arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-1919">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="8a329-1920">Porque a quantidade de dados não pode ser determinada com certeza, geralmente é recomendável ter o comprimento do registro corresponde ao tamanho dos dados que estão sendo gravados.</span><span class="sxs-lookup"><span data-stu-id="8a329-1920">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="8a329-1921">Se o comprimento dos dados que estão sendo gravados for maior do que o comprimento especificado no `RecordLength` cláusula do `FileOpen` função, uma exceção será lançada.</span><span class="sxs-lookup"><span data-stu-id="8a329-1921">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="8a329-1922">Caso a variável que está sendo gravada seja uma cadeia de caracteres, `FilePut` grava um descritor de dois bytes que contém o tamanho da cadeia de caracteres e, em seguida, grava os dados que vão para a variável.</span><span class="sxs-lookup"><span data-stu-id="8a329-1922">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="8a329-1923">Portanto, o comprimento do registro especificado pelo `RecordLength` cláusula de `FileOpen` função deve ser pelo menos dois bytes maior do que o comprimento real da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="8a329-1923">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="8a329-1924">Caso a variável que está sendo gravada seja um objeto que contém um tipo numérico, `FilePut` grava dois bytes que identificam o `VarType` do objeto e, em seguida, grava a variável.</span><span class="sxs-lookup"><span data-stu-id="8a329-1924">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="8a329-1925">Por exemplo, ao escrever um objeto que contém um número inteiro, `FilePut` grava seis bytes: dois bytes que identificam o objeto como `VarType(3)` (`Integer`) e quatro bytes que contêm os dados.</span><span class="sxs-lookup"><span data-stu-id="8a329-1925">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="8a329-1926">O comprimento do registro especificado pelo `RecordLength` parâmetro o `FileOpen` função deve ser pelo menos dois bytes maior do que o número real de bytes necessários para armazenar a variável.</span><span class="sxs-lookup"><span data-stu-id="8a329-1926">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="8a329-1927">Se a variável que está sendo gravada for um objeto que contém uma cadeia de caracteres, `FilePut` grava um descritor de dois bytes que identifica o `VarType(8)` do objeto, um descritor de dois bytes indicando o comprimento da cadeia de caracteres e, em seguida, grava os dados de cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="8a329-1927">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="8a329-1928">O comprimento do registro especificado pelo `RecordLength` parâmetro o `FileOpen` função deve ser pelo menos quatro bytes maior do que o comprimento real da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="8a329-1928">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="8a329-1929">Caso queira colocar uma cadeia de caracteres sem o descritor, você deve passar `True` para o parâmetro `StringIsFixedLength`, e a cadeia de caracteres lida deve ter o tamanho correto.</span><span class="sxs-lookup"><span data-stu-id="8a329-1929">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="8a329-1930">Caso a variável gravada seja uma matriz, você tem a opção de gravar ou não um descritor para o tamanho e as dimensões da matriz.</span><span class="sxs-lookup"><span data-stu-id="8a329-1930">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="8a329-1931">O descritor de arquivo para uma matriz dinâmica, mas não para uma matriz de tamanho fixo de gravação do Visual Basic 6.0 e versões anteriores.</span><span class="sxs-lookup"><span data-stu-id="8a329-1931">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="8a329-1932">Visual Basic 2005 tem como padrão não gravar o descritor.</span><span class="sxs-lookup"><span data-stu-id="8a329-1932">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="8a329-1933">Para gravar o descritor, defina o `ArrayIsDynamic` parâmetro `True`.</span><span class="sxs-lookup"><span data-stu-id="8a329-1933">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="8a329-1934">Ao escrever a matriz, você precisa comparar a forma com que a matriz será lida; se ela for lida com o descritor, você precisará escrever o descritor.</span><span class="sxs-lookup"><span data-stu-id="8a329-1934">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="8a329-1935">O descritor especifica a classificação de matriz, o tamanho e o limite inferior de cada classificação.</span><span class="sxs-lookup"><span data-stu-id="8a329-1935">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="8a329-1936">Seu comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="8a329-1936">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="8a329-1937">O comprimento do registro especificado pelo `RecordLength` cláusula de `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessários para gravar os dados de matriz e o descritor de matriz.</span><span class="sxs-lookup"><span data-stu-id="8a329-1937">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="8a329-1938">Por exemplo, a seguinte declaração de matriz necessitará de 218 bytes quando a matriz é gravada no disco.</span><span class="sxs-lookup"><span data-stu-id="8a329-1938">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="8a329-1939">Se a variável que está sendo gravada for qualquer outro tipo de variável (não uma cadeia de caracteres de comprimento variável ou um objeto), `FilePut` grava somente os dados da variável.</span><span class="sxs-lookup"><span data-stu-id="8a329-1939">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="8a329-1940">O comprimento do registro especificado pelo `RecordLength` cláusula de `FileOpen` função deve ser maior ou igual ao comprimento dos dados que estão sendo gravados.</span><span class="sxs-lookup"><span data-stu-id="8a329-1940">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="8a329-1941">`FilePut` grava os elementos de estruturas como se cada um fosse escrito individualmente, exceto que não há nenhum preenchimento entre elementos.</span><span class="sxs-lookup"><span data-stu-id="8a329-1941">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="8a329-1942">O `VBFixedString` atributo pode ser aplicado a campos de cadeia de caracteres nas estruturas para indicar o tamanho da cadeia de caracteres quando gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="8a329-1942">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="8a329-1943">Os campos que têm mais bytes do que o especificado pela cadeia de caracteres de `VBFixedString` atributo são truncados quando gravados em disco,</span><span class="sxs-lookup"><span data-stu-id="8a329-1943">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="8a329-1944">Modo binário</span><span class="sxs-lookup"><span data-stu-id="8a329-1944">Binary Mode</span></span>  
 <span data-ttu-id="8a329-1945">Para arquivos abertos no `Binary` modo, a maioria do `Random` modo regras se aplicam, com algumas exceções.</span><span class="sxs-lookup"><span data-stu-id="8a329-1945">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="8a329-1946">As seguintes regras para arquivos abertos no `Binary` modo diferem das regras para `Random` modo:</span><span class="sxs-lookup"><span data-stu-id="8a329-1946">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="8a329-1947">A cláusula `RecordLength` na função de `FileOpen` não está em vigor.</span><span class="sxs-lookup"><span data-stu-id="8a329-1947">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="8a329-1948">`FilePut` grava todas as variáveis em disco de maneira contígua, ou seja, sem preenchimento entre os registros.</span><span class="sxs-lookup"><span data-stu-id="8a329-1948">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="8a329-1949">Para qualquer matriz que não seja uma matriz em uma estrutura, `FilePut` grava somente os dados.</span><span class="sxs-lookup"><span data-stu-id="8a329-1949">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="8a329-1950">Nenhum descritor é escrito.</span><span class="sxs-lookup"><span data-stu-id="8a329-1950">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="8a329-1951">`FilePut` Grava cadeias de caracteres de comprimento variável que não são elementos das estruturas sem o descritor de dois bytes de comprimento.</span><span class="sxs-lookup"><span data-stu-id="8a329-1951">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="8a329-1952">O número de bytes gravados for igual ao número de caracteres na cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="8a329-1952">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="8a329-1953">Por exemplo, as instruções a seguir gravam 11 bytes no arquivo número 1:</span><span class="sxs-lookup"><span data-stu-id="8a329-1953">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="8a329-1954">A gravação em um arquivo usando a função `FilePut` requer o acesso `Write` da enumeração <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="8a329-1954">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a329-1955">Este exemplo usa o `FilePut` função para gravar dados em um arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-1955">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="8a329-1956">Cinco registros da estrutura `Person` são gravados no arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-1956">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8a329-1957"><paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</span><span class="sxs-lookup"><span data-stu-id="8a329-1957"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="8a329-1958">O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="8a329-1958">File mode is invalid.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FilePutObject">
      <MemberSignature Language="C#" Value="public static void FilePutObject (int FileNumber, object Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePutObject(int32 FileNumber, object Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePutObject(System.Int32,System.Object,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePutObject (FileNumber As Integer, Value As Object, Optional RecordNumber As Long = -1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Object" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="8a329-1959">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-1959">Required.</span></span> <span data-ttu-id="8a329-1960">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="8a329-1960">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="8a329-1961">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-1961">Required.</span></span> <span data-ttu-id="8a329-1962">Nome de variável válido que contém dados gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="8a329-1962">Valid variable name that contains data written to disk.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="8a329-1963">Opcional.</span><span class="sxs-lookup"><span data-stu-id="8a329-1963">Optional.</span></span> <span data-ttu-id="8a329-1964">Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a gravação começa.</span><span class="sxs-lookup"><span data-stu-id="8a329-1964">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span></span></param>
        <summary><span data-ttu-id="8a329-1965">Grava dados de uma variável em um arquivo de disco.</span><span class="sxs-lookup"><span data-stu-id="8a329-1965">Writes data from a variable to a disk file.</span></span>  <span data-ttu-id="8a329-1966">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FilePutObject" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-1966">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePutObject" />.</span></span> <span data-ttu-id="8a329-1967">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-1967">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a329-1968">O `FilePutObject` função é usada em vez de `FilePut` para evitar ambiguidades no tempo de compilação se tipo `Object` é transmitido em vez de outro tipo, como `Integer`, `Long`, `Short`e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="8a329-1968">The `FilePutObject` function is used instead of `FilePut` to avoid ambiguities at compile time if type `Object` is passed instead of another type, such as `Integer`, `Long`, `Short`, and so forth.</span></span>  
  
 <span data-ttu-id="8a329-1969">`FilePutObject` gravações e leituras de descritores que descrevem o objeto.</span><span class="sxs-lookup"><span data-stu-id="8a329-1969">`FilePutObject` writes and reads descriptors that describe the object.</span></span> <span data-ttu-id="8a329-1970">Se você pretende gravar o `Variant` tipo `FilePutObject` é necessária.</span><span class="sxs-lookup"><span data-stu-id="8a329-1970">If you intend to write out the `Variant` type, `FilePutObject` is required.</span></span> <span data-ttu-id="8a329-1971">Em caso de dúvida, se você estiver usando um objeto para o segundo parâmetro, é recomendável que você sempre use `FilePutObject` e `FileGetObject`.</span><span class="sxs-lookup"><span data-stu-id="8a329-1971">When in doubt, if you are using an object for the second parameter, we recommend that you always use `FilePutObject` and `FileGetObject`.</span></span>  
  
 <span data-ttu-id="8a329-1972">`FilePutObject` só é válido em `Random` e `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="8a329-1972">`FilePutObject` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="8a329-1973">Dados gravados com `FilePutObject` costumam ser lidos a partir de um arquivo usando `FileGetObject`.</span><span class="sxs-lookup"><span data-stu-id="8a329-1973">Data written with `FilePutObject` is usually read from a file by using `FileGetObject`.</span></span>  
  
 <span data-ttu-id="8a329-1974">O primeiro registro ou byte em um arquivo está na posição 1, o segundo registro ou byte está na posição 2 e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="8a329-1974">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="8a329-1975">Se você omitir `RecordNumber`, `FilePutObject` grava o próximo registro ou byte após a última `FileGetObject` ou `FilePutObject` função (ou o registro ou byte apontado pela última `Seek` função).</span><span class="sxs-lookup"><span data-stu-id="8a329-1975">If you omit `RecordNumber`, `FilePutObject` writes the next record or byte after the last `FileGetObject` or `FilePutObject` function (or the record or byte pointed to by the last `Seek` function).</span></span>  
  
 <span data-ttu-id="8a329-1976">O argumento `StringIsFixedLength` controla se a função interpreta cadeias de caracteres como sendo de tamanho variável ou fixo.</span><span class="sxs-lookup"><span data-stu-id="8a329-1976">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="8a329-1977">`FilePutObject` não grava o descritor do tamanho quando o argumento é `True`.</span><span class="sxs-lookup"><span data-stu-id="8a329-1977">`FilePutObject` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="8a329-1978">Se você usar `StringIsFixedLength`  =  `True` com `FilePutObject`, você deve fazer o mesmo com `FileGetObject`, e você deve também Certifique-se de que a cadeia de caracteres é inicializada com o tamanho esperado.</span><span class="sxs-lookup"><span data-stu-id="8a329-1978">If you use `StringIsFixedLength` = `True` with `FilePutObject`, you have to do the same with `FileGetObject`, and you must also make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="8a329-1979">Modo aleatório</span><span class="sxs-lookup"><span data-stu-id="8a329-1979">Random Mode</span></span>  
 <span data-ttu-id="8a329-1980">Para arquivos abertos no `Random` modo, as seguintes regras se aplicam:</span><span class="sxs-lookup"><span data-stu-id="8a329-1980">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="8a329-1981">Se o comprimento dos dados que estão sendo gravados for menor que o comprimento especificado no `RecordLength` cláusula do `FileOpen` função `FilePutObject` grava registros subsequentes em limites de comprimento de registro.</span><span class="sxs-lookup"><span data-stu-id="8a329-1981">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePutObject` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="8a329-1982">O espaço entre o final de um registro e o início do próximo registro é preenchido com o conteúdo existente no buffer de arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-1982">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="8a329-1983">A quantidade de dados não pode ser determinada com precisão, geralmente é recomendável ter o comprimento do registro corresponde ao tamanho dos dados que estão sendo gravados.</span><span class="sxs-lookup"><span data-stu-id="8a329-1983">Because the amount of padding data cannot be precisely determined, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="8a329-1984">Se o comprimento dos dados que estão sendo gravados for maior do que o comprimento especificado no `RecordLength` cláusula do `FileOpen` função, uma exceção será lançada.</span><span class="sxs-lookup"><span data-stu-id="8a329-1984">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception is thrown.</span></span>  
  
-   <span data-ttu-id="8a329-1985">Caso a variável que está sendo gravada seja um objeto que contém um tipo numérico, `FilePutObject` grava dois bytes que identificam o `VarType` do objeto e, em seguida, grava a variável.</span><span class="sxs-lookup"><span data-stu-id="8a329-1985">If the variable being written is an object that contains a numeric type, `FilePutObject` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="8a329-1986">Por exemplo, ao escrever um objeto que contém um número inteiro, `FilePutObject` grava seis bytes: dois bytes que identificam o objeto como `VarType(3)` (`Integer`) e quatro bytes que contêm os dados.</span><span class="sxs-lookup"><span data-stu-id="8a329-1986">For example, when writing an object that contains an integer, `FilePutObject` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="8a329-1987">O comprimento do registro especificado pelo `RecordLength` parâmetro o `FileOpen` função deve ser pelo menos dois bytes maior do que o número real de bytes necessários para armazenar a variável.</span><span class="sxs-lookup"><span data-stu-id="8a329-1987">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="8a329-1988">Se a variável que está sendo gravada for um objeto que contém uma cadeia de caracteres, `FilePutObject` grava um descritor de dois bytes que identifica o `VarType(8)` do objeto, um descritor de dois bytes indicando o comprimento da cadeia de caracteres e, em seguida, grava os dados de cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="8a329-1988">If the variable being written is an object that contains a string, `FilePutObject` writes a two-byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="8a329-1989">O comprimento do registro especificado pelo `RecordLength` parâmetro o `FileOpen` função deve ser pelo menos quatro bytes maior do que o comprimento real da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="8a329-1989">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="8a329-1990">Caso queira colocar uma cadeia de caracteres sem o descritor, você deve passar `True` para o parâmetro `StringIsFixedLength`, e a cadeia de caracteres lida deve ter o tamanho correto.</span><span class="sxs-lookup"><span data-stu-id="8a329-1990">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="8a329-1991">Se a variável que está sendo gravada for uma matriz e, em seguida, o comprimento do registro especificado pelo `RecordLength` cláusula de `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessários para gravar os dados de matriz e o descritor de matriz.</span><span class="sxs-lookup"><span data-stu-id="8a329-1991">If the variable being written is an array, then the record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="8a329-1992">O descritor especifica a classificação de matriz, o tamanho e o limite inferior de cada classificação.</span><span class="sxs-lookup"><span data-stu-id="8a329-1992">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="8a329-1993">Seu comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="8a329-1993">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="8a329-1994">Modo binário</span><span class="sxs-lookup"><span data-stu-id="8a329-1994">Binary Mode</span></span>  
 <span data-ttu-id="8a329-1995">Para arquivos abertos no `Binary` modo, todos os `Random` aplicarem regras de modo, exceto:</span><span class="sxs-lookup"><span data-stu-id="8a329-1995">For files opened in `Binary` mode, all the `Random` mode rules apply, except:</span></span>  
  
-   <span data-ttu-id="8a329-1996">A cláusula `RecordLength` na função de `FileOpen` não está em vigor.</span><span class="sxs-lookup"><span data-stu-id="8a329-1996">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="8a329-1997">`FilePutObject` grava todas as variáveis em disco de maneira contígua, ou seja, sem preenchimento entre os registros.</span><span class="sxs-lookup"><span data-stu-id="8a329-1997">`FilePutObject` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a329-1998">Este exemplo usa o `FilePutObject` função para gravar uma cadeia de caracteres em um arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-1998">This example uses the `FilePutObject` function to write a string to a file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#54](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#54)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />
      </Docs>
    </Member>
    <Member MemberName="FileWidth">
      <MemberSignature Language="C#" Value="public static void FileWidth (int FileNumber, int RecordWidth);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileWidth(int32 FileNumber, int32 RecordWidth) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileWidth(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileWidth (FileNumber As Integer, RecordWidth As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void FileWidth(int FileNumber, int RecordWidth);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="RecordWidth" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="8a329-1999">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-1999">Required.</span></span> <span data-ttu-id="8a329-2000">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="8a329-2000">Any valid file number.</span></span></param>
        <param name="RecordWidth"><span data-ttu-id="8a329-2001">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-2001">Required.</span></span> <span data-ttu-id="8a329-2002">Expressão numérica no intervalo 0 a 255, inclusive, que indica quantos caracteres são exibidos em uma linha antes de uma nova linha ser iniciada.</span><span class="sxs-lookup"><span data-stu-id="8a329-2002">Numeric expression in the range 0–255, inclusive, which indicates how many characters appear on a line before a new line is started.</span></span> <span data-ttu-id="8a329-2003">Se <c>RecordWidth</c> for igual a 0, não haverá nenhum limite para o tamanho de uma linha.</span><span class="sxs-lookup"><span data-stu-id="8a329-2003">If <c>RecordWidth</c> equals 0, there is no limit to the length of a line.</span></span> <span data-ttu-id="8a329-2004">O valor padrão de <c>RecordWidth</c> é 0.</span><span class="sxs-lookup"><span data-stu-id="8a329-2004">The default value for <c>RecordWidth</c> is 0.</span></span></param>
        <summary><span data-ttu-id="8a329-2005">Atribui uma largura de linha de saída a um arquivo aberto usando a função <see langword="FileOpen" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-2005">Assigns an output line width to a file opened by using the <see langword="FileOpen" /> function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8a329-2006">Este exemplo usa o `FileWidth` função para definir a largura da linha de saída para um arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-2006">This example uses the `FileWidth` function to set the output line width for a file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#10](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="8a329-2007">O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="8a329-2007">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FreeFile">
      <MemberSignature Language="C#" Value="public static int FreeFile ();" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 FreeFile() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FreeFile" />
      <MemberSignature Language="VB.NET" Value="Public Function FreeFile () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int FreeFile();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8a329-2008">Retorna um valor <see langword="Integer" /> que representa o próximo número de arquivo disponível para uso pela função <see langword="FileOpen" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-2008">Returns an <see langword="Integer" /> value that represents the next file number available for use by the <see langword="FileOpen" /> function.</span></span></summary>
        <returns><span data-ttu-id="8a329-2009">Retorna um valor <see langword="Integer" /> que representa o próximo número de arquivo disponível para uso pela função <see langword="FileOpen" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-2009">Returns an <see langword="Integer" /> value that represents the next file number available for use by the <see langword="FileOpen" /> function.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a329-2010">Use `FreeFile` para fornecer um número de arquivos que já não está sendo usado.</span><span class="sxs-lookup"><span data-stu-id="8a329-2010">Use `FreeFile` to supply a file number that is not already being used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a329-2011">Este exemplo usa o `FreeFile` função para retornar o próximo número de arquivos disponíveis.</span><span class="sxs-lookup"><span data-stu-id="8a329-2011">This example uses the `FreeFile` function to return the next available file number.</span></span> <span data-ttu-id="8a329-2012">Cinco arquivos foram abertos para saída dentro do loop, e alguns dados de exemplo são gravados para cada um.</span><span class="sxs-lookup"><span data-stu-id="8a329-2012">Five files are opened for output within the loop, and some sample data is written to each.</span></span>  
  
 [!code-vb[VbVbalrCatRef#55](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#55)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="8a329-2013">Mais de 255 arquivos estão em uso.</span><span class="sxs-lookup"><span data-stu-id="8a329-2013">More than 255 files are in use.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="GetAttr">
      <MemberSignature Language="C#" Value="public static Microsoft.VisualBasic.FileAttribute GetAttr (string PathName);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype Microsoft.VisualBasic.FileAttribute GetAttr(string PathName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAttr (PathName As String) As FileAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::VisualBasic::FileAttribute GetAttr(System::String ^ PathName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FileAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="PathName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="PathName"><span data-ttu-id="8a329-2014">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-2014">Required.</span></span> <span data-ttu-id="8a329-2015">A expressão <see langword="String" /> que especifica um nome de arquivo, diretório ou pasta.</span><span class="sxs-lookup"><span data-stu-id="8a329-2015"><see langword="String" /> expression that specifies a file, directory, or folder name.</span></span> <span data-ttu-id="8a329-2016"><c>PathName</c> pode incluir o diretório ou a pasta, bem como a unidade.</span><span class="sxs-lookup"><span data-stu-id="8a329-2016"><c>PathName</c> can include the directory or folder, and the drive.</span></span></param>
        <summary><span data-ttu-id="8a329-2017">Retorna um valor <see langword="FileAttribute" /> que representa os atributos de um arquivo, diretório ou pasta.</span><span class="sxs-lookup"><span data-stu-id="8a329-2017">Returns a <see langword="FileAttribute" /> value that represents the attributes of a file, directory, or folder.</span></span> <span data-ttu-id="8a329-2018">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FileAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-2018">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileAttribute" />.</span></span> <span data-ttu-id="8a329-2019">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-2019">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <returns><span data-ttu-id="8a329-2020">O valor retornado por <see langword="GetAttr" /> é a soma dos seguintes valores de enumeração:</span><span class="sxs-lookup"><span data-stu-id="8a329-2020">The value returned by <see langword="GetAttr" /> is the sum of the following enumeration values:</span></span>  
  
 <span data-ttu-id="8a329-2021"><list type="table"><item><term> Valor</span><span class="sxs-lookup"><span data-stu-id="8a329-2021"><list type="table"><item><term> Value</span></span>  
  
 <span data-ttu-id="8a329-2022"></term><description> Constante</span><span class="sxs-lookup"><span data-stu-id="8a329-2022"></term><description> Constant</span></span>  
  
 <span data-ttu-id="8a329-2023"></description><description> Descrição</span><span class="sxs-lookup"><span data-stu-id="8a329-2023"></description><description> Description</span></span>  
  
 <span data-ttu-id="8a329-2024"></description></item><item><term><see langword="Normal" /></term><description><see langword="vbNormal" /></description><description> Normal.</span><span class="sxs-lookup"><span data-stu-id="8a329-2024"></description></item><item><term><see langword="Normal" /></term><description><see langword="vbNormal" /></description><description> Normal.</span></span>  
  
 <span data-ttu-id="8a329-2025"></description></item><item><term><see langword="ReadOnly" /></term><description><see langword="vbReadOnly" /></description><description> Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="8a329-2025"></description></item><item><term><see langword="ReadOnly" /></term><description><see langword="vbReadOnly" /></description><description> Read-only.</span></span>  
  
 <span data-ttu-id="8a329-2026"></description></item><item><term><see langword="Hidden" /></term><description><see langword="vbHidden" /></description><description> Oculto.</span><span class="sxs-lookup"><span data-stu-id="8a329-2026"></description></item><item><term><see langword="Hidden" /></term><description><see langword="vbHidden" /></description><description> Hidden.</span></span>  
  
 <span data-ttu-id="8a329-2027"></description></item><item><term><see langword="System" /></term><description><see langword="vbSystem" /></description><description> Arquivo do sistema.</span><span class="sxs-lookup"><span data-stu-id="8a329-2027"></description></item><item><term><see langword="System" /></term><description><see langword="vbSystem" /></description><description> System file.</span></span>  
  
 <span data-ttu-id="8a329-2028"></description></item><item><term><see langword="Directory" /></term><description><see langword="vbDirectory" /></description><description> Diretório ou pasta.</span><span class="sxs-lookup"><span data-stu-id="8a329-2028"></description></item><item><term><see langword="Directory" /></term><description><see langword="vbDirectory" /></description><description> Directory or folder.</span></span>  
  
 <span data-ttu-id="8a329-2029"></description></item><item><term><see langword="Archive" /></term><description><see langword="vbArchive" /></description><description> O arquivo foi alterado desde o último backup.</span><span class="sxs-lookup"><span data-stu-id="8a329-2029"></description></item><item><term><see langword="Archive" /></term><description><see langword="vbArchive" /></description><description> File has changed since last backup.</span></span>  
  
 <span data-ttu-id="8a329-2030"></description></item><item><term><see langword="Alias" /></term><description><see langword="vbAlias" /></description><description> O arquivo tem um nome diferente.</span><span class="sxs-lookup"><span data-stu-id="8a329-2030"></description></item><item><term><see langword="Alias" /></term><description><see langword="vbAlias" /></description><description> File has a different name.</span></span>  
  
 </description></item></list><block subset="none" type="note"><para>  
 <span data-ttu-id="8a329-2031">Essas enumerações são especificadas pela linguagem Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="8a329-2031">These enumerations are specified by the Visual Basic language.</span></span> <span data-ttu-id="8a329-2032">Os nomes podem ser usados em qualquer lugar no seu código em vez dos valores reais.</span><span class="sxs-lookup"><span data-stu-id="8a329-2032">The names can be used anywhere in your code in place of the actual values.</span></span>  
  
</para></block></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a329-2033">Para determinar quais atributos estão definidos, use o `And` operador para executar uma comparação bit a bit do valor retornado pelo `GetAttr` função e o valor do atributo de arquivo individual desejado.</span><span class="sxs-lookup"><span data-stu-id="8a329-2033">To determine which attributes are set, use the `And` operator to perform a bitwise comparison of the value returned by the `GetAttr` function and the value of the individual file attribute you want.</span></span> <span data-ttu-id="8a329-2034">Se o resultado não for zero, esse atributo é definido para o arquivo nomeado.</span><span class="sxs-lookup"><span data-stu-id="8a329-2034">If the result is not zero, that attribute is set for the named file.</span></span> <span data-ttu-id="8a329-2035">Por exemplo, o valor de retorno dos seguintes `And` expressão é zero se o `Archive` atributo não está definido:</span><span class="sxs-lookup"><span data-stu-id="8a329-2035">For example, the return value of the following `And` expression is zero if the `Archive` attribute is not set:</span></span>  
  
```vb  
Result = GetAttr(FName) And vbArchive  
```  
  
 <span data-ttu-id="8a329-2036">Um valor diferente de zero será retornado se o `Archive` atributo está definido.</span><span class="sxs-lookup"><span data-stu-id="8a329-2036">A nonzero value is returned if the `Archive` attribute is set.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a329-2037">Este exemplo usa o `GetAttr` função para determinar os atributos de um arquivo e diretório ou pasta.</span><span class="sxs-lookup"><span data-stu-id="8a329-2037">This example uses the `GetAttr` function to determine the attributes of a file and directory or folder.</span></span>  
  
 [!code-vb[VbVbalrCatRef#25](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#25)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="8a329-2038"><paramref name="Pathname" /> é inválido ou contém caracteres curinga.</span><span class="sxs-lookup"><span data-stu-id="8a329-2038"><paramref name="Pathname" /> is invalid or contains wildcards.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="8a329-2039">O arquivo de destino não existe.</span><span class="sxs-lookup"><span data-stu-id="8a329-2039">Target file does not exist.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileAttr(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SetAttr(System.String,Microsoft.VisualBasic.FileAttribute)" />
        <altmember cref="T:System.IO.IOException" />
        <altmember cref="T:System.IO.FileNotFoundException" />
        <altmember cref="T:Microsoft.VisualBasic.FileAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Input">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8a329-2040">Lê dados de um arquivo sequencial aberto e atribui os dados a variáveis.</span><span class="sxs-lookup"><span data-stu-id="8a329-2040">Reads data from an open sequential file and assigns the data to variables.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public static void Input (int FileNumber, ref bool Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Input(int32 FileNumber, bool&amp; Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Input (FileNumber As Integer, ByRef Value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Input(int FileNumber, bool % Value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Boolean&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="8a329-2041">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-2041">Required.</span></span> <span data-ttu-id="8a329-2042">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="8a329-2042">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="8a329-2043">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-2043">Required.</span></span> <span data-ttu-id="8a329-2044">A variável à qual os valores lidos do arquivo são atribuídos, não pode ser uma variável de objeto ou matriz.</span><span class="sxs-lookup"><span data-stu-id="8a329-2044">Variable that is assigned the values read from the file—cannot be an array or object variable.</span></span></param>
        <summary><span data-ttu-id="8a329-2045">Lê dados de um arquivo sequencial aberto e atribui os dados a variáveis.</span><span class="sxs-lookup"><span data-stu-id="8a329-2045">Reads data from an open sequential file and assigns the data to variables.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a329-2046">O `Input` função é fornecida para compatibilidade com versões anteriores e pode afetar o desempenho.</span><span class="sxs-lookup"><span data-stu-id="8a329-2046">The `Input` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="8a329-2047">Para aplicativos legados não, o `My.Computer.FileSystem` objeto fornece um melhor desempenho.</span><span class="sxs-lookup"><span data-stu-id="8a329-2047">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="8a329-2048">Para obter mais informações, consulte [acesso a arquivos com o Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="8a329-2048">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="8a329-2049">Dados lidos com `Input` costumam ser gravados em um arquivo usando-se `Write`.</span><span class="sxs-lookup"><span data-stu-id="8a329-2049">Data read with `Input` is usually written to a file by using `Write`.</span></span> <span data-ttu-id="8a329-2050">Use esta função somente com arquivos abertos em `Input` ou `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="8a329-2050">Use this function only with files opened in `Input` or `Binary` mode.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8a329-2051">Durante a leitura de arquivos, não faça decisões sobre o conteúdo do arquivo com base na extensão de nome de arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-2051">When reading from files, do not make decisions about the contents of the file based on the file name extension.</span></span> <span data-ttu-id="8a329-2052">Por exemplo, um arquivo chamado Form1.vb não pode ser um arquivo fonte do Visual Basic 2005.</span><span class="sxs-lookup"><span data-stu-id="8a329-2052">For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</span></span>  
  
 <span data-ttu-id="8a329-2053">Quando lidos, dados numéricos ou cadeia de caracteres padrão são atribuídos a variáveis sem modificação.</span><span class="sxs-lookup"><span data-stu-id="8a329-2053">When read, standard string or numeric data is assigned to variables without modification.</span></span> <span data-ttu-id="8a329-2054">A tabela a seguir ilustra como outros dados de entrada são tratados.</span><span class="sxs-lookup"><span data-stu-id="8a329-2054">The following table illustrates how other input data is treated.</span></span>  
  
|<span data-ttu-id="8a329-2055">Dados</span><span class="sxs-lookup"><span data-stu-id="8a329-2055">Data</span></span>|<span data-ttu-id="8a329-2056">Valor atribuído à variável</span><span class="sxs-lookup"><span data-stu-id="8a329-2056">Value assigned to variable</span></span>|  
|-|-|  
|<span data-ttu-id="8a329-2057">Delimitador de vírgula ou linha em branco</span><span class="sxs-lookup"><span data-stu-id="8a329-2057">Delimiting comma or blank line</span></span>|<span data-ttu-id="8a329-2058">Vazio</span><span class="sxs-lookup"><span data-stu-id="8a329-2058">Empty</span></span>|  
|<span data-ttu-id="8a329-2059">NULL # #</span><span class="sxs-lookup"><span data-stu-id="8a329-2059">#NULL#</span></span>|`DBNull`|  
|<span data-ttu-id="8a329-2060"># TRUE ou FALSE # #</span><span class="sxs-lookup"><span data-stu-id="8a329-2060">#TRUE# or #FALSE#</span></span>|<span data-ttu-id="8a329-2061">`True` ou `False`</span><span class="sxs-lookup"><span data-stu-id="8a329-2061">`True` or `False`</span></span>|  
|#`yyyy-mm-dd hh:mm:ss`#|<span data-ttu-id="8a329-2062">A data e/ou hora representada pela expressão</span><span class="sxs-lookup"><span data-stu-id="8a329-2062">The date and/or time represented by the expression</span></span>|  
|<span data-ttu-id="8a329-2063">#ERROR `errornumber`#</span><span class="sxs-lookup"><span data-stu-id="8a329-2063">#ERROR `errornumber`#</span></span>|<span data-ttu-id="8a329-2064">`errornumber` (a variável é um objeto marcado como um erro)</span><span class="sxs-lookup"><span data-stu-id="8a329-2064">`errornumber` (variable is an object tagged as an error)</span></span>|  
  
 <span data-ttu-id="8a329-2065">Caso você atinja o final do arquivo enquanto insere um item de dados, a entrada é interrompida e ocorre um erro.</span><span class="sxs-lookup"><span data-stu-id="8a329-2065">If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8a329-2066">O `Input` função não está localizada.</span><span class="sxs-lookup"><span data-stu-id="8a329-2066">The `Input` function is not localized.</span></span> <span data-ttu-id="8a329-2067">Por exemplo, na versão em alemão, caso você insira 3,14159, ele retorna apenas 3, porque a vírgula é tratada como um separador variável, em vez de uma vírgula decimal.</span><span class="sxs-lookup"><span data-stu-id="8a329-2067">For example, in the German version, if you input 3,14159, it returns only 3, because the comma is treated as a variable separator instead of as a decimal point.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8a329-2068">Leitura de um arquivo usando o `Input` função requer `Read` acessar do `FileIOPermissionAccess` enumeração.</span><span class="sxs-lookup"><span data-stu-id="8a329-2068">Reading from a file by using the `Input` function requires `Read` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="8a329-2069">Para obter mais informações, consulte <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="8a329-2069">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a329-2070">Este exemplo usa o `Input` função para ler dados de um arquivo em duas variáveis.</span><span class="sxs-lookup"><span data-stu-id="8a329-2070">This example uses the `Input` function to read data from a file into two variables.</span></span> <span data-ttu-id="8a329-2071">Este exemplo supõe que `TestFile` é um arquivo que tem algumas linhas de dados gravados usando o `Write` funcionar, cada linha que contém uma cadeia de caracteres entre aspas e um número separado por uma vírgula, por exemplo: ("Olá", 234).</span><span class="sxs-lookup"><span data-stu-id="8a329-2071">This example assumes that `TestFile` is a file that has some lines of data written to it using the `Write` function, each line containing a string in quotations and a number separated by a comma, for example: ("Hello", 234).</span></span>  
  
 [!code-vb[VbVbalrCatRef#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="8a329-2072">O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="8a329-2072">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public static void Input (int FileNumber, ref byte Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Input(int32 FileNumber, unsigned int8&amp; Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Byte@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Input (FileNumber As Integer, ByRef Value As Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Input(int FileNumber, System::Byte % Value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Byte&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="8a329-2073">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-2073">Required.</span></span> <span data-ttu-id="8a329-2074">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="8a329-2074">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="8a329-2075">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-2075">Required.</span></span> <span data-ttu-id="8a329-2076">A variável à qual os valores lidos do arquivo são atribuídos, não pode ser uma variável de objeto ou matriz.</span><span class="sxs-lookup"><span data-stu-id="8a329-2076">Variable that is assigned the values read from the file—cannot be an array or object variable.</span></span></param>
        <summary><span data-ttu-id="8a329-2077">Lê dados de um arquivo sequencial aberto e atribui os dados a variáveis.</span><span class="sxs-lookup"><span data-stu-id="8a329-2077">Reads data from an open sequential file and assigns the data to variables.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a329-2078">O `Input` função é fornecida para compatibilidade com versões anteriores e pode afetar o desempenho.</span><span class="sxs-lookup"><span data-stu-id="8a329-2078">The `Input` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="8a329-2079">Para aplicativos legados não, o `My.Computer.FileSystem` objeto fornece um melhor desempenho.</span><span class="sxs-lookup"><span data-stu-id="8a329-2079">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="8a329-2080">Para obter mais informações, consulte [acesso a arquivos com o Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="8a329-2080">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="8a329-2081">Dados lidos com `Input` costumam ser gravados em um arquivo usando-se `Write`.</span><span class="sxs-lookup"><span data-stu-id="8a329-2081">Data read with `Input` is usually written to a file by using `Write`.</span></span> <span data-ttu-id="8a329-2082">Use esta função somente com arquivos abertos em `Input` ou `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="8a329-2082">Use this function only with files opened in `Input` or `Binary` mode.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8a329-2083">Durante a leitura de arquivos, não faça decisões sobre o conteúdo do arquivo com base na extensão de nome de arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-2083">When reading from files, do not make decisions about the contents of the file based on the file name extension.</span></span> <span data-ttu-id="8a329-2084">Por exemplo, um arquivo chamado Form1.vb não pode ser um arquivo fonte do Visual Basic 2005.</span><span class="sxs-lookup"><span data-stu-id="8a329-2084">For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</span></span>  
  
 <span data-ttu-id="8a329-2085">Quando lidos, dados numéricos ou cadeia de caracteres padrão são atribuídos a variáveis sem modificação.</span><span class="sxs-lookup"><span data-stu-id="8a329-2085">When read, standard string or numeric data is assigned to variables without modification.</span></span> <span data-ttu-id="8a329-2086">A tabela a seguir ilustra como outros dados de entrada são tratados.</span><span class="sxs-lookup"><span data-stu-id="8a329-2086">The following table illustrates how other input data is treated.</span></span>  
  
|<span data-ttu-id="8a329-2087">Dados</span><span class="sxs-lookup"><span data-stu-id="8a329-2087">Data</span></span>|<span data-ttu-id="8a329-2088">Valor atribuído à variável</span><span class="sxs-lookup"><span data-stu-id="8a329-2088">Value assigned to variable</span></span>|  
|-|-|  
|<span data-ttu-id="8a329-2089">Delimitador de vírgula ou linha em branco</span><span class="sxs-lookup"><span data-stu-id="8a329-2089">Delimiting comma or blank line</span></span>|<span data-ttu-id="8a329-2090">Vazio</span><span class="sxs-lookup"><span data-stu-id="8a329-2090">Empty</span></span>|  
|<span data-ttu-id="8a329-2091">NULL # #</span><span class="sxs-lookup"><span data-stu-id="8a329-2091">#NULL#</span></span>|`DBNull`|  
|<span data-ttu-id="8a329-2092"># TRUE ou FALSE # #</span><span class="sxs-lookup"><span data-stu-id="8a329-2092">#TRUE# or #FALSE#</span></span>|<span data-ttu-id="8a329-2093">`True` ou `False`</span><span class="sxs-lookup"><span data-stu-id="8a329-2093">`True` or `False`</span></span>|  
|#`yyyy-mm-dd hh:mm:ss`#|<span data-ttu-id="8a329-2094">A data e/ou hora representada pela expressão</span><span class="sxs-lookup"><span data-stu-id="8a329-2094">The date and/or time represented by the expression</span></span>|  
|<span data-ttu-id="8a329-2095">#ERROR `errornumber`#</span><span class="sxs-lookup"><span data-stu-id="8a329-2095">#ERROR `errornumber`#</span></span>|<span data-ttu-id="8a329-2096">`errornumber` (a variável é um objeto marcado como um erro)</span><span class="sxs-lookup"><span data-stu-id="8a329-2096">`errornumber` (variable is an object tagged as an error)</span></span>|  
  
 <span data-ttu-id="8a329-2097">Caso você atinja o final do arquivo enquanto insere um item de dados, a entrada é interrompida e ocorre um erro.</span><span class="sxs-lookup"><span data-stu-id="8a329-2097">If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8a329-2098">O `Input` função não está localizada.</span><span class="sxs-lookup"><span data-stu-id="8a329-2098">The `Input` function is not localized.</span></span> <span data-ttu-id="8a329-2099">Por exemplo, na versão em alemão, caso você insira 3,14159, ele retorna apenas 3, porque a vírgula é tratada como um separador variável, em vez de uma vírgula decimal.</span><span class="sxs-lookup"><span data-stu-id="8a329-2099">For example, in the German version, if you input 3,14159, it returns only 3, because the comma is treated as a variable separator instead of as a decimal point.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8a329-2100">Leitura de um arquivo usando o `Input` função requer `Read` acessar do `FileIOPermissionAccess` enumeração.</span><span class="sxs-lookup"><span data-stu-id="8a329-2100">Reading from a file by using the `Input` function requires `Read` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="8a329-2101">Para obter mais informações, consulte <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="8a329-2101">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a329-2102">Este exemplo usa o `Input` função para ler dados de um arquivo em duas variáveis.</span><span class="sxs-lookup"><span data-stu-id="8a329-2102">This example uses the `Input` function to read data from a file into two variables.</span></span> <span data-ttu-id="8a329-2103">Este exemplo supõe que `TestFile` é um arquivo que tem algumas linhas de dados gravados usando o `Write` funcionar, cada linha que contém uma cadeia de caracteres entre aspas e um número separado por uma vírgula, por exemplo: ("Olá", 234).</span><span class="sxs-lookup"><span data-stu-id="8a329-2103">This example assumes that `TestFile` is a file that has some lines of data written to it using the `Write` function, each line containing a string in quotations and a number separated by a comma, for example: ("Hello", 234).</span></span>  
  
 [!code-vb[VbVbalrCatRef#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="8a329-2104">O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="8a329-2104">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public static void Input (int FileNumber, ref char Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Input(int32 FileNumber, char&amp; Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Char@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Input (FileNumber As Integer, ByRef Value As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Input(int FileNumber, char % Value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Char&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="8a329-2105">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-2105">Required.</span></span> <span data-ttu-id="8a329-2106">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="8a329-2106">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="8a329-2107">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-2107">Required.</span></span> <span data-ttu-id="8a329-2108">A variável à qual os valores lidos do arquivo são atribuídos, não pode ser uma variável de objeto ou matriz.</span><span class="sxs-lookup"><span data-stu-id="8a329-2108">Variable that is assigned the values read from the file—cannot be an array or object variable.</span></span></param>
        <summary><span data-ttu-id="8a329-2109">Lê dados de um arquivo sequencial aberto e atribui os dados a variáveis.</span><span class="sxs-lookup"><span data-stu-id="8a329-2109">Reads data from an open sequential file and assigns the data to variables.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a329-2110">O `Input` função é fornecida para compatibilidade com versões anteriores e pode afetar o desempenho.</span><span class="sxs-lookup"><span data-stu-id="8a329-2110">The `Input` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="8a329-2111">Para aplicativos legados não, o `My.Computer.FileSystem` objeto fornece um melhor desempenho.</span><span class="sxs-lookup"><span data-stu-id="8a329-2111">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="8a329-2112">Para obter mais informações, consulte [acesso a arquivos com o Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="8a329-2112">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="8a329-2113">Dados lidos com `Input` costumam ser gravados em um arquivo usando-se `Write`.</span><span class="sxs-lookup"><span data-stu-id="8a329-2113">Data read with `Input` is usually written to a file by using `Write`.</span></span> <span data-ttu-id="8a329-2114">Use esta função somente com arquivos abertos em `Input` ou `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="8a329-2114">Use this function only with files opened in `Input` or `Binary` mode.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8a329-2115">Durante a leitura de arquivos, não faça decisões sobre o conteúdo do arquivo com base na extensão de nome de arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-2115">When reading from files, do not make decisions about the contents of the file based on the file name extension.</span></span> <span data-ttu-id="8a329-2116">Por exemplo, um arquivo chamado Form1.vb não pode ser um arquivo fonte do Visual Basic 2005.</span><span class="sxs-lookup"><span data-stu-id="8a329-2116">For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</span></span>  
  
 <span data-ttu-id="8a329-2117">Quando lidos, dados numéricos ou cadeia de caracteres padrão são atribuídos a variáveis sem modificação.</span><span class="sxs-lookup"><span data-stu-id="8a329-2117">When read, standard string or numeric data is assigned to variables without modification.</span></span> <span data-ttu-id="8a329-2118">A tabela a seguir ilustra como outros dados de entrada são tratados.</span><span class="sxs-lookup"><span data-stu-id="8a329-2118">The following table illustrates how other input data is treated.</span></span>  
  
|<span data-ttu-id="8a329-2119">Dados</span><span class="sxs-lookup"><span data-stu-id="8a329-2119">Data</span></span>|<span data-ttu-id="8a329-2120">Valor atribuído à variável</span><span class="sxs-lookup"><span data-stu-id="8a329-2120">Value assigned to variable</span></span>|  
|-|-|  
|<span data-ttu-id="8a329-2121">Delimitador de vírgula ou linha em branco</span><span class="sxs-lookup"><span data-stu-id="8a329-2121">Delimiting comma or blank line</span></span>|<span data-ttu-id="8a329-2122">Vazio</span><span class="sxs-lookup"><span data-stu-id="8a329-2122">Empty</span></span>|  
|<span data-ttu-id="8a329-2123">NULL # #</span><span class="sxs-lookup"><span data-stu-id="8a329-2123">#NULL#</span></span>|`DBNull`|  
|<span data-ttu-id="8a329-2124"># TRUE ou FALSE # #</span><span class="sxs-lookup"><span data-stu-id="8a329-2124">#TRUE# or #FALSE#</span></span>|<span data-ttu-id="8a329-2125">`True` ou `False`</span><span class="sxs-lookup"><span data-stu-id="8a329-2125">`True` or `False`</span></span>|  
|#`yyyy-mm-dd hh:mm:ss`#|<span data-ttu-id="8a329-2126">A data e/ou hora representada pela expressão</span><span class="sxs-lookup"><span data-stu-id="8a329-2126">The date and/or time represented by the expression</span></span>|  
|<span data-ttu-id="8a329-2127">#ERROR `errornumber`#</span><span class="sxs-lookup"><span data-stu-id="8a329-2127">#ERROR `errornumber`#</span></span>|<span data-ttu-id="8a329-2128">`errornumber` (a variável é um objeto marcado como um erro)</span><span class="sxs-lookup"><span data-stu-id="8a329-2128">`errornumber` (variable is an object tagged as an error)</span></span>|  
  
 <span data-ttu-id="8a329-2129">Caso você atinja o final do arquivo enquanto insere um item de dados, a entrada é interrompida e ocorre um erro.</span><span class="sxs-lookup"><span data-stu-id="8a329-2129">If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8a329-2130">O `Input` função não está localizada.</span><span class="sxs-lookup"><span data-stu-id="8a329-2130">The `Input` function is not localized.</span></span> <span data-ttu-id="8a329-2131">Por exemplo, na versão em alemão, caso você insira 3,14159, ele retorna apenas 3, porque a vírgula é tratada como um separador variável, em vez de uma vírgula decimal.</span><span class="sxs-lookup"><span data-stu-id="8a329-2131">For example, in the German version, if you input 3,14159, it returns only 3, because the comma is treated as a variable separator instead of as a decimal point.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8a329-2132">Leitura de um arquivo usando o `Input` função requer `Read` acessar do `FileIOPermissionAccess` enumeração.</span><span class="sxs-lookup"><span data-stu-id="8a329-2132">Reading from a file by using the `Input` function requires `Read` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="8a329-2133">Para obter mais informações, consulte <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="8a329-2133">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a329-2134">Este exemplo usa o `Input` função para ler dados de um arquivo em duas variáveis.</span><span class="sxs-lookup"><span data-stu-id="8a329-2134">This example uses the `Input` function to read data from a file into two variables.</span></span> <span data-ttu-id="8a329-2135">Este exemplo pressupõe que `TestFile` seja um arquivo tendo várias linhas de dados gravadas usando a função `Write`, cada linha contendo uma cadeia de caracteres entre aspas e um número separado por uma vírgula; por exemplo: ("Hello", 234).</span><span class="sxs-lookup"><span data-stu-id="8a329-2135">This example assumes that `TestFile` is a file that has several lines of data written to it using the `Write` function, each line containing a string in quotations and a number separated by a comma, for example: ("Hello", 234).</span></span>  
  
 [!code-vb[VbVbalrCatRef#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="8a329-2136">O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="8a329-2136">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public static void Input (int FileNumber, ref DateTime Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Input(int32 FileNumber, valuetype System.DateTime&amp; Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.DateTime@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Input (FileNumber As Integer, ByRef Value As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Input(int FileNumber, DateTime % Value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.DateTime&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="8a329-2137">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-2137">Required.</span></span> <span data-ttu-id="8a329-2138">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="8a329-2138">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="8a329-2139">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-2139">Required.</span></span> <span data-ttu-id="8a329-2140">A variável à qual os valores lidos do arquivo são atribuídos, não pode ser uma variável de objeto ou matriz.</span><span class="sxs-lookup"><span data-stu-id="8a329-2140">Variable that is assigned the values read from the file—cannot be an array or object variable.</span></span></param>
        <summary><span data-ttu-id="8a329-2141">Lê dados de um arquivo sequencial aberto e atribui os dados a variáveis.</span><span class="sxs-lookup"><span data-stu-id="8a329-2141">Reads data from an open sequential file and assigns the data to variables.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a329-2142">O `Input` função é fornecida para compatibilidade com versões anteriores e pode afetar o desempenho.</span><span class="sxs-lookup"><span data-stu-id="8a329-2142">The `Input` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="8a329-2143">Para aplicativos legados não, o `My.Computer.FileSystem` objeto fornece um melhor desempenho.</span><span class="sxs-lookup"><span data-stu-id="8a329-2143">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="8a329-2144">Para obter mais informações, consulte [acesso a arquivos com o Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="8a329-2144">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="8a329-2145">Dados lidos com `Input` costumam ser gravados em um arquivo usando-se `Write`.</span><span class="sxs-lookup"><span data-stu-id="8a329-2145">Data read with `Input` is usually written to a file by using `Write`.</span></span> <span data-ttu-id="8a329-2146">Use esta função somente com arquivos abertos em `Input` ou `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="8a329-2146">Use this function only with files opened in `Input` or `Binary` mode.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8a329-2147">Durante a leitura de arquivos, não faça decisões sobre o conteúdo do arquivo com base na extensão de nome de arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-2147">When reading from files, do not make decisions about the contents of the file based on the file name extension.</span></span> <span data-ttu-id="8a329-2148">Por exemplo, um arquivo chamado Form1.vb não pode ser um arquivo fonte do Visual Basic 2005.</span><span class="sxs-lookup"><span data-stu-id="8a329-2148">For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</span></span>  
  
 <span data-ttu-id="8a329-2149">Quando lidos, dados numéricos ou cadeia de caracteres padrão são atribuídos a variáveis sem modificação.</span><span class="sxs-lookup"><span data-stu-id="8a329-2149">When read, standard string or numeric data is assigned to variables without modification.</span></span> <span data-ttu-id="8a329-2150">A tabela a seguir ilustra como outros dados de entrada são tratados.</span><span class="sxs-lookup"><span data-stu-id="8a329-2150">The following table illustrates how other input data is treated.</span></span>  
  
|<span data-ttu-id="8a329-2151">Dados</span><span class="sxs-lookup"><span data-stu-id="8a329-2151">Data</span></span>|<span data-ttu-id="8a329-2152">Valor atribuído à variável</span><span class="sxs-lookup"><span data-stu-id="8a329-2152">Value assigned to variable</span></span>|  
|-|-|  
|<span data-ttu-id="8a329-2153">Delimitador de vírgula ou linha em branco</span><span class="sxs-lookup"><span data-stu-id="8a329-2153">Delimiting comma or blank line</span></span>|<span data-ttu-id="8a329-2154">Vazio</span><span class="sxs-lookup"><span data-stu-id="8a329-2154">Empty</span></span>|  
|<span data-ttu-id="8a329-2155">NULL # #</span><span class="sxs-lookup"><span data-stu-id="8a329-2155">#NULL#</span></span>|`DBNull`|  
|<span data-ttu-id="8a329-2156"># TRUE ou FALSE # #</span><span class="sxs-lookup"><span data-stu-id="8a329-2156">#TRUE# or #FALSE#</span></span>|<span data-ttu-id="8a329-2157">`True` ou `False`</span><span class="sxs-lookup"><span data-stu-id="8a329-2157">`True` or `False`</span></span>|  
|#`yyyy-mm-dd hh:mm:ss`#|<span data-ttu-id="8a329-2158">A data e/ou hora representada pela expressão</span><span class="sxs-lookup"><span data-stu-id="8a329-2158">The date and/or time represented by the expression</span></span>|  
|<span data-ttu-id="8a329-2159">#ERROR `errornumber`#</span><span class="sxs-lookup"><span data-stu-id="8a329-2159">#ERROR `errornumber`#</span></span>|<span data-ttu-id="8a329-2160">`errornumber` (a variável é um objeto marcado como um erro)</span><span class="sxs-lookup"><span data-stu-id="8a329-2160">`errornumber` (variable is an object tagged as an error)</span></span>|  
  
 <span data-ttu-id="8a329-2161">Caso você atinja o final do arquivo enquanto insere um item de dados, a entrada é interrompida e ocorre um erro.</span><span class="sxs-lookup"><span data-stu-id="8a329-2161">If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8a329-2162">O `Input` função não está localizada.</span><span class="sxs-lookup"><span data-stu-id="8a329-2162">The `Input` function is not localized.</span></span> <span data-ttu-id="8a329-2163">Por exemplo, na versão em alemão, caso você insira 3,14159, ele retorna apenas 3, porque a vírgula é tratada como um separador variável, em vez de uma vírgula decimal.</span><span class="sxs-lookup"><span data-stu-id="8a329-2163">For example, in the German version, if you input 3,14159, it returns only 3, because the comma is treated as a variable separator instead of as a decimal point.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8a329-2164">Leitura de um arquivo usando o `Input` função requer `Read` acessar do `FileIOPermissionAccess` enumeração.</span><span class="sxs-lookup"><span data-stu-id="8a329-2164">Reading from a file by using the `Input` function requires `Read` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="8a329-2165">Para obter mais informações, consulte <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="8a329-2165">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a329-2166">Este exemplo usa o `Input` função para ler dados de um arquivo em duas variáveis.</span><span class="sxs-lookup"><span data-stu-id="8a329-2166">This example uses the `Input` function to read data from a file into two variables.</span></span> <span data-ttu-id="8a329-2167">Este exemplo pressupõe que `TestFile` seja um arquivo tendo várias linhas de dados gravadas usando a função `Write`, cada linha contendo uma cadeia de caracteres entre aspas e um número separado por uma vírgula; por exemplo: ("Hello", 234).</span><span class="sxs-lookup"><span data-stu-id="8a329-2167">This example assumes that `TestFile` is a file that has several lines of data written to it using the `Write` function, each line containing a string in quotations and a number separated by a comma, for example: ("Hello", 234).</span></span>  
  
 [!code-vb[VbVbalrCatRef#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="8a329-2168">O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="8a329-2168">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public static void Input (int FileNumber, ref decimal Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Input(int32 FileNumber, valuetype System.Decimal&amp; Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Decimal@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Input (FileNumber As Integer, ByRef Value As Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Input(int FileNumber, System::Decimal % Value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Decimal&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="8a329-2169">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-2169">Required.</span></span> <span data-ttu-id="8a329-2170">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="8a329-2170">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="8a329-2171">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-2171">Required.</span></span> <span data-ttu-id="8a329-2172">A variável à qual os valores lidos do arquivo são atribuídos, não pode ser uma variável de objeto ou matriz.</span><span class="sxs-lookup"><span data-stu-id="8a329-2172">Variable that is assigned the values read from the file—cannot be an array or object variable.</span></span></param>
        <summary><span data-ttu-id="8a329-2173">Lê dados de um arquivo sequencial aberto e atribui os dados a variáveis.</span><span class="sxs-lookup"><span data-stu-id="8a329-2173">Reads data from an open sequential file and assigns the data to variables.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a329-2174">O `Input` função é fornecida para compatibilidade com versões anteriores e pode afetar o desempenho.</span><span class="sxs-lookup"><span data-stu-id="8a329-2174">The `Input` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="8a329-2175">Para aplicativos legados não, o `My.Computer.FileSystem` objeto fornece um melhor desempenho.</span><span class="sxs-lookup"><span data-stu-id="8a329-2175">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="8a329-2176">Para obter mais informações, consulte [acesso a arquivos com o Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="8a329-2176">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="8a329-2177">Dados lidos com `Input` costumam ser gravados em um arquivo usando-se `Write`.</span><span class="sxs-lookup"><span data-stu-id="8a329-2177">Data read with `Input` is usually written to a file by using `Write`.</span></span> <span data-ttu-id="8a329-2178">Use esta função somente com arquivos abertos em `Input` ou `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="8a329-2178">Use this function only with files opened in `Input` or `Binary` mode.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8a329-2179">Durante a leitura de arquivos, não faça decisões sobre o conteúdo do arquivo com base na extensão de nome de arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-2179">When reading from files, do not make decisions about the contents of the file based on the file name extension.</span></span> <span data-ttu-id="8a329-2180">Por exemplo, um arquivo chamado Form1.vb não pode ser um arquivo fonte do Visual Basic 2005.</span><span class="sxs-lookup"><span data-stu-id="8a329-2180">For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</span></span>  
  
 <span data-ttu-id="8a329-2181">Quando lidos, dados numéricos ou cadeia de caracteres padrão são atribuídos a variáveis sem modificação.</span><span class="sxs-lookup"><span data-stu-id="8a329-2181">When read, standard string or numeric data is assigned to variables without modification.</span></span> <span data-ttu-id="8a329-2182">A tabela a seguir ilustra como outros dados de entrada são tratados.</span><span class="sxs-lookup"><span data-stu-id="8a329-2182">The following table illustrates how other input data is treated.</span></span>  
  
|<span data-ttu-id="8a329-2183">Dados</span><span class="sxs-lookup"><span data-stu-id="8a329-2183">Data</span></span>|<span data-ttu-id="8a329-2184">Valor atribuído à variável</span><span class="sxs-lookup"><span data-stu-id="8a329-2184">Value assigned to variable</span></span>|  
|-|-|  
|<span data-ttu-id="8a329-2185">Delimitador de vírgula ou linha em branco</span><span class="sxs-lookup"><span data-stu-id="8a329-2185">Delimiting comma or blank line</span></span>|<span data-ttu-id="8a329-2186">Vazio</span><span class="sxs-lookup"><span data-stu-id="8a329-2186">Empty</span></span>|  
|<span data-ttu-id="8a329-2187">NULL # #</span><span class="sxs-lookup"><span data-stu-id="8a329-2187">#NULL#</span></span>|`DBNull`|  
|<span data-ttu-id="8a329-2188"># TRUE ou FALSE # #</span><span class="sxs-lookup"><span data-stu-id="8a329-2188">#TRUE# or #FALSE#</span></span>|<span data-ttu-id="8a329-2189">`True` ou `False`</span><span class="sxs-lookup"><span data-stu-id="8a329-2189">`True` or `False`</span></span>|  
|#`yyyy-mm-dd hh:mm:ss`#|<span data-ttu-id="8a329-2190">A data e/ou hora representada pela expressão</span><span class="sxs-lookup"><span data-stu-id="8a329-2190">The date and/or time represented by the expression</span></span>|  
|<span data-ttu-id="8a329-2191">#ERROR `errornumber`#</span><span class="sxs-lookup"><span data-stu-id="8a329-2191">#ERROR `errornumber`#</span></span>|<span data-ttu-id="8a329-2192">`errornumber` (a variável é um objeto marcado como um erro)</span><span class="sxs-lookup"><span data-stu-id="8a329-2192">`errornumber` (variable is an object tagged as an error)</span></span>|  
  
 <span data-ttu-id="8a329-2193">Caso você atinja o final do arquivo enquanto insere um item de dados, a entrada é interrompida e ocorre um erro.</span><span class="sxs-lookup"><span data-stu-id="8a329-2193">If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8a329-2194">O `Input` função não está localizada.</span><span class="sxs-lookup"><span data-stu-id="8a329-2194">The `Input` function is not localized.</span></span> <span data-ttu-id="8a329-2195">Por exemplo, na versão em alemão, caso você insira 3,14159, ele retorna apenas 3, porque a vírgula é tratada como um separador variável, em vez de uma vírgula decimal.</span><span class="sxs-lookup"><span data-stu-id="8a329-2195">For example, in the German version, if you input 3,14159, it returns only 3, because the comma is treated as a variable separator instead of as a decimal point.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8a329-2196">Leitura de um arquivo usando o `Input` função requer `Read` acessar do `FileIOPermissionAccess` enumeração.</span><span class="sxs-lookup"><span data-stu-id="8a329-2196">Reading from a file by using the `Input` function requires `Read` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="8a329-2197">Para obter mais informações, consulte <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="8a329-2197">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a329-2198">Este exemplo usa o `Input` função para ler dados de um arquivo em duas variáveis.</span><span class="sxs-lookup"><span data-stu-id="8a329-2198">This example uses the `Input` function to read data from a file into two variables.</span></span> <span data-ttu-id="8a329-2199">Este exemplo pressupõe que `TestFile` seja um arquivo tendo várias linhas de dados gravadas usando a função `Write`, cada linha contendo uma cadeia de caracteres entre aspas e um número separado por uma vírgula; por exemplo: ("Hello", 234).</span><span class="sxs-lookup"><span data-stu-id="8a329-2199">This example assumes that `TestFile` is a file that has several lines of data written to it using the `Write` function, each line containing a string in quotations and a number separated by a comma, for example: ("Hello", 234).</span></span>  
  
 [!code-vb[VbVbalrCatRef#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="8a329-2200">O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="8a329-2200">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public static void Input (int FileNumber, ref double Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Input(int32 FileNumber, float64&amp; Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Double@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Input (FileNumber As Integer, ByRef Value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Input(int FileNumber, double % Value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Double&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="8a329-2201">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-2201">Required.</span></span> <span data-ttu-id="8a329-2202">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="8a329-2202">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="8a329-2203">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-2203">Required.</span></span> <span data-ttu-id="8a329-2204">A variável à qual os valores lidos do arquivo são atribuídos, não pode ser uma variável de objeto ou matriz.</span><span class="sxs-lookup"><span data-stu-id="8a329-2204">Variable that is assigned the values read from the file—cannot be an array or object variable.</span></span></param>
        <summary><span data-ttu-id="8a329-2205">Lê dados de um arquivo sequencial aberto e atribui os dados a variáveis.</span><span class="sxs-lookup"><span data-stu-id="8a329-2205">Reads data from an open sequential file and assigns the data to variables.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a329-2206">O `Input` função é fornecida para compatibilidade com versões anteriores e pode afetar o desempenho.</span><span class="sxs-lookup"><span data-stu-id="8a329-2206">The `Input` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="8a329-2207">Para aplicativos legados não, o `My.Computer.FileSystem` objeto fornece um melhor desempenho.</span><span class="sxs-lookup"><span data-stu-id="8a329-2207">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="8a329-2208">Para obter mais informações, consulte [acesso a arquivos com o Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="8a329-2208">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="8a329-2209">Dados lidos com `Input` costumam ser gravados em um arquivo usando-se `Write`.</span><span class="sxs-lookup"><span data-stu-id="8a329-2209">Data read with `Input` is usually written to a file by using `Write`.</span></span> <span data-ttu-id="8a329-2210">Use esta função somente com arquivos abertos em `Input` ou `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="8a329-2210">Use this function only with files opened in `Input` or `Binary` mode.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8a329-2211">Durante a leitura de arquivos, não faça decisões sobre o conteúdo do arquivo com base na extensão de nome de arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-2211">When reading from files, do not make decisions about the contents of the file based on the file name extension.</span></span> <span data-ttu-id="8a329-2212">Por exemplo, um arquivo chamado Form1.vb não pode ser um arquivo fonte do Visual Basic 2005.</span><span class="sxs-lookup"><span data-stu-id="8a329-2212">For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</span></span>  
  
 <span data-ttu-id="8a329-2213">Quando lidos, dados numéricos ou cadeia de caracteres padrão são atribuídos a variáveis sem modificação.</span><span class="sxs-lookup"><span data-stu-id="8a329-2213">When read, standard string or numeric data is assigned to variables without modification.</span></span> <span data-ttu-id="8a329-2214">A tabela a seguir ilustra como outros dados de entrada são tratados.</span><span class="sxs-lookup"><span data-stu-id="8a329-2214">The following table illustrates how other input data is treated.</span></span>  
  
|<span data-ttu-id="8a329-2215">Dados</span><span class="sxs-lookup"><span data-stu-id="8a329-2215">Data</span></span>|<span data-ttu-id="8a329-2216">Valor atribuído à variável</span><span class="sxs-lookup"><span data-stu-id="8a329-2216">Value assigned to variable</span></span>|  
|-|-|  
|<span data-ttu-id="8a329-2217">Delimitador de vírgula ou linha em branco</span><span class="sxs-lookup"><span data-stu-id="8a329-2217">Delimiting comma or blank line</span></span>|<span data-ttu-id="8a329-2218">Vazio</span><span class="sxs-lookup"><span data-stu-id="8a329-2218">Empty</span></span>|  
|<span data-ttu-id="8a329-2219">NULL # #</span><span class="sxs-lookup"><span data-stu-id="8a329-2219">#NULL#</span></span>|`DBNull`|  
|<span data-ttu-id="8a329-2220"># TRUE ou FALSE # #</span><span class="sxs-lookup"><span data-stu-id="8a329-2220">#TRUE# or #FALSE#</span></span>|<span data-ttu-id="8a329-2221">`True` ou `False`</span><span class="sxs-lookup"><span data-stu-id="8a329-2221">`True` or `False`</span></span>|  
|#`yyyy-mm-dd hh:mm:ss`#|<span data-ttu-id="8a329-2222">A data e/ou hora representada pela expressão</span><span class="sxs-lookup"><span data-stu-id="8a329-2222">The date and/or time represented by the expression</span></span>|  
|<span data-ttu-id="8a329-2223">#ERROR `errornumber`#</span><span class="sxs-lookup"><span data-stu-id="8a329-2223">#ERROR `errornumber`#</span></span>|<span data-ttu-id="8a329-2224">`errornumber` (a variável é um objeto marcado como um erro)</span><span class="sxs-lookup"><span data-stu-id="8a329-2224">`errornumber` (variable is an object tagged as an error)</span></span>|  
  
 <span data-ttu-id="8a329-2225">Caso você atinja o final do arquivo enquanto insere um item de dados, a entrada é interrompida e ocorre um erro.</span><span class="sxs-lookup"><span data-stu-id="8a329-2225">If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8a329-2226">O `Input` função não está localizada.</span><span class="sxs-lookup"><span data-stu-id="8a329-2226">The `Input` function is not localized.</span></span> <span data-ttu-id="8a329-2227">Por exemplo, na versão em alemão, caso você insira 3,14159, ele retorna apenas 3, porque a vírgula é tratada como um separador variável, em vez de uma vírgula decimal.</span><span class="sxs-lookup"><span data-stu-id="8a329-2227">For example, in the German version, if you input 3,14159, it returns only 3, because the comma is treated as a variable separator instead of as a decimal point.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8a329-2228">Leitura de um arquivo usando o `Input` função requer `Read` acessar do `FileIOPermissionAccess` enumeração.</span><span class="sxs-lookup"><span data-stu-id="8a329-2228">Reading from a file by using the `Input` function requires `Read` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="8a329-2229">Para obter mais informações, consulte <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="8a329-2229">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a329-2230">Este exemplo usa o `Input` função para ler dados de um arquivo em duas variáveis.</span><span class="sxs-lookup"><span data-stu-id="8a329-2230">This example uses the `Input` function to read data from a file into two variables.</span></span> <span data-ttu-id="8a329-2231">Este exemplo pressupõe que `TestFile` seja um arquivo tendo várias linhas de dados gravadas usando a função `Write`, cada linha contendo uma cadeia de caracteres entre aspas e um número separado por uma vírgula; por exemplo: ("Hello", 234).</span><span class="sxs-lookup"><span data-stu-id="8a329-2231">This example assumes that `TestFile` is a file that has several lines of data written to it using the `Write` function, each line containing a string in quotations and a number separated by a comma, for example: ("Hello", 234).</span></span>  
  
 [!code-vb[VbVbalrCatRef#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="8a329-2232">O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="8a329-2232">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public static void Input (int FileNumber, ref short Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Input(int32 FileNumber, int16&amp; Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Int16@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Input (FileNumber As Integer, ByRef Value As Short)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Input(int FileNumber, short % Value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Int16&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="8a329-2233">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-2233">Required.</span></span> <span data-ttu-id="8a329-2234">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="8a329-2234">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="8a329-2235">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-2235">Required.</span></span> <span data-ttu-id="8a329-2236">A variável à qual os valores lidos do arquivo são atribuídos, não pode ser uma variável de objeto ou matriz.</span><span class="sxs-lookup"><span data-stu-id="8a329-2236">Variable that is assigned the values read from the file—cannot be an array or object variable.</span></span></param>
        <summary><span data-ttu-id="8a329-2237">Lê dados de um arquivo sequencial aberto e atribui os dados a variáveis.</span><span class="sxs-lookup"><span data-stu-id="8a329-2237">Reads data from an open sequential file and assigns the data to variables.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a329-2238">O `Input` função é fornecida para compatibilidade com versões anteriores e pode afetar o desempenho.</span><span class="sxs-lookup"><span data-stu-id="8a329-2238">The `Input` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="8a329-2239">Para aplicativos legados não, o `My.Computer.FileSystem` objeto fornece um melhor desempenho.</span><span class="sxs-lookup"><span data-stu-id="8a329-2239">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="8a329-2240">Para obter mais informações, consulte [acesso a arquivos com o Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="8a329-2240">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="8a329-2241">Dados lidos com `Input` costumam ser gravados em um arquivo usando-se `Write`.</span><span class="sxs-lookup"><span data-stu-id="8a329-2241">Data read with `Input` is usually written to a file by using `Write`.</span></span> <span data-ttu-id="8a329-2242">Use esta função somente com arquivos abertos em `Input` ou `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="8a329-2242">Use this function only with files opened in `Input` or `Binary` mode.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8a329-2243">Durante a leitura de arquivos, não faça decisões sobre o conteúdo do arquivo com base na extensão de nome de arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-2243">When reading from files, do not make decisions about the contents of the file based on the file name extension.</span></span> <span data-ttu-id="8a329-2244">Por exemplo, um arquivo chamado Form1.vb não pode ser um arquivo fonte do Visual Basic 2005.</span><span class="sxs-lookup"><span data-stu-id="8a329-2244">For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</span></span>  
  
 <span data-ttu-id="8a329-2245">Quando lidos, dados numéricos ou cadeia de caracteres padrão são atribuídos a variáveis sem modificação.</span><span class="sxs-lookup"><span data-stu-id="8a329-2245">When read, standard string or numeric data is assigned to variables without modification.</span></span> <span data-ttu-id="8a329-2246">A tabela a seguir ilustra como outros dados de entrada são tratados.</span><span class="sxs-lookup"><span data-stu-id="8a329-2246">The following table illustrates how other input data is treated.</span></span>  
  
|<span data-ttu-id="8a329-2247">Dados</span><span class="sxs-lookup"><span data-stu-id="8a329-2247">Data</span></span>|<span data-ttu-id="8a329-2248">Valor atribuído à variável</span><span class="sxs-lookup"><span data-stu-id="8a329-2248">Value assigned to variable</span></span>|  
|-|-|  
|<span data-ttu-id="8a329-2249">Delimitador de vírgula ou linha em branco</span><span class="sxs-lookup"><span data-stu-id="8a329-2249">Delimiting comma or blank line</span></span>|<span data-ttu-id="8a329-2250">Vazio</span><span class="sxs-lookup"><span data-stu-id="8a329-2250">Empty</span></span>|  
|<span data-ttu-id="8a329-2251">NULL # #</span><span class="sxs-lookup"><span data-stu-id="8a329-2251">#NULL#</span></span>|`DBNull`|  
|<span data-ttu-id="8a329-2252"># TRUE ou FALSE # #</span><span class="sxs-lookup"><span data-stu-id="8a329-2252">#TRUE# or #FALSE#</span></span>|<span data-ttu-id="8a329-2253">`True` ou `False`</span><span class="sxs-lookup"><span data-stu-id="8a329-2253">`True` or `False`</span></span>|  
|#`yyyy-mm-dd hh:mm:ss`#|<span data-ttu-id="8a329-2254">A data e/ou hora representada pela expressão</span><span class="sxs-lookup"><span data-stu-id="8a329-2254">The date and/or time represented by the expression</span></span>|  
|<span data-ttu-id="8a329-2255">#ERROR `errornumber`#</span><span class="sxs-lookup"><span data-stu-id="8a329-2255">#ERROR `errornumber`#</span></span>|<span data-ttu-id="8a329-2256">`errornumber` (a variável é um objeto marcado como um erro)</span><span class="sxs-lookup"><span data-stu-id="8a329-2256">`errornumber` (variable is an object tagged as an error)</span></span>|  
  
 <span data-ttu-id="8a329-2257">Caso você atinja o final do arquivo enquanto insere um item de dados, a entrada é interrompida e ocorre um erro.</span><span class="sxs-lookup"><span data-stu-id="8a329-2257">If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8a329-2258">O `Input` função não está localizada.</span><span class="sxs-lookup"><span data-stu-id="8a329-2258">The `Input` function is not localized.</span></span> <span data-ttu-id="8a329-2259">Por exemplo, na versão em alemão, caso você insira 3,14159, ele retorna apenas 3, porque a vírgula é tratada como um separador variável, em vez de uma vírgula decimal.</span><span class="sxs-lookup"><span data-stu-id="8a329-2259">For example, in the German version, if you input 3,14159, it returns only 3, because the comma is treated as a variable separator instead of as a decimal point.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8a329-2260">Leitura de um arquivo usando o `Input` função requer `Read` acessar do `FileIOPermissionAccess` enumeração.</span><span class="sxs-lookup"><span data-stu-id="8a329-2260">Reading from a file by using the `Input` function requires `Read` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="8a329-2261">Para obter mais informações, consulte <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="8a329-2261">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a329-2262">Este exemplo usa o `Input` função para ler dados de um arquivo em duas variáveis.</span><span class="sxs-lookup"><span data-stu-id="8a329-2262">This example uses the `Input` function to read data from a file into two variables.</span></span> <span data-ttu-id="8a329-2263">Este exemplo pressupõe que `TestFile` seja um arquivo tendo várias linhas de dados gravadas usando a função `Write`, cada linha contendo uma cadeia de caracteres entre aspas e um número separado por uma vírgula; por exemplo: ("Hello", 234).</span><span class="sxs-lookup"><span data-stu-id="8a329-2263">This example assumes that `TestFile` is a file that has several lines of data written to it using the `Write` function, each line containing a string in quotations and a number separated by a comma, for example: ("Hello", 234).</span></span>  
  
 [!code-vb[VbVbalrCatRef#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="8a329-2264">O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="8a329-2264">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public static void Input (int FileNumber, ref int Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Input(int32 FileNumber, int32&amp; Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Input (FileNumber As Integer, ByRef Value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Input(int FileNumber, int % Value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Int32&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="8a329-2265">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-2265">Required.</span></span> <span data-ttu-id="8a329-2266">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="8a329-2266">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="8a329-2267">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-2267">Required.</span></span> <span data-ttu-id="8a329-2268">A variável à qual os valores lidos do arquivo são atribuídos, não pode ser uma variável de objeto ou matriz.</span><span class="sxs-lookup"><span data-stu-id="8a329-2268">Variable that is assigned the values read from the file—cannot be an array or object variable.</span></span></param>
        <summary><span data-ttu-id="8a329-2269">Lê dados de um arquivo sequencial aberto e atribui os dados a variáveis.</span><span class="sxs-lookup"><span data-stu-id="8a329-2269">Reads data from an open sequential file and assigns the data to variables.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a329-2270">O `Input` função é fornecida para compatibilidade com versões anteriores e pode afetar o desempenho.</span><span class="sxs-lookup"><span data-stu-id="8a329-2270">The `Input` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="8a329-2271">Para aplicativos legados não, o `My.Computer.FileSystem` objeto fornece um melhor desempenho.</span><span class="sxs-lookup"><span data-stu-id="8a329-2271">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="8a329-2272">Para obter mais informações, consulte [acesso a arquivos com o Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="8a329-2272">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="8a329-2273">Dados lidos com `Input` costumam ser gravados em um arquivo usando-se `Write`.</span><span class="sxs-lookup"><span data-stu-id="8a329-2273">Data read with `Input` is usually written to a file by using `Write`.</span></span> <span data-ttu-id="8a329-2274">Use esta função somente com arquivos abertos em `Input` ou `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="8a329-2274">Use this function only with files opened in `Input` or `Binary` mode.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8a329-2275">Durante a leitura de arquivos, não faça decisões sobre o conteúdo do arquivo com base na extensão de nome de arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-2275">When reading from files, do not make decisions about the contents of the file based on the file name extension.</span></span> <span data-ttu-id="8a329-2276">Por exemplo, um arquivo chamado Form1.vb não pode ser um arquivo fonte do Visual Basic 2005.</span><span class="sxs-lookup"><span data-stu-id="8a329-2276">For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</span></span>  
  
 <span data-ttu-id="8a329-2277">Quando lidos, dados numéricos ou cadeia de caracteres padrão são atribuídos a variáveis sem modificação.</span><span class="sxs-lookup"><span data-stu-id="8a329-2277">When read, standard string or numeric data is assigned to variables without modification.</span></span> <span data-ttu-id="8a329-2278">A tabela a seguir ilustra como outros dados de entrada são tratados.</span><span class="sxs-lookup"><span data-stu-id="8a329-2278">The following table illustrates how other input data is treated.</span></span>  
  
|<span data-ttu-id="8a329-2279">Dados</span><span class="sxs-lookup"><span data-stu-id="8a329-2279">Data</span></span>|<span data-ttu-id="8a329-2280">Valor atribuído à variável</span><span class="sxs-lookup"><span data-stu-id="8a329-2280">Value assigned to variable</span></span>|  
|-|-|  
|<span data-ttu-id="8a329-2281">Delimitador de vírgula ou linha em branco</span><span class="sxs-lookup"><span data-stu-id="8a329-2281">Delimiting comma or blank line</span></span>|<span data-ttu-id="8a329-2282">Vazio</span><span class="sxs-lookup"><span data-stu-id="8a329-2282">Empty</span></span>|  
|<span data-ttu-id="8a329-2283">NULL # #</span><span class="sxs-lookup"><span data-stu-id="8a329-2283">#NULL#</span></span>|`DBNull`|  
|<span data-ttu-id="8a329-2284"># TRUE ou FALSE # #</span><span class="sxs-lookup"><span data-stu-id="8a329-2284">#TRUE# or #FALSE#</span></span>|<span data-ttu-id="8a329-2285">`True` ou `False`</span><span class="sxs-lookup"><span data-stu-id="8a329-2285">`True` or `False`</span></span>|  
|#`yyyy-mm-dd hh:mm:ss`#|<span data-ttu-id="8a329-2286">A data e/ou hora representada pela expressão</span><span class="sxs-lookup"><span data-stu-id="8a329-2286">The date and/or time represented by the expression</span></span>|  
|<span data-ttu-id="8a329-2287">#ERROR `errornumber`#</span><span class="sxs-lookup"><span data-stu-id="8a329-2287">#ERROR `errornumber`#</span></span>|<span data-ttu-id="8a329-2288">`errornumber` (a variável é um objeto marcado como um erro)</span><span class="sxs-lookup"><span data-stu-id="8a329-2288">`errornumber` (variable is an object tagged as an error)</span></span>|  
  
 <span data-ttu-id="8a329-2289">Caso você atinja o final do arquivo enquanto insere um item de dados, a entrada é interrompida e ocorre um erro.</span><span class="sxs-lookup"><span data-stu-id="8a329-2289">If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8a329-2290">O `Input` função não está localizada.</span><span class="sxs-lookup"><span data-stu-id="8a329-2290">The `Input` function is not localized.</span></span> <span data-ttu-id="8a329-2291">Por exemplo, na versão em alemão, se você entrada 3,14159, ele retorna somente 3, desde que a vírgula é tratada como um separador variável em vez de como um ponto decimal.</span><span class="sxs-lookup"><span data-stu-id="8a329-2291">For example, in the German version, if you input 3,14159, it returns only 3, since the comma is treated as a variable separator instead of as a decimal point.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8a329-2292">Leitura de um arquivo usando o `Input` função requer `Read` acessar do `FileIOPermissionAccess` enumeração.</span><span class="sxs-lookup"><span data-stu-id="8a329-2292">Reading from a file by using the `Input` function requires `Read` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="8a329-2293">Para obter mais informações, consulte <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="8a329-2293">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a329-2294">Este exemplo usa o `Input` função para ler dados de um arquivo em duas variáveis.</span><span class="sxs-lookup"><span data-stu-id="8a329-2294">This example uses the `Input` function to read data from a file into two variables.</span></span> <span data-ttu-id="8a329-2295">Este exemplo pressupõe que `TestFile` seja um arquivo tendo várias linhas de dados gravadas usando a função `Write`, cada linha contendo uma cadeia de caracteres entre aspas e um número separado por uma vírgula; por exemplo: ("Hello", 234).</span><span class="sxs-lookup"><span data-stu-id="8a329-2295">This example assumes that `TestFile` is a file that has several lines of data written to it using the `Write` function, each line containing a string in quotations and a number separated by a comma, for example: ("Hello", 234).</span></span>  
  
 [!code-vb[VbVbalrCatRef#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="8a329-2296">O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="8a329-2296">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public static void Input (int FileNumber, ref long Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Input(int32 FileNumber, int64&amp; Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Int64@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Input (FileNumber As Integer, ByRef Value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Input(int FileNumber, long % Value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Int64&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="8a329-2297">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-2297">Required.</span></span> <span data-ttu-id="8a329-2298">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="8a329-2298">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="8a329-2299">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-2299">Required.</span></span> <span data-ttu-id="8a329-2300">A variável à qual os valores lidos do arquivo são atribuídos, não pode ser uma variável de objeto ou matriz.</span><span class="sxs-lookup"><span data-stu-id="8a329-2300">Variable that is assigned the values read from the file—cannot be an array or object variable.</span></span></param>
        <summary><span data-ttu-id="8a329-2301">Lê dados de um arquivo sequencial aberto e atribui os dados a variáveis.</span><span class="sxs-lookup"><span data-stu-id="8a329-2301">Reads data from an open sequential file and assigns the data to variables.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a329-2302">O `Input` função é fornecida para compatibilidade com versões anteriores e pode afetar o desempenho.</span><span class="sxs-lookup"><span data-stu-id="8a329-2302">The `Input` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="8a329-2303">Para aplicativos legados não, o `My.Computer.FileSystem` objeto fornece um melhor desempenho.</span><span class="sxs-lookup"><span data-stu-id="8a329-2303">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="8a329-2304">Para obter mais informações, consulte [acesso a arquivos com o Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="8a329-2304">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="8a329-2305">Dados lidos com `Input` costumam ser gravados em um arquivo usando-se `Write`.</span><span class="sxs-lookup"><span data-stu-id="8a329-2305">Data read with `Input` is usually written to a file by using `Write`.</span></span> <span data-ttu-id="8a329-2306">Use esta função somente com arquivos abertos em `Input` ou `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="8a329-2306">Use this function only with files opened in `Input` or `Binary` mode.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8a329-2307">Durante a leitura de arquivos, não faça decisões sobre o conteúdo do arquivo com base na extensão de nome de arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-2307">When reading from files, do not make decisions about the contents of the file based on the file name extension.</span></span> <span data-ttu-id="8a329-2308">Por exemplo, um arquivo chamado Form1.vb não pode ser um arquivo fonte do Visual Basic 2005.</span><span class="sxs-lookup"><span data-stu-id="8a329-2308">For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</span></span>  
  
 <span data-ttu-id="8a329-2309">Quando lidos, dados numéricos ou cadeia de caracteres padrão são atribuídos a variáveis sem modificação.</span><span class="sxs-lookup"><span data-stu-id="8a329-2309">When read, standard string or numeric data is assigned to variables without modification.</span></span> <span data-ttu-id="8a329-2310">A tabela a seguir ilustra como outros dados de entrada são tratados.</span><span class="sxs-lookup"><span data-stu-id="8a329-2310">The following table illustrates how other input data is treated.</span></span>  
  
|<span data-ttu-id="8a329-2311">Dados</span><span class="sxs-lookup"><span data-stu-id="8a329-2311">Data</span></span>|<span data-ttu-id="8a329-2312">Valor atribuído à variável</span><span class="sxs-lookup"><span data-stu-id="8a329-2312">Value assigned to variable</span></span>|  
|-|-|  
|<span data-ttu-id="8a329-2313">Delimitador de vírgula ou linha em branco</span><span class="sxs-lookup"><span data-stu-id="8a329-2313">Delimiting comma or blank line</span></span>|<span data-ttu-id="8a329-2314">Vazio</span><span class="sxs-lookup"><span data-stu-id="8a329-2314">Empty</span></span>|  
|<span data-ttu-id="8a329-2315">NULL # #</span><span class="sxs-lookup"><span data-stu-id="8a329-2315">#NULL#</span></span>|`DBNull`|  
|<span data-ttu-id="8a329-2316"># TRUE ou FALSE # #</span><span class="sxs-lookup"><span data-stu-id="8a329-2316">#TRUE# or #FALSE#</span></span>|<span data-ttu-id="8a329-2317">`True` ou `False`</span><span class="sxs-lookup"><span data-stu-id="8a329-2317">`True` or `False`</span></span>|  
|#`yyyy-mm-dd hh:mm:ss`#|<span data-ttu-id="8a329-2318">A data e/ou hora representada pela expressão</span><span class="sxs-lookup"><span data-stu-id="8a329-2318">The date and/or time represented by the expression</span></span>|  
|<span data-ttu-id="8a329-2319">#ERROR `errornumber`#</span><span class="sxs-lookup"><span data-stu-id="8a329-2319">#ERROR `errornumber`#</span></span>|<span data-ttu-id="8a329-2320">`errornumber` (a variável é um objeto marcado como um erro)</span><span class="sxs-lookup"><span data-stu-id="8a329-2320">`errornumber` (variable is an object tagged as an error)</span></span>|  
  
 <span data-ttu-id="8a329-2321">Caso você atinja o final do arquivo enquanto insere um item de dados, a entrada é interrompida e ocorre um erro.</span><span class="sxs-lookup"><span data-stu-id="8a329-2321">If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8a329-2322">O `Input` função não está localizada.</span><span class="sxs-lookup"><span data-stu-id="8a329-2322">The `Input` function is not localized.</span></span> <span data-ttu-id="8a329-2323">Por exemplo, na versão em alemão, caso você insira 3,14159, ele retorna apenas 3, porque a vírgula é tratada como um separador variável, em vez de uma vírgula decimal.</span><span class="sxs-lookup"><span data-stu-id="8a329-2323">For example, in the German version, if you input 3,14159, it returns only 3, because the comma is treated as a variable separator instead of as a decimal point.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8a329-2324">Leitura de um arquivo usando o `Input` função requer `Read` acessar do `FileIOPermissionAccess` enumeração.</span><span class="sxs-lookup"><span data-stu-id="8a329-2324">Reading from a file by using the `Input` function requires `Read` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="8a329-2325">Para obter mais informações, consulte <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="8a329-2325">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a329-2326">Este exemplo usa o `Input` função para ler dados de um arquivo em duas variáveis.</span><span class="sxs-lookup"><span data-stu-id="8a329-2326">This example uses the `Input` function to read data from a file into two variables.</span></span> <span data-ttu-id="8a329-2327">Este exemplo pressupõe que `TestFile` seja um arquivo tendo várias linhas de dados gravadas usando a função `Write`, cada linha contendo uma cadeia de caracteres entre aspas e um número separado por uma vírgula; por exemplo: ("Hello", 234).</span><span class="sxs-lookup"><span data-stu-id="8a329-2327">This example assumes that `TestFile` is a file that has several lines of data written to it using the `Write` function, each line containing a string in quotations and a number separated by a comma, for example: ("Hello", 234).</span></span>  
  
 [!code-vb[VbVbalrCatRef#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="8a329-2328">O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="8a329-2328">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public static void Input (int FileNumber, ref object Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Input(int32 FileNumber, object&amp; Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Input (FileNumber As Integer, ByRef Value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Input(int FileNumber, System::Object ^ % Value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="8a329-2329">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-2329">Required.</span></span> <span data-ttu-id="8a329-2330">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="8a329-2330">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="8a329-2331">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-2331">Required.</span></span> <span data-ttu-id="8a329-2332">A variável à qual os valores lidos do arquivo são atribuídos, não pode ser uma variável de objeto ou matriz.</span><span class="sxs-lookup"><span data-stu-id="8a329-2332">Variable that is assigned the values read from the file—cannot be an array or object variable.</span></span></param>
        <summary><span data-ttu-id="8a329-2333">Lê dados de um arquivo sequencial aberto e atribui os dados a variáveis.</span><span class="sxs-lookup"><span data-stu-id="8a329-2333">Reads data from an open sequential file and assigns the data to variables.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a329-2334">O `Input` função é fornecida para compatibilidade com versões anteriores e pode afetar o desempenho.</span><span class="sxs-lookup"><span data-stu-id="8a329-2334">The `Input` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="8a329-2335">Para aplicativos legados não, o `My.Computer.FileSystem` objeto fornece um melhor desempenho.</span><span class="sxs-lookup"><span data-stu-id="8a329-2335">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="8a329-2336">Para obter mais informações, consulte [acesso a arquivos com o Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="8a329-2336">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="8a329-2337">Dados lidos com `Input` costumam ser gravados em um arquivo usando-se `Write`.</span><span class="sxs-lookup"><span data-stu-id="8a329-2337">Data read with `Input` is usually written to a file by using `Write`.</span></span> <span data-ttu-id="8a329-2338">Use esta função somente com arquivos abertos em `Input` ou `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="8a329-2338">Use this function only with files opened in `Input` or `Binary` mode.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8a329-2339">Durante a leitura de arquivos, não faça decisões sobre o conteúdo do arquivo com base na extensão de nome de arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-2339">When reading from files, do not make decisions about the contents of the file based on the file name extension.</span></span> <span data-ttu-id="8a329-2340">Por exemplo, um arquivo chamado Form1.vb não pode ser um arquivo fonte do Visual Basic 2005.</span><span class="sxs-lookup"><span data-stu-id="8a329-2340">For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</span></span>  
  
 <span data-ttu-id="8a329-2341">Quando lidos, dados numéricos ou cadeia de caracteres padrão são atribuídos a variáveis sem modificação.</span><span class="sxs-lookup"><span data-stu-id="8a329-2341">When read, standard string or numeric data is assigned to variables without modification.</span></span> <span data-ttu-id="8a329-2342">A tabela a seguir ilustra como outros dados de entrada são tratados.</span><span class="sxs-lookup"><span data-stu-id="8a329-2342">The following table illustrates how other input data is treated.</span></span>  
  
|<span data-ttu-id="8a329-2343">Dados</span><span class="sxs-lookup"><span data-stu-id="8a329-2343">Data</span></span>|<span data-ttu-id="8a329-2344">Valor atribuído à variável</span><span class="sxs-lookup"><span data-stu-id="8a329-2344">Value assigned to variable</span></span>|  
|-|-|  
|<span data-ttu-id="8a329-2345">Delimitador de vírgula ou linha em branco</span><span class="sxs-lookup"><span data-stu-id="8a329-2345">Delimiting comma or blank line</span></span>|<span data-ttu-id="8a329-2346">Vazio</span><span class="sxs-lookup"><span data-stu-id="8a329-2346">Empty</span></span>|  
|<span data-ttu-id="8a329-2347">NULL # #</span><span class="sxs-lookup"><span data-stu-id="8a329-2347">#NULL#</span></span>|`DBNull`|  
|<span data-ttu-id="8a329-2348"># TRUE ou FALSE # #</span><span class="sxs-lookup"><span data-stu-id="8a329-2348">#TRUE# or #FALSE#</span></span>|<span data-ttu-id="8a329-2349">`True` ou `False`</span><span class="sxs-lookup"><span data-stu-id="8a329-2349">`True` or `False`</span></span>|  
|#`yyyy-mm-dd hh:mm:ss`#|<span data-ttu-id="8a329-2350">A data e/ou hora representada pela expressão</span><span class="sxs-lookup"><span data-stu-id="8a329-2350">The date and/or time represented by the expression</span></span>|  
|<span data-ttu-id="8a329-2351">#ERROR `errornumber`#</span><span class="sxs-lookup"><span data-stu-id="8a329-2351">#ERROR `errornumber`#</span></span>|<span data-ttu-id="8a329-2352">`errornumber` (a variável é um objeto marcado como um erro)</span><span class="sxs-lookup"><span data-stu-id="8a329-2352">`errornumber` (variable is an object tagged as an error)</span></span>|  
  
 <span data-ttu-id="8a329-2353">Caso você atinja o final do arquivo enquanto insere um item de dados, a entrada é interrompida e ocorre um erro.</span><span class="sxs-lookup"><span data-stu-id="8a329-2353">If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8a329-2354">O `Input` função não está localizada.</span><span class="sxs-lookup"><span data-stu-id="8a329-2354">The `Input` function is not localized.</span></span> <span data-ttu-id="8a329-2355">Por exemplo, na versão em alemão, caso você insira 3,14159, ele retorna apenas 3, porque a vírgula é tratada como um separador variável, em vez de uma vírgula decimal.</span><span class="sxs-lookup"><span data-stu-id="8a329-2355">For example, in the German version, if you input 3,14159, it returns only 3, because the comma is treated as a variable separator instead of as a decimal point.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8a329-2356">Leitura de um arquivo usando o `Input` função requer `Read` acessar do `FileIOPermissionAccess` enumeração.</span><span class="sxs-lookup"><span data-stu-id="8a329-2356">Reading from a file by using the `Input` function requires `Read` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="8a329-2357">Para obter mais informações, consulte <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="8a329-2357">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a329-2358">Este exemplo usa o `Input` função para ler dados de um arquivo em duas variáveis.</span><span class="sxs-lookup"><span data-stu-id="8a329-2358">This example uses the `Input` function to read data from a file into two variables.</span></span> <span data-ttu-id="8a329-2359">Este exemplo pressupõe que `TestFile` seja um arquivo tendo várias linhas de dados gravadas usando a função `Write`, cada linha contendo uma cadeia de caracteres entre aspas e um número separado por uma vírgula; por exemplo: ("Hello", 234).</span><span class="sxs-lookup"><span data-stu-id="8a329-2359">This example assumes that `TestFile` is a file that has several lines of data written to it using the `Write` function, each line containing a string in quotations and a number separated by a comma, for example: ("Hello", 234).</span></span>  
  
 [!code-vb[VbVbalrCatRef#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="8a329-2360">O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="8a329-2360">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public static void Input (int FileNumber, ref float Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Input(int32 FileNumber, float32&amp; Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Single@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Input (FileNumber As Integer, ByRef Value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Input(int FileNumber, float % Value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Single&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="8a329-2361">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-2361">Required.</span></span> <span data-ttu-id="8a329-2362">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="8a329-2362">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="8a329-2363">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-2363">Required.</span></span> <span data-ttu-id="8a329-2364">A variável à qual os valores lidos do arquivo são atribuídos, não pode ser uma variável de objeto ou matriz.</span><span class="sxs-lookup"><span data-stu-id="8a329-2364">Variable that is assigned the values read from the file—cannot be an array or object variable.</span></span></param>
        <summary><span data-ttu-id="8a329-2365">Lê dados de um arquivo sequencial aberto e atribui os dados a variáveis.</span><span class="sxs-lookup"><span data-stu-id="8a329-2365">Reads data from an open sequential file and assigns the data to variables.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a329-2366">O `Input` função é fornecida para compatibilidade com versões anteriores e pode afetar o desempenho.</span><span class="sxs-lookup"><span data-stu-id="8a329-2366">The `Input` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="8a329-2367">Para aplicativos legados não, o `My.Computer.FileSystem` objeto fornece um melhor desempenho.</span><span class="sxs-lookup"><span data-stu-id="8a329-2367">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="8a329-2368">Para obter mais informações, consulte [acesso a arquivos com o Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="8a329-2368">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="8a329-2369">Dados lidos com `Input` costumam ser gravados em um arquivo usando-se `Write`.</span><span class="sxs-lookup"><span data-stu-id="8a329-2369">Data read with `Input` is usually written to a file by using `Write`.</span></span> <span data-ttu-id="8a329-2370">Use esta função somente com arquivos abertos em `Input` ou `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="8a329-2370">Use this function only with files opened in `Input` or `Binary` mode.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8a329-2371">Durante a leitura de arquivos, não faça decisões sobre o conteúdo do arquivo com base na extensão de nome de arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-2371">When reading from files, do not make decisions about the contents of the file based on the file name extension.</span></span> <span data-ttu-id="8a329-2372">Por exemplo, um arquivo chamado Form1.vb não pode ser um arquivo fonte do Visual Basic 2005.</span><span class="sxs-lookup"><span data-stu-id="8a329-2372">For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</span></span>  
  
 <span data-ttu-id="8a329-2373">Quando lidos, dados numéricos ou cadeia de caracteres padrão são atribuídos a variáveis sem modificação.</span><span class="sxs-lookup"><span data-stu-id="8a329-2373">When read, standard string or numeric data is assigned to variables without modification.</span></span> <span data-ttu-id="8a329-2374">A tabela a seguir ilustra como outros dados de entrada são tratados.</span><span class="sxs-lookup"><span data-stu-id="8a329-2374">The following table illustrates how other input data is treated.</span></span>  
  
|<span data-ttu-id="8a329-2375">Dados</span><span class="sxs-lookup"><span data-stu-id="8a329-2375">Data</span></span>|<span data-ttu-id="8a329-2376">Valor atribuído à variável</span><span class="sxs-lookup"><span data-stu-id="8a329-2376">Value assigned to variable</span></span>|  
|-|-|  
|<span data-ttu-id="8a329-2377">Delimitador de vírgula ou linha em branco</span><span class="sxs-lookup"><span data-stu-id="8a329-2377">Delimiting comma or blank line</span></span>|<span data-ttu-id="8a329-2378">Vazio</span><span class="sxs-lookup"><span data-stu-id="8a329-2378">Empty</span></span>|  
|<span data-ttu-id="8a329-2379">NULL # #</span><span class="sxs-lookup"><span data-stu-id="8a329-2379">#NULL#</span></span>|`DBNull`|  
|<span data-ttu-id="8a329-2380"># TRUE ou FALSE # #</span><span class="sxs-lookup"><span data-stu-id="8a329-2380">#TRUE# or #FALSE#</span></span>|<span data-ttu-id="8a329-2381">`True` ou `False`</span><span class="sxs-lookup"><span data-stu-id="8a329-2381">`True` or `False`</span></span>|  
|#`yyyy-mm-dd hh:mm:ss`#|<span data-ttu-id="8a329-2382">A data e/ou hora representada pela expressão</span><span class="sxs-lookup"><span data-stu-id="8a329-2382">The date and/or time represented by the expression</span></span>|  
|<span data-ttu-id="8a329-2383">#ERROR `errornumber`#</span><span class="sxs-lookup"><span data-stu-id="8a329-2383">#ERROR `errornumber`#</span></span>|<span data-ttu-id="8a329-2384">`errornumber` (a variável é um objeto marcado como um erro)</span><span class="sxs-lookup"><span data-stu-id="8a329-2384">`errornumber` (variable is an object tagged as an error)</span></span>|  
  
 <span data-ttu-id="8a329-2385">Caso você atinja o final do arquivo enquanto insere um item de dados, a entrada é interrompida e ocorre um erro.</span><span class="sxs-lookup"><span data-stu-id="8a329-2385">If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8a329-2386">O `Input` função não está localizada.</span><span class="sxs-lookup"><span data-stu-id="8a329-2386">The `Input` function is not localized.</span></span> <span data-ttu-id="8a329-2387">Por exemplo, na versão em alemão, caso você insira 3,14159, ele retorna apenas 3, porque a vírgula é tratada como um separador variável, em vez de uma vírgula decimal.</span><span class="sxs-lookup"><span data-stu-id="8a329-2387">For example, in the German version, if you input 3,14159, it returns only 3, because the comma is treated as a variable separator instead of as a decimal point.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8a329-2388">Leitura de um arquivo usando o `Input` função requer `Read` acessar do `FileIOPermissionAccess` enumeração.</span><span class="sxs-lookup"><span data-stu-id="8a329-2388">Reading from a file by using the `Input` function requires `Read` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="8a329-2389">Para obter mais informações, consulte <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="8a329-2389">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a329-2390">Este exemplo usa o `Input` função para ler dados de um arquivo em duas variáveis.</span><span class="sxs-lookup"><span data-stu-id="8a329-2390">This example uses the `Input` function to read data from a file into two variables.</span></span> <span data-ttu-id="8a329-2391">Este exemplo pressupõe que `TestFile` seja um arquivo tendo várias linhas de dados gravadas usando a função `Write`, cada linha contendo uma cadeia de caracteres entre aspas e um número separado por uma vírgula; por exemplo: ("Hello", 234).</span><span class="sxs-lookup"><span data-stu-id="8a329-2391">This example assumes that `TestFile` is a file that has several lines of data written to it using the `Write` function, each line containing a string in quotations and a number separated by a comma, for example: ("Hello", 234).</span></span>  
  
 [!code-vb[VbVbalrCatRef#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="8a329-2392">O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="8a329-2392">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public static void Input (int FileNumber, ref string Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Input(int32 FileNumber, string&amp; Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Input (FileNumber As Integer, ByRef Value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Input(int FileNumber, System::String ^ % Value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.String&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="8a329-2393">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-2393">Required.</span></span> <span data-ttu-id="8a329-2394">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="8a329-2394">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="8a329-2395">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-2395">Required.</span></span> <span data-ttu-id="8a329-2396">A variável à qual os valores lidos do arquivo são atribuídos, não pode ser uma variável de objeto ou matriz.</span><span class="sxs-lookup"><span data-stu-id="8a329-2396">Variable that is assigned the values read from the file—cannot be an array or object variable.</span></span></param>
        <summary><span data-ttu-id="8a329-2397">Lê dados de um arquivo sequencial aberto e atribui os dados a variáveis.</span><span class="sxs-lookup"><span data-stu-id="8a329-2397">Reads data from an open sequential file and assigns the data to variables.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a329-2398">O `Input` função é fornecida para compatibilidade com versões anteriores e pode afetar o desempenho.</span><span class="sxs-lookup"><span data-stu-id="8a329-2398">The `Input` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="8a329-2399">Para aplicativos legados não, o `My.Computer.FileSystem` objeto fornece um melhor desempenho.</span><span class="sxs-lookup"><span data-stu-id="8a329-2399">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="8a329-2400">Para obter mais informações, consulte [acesso a arquivos com o Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="8a329-2400">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="8a329-2401">Dados lidos com `Input` costumam ser gravados em um arquivo usando-se `Write`.</span><span class="sxs-lookup"><span data-stu-id="8a329-2401">Data read with `Input` is usually written to a file by using `Write`.</span></span> <span data-ttu-id="8a329-2402">Use esta função somente com arquivos abertos em `Input` ou `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="8a329-2402">Use this function only with files opened in `Input` or `Binary` mode.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8a329-2403">Durante a leitura de arquivos, não faça decisões sobre o conteúdo do arquivo com base na extensão de nome de arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-2403">When reading from files, do not make decisions about the contents of the file based on the file name extension.</span></span> <span data-ttu-id="8a329-2404">Por exemplo, um arquivo chamado Form1.vb não pode ser um arquivo fonte do Visual Basic 2005.</span><span class="sxs-lookup"><span data-stu-id="8a329-2404">For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</span></span>  
  
 <span data-ttu-id="8a329-2405">Quando lidos, dados numéricos ou cadeia de caracteres padrão são atribuídos a variáveis sem modificação.</span><span class="sxs-lookup"><span data-stu-id="8a329-2405">When read, standard string or numeric data is assigned to variables without modification.</span></span> <span data-ttu-id="8a329-2406">A tabela a seguir ilustra como outros dados de entrada são tratados.</span><span class="sxs-lookup"><span data-stu-id="8a329-2406">The following table illustrates how other input data is treated.</span></span>  
  
|<span data-ttu-id="8a329-2407">Dados</span><span class="sxs-lookup"><span data-stu-id="8a329-2407">Data</span></span>|<span data-ttu-id="8a329-2408">Valor atribuído à variável</span><span class="sxs-lookup"><span data-stu-id="8a329-2408">Value assigned to variable</span></span>|  
|-|-|  
|<span data-ttu-id="8a329-2409">Delimitador de vírgula ou linha em branco</span><span class="sxs-lookup"><span data-stu-id="8a329-2409">Delimiting comma or blank line</span></span>|<span data-ttu-id="8a329-2410">Vazio</span><span class="sxs-lookup"><span data-stu-id="8a329-2410">Empty</span></span>|  
|<span data-ttu-id="8a329-2411">NULL # #</span><span class="sxs-lookup"><span data-stu-id="8a329-2411">#NULL#</span></span>|`DBNull`|  
|<span data-ttu-id="8a329-2412"># TRUE ou FALSE # #</span><span class="sxs-lookup"><span data-stu-id="8a329-2412">#TRUE# or #FALSE#</span></span>|<span data-ttu-id="8a329-2413">`True` ou `False`</span><span class="sxs-lookup"><span data-stu-id="8a329-2413">`True` or `False`</span></span>|  
|#`yyyy-mm-dd hh:mm:ss`#|<span data-ttu-id="8a329-2414">A data e/ou hora representada pela expressão</span><span class="sxs-lookup"><span data-stu-id="8a329-2414">The date and/or time represented by the expression</span></span>|  
|<span data-ttu-id="8a329-2415">#ERROR `errornumber`#</span><span class="sxs-lookup"><span data-stu-id="8a329-2415">#ERROR `errornumber`#</span></span>|<span data-ttu-id="8a329-2416">`errornumber` (a variável é um objeto marcado como um erro)</span><span class="sxs-lookup"><span data-stu-id="8a329-2416">`errornumber` (variable is an object tagged as an error)</span></span>|  
  
 <span data-ttu-id="8a329-2417">Caso você atinja o final do arquivo enquanto insere um item de dados, a entrada é interrompida e ocorre um erro.</span><span class="sxs-lookup"><span data-stu-id="8a329-2417">If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8a329-2418">O `Input` função não está localizada.</span><span class="sxs-lookup"><span data-stu-id="8a329-2418">The `Input` function is not localized.</span></span> <span data-ttu-id="8a329-2419">Por exemplo, na versão em alemão, caso você insira 3,14159, ele retorna apenas 3, porque a vírgula é tratada como um separador variável, em vez de uma vírgula decimal.</span><span class="sxs-lookup"><span data-stu-id="8a329-2419">For example, in the German version, if you input 3,14159, it returns only 3, because the comma is treated as a variable separator instead of as a decimal point.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8a329-2420">Leitura de um arquivo usando o `Input` função requer `Read` acessar do `FileIOPermissionAccess` enumeração.</span><span class="sxs-lookup"><span data-stu-id="8a329-2420">Reading from a file by using the `Input` function requires `Read` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="8a329-2421">Para obter mais informações, consulte <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="8a329-2421">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a329-2422">Este exemplo usa o `Input` função para ler dados de um arquivo em duas variáveis.</span><span class="sxs-lookup"><span data-stu-id="8a329-2422">This example uses the `Input` function to read data from a file into two variables.</span></span> <span data-ttu-id="8a329-2423">Este exemplo pressupõe que `TestFile` seja um arquivo tendo várias linhas de dados gravadas usando a função `Write`, cada linha contendo uma cadeia de caracteres entre aspas e um número separado por uma vírgula; por exemplo: ("Hello", 234).</span><span class="sxs-lookup"><span data-stu-id="8a329-2423">This example assumes that `TestFile` is a file that has several lines of data written to it using the `Write` function, each line containing a string in quotations and a number separated by a comma, for example: ("Hello", 234).</span></span>  
  
 [!code-vb[VbVbalrCatRef#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="8a329-2424">O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="8a329-2424">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="InputString">
      <MemberSignature Language="C#" Value="public static string InputString (int FileNumber, int CharCount);" />
      <MemberSignature Language="ILAsm" Value=".method public static string InputString(int32 FileNumber, int32 CharCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function InputString (FileNumber As Integer, CharCount As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ InputString(int FileNumber, int CharCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="CharCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="8a329-2425">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-2425">Required.</span></span> <span data-ttu-id="8a329-2426">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="8a329-2426">Any valid file number.</span></span></param>
        <param name="CharCount"><span data-ttu-id="8a329-2427">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-2427">Required.</span></span> <span data-ttu-id="8a329-2428">Qualquer expressão numérica válida que especifica o número de caracteres a serem lidos.</span><span class="sxs-lookup"><span data-stu-id="8a329-2428">Any valid numeric expression specifying the number of characters to read.</span></span></param>
        <summary><span data-ttu-id="8a329-2429">Retorna o valor <see langword="String" /> que contém caracteres de um arquivo aberto no modo <see langword="Input" /> ou <see langword="Binary" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-2429">Returns <see langword="String" /> value that contains characters from a file opened in <see langword="Input" /> or <see langword="Binary" /> mode.</span></span> <span data-ttu-id="8a329-2430">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="InputString" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-2430">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="InputString" />.</span></span> <span data-ttu-id="8a329-2431">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-2431">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <returns><span data-ttu-id="8a329-2432">Retorna o valor <see langword="String" /> que contém caracteres de um arquivo aberto no modo <see langword="Input" /> ou <see langword="Binary" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-2432">Returns <see langword="String" /> value that contains characters from a file opened in <see langword="Input" /> or <see langword="Binary" /> mode.</span></span> <span data-ttu-id="8a329-2433">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="InputString" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-2433">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="InputString" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a329-2434">O `InputString` função é fornecida para compatibilidade com versões anteriores e pode afetar o desempenho.</span><span class="sxs-lookup"><span data-stu-id="8a329-2434">The `InputString` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="8a329-2435">Para aplicativos legados não, o `My.Computer.FileSystem` objeto fornece um melhor desempenho.</span><span class="sxs-lookup"><span data-stu-id="8a329-2435">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="8a329-2436">Para obter mais informações, consulte [acesso a arquivos com o Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="8a329-2436">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="8a329-2437">Dados lidos com o `InputString` função geralmente é gravada em um arquivo usando `Print` ou `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="8a329-2437">Data read with the `InputString` function is usually written to a file by using `Print` or `FilePut`.</span></span> <span data-ttu-id="8a329-2438">Use esta função somente com arquivos abertos em `Input` ou `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="8a329-2438">Use this function only with files opened in `Input` or `Binary` mode.</span></span>  
  
 <span data-ttu-id="8a329-2439">Ao contrário de `Input` função, o `InputString` função retorna todos os caracteres que lê.</span><span class="sxs-lookup"><span data-stu-id="8a329-2439">Unlike the `Input` function, the `InputString` function returns all the characters it reads.</span></span> <span data-ttu-id="8a329-2440">Isso inclui vírgulas, retornos de carro, alimentações de linha, as aspas e espaços à esquerda.</span><span class="sxs-lookup"><span data-stu-id="8a329-2440">This includes commas, carriage returns, line feeds, quotation marks, and leading spaces.</span></span>  
  
 <span data-ttu-id="8a329-2441">Com arquivos abertos para `Binary` acessar, uma tentativa de ler o arquivo usando o `InputString` funcionar até `EOF` retorna `True` gera um erro.</span><span class="sxs-lookup"><span data-stu-id="8a329-2441">With files opened for `Binary` access, an attempt to read through the file by using the `InputString` function until `EOF` returns `True` generates an error.</span></span> <span data-ttu-id="8a329-2442">Use o `LOF` e `Loc` funções, em vez de `EOF` ao ler arquivos binários usando `InputString`, ou use `FileGet` quando você usa o `EOF` função.</span><span class="sxs-lookup"><span data-stu-id="8a329-2442">Use the `LOF` and `Loc` functions instead of `EOF` when you read binary files by using `InputString`, or use `FileGet` when you use the `EOF` function.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8a329-2443">Durante a leitura de arquivos, não faça decisões de segurança sobre o conteúdo do arquivo com base na extensão de nome de arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-2443">When reading from files, do not make security decisions about the contents of the file based on the file name extension.</span></span> <span data-ttu-id="8a329-2444">Por exemplo, um arquivo chamado Form1. vb pode não ser um arquivo de origem do Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="8a329-2444">For example, a file named Form1.vb may not be a Visual Basic source file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a329-2445">Este exemplo usa o `InputString` função para ler um caractere em vez de um arquivo e imprimi-lo para o `Output` janela.</span><span class="sxs-lookup"><span data-stu-id="8a329-2445">This example uses the `InputString` function to read one character at a time from a file and print it to the `Output` window.</span></span> <span data-ttu-id="8a329-2446">Este exemplo supõe que `MyFile` é um arquivo de texto que tem várias linhas de dados de exemplo.</span><span class="sxs-lookup"><span data-stu-id="8a329-2446">This example assumes that `MyFile` is a text file that has several lines of sample data.</span></span>  
  
 [!code-vb[VbVbalrCatRef#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="8a329-2447"><paramref name="FileNumber" /> não existe.</span><span class="sxs-lookup"><span data-stu-id="8a329-2447"><paramref name="FileNumber" /> does not exist.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8a329-2448"><paramref name="CharCount" /> &lt; 0 ou &gt; 214.</span><span class="sxs-lookup"><span data-stu-id="8a329-2448"><paramref name="CharCount" /> &lt; 0 or &gt; 214.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Input" />
      </Docs>
    </Member>
    <Member MemberName="Kill">
      <MemberSignature Language="C#" Value="public static void Kill (string PathName);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Kill(string PathName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Kill(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Kill (PathName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Kill(System::String ^ PathName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="PathName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="PathName"><span data-ttu-id="8a329-2449">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-2449">Required.</span></span> <span data-ttu-id="8a329-2450">Expressão <see langword="String" /> que especifica um ou mais nomes de arquivo a serem excluídos.</span><span class="sxs-lookup"><span data-stu-id="8a329-2450"><see langword="String" /> expression that specifies one or more file names to be deleted.</span></span> <span data-ttu-id="8a329-2451"><c>PathName</c> pode incluir o diretório ou a pasta, bem como a unidade.</span><span class="sxs-lookup"><span data-stu-id="8a329-2451"><c>PathName</c> can include the directory or folder, and the drive.</span></span></param>
        <summary><span data-ttu-id="8a329-2452">Exclui arquivos de um disco.</span><span class="sxs-lookup"><span data-stu-id="8a329-2452">Deletes files from a disk.</span></span> <span data-ttu-id="8a329-2453">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="Kill" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-2453">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Kill" />.</span></span> <span data-ttu-id="8a329-2454">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-2454">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> .</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a329-2455">`Kill` oferece suporte ao uso de vários caracteres (`*`) e de caractere único (`?`) curingas para especificar vários arquivos.</span><span class="sxs-lookup"><span data-stu-id="8a329-2455">`Kill` supports the use of multiple-character (`*`) and single-character (`?`) wildcards to specify multiple files.</span></span>  
  
 <span data-ttu-id="8a329-2456">**Observação de segurança** para executar, o `Kill` função requer `Read` e `PathDiscovery` sinalizadores de <xref:System.Security.Permissions.FileIOPermission> para ser concedida ao código em execução.</span><span class="sxs-lookup"><span data-stu-id="8a329-2456">**Security Note** In order to execute, the `Kill` function requires `Read` and `PathDiscovery` flags of <xref:System.Security.Permissions.FileIOPermission> to be granted to the executing code.</span></span> <span data-ttu-id="8a329-2457">Para obter mais informações, consulte <xref:System.Security.SecurityException> [permissões de acesso do código](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675)</span><span class="sxs-lookup"><span data-stu-id="8a329-2457">For more information, see <xref:System.Security.SecurityException>[Code Access Permissions](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a329-2458">Este exemplo usa o `Kill` função para excluir um arquivo de um disco.</span><span class="sxs-lookup"><span data-stu-id="8a329-2458">This example uses the `Kill` function to delete a file from a disk.</span></span>  
  
 [!code-vb[VbVbalrCatRef#60](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#60)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="8a329-2459">Arquivos de destino abertos.</span><span class="sxs-lookup"><span data-stu-id="8a329-2459">Target file(s) open.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="8a329-2460">Arquivos de destino não encontrados.</span><span class="sxs-lookup"><span data-stu-id="8a329-2460">Target file(s) not found.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="8a329-2461">Permissão negada.</span><span class="sxs-lookup"><span data-stu-id="8a329-2461">Permission denied.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.RmDir(System.String)" />
        <altmember cref="T:System.IO.IOException" />
        <altmember cref="T:System.IO.FileNotFoundException" />
      </Docs>
    </Member>
    <Member MemberName="LineInput">
      <MemberSignature Language="C#" Value="public static string LineInput (int FileNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public static string LineInput(int32 FileNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.LineInput(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function LineInput (FileNumber As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ LineInput(int FileNumber);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="8a329-2462">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-2462">Required.</span></span> <span data-ttu-id="8a329-2463">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="8a329-2463">Any valid file number.</span></span></param>
        <summary><span data-ttu-id="8a329-2464">Lê uma única linha de um arquivo sequencial aberto e a atribui a uma variável <see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-2464">Reads a single line from an open sequential file and assigns it to a <see langword="String" /> variable.</span></span></summary>
        <returns><span data-ttu-id="8a329-2465">Lê uma única linha de um arquivo sequencial aberto e a atribui a uma variável <see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-2465">Reads a single line from an open sequential file and assigns it to a <see langword="String" /> variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a329-2466">O `LineInput` função é fornecida para compatibilidade com versões anteriores e pode afetar o desempenho.</span><span class="sxs-lookup"><span data-stu-id="8a329-2466">The `LineInput` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="8a329-2467">Para aplicativos legados não, o `My.Computer.FileSystem` objeto fornece um melhor desempenho.</span><span class="sxs-lookup"><span data-stu-id="8a329-2467">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="8a329-2468">Para obter mais informações, consulte [acesso a arquivos com o Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="8a329-2468">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="8a329-2469">Dados lidos com `LineInput` costumam ser gravados em um arquivo usando-se `Print`.</span><span class="sxs-lookup"><span data-stu-id="8a329-2469">Data read with `LineInput` is usually written to a file by using `Print`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8a329-2470">Durante a leitura de arquivos, não faça decisões sobre o conteúdo de um arquivo com base na extensão de nome de arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-2470">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="8a329-2471">Por exemplo, um arquivo chamado Form1. vb pode não ser um arquivo de origem do Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="8a329-2471">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
 <span data-ttu-id="8a329-2472">O `LineInput` função lê a partir de um caractere de um arquivo por vez até encontrar um retorno de carro (`Chr(13)`) ou retorno/alimentação de linha de carro (`Chr(13) + Chr(10)`) sequência.</span><span class="sxs-lookup"><span data-stu-id="8a329-2472">The `LineInput` function reads from a file one character at a time until it encounters a carriage return (`Chr(13)`) or carriage return/line feed (`Chr(13) + Chr(10)`) sequence.</span></span> <span data-ttu-id="8a329-2473">Sequências de feed de retorno de linha de carro são ignoradas em vez de acrescentado à cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="8a329-2473">Carriage return/line feed sequences are skipped instead of appended to the character string.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8a329-2474">Leitura de um arquivo usando o `LineInput` função requer `Read` acessar do <xref:System.Security.Permissions.FileIOPermissionAccess> enumeração.</span><span class="sxs-lookup"><span data-stu-id="8a329-2474">Reading from a file by using the `LineInput` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a329-2475">Este exemplo usa o `LineInput` função ler uma linha de um arquivo sequencial e atribuí-lo a uma variável.</span><span class="sxs-lookup"><span data-stu-id="8a329-2475">This example uses the `LineInput` function to read a line from a sequential file and assign it to a variable.</span></span> <span data-ttu-id="8a329-2476">Este exemplo supõe que `TestFile` é um arquivo de texto que tem várias linhas de dados de exemplo.</span><span class="sxs-lookup"><span data-stu-id="8a329-2476">This example assumes that `TestFile` is a text file that has several lines of sample data.</span></span>  
  
 [!code-vb[VbVbalrCatRef#19](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#19)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.EndOfStreamException"><span data-ttu-id="8a329-2477">Fim do arquivo atingido.</span><span class="sxs-lookup"><span data-stu-id="8a329-2477">End of file reached.</span></span></exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="8a329-2478"><paramref name="FileNumber" /> não existe.</span><span class="sxs-lookup"><span data-stu-id="8a329-2478"><paramref name="FileNumber" /> does not exist.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Input" />
      </Docs>
    </Member>
    <Member MemberName="Loc">
      <MemberSignature Language="C#" Value="public static long Loc (int FileNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public static int64 Loc(int32 FileNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Loc(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Loc (FileNumber As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Loc(int FileNumber);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="8a329-2479">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-2479">Required.</span></span> <span data-ttu-id="8a329-2480">Qualquer número de arquivo <see langword="Integer" /> válido.</span><span class="sxs-lookup"><span data-stu-id="8a329-2480">Any valid <see langword="Integer" /> file number.</span></span></param>
        <summary><span data-ttu-id="8a329-2481">Retorna um <see langword="Long" /> valor que especifica a posição de leitura/gravação atual em um arquivo aberto.</span><span class="sxs-lookup"><span data-stu-id="8a329-2481">Returns a <see langword="Long" /> value that specifies the current read/write position in an open file.</span></span></summary>
        <returns><span data-ttu-id="8a329-2482">Retorna um <see langword="Long" /> valor que especifica a posição de leitura/gravação atual em um arquivo aberto.</span><span class="sxs-lookup"><span data-stu-id="8a329-2482">Returns a <see langword="Long" /> value that specifies the current read/write position in an open file.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a329-2483">O `Loc` função é baseado em zero; usá-la para recuperar o primeiro byte em um arquivo, retornará 0.</span><span class="sxs-lookup"><span data-stu-id="8a329-2483">The `Loc` function is zero-based; using it to retrieve the first byte in a file will return 0.</span></span>  
  
 <span data-ttu-id="8a329-2484">O `Loc` função é fornecida para compatibilidade com versões anteriores e pode afetar o desempenho.</span><span class="sxs-lookup"><span data-stu-id="8a329-2484">The `Loc` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="8a329-2485">Para aplicativos legados não, o `My.Computer.FileSystem` objeto fornece um melhor desempenho.</span><span class="sxs-lookup"><span data-stu-id="8a329-2485">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="8a329-2486">Para obter mais informações, consulte [acesso a arquivos com o Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="8a329-2486">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="8a329-2487">O exemplo a seguir descreve o valor de retorno para cada modo de acesso do arquivo:</span><span class="sxs-lookup"><span data-stu-id="8a329-2487">The following describes the return value for each file access mode:</span></span>  
  
|<span data-ttu-id="8a329-2488">Modo</span><span class="sxs-lookup"><span data-stu-id="8a329-2488">Mode</span></span>|<span data-ttu-id="8a329-2489">Valor retornado</span><span class="sxs-lookup"><span data-stu-id="8a329-2489">Return value</span></span>|  
|-|-|  
|`Random`|<span data-ttu-id="8a329-2490">Número do último registro lido ou gravado no arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-2490">Number of the last record read from or written to the file.</span></span>|  
|`Sequential`|<span data-ttu-id="8a329-2491">Posição atual de bytes no arquivo dividida por 128.</span><span class="sxs-lookup"><span data-stu-id="8a329-2491">Current byte position in the file divided by 128.</span></span> <span data-ttu-id="8a329-2492">No entanto, a informações retornadas por `Loc` para arquivos sequenciais não é usada nem requerida.</span><span class="sxs-lookup"><span data-stu-id="8a329-2492">However, information returned by `Loc` for sequential files is neither used nor required.</span></span>|  
|`Binary`|<span data-ttu-id="8a329-2493">Posição do último byte lido ou gravado.</span><span class="sxs-lookup"><span data-stu-id="8a329-2493">Position of the last byte read or written.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="8a329-2494">Este exemplo usa o `Loc` função para retornar a atual posição de leitura/gravação em um arquivo aberto.</span><span class="sxs-lookup"><span data-stu-id="8a329-2494">This example uses the `Loc` function to return the current read/write position in an open file.</span></span> <span data-ttu-id="8a329-2495">Este exemplo supõe que `MyFile` é um arquivo de texto que tem várias linhas de dados de exemplo.</span><span class="sxs-lookup"><span data-stu-id="8a329-2495">This example assumes that `MyFile` is a text file that has several lines of sample data.</span></span>  
  
 [!code-vb[VbVbalrCatRef#17](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="8a329-2496">O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="8a329-2496">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.EOF(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.LOF(System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Lock">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8a329-2497">Controla o acesso por outros processos a todo ou à parte de um arquivo aberto usando a função <see langword="Open" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-2497">Controls access by other processes to all or part of a file opened by using the <see langword="Open" /> function.</span></span> <span data-ttu-id="8a329-2498">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S de arquivo que <see langword="Lock" /> e <see langword="Unlock" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-2498">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Lock" /> and <see langword="Unlock" />.</span></span> <span data-ttu-id="8a329-2499">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-2499">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Lock">
      <MemberSignature Language="C#" Value="public static void Lock (int FileNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Lock(int32 FileNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Lock(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Lock (FileNumber As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Lock(int FileNumber);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="8a329-2500">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-2500">Required.</span></span> <span data-ttu-id="8a329-2501">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="8a329-2501">Any valid file number.</span></span></param>
        <summary><span data-ttu-id="8a329-2502">Controla o acesso por outros processos a todo ou à parte de um arquivo aberto usando a função <see langword="Open" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-2502">Controls access by other processes to all or part of a file opened by using the <see langword="Open" /> function.</span></span> <span data-ttu-id="8a329-2503">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S de arquivo que <see langword="Lock" /> e <see langword="Unlock" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-2503">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Lock" /> and <see langword="Unlock" />.</span></span> <span data-ttu-id="8a329-2504">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-2504">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a329-2505">O `Lock` e `Unlock` funções são usadas em ambientes onde vários processos podem precisam acessar o mesmo arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-2505">The `Lock` and `Unlock` functions are used in environments where several processes might need access to the same file.</span></span>  
  
 <span data-ttu-id="8a329-2506">`Lock` e `Unlock` funções são sempre usadas em pares.</span><span class="sxs-lookup"><span data-stu-id="8a329-2506">`Lock` and `Unlock` functions are always used in pairs.</span></span> <span data-ttu-id="8a329-2507">Os argumentos para `Lock` e `Unlock` devem ser idênticos.</span><span class="sxs-lookup"><span data-stu-id="8a329-2507">The arguments to `Lock` and `Unlock` must be identical.</span></span>  
  
 <span data-ttu-id="8a329-2508">Se `Record` ou `FromRecord` e `ToRecord` não for fornecido, o bloqueio será para todo o arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-2508">If `Record`, or `FromRecord` and `ToRecord` are not supplied, the lock will be for the whole file.</span></span> <span data-ttu-id="8a329-2509">Se `Record` sozinho for especificado o único registro será bloqueada/desbloqueado.</span><span class="sxs-lookup"><span data-stu-id="8a329-2509">If `Record` alone is specified the single record will be locked/unlocked.</span></span>  
  
 <span data-ttu-id="8a329-2510">Se o arquivo foi aberto para entradas ou saídas, sequenciais `Lock` e `Unlock` afetam todo o arquivo, independentemente do intervalo especificado pelos `FromRecord` e`ToRecord`.</span><span class="sxs-lookup"><span data-stu-id="8a329-2510">If the file has been opened for sequential input or output, `Lock` and `Unlock` affect the whole file, regardless of the range specified by `FromRecord` and`ToRecord`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a329-2511">Este exemplo ilustra o uso do `Lock` e `Unlock` funções.</span><span class="sxs-lookup"><span data-stu-id="8a329-2511">This example illustrates the use of the `Lock` and `Unlock` functions.</span></span> <span data-ttu-id="8a329-2512">Este exemplo pressupõe que `People.txt` seja um arquivo contendo registros da estrutura `Person`.</span><span class="sxs-lookup"><span data-stu-id="8a329-2512">This example assumes that `People.txt` is a file that contains records of the structure `Person`.</span></span>  
  
 [!code-vb[VbVbalrCatRef#13](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="8a329-2513">O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="8a329-2513">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="Lock">
      <MemberSignature Language="C#" Value="public static void Lock (int FileNumber, long Record);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Lock(int32 FileNumber, int64 Record) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Lock(System.Int32,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Lock (FileNumber As Integer, Record As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Lock(int FileNumber, long Record);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Record" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="8a329-2514">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-2514">Required.</span></span> <span data-ttu-id="8a329-2515">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="8a329-2515">Any valid file number.</span></span></param>
        <param name="Record"><span data-ttu-id="8a329-2516">Opcional.</span><span class="sxs-lookup"><span data-stu-id="8a329-2516">Optional.</span></span> <span data-ttu-id="8a329-2517">Número do único registro ou byte a ser bloqueado ou desbloqueado</span><span class="sxs-lookup"><span data-stu-id="8a329-2517">Number of the only record or byte to lock or unlock</span></span></param>
        <summary><span data-ttu-id="8a329-2518">Controla o acesso por outros processos a todo ou à parte de um arquivo aberto usando a função <see langword="Open" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-2518">Controls access by other processes to all or part of a file opened by using the <see langword="Open" /> function.</span></span> <span data-ttu-id="8a329-2519">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S de arquivo que <see langword="Lock" /> e <see langword="Unlock" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-2519">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Lock" /> and <see langword="Unlock" />.</span></span> <span data-ttu-id="8a329-2520">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-2520">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a329-2521">O `Lock` e `Unlock` funções são usadas em ambientes onde vários processos podem precisam acessar o mesmo arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-2521">The `Lock` and `Unlock` functions are used in environments where several processes might need access to the same file.</span></span>  
  
 <span data-ttu-id="8a329-2522">`Lock` e `Unlock` funções são sempre usadas em pares.</span><span class="sxs-lookup"><span data-stu-id="8a329-2522">`Lock` and `Unlock` functions are always used in pairs.</span></span> <span data-ttu-id="8a329-2523">Os argumentos para `Lock` e `Unlock` devem ser idênticos.</span><span class="sxs-lookup"><span data-stu-id="8a329-2523">The arguments to `Lock` and `Unlock` must be identical.</span></span>  
  
 <span data-ttu-id="8a329-2524">Se `Record` ou `FromRecord` e `ToRecord` não for fornecido, o bloqueio será para todo o arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-2524">If `Record`, or `FromRecord` and `ToRecord` are not supplied, the lock will be for the whole file.</span></span> <span data-ttu-id="8a329-2525">Se `Record` sozinho for especificado o único registro será bloqueada/desbloqueado.</span><span class="sxs-lookup"><span data-stu-id="8a329-2525">If `Record` alone is specified the single record will be locked/unlocked.</span></span>  
  
 <span data-ttu-id="8a329-2526">Se o arquivo foi aberto para entradas ou saídas, sequenciais `Lock` e `Unlock` afetam todo o arquivo, independentemente do intervalo especificado pelos `FromRecord` e`ToRecord`.</span><span class="sxs-lookup"><span data-stu-id="8a329-2526">If the file has been opened for sequential input or output, `Lock` and `Unlock` affect the whole file, regardless of the range specified by `FromRecord` and`ToRecord`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a329-2527">Este exemplo ilustra o uso do `Lock` e `Unlock` funções.</span><span class="sxs-lookup"><span data-stu-id="8a329-2527">This example illustrates the use of the `Lock` and `Unlock` functions.</span></span> <span data-ttu-id="8a329-2528">Este exemplo pressupõe que `People.txt` seja um arquivo contendo registros da estrutura `Person`.</span><span class="sxs-lookup"><span data-stu-id="8a329-2528">This example assumes that `People.txt` is a file that contains records of the structure `Person`.</span></span>  
  
 [!code-vb[VbVbalrCatRef#13](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="8a329-2529">O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="8a329-2529">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="Lock">
      <MemberSignature Language="C#" Value="public static void Lock (int FileNumber, long FromRecord, long ToRecord);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Lock(int32 FileNumber, int64 FromRecord, int64 ToRecord) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Lock(System.Int32,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Lock (FileNumber As Integer, FromRecord As Long, ToRecord As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Lock(int FileNumber, long FromRecord, long ToRecord);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="FromRecord" Type="System.Int64" />
        <Parameter Name="ToRecord" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="8a329-2530">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-2530">Required.</span></span> <span data-ttu-id="8a329-2531">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="8a329-2531">Any valid file number.</span></span></param>
        <param name="FromRecord"><span data-ttu-id="8a329-2532">Opcional.</span><span class="sxs-lookup"><span data-stu-id="8a329-2532">Optional.</span></span> <span data-ttu-id="8a329-2533">Número do primeiro registro ou byte a ser bloqueado ou desbloqueado.</span><span class="sxs-lookup"><span data-stu-id="8a329-2533">Number of the first record or byte to lock or unlock.</span></span></param>
        <param name="ToRecord"><span data-ttu-id="8a329-2534">Opcional.</span><span class="sxs-lookup"><span data-stu-id="8a329-2534">Optional.</span></span> <span data-ttu-id="8a329-2535">Número do último registro ou byte a ser bloqueado ou desbloqueado.</span><span class="sxs-lookup"><span data-stu-id="8a329-2535">Number of the last record or byte to lock or unlock.</span></span></param>
        <summary><span data-ttu-id="8a329-2536">Controla o acesso por outros processos a todo ou à parte de um arquivo aberto usando a função <see langword="Open" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-2536">Controls access by other processes to all or part of a file opened by using the <see langword="Open" /> function.</span></span> <span data-ttu-id="8a329-2537">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S de arquivo que <see langword="Lock" /> e <see langword="Unlock" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-2537">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Lock" /> and <see langword="Unlock" />.</span></span> <span data-ttu-id="8a329-2538">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-2538">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a329-2539">O `Lock` e `Unlock` funções são usadas em ambientes onde vários processos podem precisam acessar o mesmo arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-2539">The `Lock` and `Unlock` functions are used in environments where several processes might need access to the same file.</span></span>  
  
 <span data-ttu-id="8a329-2540">`Lock` e `Unlock` funções são sempre usadas em pares.</span><span class="sxs-lookup"><span data-stu-id="8a329-2540">`Lock` and `Unlock` functions are always used in pairs.</span></span> <span data-ttu-id="8a329-2541">Os argumentos para `Lock` e `Unlock` devem ser idênticos.</span><span class="sxs-lookup"><span data-stu-id="8a329-2541">The arguments to `Lock` and `Unlock` must be identical.</span></span>  
  
 <span data-ttu-id="8a329-2542">Se `Record` ou `FromRecord` e `ToRecord` não for fornecido, o bloqueio será para todo o arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-2542">If `Record`, or `FromRecord` and `ToRecord` are not supplied, the lock will be for the whole file.</span></span> <span data-ttu-id="8a329-2543">Se `Record` sozinho for especificado o único registro será bloqueada/desbloqueado.</span><span class="sxs-lookup"><span data-stu-id="8a329-2543">If `Record` alone is specified the single record will be locked/unlocked.</span></span>  
  
 <span data-ttu-id="8a329-2544">Se o arquivo foi aberto para entradas ou saídas, sequenciais `Lock` e `Unlock` afetam todo o arquivo, independentemente do intervalo especificado pelos `FromRecord` e`ToRecord`.</span><span class="sxs-lookup"><span data-stu-id="8a329-2544">If the file has been opened for sequential input or output, `Lock` and `Unlock` affect the whole file, regardless of the range specified by `FromRecord` and`ToRecord`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a329-2545">Este exemplo ilustra o uso do `Lock` e `Unlock` funções.</span><span class="sxs-lookup"><span data-stu-id="8a329-2545">This example illustrates the use of the `Lock` and `Unlock` functions.</span></span> <span data-ttu-id="8a329-2546">Este exemplo pressupõe que `People.txt` seja um arquivo contendo registros da estrutura `Person`.</span><span class="sxs-lookup"><span data-stu-id="8a329-2546">This example assumes that `People.txt` is a file that contains records of the structure `Person`.</span></span>  
  
 [!code-vb[VbVbalrCatRef#13](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="8a329-2547">O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="8a329-2547">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="LOF">
      <MemberSignature Language="C#" Value="public static long LOF (int FileNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public static int64 LOF(int32 FileNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.LOF(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function LOF (FileNumber As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long LOF(int FileNumber);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="8a329-2548">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-2548">Required.</span></span> <span data-ttu-id="8a329-2549">Um <see langword="Integer" /> que contém um número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="8a329-2549">An <see langword="Integer" /> that contains a valid file number.</span></span></param>
        <summary><span data-ttu-id="8a329-2550">Retorna um <see langword="Long" /> que representa o tamanho, em bytes, de um arquivo aberto usando a função <see langword="FileOpen" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-2550">Returns a <see langword="Long" /> representing the size, in bytes, of a file opened by using the <see langword="FileOpen" /> function.</span></span> <span data-ttu-id="8a329-2551">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="LOF" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-2551">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="LOF" />.</span></span> <span data-ttu-id="8a329-2552">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-2552">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <returns><span data-ttu-id="8a329-2553">Retorna um <see langword="Long" /> que representa o tamanho, em bytes, de um arquivo aberto usando a função <see langword="FileOpen" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-2553">Returns a <see langword="Long" /> representing the size, in bytes, of a file opened by using the <see langword="FileOpen" /> function.</span></span> <span data-ttu-id="8a329-2554">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="LOF" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-2554">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="LOF" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a329-2555">Use o `FileLen` função para obter o comprimento de um arquivo que não está aberto.</span><span class="sxs-lookup"><span data-stu-id="8a329-2555">Use the `FileLen` function to obtain the length of a file that is not open.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a329-2556">Este exemplo usa o `LOF` função para determinar o tamanho de um arquivo aberto.</span><span class="sxs-lookup"><span data-stu-id="8a329-2556">This example uses the `LOF` function to determine the size of an open file.</span></span> <span data-ttu-id="8a329-2557">Este exemplo supõe que `TestFile` é um arquivo de texto que contém dados de exemplo.</span><span class="sxs-lookup"><span data-stu-id="8a329-2557">This example assumes that `TestFile` is a text file that contains sample data.</span></span>  
  
 [!code-vb[VbVbalrCatRef#23](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#23)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="8a329-2558">O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="8a329-2558">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.EOF(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileLen(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Loc(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="MkDir">
      <MemberSignature Language="C#" Value="public static void MkDir (string Path);" />
      <MemberSignature Language="ILAsm" Value=".method public static void MkDir(string Path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.MkDir(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MkDir (Path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void MkDir(System::String ^ Path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Path"><span data-ttu-id="8a329-2559">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-2559">Required.</span></span> <span data-ttu-id="8a329-2560">Expressão <see langword="String" /> que identifica o diretório a ser criado.</span><span class="sxs-lookup"><span data-stu-id="8a329-2560"><see langword="String" /> expression that identifies the directory to be created.</span></span> <span data-ttu-id="8a329-2561">O <c>Caminho</c> pode incluir a unidade.</span><span class="sxs-lookup"><span data-stu-id="8a329-2561">The <c>Path</c> may include the drive.</span></span> <span data-ttu-id="8a329-2562">Se nenhuma unidade for especificada, <see langword="MkDir" /> criará um novo diretório na unidade atual.</span><span class="sxs-lookup"><span data-stu-id="8a329-2562">If no drive is specified, <see langword="MkDir" /> creates the new directory on the current drive.</span></span></param>
        <summary><span data-ttu-id="8a329-2563">Cria um novo diretório.</span><span class="sxs-lookup"><span data-stu-id="8a329-2563">Creates a new directory.</span></span> <span data-ttu-id="8a329-2564">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="MkDir" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-2564">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="MkDir" />.</span></span> <span data-ttu-id="8a329-2565">Para obter mais informações, consulte <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.CreateDirectory(System.String)" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-2565">For more information, see <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.CreateDirectory(System.String)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a329-2566">Esta função cria um novo diretório.</span><span class="sxs-lookup"><span data-stu-id="8a329-2566">This function creates a new directory.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a329-2567">Este exemplo usa o `MkDir` função para criar um diretório.</span><span class="sxs-lookup"><span data-stu-id="8a329-2567">This example uses the `MkDir` function to create a directory.</span></span> <span data-ttu-id="8a329-2568">Se a unidade não for especificada, o novo diretório é criado na unidade atual.</span><span class="sxs-lookup"><span data-stu-id="8a329-2568">If the drive is not specified, the new directory is created on the current drive.</span></span>  
  
 [!code-vb[VbVbalrCatRef#38](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#38)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8a329-2569"><paramref name="Path" /> não foi especificado ou está vazio.</span><span class="sxs-lookup"><span data-stu-id="8a329-2569"><paramref name="Path" /> is not specified or is empty.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="8a329-2570">Permissão negada.</span><span class="sxs-lookup"><span data-stu-id="8a329-2570">Permission denied.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="8a329-2571">O diretório já existe.</span><span class="sxs-lookup"><span data-stu-id="8a329-2571">Directory already exists.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.ChDir(System.String)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.CurDir" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.RmDir(System.String)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="Print">
      <MemberSignature Language="C#" Value="public static void Print (int FileNumber, params object[] Output);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Print(int32 FileNumber, object[] Output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub Print (FileNumber As Integer, ParamArray Output As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Print(int FileNumber, ... cli::array &lt;System::Object ^&gt; ^ Output);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Output" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="8a329-2572">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-2572">Required.</span></span> <span data-ttu-id="8a329-2573">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="8a329-2573">Any valid file number.</span></span></param>
        <param name="Output"><span data-ttu-id="8a329-2574">Opcional.</span><span class="sxs-lookup"><span data-stu-id="8a329-2574">Optional.</span></span> <span data-ttu-id="8a329-2575">Zero ou mais expressões delimitadas por vírgula a serem gravadas em um arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-2575">Zero or more comma-delimited expressions to write to a file.</span></span>  
  
 <span data-ttu-id="8a329-2576">As configurações do argumento <c>Saída</c> são:</span><span class="sxs-lookup"><span data-stu-id="8a329-2576">The <c>Output</c> argument settings are:</span></span>  
  
 <span data-ttu-id="8a329-2577"><see langword="T:System.IO.IOException" />: o modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="8a329-2577"><see langword="T:System.IO.IOException" />: File mode is invalid.</span></span>  
  
 <span data-ttu-id="8a329-2578"><see langword="T:System.IO.IOException" />: <c>FileNumber</c> não existe.</span><span class="sxs-lookup"><span data-stu-id="8a329-2578"><see langword="T:System.IO.IOException" />: <c>FileNumber</c> does not exist.</span></span></param>
        <summary><span data-ttu-id="8a329-2579">Grava dados formatados para exibição em um arquivo sequencial.</span><span class="sxs-lookup"><span data-stu-id="8a329-2579">Writes display-formatted data to a sequential file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a329-2580">O `Print` e `PrintLine` funções são fornecidas para compatibilidade com versões anteriores e pode afetar o desempenho.</span><span class="sxs-lookup"><span data-stu-id="8a329-2580">The `Print` and `PrintLine` functions are provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="8a329-2581">Para aplicativos legados não, o `My.Computer.FileSystem` objeto fornece um melhor desempenho.</span><span class="sxs-lookup"><span data-stu-id="8a329-2581">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="8a329-2582">Para obter mais informações, consulte [acesso a arquivos com o Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="8a329-2582">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="8a329-2583">`Print` não inclui uma alimentação de linha no final de uma linha; No entanto, `PrintLine` incluem uma alimentação de linha.</span><span class="sxs-lookup"><span data-stu-id="8a329-2583">`Print` does not include a line feed at the end of a line; however, `PrintLine` does include a line feed.</span></span>  
  
 <span data-ttu-id="8a329-2584">Dados gravados com `Print` normalmente é lido de um arquivo usando `LineInput` ou `Input`.</span><span class="sxs-lookup"><span data-stu-id="8a329-2584">Data written with `Print` is usually read from a file by using `LineInput` or `Input`.</span></span>  
  
 <span data-ttu-id="8a329-2585">Se você omitir `Output` para `PrintLine`, uma linha em branco é impressa no arquivo; para `Print`, nada é de saída.</span><span class="sxs-lookup"><span data-stu-id="8a329-2585">If you omit `Output` for `PrintLine`, a blank line is printed to the file; for `Print`, nothing is output.</span></span> <span data-ttu-id="8a329-2586">Várias expressões separadas com uma vírgula serão alinhadas nos limites de tabulação, mas a mistura de vírgulas e `TAB` pode causar resultados inconsistentes.</span><span class="sxs-lookup"><span data-stu-id="8a329-2586">Multiple expressions separated with a comma will be aligned on tab boundaries, but mixing commas and `TAB` may cause inconsistent results.</span></span>  
  
 <span data-ttu-id="8a329-2587">Para `Boolean` dados, `True` ou `False` é impresso.</span><span class="sxs-lookup"><span data-stu-id="8a329-2587">For `Boolean` data, either `True` or `False` is printed.</span></span> <span data-ttu-id="8a329-2588">O `True` e `False` palavras-chave não são traduzidas, independentemente da localidade.</span><span class="sxs-lookup"><span data-stu-id="8a329-2588">The `True` and `False` keywords are not translated, regardless of the locale.</span></span>  
  
 <span data-ttu-id="8a329-2589">Dados de data são gravados para o arquivo usando o formato de data abreviada padrão reconhecido pelo seu sistema.</span><span class="sxs-lookup"><span data-stu-id="8a329-2589">Date data is written to the file by using the standard short date format recognized by your system.</span></span> <span data-ttu-id="8a329-2590">Quando a data ou o componente de tempo está ausente ou zero, somente a parte fornecida é gravado no arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-2590">When either the date or the time component is missing or zero, only the part provided is written to the file.</span></span>  
  
 <span data-ttu-id="8a329-2591">Nada é gravado no arquivo se `Output` dados estão vazios.</span><span class="sxs-lookup"><span data-stu-id="8a329-2591">Nothing is written to the file if `Output` data is empty.</span></span> <span data-ttu-id="8a329-2592">No entanto, se `Output` dados da lista são `DBNull`, `Null` é gravado no arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-2592">However, if `Output` list data is `DBNull`, `Null` is written to the file.</span></span>  
  
 <span data-ttu-id="8a329-2593">Para `Error` dados, a saída é exibida como `Error errorcode`.</span><span class="sxs-lookup"><span data-stu-id="8a329-2593">For `Error` data, the output appears as `Error errorcode`.</span></span> <span data-ttu-id="8a329-2594">O `Error` palavra-chave não é traduzida, independentemente da localidade.</span><span class="sxs-lookup"><span data-stu-id="8a329-2594">The `Error` keyword is not translated regardless of the locale.</span></span>  
  
 <span data-ttu-id="8a329-2595">Todos os dados gravados no arquivo usando `Print` é de Conhecimento internacional; ou seja, os dados estão formatados corretamente usando o separador decimal adequado.</span><span class="sxs-lookup"><span data-stu-id="8a329-2595">All data written to the file by using `Print` is internationally aware; that is, the data is correctly formatted using the appropriate decimal separator.</span></span> <span data-ttu-id="8a329-2596">Se o usuário deseja gerar a saída de dados para uso em várias localidades, `Write` deve ser usado.</span><span class="sxs-lookup"><span data-stu-id="8a329-2596">If the user wishes to output data for use by multiple locales, `Write` should be used.</span></span>  
  
 <span data-ttu-id="8a329-2597">Gravar em um arquivo usando o `Print` ou `PrintLine` funções requer `Write` acessar a partir do `FileIOPermissionAccess` enumeração.</span><span class="sxs-lookup"><span data-stu-id="8a329-2597">Writing to a file by using the `Print` or `PrintLine` functions requires `Write` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="8a329-2598">Para obter mais informações, consulte <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="8a329-2598">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess> .</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a329-2599">Este exemplo usa o `Print` e `PrintLine` funções para gravar dados em um arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-2599">This example uses the `Print` and `PrintLine` functions to write data to a file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#53](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#53)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SPC(System.Int16)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.TAB" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="PrintLine">
      <MemberSignature Language="C#" Value="public static void PrintLine (int FileNumber, params object[] Output);" />
      <MemberSignature Language="ILAsm" Value=".method public static void PrintLine(int32 FileNumber, object[] Output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrintLine (FileNumber As Integer, ParamArray Output As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void PrintLine(int FileNumber, ... cli::array &lt;System::Object ^&gt; ^ Output);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Output" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="8a329-2600">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-2600">Required.</span></span> <span data-ttu-id="8a329-2601">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="8a329-2601">Any valid file number.</span></span></param>
        <param name="Output"><span data-ttu-id="8a329-2602">Opcional.</span><span class="sxs-lookup"><span data-stu-id="8a329-2602">Optional.</span></span> <span data-ttu-id="8a329-2603">Zero ou mais expressões delimitadas por vírgula a serem gravadas em um arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-2603">Zero or more comma-delimited expressions to write to a file.</span></span>  
  
 <span data-ttu-id="8a329-2604">As configurações do argumento <c>Saída</c> são:</span><span class="sxs-lookup"><span data-stu-id="8a329-2604">The <c>Output</c> argument settings are:</span></span>  
  
 <span data-ttu-id="8a329-2605"><see langword="T:System.IO.IOException" />: o modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="8a329-2605"><see langword="T:System.IO.IOException" />: File mode is invalid.</span></span>  
  
 <span data-ttu-id="8a329-2606"><see langword="T:System.IO.IOException" />: <c>FileNumber</c> não existe.</span><span class="sxs-lookup"><span data-stu-id="8a329-2606"><see langword="T:System.IO.IOException" />: <c>FileNumber</c> does not exist.</span></span></param>
        <summary><span data-ttu-id="8a329-2607">Grava dados formatados para exibição em um arquivo sequencial.</span><span class="sxs-lookup"><span data-stu-id="8a329-2607">Writes display-formatted data to a sequential file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a329-2608">O `Print` e `PrintLine` funções são fornecidas para compatibilidade com versões anteriores e pode afetar o desempenho.</span><span class="sxs-lookup"><span data-stu-id="8a329-2608">The `Print` and `PrintLine` functions are provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="8a329-2609">Para aplicativos legados não, o `My.Computer.FileSystem` objeto fornece um melhor desempenho.</span><span class="sxs-lookup"><span data-stu-id="8a329-2609">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="8a329-2610">Para obter mais informações, consulte [acesso a arquivos com o Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="8a329-2610">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="8a329-2611">`Print` não inclui uma alimentação de linha no final de uma linha; No entanto,`PrintLine` incluem uma alimentação de linha.</span><span class="sxs-lookup"><span data-stu-id="8a329-2611">`Print` does not include a line feed at the end of a line; however,`PrintLine` does include a line feed.</span></span>  
  
 <span data-ttu-id="8a329-2612">Dados gravados com `Print` normalmente é lido de um arquivo usando `LineInput` ou `Input`.</span><span class="sxs-lookup"><span data-stu-id="8a329-2612">Data written with `Print` is usually read from a file by using `LineInput` or `Input`.</span></span>  
  
 <span data-ttu-id="8a329-2613">Se você omitir `Output` para `PrintLine`, uma linha em branco é impressa no arquivo; para `Print`, nada é de saída.</span><span class="sxs-lookup"><span data-stu-id="8a329-2613">If you omit `Output` for `PrintLine`, a blank line is printed to the file; for `Print`, nothing is output.</span></span> <span data-ttu-id="8a329-2614">Várias expressões separadas com uma vírgula serão alinhadas nos limites de tabulação, mas a mistura de vírgulas e `TAB` pode causar resultados inconsistentes.</span><span class="sxs-lookup"><span data-stu-id="8a329-2614">Multiple expressions separated with a comma will be aligned on tab boundaries, but mixing commas and `TAB` may cause inconsistent results.</span></span>  
  
 <span data-ttu-id="8a329-2615">Para `Boolean` dados, `True` ou `False` é impresso.</span><span class="sxs-lookup"><span data-stu-id="8a329-2615">For `Boolean` data, either `True` or `False` is printed.</span></span> <span data-ttu-id="8a329-2616">O `True` e `False` palavras-chave não são traduzidas, independentemente da localidade.</span><span class="sxs-lookup"><span data-stu-id="8a329-2616">The `True` and `False` keywords are not translated, regardless of the locale.</span></span>  
  
 <span data-ttu-id="8a329-2617">Dados de data são gravados para o arquivo usando o formato de data abreviada padrão reconhecido pelo sistema.</span><span class="sxs-lookup"><span data-stu-id="8a329-2617">Date data is written to the file by using the standard short date format recognized by the system.</span></span> <span data-ttu-id="8a329-2618">Quando a data ou o componente de tempo está ausente ou zero, somente a parte fornecida é gravado no arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-2618">When either the date or the time component is missing or zero, only the part provided is written to the file.</span></span>  
  
 <span data-ttu-id="8a329-2619">Nada é gravado no arquivo se `Output` dados estão vazios.</span><span class="sxs-lookup"><span data-stu-id="8a329-2619">Nothing is written to the file if `Output` data is empty.</span></span> <span data-ttu-id="8a329-2620">No entanto, se `Output` dados da lista são `DBNull`, `Null` é gravado no arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-2620">However, if `Output` list data is `DBNull`, `Null` is written to the file.</span></span>  
  
 <span data-ttu-id="8a329-2621">Para `Error` dados, a saída é exibida como `Error errorcode`.</span><span class="sxs-lookup"><span data-stu-id="8a329-2621">For `Error` data, the output appears as `Error errorcode`.</span></span> <span data-ttu-id="8a329-2622">O `Error` palavra-chave não é traduzida, independentemente da localidade.</span><span class="sxs-lookup"><span data-stu-id="8a329-2622">The `Error` keyword is not translated regardless of the locale.</span></span>  
  
 <span data-ttu-id="8a329-2623">Todos os dados gravados no arquivo usando `Print` é de Conhecimento internacional; ou seja, os dados estão formatados corretamente usando o separador decimal adequado.</span><span class="sxs-lookup"><span data-stu-id="8a329-2623">All data written to the file by using `Print` is internationally aware; that is, the data is correctly formatted using the appropriate decimal separator.</span></span> <span data-ttu-id="8a329-2624">Se o usuário deseja gerar a saída de dados para uso em várias localidades, `Write` deve ser usado.</span><span class="sxs-lookup"><span data-stu-id="8a329-2624">If the user wishes to output data for use by multiple locales, `Write` should be used.</span></span>  
  
 <span data-ttu-id="8a329-2625">Gravar em um arquivo usando o `Print` ou `PrintLine` funções requer `Write` acessar a partir do `FileIOPermissionAccess` enumeração.</span><span class="sxs-lookup"><span data-stu-id="8a329-2625">Writing to a file by using the `Print` or `PrintLine` functions requires `Write` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="8a329-2626">Para obter mais informações, consulte <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="8a329-2626">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess> .</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a329-2627">Este exemplo usa o `Print` e `PrintLine` funções para gravar dados em um arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-2627">This example uses the `Print` and `PrintLine` functions to write data to a file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#53](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#53)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SPC(System.Int16)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.TAB" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="Rename">
      <MemberSignature Language="C#" Value="public static void Rename (string OldPath, string NewPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Rename(string OldPath, string NewPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Rename(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Rename (OldPath As String, NewPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Rename(System::String ^ OldPath, System::String ^ NewPath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="OldPath" Type="System.String" />
        <Parameter Name="NewPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="OldPath"><span data-ttu-id="8a329-2628">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-2628">Required.</span></span> <span data-ttu-id="8a329-2629"><see langword="String" /> expressão que especifica o local e o nome do arquivo existente.</span><span class="sxs-lookup"><span data-stu-id="8a329-2629"><see langword="String" /> expression that specifies the existing file name and location.</span></span> <span data-ttu-id="8a329-2630"><c>OldPath</c> pode incluir o diretório e a unidade do arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-2630"><c>OldPath</c> may include the directory, and drive, of the file.</span></span></param>
        <param name="NewPath"><span data-ttu-id="8a329-2631">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-2631">Required.</span></span> <span data-ttu-id="8a329-2632"><see langword="String" /> expressão que especifica o local e o nome do novo arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-2632"><see langword="String" /> expression that specifies the new file name and location.</span></span> <span data-ttu-id="8a329-2633"><c>NewPath</c> pode incluir o diretório e a unidade do local de destino.</span><span class="sxs-lookup"><span data-stu-id="8a329-2633"><c>NewPath</c> may include directory and drive of the destination location.</span></span> <span data-ttu-id="8a329-2634">O nome do arquivo especificado por <c>NewPath</c> não pode já existir.</span><span class="sxs-lookup"><span data-stu-id="8a329-2634">The file name specified by <c>NewPath</c> cannot already exist.</span></span></param>
        <summary><span data-ttu-id="8a329-2635">Renomeia um arquivo de disco ou um diretório.</span><span class="sxs-lookup"><span data-stu-id="8a329-2635">Renames a disk file or directory.</span></span> <span data-ttu-id="8a329-2636">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="Rename" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-2636">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Rename" />.</span></span> <span data-ttu-id="8a329-2637">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-2637">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a329-2638">O`Rename` função renomeia um arquivo e a move para um diretório diferente, se necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-2638">The`Rename` function renames a file and moves it to a different directory, if it is required.</span></span> <span data-ttu-id="8a329-2639">O `Rename` função pode mover um arquivo em unidades, mas ele só pode renomear uma pasta existente quando ambos `NewPath` e `OldPath` estão localizados na mesma unidade.</span><span class="sxs-lookup"><span data-stu-id="8a329-2639">The `Rename` function can move a file across drives, but it can only rename an existing directory when both `NewPath` and `OldPath` are located on the same drive.</span></span> <span data-ttu-id="8a329-2640">`Rename` não é possível criar um novo arquivo ou diretório.</span><span class="sxs-lookup"><span data-stu-id="8a329-2640">`Rename` cannot create a new file or directory.</span></span>  
  
 <span data-ttu-id="8a329-2641">Usando o `Rename` função em um arquivo aberto produz um erro.</span><span class="sxs-lookup"><span data-stu-id="8a329-2641">Using the `Rename` function on an open file produces an error.</span></span> <span data-ttu-id="8a329-2642">Você deve fechar um arquivo aberto antes de renomeá-lo.</span><span class="sxs-lookup"><span data-stu-id="8a329-2642">You must close an open file before renaming it.</span></span> <span data-ttu-id="8a329-2643">`Rename` argumentos não podem incluir caracteres curinga de caractere único (?) e de vários caracteres (\*).</span><span class="sxs-lookup"><span data-stu-id="8a329-2643">`Rename` arguments cannot include multiple-character (\*) and single-character (?) wildcards.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8a329-2644">Ao usar `Rename` para copiar um arquivo de um local desprotegido para um local protegido, o arquivo manterá os direitos menos restritos.</span><span class="sxs-lookup"><span data-stu-id="8a329-2644">When using `Rename` to copy a file from an unprotected location to a protected location, the file retains the less restricted rights.</span></span> <span data-ttu-id="8a329-2645">Verifique se você não está apresentando um possível risco de segurança.</span><span class="sxs-lookup"><span data-stu-id="8a329-2645">Check to make sure that you are not introducing a possible security risk.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a329-2646">Este exemplo usa o `Rename` função para renomear um arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-2646">This example uses the `Rename` function to rename a file.</span></span> <span data-ttu-id="8a329-2647">Para fins deste exemplo, suponha que os diretórios que são especificados já existem.</span><span class="sxs-lookup"><span data-stu-id="8a329-2647">For purposes of this example, assume that the directories that are specified already exist.</span></span>  
  
 [!code-vb[VbVbalrCatRef#30](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#30)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a329-2648">Caminho inválido.</span><span class="sxs-lookup"><span data-stu-id="8a329-2648">Path is invalid.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="8a329-2649">O arquivo <paramref name="OldPath" /> não existe.</span><span class="sxs-lookup"><span data-stu-id="8a329-2649"><paramref name="OldPath" /> file does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="8a329-2650">Não é possível renomear com outro dispositivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-2650">Cannot rename to different device.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Kill(System.String)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.FileNotFoundException" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public static void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public static void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Reset();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8a329-2651">Fecha todos os arquivos de disco abertos usando a função <see langword="FileOpen" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-2651">Closes all disk files opened by using the <see langword="FileOpen" /> function.</span></span> <span data-ttu-id="8a329-2652">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="Reset" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-2652">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Reset" />.</span></span> <span data-ttu-id="8a329-2653">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-2653">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a329-2654">O `Reset` função fecha todos os arquivos ativos abertos pelo `FileOpen` de função e tem a mesma função `FileClose()` sem parâmetros.</span><span class="sxs-lookup"><span data-stu-id="8a329-2654">The `Reset` function closes all active files opened by the `FileOpen` function and has the same function as `FileClose()` without any parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a329-2655">Este exemplo usa o `Reset` função para fechar todos os arquivos abertos e gravar o conteúdo de todos os buffers de arquivo em disco.</span><span class="sxs-lookup"><span data-stu-id="8a329-2655">This example uses the `Reset` function to close all open files and write the contents of all file buffers to disk.</span></span> <span data-ttu-id="8a329-2656">Observe o uso do `Object` variável `FileNumber` como uma cadeia de caracteres e um número.</span><span class="sxs-lookup"><span data-stu-id="8a329-2656">Note the use of the `Object` variable `FileNumber` as both a string and a number.</span></span>  
  
 [!code-vb[VbVbalrCatRef#12](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileClose(System.Int32[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="RmDir">
      <MemberSignature Language="C#" Value="public static void RmDir (string Path);" />
      <MemberSignature Language="ILAsm" Value=".method public static void RmDir(string Path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.RmDir(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RmDir (Path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RmDir(System::String ^ Path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Path"><span data-ttu-id="8a329-2657">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-2657">Required.</span></span> <span data-ttu-id="8a329-2658"><see langword="String" /> expressão que identifica o diretório ou a pasta a ser removida.</span><span class="sxs-lookup"><span data-stu-id="8a329-2658"><see langword="String" /> expression that identifies the directory or folder to be removed.</span></span> <span data-ttu-id="8a329-2659"><c>Path</c> pode incluir a unidade.</span><span class="sxs-lookup"><span data-stu-id="8a329-2659"><c>Path</c> can include the drive.</span></span> <span data-ttu-id="8a329-2660">Se nenhuma unidade for especificada, <see langword="RmDir" /> removerá o diretório na unidade atual.</span><span class="sxs-lookup"><span data-stu-id="8a329-2660">If no drive is specified, <see langword="RmDir" /> removes the directory on the current drive.</span></span></param>
        <summary><span data-ttu-id="8a329-2661">Remove um diretório existente.</span><span class="sxs-lookup"><span data-stu-id="8a329-2661">Removes an existing directory.</span></span> <span data-ttu-id="8a329-2662">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="RmDir" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-2662">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="RmDir" />.</span></span> <span data-ttu-id="8a329-2663">Para obter mais informações, consulte <see cref="Overload:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-2663">For more information, see <see cref="Overload:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a329-2664">Ocorrerá um erro se você tentar usar `RmDir` em um diretório que contém os arquivos.</span><span class="sxs-lookup"><span data-stu-id="8a329-2664">An error occurs if you try to use `RmDir` on a directory that contains files.</span></span> <span data-ttu-id="8a329-2665">Use o `Kill` função para excluir todos os arquivos antes de tentar remover um diretório.</span><span class="sxs-lookup"><span data-stu-id="8a329-2665">Use the `Kill` function to delete all files before you try to remove a directory.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a329-2666">Este exemplo usa o `RmDir` function para remover um diretório existente.</span><span class="sxs-lookup"><span data-stu-id="8a329-2666">This example uses the `RmDir` function to remove an existing directory.</span></span>  
  
 [!code-vb[VbVbalrCatRef#31](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#31)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8a329-2667"><paramref name="Path" /> não foi especificado ou está vazio.</span><span class="sxs-lookup"><span data-stu-id="8a329-2667"><paramref name="Path" /> is not specified or is empty.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="8a329-2668">O diretório de destino contém arquivos.</span><span class="sxs-lookup"><span data-stu-id="8a329-2668">Target directory contains files.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="8a329-2669">O diretório não existe.</span><span class="sxs-lookup"><span data-stu-id="8a329-2669">Directory does not exist.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.ChDir(System.String)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.CurDir" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Kill(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.MkDir(System.String)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
        <altmember cref="T:System.IO.FileNotFoundException" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Seek">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8a329-2670">Retorna um <see langword="Long" /> que especifica a posição de leitura/gravação atual em um arquivo aberto usando a função <see langword="FileOpen" /> ou define a posição para a próxima operação de leitura/gravação em um arquivo aberto usando a função <see langword="FileOpen" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-2670">Returns a <see langword="Long" /> specifying the current read/write position in a file opened by using the <see langword="FileOpen" /> function, or sets the position for the next read/write operation in a file opened by using the <see langword="FileOpen" /> function.</span></span> <span data-ttu-id="8a329-2671">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="Seek" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-2671">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Seek" />.</span></span> <span data-ttu-id="8a329-2672">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-2672">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public static long Seek (int FileNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public static int64 Seek(int32 FileNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Seek(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Seek (FileNumber As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Seek(int FileNumber);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="8a329-2673">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-2673">Required.</span></span> <span data-ttu-id="8a329-2674">Um <see langword="Integer" /> que contém um número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="8a329-2674">An <see langword="Integer" /> that contains a valid file number.</span></span></param>
        <summary><span data-ttu-id="8a329-2675">Retorna um <see langword="Long" /> que especifica a posição de leitura/gravação atual em um arquivo aberto usando a função <see langword="FileOpen" /> ou define a posição para a próxima operação de leitura/gravação em um arquivo aberto usando a função <see langword="FileOpen" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-2675">Returns a <see langword="Long" /> specifying the current read/write position in a file opened by using the <see langword="FileOpen" /> function, or sets the position for the next read/write operation in a file opened by using the <see langword="FileOpen" /> function.</span></span> <span data-ttu-id="8a329-2676">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="Seek" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-2676">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Seek" />.</span></span> <span data-ttu-id="8a329-2677">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-2677">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <returns><span data-ttu-id="8a329-2678">Retorna um <see langword="Long" /> que especifica a posição de leitura/gravação atual em um arquivo aberto usando a função <see langword="FileOpen" /> ou define a posição para a próxima operação de leitura/gravação em um arquivo aberto usando a função <see langword="FileOpen" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-2678">Returns a <see langword="Long" /> specifying the current read/write position in a file opened by using the <see langword="FileOpen" /> function, or sets the position for the next read/write operation in a file opened by using the <see langword="FileOpen" /> function.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a329-2679">`Seek` Retorna um valor entre 1 e 2.147.483.647 (equivalente a 2 ^ 31 – 1), inclusive.</span><span class="sxs-lookup"><span data-stu-id="8a329-2679">`Seek` returns a value between 1 and 2,147,483,647 (equivalent to 2^31 – 1), inclusive.</span></span>  
  
 <span data-ttu-id="8a329-2680">O exemplo a seguir descreve os valores retornados para cada modo de acesso do arquivo:</span><span class="sxs-lookup"><span data-stu-id="8a329-2680">The following describes the return values for each file access mode:</span></span>  
  
|<span data-ttu-id="8a329-2681">Modo</span><span class="sxs-lookup"><span data-stu-id="8a329-2681">Mode</span></span>|<span data-ttu-id="8a329-2682">Valor de Retorno</span><span class="sxs-lookup"><span data-stu-id="8a329-2682">Return Value</span></span>|  
|-|-|  
|`Random`|<span data-ttu-id="8a329-2683">Número do próximo registro lido ou gravado</span><span class="sxs-lookup"><span data-stu-id="8a329-2683">Number of the next record read or written</span></span>|  
|<span data-ttu-id="8a329-2684">`Binary`, `Input`, `Output`, `Append`</span><span class="sxs-lookup"><span data-stu-id="8a329-2684">`Binary`, `Input`, `Output`, `Append`</span></span>|<span data-ttu-id="8a329-2685">Posição de byte em que a próxima operação ocorre.</span><span class="sxs-lookup"><span data-stu-id="8a329-2685">Byte position at which the next operation occurs.</span></span> <span data-ttu-id="8a329-2686">O primeiro byte em um arquivo está na posição 1, o segundo byte está na posição 2 e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="8a329-2686">The first byte in a file is at position 1, the second byte is at position 2, and so on.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="8a329-2687">Este exemplo usa o `Seek` função para retornar a posição atual do arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-2687">This example uses the `Seek` function to return the current file position.</span></span> <span data-ttu-id="8a329-2688">O exemplo supõe `TestFile` é um arquivo que contém registros de uma estrutura `Record`.</span><span class="sxs-lookup"><span data-stu-id="8a329-2688">The example assumes `TestFile` is a file that contains records of the structure `Record`.</span></span>  
  
 [!code-vb[VbVbalrCatRef#47](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#47)]  
  
 <span data-ttu-id="8a329-2689">Para arquivos abertos no `Random` modo, `Seek` retorna o número do próximo registro.</span><span class="sxs-lookup"><span data-stu-id="8a329-2689">For files opened in `Random` mode, `Seek` returns the number of next record.</span></span>  
  
 [!code-vb[VbVbalrCatRef#48](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#48)]  
  
 <span data-ttu-id="8a329-2690">Para arquivos abertos em modos diferentes de `Random` modo, `Seek` retorna a posição do byte em que a próxima operação ocorre.</span><span class="sxs-lookup"><span data-stu-id="8a329-2690">For files opened in modes other than `Random` mode, `Seek` returns the byte position at which the next operation occurs.</span></span> <span data-ttu-id="8a329-2691">Suponha que `TestFile` seja um arquivo contendo várias linhas de texto.</span><span class="sxs-lookup"><span data-stu-id="8a329-2691">Assume `TestFile` is a file that contains several lines of text.</span></span>  
  
 [!code-vb[VbVbalrCatRef#49](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#49)]  
  
 <span data-ttu-id="8a329-2692">Este exemplo usa o `Seek` função para definir a posição para a próxima leitura ou gravação em um arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-2692">This example uses the `Seek` function to set the position for the next read or write in a file.</span></span>  
  
 <span data-ttu-id="8a329-2693">Para arquivos abertos em modos diferentes de `Random` modo, `Seek` define a posição do byte em que a próxima operação ocorre.</span><span class="sxs-lookup"><span data-stu-id="8a329-2693">For files opened in modes other than `Random` mode, `Seek` sets the byte position at which the next operation occurs.</span></span> <span data-ttu-id="8a329-2694">Suponha que `TestFile` seja um arquivo contendo várias linhas de texto.</span><span class="sxs-lookup"><span data-stu-id="8a329-2694">Assume `TestFile` is a file that contains several lines of text.</span></span>  
  
 [!code-vb[VbVbalrCatRef#52](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#52)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="8a329-2695">O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="8a329-2695">File mode is invalid.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Loc(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public static void Seek (int FileNumber, long Position);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Seek(int32 FileNumber, int64 Position) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Seek(System.Int32,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Seek (FileNumber As Integer, Position As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Seek(int FileNumber, long Position);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Position" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="8a329-2696">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-2696">Required.</span></span> <span data-ttu-id="8a329-2697">Um <see langword="Integer" /> que contém um número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="8a329-2697">An <see langword="Integer" /> that contains a valid file number.</span></span></param>
        <param name="Position"><span data-ttu-id="8a329-2698">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-2698">Required.</span></span> <span data-ttu-id="8a329-2699">Número no intervalo de 1 a 2.147.483.647, inclusive, que indica onde a próxima operação de leitura/gravação deve ocorrer.</span><span class="sxs-lookup"><span data-stu-id="8a329-2699">Number in the range 1–2,147,483,647, inclusive, that indicates where the next read/write operation should occur.</span></span></param>
        <summary><span data-ttu-id="8a329-2700">Retorna um <see langword="Long" /> que especifica a posição de leitura/gravação atual em um arquivo aberto usando a função <see langword="FileOpen" /> ou define a posição para a próxima operação de leitura/gravação em um arquivo aberto usando a função <see langword="FileOpen" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-2700">Returns a <see langword="Long" /> specifying the current read/write position in a file opened by using the <see langword="FileOpen" /> function, or sets the position for the next read/write operation in a file opened by using the <see langword="FileOpen" /> function.</span></span> <span data-ttu-id="8a329-2701">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="Seek" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-2701">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Seek" />.</span></span> <span data-ttu-id="8a329-2702">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-2702">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a329-2703">`Seek` Retorna um valor entre 1 e 2.147.483.647 (equivalente a 2 ^ 31 – 1), inclusive.</span><span class="sxs-lookup"><span data-stu-id="8a329-2703">`Seek` returns a value between 1 and 2,147,483,647 (equivalent to 2^31 – 1), inclusive.</span></span>  
  
 <span data-ttu-id="8a329-2704">O exemplo a seguir descreve os valores retornados para cada modo de acesso do arquivo:</span><span class="sxs-lookup"><span data-stu-id="8a329-2704">The following describes the return values for each file access mode:</span></span>  
  
|<span data-ttu-id="8a329-2705">Modo</span><span class="sxs-lookup"><span data-stu-id="8a329-2705">Mode</span></span>|<span data-ttu-id="8a329-2706">Valor de Retorno</span><span class="sxs-lookup"><span data-stu-id="8a329-2706">Return Value</span></span>|  
|-|-|  
|`Random`|<span data-ttu-id="8a329-2707">Número do próximo registro lido ou gravado</span><span class="sxs-lookup"><span data-stu-id="8a329-2707">Number of the next record read or written</span></span>|  
|<span data-ttu-id="8a329-2708">`Binary`, `Input`, `Output`, `Append`</span><span class="sxs-lookup"><span data-stu-id="8a329-2708">`Binary`, `Input`, `Output`, `Append`</span></span>|<span data-ttu-id="8a329-2709">Posição de byte em que a próxima operação ocorre.</span><span class="sxs-lookup"><span data-stu-id="8a329-2709">Byte position at which the next operation occurs.</span></span> <span data-ttu-id="8a329-2710">O primeiro byte em um arquivo está na posição 1, o segundo byte está na posição 2 e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="8a329-2710">The first byte in a file is at position 1, the second byte is at position 2, and so on.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="8a329-2711">Este exemplo usa o `Seek` função para retornar a posição atual do arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-2711">This example uses the `Seek` function to return the current file position.</span></span> <span data-ttu-id="8a329-2712">O exemplo supõe `TestFile` é um arquivo que contém registros de uma estrutura `Record`.</span><span class="sxs-lookup"><span data-stu-id="8a329-2712">The example assumes `TestFile` is a file that contains records of the structure `Record`.</span></span>  
  
 [!code-vb[VbVbalrCatRef#47](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#47)]  
  
 <span data-ttu-id="8a329-2713">Para arquivos abertos no `Random` modo, `Seek` retorna o número do próximo registro.</span><span class="sxs-lookup"><span data-stu-id="8a329-2713">For files opened in `Random` mode, `Seek` returns the number of next record.</span></span>  
  
 [!code-vb[VbVbalrCatRef#48](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#48)]  
  
 <span data-ttu-id="8a329-2714">Para arquivos abertos em modos diferentes de `Random` modo, `Seek` retorna a posição do byte em que a próxima operação ocorre.</span><span class="sxs-lookup"><span data-stu-id="8a329-2714">For files opened in modes other than `Random` mode, `Seek` returns the byte position at which the next operation occurs.</span></span> <span data-ttu-id="8a329-2715">Suponha que `TestFile` seja um arquivo contendo várias linhas de texto.</span><span class="sxs-lookup"><span data-stu-id="8a329-2715">Assume `TestFile` is a file that contains several lines of text.</span></span>  
  
 [!code-vb[VbVbalrCatRef#49](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#49)]  
  
 <span data-ttu-id="8a329-2716">Este exemplo usa o `Seek` função para definir a posição para a próxima leitura ou gravação em um arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-2716">This example uses the `Seek` function to set the position for the next read or write in a file.</span></span>  
  
 <span data-ttu-id="8a329-2717">Para arquivos abertos em modos diferentes de `Random` modo, `Seek` define a posição do byte em que a próxima operação ocorre.</span><span class="sxs-lookup"><span data-stu-id="8a329-2717">For files opened in modes other than `Random` mode, `Seek` sets the byte position at which the next operation occurs.</span></span> <span data-ttu-id="8a329-2718">Suponha que `TestFile` seja um arquivo contendo várias linhas de texto.</span><span class="sxs-lookup"><span data-stu-id="8a329-2718">Assume `TestFile` is a file that contains several lines of text.</span></span>  
  
 [!code-vb[VbVbalrCatRef#52](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#52)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="8a329-2719">O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="8a329-2719">File mode is invalid.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Loc(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="SetAttr">
      <MemberSignature Language="C#" Value="public static void SetAttr (string PathName, Microsoft.VisualBasic.FileAttribute Attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static void SetAttr(string PathName, valuetype Microsoft.VisualBasic.FileAttribute Attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.SetAttr(System.String,Microsoft.VisualBasic.FileAttribute)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAttr (PathName As String, Attributes As FileAttribute)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetAttr(System::String ^ PathName, Microsoft::VisualBasic::FileAttribute Attributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="PathName" Type="System.String" />
        <Parameter Name="Attributes" Type="Microsoft.VisualBasic.FileAttribute" />
      </Parameters>
      <Docs>
        <param name="PathName"><span data-ttu-id="8a329-2720">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-2720">Required.</span></span> <span data-ttu-id="8a329-2721">Expressão <see langword="String" /> que especifica um nome de arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-2721"><see langword="String" /> expression that specifies a file name.</span></span> <span data-ttu-id="8a329-2722"><c>PathName</c> pode incluir o diretório ou a pasta, bem como a unidade.</span><span class="sxs-lookup"><span data-stu-id="8a329-2722"><c>PathName</c> can include directory or folder, and drive.</span></span></param>
        <param name="Attributes"><span data-ttu-id="8a329-2723">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-2723">Required.</span></span> <span data-ttu-id="8a329-2724">Expressão constante ou numérica, cuja soma especifica atributos de arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-2724">Constant or numeric expression, whose sum specifies file attributes.</span></span></param>
        <summary><span data-ttu-id="8a329-2725">Define as informações de atributo de um arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-2725">Sets attribute information for a file.</span></span> <span data-ttu-id="8a329-2726">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="SetAttr" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-2726">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="SetAttr" />.</span></span> <span data-ttu-id="8a329-2727">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-2727">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a329-2728">Ocorrerá um erro de tempo de execução se você tentar definir os atributos de um arquivo aberto.</span><span class="sxs-lookup"><span data-stu-id="8a329-2728">A run-time error occurs if you try to set the attributes of an open file.</span></span>  
  
 <span data-ttu-id="8a329-2729">O `Attributes` valores de enumeração de argumento são da seguinte maneira:</span><span class="sxs-lookup"><span data-stu-id="8a329-2729">The `Attributes` argument enumeration values are as follows:</span></span>  
  
|<span data-ttu-id="8a329-2730">Valor</span><span class="sxs-lookup"><span data-stu-id="8a329-2730">Value</span></span>|<span data-ttu-id="8a329-2731">Constante</span><span class="sxs-lookup"><span data-stu-id="8a329-2731">Constant</span></span>|<span data-ttu-id="8a329-2732">Descrição</span><span class="sxs-lookup"><span data-stu-id="8a329-2732">Description</span></span>|  
|-|-|-|  
|`Normal`|`vbNormal`|<span data-ttu-id="8a329-2733">Normal (padrão).</span><span class="sxs-lookup"><span data-stu-id="8a329-2733">Normal (default).</span></span>|  
|`ReadOnly`|`vbReadOnly`|<span data-ttu-id="8a329-2734">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="8a329-2734">Read-only.</span></span>|  
|`Hidden`|`vbHidden`|<span data-ttu-id="8a329-2735">Oculto.</span><span class="sxs-lookup"><span data-stu-id="8a329-2735">Hidden.</span></span>|  
|`System`|`vbSystem`|<span data-ttu-id="8a329-2736">Arquivo do sistema.</span><span class="sxs-lookup"><span data-stu-id="8a329-2736">System file.</span></span>|  
|`Volume`|`vbVolume`|<span data-ttu-id="8a329-2737">Rótulo do volume</span><span class="sxs-lookup"><span data-stu-id="8a329-2737">Volume label</span></span>|  
|`Directory`|`vbDirectory`|<span data-ttu-id="8a329-2738">Diretório ou pasta.</span><span class="sxs-lookup"><span data-stu-id="8a329-2738">Directory or folder.</span></span>|  
|`Archive`|`vbArchive`|<span data-ttu-id="8a329-2739">O arquivo foi alterado desde o último backup.</span><span class="sxs-lookup"><span data-stu-id="8a329-2739">File has changed since last backup.</span></span>|  
|`Alias`|`vbAlias`|<span data-ttu-id="8a329-2740">O arquivo tem um nome diferente.</span><span class="sxs-lookup"><span data-stu-id="8a329-2740">File has a different name.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="8a329-2741">Essas enumerações são especificadas pela linguagem Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="8a329-2741">These enumerations are specified by the Visual Basic language.</span></span> <span data-ttu-id="8a329-2742">Os nomes podem ser usados em qualquer lugar no seu código em vez dos valores reais.</span><span class="sxs-lookup"><span data-stu-id="8a329-2742">The names can be used anywhere in your code instead of the actual values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a329-2743">Este exemplo usa o `SetAttr` função para definir atributos para um arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-2743">This example uses the `SetAttr` function to set attributes for a file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#14](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8a329-2744">O tipo <paramref name="Attribute" /> é inválido.</span><span class="sxs-lookup"><span data-stu-id="8a329-2744"><paramref name="Attribute" /> type is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileAttr(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:Microsoft.VisualBasic.FileAttribute" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />
      </Docs>
    </Member>
    <Member MemberName="SPC">
      <MemberSignature Language="C#" Value="public static Microsoft.VisualBasic.SpcInfo SPC (short Count);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype Microsoft.VisualBasic.SpcInfo SPC(int16 Count) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.SPC(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Function SPC (Count As Short) As SpcInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::VisualBasic::SpcInfo SPC(short Count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.SpcInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Count" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="Count"><span data-ttu-id="8a329-2745">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-2745">Required.</span></span> <span data-ttu-id="8a329-2746">O número de espaços a serem inseridos antes de exibir ou imprimir a próxima expressão em uma lista.</span><span class="sxs-lookup"><span data-stu-id="8a329-2746">The number of spaces to insert before displaying or printing the next expression in a list.</span></span></param>
        <summary><span data-ttu-id="8a329-2747">Usado com a função <see langword="Print" /> ou <see langword="PrintLine" /> para posicionar a saída.</span><span class="sxs-lookup"><span data-stu-id="8a329-2747">Used with the <see langword="Print" /> or <see langword="PrintLine" /> function to position output.</span></span></summary>
        <returns><span data-ttu-id="8a329-2748">Usado com a função <see langword="Print" /> ou <see langword="PrintLine" /> para posicionar a saída.</span><span class="sxs-lookup"><span data-stu-id="8a329-2748">Used with the <see langword="Print" /> or <see langword="PrintLine" /> function to position output.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a329-2749">Se `Count` é menor do que a largura da linha de saída, a próxima posição de impressão imediatamente após o número de espaços impressos.</span><span class="sxs-lookup"><span data-stu-id="8a329-2749">If `Count` is less than the output line width, the next print position immediately follows the number of spaces printed.</span></span> <span data-ttu-id="8a329-2750">Se`Count` é maior do que a largura da linha de saída, `SPC` calculará a próxima posição de impressão usando a fórmula:</span><span class="sxs-lookup"><span data-stu-id="8a329-2750">If`Count` is greater than the output line width, `SPC` calculates the next print position using the formula:</span></span>  
  
 <span data-ttu-id="8a329-2751">`currentprintposition`(+(`Count``Mod``width`))</span><span class="sxs-lookup"><span data-stu-id="8a329-2751">`currentprintposition`(+(`Count``Mod``width`))</span></span>  
  
 <span data-ttu-id="8a329-2752">Por exemplo, se a posição de impressão atual for 24, a largura de linha de saída for 80, e você especificar `SPC(90)`, a próxima impressão iniciará na posição 34 (posição de impressão atual + o resto de 90/80).</span><span class="sxs-lookup"><span data-stu-id="8a329-2752">For example, if the current print position is 24, the output line width is 80, and you specify `SPC(90)`, the next print will start at position 34 (current print position + the remainder of 90/80).</span></span> <span data-ttu-id="8a329-2753">Se a diferença entre a posição de impressão atual e a largura da linha de saída for menor que `Count` (ou `Count` `Mod` *largura*), o `SPC` função vai para o início da próxima linha e gerará espaços iguais a `Count` – (*largura* – *currentprintposition*).</span><span class="sxs-lookup"><span data-stu-id="8a329-2753">If the difference between the current print position and the output line width is less than `Count` (or `Count` `Mod` *width*), the `SPC` function skips to the start of the next line and generates spaces equal to `Count` – (*width* – *currentprintposition*).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8a329-2754">Verifique se que as colunas da tabela são suficientes para permitir a amplas letras.</span><span class="sxs-lookup"><span data-stu-id="8a329-2754">Make sure your tabular columns are wide enough to allow for wide letters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a329-2755">Este exemplo usa o `SPC` função para posicionar a saída em um arquivo e no **saída** janela.</span><span class="sxs-lookup"><span data-stu-id="8a329-2755">This example uses the `SPC` function to position output in a file and in the **Output** window.</span></span>  
  
 [!code-vb[VbVbalrCatRef#16](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#16)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Space(System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.TAB" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileWidth(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="TAB">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8a329-2756">Usado com as funções <see langword="Print" /> ou <see langword="PrintLine" /> para posicionar a saída.</span><span class="sxs-lookup"><span data-stu-id="8a329-2756">Used with the <see langword="Print" /> or <see langword="PrintLine" /> functions to position output.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TAB">
      <MemberSignature Language="C#" Value="public static Microsoft.VisualBasic.TabInfo TAB ();" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype Microsoft.VisualBasic.TabInfo TAB() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.TAB" />
      <MemberSignature Language="VB.NET" Value="Public Function TAB () As TabInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::VisualBasic::TabInfo TAB();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.TabInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8a329-2757">Usado com as funções <see langword="Print" /> ou <see langword="PrintLine" /> para posicionar a saída.</span><span class="sxs-lookup"><span data-stu-id="8a329-2757">Used with the <see langword="Print" /> or <see langword="PrintLine" /> functions to position output.</span></span></summary>
        <returns><span data-ttu-id="8a329-2758">Usado com as funções <see langword="Print" /> ou <see langword="PrintLine" /> para posicionar a saída.</span><span class="sxs-lookup"><span data-stu-id="8a329-2758">Used with the <see langword="Print" /> or <see langword="PrintLine" /> functions to position output.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a329-2759">Se a posição de impressão atual na linha atual é maior do que `Column`, `TAB` ignora para a coluna valor igual a `Column` na próxima linha de saída.</span><span class="sxs-lookup"><span data-stu-id="8a329-2759">If the current print position on the current line is larger than `Column`, `TAB` skips to the column value equal to `Column` on the next output line.</span></span> <span data-ttu-id="8a329-2760">Se `Column` é menor que 1, `TAB` move a posição de impressão para coluna 1.</span><span class="sxs-lookup"><span data-stu-id="8a329-2760">If `Column` is less than 1, `TAB` moves the print position to column 1.</span></span> <span data-ttu-id="8a329-2761">Se `Column` é maior do que a largura da linha de saída, `TAB` calculará a próxima posição de impressão usando a fórmula:</span><span class="sxs-lookup"><span data-stu-id="8a329-2761">If `Column` is larger than the output line width, `TAB` calculates the next print position using the formula:</span></span>  
  
 <span data-ttu-id="8a329-2762">Largura da coluna Mod</span><span class="sxs-lookup"><span data-stu-id="8a329-2762">Column Mod width</span></span>  
  
 <span data-ttu-id="8a329-2763">Por exemplo, se *largura* é 80 e você especificar `TAB(90)`, a próxima impressão será iniciada na coluna 10 (o resto de 90/80).</span><span class="sxs-lookup"><span data-stu-id="8a329-2763">For example, if *width* is 80 and you specify `TAB(90)`, the next print will start at column 10 (the remainder of 90/80).</span></span> <span data-ttu-id="8a329-2764">Se `Column` é menor do que a posição atual de impressão, impressão iniciado na próxima linha na posição de impressão calculada.</span><span class="sxs-lookup"><span data-stu-id="8a329-2764">If `Column` is less than the current print position, printing starts on the next line at the calculated print position.</span></span> <span data-ttu-id="8a329-2765">Se a posição de impressão calculada for maior do que a posição atual de impressão, impressão inicia em calculada imprimir posição na mesma linha.</span><span class="sxs-lookup"><span data-stu-id="8a329-2765">If the calculated print position is larger than the current print position, printing starts at the calculated print position on the same line.</span></span>  
  
 <span data-ttu-id="8a329-2766">A posição de impressão mais à esquerda em uma linha de saída é sempre 1.</span><span class="sxs-lookup"><span data-stu-id="8a329-2766">The leftmost print position on an output line is always 1.</span></span> <span data-ttu-id="8a329-2767">Quando você usa o `Print` ou `PrintLine` funções para imprimir arquivos, a posição de impressão mais à direita é a largura atual do arquivo de saída, você pode definir usando o `FileWidth` função.</span><span class="sxs-lookup"><span data-stu-id="8a329-2767">When you use the `Print` or `PrintLine` functions to print to files, the rightmost print position is the current width of the output file, which you can set using the `FileWidth` function.</span></span>  
  
 <span data-ttu-id="8a329-2768">O `TAB` função também pode ser usada com a `WriteLine` função.</span><span class="sxs-lookup"><span data-stu-id="8a329-2768">The `TAB` function can also be used with the `WriteLine` function.</span></span> <span data-ttu-id="8a329-2769">Ele não pode ser usado com <xref:System.Diagnostics.Debug.WriteLine%2A?displayProperty=nameWithType> ou <xref:System.Console.WriteLine%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="8a329-2769">It cannot be used with <xref:System.Diagnostics.Debug.WriteLine%2A?displayProperty=nameWithType> or <xref:System.Console.WriteLine%2A?displayProperty=nameWithType>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8a329-2770">Verifique se as colunas da tabela grande o suficiente para conter letras amplas.</span><span class="sxs-lookup"><span data-stu-id="8a329-2770">Make sure your tabular columns are wide enough to contain wide letters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a329-2771">Este exemplo usa o `TAB` função para posicionar a saída em um arquivo e no **saída** janela.</span><span class="sxs-lookup"><span data-stu-id="8a329-2771">This example uses the `TAB` function to position output in a file and in the **Output** window.</span></span>  
  
 [!code-vb[VbVbalrCatRef#37](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#37)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Space(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SPC(System.Int16)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileWidth(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="TAB">
      <MemberSignature Language="C#" Value="public static Microsoft.VisualBasic.TabInfo TAB (short Column);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype Microsoft.VisualBasic.TabInfo TAB(int16 Column) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.TAB(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Function TAB (Column As Short) As TabInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::VisualBasic::TabInfo TAB(short Column);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.TabInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Column" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="Column"><span data-ttu-id="8a329-2772">Opcional.</span><span class="sxs-lookup"><span data-stu-id="8a329-2772">Optional.</span></span> <span data-ttu-id="8a329-2773">O número de coluna movido antes de exibir ou imprimir a próxima expressão em uma lista.</span><span class="sxs-lookup"><span data-stu-id="8a329-2773">The column number moved to before displaying or printing the next expression in a list.</span></span> <span data-ttu-id="8a329-2774">Se omitido, <see langword="TAB" /> move o ponto de inserção para o início da próxima zona de impressão.</span><span class="sxs-lookup"><span data-stu-id="8a329-2774">If omitted, <see langword="TAB" /> moves the insertion point to the start of the next print zone.</span></span></param>
        <summary><span data-ttu-id="8a329-2775">Usado com as funções <see langword="Print" /> ou <see langword="PrintLine" /> para posicionar a saída.</span><span class="sxs-lookup"><span data-stu-id="8a329-2775">Used with the <see langword="Print" /> or <see langword="PrintLine" /> functions to position output.</span></span></summary>
        <returns><span data-ttu-id="8a329-2776">Usado com as funções <see langword="Print" /> ou <see langword="PrintLine" /> para posicionar a saída.</span><span class="sxs-lookup"><span data-stu-id="8a329-2776">Used with the <see langword="Print" /> or <see langword="PrintLine" /> functions to position output.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a329-2777">Se a posição de impressão atual na linha atual for maior que `Column`, `TAB` ignora para a coluna valor igual a `Column` na próxima linha de saída.</span><span class="sxs-lookup"><span data-stu-id="8a329-2777">If the current print position on the current line is greater than `Column`, `TAB` skips to the column value equal to `Column` on the next output line.</span></span> <span data-ttu-id="8a329-2778">Se `Column` é menor que 1, `TAB` move a posição de impressão para coluna 1.</span><span class="sxs-lookup"><span data-stu-id="8a329-2778">If `Column` is less than 1, `TAB` moves the print position to column 1.</span></span> <span data-ttu-id="8a329-2779">Se `Column` é maior do que a largura da linha de saída, `TAB` calculará a próxima posição de impressão usando a fórmula:</span><span class="sxs-lookup"><span data-stu-id="8a329-2779">If `Column` is greater than the output line width, `TAB` calculates the next print position using the formula:</span></span>  
  
 <span data-ttu-id="8a329-2780">Largura da coluna Mod</span><span class="sxs-lookup"><span data-stu-id="8a329-2780">Column Mod width</span></span>  
  
 <span data-ttu-id="8a329-2781">Por exemplo, se *largura* é 80 e você especificar `TAB(90)`, a próxima impressão será iniciada na coluna 10 (o resto de 90/80).</span><span class="sxs-lookup"><span data-stu-id="8a329-2781">For example, if *width* is 80 and you specify `TAB(90)`, the next print will start at column 10 (the remainder of 90/80).</span></span> <span data-ttu-id="8a329-2782">Se `Column` é menor do que a posição atual de impressão, impressão iniciado na próxima linha na posição de impressão calculada.</span><span class="sxs-lookup"><span data-stu-id="8a329-2782">If `Column` is less than the current print position, printing starts on the next line at the calculated print position.</span></span> <span data-ttu-id="8a329-2783">Se a posição de impressão calculada for maior que a posição atual de impressão, impressão inicia em calculada imprimir posição na mesma linha.</span><span class="sxs-lookup"><span data-stu-id="8a329-2783">If the calculated print position is greater than the current print position, printing starts at the calculated print position on the same line.</span></span>  
  
 <span data-ttu-id="8a329-2784">A posição de impressão mais à esquerda em uma linha de saída é sempre 1.</span><span class="sxs-lookup"><span data-stu-id="8a329-2784">The leftmost print position on an output line is always 1.</span></span> <span data-ttu-id="8a329-2785">Quando você usa o `Print` ou `PrintLine` funções para imprimir arquivos, a posição de impressão mais à direita é a largura atual do arquivo de saída, você pode definir usando o `FileWidth` função.</span><span class="sxs-lookup"><span data-stu-id="8a329-2785">When you use the `Print` or `PrintLine` functions to print to files, the rightmost print position is the current width of the output file, which you can set using the `FileWidth` function.</span></span>  
  
 <span data-ttu-id="8a329-2786">O `TAB` função também pode ser usada com a `WriteLine` função.</span><span class="sxs-lookup"><span data-stu-id="8a329-2786">The `TAB` function can also be used with the `WriteLine` function.</span></span> <span data-ttu-id="8a329-2787">Ele não pode ser usado com <xref:System.Diagnostics.Debug.WriteLine%2A?displayProperty=nameWithType> ou <xref:System.Console.WriteLine%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="8a329-2787">It cannot be used with <xref:System.Diagnostics.Debug.WriteLine%2A?displayProperty=nameWithType> or <xref:System.Console.WriteLine%2A?displayProperty=nameWithType>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8a329-2788">Verifique se as colunas da tabela grande o suficiente para conter letras amplas.</span><span class="sxs-lookup"><span data-stu-id="8a329-2788">Make sure your tabular columns are wide enough to contain wide letters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a329-2789">Este exemplo usa o `TAB` função para posicionar a saída em um arquivo e no **saída** janela.</span><span class="sxs-lookup"><span data-stu-id="8a329-2789">This example uses the `TAB` function to position output in a file and in the **Output** window.</span></span>  
  
 [!code-vb[VbVbalrCatRef#37](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#37)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Space(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SPC(System.Int16)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileWidth(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Unlock">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8a329-2790">Controla o acesso por outros processos a todo ou à parte de um arquivo aberto usando a função <see langword="Open" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-2790">Controls access by other processes to all or part of a file opened by using the <see langword="Open" /> function.</span></span> <span data-ttu-id="8a329-2791">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S de arquivo que <see langword="Lock" /> e <see langword="Unlock" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-2791">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Lock" /> and <see langword="Unlock" />.</span></span> <span data-ttu-id="8a329-2792">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-2792">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Unlock">
      <MemberSignature Language="C#" Value="public static void Unlock (int FileNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Unlock(int32 FileNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Unlock(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unlock (FileNumber As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Unlock(int FileNumber);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="8a329-2793">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-2793">Required.</span></span> <span data-ttu-id="8a329-2794">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="8a329-2794">Any valid file number.</span></span></param>
        <summary><span data-ttu-id="8a329-2795">Controla o acesso por outros processos a todo ou à parte de um arquivo aberto usando a função <see langword="Open" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-2795">Controls access by other processes to all or part of a file opened by using the <see langword="Open" /> function.</span></span> <span data-ttu-id="8a329-2796">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S de arquivo que <see langword="Lock" /> e <see langword="Unlock" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-2796">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Lock" /> and <see langword="Unlock" />.</span></span> <span data-ttu-id="8a329-2797">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-2797">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a329-2798">O `Lock` e `Unlock` funções são usadas em ambientes onde vários processos podem precisam acessar o mesmo arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-2798">The `Lock` and `Unlock` functions are used in environments where several processes might need access to the same file.</span></span>  
  
 <span data-ttu-id="8a329-2799">`Lock` e `Unlock` funções são sempre usadas em pares.</span><span class="sxs-lookup"><span data-stu-id="8a329-2799">`Lock` and `Unlock` functions are always used in pairs.</span></span> <span data-ttu-id="8a329-2800">Os argumentos para `Lock` e `Unlock` devem ser idênticos.</span><span class="sxs-lookup"><span data-stu-id="8a329-2800">The arguments to `Lock` and `Unlock` must be identical.</span></span>  
  
 <span data-ttu-id="8a329-2801">Se `Record` ou `FromRecord` e `ToRecord` não for fornecido, o bloqueio será para todo o arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-2801">If `Record`, or `FromRecord` and `ToRecord` are not supplied, the lock will be for the whole file.</span></span> <span data-ttu-id="8a329-2802">Se `Record` sozinho for especificado o único registro será bloqueada/desbloqueado.</span><span class="sxs-lookup"><span data-stu-id="8a329-2802">If `Record` alone is specified the single record will be locked/unlocked.</span></span>  
  
 <span data-ttu-id="8a329-2803">Se o arquivo foi aberto para entradas ou saídas, sequenciais `Lock` e `Unlock` afetam todo o arquivo, independentemente do intervalo especificado pelos `FromRecord` e`ToRecord`.</span><span class="sxs-lookup"><span data-stu-id="8a329-2803">If the file has been opened for sequential input or output, `Lock` and `Unlock` affect the whole file, regardless of the range specified by `FromRecord` and`ToRecord`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a329-2804">Este exemplo ilustra o uso do `Lock` e `Unlock` funções.</span><span class="sxs-lookup"><span data-stu-id="8a329-2804">This example illustrates the use of the `Lock` and `Unlock` functions.</span></span> <span data-ttu-id="8a329-2805">Este exemplo pressupõe que `People.txt` seja um arquivo contendo registros da estrutura `Person`.</span><span class="sxs-lookup"><span data-stu-id="8a329-2805">This example assumes that `People.txt` is a file that contains records of the structure `Person`.</span></span>  
  
 [!code-vb[VbVbalrCatRef#13](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="8a329-2806">O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="8a329-2806">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="Unlock">
      <MemberSignature Language="C#" Value="public static void Unlock (int FileNumber, long Record);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Unlock(int32 FileNumber, int64 Record) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Unlock(System.Int32,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unlock (FileNumber As Integer, Record As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Unlock(int FileNumber, long Record);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Record" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="8a329-2807">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-2807">Required.</span></span> <span data-ttu-id="8a329-2808">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="8a329-2808">Any valid file number.</span></span></param>
        <param name="Record"><span data-ttu-id="8a329-2809">Opcional.</span><span class="sxs-lookup"><span data-stu-id="8a329-2809">Optional.</span></span> <span data-ttu-id="8a329-2810">Número do único registro ou byte a ser bloqueado ou desbloqueado</span><span class="sxs-lookup"><span data-stu-id="8a329-2810">Number of the only record or byte to lock or unlock</span></span></param>
        <summary><span data-ttu-id="8a329-2811">Controla o acesso por outros processos a todo ou à parte de um arquivo aberto usando a função <see langword="Open" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-2811">Controls access by other processes to all or part of a file opened by using the <see langword="Open" /> function.</span></span> <span data-ttu-id="8a329-2812">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S de arquivo que <see langword="Lock" /> e <see langword="Unlock" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-2812">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Lock" /> and <see langword="Unlock" />.</span></span> <span data-ttu-id="8a329-2813">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-2813">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a329-2814">O `Lock` e `Unlock` funções são usadas em ambientes onde vários processos podem precisam acessar o mesmo arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-2814">The `Lock` and `Unlock` functions are used in environments where several processes might need access to the same file.</span></span>  
  
 <span data-ttu-id="8a329-2815">`Lock` e `Unlock` funções são sempre usadas em pares.</span><span class="sxs-lookup"><span data-stu-id="8a329-2815">`Lock` and `Unlock` functions are always used in pairs.</span></span> <span data-ttu-id="8a329-2816">Os argumentos para `Lock` e `Unlock` devem ser idênticos.</span><span class="sxs-lookup"><span data-stu-id="8a329-2816">The arguments to `Lock` and `Unlock` must be identical.</span></span>  
  
 <span data-ttu-id="8a329-2817">Se `Record` ou `FromRecord` e `ToRecord` não for fornecido, o bloqueio será para todo o arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-2817">If `Record`, or `FromRecord` and `ToRecord` are not supplied, the lock will be for the whole file.</span></span> <span data-ttu-id="8a329-2818">Se `Record` sozinho for especificado o único registro será bloqueada/desbloqueado.</span><span class="sxs-lookup"><span data-stu-id="8a329-2818">If `Record` alone is specified the single record will be locked/unlocked.</span></span>  
  
 <span data-ttu-id="8a329-2819">Se o arquivo foi aberto para entradas ou saídas, sequenciais `Lock` e `Unlock` afetam todo o arquivo, independentemente do intervalo especificado pelos `FromRecord` e`ToRecord`.</span><span class="sxs-lookup"><span data-stu-id="8a329-2819">If the file has been opened for sequential input or output, `Lock` and `Unlock` affect the whole file, regardless of the range specified by `FromRecord` and`ToRecord`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a329-2820">Este exemplo ilustra o uso do `Lock` e `Unlock` funções.</span><span class="sxs-lookup"><span data-stu-id="8a329-2820">This example illustrates the use of the `Lock` and `Unlock` functions.</span></span> <span data-ttu-id="8a329-2821">Este exemplo pressupõe que `People.txt` seja um arquivo contendo registros da estrutura `Person`.</span><span class="sxs-lookup"><span data-stu-id="8a329-2821">This example assumes that `People.txt` is a file that contains records of the structure `Person`.</span></span>  
  
 [!code-vb[VbVbalrCatRef#13](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="8a329-2822">O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="8a329-2822">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="Unlock">
      <MemberSignature Language="C#" Value="public static void Unlock (int FileNumber, long FromRecord, long ToRecord);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Unlock(int32 FileNumber, int64 FromRecord, int64 ToRecord) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Unlock(System.Int32,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unlock (FileNumber As Integer, FromRecord As Long, ToRecord As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Unlock(int FileNumber, long FromRecord, long ToRecord);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="FromRecord" Type="System.Int64" />
        <Parameter Name="ToRecord" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="8a329-2823">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-2823">Required.</span></span> <span data-ttu-id="8a329-2824">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="8a329-2824">Any valid file number.</span></span></param>
        <param name="FromRecord"><span data-ttu-id="8a329-2825">Opcional.</span><span class="sxs-lookup"><span data-stu-id="8a329-2825">Optional.</span></span> <span data-ttu-id="8a329-2826">Número do primeiro registro ou byte a ser bloqueado ou desbloqueado.</span><span class="sxs-lookup"><span data-stu-id="8a329-2826">Number of the first record or byte to lock or unlock.</span></span></param>
        <param name="ToRecord"><span data-ttu-id="8a329-2827">Opcional.</span><span class="sxs-lookup"><span data-stu-id="8a329-2827">Optional.</span></span> <span data-ttu-id="8a329-2828">Número do último registro ou byte a ser bloqueado ou desbloqueado.</span><span class="sxs-lookup"><span data-stu-id="8a329-2828">Number of the last record or byte to lock or unlock.</span></span></param>
        <summary><span data-ttu-id="8a329-2829">Controla o acesso por outros processos a todo ou à parte de um arquivo aberto usando a função <see langword="Open" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-2829">Controls access by other processes to all or part of a file opened by using the <see langword="Open" /> function.</span></span> <span data-ttu-id="8a329-2830">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S de arquivo que <see langword="Lock" /> e <see langword="Unlock" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-2830">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Lock" /> and <see langword="Unlock" />.</span></span> <span data-ttu-id="8a329-2831">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-2831">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a329-2832">O `Lock` e `Unlock` funções são usadas em ambientes onde vários processos podem precisam acessar o mesmo arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-2832">The `Lock` and `Unlock` functions are used in environments where several processes might need access to the same file.</span></span>  
  
 <span data-ttu-id="8a329-2833">`Lock` e `Unlock` funções são sempre usadas em pares.</span><span class="sxs-lookup"><span data-stu-id="8a329-2833">`Lock` and `Unlock` functions are always used in pairs.</span></span> <span data-ttu-id="8a329-2834">Os argumentos para `Lock` e `Unlock` devem ser idênticos.</span><span class="sxs-lookup"><span data-stu-id="8a329-2834">The arguments to `Lock` and `Unlock` must be identical.</span></span>  
  
 <span data-ttu-id="8a329-2835">Se `Record` ou `FromRecord` e `ToRecord` não for fornecido, o bloqueio será para todo o arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-2835">If `Record`, or `FromRecord` and `ToRecord` are not supplied, the lock will be for the whole file.</span></span> <span data-ttu-id="8a329-2836">Se `Record` sozinho for especificado o único registro será bloqueada/desbloqueado.</span><span class="sxs-lookup"><span data-stu-id="8a329-2836">If `Record` alone is specified the single record will be locked/unlocked.</span></span>  
  
 <span data-ttu-id="8a329-2837">Se o arquivo foi aberto para entradas ou saídas, sequenciais `Lock` e `Unlock` afetam todo o arquivo, independentemente do intervalo especificado pelos `FromRecord` e`ToRecord`.</span><span class="sxs-lookup"><span data-stu-id="8a329-2837">If the file has been opened for sequential input or output, `Lock` and `Unlock` affect the whole file, regardless of the range specified by `FromRecord` and`ToRecord`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a329-2838">Este exemplo ilustra o uso do `Lock` e `Unlock` funções.</span><span class="sxs-lookup"><span data-stu-id="8a329-2838">This example illustrates the use of the `Lock` and `Unlock` functions.</span></span> <span data-ttu-id="8a329-2839">Este exemplo pressupõe que `People.txt` seja um arquivo contendo registros da estrutura `Person`.</span><span class="sxs-lookup"><span data-stu-id="8a329-2839">This example assumes that `People.txt` is a file that contains records of the structure `Person`.</span></span>  
  
 [!code-vb[VbVbalrCatRef#13](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="8a329-2840">O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="8a329-2840">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (int FileNumber, params object[] Output);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Write(int32 FileNumber, object[] Output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (FileNumber As Integer, ParamArray Output As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(int FileNumber, ... cli::array &lt;System::Object ^&gt; ^ Output);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Output" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="8a329-2841">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-2841">Required.</span></span> <span data-ttu-id="8a329-2842">Uma expressão <see langword="Integer" /> que contém qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="8a329-2842">An <see langword="Integer" /> expression that contains any valid file number.</span></span></param>
        <param name="Output"><span data-ttu-id="8a329-2843">Opcional.</span><span class="sxs-lookup"><span data-stu-id="8a329-2843">Optional.</span></span> <span data-ttu-id="8a329-2844">Uma ou mais expressões delimitadas por vírgula para gravar em um arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-2844">One or more comma-delimited expressions to write to a file.</span></span></param>
        <summary><span data-ttu-id="8a329-2845">Grava dados em um arquivo sequencial.</span><span class="sxs-lookup"><span data-stu-id="8a329-2845">Writes data to a sequential file.</span></span> <span data-ttu-id="8a329-2846">Dados gravados com <see langword="Write" /> costumam ser lidos a partir de um arquivo usando <see langword="Input" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-2846">Data written with <see langword="Write" /> is usually read from a file by using <see langword="Input" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a329-2847">O `Write` e `WriteLine` funções são fornecidas para compatibilidade com versões anteriores e pode afetar o desempenho.</span><span class="sxs-lookup"><span data-stu-id="8a329-2847">The `Write` and `WriteLine` functions are provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="8a329-2848">Para aplicativos legados não, o `My.Computer.FileSystem` objeto fornece um melhor desempenho.</span><span class="sxs-lookup"><span data-stu-id="8a329-2848">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="8a329-2849">Para obter mais informações, consulte [acesso a arquivos com o Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="8a329-2849">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="8a329-2850">Se você omitir `Output`, uma linha em branco é impressa no arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-2850">If you omit `Output`, a blank line is printed to the file.</span></span> <span data-ttu-id="8a329-2851">Várias expressões podem ser separadas por vírgula.</span><span class="sxs-lookup"><span data-stu-id="8a329-2851">Multiple expressions can be separated with a comma.</span></span>  
  
 <span data-ttu-id="8a329-2852">Ao contrário de `Print` função, o `Write` função insere vírgulas entre os itens e cadeias de caracteres entre aspas, como eles são gravados no arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-2852">Unlike the `Print` function, the `Write` function inserts commas between items and quotation marks around strings as they are written to the file.</span></span> <span data-ttu-id="8a329-2853">Você não precisa colocar os delimitadores explícitas na lista.</span><span class="sxs-lookup"><span data-stu-id="8a329-2853">You do not have to put explicit delimiters in the list.</span></span> <span data-ttu-id="8a329-2854">Quando `Write` é usado para gravar dados em um arquivo, somente numérico, `Boolean`, data, null, e `Error` há suporte para formatos de dados.</span><span class="sxs-lookup"><span data-stu-id="8a329-2854">When `Write` is used to write data to a file, only numeric, `Boolean`, date, null, and `Error` data formats are supported.</span></span> <span data-ttu-id="8a329-2855">As seguintes suposições universais são seguidas para que os dados podem ser lidos e corretamente interpretados usando `Input`, independentemente da localidade:</span><span class="sxs-lookup"><span data-stu-id="8a329-2855">The following universal assumptions are followed so the data can always be read and correctly interpreted using `Input`, regardless of locale:</span></span>  
  
-   <span data-ttu-id="8a329-2856">Dados numéricos são sempre gravados usando o período como o separador decimal.</span><span class="sxs-lookup"><span data-stu-id="8a329-2856">Numeric data is always written using the period as the decimal separator.</span></span>  
  
-   <span data-ttu-id="8a329-2857">Para `Boolean` dados, `#TRUE#` ou `#FALSE#` é impresso.</span><span class="sxs-lookup"><span data-stu-id="8a329-2857">For `Boolean` data, either `#TRUE#` or `#FALSE#` is printed.</span></span> <span data-ttu-id="8a329-2858">O `True` e `False` palavras-chave não são traduzidas, independentemente da localidade.</span><span class="sxs-lookup"><span data-stu-id="8a329-2858">The `True` and `False` keywords are not translated, regardless of locale.</span></span>  
  
-   <span data-ttu-id="8a329-2859">Dados de data são gravados para o arquivo usando o formato de data universal.</span><span class="sxs-lookup"><span data-stu-id="8a329-2859">Date data is written to the file using the universal date format.</span></span> <span data-ttu-id="8a329-2860">Quando a data ou o componente de tempo está ausente ou zero, somente a parte fornecida é gravado no arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-2860">When either the date or the time component is missing or zero, only the part provided is written to the file.</span></span>  
  
-   <span data-ttu-id="8a329-2861">Nada é gravado no arquivo se `Output` dados estão vazios.</span><span class="sxs-lookup"><span data-stu-id="8a329-2861">Nothing is written to the file if `Output` data is empty.</span></span> <span data-ttu-id="8a329-2862">No entanto, para dados nulos, `#NULL#` é gravado.</span><span class="sxs-lookup"><span data-stu-id="8a329-2862">However, for null data, `#NULL#` is written.</span></span>  
  
-   <span data-ttu-id="8a329-2863">Para `Error` dados, a saída é exibida como `#ERROR errorcode#`.</span><span class="sxs-lookup"><span data-stu-id="8a329-2863">For `Error` data, the output appears as `#ERROR errorcode#`.</span></span> <span data-ttu-id="8a329-2864">O `Error` palavra-chave não é convertido, independentemente da localidade.</span><span class="sxs-lookup"><span data-stu-id="8a329-2864">The `Error` keyword is not translated, regardless of locale.</span></span>  
  
 <span data-ttu-id="8a329-2865">`WriteLine` Insere um caractere de nova linha (ou seja, um retorno de carro/linha feed, ou `Chr(13) + Chr(10)`), depois de escrever o caractere final `Output` para o arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-2865">`WriteLine` inserts a newline character (that is, a carriage return/line feed, or `Chr(13) + Chr(10)`), after it has written the final character in `Output` to the file.</span></span>  
  
 <span data-ttu-id="8a329-2866">Você pode inserir aspas em uma cadeia de caracteres usando aspas duplas, ou "".</span><span class="sxs-lookup"><span data-stu-id="8a329-2866">You can embed quotation marks in a string by using double quotation marks, or "".</span></span> <span data-ttu-id="8a329-2867">Por exemplo,</span><span class="sxs-lookup"><span data-stu-id="8a329-2867">For example,</span></span>  
  
 [!code-vb[VbVbalrCatRef#63](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#63)]  
  
 <span data-ttu-id="8a329-2868">Retorna uma cadeia de caracteres com o valor de `Double quotation marks aren't "difficult" to handle`.</span><span class="sxs-lookup"><span data-stu-id="8a329-2868">returns a string with the value of `Double quotation marks aren't "difficult" to handle`.</span></span>  
  
 <span data-ttu-id="8a329-2869">Gravar em um arquivo usando o `Write` ou `WriteLine` funções requer `Append` acessar a partir do `FileIOPermissionAccess` enumeração.</span><span class="sxs-lookup"><span data-stu-id="8a329-2869">Writing to a file by using the `Write` or `WriteLine` functions requires `Append` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="8a329-2870">Para obter mais informações, consulte <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="8a329-2870">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess> .</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a329-2871">Este exemplo usa o `Write` função para gravar dados brutos em um arquivo sequencial.</span><span class="sxs-lookup"><span data-stu-id="8a329-2871">This example uses the `Write` function to write raw data to a sequential file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#64](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#64)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="8a329-2872">O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="8a329-2872">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Input" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (int FileNumber, params object[] Output);" />
      <MemberSignature Language="ILAsm" Value=".method public static void WriteLine(int32 FileNumber, object[] Output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteLine (FileNumber As Integer, ParamArray Output As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(int FileNumber, ... cli::array &lt;System::Object ^&gt; ^ Output);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Output" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="8a329-2873">Necessário.</span><span class="sxs-lookup"><span data-stu-id="8a329-2873">Required.</span></span> <span data-ttu-id="8a329-2874">Uma expressão <see langword="Integer" /> que contém qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="8a329-2874">An <see langword="Integer" /> expression that contains any valid file number.</span></span></param>
        <param name="Output"><span data-ttu-id="8a329-2875">Opcional.</span><span class="sxs-lookup"><span data-stu-id="8a329-2875">Optional.</span></span> <span data-ttu-id="8a329-2876">Uma ou mais expressões delimitadas por vírgula para gravar em um arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-2876">One or more comma-delimited expressions to write to a file.</span></span></param>
        <summary><span data-ttu-id="8a329-2877">Grava dados em um arquivo sequencial.</span><span class="sxs-lookup"><span data-stu-id="8a329-2877">Writes data to a sequential file.</span></span> <span data-ttu-id="8a329-2878">Dados gravados com <see langword="Write" /> costumam ser lidos a partir de um arquivo usando <see langword="Input" />.</span><span class="sxs-lookup"><span data-stu-id="8a329-2878">Data written with <see langword="Write" /> is usually read from a file by using <see langword="Input" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a329-2879">O `Write` e `WriteLine` funções são fornecidas para compatibilidade com versões anteriores e pode afetar o desempenho.</span><span class="sxs-lookup"><span data-stu-id="8a329-2879">The `Write` and `WriteLine` functions are provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="8a329-2880">Para aplicativos legados não, o `My.Computer.FileSystem` objeto fornece um melhor desempenho.</span><span class="sxs-lookup"><span data-stu-id="8a329-2880">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="8a329-2881">Para obter mais informações, consulte [acesso a arquivos com o Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="8a329-2881">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="8a329-2882">Se você omitir `Output`, uma linha em branco é impressa no arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-2882">If you omit `Output`, a blank line is printed to the file.</span></span> <span data-ttu-id="8a329-2883">Várias expressões podem ser separadas por vírgula.</span><span class="sxs-lookup"><span data-stu-id="8a329-2883">Multiple expressions can be separated with a comma.</span></span>  
  
 <span data-ttu-id="8a329-2884">Ao contrário de `Print` função, o `Write` função insere vírgulas entre os itens e cadeias de caracteres entre aspas, como eles são gravados no arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-2884">Unlike the `Print` function, the `Write` function inserts commas between items and quotation marks around strings as they are written to the file.</span></span> <span data-ttu-id="8a329-2885">Você não precisa colocar os delimitadores explícitas na lista.</span><span class="sxs-lookup"><span data-stu-id="8a329-2885">You do not have to put explicit delimiters in the list.</span></span> <span data-ttu-id="8a329-2886">Quando `Write` é usado para gravar dados em um arquivo, somente numérico, `Boolean`, data, null, e `Error` há suporte para formatos de dados.</span><span class="sxs-lookup"><span data-stu-id="8a329-2886">When `Write` is used to write data to a file, only numeric, `Boolean`, date, null, and `Error` data formats are supported.</span></span> <span data-ttu-id="8a329-2887">As seguintes suposições universais são seguidas para que os dados podem ser lidos e corretamente interpretados usando `Input`, independentemente da localidade:</span><span class="sxs-lookup"><span data-stu-id="8a329-2887">The following universal assumptions are followed so the data can always be read and correctly interpreted using `Input`, regardless of locale:</span></span>  
  
-   <span data-ttu-id="8a329-2888">Dados numéricos são sempre gravados usando o período como o separador decimal.</span><span class="sxs-lookup"><span data-stu-id="8a329-2888">Numeric data is always written using the period as the decimal separator.</span></span>  
  
-   <span data-ttu-id="8a329-2889">Para `Boolean` dados, `#TRUE#` ou `#FALSE#` é impresso.</span><span class="sxs-lookup"><span data-stu-id="8a329-2889">For `Boolean` data, either `#TRUE#` or `#FALSE#` is printed.</span></span> <span data-ttu-id="8a329-2890">O `True` e `False` palavras-chave não são traduzidas, independentemente da localidade.</span><span class="sxs-lookup"><span data-stu-id="8a329-2890">The `True` and `False` keywords are not translated, regardless of locale.</span></span>  
  
-   <span data-ttu-id="8a329-2891">Dados de data são gravados para o arquivo usando o formato de data universal.</span><span class="sxs-lookup"><span data-stu-id="8a329-2891">Date data is written to the file using the universal date format.</span></span> <span data-ttu-id="8a329-2892">Quando a data ou o componente de tempo está ausente ou zero, somente a parte fornecida é gravado no arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-2892">When either the date or the time component is missing or zero, only the part provided is written to the file.</span></span>  
  
-   <span data-ttu-id="8a329-2893">Nada é gravado no arquivo se `Output` dados estão vazios.</span><span class="sxs-lookup"><span data-stu-id="8a329-2893">Nothing is written to the file if `Output` data is empty.</span></span> <span data-ttu-id="8a329-2894">No entanto, para dados nulos, `#NULL#` é gravado.</span><span class="sxs-lookup"><span data-stu-id="8a329-2894">However, for null data, `#NULL#` is written.</span></span>  
  
-   <span data-ttu-id="8a329-2895">Para `Error` dados, a saída é exibida como `#ERROR errorcode#`.</span><span class="sxs-lookup"><span data-stu-id="8a329-2895">For `Error` data, the output appears as `#ERROR errorcode#`.</span></span> <span data-ttu-id="8a329-2896">O `Error` palavra-chave não é convertido, independentemente da localidade.</span><span class="sxs-lookup"><span data-stu-id="8a329-2896">The `Error` keyword is not translated, regardless of locale.</span></span>  
  
 <span data-ttu-id="8a329-2897">`WriteLine` Insere um caractere de nova linha (ou seja, um retorno de carro/linha feed, ou `Chr(13) + Chr(10)`), depois de escrever o caractere final `Output` para o arquivo.</span><span class="sxs-lookup"><span data-stu-id="8a329-2897">`WriteLine` inserts a newline character (that is, a carriage return/line feed, or `Chr(13) + Chr(10)`), after it has written the final character in `Output` to the file.</span></span>  
  
 <span data-ttu-id="8a329-2898">Você pode inserir aspas em uma cadeia de caracteres usando aspas duplas, ou "".</span><span class="sxs-lookup"><span data-stu-id="8a329-2898">You can embed quotation marks in a string by using double quotation marks, or "".</span></span> <span data-ttu-id="8a329-2899">Por exemplo,</span><span class="sxs-lookup"><span data-stu-id="8a329-2899">For example,</span></span>  
  
 [!code-vb[VbVbalrCatRef#63](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#63)]  
  
 <span data-ttu-id="8a329-2900">Retorna uma cadeia de caracteres com o valor de `Double quotation marks aren't "difficult" to handle`.</span><span class="sxs-lookup"><span data-stu-id="8a329-2900">returns a string with the value of `Double quotation marks aren't "difficult" to handle`.</span></span>  
  
 <span data-ttu-id="8a329-2901">Gravar em um arquivo usando o `Write` ou `WriteLine` funções requer `Append` acessar a partir do `FileIOPermissionAccess` enumeração.</span><span class="sxs-lookup"><span data-stu-id="8a329-2901">Writing to a file by using the `Write` or `WriteLine` functions requires `Append` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="8a329-2902">Para obter mais informações, consulte <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="8a329-2902">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess> .</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a329-2903">Este exemplo usa o `Write` função para gravar dados brutos em um arquivo sequencial.</span><span class="sxs-lookup"><span data-stu-id="8a329-2903">This example uses the `Write` function to write raw data to a sequential file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#64](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#64)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Input" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
  </Members>
</Type>