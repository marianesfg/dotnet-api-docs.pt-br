<Type Name="FileSystem" FullName="Microsoft.VisualBasic.FileSystem">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="76423e19c418e3145c1946201eeb07bad53c0200" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39908788" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class FileSystem" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit FileSystem extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.FileSystem" />
  <TypeSignature Language="VB.NET" Value="Public Module FileSystem" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileSystem sealed" />
  <TypeSignature Language="F#" Value="type FileSystem = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>Microsoft.VisualBasic.CompilerServices.StandardModule</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="6bda5-101">O módulo <see langword="FileSystem" /> contém os procedimentos usados para executar operações de arquivo, diretório ou pasta e sistema.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6bda5-101">The <see langword="FileSystem" /> module contains the procedures that are used to perform file, directory or folder, and system operations.</span>
      </span>
      <span data-ttu-id="6bda5-102">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S de arquivo do que usando o módulo <see langword="FileSystem" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6bda5-102">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than using the <see langword="FileSystem" /> module.</span>
      </span>
      <span data-ttu-id="6bda5-103">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6bda5-103">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bda5-104">Este módulo oferece suporte a palavras-chave de linguagem Visual Basic e membros da biblioteca em tempo de execução que acessam arquivos e pastas.</span><span class="sxs-lookup"><span data-stu-id="6bda5-104">This module supports the Visual Basic language keywords and run-time library members that access files and folders.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6bda5-105">Este exemplo usa o `GetAttr` função para determinar os atributos de um arquivo e diretório ou pasta.</span><span class="sxs-lookup"><span data-stu-id="6bda5-105">This example uses the `GetAttr` function to determine the attributes of a file and directory or folder.</span></span>  
  
 [!code-vb[VbVbalrCatRef#25](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#25)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ChDir">
      <MemberSignature Language="C#" Value="public static void ChDir (string Path);" />
      <MemberSignature Language="ILAsm" Value=".method public static void ChDir(string Path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.ChDir(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ChDir (Path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ChDir(System::String ^ Path);" />
      <MemberSignature Language="F#" Value="static member ChDir : string -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.ChDir Path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Path">
          <span data-ttu-id="6bda5-106">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-106">Required.</span>
          </span>
          <span data-ttu-id="6bda5-107">Uma expressão <see langword="String" /> que identifica qual diretório ou pasta se torna o novo diretório ou pasta padrão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-107">A <see langword="String" /> expression that identifies which directory or folder becomes the new default directory or folder.</span>
          </span>
          <span data-ttu-id="6bda5-108">
            <c>Path</c> pode incluir a unidade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-108">
              <c>Path</c> may include the drive.</span>
          </span>
          <span data-ttu-id="6bda5-109">Se nenhuma unidade for especificada, o <see langword="ChDir" /> alterará o diretório ou pasta padrão na unidade atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-109">If no drive is specified, <see langword="ChDir" /> changes the default directory or folder on the current drive.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6bda5-110">Altera o diretório ou pasta atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-110">Changes the current directory or folder.</span>
          </span>
          <span data-ttu-id="6bda5-111">O recurso <see langword="My" /> oferece maior produtividade e desempenho em operações de E/S de arquivo do que a função <see langword="ChDir" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-111">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than the <see langword="ChDir" /> function.</span>
          </span>
          <span data-ttu-id="6bda5-112">Para obter mais informações, consulte <see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-112">For more information, see <see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" /> .</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bda5-113">O `ChDir` função altera o diretório padrão, mas não a unidade padrão.</span><span class="sxs-lookup"><span data-stu-id="6bda5-113">The `ChDir` function changes the default directory, but not the default drive.</span></span> <span data-ttu-id="6bda5-114">Por exemplo, se a unidade padrão é C, a instrução a seguir altera o diretório padrão na unidade D, mas C permanece a unidade padrão:</span><span class="sxs-lookup"><span data-stu-id="6bda5-114">For example, if the default drive is C, the following statement changes the default directory on drive D, but C remains the default drive:</span></span>  
  
 [!code-vb[VbVbalrCatRef#39](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#39)]  
  
 <span data-ttu-id="6bda5-115">Você pode tornar relativo alterações de diretório é, digitando dois pontos, da seguinte maneira:</span><span class="sxs-lookup"><span data-stu-id="6bda5-115">You can make relative directory changes is by typing two periods, as follows:</span></span>  
  
 [!code-vb[VbVbalrCatRef#40](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#40)]  
  
> [!IMPORTANT]
>  <span data-ttu-id="6bda5-116">O `ChDir` função requer permissão de código não gerenciado, que pode afetar sua execução em situações de confiança parcial.</span><span class="sxs-lookup"><span data-stu-id="6bda5-116">The `ChDir` function requires unmanaged code permission, which may affect its execution in partial-trust situations.</span></span> <span data-ttu-id="6bda5-117">Para obter mais informações, consulte <xref:System.Security.Permissions.SecurityPermission> e.</span><span class="sxs-lookup"><span data-stu-id="6bda5-117">For more information, see <xref:System.Security.Permissions.SecurityPermission> and .</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6bda5-118">Este exemplo usa o `ChDir` função para alterar o diretório atual ou a pasta.</span><span class="sxs-lookup"><span data-stu-id="6bda5-118">This example uses the `ChDir` function to change the current directory or folder.</span></span>  
  
 [!code-vb[VbVbalrCatRef#41](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#41)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6bda5-119">
            <paramref name="Path" /> está vazio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-119">
              <paramref name="Path" /> is empty.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="6bda5-120">Uma unidade inválida foi especificada ou a unidade está indisponível.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-120">Invalid drive is specified, or drive is unavailable.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.ChDrive" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.CurDir" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Dir" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.MkDir(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.RmDir(System.String)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.FileNotFoundException" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ChDrive">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6bda5-121">Altera a unidade atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-121">Changes the current drive.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ChDrive">
      <MemberSignature Language="C#" Value="public static void ChDrive (char Drive);" />
      <MemberSignature Language="ILAsm" Value=".method public static void ChDrive(char Drive) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.ChDrive(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ChDrive (Drive As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ChDrive(char Drive);" />
      <MemberSignature Language="F#" Value="static member ChDrive : char -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.ChDrive Drive" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Drive" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="Drive">
          <span data-ttu-id="6bda5-122">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-122">Required.</span>
          </span>
          <span data-ttu-id="6bda5-123">Expressão de cadeia de caracteres que especifica uma unidade existente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-123">String expression that specifies an existing drive.</span>
          </span>
          <span data-ttu-id="6bda5-124">Se você fornecer uma cadeia de caracteres de tamanho zero (""), a unidade atual não será alterada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-124">If you supply a zero-length string (""), the current drive does not change.</span>
          </span>
          <span data-ttu-id="6bda5-125">Se o argumento <c>Unidade</c> for uma cadeia de vários caracteres, <see langword="ChDrive" /> usará somente a primeira letra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-125">If the <c>Drive</c> argument is a multiple-character string, <see langword="ChDrive" /> uses only the first letter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6bda5-126">Altera a unidade atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-126">Changes the current drive.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bda5-127">O `ChDrive` função requer permissão de código não gerenciado, que pode afetar sua execução em situações de confiança parcial.</span><span class="sxs-lookup"><span data-stu-id="6bda5-127">The `ChDrive` function requires unmanaged-code permission, which may affect its execution in partial-trust situations.</span></span> <span data-ttu-id="6bda5-128">Para obter mais informações, consulte <xref:System.Security.Permissions.SecurityPermission> e [permissões de acesso do código](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span><span class="sxs-lookup"><span data-stu-id="6bda5-128">For more information, see <xref:System.Security.Permissions.SecurityPermission> and [Code Access Permissions](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6bda5-129">Este exemplo usa o `ChDrive` função para alterar a unidade atual.</span><span class="sxs-lookup"><span data-stu-id="6bda5-129">This example uses the `ChDrive` function to change the current drive.</span></span> <span data-ttu-id="6bda5-130">A função gera uma exceção se a unidade não existe.</span><span class="sxs-lookup"><span data-stu-id="6bda5-130">The function throws an exception if the drive does not exist.</span></span>  
  
 [!code-vb[VbVbalrCatRef#32](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#32)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="6bda5-131">Uma unidade inválida foi especificada ou a unidade está indisponível.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-131">Invalid drive is specified, or drive is unavailable.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.ChDir(System.String)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.CurDir" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Dir" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.MkDir(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.RmDir(System.String)" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="ChDrive">
      <MemberSignature Language="C#" Value="public static void ChDrive (string Drive);" />
      <MemberSignature Language="ILAsm" Value=".method public static void ChDrive(string Drive) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.ChDrive(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ChDrive (Drive As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ChDrive(System::String ^ Drive);" />
      <MemberSignature Language="F#" Value="static member ChDrive : string -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.ChDrive Drive" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Drive" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Drive">
          <span data-ttu-id="6bda5-132">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-132">Required.</span>
          </span>
          <span data-ttu-id="6bda5-133">Expressão de cadeia de caracteres que especifica uma unidade existente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-133">String expression that specifies an existing drive.</span>
          </span>
          <span data-ttu-id="6bda5-134">Se você fornecer uma cadeia de caracteres de tamanho zero (""), a unidade atual não será alterada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-134">If you supply a zero-length string (""), the current drive does not change.</span>
          </span>
          <span data-ttu-id="6bda5-135">Se o argumento <c>Unidade</c> for uma cadeia de vários caracteres, <see langword="ChDrive" /> usará somente a primeira letra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-135">If the <c>Drive</c> argument is a multiple-character string, <see langword="ChDrive" /> uses only the first letter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6bda5-136">Altera a unidade atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-136">Changes the current drive.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bda5-137">O `ChDrive` função requer permissão de código não gerenciado, que pode afetar sua execução em situações de confiança parcial.</span><span class="sxs-lookup"><span data-stu-id="6bda5-137">The `ChDrive` function requires unmanaged-code permission, which may affect its execution in partial-trust situations.</span></span> <span data-ttu-id="6bda5-138">Para obter mais informações, consulte <xref:System.Security.Permissions.SecurityPermission> e [permissões de acesso do código](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span><span class="sxs-lookup"><span data-stu-id="6bda5-138">For more information, see <xref:System.Security.Permissions.SecurityPermission> and [Code Access Permissions](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6bda5-139">Este exemplo usa o `ChDrive` função para alterar a unidade atual.</span><span class="sxs-lookup"><span data-stu-id="6bda5-139">This example uses the `ChDrive` function to change the current drive.</span></span> <span data-ttu-id="6bda5-140">A função gera uma exceção se a unidade não existe.</span><span class="sxs-lookup"><span data-stu-id="6bda5-140">The function throws an exception if the drive does not exist.</span></span>  
  
 [!code-vb[VbVbalrCatRef#32](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#32)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="6bda5-141">Uma unidade inválida foi especificada ou a unidade está indisponível.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-141">Invalid drive is specified, or drive is unavailable.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.ChDir(System.String)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.CurDir" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Dir" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.MkDir(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.RmDir(System.String)" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CurDir">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6bda5-142">Retorna uma cadeia de caracteres que representa o caminho atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-142">Returns a string representing the current path.</span>
          </span>
          <span data-ttu-id="6bda5-143">O <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> oferece maior produtividade e desempenho em operações de E/S de arquivo que <see langword="CurDir" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-143">The <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> gives you better productivity and performance in file I/O operations than <see langword="CurDir" />.</span>
          </span>
          <span data-ttu-id="6bda5-144">Para obter mais informações, consulte <see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-144">For more information, see <see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CurDir">
      <MemberSignature Language="C#" Value="public static string CurDir ();" />
      <MemberSignature Language="ILAsm" Value=".method public static string CurDir() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.CurDir" />
      <MemberSignature Language="VB.NET" Value="Public Function CurDir () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ CurDir();" />
      <MemberSignature Language="F#" Value="static member CurDir : unit -&gt; string" Usage="Microsoft.VisualBasic.FileSystem.CurDir " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6bda5-145">Retorna uma cadeia de caracteres que representa o caminho atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-145">Returns a string representing the current path.</span>
          </span>
          <span data-ttu-id="6bda5-146">O <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> oferece maior produtividade e desempenho em operações de E/S de arquivo que <see langword="CurDir" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-146">The <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> gives you better productivity and performance in file I/O operations than <see langword="CurDir" />.</span>
          </span>
          <span data-ttu-id="6bda5-147">Para obter mais informações, consulte <see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-147">For more information, see <see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6bda5-148">Uma cadeia de caracteres que representa o caminho atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-148">A string representing the current path.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6bda5-149">Este exemplo usa o `CurDir` função para retornar o caminho atual.</span><span class="sxs-lookup"><span data-stu-id="6bda5-149">This example uses the `CurDir` function to return the current path.</span></span>  
  
 [!code-vb[VbVbalrCatRef#65](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#65)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.ChDrive" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.ChDir(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.MkDir(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.RmDir(System.String)" />
        <altmember cref="T:System.IO.IOException" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="CurDir">
      <MemberSignature Language="C#" Value="public static string CurDir (char Drive);" />
      <MemberSignature Language="ILAsm" Value=".method public static string CurDir(char Drive) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.CurDir(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function CurDir (Drive As Char) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ CurDir(char Drive);" />
      <MemberSignature Language="F#" Value="static member CurDir : char -&gt; string" Usage="Microsoft.VisualBasic.FileSystem.CurDir Drive" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Drive" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="Drive">
          <span data-ttu-id="6bda5-150">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-150">Optional.</span>
          </span>
          <span data-ttu-id="6bda5-151">A expressão <see langword="Char" /> que especifica uma unidade existente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-151">
              <see langword="Char" /> expression that specifies an existing drive.</span>
          </span>
          <span data-ttu-id="6bda5-152">Se nenhuma unidade for especificada ou, se <c>Unidade</c> for uma cadeia de caracteres de tamanho zero (""), <see langword="CurDir" /> retornará o caminho da unidade atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-152">If no drive is specified, or if <c>Drive</c> is a zero-length string (""), <see langword="CurDir" /> returns the path for the current drive.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6bda5-153">Retorna uma cadeia de caracteres que representa o caminho atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-153">Returns a string representing the current path.</span>
          </span>
          <span data-ttu-id="6bda5-154">O <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> oferece maior produtividade e desempenho em operações de E/S de arquivo que <see langword="CurDir" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-154">The <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> gives you better productivity and performance in file I/O operations than <see langword="CurDir" />.</span>
          </span>
          <span data-ttu-id="6bda5-155">Para obter mais informações, consulte <see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-155">For more information, see <see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6bda5-156">Uma cadeia de caracteres que representa o caminho atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-156">A string representing the current path.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6bda5-157">Este exemplo usa o `CurDir` função para retornar o caminho atual.</span><span class="sxs-lookup"><span data-stu-id="6bda5-157">This example uses the `CurDir` function to return the current path.</span></span>  
  
 [!code-vb[VbVbalrCatRef#65](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#65)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.ChDrive" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.ChDir(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.MkDir(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.RmDir(System.String)" />
        <altmember cref="T:System.IO.IOException" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dir">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6bda5-158">Retorna uma cadeia de caracteres que representa o nome de um arquivo, diretório ou pasta que corresponde a um padrão ou atributo de arquivo especificado ou o rótulo de volume de uma unidade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-158">Returns a string representing the name of a file, directory, or folder that matches a specified pattern or file attribute, or the volume label of a drive.</span>
          </span>
          <span data-ttu-id="6bda5-159">O <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> oferece maior produtividade e desempenho em operações de E/S de arquivo do que a função <see langword="Dir" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-159">The <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> gives you better productivity and performance in file I/O operations than the <see langword="Dir" /> function.</span>
          </span>
          <span data-ttu-id="6bda5-160">Consulte <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)" /> para obter mais informações.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-160">See <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)" /> for more information.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dir">
      <MemberSignature Language="C#" Value="public static string Dir ();" />
      <MemberSignature Language="ILAsm" Value=".method public static string Dir() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Dir" />
      <MemberSignature Language="VB.NET" Value="Public Function Dir () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Dir();" />
      <MemberSignature Language="F#" Value="static member Dir : unit -&gt; string" Usage="Microsoft.VisualBasic.FileSystem.Dir " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6bda5-161">Retorna uma cadeia de caracteres que representa o nome de um arquivo, diretório ou pasta que corresponde a um padrão ou atributo de arquivo especificado ou o rótulo de volume de uma unidade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-161">Returns a string representing the name of a file, directory, or folder that matches a specified pattern or file attribute, or the volume label of a drive.</span>
          </span>
          <span data-ttu-id="6bda5-162">O <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> oferece maior produtividade e desempenho em operações de E/S de arquivo do que a função <see langword="Dir" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-162">The <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> gives you better productivity and performance in file I/O operations than the <see langword="Dir" /> function.</span>
          </span>
          <span data-ttu-id="6bda5-163">Consulte <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)" /> para obter mais informações.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-163">See <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)" /> for more information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6bda5-164">Uma cadeia de caracteres representando o nome de um arquivo, diretório ou pasta correspondente a um padrão especificado ou atributo de arquivo ou o rótulo de volume de uma unidade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-164">A string representing the name of a file, directory, or folder that matches a specified pattern or file attribute, or the volume label of a drive.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bda5-165">O `Dir` função suporta o uso de vários caracteres (`*`) e de caractere único (`?`) caracteres curinga para especificar vários arquivos.</span><span class="sxs-lookup"><span data-stu-id="6bda5-165">The `Dir` function supports the use of multiple-character (`*`) and single-character (`?`) wildcards to specify multiple files.</span></span>  
  
 <span data-ttu-id="6bda5-166">`VbVolume` Retorna o rótulo de volume para a unidade em vez de um nome de arquivo específico.</span><span class="sxs-lookup"><span data-stu-id="6bda5-166">`VbVolume` returns the volume label for the drive instead of a specific file name.</span></span>  
  
 <span data-ttu-id="6bda5-167">Você deve fornecer um `PathName` na primeira vez que você chamar o `Dir` função.</span><span class="sxs-lookup"><span data-stu-id="6bda5-167">You must supply a `PathName` the first time that you call the `Dir` function.</span></span> <span data-ttu-id="6bda5-168">Para recuperar o próximo item, você pode fazer chamadas subsequentes para o `Dir` função sem parâmetros.</span><span class="sxs-lookup"><span data-stu-id="6bda5-168">To retrieve the next item, you can make subsequent calls to the `Dir` function without parameters.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6bda5-169">Para ser executado corretamente, o `Dir` função requer que o <xref:System.Security.Permissions.FileIOPermissionAccess.Read> e <xref:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery> sinalizadores de <xref:System.Security.Permissions.FileIOPermission> sejam concedidas ao código em execução.</span><span class="sxs-lookup"><span data-stu-id="6bda5-169">To run correctly, the `Dir` function requires the <xref:System.Security.Permissions.FileIOPermissionAccess.Read> and <xref:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery> flags of <xref:System.Security.Permissions.FileIOPermission> to be granted to the executing code.</span></span> <span data-ttu-id="6bda5-170">Para obter mais informações, consulte <xref:System.Security.Permissions.FileIOPermission>, <xref:System.Security.SecurityException>, e [permissões de acesso do código](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span><span class="sxs-lookup"><span data-stu-id="6bda5-170">For more information, see <xref:System.Security.Permissions.FileIOPermission>, <xref:System.Security.SecurityException>, and [Code Access Permissions](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span></span>  
  
 <span data-ttu-id="6bda5-171">O `Attributes` valores de enumeração de argumento são da seguinte maneira:</span><span class="sxs-lookup"><span data-stu-id="6bda5-171">The `Attributes` argument enumeration values are as follows:</span></span>  
  
|<span data-ttu-id="6bda5-172">Valor</span><span class="sxs-lookup"><span data-stu-id="6bda5-172">Value</span></span>|<span data-ttu-id="6bda5-173">Constante</span><span class="sxs-lookup"><span data-stu-id="6bda5-173">Constant</span></span>|<span data-ttu-id="6bda5-174">Descrição</span><span class="sxs-lookup"><span data-stu-id="6bda5-174">Description</span></span>|  
|-|-|-|  
|`Normal`|`vbnormal`|<span data-ttu-id="6bda5-175">Padrão.</span><span class="sxs-lookup"><span data-stu-id="6bda5-175">Default.</span></span> <span data-ttu-id="6bda5-176">Especifica os arquivos sem atributos.</span><span class="sxs-lookup"><span data-stu-id="6bda5-176">Specifies files without attributes.</span></span>|  
|`ReadOnly`|`vbReadOnly`|<span data-ttu-id="6bda5-177">Especifica arquivos somente leitura e também arquivos sem atributos.</span><span class="sxs-lookup"><span data-stu-id="6bda5-177">Specifies read-only files, and also files without attributes.</span></span>|  
|`Hidden`|`vbHidden`|<span data-ttu-id="6bda5-178">Especifica arquivos ocultos e também arquivos sem atributos.</span><span class="sxs-lookup"><span data-stu-id="6bda5-178">Specifies hidden files, and also files without attributes.</span></span>|  
|`System`|`vbSystem`|<span data-ttu-id="6bda5-179">Especifica os arquivos do sistema e arquivos sem atributos.</span><span class="sxs-lookup"><span data-stu-id="6bda5-179">Specifies system files, and also files without attributes.</span></span>|  
|`Volume`|`vbVolume`|<span data-ttu-id="6bda5-180">Especifica o rótulo do volume; Se qualquer outro atributo for especificado, `vbVolume` será ignorado.</span><span class="sxs-lookup"><span data-stu-id="6bda5-180">Specifies volume label; if any other attribute is specified, `vbVolume` is ignored.</span></span>|  
|`Directory`|`vbDirectory`|<span data-ttu-id="6bda5-181">Especifica diretórios ou pastas e arquivos sem atributos.</span><span class="sxs-lookup"><span data-stu-id="6bda5-181">Specifies directories or folders, and also files without attributes.</span></span>|  
|`Archive`|`vbArchive`|<span data-ttu-id="6bda5-182">O arquivo foi alterado desde o último backup.</span><span class="sxs-lookup"><span data-stu-id="6bda5-182">File has changed since last backup.</span></span>|  
|`Alias`|`vbAlias`|<span data-ttu-id="6bda5-183">O arquivo tem um nome diferente.</span><span class="sxs-lookup"><span data-stu-id="6bda5-183">File has a different name.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="6bda5-184">Essas enumerações são especificadas pela linguagem Visual Basic e podem ser usadas em qualquer lugar em seu código em vez dos valores reais.</span><span class="sxs-lookup"><span data-stu-id="6bda5-184">These enumerations are specified by the Visual Basic language and can be used anywhere in your code instead of the actual values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6bda5-185">Este exemplo usa o `Dir` função para verificar se existem determinados arquivos e diretórios.</span><span class="sxs-lookup"><span data-stu-id="6bda5-185">This example uses the `Dir` function to check if certain files and directories exist.</span></span>  
  
 [!code-vb[VbVbalrCatRef#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.ChDir(System.String)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.ChDrive" />
        <altmember cref="T:Microsoft.VisualBasic.FileAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Dir">
      <MemberSignature Language="C#" Value="public static string Dir (string Pathname, Microsoft.VisualBasic.FileAttribute Attributes = Microsoft.VisualBasic.FileAttribute.Normal);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Dir(string Pathname, valuetype Microsoft.VisualBasic.FileAttribute Attributes) cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Dir(System.String,Microsoft.VisualBasic.FileAttribute)" FrameworkAlternate="netframework-2.0" />
      <MemberSignature Language="VB.NET" Value="Public Function Dir (Pathname As String, Optional Attributes As FileAttribute = Microsoft.VisualBasic.FileAttribute.Normal) As String" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="static member Dir : string * Microsoft.VisualBasic.FileAttribute -&gt; string" Usage="Microsoft.VisualBasic.FileSystem.Dir (Pathname, Attributes)" FrameworkAlternate="netframework-2.0" />
      <MemberSignature Language="C#" Value="public static string Dir (string PathName, Microsoft.VisualBasic.FileAttribute Attributes = Microsoft.VisualBasic.FileAttribute.Normal);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public static string Dir(string PathName, valuetype Microsoft.VisualBasic.FileAttribute Attributes) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Dir(System.String,Microsoft.VisualBasic.FileAttribute)" FrameworkAlternate="netframework-1.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Public Function Dir (PathName As String, Optional Attributes As FileAttribute = Microsoft.VisualBasic.FileAttribute.Normal) As String" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="F#" Value="static member Dir : string * Microsoft.VisualBasic.FileAttribute -&gt; string" Usage="Microsoft.VisualBasic.FileSystem.Dir (PathName, Attributes)" FrameworkAlternate="netframework-1.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Pathname" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="PathName" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
        <Parameter Name="Attributes" Type="Microsoft.VisualBasic.FileAttribute" Index="1" />
      </Parameters>
      <Docs>
        <param name="PathName">
          <span data-ttu-id="6bda5-186">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-186">Optional.</span>
          </span>
          <span data-ttu-id="6bda5-187">Expressão de <see langword="String" /> que especifica um nome de arquivo, diretório ou pasta ou um rótulo de volume de unidade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-187">
              <see langword="String" /> expression that specifies a file name, directory or folder name, or drive volume label.</span>
          </span>
          <span data-ttu-id="6bda5-188">Uma cadeia de caracteres de tamanho zero (<see langword="&quot;&quot;" />) será retornada se <c>PathName</c> não for encontrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-188">A zero-length string (<see langword="&quot;&quot;" />) is returned if <c>PathName</c> is not found.</span>
          </span>
        </param>
        <param name="Pathname">To be added.</param>
        <param name="Attributes">
          <span data-ttu-id="6bda5-189">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-189">Optional.</span>
          </span>
          <span data-ttu-id="6bda5-190">Enumeração ou expressão numérica cujo valor especifica atributos de arquivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-190">Enumeration or numeric expression whose value specifies file attributes.</span>
          </span>
          <span data-ttu-id="6bda5-191">Se omitido, <see langword="Dir" /> retorna arquivos que correspondem a <c>PathName</c>, mas não têm atributos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-191">If omitted, <see langword="Dir" /> returns files that match <c>PathName</c> but have no attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6bda5-192">Retorna uma cadeia de caracteres que representa o nome de um arquivo, diretório ou pasta que corresponde a um padrão ou atributo de arquivo especificado ou o rótulo de volume de uma unidade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-192">Returns a string representing the name of a file, directory, or folder that matches a specified pattern or file attribute, or the volume label of a drive.</span>
          </span>
          <span data-ttu-id="6bda5-193">O <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> oferece maior produtividade e desempenho em operações de E/S de arquivo do que a função <see langword="Dir" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-193">The <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> gives you better productivity and performance in file I/O operations than the <see langword="Dir" /> function.</span>
          </span>
          <span data-ttu-id="6bda5-194">Consulte <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)" /> para obter mais informações.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-194">See <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)" /> for more information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6bda5-195">Uma cadeia de caracteres representando o nome de um arquivo, diretório ou pasta correspondente a um padrão especificado ou atributo de arquivo ou o rótulo de volume de uma unidade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-195">A string representing the name of a file, directory, or folder that matches a specified pattern or file attribute, or the volume label of a drive.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bda5-196">O `Dir` função suporta o uso de vários caracteres (`*`) e de caractere único (`?`) caracteres curinga para especificar vários arquivos.</span><span class="sxs-lookup"><span data-stu-id="6bda5-196">The `Dir` function supports the use of multiple-character (`*`) and single-character (`?`) wildcards to specify multiple files.</span></span>  
  
 <span data-ttu-id="6bda5-197">`VbVolume` Retorna o rótulo de volume para a unidade em vez de um nome de arquivo específico.</span><span class="sxs-lookup"><span data-stu-id="6bda5-197">`VbVolume` returns the volume label for the drive instead of a specific file name.</span></span>  
  
 <span data-ttu-id="6bda5-198">Você deve fornecer um `PathName` na primeira vez que você chamar o `Dir` função.</span><span class="sxs-lookup"><span data-stu-id="6bda5-198">You must supply a `PathName` the first time that you call the `Dir` function.</span></span> <span data-ttu-id="6bda5-199">Para recuperar o próximo item, você pode fazer chamadas subsequentes para o `Dir` função sem parâmetros.</span><span class="sxs-lookup"><span data-stu-id="6bda5-199">To retrieve the next item, you can make subsequent calls to the `Dir` function with no parameters.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6bda5-200">Para ser executado corretamente, o `Dir` função requer que o <xref:System.Security.Permissions.FileIOPermissionAccess.Read> e <xref:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery> sinalizadores de <xref:System.Security.Permissions.FileIOPermission> sejam concedidas ao código em execução.</span><span class="sxs-lookup"><span data-stu-id="6bda5-200">To run correctly, the `Dir` function requires the <xref:System.Security.Permissions.FileIOPermissionAccess.Read> and <xref:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery> flags of <xref:System.Security.Permissions.FileIOPermission> to be granted to the executing code.</span></span> <span data-ttu-id="6bda5-201">Para obter mais informações, consulte <xref:System.Security.Permissions.FileIOPermission>, <xref:System.Security.SecurityException>, e [permissões de acesso do código](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span><span class="sxs-lookup"><span data-stu-id="6bda5-201">For more information, see <xref:System.Security.Permissions.FileIOPermission>, <xref:System.Security.SecurityException>, and [Code Access Permissions](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span></span>  
  
 <span data-ttu-id="6bda5-202">O `Attributes` valores de enumeração de argumento são da seguinte maneira:</span><span class="sxs-lookup"><span data-stu-id="6bda5-202">The `Attributes` argument enumeration values are as follows:</span></span>  
  
|<span data-ttu-id="6bda5-203">Valor</span><span class="sxs-lookup"><span data-stu-id="6bda5-203">Value</span></span>|<span data-ttu-id="6bda5-204">Constante</span><span class="sxs-lookup"><span data-stu-id="6bda5-204">Constant</span></span>|<span data-ttu-id="6bda5-205">Descrição</span><span class="sxs-lookup"><span data-stu-id="6bda5-205">Description</span></span>|  
|-|-|-|  
|`Normal`|`vbnormal`|<span data-ttu-id="6bda5-206">Padrão.</span><span class="sxs-lookup"><span data-stu-id="6bda5-206">Default.</span></span> <span data-ttu-id="6bda5-207">Especifica os arquivos que não têm atributos.</span><span class="sxs-lookup"><span data-stu-id="6bda5-207">Specifies files that have no attributes.</span></span>|  
|`ReadOnly`|`vbReadOnly`|<span data-ttu-id="6bda5-208">Especifica arquivos somente leitura, além dos arquivos que não têm atributos.</span><span class="sxs-lookup"><span data-stu-id="6bda5-208">Specifies read-only files, in addition to files that have no attributes.</span></span>|  
|`Hidden`|`vbHidden`|<span data-ttu-id="6bda5-209">Especifica arquivos ocultos, além dos arquivos que não têm atributos.</span><span class="sxs-lookup"><span data-stu-id="6bda5-209">Specifies hidden files, in addition to files that have no attributes.</span></span>|  
|`System`|`vbSystem`|<span data-ttu-id="6bda5-210">Especifica os arquivos do sistema, além dos arquivos que não têm atributos.</span><span class="sxs-lookup"><span data-stu-id="6bda5-210">Specifies system files, in addition to files that have no attributes.</span></span>|  
|`Volume`|`vbVolume`|<span data-ttu-id="6bda5-211">Especifica o rótulo do volume; Se qualquer outro atributo for especificado, `vbVolume` será ignorado.</span><span class="sxs-lookup"><span data-stu-id="6bda5-211">Specifies volume label; if any other attribute is specified, `vbVolume` is ignored.</span></span>|  
|`Directory`|`vbDirectory`|<span data-ttu-id="6bda5-212">Especifica diretórios ou pastas, além dos arquivos que não têm atributos.</span><span class="sxs-lookup"><span data-stu-id="6bda5-212">Specifies directories or folders, in addition to files that have no attributes.</span></span>|  
|`Archive`|`vbArchive`|<span data-ttu-id="6bda5-213">O arquivo foi alterado desde o último backup.</span><span class="sxs-lookup"><span data-stu-id="6bda5-213">File has changed since last backup.</span></span>|  
|`Alias`|`vbAlias`|<span data-ttu-id="6bda5-214">O arquivo tem um nome diferente.</span><span class="sxs-lookup"><span data-stu-id="6bda5-214">File has a different name.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="6bda5-215">Essas enumerações são especificadas pela linguagem Visual Basic e podem ser usadas em qualquer lugar em seu código no lugar dos valores reais.</span><span class="sxs-lookup"><span data-stu-id="6bda5-215">These enumerations are specified by the Visual Basic language and can be used anywhere in your code in place of the actual values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6bda5-216">Este exemplo usa o `Dir` função para verificar se existem determinados arquivos e diretórios.</span><span class="sxs-lookup"><span data-stu-id="6bda5-216">This example uses the `Dir` function to check if certain files and directories exist.</span></span>  
  
 [!code-vb[VbVbalrCatRef#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.ChDir(System.String)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.ChDrive" />
        <altmember cref="T:Microsoft.VisualBasic.FileAttribute" />
      </Docs>
    </Member>
    <Member MemberName="EOF">
      <MemberSignature Language="C#" Value="public static bool EOF (int FileNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool EOF(int32 FileNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.EOF(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function EOF (FileNumber As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool EOF(int FileNumber);" />
      <MemberSignature Language="F#" Value="static member EOF : int -&gt; bool" Usage="Microsoft.VisualBasic.FileSystem.EOF FileNumber" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="6bda5-217">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-217">Required.</span>
          </span>
          <span data-ttu-id="6bda5-218">Um <see langword="Integer" /> que contém qualquer número de arquivo válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-218">An <see langword="Integer" /> that contains any valid file number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6bda5-219">Retorna um valor booliano <see langword="True" /> quando o final de um arquivo aberto para <see langword="Random" /> ou <see langword="Input" /> sequencial foi atingido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-219">Returns a Boolean value <see langword="True" /> when the end of a file opened for <see langword="Random" /> or sequential <see langword="Input" /> has been reached.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6bda5-220">Retorna um valor booliano <see langword="True" /> quando o final de um arquivo aberto para <see langword="Random" /> ou <see langword="Input" /> sequencial foi atingido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-220">Returns a Boolean value <see langword="True" /> when the end of a file opened for <see langword="Random" /> or sequential <see langword="Input" /> has been reached.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bda5-221">Use `EOF` para evitar o erro gerado pela tentativa de obter entrada passou do final de um arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-221">Use `EOF` to avoid the error generated by attempting to get input past the end of a file.</span></span>  
  
 <span data-ttu-id="6bda5-222">O `EOF` retornos de função `False` até o final do arquivo foi atingido.</span><span class="sxs-lookup"><span data-stu-id="6bda5-222">The `EOF` function returns `False` until the end of the file has been reached.</span></span> <span data-ttu-id="6bda5-223">Com arquivos abertos para `Random` ou `Binary` acesso `EOF` retorna `False` até o último executado `FileGet` função não é possível ler um registro inteiro.</span><span class="sxs-lookup"><span data-stu-id="6bda5-223">With files opened for `Random` or `Binary` access, `EOF` returns `False` until the last executed `FileGet` function is unable to read a whole record.</span></span>  
  
 <span data-ttu-id="6bda5-224">Com arquivos abertos para `Binary` acessar, uma tentativa de ler o arquivo usando o `Input` funcionando até `EOF` retorna `True` gera um erro.</span><span class="sxs-lookup"><span data-stu-id="6bda5-224">With files opened for `Binary` access, an attempt to read through the file using the `Input` function until `EOF` returns `True` generates an error.</span></span> <span data-ttu-id="6bda5-225">Use o `LOF` e `Loc` funções em vez de `EOF` ao ler arquivos binários com `Input`, ou use `Get` ao usar o `EOF` função.</span><span class="sxs-lookup"><span data-stu-id="6bda5-225">Use the `LOF` and `Loc` functions instead of `EOF` when reading binary files with `Input`, or use `Get` when using the `EOF` function.</span></span> <span data-ttu-id="6bda5-226">Com arquivos abertos para `Output`, `EOF` sempre retorna `True`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-226">With files opened for `Output`, `EOF` always returns `True`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6bda5-227">Este exemplo usa o `EOF` função para detectar o final de um arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-227">This example uses the `EOF` function to detect the end of a file.</span></span> <span data-ttu-id="6bda5-228">Este exemplo supõe que `Testfile` é um arquivo de texto que contém várias linhas de texto.</span><span class="sxs-lookup"><span data-stu-id="6bda5-228">This example assumes that `Testfile` is a text file that contains several lines of text.</span></span>  
  
 [!code-vb[VbVbalrCatRef#62](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#62)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="6bda5-229">O modo de arquivo é inválido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-229">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Loc(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.LOF(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FileAttr">
      <MemberSignature Language="C#" Value="public static Microsoft.VisualBasic.OpenMode FileAttr (int FileNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype Microsoft.VisualBasic.OpenMode FileAttr(int32 FileNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileAttr(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function FileAttr (FileNumber As Integer) As OpenMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::VisualBasic::OpenMode FileAttr(int FileNumber);" />
      <MemberSignature Language="F#" Value="static member FileAttr : int -&gt; Microsoft.VisualBasic.OpenMode" Usage="Microsoft.VisualBasic.FileSystem.FileAttr FileNumber" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.OpenMode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="6bda5-230">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-230">Required.</span>
          </span>
          <span data-ttu-id="6bda5-231">
            <see langword="Integer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-231">
              <see langword="Integer" />.</span>
          </span>
          <span data-ttu-id="6bda5-232">Qualquer número de arquivo válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-232">Any valid file number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6bda5-233">Retorna uma enumeração que representa o modo de arquivo para arquivos abertos usando a função <see langword="FileOpen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-233">Returns an enumeration representing the file mode for files opened using the <see langword="FileOpen" /> function.</span>
          </span>
          <span data-ttu-id="6bda5-234">O <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> oferece maior produtividade e desempenho em operações de E/S de arquivo do que a função <see langword="FileAttr" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-234">The <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> gives you better productivity and performance in file I/O operations than the <see langword="FileAttr" /> function.</span>
          </span>
          <span data-ttu-id="6bda5-235">Consulte <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)" /> para obter mais informações.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-235">See <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)" /> for more information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6bda5-236">Os seguintes valores de enumeração indicam o modo de acesso do arquivo:</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-236">The following enumeration values indicate the file access mode:</span>
          </span>
          <span data-ttu-id="6bda5-237">
            <list type="table">
              <item>
                <term> Valor </term>
                <description> Modo  </description>
              </item>
              <item>
                <term> 1  </term>
                <description>
                  <see langword="OpenMode.Input" />
                </description>
              </item>
              <item>
                <term> 2  </term>
                <description>
                  <see langword="OpenMode.Output" />
                </description>
              </item>
              <item>
                <term> 4  </term>
                <description>
                  <see langword="OpenMode.Random" />
                </description>
              </item>
              <item>
                <term> 8  </term>
                <description>
                  <see langword="OpenMode.Append" />
                </description>
              </item>
              <item>
                <term> 32  </term>
                <description>
                  <see langword="OpenMode.Binary" />
                </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-237">
              <list type="table">
                <item>
                  <term> Value  </term>
                  <description> Mode  </description>
                </item>
                <item>
                  <term> 1  </term>
                  <description>
                    <see langword="OpenMode.Input" />
                  </description>
                </item>
                <item>
                  <term> 2  </term>
                  <description>
                    <see langword="OpenMode.Output" />
                  </description>
                </item>
                <item>
                  <term> 4  </term>
                  <description>
                    <see langword="OpenMode.Random" />
                  </description>
                </item>
                <item>
                  <term> 8  </term>
                  <description>
                    <see langword="OpenMode.Append" />
                  </description>
                </item>
                <item>
                  <term> 32  </term>
                  <description>
                    <see langword="OpenMode.Binary" />
                  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bda5-238">Essa função retorna uma enumeração que representa o modo de arquivo para arquivos abertos usando o `FileOpen` função.</span><span class="sxs-lookup"><span data-stu-id="6bda5-238">This function returns an enumeration representing the file mode for files opened using the `FileOpen` function.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6bda5-239">Este exemplo usa o `FileAttr` função para retornar o modo de arquivo de um arquivo aberto.</span><span class="sxs-lookup"><span data-stu-id="6bda5-239">This example uses the `FileAttr` function to return the file mode of an open file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#46](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#46)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SetAttr(System.String,Microsoft.VisualBasic.FileAttribute)" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FileClose">
      <MemberSignature Language="C#" Value="public static void FileClose (params int[] FileNumbers);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileClose(int32[] FileNumbers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileClose(System.Int32[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileClose (ParamArray FileNumbers As Integer())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void FileClose(... cli::array &lt;int&gt; ^ FileNumbers);" />
      <MemberSignature Language="F#" Value="static member FileClose : int[] -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileClose FileNumbers" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumbers" Type="System.Int32[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="FileNumbers">
          <span data-ttu-id="6bda5-240">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-240">Optional.</span>
          </span>
          <span data-ttu-id="6bda5-241">Matriz de parâmetros de 0 ou mais canais que serão fechados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-241">Parameter array of 0 or more channels to be closed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6bda5-242">Conclui a E/S (Entrada/Saída) para um arquivo aberto usando a função <see langword="FileOpen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-242">Concludes input/output (I/O) to a file opened using the <see langword="FileOpen" /> function.</span>
          </span>
          <span data-ttu-id="6bda5-243">
            <see langword="My" /> oferece maior produtividade e desempenho em operações de E/S de arquivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-243">
              <see langword="My" /> gives you better productivity and performance in file I/O operations.</span>
          </span>
          <span data-ttu-id="6bda5-244">Consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> para obter mais informações.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-244">See <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> for more information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bda5-245">O `FileClose` função é fornecida para compatibilidade com versões anteriores e pode afetar o desempenho.</span><span class="sxs-lookup"><span data-stu-id="6bda5-245">The `FileClose` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="6bda5-246">Para aplicativos não herdadas, o `My.Computer.FileSystem` objeto fornece um melhor desempenho.</span><span class="sxs-lookup"><span data-stu-id="6bda5-246">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="6bda5-247">Para obter mais informações, consulte [como: ler texto de arquivos com um StreamReader](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-text-from-files-with-a-streamreader.md),[como: gravar texto em arquivos com um StreamWriter](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files-with-a-streamwriter.md), e [passo a passo: Manipulando arquivos e diretórios em Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/walkthrough-manipulating-files-and-directories.md).</span><span class="sxs-lookup"><span data-stu-id="6bda5-247">For more information, see [How to: Read Text from Files with a StreamReader](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-text-from-files-with-a-streamreader.md),[How to: Write Text to Files with a StreamWriter](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files-with-a-streamwriter.md), and [Walkthrough: Manipulating Files and Directories in Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/walkthrough-manipulating-files-and-directories.md).</span></span>  
  
 <span data-ttu-id="6bda5-248">Se você omitir `FileNumbers`, todos os arquivos ativos abertos pelo `FileOpen` função são fechados.</span><span class="sxs-lookup"><span data-stu-id="6bda5-248">If you omit `FileNumbers`, all active files opened by the `FileOpen` function are closed.</span></span>  
  
 <span data-ttu-id="6bda5-249">Quando você fecha arquivos abertos para `Output` ou `Append`, o buffer final da saída é gravado no buffer de sistema operacional para esse arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-249">When you close files that were opened for `Output` or `Append`, the final buffer of output is written to the operating system buffer for that file.</span></span> <span data-ttu-id="6bda5-250">Todos os buffers espaço associado fechado arquivo seja liberado.</span><span class="sxs-lookup"><span data-stu-id="6bda5-250">All buffer space associated with the closed file is released.</span></span>  
  
 <span data-ttu-id="6bda5-251">Quando o `FileClose` função é executada, a associação de um arquivo com seu arquivo número termina.</span><span class="sxs-lookup"><span data-stu-id="6bda5-251">When the `FileClose` function is executed, the association of a file with its file number ends.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6bda5-252">Este exemplo usa o `FileClose` função para fechar um arquivo aberto para `Input`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-252">This example uses the `FileClose` function to close a file opened for `Input`.</span></span>  
  
 [!code-vb[VbVbalrCatRef#69](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#69)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="6bda5-253">
            <paramref name="FileNumber" /> não existe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-253">
              <paramref name="FileNumber" /> does not exist.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Reset" />
      </Docs>
    </Member>
    <Member MemberName="FileCopy">
      <MemberSignature Language="C#" Value="public static void FileCopy (string Source, string Destination);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileCopy(string Source, string Destination) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileCopy(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileCopy (Source As String, Destination As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void FileCopy(System::String ^ Source, System::String ^ Destination);" />
      <MemberSignature Language="F#" Value="static member FileCopy : string * string -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileCopy (Source, Destination)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Source" Type="System.String" />
        <Parameter Name="Destination" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Source">
          <span data-ttu-id="6bda5-254">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-254">Required.</span>
          </span>
          <span data-ttu-id="6bda5-255">A expressão <see langword="String" /> que especifica o nome do arquivo a ser copiado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-255">
              <see langword="String" /> expression that specifies the name of the file to be copied.</span>
          </span>
          <span data-ttu-id="6bda5-256">
            <c>Source</c> pode incluir o diretório ou a pasta, e a unidade do arquivo de origem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-256">
              <c>Source</c> may include the directory or folder, and drive, of the source file.</span>
          </span>
        </param>
        <param name="Destination">
          <span data-ttu-id="6bda5-257">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-257">Required.</span>
          </span>
          <span data-ttu-id="6bda5-258">A expressão <see langword="String" /> que especifica o nome do arquivo de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-258">
              <see langword="String" /> expression that specifies the destination file name.</span>
          </span>
          <span data-ttu-id="6bda5-259">
            <c>Destination</c> pode incluir o diretório ou a pasta e a unidade do arquivo de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-259">
              <c>Destination</c> may include the directory or folder, and drive, of the destination file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6bda5-260">Copia um arquivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-260">Copies a file.</span>
          </span>
          <span data-ttu-id="6bda5-261">O <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> oferece maior produtividade e desempenho em operações de E/S de arquivo que <see langword="FileCopy" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-261">The <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> gives you better productivity and performance in file I/O operations than <see langword="FileCopy" />.</span>
          </span>
          <span data-ttu-id="6bda5-262">Consulte <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String)" /> para obter mais informações.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-262">See <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String)" /> for more information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bda5-263">Se você tentar usar o `FileCopy` de função em um arquivo aberto, ocorrerá um erro.</span><span class="sxs-lookup"><span data-stu-id="6bda5-263">If you try to use the `FileCopy` function on a currently open file, an error occurs.</span></span>  
  
 <span data-ttu-id="6bda5-264">`FileCopy` requer confiança total para trabalhar na unidade local.</span><span class="sxs-lookup"><span data-stu-id="6bda5-264">`FileCopy` requires full trust to work on the local drive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6bda5-265">Este exemplo usa o `FileCopy` função para copiar um arquivo para outro.</span><span class="sxs-lookup"><span data-stu-id="6bda5-265">This example uses the `FileCopy` function to copy one file to another.</span></span> <span data-ttu-id="6bda5-266">Para fins deste exemplo, suponha que `SrcFile` é um arquivo que contém dados.</span><span class="sxs-lookup"><span data-stu-id="6bda5-266">For purposes of this example, assume that `SrcFile` is a file that contains data.</span></span>  
  
 [!code-vb[VbVbalrCatRef#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6bda5-267">
            <paramref name="Source" /> ou <paramref name="Destination" /> é inválido ou não foi especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-267">
              <paramref name="Source" /> or <paramref name="Destination" /> is invalid or not specified.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="6bda5-268">O arquivo já está aberto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-268">File is already open.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="6bda5-269">Arquivo inexistente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-269">File does not exist.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Kill(System.String)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
        <altmember cref="T:System.IO.FileNotFoundException" />
      </Docs>
    </Member>
    <Member MemberName="FileDateTime">
      <MemberSignature Language="C#" Value="public static DateTime FileDateTime (string PathName);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype System.DateTime FileDateTime(string PathName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileDateTime(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FileDateTime (PathName As String) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime FileDateTime(System::String ^ PathName);" />
      <MemberSignature Language="F#" Value="static member FileDateTime : string -&gt; DateTime" Usage="Microsoft.VisualBasic.FileSystem.FileDateTime PathName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="PathName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="PathName">
          <span data-ttu-id="6bda5-270">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-270">Required.</span>
          </span>
          <span data-ttu-id="6bda5-271">Expressão <see langword="String" /> que especifica um nome de arquivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-271">
              <see langword="String" /> expression that specifies a file name.</span>
          </span>
          <span data-ttu-id="6bda5-272">
            <c>PathName</c> pode incluir o diretório ou a pasta, bem como a unidade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-272">
              <c>PathName</c> may include the directory or folder, and the drive.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6bda5-273">Retorna um valor <see langword="Date" /> que indica a data e hora em que ocorreu a gravação em um arquivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-273">Returns a <see langword="Date" /> value that indicates the date and time a file was written to.</span>
          </span>
          <span data-ttu-id="6bda5-274">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FileDateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-274">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileDateTime" />.</span>
          </span>
          <span data-ttu-id="6bda5-275">Para obter mais informações, consulte <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-275">For more information, see <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)" /></span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6bda5-276">Retorna um valor <see langword="Date" /> que indica a data e hora em que um arquivo foi criado ou modificado pela última vez.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-276">
              <see langword="Date" /> value that indicates the date and time a file was created or last modified.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6bda5-277">Este exemplo usa o `FileDateTime` função para determinar a data e hora em que um arquivo foi criada ou modificado pela última vez.</span><span class="sxs-lookup"><span data-stu-id="6bda5-277">This example uses the `FileDateTime` function to determine the date and time a file was created or last modified.</span></span> <span data-ttu-id="6bda5-278">O formato de data e hora exibido se baseia nas configurações de localidade do sistema.</span><span class="sxs-lookup"><span data-stu-id="6bda5-278">The format of the date and time displayed is based on the locale settings of the system.</span></span>  
  
 [!code-vb[VbVbalrCatRef#34](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#34)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6bda5-279">
            <paramref name="PathName" /> é inválido ou contém caracteres curinga.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-279">
              <paramref name="PathName" /> is invalid or contains wildcards.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="6bda5-280">O arquivo de destino não existe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-280">Target file does not exist.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileLen(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.FileNotFoundException" />
      </Docs>
    </Member>
    <MemberGroup MemberName="FileGet">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6bda5-281">Lê dados de um arquivo aberto de disco em uma variável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-281">Reads data from an open disk file into a variable.</span>
          </span>
          <span data-ttu-id="6bda5-282">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FileGet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-282">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span>
          </span>
          <span data-ttu-id="6bda5-283">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-283">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FileGet">
      <MemberSignature Language="C#" Value="public static void FileGet (int FileNumber, ref bool Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGet(int32 FileNumber, bool&amp; Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Boolean@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGet (FileNumber As Integer, ByRef Value As Boolean, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FileGet : int *  * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileGet (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Boolean" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="6bda5-284">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-284">Required.</span>
          </span>
          <span data-ttu-id="6bda5-285">Qualquer número de arquivo válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-285">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="6bda5-286">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-286">Required.</span>
          </span>
          <span data-ttu-id="6bda5-287">Nome de variável válido no qual os dados são lidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-287">Valid variable name into which data is read.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="6bda5-288">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-288">Optional.</span>
          </span>
          <span data-ttu-id="6bda5-289">Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a leitura começa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-289">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6bda5-290">Lê dados de um arquivo aberto de disco em uma variável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-290">Reads data from an open disk file into a variable.</span>
          </span>
          <span data-ttu-id="6bda5-291">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FileGet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-291">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span>
          </span>
          <span data-ttu-id="6bda5-292">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-292">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /></span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bda5-293">`FileGet` só é válido em `Random` e `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-293">`FileGet` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="6bda5-294">Dados lidos com `FileGet` geralmente são gravados em um arquivo com `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-294">Data read with `FileGet` is usually written to a file with `FilePut`.</span></span>  
  
 <span data-ttu-id="6bda5-295">O primeiro registro ou byte em um arquivo está na posição 1, o segundo registro ou byte está na posição 2 e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="6bda5-295">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="6bda5-296">Se você omitir `RecordNumber`, o próximo registro ou byte após a última `FileGet` ou `FilePut` função (ou apontada pela última `Seek` função) é lido.</span><span class="sxs-lookup"><span data-stu-id="6bda5-296">If you omit `RecordNumber`, the next record or byte following the last `FileGet` or `FilePut` function (or pointed to by the last `Seek` function) is read.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6bda5-297">Ao ler de arquivos, não tome decisões sobre o conteúdo de um arquivo com base na extensão de nome de arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-297">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="6bda5-298">Por exemplo, um arquivo chamado Form1.vb não pode ser um arquivo de origem do Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="6bda5-298">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="6bda5-299">Modo aleatório</span><span class="sxs-lookup"><span data-stu-id="6bda5-299">Random Mode</span></span>  
 <span data-ttu-id="6bda5-300">Para arquivos abertos no `Random` modo, as seguintes regras se aplicam:</span><span class="sxs-lookup"><span data-stu-id="6bda5-300">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="6bda5-301">Se o comprimento dos dados que está sendo lidos for menor que o comprimento especificado na `RecordLength` cláusula do `FileOpen` função, `FileGet` lê registros subsequentes em limites de comprimento de registro.</span><span class="sxs-lookup"><span data-stu-id="6bda5-301">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FileGet` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="6bda5-302">O espaço entre o final de um registro e o início do próximo registro é preenchido com o conteúdo existente no buffer de arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-302">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="6bda5-303">Como a quantidade de dados de preenchimento não pode ser determinada com certeza, geralmente é uma boa ideia ter o comprimento do registro corresponde ao tamanho dos dados que está sendo lidos.</span><span class="sxs-lookup"><span data-stu-id="6bda5-303">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="6bda5-304">Por padrão, se a variável que está sendo lida é uma cadeia de caracteres, `FileGet` lê um descritor de dois bytes que contém o comprimento da cadeia de caracteres e, em seguida, lê os dados que vão para a variável.</span><span class="sxs-lookup"><span data-stu-id="6bda5-304">By default, if the variable being read into is a string, `FileGet` reads a two-byte descriptor that contains the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="6bda5-305">Portanto, o comprimento do registro especificado pelo `RecordLength` cláusula do `FileOpen` função deve ser pelo menos dois bytes maior do que o comprimento real da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="6bda5-305">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="6bda5-306">Visual Basic 6.0 e versões anteriores dão suporte a cadeias de caracteres de comprimento fixo; Quando colocado em um arquivo, o descritor de comprimento não é gravado.</span><span class="sxs-lookup"><span data-stu-id="6bda5-306">Visual Basic 6.0 and earlier versions support fixed-length strings; when put to a file, the length descriptor is not written.</span></span> <span data-ttu-id="6bda5-307">Se você deseja ler uma cadeia de caracteres sem o descritor, você deve passar `True` para o `StringIsFixedLength` parâmetro e a cadeia de caracteres lida deve ter o tamanho correto.</span><span class="sxs-lookup"><span data-stu-id="6bda5-307">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="6bda5-308">Se a variável que está sendo lida é uma matriz, você pode optar por ler um descritor para o tamanho e a dimensão da matriz.</span><span class="sxs-lookup"><span data-stu-id="6bda5-308">If the variable being read into is an array, you can choose whether to read a descriptor for the size and dimension of the array.</span></span> <span data-ttu-id="6bda5-309">Para gravar o descritor, defina as `ArrayIsDynamic` parâmetro para `True`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-309">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="6bda5-310">Ao ler a matriz, você precisa coincidir com a forma que de matriz foi escrita.</span><span class="sxs-lookup"><span data-stu-id="6bda5-310">When reading the array, you have to match the way the array was written.</span></span> <span data-ttu-id="6bda5-311">Se ele foi gravado com o descritor, você precisará ler o descritor.</span><span class="sxs-lookup"><span data-stu-id="6bda5-311">If it was written with the descriptor, you have to read the descriptor.</span></span> <span data-ttu-id="6bda5-312">Se o descritor não for usado, o tamanho e limites da matriz passaram para `FileGet` determinar o que ler.</span><span class="sxs-lookup"><span data-stu-id="6bda5-312">If the descriptor is not used, the size and bounds of the array passed into `FileGet` determine what to read.</span></span>  
  
     <span data-ttu-id="6bda5-313">O descritor especifica a classificação de matriz, o tamanho e os limites inferiores para cada classificação.</span><span class="sxs-lookup"><span data-stu-id="6bda5-313">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="6bda5-314">Seu comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="6bda5-314">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="6bda5-315">O comprimento do registro especificado pelo `RecordLength` parâmetro no `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessário para gravar os dados de matriz e o descritor de matriz.</span><span class="sxs-lookup"><span data-stu-id="6bda5-315">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="6bda5-316">Por exemplo, a seguinte declaração de matriz requer 218 bytes quando a matriz é gravada no disco.</span><span class="sxs-lookup"><span data-stu-id="6bda5-316">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#21)]  
  
     <span data-ttu-id="6bda5-317">218 bytes são distribuídos da seguinte maneira:</span><span class="sxs-lookup"><span data-stu-id="6bda5-317">The 218 bytes are distributed as follows:</span></span>  
  
    -   <span data-ttu-id="6bda5-318">18 bytes para o descritor: (2 + 8 \* 2)</span><span class="sxs-lookup"><span data-stu-id="6bda5-318">18 bytes for the descriptor: (2 + 8 \* 2)</span></span>  
  
    -   <span data-ttu-id="6bda5-319">200 bytes para os dados: (5 \* 10 \* 4).</span><span class="sxs-lookup"><span data-stu-id="6bda5-319">200 bytes for the data: (5 \* 10 \* 4).</span></span>  
  
-   <span data-ttu-id="6bda5-320">Se a variável que está sendo lida for qualquer outro tipo de variável (não uma cadeia de caracteres de comprimento variável ou um objeto), `FileGet` lê apenas os dados da variável.</span><span class="sxs-lookup"><span data-stu-id="6bda5-320">If the variable being read into is any other type of variable (not a variable-length string or an object), `FileGet` reads only the variable data.</span></span> <span data-ttu-id="6bda5-321">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual ao comprimento dos dados que está sendo lidos.</span><span class="sxs-lookup"><span data-stu-id="6bda5-321">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being read.</span></span>  
  
-   <span data-ttu-id="6bda5-322">`FileGet` lê os elementos de estruturas como se cada um estava sendo lido individualmente, exceto que não há nenhum preenchimento entre elementos.</span><span class="sxs-lookup"><span data-stu-id="6bda5-322">`FileGet` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="6bda5-323">No disco, uma matriz dinâmica em um tipo definido pelo usuário (escritos com `FilePut`) é prefixado por um descritor cujo comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="6bda5-323">On disk, a dynamic array in a user-defined type (written with `FilePut`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="6bda5-324">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessários para ler os elementos individuais.</span><span class="sxs-lookup"><span data-stu-id="6bda5-324">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements.</span></span> <span data-ttu-id="6bda5-325">Isso inclui qualquer matrizes e seus descritores.</span><span class="sxs-lookup"><span data-stu-id="6bda5-325">This includes any arrays and their descriptors.</span></span> <span data-ttu-id="6bda5-326">O `VBFixedString` atributo pode ser aplicado a campos de cadeia de caracteres em estruturas para indicar o tamanho de uma cadeia de caracteres quando gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="6bda5-326">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of a string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="6bda5-327">Modo binário</span><span class="sxs-lookup"><span data-stu-id="6bda5-327">Binary Mode</span></span>  
 <span data-ttu-id="6bda5-328">Para arquivos abertos no `Binary` modo, a maioria do `Random` modo regras se aplicam, com algumas exceções.</span><span class="sxs-lookup"><span data-stu-id="6bda5-328">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="6bda5-329">As seguintes regras para arquivos abertos no `Binary` modo são diferentes das regras para `Random` modo:</span><span class="sxs-lookup"><span data-stu-id="6bda5-329">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="6bda5-330">A cláusula `RecordLength` na função de `FileOpen` não está em vigor.</span><span class="sxs-lookup"><span data-stu-id="6bda5-330">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="6bda5-331">`FileGet` lê todas as variáveis do disco de maneira contígua; ou seja, sem nenhum preenchimento entre registros.</span><span class="sxs-lookup"><span data-stu-id="6bda5-331">`FileGet` reads all variables from disk contiguously; that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="6bda5-332">Para qualquer matriz que não seja uma matriz em uma estrutura, `FileGet` lê apenas os dados.</span><span class="sxs-lookup"><span data-stu-id="6bda5-332">For any array other than an array in a structure, `FileGet` reads only the data.</span></span> <span data-ttu-id="6bda5-333">Nenhum descritor é lido.</span><span class="sxs-lookup"><span data-stu-id="6bda5-333">No descriptor is read.</span></span>  
  
-   <span data-ttu-id="6bda5-334">`FileGet` lê cadeias de caracteres de comprimento variável que não são elementos das estruturas sem esperar o descritor de dois bytes de comprimento.</span><span class="sxs-lookup"><span data-stu-id="6bda5-334">`FileGet` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="6bda5-335">O número de bytes lidos é igual ao número de caracteres já na cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="6bda5-335">The number of bytes read equals the number of characters already in the string.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="6bda5-336">Leitura de um arquivo usando o`FileGet` função requer `Read` acessar do <xref:System.Security.Permissions.FileIOPermissionAccess> enumeração.</span><span class="sxs-lookup"><span data-stu-id="6bda5-336">Reading from a file by using the`FileGet` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6bda5-337">
            <paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-337">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="6bda5-338">O modo de arquivo é inválido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-338">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="FileGet">
      <MemberSignature Language="C#" Value="public static void FileGet (int FileNumber, ref byte Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGet(int32 FileNumber, unsigned int8&amp; Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Byte@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGet (FileNumber As Integer, ByRef Value As Byte, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FileGet : int *  * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileGet (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Byte" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="6bda5-339">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-339">Required.</span>
          </span>
          <span data-ttu-id="6bda5-340">Qualquer número de arquivo válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-340">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="6bda5-341">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-341">Required.</span>
          </span>
          <span data-ttu-id="6bda5-342">Nome de variável válido no qual os dados são lidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-342">Valid variable name into which data is read.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="6bda5-343">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-343">Optional.</span>
          </span>
          <span data-ttu-id="6bda5-344">Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a leitura começa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-344">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6bda5-345">Lê dados de um arquivo aberto de disco em uma variável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-345">Reads data from an open disk file into a variable.</span>
          </span>
          <span data-ttu-id="6bda5-346">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FileGet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-346">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span>
          </span>
          <span data-ttu-id="6bda5-347">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-347">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bda5-348">`FileGet` só é válido em `Random` e `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-348">`FileGet` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="6bda5-349">Dados lidos com `FileGet` geralmente são gravados em um arquivo com `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-349">Data read with `FileGet` is usually written to a file with `FilePut`.</span></span>  
  
 <span data-ttu-id="6bda5-350">O primeiro registro ou byte em um arquivo está na posição 1, o segundo registro ou byte está na posição 2 e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="6bda5-350">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="6bda5-351">Se você omitir `RecordNumber`, o próximo registro ou byte após a última `FileGet` ou `FilePut` função (ou apontada pela última `Seek` função) é lido.</span><span class="sxs-lookup"><span data-stu-id="6bda5-351">If you omit `RecordNumber`, the next record or byte following the last `FileGet` or `FilePut` function (or pointed to by the last `Seek` function) is read.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6bda5-352">Ao ler de arquivos, não tome decisões sobre o conteúdo de um arquivo com base na extensão de nome de arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-352">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="6bda5-353">Por exemplo, um arquivo chamado Form1.vb não pode ser um arquivo de origem do Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="6bda5-353">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="6bda5-354">Modo aleatório</span><span class="sxs-lookup"><span data-stu-id="6bda5-354">Random Mode</span></span>  
 <span data-ttu-id="6bda5-355">Para arquivos abertos no `Random` modo, as seguintes regras se aplicam:</span><span class="sxs-lookup"><span data-stu-id="6bda5-355">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="6bda5-356">Se o comprimento dos dados que está sendo lidos for menor que o comprimento especificado na `RecordLength` cláusula do `FileOpen` função, `FileGet` lê registros subsequentes em limites de comprimento de registro.</span><span class="sxs-lookup"><span data-stu-id="6bda5-356">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FileGet` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="6bda5-357">O espaço entre o final de um registro e o início do próximo registro é preenchido com o conteúdo existente no buffer de arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-357">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="6bda5-358">Como a quantidade de dados de preenchimento não pode ser determinada com certeza, geralmente é uma boa ideia ter o comprimento do registro corresponde ao tamanho dos dados que está sendo lidos.</span><span class="sxs-lookup"><span data-stu-id="6bda5-358">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="6bda5-359">Por padrão, se a variável que está sendo lida é uma cadeia de caracteres, `FileGet` lê um descritor de dois bytes que contém o comprimento da cadeia de caracteres e, em seguida, lê os dados que vão para a variável.</span><span class="sxs-lookup"><span data-stu-id="6bda5-359">By default, if the variable being read into is a string, `FileGet` reads a two-byte descriptor that contains the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="6bda5-360">Portanto, o comprimento do registro especificado pelo `RecordLength` cláusula do `FileOpen` função deve ser pelo menos dois bytes maior do que o comprimento real da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="6bda5-360">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="6bda5-361">Visual Basic 6.0 e versões anteriores dão suporte a cadeias de caracteres de comprimento fixo; Quando colocado em um arquivo, o descritor de comprimento não é gravado.</span><span class="sxs-lookup"><span data-stu-id="6bda5-361">Visual Basic 6.0 and earlier versions support fixed-length strings; when put to a file, the length descriptor is not written.</span></span> <span data-ttu-id="6bda5-362">Se você deseja ler uma cadeia de caracteres sem o descritor, você deve passar `True` para o `StringIsFixedLength` parâmetro e a cadeia de caracteres lida deve ter o tamanho correto.</span><span class="sxs-lookup"><span data-stu-id="6bda5-362">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="6bda5-363">Se a variável que está sendo lida é uma matriz, você pode optar por ler um descritor para o tamanho e a dimensão da matriz.</span><span class="sxs-lookup"><span data-stu-id="6bda5-363">If the variable being read into is an array, you can choose whether to read a descriptor for the size and dimension of the array.</span></span> <span data-ttu-id="6bda5-364">Para gravar o descritor, defina as `ArrayIsDynamic` parâmetro para `True`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-364">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="6bda5-365">Ao ler a matriz, você precisa coincidir com a forma que de matriz foi escrita.</span><span class="sxs-lookup"><span data-stu-id="6bda5-365">When reading the array, you have to match the way the array was written.</span></span> <span data-ttu-id="6bda5-366">Se ele foi gravado com o descritor, você precisará ler o descritor.</span><span class="sxs-lookup"><span data-stu-id="6bda5-366">If it was written with the descriptor, you have to read the descriptor.</span></span> <span data-ttu-id="6bda5-367">Se o descritor não for usado.</span><span class="sxs-lookup"><span data-stu-id="6bda5-367">If the descriptor is not used.</span></span> <span data-ttu-id="6bda5-368">Em seguida, o tamanho e limites da matriz passaram para `FileGet` determinar o que ler.</span><span class="sxs-lookup"><span data-stu-id="6bda5-368">Then the size and bounds of the array passed into `FileGet` determine what to read.</span></span>  
  
     <span data-ttu-id="6bda5-369">O descritor especifica a classificação de matriz, o tamanho e os limites inferiores para cada classificação.</span><span class="sxs-lookup"><span data-stu-id="6bda5-369">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="6bda5-370">Seu comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="6bda5-370">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="6bda5-371">O comprimento do registro especificado pelo `RecordLength` parâmetro no `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessário para gravar os dados de matriz e o descritor de matriz.</span><span class="sxs-lookup"><span data-stu-id="6bda5-371">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="6bda5-372">Por exemplo, a seguinte declaração de matriz requer 218 bytes quando a matriz é gravada no disco.</span><span class="sxs-lookup"><span data-stu-id="6bda5-372">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#21)]  
  
     <span data-ttu-id="6bda5-373">218 bytes são distribuídos da seguinte maneira:</span><span class="sxs-lookup"><span data-stu-id="6bda5-373">The 218 bytes are distributed as follows:</span></span>  
  
    -   <span data-ttu-id="6bda5-374">18 bytes para o descritor: (2 + 8 \* 2)</span><span class="sxs-lookup"><span data-stu-id="6bda5-374">18 bytes for the descriptor: (2 + 8 \* 2)</span></span>  
  
    -   <span data-ttu-id="6bda5-375">200 bytes para os dados: (5 \* 10 \* 4).</span><span class="sxs-lookup"><span data-stu-id="6bda5-375">200 bytes for the data: (5 \* 10 \* 4).</span></span>  
  
-   <span data-ttu-id="6bda5-376">Se a variável que está sendo lida for qualquer outro tipo de variável (não uma cadeia de caracteres de comprimento variável ou um objeto), `FileGet` lê apenas os dados da variável.</span><span class="sxs-lookup"><span data-stu-id="6bda5-376">If the variable being read into is any other type of variable (not a variable-length string or an object), `FileGet` reads only the variable data.</span></span> <span data-ttu-id="6bda5-377">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual ao comprimento dos dados que está sendo lidos.</span><span class="sxs-lookup"><span data-stu-id="6bda5-377">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being read.</span></span>  
  
-   <span data-ttu-id="6bda5-378">`FileGet` lê os elementos de estruturas como se cada um estava sendo lido individualmente, exceto que não há nenhum preenchimento entre elementos.</span><span class="sxs-lookup"><span data-stu-id="6bda5-378">`FileGet` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="6bda5-379">No disco, uma matriz dinâmica em um tipo definido pelo usuário (escritos com `FilePut`) é prefixado por um descritor cujo comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="6bda5-379">On disk, a dynamic array in a user-defined type (written with `FilePut`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="6bda5-380">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessários para ler os elementos individuais.</span><span class="sxs-lookup"><span data-stu-id="6bda5-380">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements.</span></span> <span data-ttu-id="6bda5-381">Isso inclui qualquer matrizes e seus descritores.</span><span class="sxs-lookup"><span data-stu-id="6bda5-381">This includes any arrays and their descriptors.</span></span> <span data-ttu-id="6bda5-382">O `VBFixedString` atributo pode ser aplicado a campos de cadeia de caracteres em estruturas para indicar o tamanho de uma cadeia de caracteres quando gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="6bda5-382">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of a string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="6bda5-383">Modo binário</span><span class="sxs-lookup"><span data-stu-id="6bda5-383">Binary Mode</span></span>  
 <span data-ttu-id="6bda5-384">Para arquivos abertos no `Binary` modo, a maioria do `Random` modo regras se aplicam, com algumas exceções.</span><span class="sxs-lookup"><span data-stu-id="6bda5-384">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="6bda5-385">As seguintes regras para arquivos abertos no `Binary` modo são diferentes das regras para `Random` modo:</span><span class="sxs-lookup"><span data-stu-id="6bda5-385">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="6bda5-386">A cláusula `RecordLength` na função de `FileOpen` não está em vigor.</span><span class="sxs-lookup"><span data-stu-id="6bda5-386">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="6bda5-387">`FileGet` lê todas as variáveis do disco de maneira contígua; ou seja, sem nenhum preenchimento entre registros.</span><span class="sxs-lookup"><span data-stu-id="6bda5-387">`FileGet` reads all variables from disk contiguously; that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="6bda5-388">Para qualquer matriz que não seja uma matriz em uma estrutura, `FileGet` lê apenas os dados.</span><span class="sxs-lookup"><span data-stu-id="6bda5-388">For any array other than an array in a structure, `FileGet` reads only the data.</span></span> <span data-ttu-id="6bda5-389">Nenhum descritor é lido.</span><span class="sxs-lookup"><span data-stu-id="6bda5-389">No descriptor is read.</span></span>  
  
-   <span data-ttu-id="6bda5-390">`FileGet` lê cadeias de caracteres de comprimento variável que não são elementos das estruturas sem esperar o descritor de dois bytes de comprimento.</span><span class="sxs-lookup"><span data-stu-id="6bda5-390">`FileGet` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="6bda5-391">O número de bytes lidos é igual ao número de caracteres já na cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="6bda5-391">The number of bytes read equals the number of characters already in the string.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="6bda5-392">Leitura de um arquivo usando o `FileGet` função requer `Read` acessar do <xref:System.Security.Permissions.FileIOPermissionAccess> enumeração.</span><span class="sxs-lookup"><span data-stu-id="6bda5-392">Reading from a file by using the `FileGet` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6bda5-393">
            <paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-393">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="6bda5-394">O modo de arquivo é inválido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-394">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="FileGet">
      <MemberSignature Language="C#" Value="public static void FileGet (int FileNumber, ref char Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGet(int32 FileNumber, char&amp; Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Char@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGet (FileNumber As Integer, ByRef Value As Char, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FileGet : int *  * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileGet (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Char" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="6bda5-395">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-395">Required.</span>
          </span>
          <span data-ttu-id="6bda5-396">Qualquer número de arquivo válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-396">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="6bda5-397">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-397">Required.</span>
          </span>
          <span data-ttu-id="6bda5-398">Nome de variável válido no qual os dados são lidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-398">Valid variable name into which data is read.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="6bda5-399">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-399">Optional.</span>
          </span>
          <span data-ttu-id="6bda5-400">Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a leitura começa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-400">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6bda5-401">Lê dados de um arquivo aberto de disco em uma variável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-401">Reads data from an open disk file into a variable.</span>
          </span>
          <span data-ttu-id="6bda5-402">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FileGet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-402">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span>
          </span>
          <span data-ttu-id="6bda5-403">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-403">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bda5-404">`FileGet` só é válido em `Random` e `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-404">`FileGet` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="6bda5-405">Dados lidos com `FileGet` geralmente são gravados em um arquivo com `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-405">Data read with `FileGet` is usually written to a file with `FilePut`.</span></span>  
  
 <span data-ttu-id="6bda5-406">O primeiro registro ou byte em um arquivo está na posição 1, o segundo registro ou byte está na posição 2 e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="6bda5-406">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="6bda5-407">Se você omitir `RecordNumber`, o próximo registro ou byte após a última `FileGet` ou `FilePut` função (ou apontada pela última `Seek` função) é lido.</span><span class="sxs-lookup"><span data-stu-id="6bda5-407">If you omit `RecordNumber`, the next record or byte following the last `FileGet` or `FilePut` function (or pointed to by the last `Seek` function) is read.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6bda5-408">Ao ler de arquivos, não tome decisões sobre o conteúdo de um arquivo com base na extensão de nome de arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-408">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="6bda5-409">Por exemplo, um arquivo chamado Form1.vb não pode ser um arquivo de origem do Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="6bda5-409">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="6bda5-410">Modo aleatório</span><span class="sxs-lookup"><span data-stu-id="6bda5-410">Random Mode</span></span>  
 <span data-ttu-id="6bda5-411">Para arquivos abertos no `Random` modo, as seguintes regras se aplicam:</span><span class="sxs-lookup"><span data-stu-id="6bda5-411">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="6bda5-412">Se o comprimento dos dados que está sendo lidos for menor que o comprimento especificado na `RecordLength` cláusula do `FileOpen` função, `FileGet` lê registros subsequentes em limites de comprimento de registro.</span><span class="sxs-lookup"><span data-stu-id="6bda5-412">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FileGet` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="6bda5-413">O espaço entre o final de um registro e o início do próximo registro é preenchido com o conteúdo existente no buffer de arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-413">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="6bda5-414">Como a quantidade de dados de preenchimento não pode ser determinada com certeza, geralmente é uma boa ideia ter o comprimento do registro corresponde ao tamanho dos dados que está sendo lidos.</span><span class="sxs-lookup"><span data-stu-id="6bda5-414">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="6bda5-415">Por padrão, se a variável que está sendo lida é uma cadeia de caracteres, `FileGet` lê um descritor de dois bytes que contém o comprimento da cadeia de caracteres e, em seguida, lê os dados que vão para a variável.</span><span class="sxs-lookup"><span data-stu-id="6bda5-415">By default, if the variable being read into is a string, `FileGet` reads a two-byte descriptor that contains the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="6bda5-416">Portanto, o comprimento do registro especificado pelo `RecordLength` cláusula do `FileOpen` função deve ser pelo menos dois bytes maior do que o comprimento real da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="6bda5-416">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="6bda5-417">Visual Basic 6.0 e versões anteriores dão suporte a cadeias de caracteres de comprimento fixo; Quando colocado em um arquivo, o descritor de comprimento não é gravado.</span><span class="sxs-lookup"><span data-stu-id="6bda5-417">Visual Basic 6.0 and earlier versions support fixed-length strings; when put to a file, the length descriptor is not written.</span></span> <span data-ttu-id="6bda5-418">Se você deseja ler uma cadeia de caracteres sem o descritor, você deve passar `True` para o `StringIsFixedLength` parâmetro e a cadeia de caracteres lida deve ter o tamanho correto.</span><span class="sxs-lookup"><span data-stu-id="6bda5-418">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="6bda5-419">Se a variável que está sendo lida é uma matriz, você pode optar por ler um descritor para o tamanho e a dimensão da matriz.</span><span class="sxs-lookup"><span data-stu-id="6bda5-419">If the variable being read into is an array, you can choose whether to read a descriptor for the size and dimension of the array.</span></span> <span data-ttu-id="6bda5-420">Para gravar o descritor, defina as `ArrayIsDynamic` parâmetro para `True`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-420">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="6bda5-421">Ao ler a matriz, você precisa coincidir com a forma que de matriz foi escrita.</span><span class="sxs-lookup"><span data-stu-id="6bda5-421">When reading the array, you have to match the way the array was written.</span></span> <span data-ttu-id="6bda5-422">Se ele foi gravado com o descritor, você precisará ler o descritor.</span><span class="sxs-lookup"><span data-stu-id="6bda5-422">If it was written with the descriptor, you have to read the descriptor.</span></span> <span data-ttu-id="6bda5-423">Se o descritor não for usado, o tamanho e limites da matriz passaram para `FileGet` determinar o que ler.</span><span class="sxs-lookup"><span data-stu-id="6bda5-423">If the descriptor is not used, the size and bounds of the array passed into `FileGet` determine what to read.</span></span>  
  
     <span data-ttu-id="6bda5-424">O descritor especifica a classificação de matriz, o tamanho e os limites inferiores para cada classificação.</span><span class="sxs-lookup"><span data-stu-id="6bda5-424">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="6bda5-425">Seu comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="6bda5-425">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="6bda5-426">O comprimento do registro especificado pelo `RecordLength` parâmetro no `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessário para gravar os dados de matriz e o descritor de matriz.</span><span class="sxs-lookup"><span data-stu-id="6bda5-426">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="6bda5-427">Por exemplo, a seguinte declaração de matriz requer 218 bytes quando a matriz é gravada no disco.</span><span class="sxs-lookup"><span data-stu-id="6bda5-427">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#21)]  
  
     <span data-ttu-id="6bda5-428">218 bytes são distribuídos da seguinte maneira:</span><span class="sxs-lookup"><span data-stu-id="6bda5-428">The 218 bytes are distributed as follows:</span></span>  
  
    -   <span data-ttu-id="6bda5-429">18 bytes para o descritor: (2 + 8 \* 2)</span><span class="sxs-lookup"><span data-stu-id="6bda5-429">18 bytes for the descriptor: (2 + 8 \* 2)</span></span>  
  
    -   <span data-ttu-id="6bda5-430">200 bytes para os dados: (5 \* 10 \* 4).</span><span class="sxs-lookup"><span data-stu-id="6bda5-430">200 bytes for the data: (5 \* 10 \* 4).</span></span>  
  
-   <span data-ttu-id="6bda5-431">Se a variável que está sendo lida for qualquer outro tipo de variável (não uma cadeia de caracteres de comprimento variável ou um objeto), `FileGet` lê apenas os dados da variável.</span><span class="sxs-lookup"><span data-stu-id="6bda5-431">If the variable being read into is any other type of variable (not a variable-length string or an object), `FileGet` reads only the variable data.</span></span> <span data-ttu-id="6bda5-432">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual ao comprimento dos dados que está sendo lidos.</span><span class="sxs-lookup"><span data-stu-id="6bda5-432">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being read.</span></span>  
  
-   <span data-ttu-id="6bda5-433">`FileGet` lê os elementos de estruturas como se cada um estava sendo lido individualmente, exceto que não há nenhum preenchimento entre elementos.</span><span class="sxs-lookup"><span data-stu-id="6bda5-433">`FileGet` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="6bda5-434">No disco, uma matriz dinâmica em um tipo definido pelo usuário (escritos com `FilePut`) é prefixado por um descritor cujo comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="6bda5-434">On disk, a dynamic array in a user-defined type (written with `FilePut`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="6bda5-435">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessários para ler os elementos individuais.</span><span class="sxs-lookup"><span data-stu-id="6bda5-435">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements.</span></span> <span data-ttu-id="6bda5-436">Isso inclui qualquer matrizes e seus descritores.</span><span class="sxs-lookup"><span data-stu-id="6bda5-436">This includes any arrays and their descriptors.</span></span> <span data-ttu-id="6bda5-437">O `VBFixedString` atributo pode ser aplicado a campos de cadeia de caracteres em estruturas para indicar o tamanho de uma cadeia de caracteres quando gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="6bda5-437">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of a string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="6bda5-438">Modo binário</span><span class="sxs-lookup"><span data-stu-id="6bda5-438">Binary Mode</span></span>  
 <span data-ttu-id="6bda5-439">Para arquivos abertos no `Binary` modo, a maioria do `Random` modo regras se aplicam, com algumas exceções.</span><span class="sxs-lookup"><span data-stu-id="6bda5-439">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="6bda5-440">As seguintes regras para arquivos abertos no `Binary` modo são diferentes das regras para `Random` modo:</span><span class="sxs-lookup"><span data-stu-id="6bda5-440">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="6bda5-441">A cláusula `RecordLength` na função de `FileOpen` não está em vigor.</span><span class="sxs-lookup"><span data-stu-id="6bda5-441">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="6bda5-442">`FileGet` lê todas as variáveis do disco de maneira contígua; ou seja, sem nenhum preenchimento entre registros.</span><span class="sxs-lookup"><span data-stu-id="6bda5-442">`FileGet` reads all variables from disk contiguously; that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="6bda5-443">Para qualquer matriz que não seja uma matriz em uma estrutura, `FileGet` lê apenas os dados.</span><span class="sxs-lookup"><span data-stu-id="6bda5-443">For any array other than an array in a structure, `FileGet` reads only the data.</span></span> <span data-ttu-id="6bda5-444">Nenhum descritor é lido.</span><span class="sxs-lookup"><span data-stu-id="6bda5-444">No descriptor is read.</span></span>  
  
-   <span data-ttu-id="6bda5-445">`FileGet` lê cadeias de caracteres de comprimento variável que não são elementos das estruturas sem esperar o descritor de dois bytes de comprimento.</span><span class="sxs-lookup"><span data-stu-id="6bda5-445">`FileGet` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="6bda5-446">O número de bytes lidos é igual ao número de caracteres já na cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="6bda5-446">The number of bytes read equals the number of characters already in the string.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="6bda5-447">Leitura de um arquivo usando o `FileGet` função requer `Read` acessar do <xref:System.Security.Permissions.FileIOPermissionAccess> enumeração.</span><span class="sxs-lookup"><span data-stu-id="6bda5-447">Reading from a file by using the `FileGet` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6bda5-448">
            <paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-448">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="6bda5-449">O modo de arquivo é inválido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-449">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="FileGet">
      <MemberSignature Language="C#" Value="public static void FileGet (int FileNumber, ref DateTime Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGet(int32 FileNumber, valuetype System.DateTime&amp; Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.DateTime@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGet (FileNumber As Integer, ByRef Value As DateTime, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FileGet : int *  * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileGet (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.DateTime" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="6bda5-450">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-450">Required.</span>
          </span>
          <span data-ttu-id="6bda5-451">Qualquer número de arquivo válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-451">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="6bda5-452">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-452">Required.</span>
          </span>
          <span data-ttu-id="6bda5-453">Nome de variável válido no qual os dados são lidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-453">Valid variable name into which data is read.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="6bda5-454">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-454">Optional.</span>
          </span>
          <span data-ttu-id="6bda5-455">Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a leitura começa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-455">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6bda5-456">Lê dados de um arquivo aberto de disco em uma variável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-456">Reads data from an open disk file into a variable.</span>
          </span>
          <span data-ttu-id="6bda5-457">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FileGet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-457">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span>
          </span>
          <span data-ttu-id="6bda5-458">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-458">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bda5-459">`FileGet` só é válido em `Random` e `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-459">`FileGet` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="6bda5-460">Dados lidos com `FileGet` geralmente são gravados em um arquivo com `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-460">Data read with `FileGet` is usually written to a file with `FilePut`.</span></span>  
  
 <span data-ttu-id="6bda5-461">O primeiro registro ou byte em um arquivo está na posição 1, o segundo registro ou byte está na posição 2 e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="6bda5-461">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="6bda5-462">Se você omitir `RecordNumber`, o próximo registro ou byte após a última `FileGet` ou `FilePut` função (ou apontada pela última `Seek` função) é lido.</span><span class="sxs-lookup"><span data-stu-id="6bda5-462">If you omit `RecordNumber`, the next record or byte following the last `FileGet` or `FilePut` function (or pointed to by the last `Seek` function) is read.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6bda5-463">Ao ler de arquivos, não tome decisões sobre o conteúdo de um arquivo com base na extensão de nome de arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-463">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="6bda5-464">Por exemplo, um arquivo chamado Form1.vb não pode ser um arquivo de origem do Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="6bda5-464">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="6bda5-465">Modo aleatório</span><span class="sxs-lookup"><span data-stu-id="6bda5-465">Random Mode</span></span>  
 <span data-ttu-id="6bda5-466">Para arquivos abertos no `Random` modo, as seguintes regras se aplicam:</span><span class="sxs-lookup"><span data-stu-id="6bda5-466">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="6bda5-467">Se o comprimento dos dados que está sendo lidos for menor que o comprimento especificado na `RecordLength` cláusula do `FileOpen` função,`FileGet` lê registros subsequentes em limites de comprimento de registro.</span><span class="sxs-lookup"><span data-stu-id="6bda5-467">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function,`FileGet` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="6bda5-468">O espaço entre o final de um registro e o início do próximo registro é preenchido com o conteúdo existente no buffer de arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-468">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="6bda5-469">Como a quantidade de dados de preenchimento não pode ser determinada com certeza, geralmente é uma boa ideia ter o comprimento do registro corresponde ao tamanho dos dados que está sendo lidos.</span><span class="sxs-lookup"><span data-stu-id="6bda5-469">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="6bda5-470">Por padrão, se a variável que está sendo lida é uma cadeia de caracteres, `FileGet` lê um descritor de dois bytes que contém o comprimento da cadeia de caracteres e, em seguida, lê os dados que vão para a variável.</span><span class="sxs-lookup"><span data-stu-id="6bda5-470">By default, if the variable being read into is a string, `FileGet` reads a two-byte descriptor that contains the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="6bda5-471">Portanto, o comprimento do registro especificado pelo `RecordLength` cláusula do `FileOpen` função deve ser pelo menos dois bytes maior do que o comprimento real da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="6bda5-471">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="6bda5-472">Visual Basic 6.0 e versões anteriores dão suporte a cadeias de caracteres de comprimento fixo; Quando colocado em um arquivo, o descritor de comprimento não é gravado.</span><span class="sxs-lookup"><span data-stu-id="6bda5-472">Visual Basic 6.0 and earlier versions support fixed-length strings; when put to a file, the length descriptor is not written.</span></span> <span data-ttu-id="6bda5-473">Se você deseja ler uma cadeia de caracteres sem o descritor, você deve passar `True` para o `StringIsFixedLength` parâmetro e a cadeia de caracteres lida deve ter o tamanho correto.</span><span class="sxs-lookup"><span data-stu-id="6bda5-473">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="6bda5-474">Se a variável que está sendo lida é uma matriz, você pode optar por ler um descritor para o tamanho e a dimensão da matriz.</span><span class="sxs-lookup"><span data-stu-id="6bda5-474">If the variable being read into is an array, you can choose whether to read a descriptor for the size and dimension of the array.</span></span> <span data-ttu-id="6bda5-475">Para gravar o descritor, defina as `ArrayIsDynamic` parâmetro para `True`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-475">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="6bda5-476">Ao ler a matriz, você precisa coincidir com a forma que de matriz foi escrita.</span><span class="sxs-lookup"><span data-stu-id="6bda5-476">When reading the array, you have to match the way the array was written.</span></span> <span data-ttu-id="6bda5-477">Se ele foi gravado com o descritor, você precisará ler o descritor.</span><span class="sxs-lookup"><span data-stu-id="6bda5-477">If it was written with the descriptor, you have to read the descriptor.</span></span> <span data-ttu-id="6bda5-478">Se o descritor não for usado, o tamanho e limites da matriz passaram para `FileGet` determinar o que ler.</span><span class="sxs-lookup"><span data-stu-id="6bda5-478">If the descriptor is not used, the size and bounds of the array passed into `FileGet` determine what to read.</span></span>  
  
     <span data-ttu-id="6bda5-479">O descritor especifica a classificação de matriz, o tamanho e os limites inferiores para cada classificação.</span><span class="sxs-lookup"><span data-stu-id="6bda5-479">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="6bda5-480">Seu comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="6bda5-480">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="6bda5-481">O comprimento do registro especificado pelo `RecordLength` parâmetro no `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessário para gravar os dados de matriz e o descritor de matriz.</span><span class="sxs-lookup"><span data-stu-id="6bda5-481">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="6bda5-482">Por exemplo, a seguinte declaração de matriz requer 218 bytes quando a matriz é gravada no disco.</span><span class="sxs-lookup"><span data-stu-id="6bda5-482">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#21)]  
  
     <span data-ttu-id="6bda5-483">218 bytes são distribuídos da seguinte maneira:</span><span class="sxs-lookup"><span data-stu-id="6bda5-483">The 218 bytes are distributed as follows:</span></span>  
  
    -   <span data-ttu-id="6bda5-484">18 bytes para o descritor: (2 + 8 \* 2)</span><span class="sxs-lookup"><span data-stu-id="6bda5-484">18 bytes for the descriptor: (2 + 8 \* 2)</span></span>  
  
    -   <span data-ttu-id="6bda5-485">200 bytes para os dados: (5 \* 10 \* 4).</span><span class="sxs-lookup"><span data-stu-id="6bda5-485">200 bytes for the data: (5 \* 10 \* 4).</span></span>  
  
-   <span data-ttu-id="6bda5-486">Se a variável que está sendo lida for qualquer outro tipo de variável (não uma cadeia de caracteres de comprimento variável ou um objeto), `FileGet` lê apenas os dados da variável.</span><span class="sxs-lookup"><span data-stu-id="6bda5-486">If the variable being read into is any other type of variable (not a variable-length string or an object), `FileGet` reads only the variable data.</span></span> <span data-ttu-id="6bda5-487">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual ao comprimento dos dados que está sendo lidos.</span><span class="sxs-lookup"><span data-stu-id="6bda5-487">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being read.</span></span>  
  
-   <span data-ttu-id="6bda5-488">`FileGet` lê os elementos de estruturas como se cada um estava sendo lido individualmente, exceto que não há nenhum preenchimento entre elementos.</span><span class="sxs-lookup"><span data-stu-id="6bda5-488">`FileGet` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="6bda5-489">No disco, uma matriz dinâmica em um tipo definido pelo usuário (escritos com `FilePut`) é prefixado por um descritor cujo comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="6bda5-489">On disk, a dynamic array in a user-defined type (written with `FilePut`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="6bda5-490">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessários para ler os elementos individuais.</span><span class="sxs-lookup"><span data-stu-id="6bda5-490">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements.</span></span> <span data-ttu-id="6bda5-491">Isso inclui qualquer matrizes e seus descritores.</span><span class="sxs-lookup"><span data-stu-id="6bda5-491">This includes any arrays and their descriptors.</span></span> <span data-ttu-id="6bda5-492">O `VBFixedString` atributo pode ser aplicado a campos de cadeia de caracteres em estruturas para indicar o tamanho de uma cadeia de caracteres quando gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="6bda5-492">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of a string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="6bda5-493">Modo binário</span><span class="sxs-lookup"><span data-stu-id="6bda5-493">Binary Mode</span></span>  
 <span data-ttu-id="6bda5-494">Para arquivos abertos no `Binary` modo, a maioria do `Random` modo regras se aplicam, com algumas exceções.</span><span class="sxs-lookup"><span data-stu-id="6bda5-494">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="6bda5-495">As seguintes regras para arquivos abertos no `Binary` modo são diferentes das regras para `Random` modo:</span><span class="sxs-lookup"><span data-stu-id="6bda5-495">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="6bda5-496">A cláusula `RecordLength` na função de `FileOpen` não está em vigor.</span><span class="sxs-lookup"><span data-stu-id="6bda5-496">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="6bda5-497">`FileGet` lê todas as variáveis do disco de maneira contígua; ou seja, sem nenhum preenchimento entre registros.</span><span class="sxs-lookup"><span data-stu-id="6bda5-497">`FileGet` reads all variables from disk contiguously; that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="6bda5-498">Para qualquer matriz que não seja uma matriz em uma estrutura, `FileGet` lê apenas os dados.</span><span class="sxs-lookup"><span data-stu-id="6bda5-498">For any array other than an array in a structure, `FileGet` reads only the data.</span></span> <span data-ttu-id="6bda5-499">Nenhum descritor é lido.</span><span class="sxs-lookup"><span data-stu-id="6bda5-499">No descriptor is read.</span></span>  
  
-   <span data-ttu-id="6bda5-500">`FileGet` lê cadeias de caracteres de comprimento variável que não são elementos das estruturas sem esperar o descritor de dois bytes de comprimento.</span><span class="sxs-lookup"><span data-stu-id="6bda5-500">`FileGet` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="6bda5-501">O número de bytes lidos é igual ao número de caracteres já na cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="6bda5-501">The number of bytes read equals the number of characters already in the string.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="6bda5-502">Leitura de um arquivo usando o `FileGet` função requer `Read` acessar do <xref:System.Security.Permissions.FileIOPermissionAccess> enumeração.</span><span class="sxs-lookup"><span data-stu-id="6bda5-502">Reading from a file by using the `FileGet` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6bda5-503">
            <paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-503">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="6bda5-504">O modo de arquivo é inválido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-504">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="FileGet">
      <MemberSignature Language="C#" Value="public static void FileGet (int FileNumber, ref decimal Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGet(int32 FileNumber, valuetype System.Decimal&amp; Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Decimal@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGet (FileNumber As Integer, ByRef Value As Decimal, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FileGet : int *  * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileGet (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Decimal" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="6bda5-505">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-505">Required.</span>
          </span>
          <span data-ttu-id="6bda5-506">Qualquer número de arquivo válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-506">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="6bda5-507">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-507">Required.</span>
          </span>
          <span data-ttu-id="6bda5-508">Nome de variável válido no qual os dados são lidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-508">Valid variable name into which data is read.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="6bda5-509">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-509">Optional.</span>
          </span>
          <span data-ttu-id="6bda5-510">Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a leitura começa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-510">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6bda5-511">Lê dados de um arquivo aberto de disco em uma variável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-511">Reads data from an open disk file into a variable.</span>
          </span>
          <span data-ttu-id="6bda5-512">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FileGet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-512">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span>
          </span>
          <span data-ttu-id="6bda5-513">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-513">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bda5-514">`FileGet` só é válido em `Random` e `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-514">`FileGet` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="6bda5-515">Dados lidos com `FileGet` costumam ser gravados em um arquivo usando-se `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-515">Data read with `FileGet` is usually written to a file by using `FilePut`.</span></span>  
  
 <span data-ttu-id="6bda5-516">O primeiro registro ou byte em um arquivo está na posição 1, o segundo registro ou byte está na posição 2 e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="6bda5-516">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="6bda5-517">Se você omitir `RecordNumber`, o próximo registro ou byte após a última `FileGet` ou `FilePut` função (ou apontada pela última `Seek` função) é lido.</span><span class="sxs-lookup"><span data-stu-id="6bda5-517">If you omit `RecordNumber`, the next record or byte following the last `FileGet` or `FilePut` function (or pointed to by the last `Seek` function) is read.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6bda5-518">Ao ler de arquivos, não tome decisões sobre o conteúdo de um arquivo com base na extensão de nome de arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-518">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="6bda5-519">Por exemplo, um arquivo chamado Form1.vb não pode ser um arquivo de origem do Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="6bda5-519">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="6bda5-520">Modo aleatório</span><span class="sxs-lookup"><span data-stu-id="6bda5-520">Random Mode</span></span>  
 <span data-ttu-id="6bda5-521">Para arquivos abertos no `Random` modo, as seguintes regras se aplicam:</span><span class="sxs-lookup"><span data-stu-id="6bda5-521">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="6bda5-522">Se o comprimento dos dados que está sendo lidos for menor que o comprimento especificado na `RecordLength` cláusula do `FileOpen` função, `FileGet` lê registros subsequentes em limites de comprimento de registro.</span><span class="sxs-lookup"><span data-stu-id="6bda5-522">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FileGet` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="6bda5-523">O espaço entre o final de um registro e o início do próximo registro é preenchido com o conteúdo existente no buffer de arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-523">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="6bda5-524">Como a quantidade de dados de preenchimento não pode ser determinada com certeza, geralmente é uma boa ideia ter o comprimento do registro corresponde ao tamanho dos dados que está sendo lidos.</span><span class="sxs-lookup"><span data-stu-id="6bda5-524">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="6bda5-525">Por padrão, se a variável que está sendo lida é uma cadeia de caracteres, `FileGet` lê um descritor de dois bytes que contém o comprimento da cadeia de caracteres e, em seguida, lê os dados que vão para a variável.</span><span class="sxs-lookup"><span data-stu-id="6bda5-525">By default, if the variable being read into is a string, `FileGet` reads a two-byte descriptor that contains the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="6bda5-526">Portanto, o comprimento do registro especificado pelo `RecordLength` cláusula do `FileOpen` função deve ser pelo menos dois bytes maior do que o comprimento real da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="6bda5-526">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="6bda5-527">Visual Basic 6.0 e versões anteriores dão suporte a cadeias de caracteres de comprimento fixo; Quando colocado em um arquivo, o descritor de comprimento não é gravado.</span><span class="sxs-lookup"><span data-stu-id="6bda5-527">Visual Basic 6.0 and earlier versions support fixed-length strings; when put to a file, the length descriptor is not written.</span></span> <span data-ttu-id="6bda5-528">Se você deseja ler uma cadeia de caracteres sem o descritor, você deve passar `True` para o `StringIsFixedLength` parâmetro e a cadeia de caracteres lida deve ter o tamanho correto.</span><span class="sxs-lookup"><span data-stu-id="6bda5-528">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="6bda5-529">Se a variável que está sendo lida é uma matriz, você pode optar por ler um descritor para o tamanho e a dimensão da matriz.</span><span class="sxs-lookup"><span data-stu-id="6bda5-529">If the variable being read into is an array, you can choose whether to read a descriptor for the size and dimension of the array.</span></span> <span data-ttu-id="6bda5-530">Para gravar o descritor, defina as `ArrayIsDynamic` parâmetro para `True`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-530">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="6bda5-531">Ao ler a matriz, você precisa coincidir com a forma que de matriz foi escrita.</span><span class="sxs-lookup"><span data-stu-id="6bda5-531">When reading the array, you have to match the way the array was written.</span></span> <span data-ttu-id="6bda5-532">Se ele foi gravado com o descritor, você precisará ler o descritor.</span><span class="sxs-lookup"><span data-stu-id="6bda5-532">If it was written with the descriptor, you have to read the descriptor.</span></span> <span data-ttu-id="6bda5-533">Se o descritor não for usado, o tamanho e limites da matriz passaram para `FileGet` determinar o que ler.</span><span class="sxs-lookup"><span data-stu-id="6bda5-533">If the descriptor is not used, the size and bounds of the array passed into `FileGet` determine what to read.</span></span>  
  
     <span data-ttu-id="6bda5-534">O descritor especifica a classificação de matriz, o tamanho e os limites inferiores para cada classificação.</span><span class="sxs-lookup"><span data-stu-id="6bda5-534">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="6bda5-535">Seu comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="6bda5-535">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="6bda5-536">O comprimento do registro especificado pelo `RecordLength` parâmetro no `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessário para gravar os dados de matriz e o descritor de matriz.</span><span class="sxs-lookup"><span data-stu-id="6bda5-536">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="6bda5-537">Por exemplo, a seguinte declaração de matriz requer 218 bytes quando a matriz é gravada no disco.</span><span class="sxs-lookup"><span data-stu-id="6bda5-537">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#21)]  
  
     <span data-ttu-id="6bda5-538">218 bytes são distribuídos da seguinte maneira:</span><span class="sxs-lookup"><span data-stu-id="6bda5-538">The 218 bytes are distributed as follows:</span></span>  
  
    -   <span data-ttu-id="6bda5-539">18 bytes para o descritor: (2 + 8 \* 2)</span><span class="sxs-lookup"><span data-stu-id="6bda5-539">18 bytes for the descriptor: (2 + 8 \* 2)</span></span>  
  
    -   <span data-ttu-id="6bda5-540">200 bytes para os dados: (5 \* 10 \* 4).</span><span class="sxs-lookup"><span data-stu-id="6bda5-540">200 bytes for the data: (5 \* 10 \* 4).</span></span>  
  
-   <span data-ttu-id="6bda5-541">Se a variável que está sendo lida for qualquer outro tipo de variável (não uma cadeia de caracteres de comprimento variável ou um objeto), `FileGet` lê apenas os dados da variável.</span><span class="sxs-lookup"><span data-stu-id="6bda5-541">If the variable being read into is any other type of variable (not a variable-length string or an object), `FileGet` reads only the variable data.</span></span> <span data-ttu-id="6bda5-542">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual ao comprimento dos dados que está sendo lidos.</span><span class="sxs-lookup"><span data-stu-id="6bda5-542">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being read.</span></span>  
  
-   <span data-ttu-id="6bda5-543">`FileGet` lê os elementos de estruturas como se cada um estava sendo lido individualmente, exceto que não há nenhum preenchimento entre elementos.</span><span class="sxs-lookup"><span data-stu-id="6bda5-543">`FileGet` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="6bda5-544">No disco, uma matriz dinâmica em um tipo definido pelo usuário (escritos com `FilePut`) é prefixado por um descritor cujo comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="6bda5-544">On disk, a dynamic array in a user-defined type (written with `FilePut`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="6bda5-545">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessários para ler os elementos individuais.</span><span class="sxs-lookup"><span data-stu-id="6bda5-545">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements.</span></span> <span data-ttu-id="6bda5-546">Isso inclui qualquer matrizes e seus descritores.</span><span class="sxs-lookup"><span data-stu-id="6bda5-546">This includes any arrays and their descriptors.</span></span> <span data-ttu-id="6bda5-547">O `VBFixedString` atributo pode ser aplicado a campos de cadeia de caracteres em estruturas para indicar o tamanho de uma cadeia de caracteres quando gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="6bda5-547">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of a string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="6bda5-548">Modo binário</span><span class="sxs-lookup"><span data-stu-id="6bda5-548">Binary Mode</span></span>  
 <span data-ttu-id="6bda5-549">Para arquivos abertos no `Binary` modo, a maioria do `Random` modo regras se aplicam, com algumas exceções.</span><span class="sxs-lookup"><span data-stu-id="6bda5-549">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="6bda5-550">As seguintes regras para arquivos abertos no `Binary` modo são diferentes das regras para `Random` modo:</span><span class="sxs-lookup"><span data-stu-id="6bda5-550">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="6bda5-551">A cláusula `RecordLength` na função de `FileOpen` não está em vigor.</span><span class="sxs-lookup"><span data-stu-id="6bda5-551">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="6bda5-552">`FileGet` lê todas as variáveis do disco de maneira contígua; ou seja, sem nenhum preenchimento entre registros.</span><span class="sxs-lookup"><span data-stu-id="6bda5-552">`FileGet` reads all variables from disk contiguously; that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="6bda5-553">Para qualquer matriz que não seja uma matriz em uma estrutura, `FileGet` lê apenas os dados.</span><span class="sxs-lookup"><span data-stu-id="6bda5-553">For any array other than an array in a structure, `FileGet` reads only the data.</span></span> <span data-ttu-id="6bda5-554">Nenhum descritor é lido.</span><span class="sxs-lookup"><span data-stu-id="6bda5-554">No descriptor is read.</span></span>  
  
-   <span data-ttu-id="6bda5-555">`FileGet` lê cadeias de caracteres de comprimento variável que não são elementos das estruturas sem esperar o descritor de dois bytes de comprimento.</span><span class="sxs-lookup"><span data-stu-id="6bda5-555">`FileGet` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="6bda5-556">O número de bytes lidos é igual ao número de caracteres já na cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="6bda5-556">The number of bytes read equals the number of characters already in the string.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="6bda5-557">Leitura de um arquivo usando o `FileGet` função requer `Read` acessar do <xref:System.Security.Permissions.FileIOPermissionAccess> enumeração.</span><span class="sxs-lookup"><span data-stu-id="6bda5-557">Reading from a file by using the `FileGet` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6bda5-558">
            <paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-558">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="6bda5-559">O modo de arquivo é inválido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-559">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="FileGet">
      <MemberSignature Language="C#" Value="public static void FileGet (int FileNumber, ref double Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGet(int32 FileNumber, float64&amp; Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Double@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGet (FileNumber As Integer, ByRef Value As Double, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FileGet : int *  * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileGet (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Double" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="6bda5-560">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-560">Required.</span>
          </span>
          <span data-ttu-id="6bda5-561">Qualquer número de arquivo válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-561">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="6bda5-562">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-562">Required.</span>
          </span>
          <span data-ttu-id="6bda5-563">Nome de variável válido no qual os dados são lidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-563">Valid variable name into which data is read.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="6bda5-564">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-564">Optional.</span>
          </span>
          <span data-ttu-id="6bda5-565">Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a leitura começa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-565">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6bda5-566">Lê dados de um arquivo aberto de disco em uma variável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-566">Reads data from an open disk file into a variable.</span>
          </span>
          <span data-ttu-id="6bda5-567">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FileGet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-567">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span>
          </span>
          <span data-ttu-id="6bda5-568">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-568">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bda5-569">`FileGet` só é válido em `Random` e `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-569">`FileGet` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="6bda5-570">Dados lidos com `FileGet` costumam ser gravados em um arquivo usando-se `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-570">Data read with `FileGet` is usually written to a file by using `FilePut`.</span></span>  
  
 <span data-ttu-id="6bda5-571">O primeiro registro ou byte em um arquivo está na posição 1, o segundo registro ou byte está na posição 2 e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="6bda5-571">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="6bda5-572">Se você omitir `RecordNumber`, o próximo registro ou byte após a última `FileGet` ou `FilePut` função (ou apontada pela última `Seek` função) é lido.</span><span class="sxs-lookup"><span data-stu-id="6bda5-572">If you omit `RecordNumber`, the next record or byte following the last `FileGet` or `FilePut` function (or pointed to by the last `Seek` function) is read.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6bda5-573">Ao ler de arquivos, não tome decisões sobre o conteúdo de um arquivo com base na extensão de nome de arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-573">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="6bda5-574">Por exemplo, um arquivo chamado Form1.vb não pode ser um arquivo de origem do Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="6bda5-574">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="6bda5-575">Modo aleatório</span><span class="sxs-lookup"><span data-stu-id="6bda5-575">Random Mode</span></span>  
 <span data-ttu-id="6bda5-576">Para arquivos abertos no `Random` modo, as seguintes regras se aplicam:</span><span class="sxs-lookup"><span data-stu-id="6bda5-576">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="6bda5-577">Se o comprimento dos dados que está sendo lidos for menor que o comprimento especificado na `RecordLength` cláusula do `FileOpen` função, `FileGet` lê registros subsequentes em limites de comprimento de registro.</span><span class="sxs-lookup"><span data-stu-id="6bda5-577">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FileGet` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="6bda5-578">O espaço entre o final de um registro e o início do próximo registro é preenchido com o conteúdo existente no buffer de arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-578">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="6bda5-579">Como a quantidade de dados de preenchimento não pode ser determinada com certeza, geralmente é uma boa ideia ter o comprimento do registro corresponde ao tamanho dos dados que está sendo lidos.</span><span class="sxs-lookup"><span data-stu-id="6bda5-579">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="6bda5-580">Por padrão, se a variável que está sendo lida é uma cadeia de caracteres, `FileGet` lê um descritor de dois bytes que contém o comprimento da cadeia de caracteres e, em seguida, lê os dados que vão para a variável.</span><span class="sxs-lookup"><span data-stu-id="6bda5-580">By default, if the variable being read into is a string, `FileGet` reads a two-byte descriptor that contains the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="6bda5-581">Portanto, o comprimento do registro especificado pelo `RecordLength` cláusula do `FileOpen` função deve ser pelo menos dois bytes maior do que o comprimento real da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="6bda5-581">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="6bda5-582">Visual Basic 6.0 e versões anteriores dão suporte a cadeias de caracteres de comprimento fixo; Quando colocado em um arquivo, o descritor de comprimento não é gravado.</span><span class="sxs-lookup"><span data-stu-id="6bda5-582">Visual Basic 6.0 and earlier versions support fixed-length strings; when put to a file, the length descriptor is not written.</span></span> <span data-ttu-id="6bda5-583">Se você deseja ler uma cadeia de caracteres sem o descritor, você deve passar `True` para o `StringIsFixedLength` parâmetro e a cadeia de caracteres lida deve ter o tamanho correto.</span><span class="sxs-lookup"><span data-stu-id="6bda5-583">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="6bda5-584">Se a variável que está sendo lida é uma matriz, você pode optar por ler um descritor para o tamanho e a dimensão da matriz.</span><span class="sxs-lookup"><span data-stu-id="6bda5-584">If the variable being read into is an array, you can choose whether to read a descriptor for the size and dimension of the array.</span></span> <span data-ttu-id="6bda5-585">Para gravar o descritor, defina as `ArrayIsDynamic` parâmetro para `True`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-585">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="6bda5-586">Ao ler a matriz, você precisa coincidir com a forma que de matriz foi escrita.</span><span class="sxs-lookup"><span data-stu-id="6bda5-586">When reading the array, you have to match the way the array was written.</span></span> <span data-ttu-id="6bda5-587">Se ele foi gravado com o descritor, você precisará ler o descritor.</span><span class="sxs-lookup"><span data-stu-id="6bda5-587">If it was written with the descriptor, you have to read the descriptor.</span></span> <span data-ttu-id="6bda5-588">Se o descritor não for usado, o tamanho e limites da matriz passaram para `FileGet` determinar o que ler.</span><span class="sxs-lookup"><span data-stu-id="6bda5-588">If the descriptor is not used, the size and bounds of the array passed into `FileGet` determine what to read.</span></span>  
  
     <span data-ttu-id="6bda5-589">O descritor especifica a classificação de matriz, o tamanho e os limites inferiores para cada classificação.</span><span class="sxs-lookup"><span data-stu-id="6bda5-589">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="6bda5-590">Seu comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="6bda5-590">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="6bda5-591">O comprimento do registro especificado pelo `RecordLength` parâmetro no `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessário para gravar os dados de matriz e o descritor de matriz.</span><span class="sxs-lookup"><span data-stu-id="6bda5-591">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="6bda5-592">Por exemplo, a seguinte declaração de matriz requer 218 bytes quando a matriz é gravada no disco.</span><span class="sxs-lookup"><span data-stu-id="6bda5-592">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#21)]  
  
     <span data-ttu-id="6bda5-593">218 bytes são distribuídos da seguinte maneira:</span><span class="sxs-lookup"><span data-stu-id="6bda5-593">The 218 bytes are distributed as follows:</span></span>  
  
    -   <span data-ttu-id="6bda5-594">18 bytes para o descritor: (2 + 8 \* 2)</span><span class="sxs-lookup"><span data-stu-id="6bda5-594">18 bytes for the descriptor: (2 + 8 \* 2)</span></span>  
  
    -   <span data-ttu-id="6bda5-595">200 bytes para os dados: (5 \* 10 \* 4).</span><span class="sxs-lookup"><span data-stu-id="6bda5-595">200 bytes for the data: (5 \* 10 \* 4).</span></span>  
  
-   <span data-ttu-id="6bda5-596">Se a variável que está sendo lida for qualquer outro tipo de variável (não uma cadeia de caracteres de comprimento variável ou um objeto), `FileGet` lê apenas os dados da variável.</span><span class="sxs-lookup"><span data-stu-id="6bda5-596">If the variable being read into is any other type of variable (not a variable-length string or an object), `FileGet` reads only the variable data.</span></span> <span data-ttu-id="6bda5-597">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual ao comprimento dos dados que está sendo lidos.</span><span class="sxs-lookup"><span data-stu-id="6bda5-597">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being read.</span></span>  
  
-   <span data-ttu-id="6bda5-598">`FileGet` lê os elementos de estruturas como se cada um estava sendo lido individualmente, exceto que não há nenhum preenchimento entre elementos.</span><span class="sxs-lookup"><span data-stu-id="6bda5-598">`FileGet` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="6bda5-599">No disco, uma matriz dinâmica em um tipo definido pelo usuário (escritos com `FilePut`) é prefixado por um descritor cujo comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="6bda5-599">On disk, a dynamic array in a user-defined type (written with `FilePut`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="6bda5-600">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessários para ler os elementos individuais.</span><span class="sxs-lookup"><span data-stu-id="6bda5-600">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements.</span></span> <span data-ttu-id="6bda5-601">Isso inclui qualquer matrizes e seus descritores.</span><span class="sxs-lookup"><span data-stu-id="6bda5-601">This includes any arrays and their descriptors.</span></span> <span data-ttu-id="6bda5-602">O `VBFixedString` atributo pode ser aplicado a campos de cadeia de caracteres em estruturas para indicar o tamanho de uma cadeia de caracteres quando gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="6bda5-602">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of a string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="6bda5-603">Modo binário</span><span class="sxs-lookup"><span data-stu-id="6bda5-603">Binary Mode</span></span>  
 <span data-ttu-id="6bda5-604">Para arquivos abertos no `Binary` modo, a maioria do `Random` modo regras se aplicam, com algumas exceções.</span><span class="sxs-lookup"><span data-stu-id="6bda5-604">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="6bda5-605">As seguintes regras para arquivos abertos no `Binary` modo são diferentes das regras para `Random` modo:</span><span class="sxs-lookup"><span data-stu-id="6bda5-605">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="6bda5-606">A cláusula `RecordLength` na função de `FileOpen` não está em vigor.</span><span class="sxs-lookup"><span data-stu-id="6bda5-606">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="6bda5-607">`FileGet` lê todas as variáveis do disco de maneira contígua; ou seja, sem nenhum preenchimento entre registros.</span><span class="sxs-lookup"><span data-stu-id="6bda5-607">`FileGet` reads all variables from disk contiguously; that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="6bda5-608">Para qualquer matriz que não seja uma matriz em uma estrutura, `FileGet` lê apenas os dados.</span><span class="sxs-lookup"><span data-stu-id="6bda5-608">For any array other than an array in a structure, `FileGet` reads only the data.</span></span> <span data-ttu-id="6bda5-609">Nenhum descritor é lido.</span><span class="sxs-lookup"><span data-stu-id="6bda5-609">No descriptor is read.</span></span>  
  
-   <span data-ttu-id="6bda5-610">`FileGet` lê cadeias de caracteres de comprimento variável que não são elementos das estruturas sem esperar o descritor de dois bytes de comprimento.</span><span class="sxs-lookup"><span data-stu-id="6bda5-610">`FileGet` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="6bda5-611">O número de bytes lidos é igual ao número de caracteres já na cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="6bda5-611">The number of bytes read equals the number of characters already in the string.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="6bda5-612">Leitura de um arquivo usando o`FileGet` função requer `Read` acessar do <xref:System.Security.Permissions.FileIOPermissionAccess> enumeração.</span><span class="sxs-lookup"><span data-stu-id="6bda5-612">Reading from a file by using the`FileGet` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6bda5-613">
            <paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-613">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="6bda5-614">O modo de arquivo é inválido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-614">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="FileGet">
      <MemberSignature Language="C#" Value="public static void FileGet (int FileNumber, ref short Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGet(int32 FileNumber, int16&amp; Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Int16@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGet (FileNumber As Integer, ByRef Value As Short, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FileGet : int *  * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileGet (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Int16" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="6bda5-615">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-615">Required.</span>
          </span>
          <span data-ttu-id="6bda5-616">Qualquer número de arquivo válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-616">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="6bda5-617">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-617">Required.</span>
          </span>
          <span data-ttu-id="6bda5-618">Nome de variável válido no qual os dados são lidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-618">Valid variable name into which data is read.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="6bda5-619">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-619">Optional.</span>
          </span>
          <span data-ttu-id="6bda5-620">Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a leitura começa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-620">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6bda5-621">Lê dados de um arquivo aberto de disco em uma variável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-621">Reads data from an open disk file into a variable.</span>
          </span>
          <span data-ttu-id="6bda5-622">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FileGet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-622">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span>
          </span>
          <span data-ttu-id="6bda5-623">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-623">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bda5-624">`FileGet` só é válido em `Random` e `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-624">`FileGet` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="6bda5-625">Dados lidos com `FileGet` costumam ser gravados em um arquivo usando-se `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-625">Data read with `FileGet` is usually written to a file by using `FilePut`.</span></span>  
  
 <span data-ttu-id="6bda5-626">O primeiro registro ou byte em um arquivo está na posição 1, o segundo registro ou byte está na posição 2 e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="6bda5-626">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="6bda5-627">Se você omitir `RecordNumber`, o próximo registro ou byte após a última `FileGet` ou `FilePut` função (ou apontada pela última `Seek` função) é lido.</span><span class="sxs-lookup"><span data-stu-id="6bda5-627">If you omit `RecordNumber`, the next record or byte following the last `FileGet` or `FilePut` function (or pointed to by the last `Seek` function) is read.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6bda5-628">Ao ler de arquivos, não tome decisões sobre o conteúdo de um arquivo com base na extensão de nome de arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-628">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="6bda5-629">Por exemplo, um arquivo chamado Form1.vb não pode ser um arquivo de origem do Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="6bda5-629">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="6bda5-630">Modo aleatório</span><span class="sxs-lookup"><span data-stu-id="6bda5-630">Random Mode</span></span>  
 <span data-ttu-id="6bda5-631">Para arquivos abertos no `Random` modo, as seguintes regras se aplicam:</span><span class="sxs-lookup"><span data-stu-id="6bda5-631">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="6bda5-632">Se o comprimento dos dados que está sendo lidos for menor que o comprimento especificado na `RecordLength` cláusula do `FileOpen` função, `FileGet` lê registros subsequentes em limites de comprimento de registro.</span><span class="sxs-lookup"><span data-stu-id="6bda5-632">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FileGet` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="6bda5-633">O espaço entre o final de um registro e o início do próximo registro é preenchido com o conteúdo existente no buffer de arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-633">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="6bda5-634">Como a quantidade de dados de preenchimento não pode ser determinada com certeza, geralmente é uma boa ideia ter o comprimento do registro corresponde ao tamanho dos dados que está sendo lidos.</span><span class="sxs-lookup"><span data-stu-id="6bda5-634">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="6bda5-635">Por padrão, se a variável que está sendo lida é uma cadeia de caracteres, `FileGet` lê um descritor de dois bytes que contém o comprimento da cadeia de caracteres e, em seguida, lê os dados que vão para a variável.</span><span class="sxs-lookup"><span data-stu-id="6bda5-635">By default, if the variable being read into is a string, `FileGet` reads a two-byte descriptor that contains the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="6bda5-636">Portanto, o comprimento do registro especificado pelo `RecordLength` cláusula do `FileOpen` função deve ser pelo menos dois bytes maior do que o comprimento real da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="6bda5-636">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="6bda5-637">Visual Basic 6.0 e versões anteriores dão suporte a cadeias de caracteres de comprimento fixo; Quando colocado em um arquivo, o descritor de comprimento não é gravado.</span><span class="sxs-lookup"><span data-stu-id="6bda5-637">Visual Basic 6.0 and earlier versions support fixed-length strings; when put to a file, the length descriptor is not written.</span></span> <span data-ttu-id="6bda5-638">Se você deseja ler uma cadeia de caracteres sem o descritor, você deve passar `True` para o `StringIsFixedLength` parâmetro e a cadeia de caracteres lida deve ter o tamanho correto.</span><span class="sxs-lookup"><span data-stu-id="6bda5-638">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="6bda5-639">Se a variável que está sendo lida é uma matriz, você pode optar por ler um descritor para o tamanho e a dimensão da matriz.</span><span class="sxs-lookup"><span data-stu-id="6bda5-639">If the variable being read into is an array, you can choose whether to read a descriptor for the size and dimension of the array.</span></span> <span data-ttu-id="6bda5-640">Para gravar o descritor, defina as `ArrayIsDynamic` parâmetro para `True`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-640">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="6bda5-641">Ao ler a matriz, você precisa coincidir com a forma que de matriz foi escrita.</span><span class="sxs-lookup"><span data-stu-id="6bda5-641">When reading the array, you have to match the way the array was written.</span></span> <span data-ttu-id="6bda5-642">Se ele foi gravado com o descritor, você precisará ler o descritor.</span><span class="sxs-lookup"><span data-stu-id="6bda5-642">If it was written with the descriptor, you have to read the descriptor.</span></span> <span data-ttu-id="6bda5-643">Se o descritor não for usado, o tamanho e limites da matriz passaram para `FileGet` determinar o que ler.</span><span class="sxs-lookup"><span data-stu-id="6bda5-643">If the descriptor is not used, the size and bounds of the array passed into `FileGet` determine what to read.</span></span>  
  
     <span data-ttu-id="6bda5-644">O descritor especifica a classificação de matriz, o tamanho e os limites inferiores para cada classificação.</span><span class="sxs-lookup"><span data-stu-id="6bda5-644">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="6bda5-645">Seu comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="6bda5-645">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="6bda5-646">O comprimento do registro especificado pelo `RecordLength` parâmetro no `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessário para gravar os dados de matriz e o descritor de matriz.</span><span class="sxs-lookup"><span data-stu-id="6bda5-646">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="6bda5-647">Por exemplo, a seguinte declaração de matriz requer 218 bytes quando a matriz é gravada no disco.</span><span class="sxs-lookup"><span data-stu-id="6bda5-647">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#21)]  
  
     <span data-ttu-id="6bda5-648">218 bytes são distribuídos da seguinte maneira:</span><span class="sxs-lookup"><span data-stu-id="6bda5-648">The 218 bytes are distributed as follows:</span></span>  
  
    -   <span data-ttu-id="6bda5-649">18 bytes para o descritor: (2 + 8 \* 2)</span><span class="sxs-lookup"><span data-stu-id="6bda5-649">18 bytes for the descriptor: (2 + 8 \* 2)</span></span>  
  
    -   <span data-ttu-id="6bda5-650">200 bytes para os dados: (5 \* 10 \* 4).</span><span class="sxs-lookup"><span data-stu-id="6bda5-650">200 bytes for the data: (5 \* 10 \* 4).</span></span>  
  
-   <span data-ttu-id="6bda5-651">Se a variável que está sendo lida for qualquer outro tipo de variável (não uma cadeia de caracteres de comprimento variável ou um objeto), `FileGet` lê apenas os dados da variável.</span><span class="sxs-lookup"><span data-stu-id="6bda5-651">If the variable being read into is any other type of variable (not a variable-length string or an object), `FileGet` reads only the variable data.</span></span> <span data-ttu-id="6bda5-652">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual ao comprimento dos dados que está sendo lidos.</span><span class="sxs-lookup"><span data-stu-id="6bda5-652">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being read.</span></span>  
  
-   <span data-ttu-id="6bda5-653">`FileGet` lê os elementos de estruturas como se cada um estava sendo lido individualmente, exceto que não há nenhum preenchimento entre elementos.</span><span class="sxs-lookup"><span data-stu-id="6bda5-653">`FileGet` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="6bda5-654">No disco, uma matriz dinâmica em um tipo definido pelo usuário (escritos com `FilePut`) é prefixado por um descritor cujo comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="6bda5-654">On disk, a dynamic array in a user-defined type (written with `FilePut`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="6bda5-655">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessários para ler os elementos individuais.</span><span class="sxs-lookup"><span data-stu-id="6bda5-655">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements.</span></span> <span data-ttu-id="6bda5-656">Isso inclui qualquer matrizes e seus descritores.</span><span class="sxs-lookup"><span data-stu-id="6bda5-656">This includes any arrays and their descriptors.</span></span> <span data-ttu-id="6bda5-657">O `VBFixedString` atributo pode ser aplicado a campos de cadeia de caracteres em estruturas para indicar o tamanho de uma cadeia de caracteres quando gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="6bda5-657">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of a string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="6bda5-658">Modo binário</span><span class="sxs-lookup"><span data-stu-id="6bda5-658">Binary Mode</span></span>  
 <span data-ttu-id="6bda5-659">Para arquivos abertos no `Binary` modo, a maioria do `Random` modo regras se aplicam, com algumas exceções.</span><span class="sxs-lookup"><span data-stu-id="6bda5-659">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="6bda5-660">As seguintes regras para arquivos abertos no `Binary` modo são diferentes das regras para `Random` modo:</span><span class="sxs-lookup"><span data-stu-id="6bda5-660">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="6bda5-661">A cláusula `RecordLength` na função de `FileOpen` não está em vigor.</span><span class="sxs-lookup"><span data-stu-id="6bda5-661">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="6bda5-662">`FileGet` lê todas as variáveis do disco de maneira contígua; ou seja, sem nenhum preenchimento entre registros.</span><span class="sxs-lookup"><span data-stu-id="6bda5-662">`FileGet` reads all variables from disk contiguously; that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="6bda5-663">Para qualquer matriz que não seja uma matriz em uma estrutura, `FileGet` lê apenas os dados.</span><span class="sxs-lookup"><span data-stu-id="6bda5-663">For any array other than an array in a structure, `FileGet` reads only the data.</span></span> <span data-ttu-id="6bda5-664">Nenhum descritor é lido.</span><span class="sxs-lookup"><span data-stu-id="6bda5-664">No descriptor is read.</span></span>  
  
-   <span data-ttu-id="6bda5-665">`FileGet` lê cadeias de caracteres de comprimento variável que não são elementos das estruturas sem esperar o descritor de dois bytes de comprimento.</span><span class="sxs-lookup"><span data-stu-id="6bda5-665">`FileGet` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="6bda5-666">O número de bytes lidos é igual ao número de caracteres já na cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="6bda5-666">The number of bytes read equals the number of characters already in the string.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="6bda5-667">Leitura de um arquivo usando o `FileGet` função requer `Read` acessar do <xref:System.Security.Permissions.FileIOPermissionAccess> enumeração.</span><span class="sxs-lookup"><span data-stu-id="6bda5-667">Reading from a file by using the `FileGet` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6bda5-668">
            <paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-668">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="6bda5-669">O modo de arquivo é inválido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-669">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="FileGet">
      <MemberSignature Language="C#" Value="public static void FileGet (int FileNumber, ref int Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGet(int32 FileNumber, int32&amp; Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Int32@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGet (FileNumber As Integer, ByRef Value As Integer, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FileGet : int *  * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileGet (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Int32" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="6bda5-670">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-670">Required.</span>
          </span>
          <span data-ttu-id="6bda5-671">Qualquer número de arquivo válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-671">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="6bda5-672">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-672">Required.</span>
          </span>
          <span data-ttu-id="6bda5-673">Nome de variável válido no qual os dados são lidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-673">Valid variable name into which data is read.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="6bda5-674">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-674">Optional.</span>
          </span>
          <span data-ttu-id="6bda5-675">Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a leitura começa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-675">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6bda5-676">Lê dados de um arquivo aberto de disco em uma variável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-676">Reads data from an open disk file into a variable.</span>
          </span>
          <span data-ttu-id="6bda5-677">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FileGet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-677">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span>
          </span>
          <span data-ttu-id="6bda5-678">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-678">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bda5-679">`FileGet` só é válido em `Random` e `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-679">`FileGet` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="6bda5-680">Dados lidos com `FileGet` costumam ser gravados em um arquivo usando-se `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-680">Data read with `FileGet` is usually written to a file by using `FilePut`.</span></span>  
  
 <span data-ttu-id="6bda5-681">O primeiro registro ou byte em um arquivo está na posição 1, o segundo registro ou byte está na posição 2 e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="6bda5-681">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="6bda5-682">Se você omitir `RecordNumber`, o próximo registro ou byte após a última `FileGet` ou `FilePut` função (ou apontada pela última `Seek` função) é lido.</span><span class="sxs-lookup"><span data-stu-id="6bda5-682">If you omit `RecordNumber`, the next record or byte following the last `FileGet` or `FilePut` function (or pointed to by the last `Seek` function) is read.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6bda5-683">Ao ler de arquivos, não tome decisões sobre o conteúdo de um arquivo com base na extensão de nome de arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-683">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="6bda5-684">Por exemplo, um arquivo chamado Form1.vb não pode ser um arquivo de origem do Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="6bda5-684">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="6bda5-685">Modo aleatório</span><span class="sxs-lookup"><span data-stu-id="6bda5-685">Random Mode</span></span>  
 <span data-ttu-id="6bda5-686">Para arquivos abertos no `Random` modo, as seguintes regras se aplicam:</span><span class="sxs-lookup"><span data-stu-id="6bda5-686">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="6bda5-687">Se o comprimento dos dados que está sendo lidos for menor que o comprimento especificado na `RecordLength` cláusula do `FileOpen` função, `FileGet` lê registros subsequentes em limites de comprimento de registro.</span><span class="sxs-lookup"><span data-stu-id="6bda5-687">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FileGet` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="6bda5-688">O espaço entre o final de um registro e o início do próximo registro é preenchido com o conteúdo existente no buffer de arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-688">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="6bda5-689">Como a quantidade de dados de preenchimento não pode ser determinada com certeza, geralmente é uma boa ideia ter o comprimento do registro corresponde ao tamanho dos dados que está sendo lidos.</span><span class="sxs-lookup"><span data-stu-id="6bda5-689">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="6bda5-690">Por padrão, se a variável que está sendo lida é uma cadeia de caracteres, `FileGet` lê um descritor de dois bytes que contém o comprimento da cadeia de caracteres e, em seguida, lê os dados que vão para a variável.</span><span class="sxs-lookup"><span data-stu-id="6bda5-690">By default, if the variable being read into is a string, `FileGet` reads a two-byte descriptor that contains the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="6bda5-691">Portanto, o comprimento do registro especificado pelo `RecordLength` cláusula do `FileOpen` função deve ser pelo menos dois bytes maior do que o comprimento real da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="6bda5-691">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="6bda5-692">Visual Basic 6.0 e versões anteriores dão suporte a cadeias de caracteres de comprimento fixo; Quando colocado em um arquivo, o descritor de comprimento não é gravado.</span><span class="sxs-lookup"><span data-stu-id="6bda5-692">Visual Basic 6.0 and earlier versions support fixed-length strings; when put to a file, the length descriptor is not written.</span></span> <span data-ttu-id="6bda5-693">Se você deseja ler uma cadeia de caracteres sem o descritor, você deve passar `True` para o `StringIsFixedLength` parâmetro e a cadeia de caracteres lida deve ter o tamanho correto.</span><span class="sxs-lookup"><span data-stu-id="6bda5-693">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="6bda5-694">Se a variável que está sendo lida é uma matriz, você pode optar por ler um descritor para o tamanho e a dimensão da matriz.</span><span class="sxs-lookup"><span data-stu-id="6bda5-694">If the variable being read into is an array, you can choose whether to read a descriptor for the size and dimension of the array.</span></span> <span data-ttu-id="6bda5-695">Para gravar o descritor, defina as `ArrayIsDynamic` parâmetro para `True`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-695">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="6bda5-696">Ao ler a matriz, você precisa coincidir com a forma que de matriz foi escrita.</span><span class="sxs-lookup"><span data-stu-id="6bda5-696">When reading the array, you have to match the way the array was written.</span></span> <span data-ttu-id="6bda5-697">Se ele foi gravado com o descritor, você precisará ler o descritor.</span><span class="sxs-lookup"><span data-stu-id="6bda5-697">If it was written with the descriptor, you have to read the descriptor.</span></span> <span data-ttu-id="6bda5-698">Se o descritor não for usado, o tamanho e limites da matriz passaram para `FileGet` determinar o que ler.</span><span class="sxs-lookup"><span data-stu-id="6bda5-698">If the descriptor is not used, the size and bounds of the array passed into `FileGet` determine what to read.</span></span>  
  
     <span data-ttu-id="6bda5-699">O descritor especifica a classificação de matriz, o tamanho e os limites inferiores para cada classificação.</span><span class="sxs-lookup"><span data-stu-id="6bda5-699">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="6bda5-700">Seu comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="6bda5-700">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="6bda5-701">O comprimento do registro especificado pelo `RecordLength` parâmetro no `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessário para gravar os dados de matriz e o descritor de matriz.</span><span class="sxs-lookup"><span data-stu-id="6bda5-701">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="6bda5-702">Por exemplo, a seguinte declaração de matriz requer 218 bytes quando a matriz é gravada no disco.</span><span class="sxs-lookup"><span data-stu-id="6bda5-702">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#21)]  
  
     <span data-ttu-id="6bda5-703">218 bytes são distribuídos da seguinte maneira:</span><span class="sxs-lookup"><span data-stu-id="6bda5-703">The 218 bytes are distributed as follows:</span></span>  
  
    -   <span data-ttu-id="6bda5-704">18 bytes para o descritor: (2 + 8 \* 2)</span><span class="sxs-lookup"><span data-stu-id="6bda5-704">18 bytes for the descriptor: (2 + 8 \* 2)</span></span>  
  
    -   <span data-ttu-id="6bda5-705">200 bytes para os dados: (5 \* 10 \* 4).</span><span class="sxs-lookup"><span data-stu-id="6bda5-705">200 bytes for the data: (5 \* 10 \* 4).</span></span>  
  
-   <span data-ttu-id="6bda5-706">Se a variável que está sendo lida for qualquer outro tipo de variável (não uma cadeia de caracteres de comprimento variável ou um objeto), `FileGet` lê apenas os dados da variável.</span><span class="sxs-lookup"><span data-stu-id="6bda5-706">If the variable being read into is any other type of variable (not a variable-length string or an object), `FileGet` reads only the variable data.</span></span> <span data-ttu-id="6bda5-707">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual ao comprimento dos dados que está sendo lidos.</span><span class="sxs-lookup"><span data-stu-id="6bda5-707">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being read.</span></span>  
  
-   <span data-ttu-id="6bda5-708">`FileGet` lê os elementos de estruturas como se cada um estava sendo lido individualmente, exceto que não há nenhum preenchimento entre elementos.</span><span class="sxs-lookup"><span data-stu-id="6bda5-708">`FileGet` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="6bda5-709">No disco, uma matriz dinâmica em um tipo definido pelo usuário (escritos com `FilePut`) é prefixado por um descritor cujo comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="6bda5-709">On disk, a dynamic array in a user-defined type (written with `FilePut`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="6bda5-710">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessários para ler os elementos individuais.</span><span class="sxs-lookup"><span data-stu-id="6bda5-710">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements.</span></span> <span data-ttu-id="6bda5-711">Isso inclui qualquer matrizes e seus descritores.</span><span class="sxs-lookup"><span data-stu-id="6bda5-711">This includes any arrays and their descriptors.</span></span> <span data-ttu-id="6bda5-712">O `VBFixedString` atributo pode ser aplicado a campos de cadeia de caracteres em estruturas para indicar o tamanho de uma cadeia de caracteres quando gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="6bda5-712">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of a string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="6bda5-713">Modo binário</span><span class="sxs-lookup"><span data-stu-id="6bda5-713">Binary Mode</span></span>  
 <span data-ttu-id="6bda5-714">Para arquivos abertos no `Binary` modo, a maioria do `Random` modo regras se aplicam, com algumas exceções.</span><span class="sxs-lookup"><span data-stu-id="6bda5-714">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="6bda5-715">As seguintes regras para arquivos abertos no `Binary` modo são diferentes das regras para `Random` modo:</span><span class="sxs-lookup"><span data-stu-id="6bda5-715">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="6bda5-716">A cláusula `RecordLength` na função de `FileOpen` não está em vigor.</span><span class="sxs-lookup"><span data-stu-id="6bda5-716">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="6bda5-717">`FileGet` lê todas as variáveis do disco de maneira contígua; ou seja, sem nenhum preenchimento entre registros.</span><span class="sxs-lookup"><span data-stu-id="6bda5-717">`FileGet` reads all variables from disk contiguously; that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="6bda5-718">Para qualquer matriz que não seja uma matriz em uma estrutura, `FileGet` lê apenas os dados.</span><span class="sxs-lookup"><span data-stu-id="6bda5-718">For any array other than an array in a structure, `FileGet` reads only the data.</span></span> <span data-ttu-id="6bda5-719">Nenhum descritor é lido.</span><span class="sxs-lookup"><span data-stu-id="6bda5-719">No descriptor is read.</span></span>  
  
-   <span data-ttu-id="6bda5-720">`FileGet` lê cadeias de caracteres de comprimento variável que não são elementos das estruturas sem esperar o descritor de dois bytes de comprimento.</span><span class="sxs-lookup"><span data-stu-id="6bda5-720">`FileGet` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="6bda5-721">O número de bytes lidos é igual ao número de caracteres já na cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="6bda5-721">The number of bytes read equals the number of characters already in the string.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="6bda5-722">Leitura de um arquivo usando o `FileGet` função requer `Read` acessar do <xref:System.Security.Permissions.FileIOPermissionAccess> enumeração.</span><span class="sxs-lookup"><span data-stu-id="6bda5-722">Reading from a file by using the `FileGet` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6bda5-723">
            <paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-723">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="6bda5-724">O modo de arquivo é inválido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-724">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="FileGet">
      <MemberSignature Language="C#" Value="public static void FileGet (int FileNumber, ref long Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGet(int32 FileNumber, int64&amp; Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Int64@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGet (FileNumber As Integer, ByRef Value As Long, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FileGet : int *  * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileGet (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Int64" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="6bda5-725">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-725">Required.</span>
          </span>
          <span data-ttu-id="6bda5-726">Qualquer número de arquivo válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-726">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="6bda5-727">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-727">Required.</span>
          </span>
          <span data-ttu-id="6bda5-728">Nome de variável válido no qual os dados são lidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-728">Valid variable name into which data is read.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="6bda5-729">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-729">Optional.</span>
          </span>
          <span data-ttu-id="6bda5-730">Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a leitura começa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-730">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6bda5-731">Lê dados de um arquivo aberto de disco em uma variável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-731">Reads data from an open disk file into a variable.</span>
          </span>
          <span data-ttu-id="6bda5-732">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FileGet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-732">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span>
          </span>
          <span data-ttu-id="6bda5-733">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-733">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bda5-734">`FileGet` só é válido em `Random` e `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-734">`FileGet` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="6bda5-735">Dados lidos com `FileGet` costumam ser gravados em um arquivo usando-se `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-735">Data read with `FileGet` is usually written to a file by using `FilePut`.</span></span>  
  
 <span data-ttu-id="6bda5-736">O primeiro registro ou byte em um arquivo está na posição 1, o segundo registro ou byte está na posição 2 e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="6bda5-736">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="6bda5-737">Se você omitir `RecordNumber`, o próximo registro ou byte após a última `FileGet` ou `FilePut` função (ou apontada pela última `Seek` função) é lido.</span><span class="sxs-lookup"><span data-stu-id="6bda5-737">If you omit `RecordNumber`, the next record or byte following the last `FileGet` or `FilePut` function (or pointed to by the last `Seek` function) is read.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6bda5-738">Ao ler de arquivos, não tome decisões sobre o conteúdo de um arquivo com base na extensão de nome de arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-738">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="6bda5-739">Por exemplo, um arquivo chamado Form1.vb não pode ser um arquivo de origem do Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="6bda5-739">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="6bda5-740">Modo aleatório</span><span class="sxs-lookup"><span data-stu-id="6bda5-740">Random Mode</span></span>  
 <span data-ttu-id="6bda5-741">Para arquivos abertos no `Random` modo, as seguintes regras se aplicam:</span><span class="sxs-lookup"><span data-stu-id="6bda5-741">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="6bda5-742">Se o comprimento dos dados que está sendo lidos for menor que o comprimento especificado na `RecordLength` cláusula do `FileOpen` função, `FileGet` lê registros subsequentes em limites de comprimento de registro.</span><span class="sxs-lookup"><span data-stu-id="6bda5-742">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FileGet` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="6bda5-743">O espaço entre o final de um registro e o início do próximo registro é preenchido com o conteúdo existente no buffer de arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-743">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="6bda5-744">Como a quantidade de dados de preenchimento não pode ser determinada com certeza, geralmente é uma boa ideia ter o comprimento do registro corresponde ao tamanho dos dados que está sendo lidos.</span><span class="sxs-lookup"><span data-stu-id="6bda5-744">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="6bda5-745">Por padrão, se a variável que está sendo lida é uma cadeia de caracteres, `FileGet` lê um descritor de dois bytes que contém o comprimento da cadeia de caracteres e, em seguida, lê os dados que vão para a variável.</span><span class="sxs-lookup"><span data-stu-id="6bda5-745">By default, if the variable being read into is a string, `FileGet` reads a two-byte descriptor that contains the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="6bda5-746">Portanto, o comprimento do registro especificado pelo `RecordLength` cláusula do `FileOpen` função deve ser pelo menos dois bytes maior do que o comprimento real da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="6bda5-746">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="6bda5-747">Visual Basic 6.0 e versões anteriores dão suporte a cadeias de caracteres de comprimento fixo; Quando colocado em um arquivo, o descritor de comprimento não é gravado.</span><span class="sxs-lookup"><span data-stu-id="6bda5-747">Visual Basic 6.0 and earlier versions support fixed-length strings; when put to a file, the length descriptor is not written.</span></span> <span data-ttu-id="6bda5-748">Se você deseja ler uma cadeia de caracteres sem o descritor, você deve passar `True` para o `StringIsFixedLength` parâmetro e a cadeia de caracteres lida deve ter o tamanho correto.</span><span class="sxs-lookup"><span data-stu-id="6bda5-748">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="6bda5-749">Se a variável que está sendo lida é uma matriz, você pode optar por ler um descritor para o tamanho e a dimensão da matriz.</span><span class="sxs-lookup"><span data-stu-id="6bda5-749">If the variable being read into is an array, you can choose whether to read a descriptor for the size and dimension of the array.</span></span> <span data-ttu-id="6bda5-750">Para gravar o descritor, defina as `ArrayIsDynamic` parâmetro para `True`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-750">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="6bda5-751">Ao ler a matriz, você precisa coincidir com a forma que de matriz foi escrita.</span><span class="sxs-lookup"><span data-stu-id="6bda5-751">When reading the array, you have to match the way the array was written.</span></span> <span data-ttu-id="6bda5-752">Se ele foi gravado com o descritor, você precisará ler o descritor.</span><span class="sxs-lookup"><span data-stu-id="6bda5-752">If it was written with the descriptor, you have to read the descriptor.</span></span> <span data-ttu-id="6bda5-753">Se o descritor não for usado, o tamanho e limites da matriz passaram para `FileGet` determinar o que ler.</span><span class="sxs-lookup"><span data-stu-id="6bda5-753">If the descriptor is not used, the size and bounds of the array passed into `FileGet` determine what to read.</span></span>  
  
     <span data-ttu-id="6bda5-754">O descritor especifica a classificação de matriz, o tamanho e os limites inferiores para cada classificação.</span><span class="sxs-lookup"><span data-stu-id="6bda5-754">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="6bda5-755">Seu comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="6bda5-755">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="6bda5-756">O comprimento do registro especificado pelo `RecordLength` parâmetro no `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessário para gravar os dados de matriz e o descritor de matriz.</span><span class="sxs-lookup"><span data-stu-id="6bda5-756">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="6bda5-757">Por exemplo, a seguinte declaração de matriz requer 218 bytes quando a matriz é gravada no disco.</span><span class="sxs-lookup"><span data-stu-id="6bda5-757">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#21)]  
  
     <span data-ttu-id="6bda5-758">218 bytes são distribuídos da seguinte maneira:</span><span class="sxs-lookup"><span data-stu-id="6bda5-758">The 218 bytes are distributed as follows:</span></span>  
  
    -   <span data-ttu-id="6bda5-759">18 bytes para o descritor: (2 + 8 \* 2)</span><span class="sxs-lookup"><span data-stu-id="6bda5-759">18 bytes for the descriptor: (2 + 8 \* 2)</span></span>  
  
    -   <span data-ttu-id="6bda5-760">200 bytes para os dados: (5 \* 10 \* 4).</span><span class="sxs-lookup"><span data-stu-id="6bda5-760">200 bytes for the data: (5 \* 10 \* 4).</span></span>  
  
-   <span data-ttu-id="6bda5-761">Se a variável que está sendo lida for qualquer outro tipo de variável (não uma cadeia de caracteres de comprimento variável ou um objeto), `FileGet` lê apenas os dados da variável.</span><span class="sxs-lookup"><span data-stu-id="6bda5-761">If the variable being read into is any other type of variable (not a variable-length string or an object), `FileGet` reads only the variable data.</span></span> <span data-ttu-id="6bda5-762">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual ao comprimento dos dados que está sendo lidos.</span><span class="sxs-lookup"><span data-stu-id="6bda5-762">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being read.</span></span>  
  
-   <span data-ttu-id="6bda5-763">`FileGet` lê os elementos de estruturas como se cada um estava sendo lido individualmente, exceto que não há nenhum preenchimento entre elementos.</span><span class="sxs-lookup"><span data-stu-id="6bda5-763">`FileGet` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="6bda5-764">No disco, uma matriz dinâmica em um tipo definido pelo usuário (escritos com `FilePut`) é prefixado por um descritor cujo comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="6bda5-764">On disk, a dynamic array in a user-defined type (written with `FilePut`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="6bda5-765">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessários para ler os elementos individuais.</span><span class="sxs-lookup"><span data-stu-id="6bda5-765">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements.</span></span> <span data-ttu-id="6bda5-766">Isso inclui qualquer matrizes e seus descritores.</span><span class="sxs-lookup"><span data-stu-id="6bda5-766">This includes any arrays and their descriptors.</span></span> <span data-ttu-id="6bda5-767">O `VBFixedString` atributo pode ser aplicado a campos de cadeia de caracteres em estruturas para indicar o tamanho de uma cadeia de caracteres quando gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="6bda5-767">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of a string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="6bda5-768">Modo binário</span><span class="sxs-lookup"><span data-stu-id="6bda5-768">Binary Mode</span></span>  
 <span data-ttu-id="6bda5-769">Para arquivos abertos no `Binary` modo, a maioria do `Random` modo regras se aplicam, com algumas exceções.</span><span class="sxs-lookup"><span data-stu-id="6bda5-769">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="6bda5-770">As seguintes regras para arquivos abertos no `Binary` modo são diferentes das regras para `Random` modo:</span><span class="sxs-lookup"><span data-stu-id="6bda5-770">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="6bda5-771">A cláusula `RecordLength` na função de `FileOpen` não está em vigor.</span><span class="sxs-lookup"><span data-stu-id="6bda5-771">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="6bda5-772">`FileGet` lê todas as variáveis do disco de maneira contígua; ou seja, sem nenhum preenchimento entre registros.</span><span class="sxs-lookup"><span data-stu-id="6bda5-772">`FileGet` reads all variables from disk contiguously; that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="6bda5-773">Para qualquer matriz que não seja uma matriz em uma estrutura, `FileGet` lê apenas os dados.</span><span class="sxs-lookup"><span data-stu-id="6bda5-773">For any array other than an array in a structure, `FileGet` reads only the data.</span></span> <span data-ttu-id="6bda5-774">Nenhum descritor é lido.</span><span class="sxs-lookup"><span data-stu-id="6bda5-774">No descriptor is read.</span></span>  
  
-   <span data-ttu-id="6bda5-775">`FileGet` lê cadeias de caracteres de comprimento variável que não são elementos das estruturas sem esperar o descritor de dois bytes de comprimento.</span><span class="sxs-lookup"><span data-stu-id="6bda5-775">`FileGet` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="6bda5-776">O número de bytes lidos é igual ao número de caracteres já na cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="6bda5-776">The number of bytes read equals the number of characters already in the string.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="6bda5-777">Leitura de um arquivo usando o `FileGet` função requer `Read` acessar do <xref:System.Security.Permissions.FileIOPermissionAccess> enumeração.</span><span class="sxs-lookup"><span data-stu-id="6bda5-777">Reading from a file by using the `FileGet` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6bda5-778">
            <paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-778">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="6bda5-779">O modo de arquivo é inválido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-779">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="FileGet">
      <MemberSignature Language="C#" Value="public static void FileGet (int FileNumber, ref float Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGet(int32 FileNumber, float32&amp; Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Single@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGet (FileNumber As Integer, ByRef Value As Single, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FileGet : int *  * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileGet (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Single" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="6bda5-780">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-780">Required.</span>
          </span>
          <span data-ttu-id="6bda5-781">Qualquer número de arquivo válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-781">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="6bda5-782">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-782">Required.</span>
          </span>
          <span data-ttu-id="6bda5-783">Nome de variável válido no qual os dados são lidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-783">Valid variable name into which data is read.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="6bda5-784">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-784">Optional.</span>
          </span>
          <span data-ttu-id="6bda5-785">Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a leitura começa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-785">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6bda5-786">Lê dados de um arquivo aberto de disco em uma variável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-786">Reads data from an open disk file into a variable.</span>
          </span>
          <span data-ttu-id="6bda5-787">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FileGet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-787">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span>
          </span>
          <span data-ttu-id="6bda5-788">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-788">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bda5-789">`FileGet` só é válido em `Random` e `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-789">`FileGet` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="6bda5-790">Dados lidos com `FileGet` costumam ser gravados em um arquivo usando-se `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-790">Data read with `FileGet` is usually written to a file by using `FilePut`.</span></span>  
  
 <span data-ttu-id="6bda5-791">O primeiro registro ou byte em um arquivo está na posição 1, o segundo registro ou byte está na posição 2 e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="6bda5-791">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="6bda5-792">Se você omitir `RecordNumber`, o próximo registro ou byte após a última `FileGet` ou `FilePut` função (ou apontada pela última `Seek` função) é lido.</span><span class="sxs-lookup"><span data-stu-id="6bda5-792">If you omit `RecordNumber`, the next record or byte following the last `FileGet` or `FilePut` function (or pointed to by the last `Seek` function) is read.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6bda5-793">Ao ler de arquivos, não tome decisões sobre o conteúdo de um arquivo com base na extensão de nome de arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-793">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="6bda5-794">Por exemplo, um arquivo chamado Form1.vb não pode ser um arquivo de origem do Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="6bda5-794">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="6bda5-795">Modo aleatório</span><span class="sxs-lookup"><span data-stu-id="6bda5-795">Random Mode</span></span>  
 <span data-ttu-id="6bda5-796">Para arquivos abertos no `Random` modo, as seguintes regras se aplicam:</span><span class="sxs-lookup"><span data-stu-id="6bda5-796">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="6bda5-797">Se o comprimento dos dados que está sendo lidos for menor que o comprimento especificado na `RecordLength` cláusula do `FileOpen` função, `FileGet` lê registros subsequentes em limites de comprimento de registro.</span><span class="sxs-lookup"><span data-stu-id="6bda5-797">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FileGet` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="6bda5-798">O espaço entre o final de um registro e o início do próximo registro é preenchido com o conteúdo existente no buffer de arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-798">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="6bda5-799">Como a quantidade de dados de preenchimento não pode ser determinada com certeza, geralmente é uma boa ideia ter o comprimento do registro corresponde ao tamanho dos dados que está sendo lidos.</span><span class="sxs-lookup"><span data-stu-id="6bda5-799">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="6bda5-800">Por padrão, se a variável que está sendo lida é uma cadeia de caracteres, `FileGet` lê um descritor de dois bytes que contém o comprimento da cadeia de caracteres e, em seguida, lê os dados que vão para a variável.</span><span class="sxs-lookup"><span data-stu-id="6bda5-800">By default, if the variable being read into is a string, `FileGet` reads a two-byte descriptor that contains the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="6bda5-801">Portanto, o comprimento do registro especificado pelo `RecordLength` cláusula do `FileOpen` função deve ser pelo menos dois bytes maior do que o comprimento real da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="6bda5-801">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="6bda5-802">Visual Basic 6.0 e versões anteriores dão suporte a cadeias de caracteres de comprimento fixo; Quando colocado em um arquivo, o descritor de comprimento não é gravado.</span><span class="sxs-lookup"><span data-stu-id="6bda5-802">Visual Basic 6.0 and earlier versions support fixed-length strings; when put to a file, the length descriptor is not written.</span></span> <span data-ttu-id="6bda5-803">Se você deseja ler uma cadeia de caracteres sem o descritor, você deve passar `True` para o `StringIsFixedLength` parâmetro e a cadeia de caracteres lida deve ter o tamanho correto.</span><span class="sxs-lookup"><span data-stu-id="6bda5-803">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="6bda5-804">Se a variável que está sendo lida é uma matriz, você pode optar por ler um descritor para o tamanho e a dimensão da matriz.</span><span class="sxs-lookup"><span data-stu-id="6bda5-804">If the variable being read into is an array, you can choose whether to read a descriptor for the size and dimension of the array.</span></span> <span data-ttu-id="6bda5-805">Para gravar o descritor, defina as `ArrayIsDynamic` parâmetro para `True`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-805">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="6bda5-806">Ao ler a matriz, você precisa coincidir com a forma que de matriz foi escrita.</span><span class="sxs-lookup"><span data-stu-id="6bda5-806">When reading the array, you have to match the way the array was written.</span></span> <span data-ttu-id="6bda5-807">Se ele foi gravado com o descritor, você precisará ler o descritor.</span><span class="sxs-lookup"><span data-stu-id="6bda5-807">If it was written with the descriptor, you have to read the descriptor.</span></span> <span data-ttu-id="6bda5-808">Se o descritor não for usado, o tamanho e limites da matriz passaram para `FileGet` determinar o que ler.</span><span class="sxs-lookup"><span data-stu-id="6bda5-808">If the descriptor is not used, the size and bounds of the array passed into `FileGet` determine what to read.</span></span>  
  
     <span data-ttu-id="6bda5-809">O descritor especifica a classificação de matriz, o tamanho e os limites inferiores para cada classificação.</span><span class="sxs-lookup"><span data-stu-id="6bda5-809">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="6bda5-810">Seu comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="6bda5-810">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="6bda5-811">O comprimento do registro especificado pelo `RecordLength` parâmetro no `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessário para gravar os dados de matriz e o descritor de matriz.</span><span class="sxs-lookup"><span data-stu-id="6bda5-811">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="6bda5-812">Por exemplo, a seguinte declaração de matriz requer 218 bytes quando a matriz é gravada no disco.</span><span class="sxs-lookup"><span data-stu-id="6bda5-812">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#21)]  
  
     <span data-ttu-id="6bda5-813">218 bytes são distribuídos da seguinte maneira:</span><span class="sxs-lookup"><span data-stu-id="6bda5-813">The 218 bytes are distributed as follows:</span></span>  
  
    -   <span data-ttu-id="6bda5-814">18 bytes para o descritor: (2 + 8 \* 2)</span><span class="sxs-lookup"><span data-stu-id="6bda5-814">18 bytes for the descriptor: (2 + 8 \* 2)</span></span>  
  
    -   <span data-ttu-id="6bda5-815">200 bytes para os dados: (5 \* 10 \* 4).</span><span class="sxs-lookup"><span data-stu-id="6bda5-815">200 bytes for the data: (5 \* 10 \* 4).</span></span>  
  
-   <span data-ttu-id="6bda5-816">Se a variável que está sendo lida for qualquer outro tipo de variável (não uma cadeia de caracteres de comprimento variável ou um objeto), `FileGet` lê apenas os dados da variável.</span><span class="sxs-lookup"><span data-stu-id="6bda5-816">If the variable being read into is any other type of variable (not a variable-length string or an object), `FileGet` reads only the variable data.</span></span> <span data-ttu-id="6bda5-817">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual ao comprimento dos dados que está sendo lidos.</span><span class="sxs-lookup"><span data-stu-id="6bda5-817">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being read.</span></span>  
  
-   <span data-ttu-id="6bda5-818">`FileGet` lê os elementos de estruturas como se cada um estava sendo lido individualmente, exceto que não há nenhum preenchimento entre elementos.</span><span class="sxs-lookup"><span data-stu-id="6bda5-818">`FileGet` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="6bda5-819">No disco, uma matriz dinâmica em um tipo definido pelo usuário (escritos com `FilePut`) é prefixado por um descritor cujo comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="6bda5-819">On disk, a dynamic array in a user-defined type (written with `FilePut`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="6bda5-820">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessários para ler os elementos individuais.</span><span class="sxs-lookup"><span data-stu-id="6bda5-820">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements.</span></span> <span data-ttu-id="6bda5-821">Isso inclui qualquer matrizes e seus descritores.</span><span class="sxs-lookup"><span data-stu-id="6bda5-821">This includes any arrays and their descriptors.</span></span> <span data-ttu-id="6bda5-822">O `VBFixedString` atributo pode ser aplicado a campos de cadeia de caracteres em estruturas para indicar o tamanho de uma cadeia de caracteres quando gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="6bda5-822">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of a string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="6bda5-823">Modo binário</span><span class="sxs-lookup"><span data-stu-id="6bda5-823">Binary Mode</span></span>  
 <span data-ttu-id="6bda5-824">Para arquivos abertos no `Binary` modo, a maioria do `Random` modo regras se aplicam, com algumas exceções.</span><span class="sxs-lookup"><span data-stu-id="6bda5-824">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="6bda5-825">As seguintes regras para arquivos abertos no `Binary` modo são diferentes das regras para `Random` modo:</span><span class="sxs-lookup"><span data-stu-id="6bda5-825">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="6bda5-826">A cláusula `RecordLength` na função de `FileOpen` não está em vigor.</span><span class="sxs-lookup"><span data-stu-id="6bda5-826">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="6bda5-827">`FileGet` lê todas as variáveis do disco de maneira contígua; ou seja, sem nenhum preenchimento entre registros.</span><span class="sxs-lookup"><span data-stu-id="6bda5-827">`FileGet` reads all variables from disk contiguously; that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="6bda5-828">Para qualquer matriz que não seja uma matriz em uma estrutura, `FileGet` lê apenas os dados.</span><span class="sxs-lookup"><span data-stu-id="6bda5-828">For any array other than an array in a structure, `FileGet` reads only the data.</span></span> <span data-ttu-id="6bda5-829">Nenhum descritor é lido.</span><span class="sxs-lookup"><span data-stu-id="6bda5-829">No descriptor is read.</span></span>  
  
-   <span data-ttu-id="6bda5-830">`FileGet` lê cadeias de caracteres de comprimento variável que não são elementos das estruturas sem esperar o descritor de dois bytes de comprimento.</span><span class="sxs-lookup"><span data-stu-id="6bda5-830">`FileGet` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="6bda5-831">O número de bytes lidos é igual ao número de caracteres já na cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="6bda5-831">The number of bytes read equals the number of characters already in the string.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="6bda5-832">Leitura de um arquivo usando o `FileGet` função requer `Read` acessar do <xref:System.Security.Permissions.FileIOPermissionAccess> enumeração.</span><span class="sxs-lookup"><span data-stu-id="6bda5-832">Reading from a file by using the `FileGet` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6bda5-833">
            <paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-833">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="6bda5-834">O modo de arquivo é inválido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-834">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="FileGet">
      <MemberSignature Language="C#" Value="public static void FileGet (int FileNumber, ref ValueType Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGet(int32 FileNumber, class System.ValueType&amp; Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.ValueType@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGet (FileNumber As Integer, ByRef Value As ValueType, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FileGet : int *  * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileGet (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.ValueType" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="6bda5-835">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-835">Required.</span>
          </span>
          <span data-ttu-id="6bda5-836">Qualquer número de arquivo válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-836">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="6bda5-837">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-837">Required.</span>
          </span>
          <span data-ttu-id="6bda5-838">Nome de variável válido no qual os dados são lidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-838">Valid variable name into which data is read.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="6bda5-839">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-839">Optional.</span>
          </span>
          <span data-ttu-id="6bda5-840">Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a leitura começa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-840">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6bda5-841">Lê dados de um arquivo aberto de disco em uma variável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-841">Reads data from an open disk file into a variable.</span>
          </span>
          <span data-ttu-id="6bda5-842">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FileGet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-842">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span>
          </span>
          <span data-ttu-id="6bda5-843">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-843">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bda5-844">`FileGet` só é válido em `Random` e `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-844">`FileGet` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="6bda5-845">Dados lidos com `FileGet` costumam ser gravados em um arquivo usando-se `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-845">Data read with `FileGet` is usually written to a file by using `FilePut`.</span></span>  
  
 <span data-ttu-id="6bda5-846">O primeiro registro ou byte em um arquivo está na posição 1, o segundo registro ou byte está na posição 2 e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="6bda5-846">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="6bda5-847">Se você omitir `RecordNumber`, o próximo registro ou byte após a última `FileGet` ou `FilePut` função (ou apontada pela última `Seek` função) é lido.</span><span class="sxs-lookup"><span data-stu-id="6bda5-847">If you omit `RecordNumber`, the next record or byte following the last `FileGet` or `FilePut` function (or pointed to by the last `Seek` function) is read.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6bda5-848">Ao ler de arquivos, não tome decisões sobre o conteúdo de um arquivo com base na extensão de nome de arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-848">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="6bda5-849">Por exemplo, um arquivo chamado Form1.vb não pode ser um arquivo de origem do Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="6bda5-849">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="6bda5-850">Modo aleatório</span><span class="sxs-lookup"><span data-stu-id="6bda5-850">Random Mode</span></span>  
 <span data-ttu-id="6bda5-851">Para arquivos abertos no `Random` modo, as seguintes regras se aplicam:</span><span class="sxs-lookup"><span data-stu-id="6bda5-851">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="6bda5-852">Se o comprimento dos dados que está sendo lidos for menor que o comprimento especificado na `RecordLength` cláusula do `FileOpen` função, `FileGet` lê registros subsequentes em limites de comprimento de registro.</span><span class="sxs-lookup"><span data-stu-id="6bda5-852">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FileGet` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="6bda5-853">O espaço entre o final de um registro e o início do próximo registro é preenchido com o conteúdo existente no buffer de arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-853">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="6bda5-854">Como a quantidade de dados de preenchimento não pode ser determinada com certeza, geralmente é uma boa ideia ter o comprimento do registro corresponde ao tamanho dos dados que está sendo lidos.</span><span class="sxs-lookup"><span data-stu-id="6bda5-854">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="6bda5-855">Por padrão, se a variável que está sendo lida é uma cadeia de caracteres, `FileGet` lê um descritor de dois bytes que contém o comprimento da cadeia de caracteres e, em seguida, lê os dados que vão para a variável.</span><span class="sxs-lookup"><span data-stu-id="6bda5-855">By default, if the variable being read into is a string, `FileGet` reads a two-byte descriptor that contains the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="6bda5-856">Portanto, o comprimento do registro especificado pelo `RecordLength` cláusula do `FileOpen` função deve ser pelo menos dois bytes maior do que o comprimento real da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="6bda5-856">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="6bda5-857">Visual Basic 6.0 e versões anteriores dão suporte a cadeias de caracteres de comprimento fixo; Quando colocado em um arquivo, o descritor de comprimento não é gravado.</span><span class="sxs-lookup"><span data-stu-id="6bda5-857">Visual Basic 6.0 and earlier versions support fixed-length strings; when put to a file, the length descriptor is not written.</span></span> <span data-ttu-id="6bda5-858">Se você deseja ler uma cadeia de caracteres sem o descritor, você deve passar `True` para o `StringIsFixedLength` parâmetro e a cadeia de caracteres lida deve ter o tamanho correto.</span><span class="sxs-lookup"><span data-stu-id="6bda5-858">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="6bda5-859">Se a variável que está sendo lida é uma matriz, você pode optar por ler um descritor para o tamanho e a dimensão da matriz.</span><span class="sxs-lookup"><span data-stu-id="6bda5-859">If the variable being read into is an array, you can choose whether to read a descriptor for the size and dimension of the array.</span></span> <span data-ttu-id="6bda5-860">Para gravar o descritor, defina as `ArrayIsDynamic` parâmetro para `True`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-860">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="6bda5-861">Ao ler a matriz, você precisa coincidir com a forma que de matriz foi escrita.</span><span class="sxs-lookup"><span data-stu-id="6bda5-861">When reading the array, you have to match the way the array was written.</span></span> <span data-ttu-id="6bda5-862">Se ele foi gravado com o descritor, você precisará ler o descritor.</span><span class="sxs-lookup"><span data-stu-id="6bda5-862">If it was written with the descriptor, you have to read the descriptor.</span></span> <span data-ttu-id="6bda5-863">Se o descritor não for usado, o tamanho e limites da matriz passaram para `FileGet` determinar o que ler.</span><span class="sxs-lookup"><span data-stu-id="6bda5-863">If the descriptor is not used, the size and bounds of the array passed into `FileGet` determine what to read.</span></span>  
  
     <span data-ttu-id="6bda5-864">O descritor especifica a classificação de matriz, o tamanho e os limites inferiores para cada classificação.</span><span class="sxs-lookup"><span data-stu-id="6bda5-864">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="6bda5-865">Seu comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="6bda5-865">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="6bda5-866">O comprimento do registro especificado pelo `RecordLength` parâmetro no `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessário para gravar os dados de matriz e o descritor de matriz.</span><span class="sxs-lookup"><span data-stu-id="6bda5-866">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="6bda5-867">Por exemplo, a seguinte declaração de matriz requer 218 bytes quando a matriz é gravada no disco.</span><span class="sxs-lookup"><span data-stu-id="6bda5-867">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#21)]  
  
     <span data-ttu-id="6bda5-868">218 bytes são distribuídos da seguinte maneira:</span><span class="sxs-lookup"><span data-stu-id="6bda5-868">The 218 bytes are distributed as follows:</span></span>  
  
    -   <span data-ttu-id="6bda5-869">18 bytes para o descritor: (2 + 8 \* 2)</span><span class="sxs-lookup"><span data-stu-id="6bda5-869">18 bytes for the descriptor: (2 + 8 \* 2)</span></span>  
  
    -   <span data-ttu-id="6bda5-870">200 bytes para os dados: (5 \* 10 \* 4).</span><span class="sxs-lookup"><span data-stu-id="6bda5-870">200 bytes for the data: (5 \* 10 \* 4).</span></span>  
  
-   <span data-ttu-id="6bda5-871">Se a variável que está sendo lida for qualquer outro tipo de variável (não uma cadeia de caracteres de comprimento variável ou um objeto), `FileGet` lê apenas os dados da variável.</span><span class="sxs-lookup"><span data-stu-id="6bda5-871">If the variable being read into is any other type of variable (not a variable-length string or an object), `FileGet` reads only the variable data.</span></span> <span data-ttu-id="6bda5-872">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual ao comprimento dos dados que está sendo lidos.</span><span class="sxs-lookup"><span data-stu-id="6bda5-872">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being read.</span></span>  
  
-   <span data-ttu-id="6bda5-873">`FileGet` lê os elementos de estruturas como se cada um estava sendo lido individualmente, exceto que não há nenhum preenchimento entre elementos.</span><span class="sxs-lookup"><span data-stu-id="6bda5-873">`FileGet` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="6bda5-874">No disco, uma matriz dinâmica em um tipo definido pelo usuário (escritos com `FilePut`) é prefixado por um descritor cujo comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="6bda5-874">On disk, a dynamic array in a user-defined type (written with `FilePut`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="6bda5-875">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessários para ler os elementos individuais.</span><span class="sxs-lookup"><span data-stu-id="6bda5-875">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements.</span></span> <span data-ttu-id="6bda5-876">Isso inclui qualquer matrizes e seus descritores.</span><span class="sxs-lookup"><span data-stu-id="6bda5-876">This includes any arrays and their descriptors.</span></span> <span data-ttu-id="6bda5-877">O `VBFixedString` atributo pode ser aplicado a campos de cadeia de caracteres em estruturas para indicar o tamanho de uma cadeia de caracteres quando gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="6bda5-877">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of a string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="6bda5-878">Modo binário</span><span class="sxs-lookup"><span data-stu-id="6bda5-878">Binary Mode</span></span>  
 <span data-ttu-id="6bda5-879">Para arquivos abertos no `Binary` modo, a maioria do `Random` modo regras se aplicam, com algumas exceções.</span><span class="sxs-lookup"><span data-stu-id="6bda5-879">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="6bda5-880">As seguintes regras para arquivos abertos no `Binary` modo são diferentes das regras para `Random` modo:</span><span class="sxs-lookup"><span data-stu-id="6bda5-880">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="6bda5-881">A cláusula `RecordLength` na função de `FileOpen` não está em vigor.</span><span class="sxs-lookup"><span data-stu-id="6bda5-881">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="6bda5-882">`FileGet` lê todas as variáveis do disco de maneira contígua; ou seja, sem nenhum preenchimento entre registros.</span><span class="sxs-lookup"><span data-stu-id="6bda5-882">`FileGet` reads all variables from disk contiguously; that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="6bda5-883">Para qualquer matriz que não seja uma matriz em uma estrutura, `FileGet` lê apenas os dados.</span><span class="sxs-lookup"><span data-stu-id="6bda5-883">For any array other than an array in a structure, `FileGet` reads only the data.</span></span> <span data-ttu-id="6bda5-884">Nenhum descritor é lido.</span><span class="sxs-lookup"><span data-stu-id="6bda5-884">No descriptor is read.</span></span>  
  
-   <span data-ttu-id="6bda5-885">`FileGet` lê cadeias de caracteres de comprimento variável que não são elementos das estruturas sem esperar o descritor de dois bytes de comprimento.</span><span class="sxs-lookup"><span data-stu-id="6bda5-885">`FileGet` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="6bda5-886">O número de bytes lidos é igual ao número de caracteres já na cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="6bda5-886">The number of bytes read equals the number of characters already in the string.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="6bda5-887">Leitura de um arquivo usando o `FileGet` função requer `Read` acessar do <xref:System.Security.Permissions.FileIOPermissionAccess> enumeração.</span><span class="sxs-lookup"><span data-stu-id="6bda5-887">Reading from a file by using the `FileGet` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6bda5-888">
            <paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-888">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="6bda5-889">O modo de arquivo é inválido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-889">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="FileGet">
      <MemberSignature Language="C#" Value="public static void FileGet (int FileNumber, ref string Value, long RecordNumber = -1, bool StringIsFixedLength = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGet(int32 FileNumber, string&amp; Value, int64 RecordNumber, bool StringIsFixedLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.String@,System.Int64,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGet (FileNumber As Integer, ByRef Value As String, Optional RecordNumber As Long = -1, Optional StringIsFixedLength As Boolean = false)" />
      <MemberSignature Language="F#" Value="static member FileGet : int *  * int64 * bool -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileGet (FileNumber, Value, RecordNumber, StringIsFixedLength)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.String" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
        <Parameter Name="StringIsFixedLength" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="6bda5-890">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-890">Required.</span>
          </span>
          <span data-ttu-id="6bda5-891">Qualquer número de arquivo válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-891">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="6bda5-892">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-892">Required.</span>
          </span>
          <span data-ttu-id="6bda5-893">Nome de variável válido no qual os dados são lidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-893">Valid variable name into which data is read.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="6bda5-894">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-894">Optional.</span>
          </span>
          <span data-ttu-id="6bda5-895">Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a leitura começa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-895">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span>
          </span>
        </param>
        <param name="StringIsFixedLength">
          <span data-ttu-id="6bda5-896">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-896">Optional.</span>
          </span>
          <span data-ttu-id="6bda5-897">Aplica-se somente ao gravar uma cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-897">Applies only when writing a string.</span>
          </span>
          <span data-ttu-id="6bda5-898">Especifica se deve gravar um descritor de dois bytes para a cadeia de caracteres que descreve o tamanho.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-898">Specifies whether to write a two-byte descriptor for the string that describes the length.</span>
          </span>
          <span data-ttu-id="6bda5-899">O padrão é <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-899">The default is <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6bda5-900">Lê dados de um arquivo aberto de disco em uma variável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-900">Reads data from an open disk file into a variable.</span>
          </span>
          <span data-ttu-id="6bda5-901">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FileGet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-901">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span>
          </span>
          <span data-ttu-id="6bda5-902">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-902">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bda5-903">`FileGet` só é válido em `Random` e `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-903">`FileGet` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="6bda5-904">Dados lidos com `FileGet` costumam ser gravados em um arquivo usando-se `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-904">Data read with `FileGet` is usually written to a file by using `FilePut`.</span></span>  
  
 <span data-ttu-id="6bda5-905">O primeiro registro ou byte em um arquivo está na posição 1, o segundo registro ou byte está na posição 2 e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="6bda5-905">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="6bda5-906">Se você omitir `RecordNumber`, o próximo registro ou byte após a última `FileGet` ou `FilePut` função (ou apontada pela última `Seek` função) é lido.</span><span class="sxs-lookup"><span data-stu-id="6bda5-906">If you omit `RecordNumber`, the next record or byte following the last `FileGet` or `FilePut` function (or pointed to by the last `Seek` function) is read.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6bda5-907">Ao ler de arquivos, não tome decisões sobre o conteúdo de um arquivo com base na extensão de nome de arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-907">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="6bda5-908">Por exemplo, um arquivo chamado Form1.vb não pode ser um arquivo de origem do Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="6bda5-908">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="6bda5-909">Modo aleatório</span><span class="sxs-lookup"><span data-stu-id="6bda5-909">Random Mode</span></span>  
 <span data-ttu-id="6bda5-910">Para arquivos abertos no `Random` modo, as seguintes regras se aplicam:</span><span class="sxs-lookup"><span data-stu-id="6bda5-910">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="6bda5-911">Se o comprimento dos dados que está sendo lidos for menor que o comprimento especificado na `RecordLength` cláusula do `FileOpen` função, `FileGet` lê registros subsequentes em limites de comprimento de registro.</span><span class="sxs-lookup"><span data-stu-id="6bda5-911">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FileGet` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="6bda5-912">O espaço entre o final de um registro e o início do próximo registro é preenchido com o conteúdo existente no buffer de arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-912">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="6bda5-913">Como a quantidade de dados de preenchimento não pode ser determinada com certeza, geralmente é uma boa ideia ter o comprimento do registro corresponde ao tamanho dos dados que está sendo lidos.</span><span class="sxs-lookup"><span data-stu-id="6bda5-913">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="6bda5-914">Por padrão, se a variável que está sendo lida é uma cadeia de caracteres, `FileGet` lê um descritor de dois bytes que contém o comprimento da cadeia de caracteres e, em seguida, lê os dados que vão para a variável.</span><span class="sxs-lookup"><span data-stu-id="6bda5-914">By default, if the variable being read into is a string, `FileGet` reads a two-byte descriptor that contains the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="6bda5-915">Portanto, o comprimento do registro especificado pelo `RecordLength` cláusula do `FileOpen` função deve ser pelo menos dois bytes maior do que o comprimento real da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="6bda5-915">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="6bda5-916">Visual Basic 6.0 e versões anteriores dão suporte a cadeias de caracteres de comprimento fixo; Quando colocado em um arquivo, o descritor de comprimento não é gravado.</span><span class="sxs-lookup"><span data-stu-id="6bda5-916">Visual Basic 6.0 and earlier versions support fixed-length strings; when put to a file, the length descriptor is not written.</span></span> <span data-ttu-id="6bda5-917">Se você deseja ler uma cadeia de caracteres sem o descritor, você deve passar `True` para o `StringIsFixedLength` parâmetro e a cadeia de caracteres lida deve ter o tamanho correto.</span><span class="sxs-lookup"><span data-stu-id="6bda5-917">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="6bda5-918">Se a variável que está sendo lida é uma matriz, você pode optar por ler um descritor para o tamanho e a dimensão da matriz.</span><span class="sxs-lookup"><span data-stu-id="6bda5-918">If the variable being read into is an array, you can choose whether to read a descriptor for the size and dimension of the array.</span></span> <span data-ttu-id="6bda5-919">Para gravar o descritor, defina as `ArrayIsDynamic` parâmetro para `True`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-919">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="6bda5-920">Ao ler a matriz, você precisa coincidir com a forma que de matriz foi escrita.</span><span class="sxs-lookup"><span data-stu-id="6bda5-920">When reading the array, you have to match the way the array was written.</span></span> <span data-ttu-id="6bda5-921">Se ele foi gravado com o descritor, você precisará ler o descritor.</span><span class="sxs-lookup"><span data-stu-id="6bda5-921">If it was written with the descriptor, you have to read the descriptor.</span></span> <span data-ttu-id="6bda5-922">Se o descritor não for usado, o tamanho e limites da matriz passaram para `FileGet` determinar o que ler.</span><span class="sxs-lookup"><span data-stu-id="6bda5-922">If the descriptor is not used, the size and bounds of the array passed into `FileGet` determine what to read.</span></span>  
  
     <span data-ttu-id="6bda5-923">O descritor especifica a classificação de matriz, o tamanho e os limites inferiores para cada classificação.</span><span class="sxs-lookup"><span data-stu-id="6bda5-923">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="6bda5-924">Seu comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="6bda5-924">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="6bda5-925">O comprimento do registro especificado pelo `RecordLength` parâmetro no `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessário para gravar os dados de matriz e o descritor de matriz.</span><span class="sxs-lookup"><span data-stu-id="6bda5-925">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="6bda5-926">Por exemplo, a seguinte declaração de matriz requer 218 bytes quando a matriz é gravada no disco.</span><span class="sxs-lookup"><span data-stu-id="6bda5-926">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#21)]  
  
     <span data-ttu-id="6bda5-927">218 bytes são distribuídos da seguinte maneira:</span><span class="sxs-lookup"><span data-stu-id="6bda5-927">The 218 bytes are distributed as follows:</span></span>  
  
    -   <span data-ttu-id="6bda5-928">18 bytes para o descritor: (2 + 8 \* 2)</span><span class="sxs-lookup"><span data-stu-id="6bda5-928">18 bytes for the descriptor: (2 + 8 \* 2)</span></span>  
  
    -   <span data-ttu-id="6bda5-929">200 bytes para os dados: (5 \* 10 \* 4).</span><span class="sxs-lookup"><span data-stu-id="6bda5-929">200 bytes for the data: (5 \* 10 \* 4).</span></span>  
  
-   <span data-ttu-id="6bda5-930">Se a variável que está sendo lida for qualquer outro tipo de variável (não uma cadeia de caracteres de comprimento variável ou um objeto), `FileGet` lê apenas os dados da variável.</span><span class="sxs-lookup"><span data-stu-id="6bda5-930">If the variable being read into is any other type of variable (not a variable-length string or an object), `FileGet` reads only the variable data.</span></span> <span data-ttu-id="6bda5-931">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual ao comprimento dos dados que está sendo lidos.</span><span class="sxs-lookup"><span data-stu-id="6bda5-931">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being read.</span></span>  
  
-   <span data-ttu-id="6bda5-932">`FileGet` lê os elementos de estruturas como se cada um estava sendo lido individualmente, exceto que não há nenhum preenchimento entre elementos.</span><span class="sxs-lookup"><span data-stu-id="6bda5-932">`FileGet` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="6bda5-933">No disco, uma matriz dinâmica em um tipo definido pelo usuário (escritos com `FilePut`) é prefixado por um descritor cujo comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="6bda5-933">On disk, a dynamic array in a user-defined type (written with `FilePut`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="6bda5-934">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessários para ler os elementos individuais.</span><span class="sxs-lookup"><span data-stu-id="6bda5-934">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements.</span></span> <span data-ttu-id="6bda5-935">Isso inclui qualquer matrizes e seus descritores.</span><span class="sxs-lookup"><span data-stu-id="6bda5-935">This includes any arrays and their descriptors.</span></span> <span data-ttu-id="6bda5-936">O `VBFixedString` atributo pode ser aplicado a campos de cadeia de caracteres em estruturas para indicar o tamanho de uma cadeia de caracteres quando gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="6bda5-936">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of a string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="6bda5-937">Modo binário</span><span class="sxs-lookup"><span data-stu-id="6bda5-937">Binary Mode</span></span>  
 <span data-ttu-id="6bda5-938">Para arquivos abertos no `Binary` modo, a maioria do `Random` modo regras se aplicam, com algumas exceções.</span><span class="sxs-lookup"><span data-stu-id="6bda5-938">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="6bda5-939">As seguintes regras para arquivos abertos no `Binary` modo são diferentes das regras para `Random` modo:</span><span class="sxs-lookup"><span data-stu-id="6bda5-939">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="6bda5-940">A cláusula `RecordLength` na função de `FileOpen` não está em vigor.</span><span class="sxs-lookup"><span data-stu-id="6bda5-940">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="6bda5-941">`FileGet` lê todas as variáveis do disco de maneira contígua; ou seja, sem nenhum preenchimento entre registros.</span><span class="sxs-lookup"><span data-stu-id="6bda5-941">`FileGet` reads all variables from disk contiguously; that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="6bda5-942">Para qualquer matriz que não seja uma matriz em uma estrutura, `FileGet` lê apenas os dados.</span><span class="sxs-lookup"><span data-stu-id="6bda5-942">For any array other than an array in a structure, `FileGet` reads only the data.</span></span> <span data-ttu-id="6bda5-943">Nenhum descritor é lido.</span><span class="sxs-lookup"><span data-stu-id="6bda5-943">No descriptor is read.</span></span>  
  
-   <span data-ttu-id="6bda5-944">`FileGet` lê cadeias de caracteres de comprimento variável que não são elementos das estruturas sem esperar o descritor de dois bytes de comprimento.</span><span class="sxs-lookup"><span data-stu-id="6bda5-944">`FileGet` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="6bda5-945">O número de bytes lidos é igual ao número de caracteres já na cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="6bda5-945">The number of bytes read equals the number of characters already in the string.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="6bda5-946">Leitura de um arquivo usando o `FileGet` função requer `Read` acessar do <xref:System.Security.Permissions.FileIOPermissionAccess> enumeração.</span><span class="sxs-lookup"><span data-stu-id="6bda5-946">Reading from a file by using the `FileGet` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6bda5-947">
            <paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-947">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="6bda5-948">O modo de arquivo é inválido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-948">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="FileGet">
      <MemberSignature Language="C#" Value="public static void FileGet (int FileNumber, ref Array Value, long RecordNumber = -1, bool ArrayIsDynamic = false, bool StringIsFixedLength = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGet(int32 FileNumber, class System.Array&amp; Value, int64 RecordNumber, bool ArrayIsDynamic, bool StringIsFixedLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Array@,System.Int64,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGet (FileNumber As Integer, ByRef Value As Array, Optional RecordNumber As Long = -1, Optional ArrayIsDynamic As Boolean = false, Optional StringIsFixedLength As Boolean = false)" />
      <MemberSignature Language="F#" Value="static member FileGet : int *  * int64 * bool * bool -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileGet (FileNumber, Value, RecordNumber, ArrayIsDynamic, StringIsFixedLength)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Array" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
        <Parameter Name="ArrayIsDynamic" Type="System.Boolean" />
        <Parameter Name="StringIsFixedLength" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="6bda5-949">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-949">Required.</span>
          </span>
          <span data-ttu-id="6bda5-950">Qualquer número de arquivo válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-950">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="6bda5-951">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-951">Required.</span>
          </span>
          <span data-ttu-id="6bda5-952">Nome de variável válido no qual os dados são lidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-952">Valid variable name into which data is read.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="6bda5-953">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-953">Optional.</span>
          </span>
          <span data-ttu-id="6bda5-954">Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a leitura começa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-954">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span>
          </span>
        </param>
        <param name="ArrayIsDynamic">
          <span data-ttu-id="6bda5-955">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-955">Optional.</span>
          </span>
          <span data-ttu-id="6bda5-956">Aplica-se somente ao gravar uma matriz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-956">Applies only when writing an array.</span>
          </span>
          <span data-ttu-id="6bda5-957">Especifica se a matriz deve ser tratada como dinâmica e se é necessário um descritor de matriz que descreve o tamanho e limites da matriz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-957">Specifies whether the array is to be treated as dynamic and whether an array descriptor describing the size and bounds of the array is necessary.</span>
          </span>
        </param>
        <param name="StringIsFixedLength">
          <span data-ttu-id="6bda5-958">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-958">Optional.</span>
          </span>
          <span data-ttu-id="6bda5-959">Aplica-se somente ao gravar uma cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-959">Applies only when writing a string.</span>
          </span>
          <span data-ttu-id="6bda5-960">Especifica se deve gravar um descritor de dois bytes para a cadeia de caracteres que descreve o tamanho.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-960">Specifies whether to write a two-byte descriptor for the string that describes the length.</span>
          </span>
          <span data-ttu-id="6bda5-961">O padrão é <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-961">The default is <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6bda5-962">Lê dados de um arquivo aberto de disco em uma variável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-962">Reads data from an open disk file into a variable.</span>
          </span>
          <span data-ttu-id="6bda5-963">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FileGet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-963">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span>
          </span>
          <span data-ttu-id="6bda5-964">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-964">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bda5-965">`FileGet` só é válido em `Random` e `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-965">`FileGet` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="6bda5-966">Dados lidos com `FileGet` costumam ser gravados em um arquivo usando-se `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-966">Data read with `FileGet` is usually written to a file by using `FilePut`.</span></span>  
  
 <span data-ttu-id="6bda5-967">O primeiro registro ou byte em um arquivo está na posição 1, o segundo registro ou byte está na posição 2 e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="6bda5-967">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="6bda5-968">Se você omitir `RecordNumber`, o próximo registro ou byte após a última `FileGet` ou `FilePut` função (ou apontada pela última `Seek` função) é lido.</span><span class="sxs-lookup"><span data-stu-id="6bda5-968">If you omit `RecordNumber`, the next record or byte following the last `FileGet` or `FilePut` function (or pointed to by the last `Seek` function) is read.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6bda5-969">Ao ler de arquivos, não tome decisões sobre o conteúdo de um arquivo com base na extensão de nome de arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-969">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="6bda5-970">Por exemplo, um arquivo chamado Form1.vb não pode ser um arquivo de origem do Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="6bda5-970">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="6bda5-971">Modo aleatório</span><span class="sxs-lookup"><span data-stu-id="6bda5-971">Random Mode</span></span>  
 <span data-ttu-id="6bda5-972">Para arquivos abertos no `Random` modo, as seguintes regras se aplicam:</span><span class="sxs-lookup"><span data-stu-id="6bda5-972">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="6bda5-973">Se o comprimento dos dados que está sendo lidos for menor que o comprimento especificado na `RecordLength` cláusula do `FileOpen` função, `FileGet` lê registros subsequentes em limites de comprimento de registro.</span><span class="sxs-lookup"><span data-stu-id="6bda5-973">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FileGet` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="6bda5-974">O espaço entre o final de um registro e o início do próximo registro é preenchido com o conteúdo existente no buffer de arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-974">The space between the end of one record and the starting of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="6bda5-975">Como a quantidade de dados de preenchimento não pode ser determinada com certeza, geralmente é uma boa ideia ter o comprimento do registro corresponde ao tamanho dos dados que está sendo lidos.</span><span class="sxs-lookup"><span data-stu-id="6bda5-975">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="6bda5-976">Por padrão, se a variável que está sendo lida é uma cadeia de caracteres, `FileGet` lê um descritor de dois bytes que contém o comprimento da cadeia de caracteres e, em seguida, lê os dados que vão para a variável.</span><span class="sxs-lookup"><span data-stu-id="6bda5-976">By default, if the variable being read into is a string, `FileGet` reads a two-byte descriptor that contains the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="6bda5-977">Portanto, o comprimento do registro especificado pelo `RecordLength` cláusula do `FileOpen` função deve ser pelo menos dois bytes maior do que o comprimento real da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="6bda5-977">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="6bda5-978">Visual Basic 6.0 e versões anteriores dão suporte a cadeias de caracteres de comprimento fixo; Quando colocado em um arquivo, o descritor de comprimento não é gravado.</span><span class="sxs-lookup"><span data-stu-id="6bda5-978">Visual Basic 6.0 and earlier versions support fixed-length strings; when put to a file, the length descriptor is not written.</span></span> <span data-ttu-id="6bda5-979">Se você deseja ler uma cadeia de caracteres sem o descritor, você deve passar `True` para o `StringIsFixedLength` parâmetro e a cadeia de caracteres lida deve ter o tamanho correto.</span><span class="sxs-lookup"><span data-stu-id="6bda5-979">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="6bda5-980">Se a variável que está sendo lida é uma matriz, você pode optar por ler um descritor para o tamanho e a dimensão da matriz.</span><span class="sxs-lookup"><span data-stu-id="6bda5-980">If the variable being read into is an array, you can choose whether to read a descriptor for the size and dimension of the array.</span></span> <span data-ttu-id="6bda5-981">Para gravar o descritor, defina as `ArrayIsDynamic` parâmetro para `True`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-981">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="6bda5-982">Ao ler a matriz, você precisa coincidir com a forma que de matriz foi escrita.</span><span class="sxs-lookup"><span data-stu-id="6bda5-982">When reading the array, you have to match the way the array was written.</span></span> <span data-ttu-id="6bda5-983">Se ele foi gravado com o descritor, você precisará ler o descritor.</span><span class="sxs-lookup"><span data-stu-id="6bda5-983">If it was written with the descriptor, you have to read the descriptor.</span></span> <span data-ttu-id="6bda5-984">Se o descritor não for usado, o tamanho e limites da matriz passaram para `FileGet` determinar o que ler.</span><span class="sxs-lookup"><span data-stu-id="6bda5-984">If the descriptor is not used, the size and bounds of the array passed into `FileGet` determine what to read.</span></span>  
  
     <span data-ttu-id="6bda5-985">O descritor especifica a classificação de matriz, o tamanho e os limites inferiores para cada classificação.</span><span class="sxs-lookup"><span data-stu-id="6bda5-985">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="6bda5-986">Seu comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="6bda5-986">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="6bda5-987">O comprimento do registro especificado pelo `RecordLength` parâmetro no `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessário para gravar os dados de matriz e o descritor de matriz.</span><span class="sxs-lookup"><span data-stu-id="6bda5-987">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="6bda5-988">Por exemplo, a seguinte declaração de matriz requer 218 bytes quando a matriz é gravada no disco.</span><span class="sxs-lookup"><span data-stu-id="6bda5-988">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#21)]  
  
     <span data-ttu-id="6bda5-989">218 bytes são distribuídos da seguinte maneira:</span><span class="sxs-lookup"><span data-stu-id="6bda5-989">The 218 bytes are distributed as follows:</span></span>  
  
    -   <span data-ttu-id="6bda5-990">18 bytes para o descritor: (2 + 8 \* 2)</span><span class="sxs-lookup"><span data-stu-id="6bda5-990">18 bytes for the descriptor: (2 + 8 \* 2)</span></span>  
  
    -   <span data-ttu-id="6bda5-991">200 bytes para os dados: (5 \* 10 \* 4).</span><span class="sxs-lookup"><span data-stu-id="6bda5-991">200 bytes for the data: (5 \* 10 \* 4).</span></span>  
  
-   <span data-ttu-id="6bda5-992">Se a variável que está sendo lida for qualquer outro tipo de variável (não uma cadeia de caracteres de comprimento variável ou um objeto), `FileGet` lê apenas os dados da variável.</span><span class="sxs-lookup"><span data-stu-id="6bda5-992">If the variable being read into is any other type of variable (not a variable-length string or an object), `FileGet` reads only the variable data.</span></span> <span data-ttu-id="6bda5-993">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual ao comprimento dos dados que está sendo lidos.</span><span class="sxs-lookup"><span data-stu-id="6bda5-993">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being read.</span></span>  
  
-   <span data-ttu-id="6bda5-994">`FileGet` lê os elementos de estruturas como se cada um estava sendo lido individualmente, exceto que não há nenhum preenchimento entre elementos.</span><span class="sxs-lookup"><span data-stu-id="6bda5-994">`FileGet` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="6bda5-995">No disco, uma matriz dinâmica em um tipo definido pelo usuário (escritos com `FilePut`) é prefixado por um descritor cujo comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="6bda5-995">On disk, a dynamic array in a user-defined type (written with `FilePut`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="6bda5-996">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessários para ler os elementos individuais.</span><span class="sxs-lookup"><span data-stu-id="6bda5-996">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements.</span></span> <span data-ttu-id="6bda5-997">Isso inclui qualquer matrizes e seus descritores.</span><span class="sxs-lookup"><span data-stu-id="6bda5-997">This includes any arrays and their descriptors.</span></span> <span data-ttu-id="6bda5-998">O `VBFixedString` atributo pode ser aplicado a campos de cadeia de caracteres em estruturas para indicar o tamanho de uma cadeia de caracteres quando gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="6bda5-998">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of a string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="6bda5-999">Modo binário</span><span class="sxs-lookup"><span data-stu-id="6bda5-999">Binary Mode</span></span>  
 <span data-ttu-id="6bda5-1000">Para arquivos abertos no `Binary` modo, a maioria do `Random` modo regras se aplicam, com algumas exceções.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1000">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="6bda5-1001">As seguintes regras para arquivos abertos no `Binary` modo são diferentes das regras para `Random` modo:</span><span class="sxs-lookup"><span data-stu-id="6bda5-1001">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="6bda5-1002">A cláusula `RecordLength` na função de `FileOpen` não está em vigor.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1002">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="6bda5-1003">`FileGet` lê todas as variáveis do disco de maneira contígua; ou seja, sem nenhum preenchimento entre registros.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1003">`FileGet` reads all variables from disk contiguously; that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="6bda5-1004">Para qualquer matriz que não seja uma matriz em uma estrutura, `FileGet` lê apenas os dados.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1004">For any array other than an array in a structure, `FileGet` reads only the data.</span></span> <span data-ttu-id="6bda5-1005">Nenhum descritor é lido.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1005">No descriptor is read.</span></span>  
  
-   <span data-ttu-id="6bda5-1006">`FileGet` lê cadeias de caracteres de comprimento variável que não são elementos das estruturas sem esperar o descritor de dois bytes de comprimento.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1006">`FileGet` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="6bda5-1007">O número de bytes lidos é igual ao número de caracteres já na cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1007">The number of bytes read equals the number of characters already in the string.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="6bda5-1008">Leitura de um arquivo usando o `FileGet` função requer `Read` acessar do <xref:System.Security.Permissions.FileIOPermissionAccess> enumeração.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1008">Reading from a file by using the `FileGet` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6bda5-1009">
            <paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1009">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="6bda5-1010">O modo de arquivo é inválido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1010">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="FileGetObject">
      <MemberSignature Language="C#" Value="public static void FileGetObject (int FileNumber, ref object Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGetObject(int32 FileNumber, object&amp; Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGetObject (FileNumber As Integer, ByRef Value As Object, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FileGetObject : int *  * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileGetObject (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Object" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="6bda5-1011">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1011">Required.</span>
          </span>
          <span data-ttu-id="6bda5-1012">Qualquer número de arquivo válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1012">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="6bda5-1013">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1013">Required.</span>
          </span>
          <span data-ttu-id="6bda5-1014">Nome de variável válido no qual os dados são lidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1014">Valid variable name into which data is read.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="6bda5-1015">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1015">Optional.</span>
          </span>
          <span data-ttu-id="6bda5-1016">Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a leitura começa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1016">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6bda5-1017">Lê dados de um arquivo aberto de disco em uma variável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1017">Reads data from an open disk file into a variable.</span>
          </span>
          <span data-ttu-id="6bda5-1018">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FileGetObject" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1018">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGetObject" />.</span>
          </span>
          <span data-ttu-id="6bda5-1019">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1019">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bda5-1020">O `FileGetObject` função é usada em vez de `FileGet` para evitar ambiguidades em tempo de compilação se tipo `Object` é retornado em vez de outro tipo, como `Integer`, `Long`, `Short`e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1020">The `FileGetObject` function is used instead of `FileGet` to avoid ambiguities at compile time if type `Object` is returned instead of another type, such as `Integer`, `Long`, `Short`, and so forth.</span></span>  
  
 <span data-ttu-id="6bda5-1021">Se você pretende gravar o `Variant` tipo, `FileGetObject` é necessária.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1021">If you intend to write out the `Variant` type, `FileGetObject` is required.</span></span> <span data-ttu-id="6bda5-1022">Em caso de dúvida, se você estiver usando um objeto para o segundo parâmetro, é sempre aconselhável que você use `FilePutObject` e `FileGetObject`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1022">When in doubt, if you are using an object for the second parameter, it is always suggested that you use `FilePutObject` and `FileGetObject`.</span></span>  
  
 <span data-ttu-id="6bda5-1023">`FileGetObject` só é válido em `Random` e `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1023">`FileGetObject` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="6bda5-1024">Dados lidos com `FileGetObject` geralmente são gravados com `FilePutObject`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1024">Data read with `FileGetObject` is usually written with `FilePutObject`.</span></span>  
  
 <span data-ttu-id="6bda5-1025">O primeiro registro ou byte em um arquivo está na posição 1, o segundo registro ou byte está na posição 2 e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1025">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="6bda5-1026">Se você omitir `RecordNumber`, `FileGetObject` lê o registro ou byte após a última `FileGetObject` ou `FilePutObject` função (ou apontada pela última `Seek` função).</span><span class="sxs-lookup"><span data-stu-id="6bda5-1026">If you omit `RecordNumber`, `FileGetObject` reads the record or byte after the last `FileGetObject` or `FilePutObject` function (or pointed to by the last `Seek` function).</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="6bda5-1027">Modo aleatório</span><span class="sxs-lookup"><span data-stu-id="6bda5-1027">Random Mode</span></span>  
 <span data-ttu-id="6bda5-1028">Para arquivos abertos no `Random` modo, as seguintes regras se aplicam:</span><span class="sxs-lookup"><span data-stu-id="6bda5-1028">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="6bda5-1029">Se o comprimento dos dados que está sendo lidos for menor que o comprimento especificado na `RecordLength` cláusula do `FileOpen` função, `FileGetObject` lê registros subsequentes em limites de comprimento de registro.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1029">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FileGetObject` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="6bda5-1030">O espaço entre o final de um registro e o início do próximo registro é preenchido com o conteúdo existente no buffer de arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1030">The space between the end of one record and the beginning of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="6bda5-1031">Como a quantidade de dados de preenchimento não pode ser determinada precisamente, é uma boa ideia ter o comprimento do registro corresponde ao tamanho dos dados que está sendo lidos.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1031">Because the amount of padding data cannot be precisely determined, it is a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="6bda5-1032">Se a variável que está sendo lida é uma cadeia de caracteres, por padrão `FileGetObject` lê um descritor de dois bytes que contém o comprimento da cadeia de caracteres e, em seguida, lê os dados que vão para a variável.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1032">If the variable being read into is a string, by default `FileGetObject` reads a two-byte descriptor containing the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="6bda5-1033">Portanto, o comprimento do registro especificado pelo `RecordLength` cláusula do `FileOpen` função deve ser pelo menos dois bytes maior do que o comprimento real da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1033">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="6bda5-1034">Visual Basic 6.0 e versões anteriores dão suporte a cadeias de caracteres de comprimento fixo e ao ler um arquivo, o descritor de comprimento não é gravado.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1034">Visual Basic 6.0 and earlier versions support fixed-length strings and when read to a file, the length descriptor is not written.</span></span> <span data-ttu-id="6bda5-1035">Se você deseja ler uma cadeia de caracteres sem o descritor, você deve passar `True` para o `StringIsFixedLength` parâmetro e a cadeia de caracteres lida deve ter o tamanho correto.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1035">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="6bda5-1036">Se a variável que está sendo lida é uma matriz e, em seguida, o comprimento do registro especificado pelo `RecordLength` parâmetro no `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessário para gravar os dados de matriz e o descritor de matriz.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1036">If the variable being read into is an array, then the record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="6bda5-1037">O descritor especifica a classificação de matriz, o tamanho e os limites inferiores para cada classificação.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1037">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="6bda5-1038">Seu comprimento é igual a 2 mais 8 vezes o número de dimensões: 2 + 8 \* NumberOfDimensions.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1038">Its length equals 2 plus 8 times the number of dimensions: 2 + 8 \* NumberOfDimensions.</span></span>  
  
     <span data-ttu-id="6bda5-1039">Por exemplo, a seguinte declaração de matriz requer 218 bytes quando a matriz é gravada no disco:</span><span class="sxs-lookup"><span data-stu-id="6bda5-1039">For example, the following array declaration requires 218 bytes when the array is written to disk:</span></span>  
  
     [!code-vb[VbVbalrCatRef#27](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#27)]  
  
     <span data-ttu-id="6bda5-1040">218 bytes são distribuídos da seguinte maneira: 18 bytes para o descritor (2 + 8 \* 2) e 100 bytes para os dados (5 \* 10 \* 4).</span><span class="sxs-lookup"><span data-stu-id="6bda5-1040">The 218 bytes are distributed as follows: 18 bytes for the descriptor (2 + 8 \* 2), and 100 bytes for the data (5 \* 10 \* 4).</span></span>  
  
-   <span data-ttu-id="6bda5-1041">`FileGetObject` lê os elementos de estruturas como se cada um estava sendo lido individualmente, exceto que não há nenhum preenchimento entre elementos.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1041">`FileGetObject` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="6bda5-1042">No disco, uma matriz dinâmica em um tipo definido pelo usuário (escritos com `FilePutObject`) é prefixado por um descritor cujo comprimento é igual a 2 mais 8 vezes o número de dimensões: 2 + 8 \* NumberOfDimensions.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1042">On disk, a dynamic array in a user-defined type (written with `FilePutObject`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: 2 + 8 \* NumberOfDimensions.</span></span> <span data-ttu-id="6bda5-1043">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessários para ler os elementos individuais, incluindo qualquer matrizes e seus descritores.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1043">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements, including any arrays and their descriptors.</span></span> <span data-ttu-id="6bda5-1044">O <xref:Microsoft.VisualBasic.VBFixedStringAttribute> classe pode ser aplicada a campos de cadeia de caracteres em estruturas para indicar o tamanho da cadeia de caracteres quando gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1044">The <xref:Microsoft.VisualBasic.VBFixedStringAttribute> class can be applied to string fields in the structures to indicate the size of string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="6bda5-1045">Modo binário</span><span class="sxs-lookup"><span data-stu-id="6bda5-1045">Binary Mode</span></span>  
 <span data-ttu-id="6bda5-1046">Para arquivos abertos no `Binary` modo, todos os `Random` regras se aplicam, com as seguintes exceções:</span><span class="sxs-lookup"><span data-stu-id="6bda5-1046">For files opened in `Binary` mode, all of the `Random` rules apply, with these exceptions:</span></span>  
  
-   <span data-ttu-id="6bda5-1047">A cláusula `RecordLength` na função de `FileOpen` não está em vigor.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1047">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="6bda5-1048">`FileGetObject` lê todas as variáveis do disco de forma contígua, ou seja, sem nenhum preenchimento entre registros.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1048">`FileGetObject` reads all variables from disk contiguously, that is, with no padding between records.</span></span>  
  
-   <span data-ttu-id="6bda5-1049">Para qualquer matriz que não seja uma matriz em uma estrutura, `FileGetObject` lê apenas os dados.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1049">For any array other than an array in a structure, `FileGetObject` reads only the data.</span></span> <span data-ttu-id="6bda5-1050">Nenhum descritor é lido.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1050">No descriptor is read.</span></span>  
  
 <span data-ttu-id="6bda5-1051">`FileGetObject` lê cadeias de caracteres de comprimento variável que não são elementos das estruturas sem esperar o descritor de dois bytes de comprimento.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1051">`FileGetObject` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="6bda5-1052">O número de bytes lidos é igual ao número de caracteres já na cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1052">The number of bytes read equals the number of characters already in the string.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6bda5-1053">Ao ler de arquivos, não tome decisões sobre o conteúdo de um arquivo com base na extensão de nome de arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1053">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="6bda5-1054">Por exemplo, um arquivo chamado Form1.vb não pode ser um arquivo de origem do Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1054">For example, a file named Form1.vb may not be a Visual Basic source file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6bda5-1055">O exemplo a seguir lê um registro em um arquivo de teste e, em seguida, irá recuperá-lo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1055">The following example reads a record into a test file and then retrieves it.</span></span>  
  
 [!code-vb[VbVbalrCatRef#26](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#26)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
      </Docs>
    </Member>
    <Member MemberName="FileLen">
      <MemberSignature Language="C#" Value="public static long FileLen (string PathName);" />
      <MemberSignature Language="ILAsm" Value=".method public static int64 FileLen(string PathName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileLen(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FileLen (PathName As String) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long FileLen(System::String ^ PathName);" />
      <MemberSignature Language="F#" Value="static member FileLen : string -&gt; int64" Usage="Microsoft.VisualBasic.FileSystem.FileLen PathName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="PathName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="PathName">
          <span data-ttu-id="6bda5-1056">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1056">Required.</span>
          </span>
          <span data-ttu-id="6bda5-1057">Expressão <see langword="String" /> que especifica um arquivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1057">
              <see langword="String" /> expression that specifies a file.</span>
          </span>
          <span data-ttu-id="6bda5-1058">
            <c>PathName</c> pode incluir o diretório ou a pasta, bem como a unidade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1058">
              <c>PathName</c> may include the directory or folder, and the drive.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6bda5-1059">Retorna um valor <see langword="Long" /> que especifica o tamanho de um arquivo em bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1059">Returns a <see langword="Long" /> value that specifies the length of a file in bytes.</span>
          </span>
          <span data-ttu-id="6bda5-1060">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FileLen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1060">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileLen" />.</span>
          </span>
          <span data-ttu-id="6bda5-1061">Para obter mais informações, consulte <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1061">For more information, see <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6bda5-1062">Valor <see langword="Long" /> que especifica o tamanho de um arquivo em bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1062">
              <see langword="Long" /> value that specifies the length of a file in bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bda5-1063">Se o arquivo especificado estiver aberto quando o `FileLen` função é chamada, o valor retornado representa o tamanho do arquivo no momento em que ele foi aberto.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1063">If the specified file is open when the `FileLen` function is called, the value returned represents the size of the file at the time it was opened.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6bda5-1064">Para obter o tamanho atual de um arquivo aberto, use o `LOF` função.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1064">To obtain the current length of an open file, use the `LOF` function.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6bda5-1065">Este exemplo usa o `FileLen` função para retornar o comprimento de um arquivo em bytes.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1065">This example uses the `FileLen` function to return the length of a file in bytes.</span></span> <span data-ttu-id="6bda5-1066">Para fins deste exemplo, suponha que `TestFile` é um arquivo que contém alguns dados.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1066">For purposes of this example, assume that `TestFile` is a file that contains some data.</span></span>  
  
 [!code-vb[VbVbalrCatRef#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="6bda5-1067">Arquivo inexistente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1067">File does not exist.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileDateTime(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.LOF(System.Int32)" />
        <altmember cref="T:System.IO.FileNotFoundException" />
      </Docs>
    </Member>
    <Member MemberName="FileOpen">
      <MemberSignature Language="C#" Value="public static void FileOpen (int FileNumber, string FileName, Microsoft.VisualBasic.OpenMode Mode, Microsoft.VisualBasic.OpenAccess Access = Microsoft.VisualBasic.OpenAccess.Default, Microsoft.VisualBasic.OpenShare Share = Microsoft.VisualBasic.OpenShare.Default, int RecordLength = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileOpen(int32 FileNumber, string FileName, valuetype Microsoft.VisualBasic.OpenMode Mode, valuetype Microsoft.VisualBasic.OpenAccess Access, valuetype Microsoft.VisualBasic.OpenShare Share, int32 RecordLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileOpen (FileNumber As Integer, FileName As String, Mode As OpenMode, Optional Access As OpenAccess = Microsoft.VisualBasic.OpenAccess.Default, Optional Share As OpenShare = Microsoft.VisualBasic.OpenShare.Default, Optional RecordLength As Integer = -1)" />
      <MemberSignature Language="F#" Value="static member FileOpen : int * string * Microsoft.VisualBasic.OpenMode * Microsoft.VisualBasic.OpenAccess * Microsoft.VisualBasic.OpenShare * int -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileOpen (FileNumber, FileName, Mode, Access, Share, RecordLength)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="FileName" Type="System.String" />
        <Parameter Name="Mode" Type="Microsoft.VisualBasic.OpenMode" />
        <Parameter Name="Access" Type="Microsoft.VisualBasic.OpenAccess" />
        <Parameter Name="Share" Type="Microsoft.VisualBasic.OpenShare" />
        <Parameter Name="RecordLength" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="6bda5-1068">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1068">Required.</span>
          </span>
          <span data-ttu-id="6bda5-1069">Qualquer número de arquivo válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1069">Any valid file number.</span>
          </span>
          <span data-ttu-id="6bda5-1070">Use a função de <see langword="FreeFile" /> para obter o próximo número disponível de arquivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1070">Use the <see langword="FreeFile" /> function to obtain the next available file number.</span>
          </span>
        </param>
        <param name="FileName">
          <span data-ttu-id="6bda5-1071">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1071">Required.</span>
          </span>
          <span data-ttu-id="6bda5-1072">Expressão <see langword="String" /> que especifica um nome de arquivo — pode incluir o diretório ou pasta, e unidade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1072">
              <see langword="String" /> expression that specifies a file name—may include directory or folder, and drive.</span>
          </span>
        </param>
        <param name="Mode">
          <span data-ttu-id="6bda5-1073">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1073">Required.</span>
          </span>
          <span data-ttu-id="6bda5-1074">Enumeração especificando o modo de arquivo: <see langword="Append" />, <see langword="Binary" />, <see langword="Input" />, <see langword="Output" /> ou <see langword="Random" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1074">Enumeration specifying the file mode: <see langword="Append" />, <see langword="Binary" />, <see langword="Input" />, <see langword="Output" />, or <see langword="Random" />.</span>
          </span>
          <span data-ttu-id="6bda5-1075">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.OpenMode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1075">For more information, see <see cref="T:Microsoft.VisualBasic.OpenMode" /> .</span>
          </span>
        </param>
        <param name="Access">
          <span data-ttu-id="6bda5-1076">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1076">Optional.</span>
          </span>
          <span data-ttu-id="6bda5-1077">Enumeração especificando as operações permitidas no arquivo aberto: <see langword="Read" />, <see langword="Write" /> ou <see langword="ReadWrite" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1077">Enumeration specifying the operations permitted on the open file: <see langword="Read" />, <see langword="Write" />, or <see langword="ReadWrite" />.</span>
          </span>
          <span data-ttu-id="6bda5-1078">Assume o padrão de <see langword="ReadWrite" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1078">Defaults to <see langword="ReadWrite" />.</span>
          </span>
          <span data-ttu-id="6bda5-1079">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.OpenAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1079">For more information, see <see cref="T:Microsoft.VisualBasic.OpenAccess" /> .</span>
          </span>
        </param>
        <param name="Share">
          <span data-ttu-id="6bda5-1080">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1080">Optional.</span>
          </span>
          <span data-ttu-id="6bda5-1081">Enumeração especificando as operações não permitidas no arquivo aberto: <see langword="Shared" />, <see langword="Lock Read" />, <see langword="Lock Write" /> ou <see langword="Lock Read Write" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1081">Enumeration specifying the operations not permitted on the open file by other processes: <see langword="Shared" />, <see langword="Lock Read" />, <see langword="Lock Write" />, and <see langword="Lock Read Write" />.</span>
          </span>
          <span data-ttu-id="6bda5-1082">Assume o padrão de <see langword="Lock Read Write" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1082">Defaults to <see langword="Lock Read Write" />.</span>
          </span>
          <span data-ttu-id="6bda5-1083">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.OpenShare" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1083">For more information, see <see cref="T:Microsoft.VisualBasic.OpenShare" /> .</span>
          </span>
        </param>
        <param name="RecordLength">
          <span data-ttu-id="6bda5-1084">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1084">Optional.</span>
          </span>
          <span data-ttu-id="6bda5-1085">Número menor que ou igual a 32.767 (bytes).</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1085">Number less than or equal to 32,767 (bytes).</span>
          </span>
          <span data-ttu-id="6bda5-1086">Para arquivos abertos para acesso aleatório, esse valor é o tamanho do registro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1086">For files opened for random access, this value is the record length.</span>
          </span>
          <span data-ttu-id="6bda5-1087">Para arquivos sequenciais, esse valor é o número de caracteres armazenados em buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1087">For sequential files, this value is the number of characters buffered.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6bda5-1088">Abre um arquivo para entrada ou saída.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1088">Opens a file for input or output.</span>
          </span>
          <span data-ttu-id="6bda5-1089">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FileOpen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1089">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileOpen" />.</span>
          </span>
          <span data-ttu-id="6bda5-1090">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1090">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bda5-1091">O `FileOpen` função é fornecida para compatibilidade com versões anteriores e pode afetar o desempenho.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1091">The `FileOpen` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="6bda5-1092">Para aplicativos não herdadas, o `My.Computer.FileSystem` objeto fornece um melhor desempenho.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1092">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="6bda5-1093">Para obter mais informações, consulte [acesso a arquivos com o Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="6bda5-1093">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="6bda5-1094">Você deve abrir um arquivo antes de qualquer operação de e/s pode ser executada nele.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1094">You must open a file before any I/O operation can be performed on it.</span></span> <span data-ttu-id="6bda5-1095">`FileOpen` aloca um buffer de e/s para o arquivo e determina o modo de acesso para usar com o buffer.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1095">`FileOpen` allocates a buffer for I/O to the file and determines the mode of access to use with the buffer.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6bda5-1096">Ao gravar em um arquivo, um aplicativo pode ter que criar um arquivo, se não existir o arquivo ao qual ele está tentando gravar.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1096">When writing to a file, an application may have to create a file, if the file to which it is trying to write does not exist.</span></span> <span data-ttu-id="6bda5-1097">Para fazer isso, ele precisa de permissão para o diretório no qual o arquivo deve ser criado.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1097">To do so, it needs permission for the directory in which the file is to be created.</span></span> <span data-ttu-id="6bda5-1098">No entanto, se o arquivo especificado por `FileName` existir, o aplicativo precisa `Write` permissão somente para o arquivo propriamente dito.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1098">However, if the file specified by `FileName` does exist, the application needs `Write` permission only to the file itself.</span></span> <span data-ttu-id="6bda5-1099">Sempre que possível, para ajudar a melhorar a segurança, criar o arquivo durante a implantação e grant `Write` permissão a esse arquivo único, em vez de para todo o diretório.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1099">Wherever possible, to help improve security, create the file during deployment and grant `Write` permission to that file only, instead of to the whole directory.</span></span> <span data-ttu-id="6bda5-1100">Para ajudar a aprimorar a segurança, gravar dados em diretórios de usuário em vez de para o diretório raiz ou o diretório de arquivos de programas.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1100">To help improve security, write data to user directories instead of to the root directory or the Program Files directory.</span></span>  
  
 <span data-ttu-id="6bda5-1101">Para abrir o canal pode ser encontrado usando o `FreeFile()` função.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1101">The channel to open can be found by using the `FreeFile()` function.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6bda5-1102">O `FileOpen` função requer `Read` acessar a partir de `FileIOPermissionAccess` enumeração, que pode afetar sua execução em situações de confiança parcial.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1102">The `FileOpen` function requires `Read` access from the `FileIOPermissionAccess` enumeration, which may affect its execution in partial trust situations.</span></span> <span data-ttu-id="6bda5-1103">Para obter mais informações, consulte <xref:System.Security.Permissions.FileIOPermissionAccess> enumeração.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1103">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6bda5-1104">Este exemplo ilustra vários usos do `FileOpen` função para habilitar a entrada e saída para um arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1104">This example illustrates various uses of the `FileOpen` function to enable input and output to a file.</span></span>  
  
 <span data-ttu-id="6bda5-1105">O código a seguir abre o arquivo `TestFile` em `Input` modo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1105">The following code opens the file `TestFile` in `Input` mode.</span></span>  
  
 [!code-vb[VbVbalrCatRef#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#5)]  
  
 <span data-ttu-id="6bda5-1106">Este exemplo abre o arquivo no `Binary` modo para gravar somente operações.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1106">This example opens the file in `Binary` mode for writing operations only.</span></span>  
  
 [!code-vb[VbVbalrCatRef#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#6)]  
  
 <span data-ttu-id="6bda5-1107">O exemplo a seguir abre o arquivo no `Random` modo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1107">The following example opens the file in `Random` mode.</span></span> <span data-ttu-id="6bda5-1108">O arquivo contiver registros da estrutura `Person`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1108">The file contains records of the structure `Person`.</span></span>  
  
 [!code-vb[VbVbalrCatRef#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#7)]  
  
 <span data-ttu-id="6bda5-1109">Este exemplo de código abre o arquivo no `Output` modo; qualquer possível de processo de leitura ou gravação em um arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1109">This code example opens the file in `Output` mode; any process can read or write to file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#8)]  
  
 <span data-ttu-id="6bda5-1110">Este exemplo de código abre o arquivo no `Binary` modo para leitura; outros processos não é possível ler o arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1110">This code example opens the file in `Binary` mode for reading; other processes cannot read file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#9](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6bda5-1111">tamanho do registro é negativo (e não é igual a -1).</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1111">Record length is negative (and not equal to -1).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="6bda5-1112">
            <paramref name="FileName" /> já está aberto ou <paramref name="FileName" /> é inválido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1112">
              <paramref name="FileName" /> is already open, or <paramref name="FileName" /> is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileClose(System.Int32[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FreeFile" />
      </Docs>
    </Member>
    <MemberGroup MemberName="FilePut">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6bda5-1113">Grava dados de uma variável em um arquivo de disco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1113">Writes data from a variable to a disk file.</span>
          </span>
          <span data-ttu-id="6bda5-1114">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FilePut" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1114">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span>
          </span>
          <span data-ttu-id="6bda5-1115">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1115">F For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (int FileNumber, bool Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(int32 FileNumber, bool Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Boolean,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Integer, Value As Boolean, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FilePut : int * bool * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FilePut (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Boolean" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="6bda5-1116">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1116">Required.</span>
          </span>
          <span data-ttu-id="6bda5-1117">Qualquer número de arquivo válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1117">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="6bda5-1118">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1118">Required.</span>
          </span>
          <span data-ttu-id="6bda5-1119">Nome de variável válido que contém dados gravados em disco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1119">Valid variable name that contains data written to disk.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="6bda5-1120">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1120">Optional.</span>
          </span>
          <span data-ttu-id="6bda5-1121">Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a gravação começa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1121">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6bda5-1122">Grava dados de uma variável em um arquivo de disco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1122">Writes data from a variable to a disk file.</span>
          </span>
          <span data-ttu-id="6bda5-1123">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FilePut" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1123">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span>
          </span>
          <span data-ttu-id="6bda5-1124">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1124">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bda5-1125">`FilePut` só é válido em `Random` e `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1125">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="6bda5-1126">Dados gravados com `FilePut` costumam ser lidos a partir de um arquivo usando `FileGet`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1126">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="6bda5-1127">O primeiro registro ou byte em um arquivo está na posição 1, o segundo registro ou byte está na posição 2 e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1127">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="6bda5-1128">Se você omitir `RecordNumber`, o próximo registro ou byte após a última `FileGet` ou `FilePut` funcionar ou apontado pela última `Seek` função é escrita.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1128">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="6bda5-1129">O argumento `StringIsFixedLength` controla se a função interpreta cadeias de caracteres como sendo de tamanho variável ou fixo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1129">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="6bda5-1130">`FilePut` não grava o descritor do tamanho quando o argumento é `True`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1130">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="6bda5-1131">Se você usar `StringIsFixedLength`  =  `True` com `FilePut`, você precisa fazer o mesmo com `FileGet`, e você precisa certificar-se de que a cadeia de caracteres é inicializada com o tamanho esperado.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1131">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="6bda5-1132">Modo aleatório</span><span class="sxs-lookup"><span data-stu-id="6bda5-1132">Random Mode</span></span>  
 <span data-ttu-id="6bda5-1133">Para arquivos abertos no `Random` modo, as seguintes regras se aplicam:</span><span class="sxs-lookup"><span data-stu-id="6bda5-1133">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="6bda5-1134">Se o comprimento dos dados que estão sendo gravados for menor que o comprimento especificado na `RecordLength` cláusula do `FileOpen` função, `FilePut` grava registros subsequentes em limites de comprimento de registro.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1134">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="6bda5-1135">O espaço entre o final de um registro e o início do próximo registro é preenchido com o conteúdo existente no buffer de arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1135">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="6bda5-1136">Como a quantidade de dados de preenchimento não pode ser determinada com certeza, geralmente é uma boa ideia ter o comprimento do registro corresponde ao tamanho dos dados que estão sendo gravados.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1136">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="6bda5-1137">Se o comprimento dos dados que estão sendo gravados for maior que o comprimento especificado na `RecordLength` cláusula do `FileOpen` função, uma exceção será gerada.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1137">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="6bda5-1138">Caso a variável que está sendo gravada seja uma cadeia de caracteres, `FilePut` grava um descritor de dois bytes que contém o tamanho da cadeia de caracteres e, em seguida, grava os dados que vão para a variável.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1138">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="6bda5-1139">Portanto, o comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser pelo menos dois bytes maior do que o comprimento real da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1139">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="6bda5-1140">Caso a variável que está sendo gravada seja um objeto que contém um tipo numérico, `FilePut` grava dois bytes que identificam o `VarType` do objeto e, em seguida, grava a variável.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1140">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="6bda5-1141">Por exemplo, ao escrever um objeto que contém um número inteiro, `FilePut` grava seis bytes: dois bytes que identificam o objeto como `VarType(3)` (`Integer`) e quatro bytes que contêm os dados.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1141">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="6bda5-1142">O comprimento do registro especificado pelo `RecordLength` parâmetro no `FileOpen` função deve ser pelo menos dois bytes maior do que o número real de bytes necessários para armazenar a variável.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1142">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="6bda5-1143">Se a variável que está sendo gravada for um objeto que contém uma cadeia de caracteres `FilePut` grava um descritor de dois bytes que identifica o `VarType(8)` do objeto, um descritor de dois bytes indicando o comprimento da cadeia de caracteres e, em seguida, grava os dados de cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1143">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="6bda5-1144">O comprimento do registro especificado pelo `RecordLength` parâmetro no `FileOpen` função deve ser maior que o comprimento real da cadeia de caracteres de pelo menos quatro bytes.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1144">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="6bda5-1145">Caso queira colocar uma cadeia de caracteres sem o descritor, você deve passar `True` para o parâmetro `StringIsFixedLength`, e a cadeia de caracteres lida deve ter o tamanho correto.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1145">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="6bda5-1146">Caso a variável gravada seja uma matriz, você tem a opção de gravar ou não um descritor para o tamanho e as dimensões da matriz.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1146">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="6bda5-1147">O descritor de arquivo para uma matriz dinâmica, mas não para uma matriz de tamanho fixo de gravação do Visual Basic 6.0 e versões anteriores.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1147">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="6bda5-1148">O padrão do Visual Basic 2005 é não gravar o descritor.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1148">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="6bda5-1149">Para gravar o descritor, defina as `ArrayIsDynamic` parâmetro para `True`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1149">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="6bda5-1150">Ao escrever a matriz, você precisa comparar a forma com que a matriz será lida; se ela for lida com o descritor, você precisará escrever o descritor.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1150">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="6bda5-1151">O descritor especifica a classificação de matriz, o tamanho e os limites inferiores para cada classificação.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1151">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="6bda5-1152">Seu comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="6bda5-1152">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="6bda5-1153">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessário para gravar os dados de matriz e o descritor de matriz.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1153">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="6bda5-1154">Por exemplo, a seguinte declaração de matriz requer 218 bytes quando a matriz é gravada no disco.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1154">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="6bda5-1155">Se a variável que está sendo gravada for qualquer outro tipo de variável (não uma cadeia de caracteres de comprimento variável ou um objeto), `FilePut` grava apenas os dados da variável.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1155">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="6bda5-1156">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual ao comprimento dos dados que estão sendo gravados.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1156">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="6bda5-1157">`FilePut` grava os elementos de estruturas como se cada um fosse escrito individualmente, exceto que não há nenhum preenchimento entre os elementos.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1157">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="6bda5-1158">O `VBFixedString` atributo pode ser aplicado a campos de cadeia de caracteres em estruturas para indicar o tamanho da cadeia de caracteres quando gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1158">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="6bda5-1159">Os campos que têm mais bytes que o especificado pela cadeia de caracteres a `VBFixedString` atributo são truncados quando gravados em disco,</span><span class="sxs-lookup"><span data-stu-id="6bda5-1159">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="6bda5-1160">Modo binário</span><span class="sxs-lookup"><span data-stu-id="6bda5-1160">Binary Mode</span></span>  
 <span data-ttu-id="6bda5-1161">Para arquivos abertos no `Binary` modo, a maioria do `Random` modo regras se aplicam, com algumas exceções.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1161">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="6bda5-1162">As seguintes regras para arquivos abertos no `Binary` modo são diferentes das regras para `Random` modo:</span><span class="sxs-lookup"><span data-stu-id="6bda5-1162">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="6bda5-1163">A cláusula `RecordLength` na função de `FileOpen` não está em vigor.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1163">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="6bda5-1164">`FilePut` grava todas as variáveis em disco de maneira contígua, ou seja, sem preenchimento entre os registros.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1164">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="6bda5-1165">Para qualquer matriz que não seja uma matriz em uma estrutura, `FilePut` grava apenas os dados.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1165">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="6bda5-1166">Nenhum descritor é escrito.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1166">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="6bda5-1167">`FilePut` Grava cadeias de caracteres de comprimento variável que não são elementos das estruturas sem o descritor de dois bytes de comprimento.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1167">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="6bda5-1168">O número de bytes gravados é igual ao número de caracteres na cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1168">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="6bda5-1169">Por exemplo, as instruções a seguir escrever 11 bytes no arquivo número 1:</span><span class="sxs-lookup"><span data-stu-id="6bda5-1169">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="6bda5-1170">A gravação em um arquivo usando a função `FilePut` requer o acesso `Write` da enumeração <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1170">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6bda5-1171">Este exemplo usa o `FilePut` função para gravar dados em um arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1171">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="6bda5-1172">Cinco registros da estrutura `Person` são gravados no arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1172">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6bda5-1173">
            <paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1173">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="6bda5-1174">O modo de arquivo é inválido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1174">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (int FileNumber, byte Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(int32 FileNumber, unsigned int8 Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Byte,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Integer, Value As Byte, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FilePut : int * byte * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FilePut (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Byte" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="6bda5-1175">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1175">Required.</span>
          </span>
          <span data-ttu-id="6bda5-1176">Qualquer número de arquivo válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1176">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="6bda5-1177">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1177">Required.</span>
          </span>
          <span data-ttu-id="6bda5-1178">Nome de variável válido que contém dados gravados em disco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1178">Valid variable name that contains data written to disk.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="6bda5-1179">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1179">Optional.</span>
          </span>
          <span data-ttu-id="6bda5-1180">Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a gravação começa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1180">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6bda5-1181">Grava dados de uma variável em um arquivo de disco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1181">Writes data from a variable to a disk file.</span>
          </span>
          <span data-ttu-id="6bda5-1182">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FilePut" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1182">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span>
          </span>
          <span data-ttu-id="6bda5-1183">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1183">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bda5-1184">`FilePut` só é válido em `Random` e `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1184">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="6bda5-1185">Dados gravados com `FilePut` costumam ser lidos a partir de um arquivo usando `FileGet`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1185">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="6bda5-1186">O primeiro registro ou byte em um arquivo está na posição 1, o segundo registro ou byte está na posição 2 e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1186">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="6bda5-1187">Se você omitir `RecordNumber`, o próximo registro ou byte após a última `FileGet` ou `FilePut` funcionar ou apontado pela última `Seek` função é escrita.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1187">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="6bda5-1188">O argumento `StringIsFixedLength` controla se a função interpreta cadeias de caracteres como sendo de tamanho variável ou fixo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1188">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="6bda5-1189">`FilePut` não grava o descritor do tamanho quando o argumento é `True`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1189">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="6bda5-1190">Se você usar `StringIsFixedLength`  =  `True` com `FilePut`, você precisa fazer o mesmo com `FileGet`, e você precisa certificar-se de que a cadeia de caracteres é inicializada com o tamanho esperado.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1190">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="6bda5-1191">Modo aleatório</span><span class="sxs-lookup"><span data-stu-id="6bda5-1191">Random Mode</span></span>  
 <span data-ttu-id="6bda5-1192">Para arquivos abertos no `Random` modo, as seguintes regras se aplicam:</span><span class="sxs-lookup"><span data-stu-id="6bda5-1192">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="6bda5-1193">Se o comprimento dos dados que estão sendo gravados for menor que o comprimento especificado na `RecordLength` cláusula do `FileOpen` função, `FilePut` grava registros subsequentes em limites de comprimento de registro.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1193">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="6bda5-1194">O espaço entre o final de um registro e o início do próximo registro é preenchido com o conteúdo existente no buffer de arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1194">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="6bda5-1195">Como a quantidade de dados de preenchimento não pode ser determinada com certeza, geralmente é uma boa ideia ter o comprimento do registro corresponde ao tamanho dos dados que estão sendo gravados.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1195">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="6bda5-1196">Se o comprimento dos dados que estão sendo gravados for maior que o comprimento especificado na `RecordLength` cláusula do `FileOpen` função, uma exceção será gerada.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1196">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="6bda5-1197">Caso a variável que está sendo gravada seja uma cadeia de caracteres, `FilePut` grava um descritor de dois bytes que contém o tamanho da cadeia de caracteres e, em seguida, grava os dados que vão para a variável.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1197">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="6bda5-1198">Portanto, o comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser pelo menos dois bytes maior do que o comprimento real da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1198">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="6bda5-1199">Caso a variável que está sendo gravada seja um objeto que contém um tipo numérico, `FilePut` grava dois bytes que identificam o `VarType` do objeto e, em seguida, grava a variável.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1199">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="6bda5-1200">Por exemplo, ao escrever um objeto que contém um número inteiro, `FilePut` grava seis bytes: dois bytes que identificam o objeto como `VarType(3)` (`Integer`) e quatro bytes que contêm os dados.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1200">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="6bda5-1201">O comprimento do registro especificado pelo `RecordLength` parâmetro no `FileOpen` função deve ser pelo menos dois bytes maior do que o número real de bytes necessários para armazenar a variável.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1201">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="6bda5-1202">Se a variável que está sendo gravada for um objeto que contém uma cadeia de caracteres `FilePut` grava um descritor de dois bytes que identifica o `VarType(8)` do objeto, um descritor de dois bytes indicando o comprimento da cadeia de caracteres e, em seguida, grava os dados de cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1202">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="6bda5-1203">O comprimento do registro especificado pelo `RecordLength` parâmetro no `FileOpen` função deve ser maior que o comprimento real da cadeia de caracteres de pelo menos quatro bytes.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1203">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="6bda5-1204">Caso queira colocar uma cadeia de caracteres sem o descritor, você deve passar `True` para o parâmetro `StringIsFixedLength`, e a cadeia de caracteres lida deve ter o tamanho correto.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1204">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="6bda5-1205">Caso a variável gravada seja uma matriz, você tem a opção de gravar ou não um descritor para o tamanho e as dimensões da matriz.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1205">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="6bda5-1206">O descritor de arquivo para uma matriz dinâmica, mas não para uma matriz de tamanho fixo de gravação do Visual Basic 6.0 e versões anteriores.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1206">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="6bda5-1207">O padrão do Visual Basic 2005 é não gravar o descritor.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1207">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="6bda5-1208">Para gravar o descritor, defina as `ArrayIsDynamic` parâmetro para `True`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1208">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="6bda5-1209">Ao escrever a matriz, você precisa comparar a forma com que a matriz será lida; se ela for lida com o descritor, você precisará escrever o descritor.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1209">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="6bda5-1210">O descritor especifica a classificação de matriz, o tamanho e os limites inferiores para cada classificação.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1210">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="6bda5-1211">Seu comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="6bda5-1211">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="6bda5-1212">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessário para gravar os dados de matriz e o descritor de matriz.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1212">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="6bda5-1213">Por exemplo, a seguinte declaração de matriz requer 218 bytes quando a matriz é gravada no disco.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1213">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="6bda5-1214">Se a variável que está sendo gravada for qualquer outro tipo de variável (não uma cadeia de caracteres de comprimento variável ou um objeto), `FilePut` grava apenas os dados da variável.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1214">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="6bda5-1215">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual ao comprimento dos dados que estão sendo gravados.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1215">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="6bda5-1216">`FilePut` grava os elementos de estruturas como se cada um fosse escrito individualmente, exceto que não há nenhum preenchimento entre os elementos.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1216">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="6bda5-1217">O `VBFixedString` atributo pode ser aplicado a campos de cadeia de caracteres em estruturas para indicar o tamanho da cadeia de caracteres quando gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1217">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="6bda5-1218">Os campos que têm mais bytes que o especificado pela cadeia de caracteres a `VBFixedString` atributo são truncados quando gravados em disco,</span><span class="sxs-lookup"><span data-stu-id="6bda5-1218">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="6bda5-1219">Modo binário</span><span class="sxs-lookup"><span data-stu-id="6bda5-1219">Binary Mode</span></span>  
 <span data-ttu-id="6bda5-1220">Para arquivos abertos no `Binary` modo, a maioria do `Random` modo regras se aplicam, com algumas exceções.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1220">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="6bda5-1221">As seguintes regras para arquivos abertos no `Binary` modo são diferentes das regras para `Random` modo:</span><span class="sxs-lookup"><span data-stu-id="6bda5-1221">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="6bda5-1222">A cláusula `RecordLength` na função de `FileOpen` não está em vigor.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1222">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="6bda5-1223">`FilePut` grava todas as variáveis em disco de maneira contígua, ou seja, sem preenchimento entre os registros.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1223">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="6bda5-1224">Para qualquer matriz que não seja uma matriz em uma estrutura, `FilePut` grava apenas os dados.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1224">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="6bda5-1225">Nenhum descritor é escrito.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1225">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="6bda5-1226">`FilePut` Grava cadeias de caracteres de comprimento variável que não são elementos das estruturas sem o descritor de dois bytes de comprimento.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1226">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="6bda5-1227">O número de bytes gravados é igual ao número de caracteres na cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1227">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="6bda5-1228">Por exemplo, as instruções a seguir escrever 11 bytes no arquivo número 1:</span><span class="sxs-lookup"><span data-stu-id="6bda5-1228">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="6bda5-1229">A gravação em um arquivo usando a função `FilePut` requer o acesso `Write` da enumeração <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1229">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6bda5-1230">Este exemplo usa o `FilePut` função para gravar dados em um arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1230">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="6bda5-1231">Cinco registros da estrutura `Person` são gravados no arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1231">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6bda5-1232">
            <paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1232">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="6bda5-1233">O modo de arquivo é inválido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1233">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (int FileNumber, char Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(int32 FileNumber, char Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Char,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Integer, Value As Char, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FilePut : int * char * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FilePut (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Char" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="6bda5-1234">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1234">Required.</span>
          </span>
          <span data-ttu-id="6bda5-1235">Qualquer número de arquivo válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1235">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="6bda5-1236">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1236">Required.</span>
          </span>
          <span data-ttu-id="6bda5-1237">Nome de variável válido que contém dados gravados em disco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1237">Valid variable name that contains data written to disk.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="6bda5-1238">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1238">Optional.</span>
          </span>
          <span data-ttu-id="6bda5-1239">Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a gravação começa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1239">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6bda5-1240">Grava dados de uma variável em um arquivo de disco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1240">Writes data from a variable to a disk file.</span>
          </span>
          <span data-ttu-id="6bda5-1241">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FilePut" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1241">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span>
          </span>
          <span data-ttu-id="6bda5-1242">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1242">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bda5-1243">`FilePut` só é válido em `Random` e `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1243">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="6bda5-1244">Dados gravados com `FilePut` costumam ser lidos a partir de um arquivo usando `FileGet`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1244">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="6bda5-1245">O primeiro registro ou byte em um arquivo está na posição 1, o segundo registro ou byte está na posição 2 e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1245">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="6bda5-1246">Se você omitir `RecordNumber`, o próximo registro ou byte após a última `FileGet` ou `FilePut` funcionar ou apontado pela última `Seek` função é escrita.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1246">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="6bda5-1247">O argumento `StringIsFixedLength` controla se a função interpreta cadeias de caracteres como sendo de tamanho variável ou fixo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1247">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="6bda5-1248">`FilePut` não grava o descritor do tamanho quando o argumento é `True`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1248">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="6bda5-1249">Se você usar `StringIsFixedLength`  =  `True` com `FilePut`, você precisa fazer o mesmo com `FileGet`, e você precisa certificar-se de que a cadeia de caracteres é inicializada com o tamanho esperado.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1249">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="6bda5-1250">Modo aleatório</span><span class="sxs-lookup"><span data-stu-id="6bda5-1250">Random Mode</span></span>  
 <span data-ttu-id="6bda5-1251">Para arquivos abertos no `Random` modo, as seguintes regras se aplicam:</span><span class="sxs-lookup"><span data-stu-id="6bda5-1251">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="6bda5-1252">Se o comprimento dos dados que estão sendo gravados for menor que o comprimento especificado na `RecordLength` cláusula do `FileOpen` função, `FilePut` grava registros subsequentes em limites de comprimento de registro.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1252">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="6bda5-1253">O espaço entre o final de um registro e o início do próximo registro é preenchido com o conteúdo existente no buffer de arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1253">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="6bda5-1254">Como a quantidade de dados de preenchimento não pode ser determinada com certeza, geralmente é uma boa ideia ter o comprimento do registro corresponde ao tamanho dos dados que estão sendo gravados.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1254">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="6bda5-1255">Se o comprimento dos dados que estão sendo gravados for maior que o comprimento especificado na `RecordLength` cláusula do `FileOpen` função, uma exceção será gerada.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1255">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="6bda5-1256">Caso a variável que está sendo gravada seja uma cadeia de caracteres, `FilePut` grava um descritor de dois bytes que contém o tamanho da cadeia de caracteres e, em seguida, grava os dados que vão para a variável.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1256">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="6bda5-1257">Portanto, o comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser pelo menos dois bytes maior do que o comprimento real da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1257">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="6bda5-1258">Caso a variável que está sendo gravada seja um objeto que contém um tipo numérico, `FilePut` grava dois bytes que identificam o `VarType` do objeto e, em seguida, grava a variável.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1258">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="6bda5-1259">Por exemplo, ao escrever um objeto que contém um número inteiro, `FilePut` grava seis bytes: dois bytes que identificam o objeto como `VarType(3)` (`Integer`) e quatro bytes que contêm os dados.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1259">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="6bda5-1260">O comprimento do registro especificado pelo `RecordLength` parâmetro no `FileOpen` função deve ser pelo menos dois bytes maior do que o número real de bytes necessários para armazenar a variável.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1260">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="6bda5-1261">Se a variável que está sendo gravada for um objeto que contém uma cadeia de caracteres `FilePut` grava um descritor de dois bytes que identifica o `VarType(8)` do objeto, um descritor de dois bytes indicando o comprimento da cadeia de caracteres e, em seguida, grava os dados de cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1261">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="6bda5-1262">O comprimento do registro especificado pelo `RecordLength` parâmetro no `FileOpen` função deve ser maior que o comprimento real da cadeia de caracteres de pelo menos quatro bytes.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1262">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="6bda5-1263">Caso queira colocar uma cadeia de caracteres sem o descritor, você deve passar `True` para o parâmetro `StringIsFixedLength`, e a cadeia de caracteres lida deve ter o tamanho correto.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1263">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="6bda5-1264">Caso a variável gravada seja uma matriz, você tem a opção de gravar ou não um descritor para o tamanho e as dimensões da matriz.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1264">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="6bda5-1265">O descritor de arquivo para uma matriz dinâmica, mas não para uma matriz de tamanho fixo de gravação do Visual Basic 6.0 e versões anteriores.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1265">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="6bda5-1266">O padrão do Visual Basic 2005 é não gravar o descritor.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1266">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="6bda5-1267">Para gravar o descritor, defina as `ArrayIsDynamic` parâmetro para `True`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1267">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="6bda5-1268">Ao escrever a matriz, você precisa comparar a forma com que a matriz será lida; se ela for lida com o descritor, você precisará escrever o descritor.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1268">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="6bda5-1269">O descritor especifica a classificação de matriz, o tamanho e os limites inferiores para cada classificação.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1269">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="6bda5-1270">Seu comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="6bda5-1270">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="6bda5-1271">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessário para gravar os dados de matriz e o descritor de matriz.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1271">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="6bda5-1272">Por exemplo, a seguinte declaração de matriz requer 218 bytes quando a matriz é gravada no disco.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1272">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="6bda5-1273">Se a variável que está sendo gravada for qualquer outro tipo de variável (não uma cadeia de caracteres de comprimento variável ou um objeto), `FilePut` grava apenas os dados da variável.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1273">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="6bda5-1274">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual ao comprimento dos dados que estão sendo gravados.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1274">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="6bda5-1275">`FilePut` grava os elementos de estruturas como se cada um fosse escrito individualmente, exceto que não há nenhum preenchimento entre os elementos.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1275">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="6bda5-1276">O `VBFixedString` atributo pode ser aplicado a campos de cadeia de caracteres em estruturas para indicar o tamanho da cadeia de caracteres quando gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1276">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="6bda5-1277">Os campos que têm mais bytes que o especificado pela cadeia de caracteres a `VBFixedString` atributo são truncados quando gravados em disco,</span><span class="sxs-lookup"><span data-stu-id="6bda5-1277">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="6bda5-1278">Modo binário</span><span class="sxs-lookup"><span data-stu-id="6bda5-1278">Binary Mode</span></span>  
 <span data-ttu-id="6bda5-1279">Para arquivos abertos no `Binary` modo, a maioria do `Random` modo regras se aplicam, com algumas exceções.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1279">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="6bda5-1280">As seguintes regras para arquivos abertos no `Binary` modo são diferentes das regras para `Random` modo:</span><span class="sxs-lookup"><span data-stu-id="6bda5-1280">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="6bda5-1281">A cláusula `RecordLength` na função de `FileOpen` não está em vigor.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1281">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="6bda5-1282">`FilePut` grava todas as variáveis em disco de maneira contígua, ou seja, sem preenchimento entre os registros.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1282">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="6bda5-1283">Para qualquer matriz que não seja uma matriz em uma estrutura, `FilePut` grava apenas os dados.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1283">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="6bda5-1284">Nenhum descritor é escrito.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1284">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="6bda5-1285">`FilePut` Grava cadeias de caracteres de comprimento variável que não são elementos das estruturas sem o descritor de dois bytes de comprimento.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1285">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="6bda5-1286">O número de bytes gravados é igual ao número de caracteres na cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1286">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="6bda5-1287">Por exemplo, as instruções a seguir escrever 11 bytes no arquivo número 1:</span><span class="sxs-lookup"><span data-stu-id="6bda5-1287">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="6bda5-1288">A gravação em um arquivo usando a função `FilePut` requer o acesso `Write` da enumeração <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1288">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6bda5-1289">Este exemplo usa o `FilePut` função para gravar dados em um arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1289">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="6bda5-1290">Cinco registros da estrutura `Person` são gravados no arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1290">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6bda5-1291">
            <paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1291">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="6bda5-1292">O modo de arquivo é inválido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1292">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (int FileNumber, DateTime Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(int32 FileNumber, valuetype System.DateTime Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.DateTime,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Integer, Value As DateTime, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FilePut : int * DateTime * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FilePut (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.DateTime" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="6bda5-1293">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1293">Required.</span>
          </span>
          <span data-ttu-id="6bda5-1294">Qualquer número de arquivo válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1294">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="6bda5-1295">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1295">Required.</span>
          </span>
          <span data-ttu-id="6bda5-1296">Nome de variável válido que contém dados gravados em disco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1296">Valid variable name that contains data written to disk.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="6bda5-1297">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1297">Optional.</span>
          </span>
          <span data-ttu-id="6bda5-1298">Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a gravação começa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1298">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6bda5-1299">Grava dados de uma variável em um arquivo de disco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1299">Writes data from a variable to a disk file.</span>
          </span>
          <span data-ttu-id="6bda5-1300">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FilePut" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1300">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span>
          </span>
          <span data-ttu-id="6bda5-1301">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1301">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bda5-1302">`FilePut` só é válido em `Random` e `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1302">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="6bda5-1303">Dados gravados com `FilePut` costumam ser lidos a partir de um arquivo usando `FileGet`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1303">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="6bda5-1304">O primeiro registro ou byte em um arquivo está na posição 1, o segundo registro ou byte está na posição 2 e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1304">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="6bda5-1305">Se você omitir `RecordNumber`, o próximo registro ou byte após a última `FileGet` ou `FilePut` funcionar ou apontado pela última `Seek` função é escrita.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1305">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="6bda5-1306">O argumento `StringIsFixedLength` controla se a função interpreta cadeias de caracteres como sendo de tamanho variável ou fixo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1306">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="6bda5-1307">`FilePut` não grava o descritor do tamanho quando o argumento é `True`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1307">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="6bda5-1308">Se você usar `StringIsFixedLength`  =  `True` com `FilePut`, você precisa fazer o mesmo com `FileGet`, e você precisa certificar-se de que a cadeia de caracteres é inicializada com o tamanho esperado.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1308">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="6bda5-1309">Modo aleatório</span><span class="sxs-lookup"><span data-stu-id="6bda5-1309">Random Mode</span></span>  
 <span data-ttu-id="6bda5-1310">Para arquivos abertos no `Random` modo, as seguintes regras se aplicam:</span><span class="sxs-lookup"><span data-stu-id="6bda5-1310">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="6bda5-1311">Se o comprimento dos dados que estão sendo gravados for menor que o comprimento especificado na `RecordLength` cláusula do `FileOpen` função, `FilePut` grava registros subsequentes em limites de comprimento de registro.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1311">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="6bda5-1312">O espaço entre o final de um registro e o início do próximo registro é preenchido com o conteúdo existente no buffer de arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1312">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="6bda5-1313">Como a quantidade de dados de preenchimento não pode ser determinada com certeza, geralmente é uma boa ideia ter o comprimento do registro corresponde ao tamanho dos dados que estão sendo gravados.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1313">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="6bda5-1314">Se o comprimento dos dados que estão sendo gravados for maior que o comprimento especificado na `RecordLength` cláusula do `FileOpen` função, uma exceção será gerada.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1314">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="6bda5-1315">Caso a variável que está sendo gravada seja uma cadeia de caracteres, `FilePut` grava um descritor de dois bytes que contém o tamanho da cadeia de caracteres e, em seguida, grava os dados que vão para a variável.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1315">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="6bda5-1316">Portanto, o comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser pelo menos dois bytes maior do que o comprimento real da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1316">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="6bda5-1317">Caso a variável que está sendo gravada seja um objeto que contém um tipo numérico, `FilePut` grava dois bytes que identificam o `VarType` do objeto e, em seguida, grava a variável.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1317">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="6bda5-1318">Por exemplo, ao escrever um objeto que contém um número inteiro, `FilePut` grava seis bytes: dois bytes que identificam o objeto como `VarType(3)` (`Integer`) e quatro bytes que contêm os dados.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1318">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="6bda5-1319">O comprimento do registro especificado pelo `RecordLength` parâmetro no `FileOpen` função deve ser pelo menos dois bytes maior do que o número real de bytes necessários para armazenar a variável.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1319">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="6bda5-1320">Se a variável que está sendo gravada for um objeto que contém uma cadeia de caracteres `FilePut` grava um descritor de dois bytes que identifica o `VarType(8)` do objeto, um descritor de dois bytes indicando o comprimento da cadeia de caracteres e, em seguida, grava os dados de cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1320">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="6bda5-1321">O comprimento do registro especificado pelo `RecordLength` parâmetro no `FileOpen` função deve ser maior que o comprimento real da cadeia de caracteres de pelo menos quatro bytes.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1321">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="6bda5-1322">Caso queira colocar uma cadeia de caracteres sem o descritor, você deve passar `True` para o parâmetro `StringIsFixedLength`, e a cadeia de caracteres lida deve ter o tamanho correto.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1322">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="6bda5-1323">Caso a variável gravada seja uma matriz, você tem a opção de gravar ou não um descritor para o tamanho e as dimensões da matriz.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1323">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="6bda5-1324">O descritor de arquivo para uma matriz dinâmica, mas não para uma matriz de tamanho fixo de gravação do Visual Basic 6.0 e versões anteriores.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1324">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="6bda5-1325">O padrão do Visual Basic 2005 é não gravar o descritor.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1325">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="6bda5-1326">Para gravar o descritor, defina as `ArrayIsDynamic` parâmetro para `True`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1326">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="6bda5-1327">Ao escrever a matriz, você precisa comparar a forma com que a matriz será lida; se ela for lida com o descritor, você precisará escrever o descritor.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1327">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="6bda5-1328">O descritor especifica a classificação de matriz, o tamanho e os limites inferiores para cada classificação.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1328">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="6bda5-1329">Seu comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="6bda5-1329">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="6bda5-1330">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessário para gravar os dados de matriz e o descritor de matriz.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1330">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="6bda5-1331">Por exemplo, a seguinte declaração de matriz requer 218 bytes quando a matriz é gravada no disco.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1331">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="6bda5-1332">Se a variável que está sendo gravada for qualquer outro tipo de variável (não uma cadeia de caracteres de comprimento variável ou um objeto), `FilePut` grava apenas os dados da variável.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1332">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="6bda5-1333">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual ao comprimento dos dados que estão sendo gravados.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1333">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="6bda5-1334">`FilePut` grava os elementos de estruturas como se cada um fosse escrito individualmente, exceto que não há nenhum preenchimento entre os elementos.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1334">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="6bda5-1335">O `VBFixedString` atributo pode ser aplicado a campos de cadeia de caracteres em estruturas para indicar o tamanho da cadeia de caracteres quando gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1335">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="6bda5-1336">Os campos que têm mais bytes que o especificado pela cadeia de caracteres a `VBFixedString` atributo são truncados quando gravados em disco,</span><span class="sxs-lookup"><span data-stu-id="6bda5-1336">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="6bda5-1337">Modo binário</span><span class="sxs-lookup"><span data-stu-id="6bda5-1337">Binary Mode</span></span>  
 <span data-ttu-id="6bda5-1338">Para arquivos abertos no `Binary` modo, a maioria do `Random` modo regras se aplicam, com algumas exceções.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1338">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="6bda5-1339">As seguintes regras para arquivos abertos no `Binary` modo são diferentes das regras para `Random` modo:</span><span class="sxs-lookup"><span data-stu-id="6bda5-1339">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="6bda5-1340">A cláusula `RecordLength` na função de `FileOpen` não está em vigor.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1340">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="6bda5-1341">`FilePut` grava todas as variáveis em disco de maneira contígua, ou seja, sem preenchimento entre os registros.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1341">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="6bda5-1342">Para qualquer matriz que não seja uma matriz em uma estrutura, `FilePut` grava apenas os dados.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1342">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="6bda5-1343">Nenhum descritor é escrito.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1343">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="6bda5-1344">`FilePut` Grava cadeias de caracteres de comprimento variável que não são elementos das estruturas sem o descritor de dois bytes de comprimento.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1344">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="6bda5-1345">O número de bytes gravados é igual ao número de caracteres na cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1345">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="6bda5-1346">Por exemplo, as instruções a seguir escrever 11 bytes no arquivo número 1:</span><span class="sxs-lookup"><span data-stu-id="6bda5-1346">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="6bda5-1347">A gravação em um arquivo usando a função `FilePut` requer o acesso `Write` da enumeração <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1347">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6bda5-1348">Este exemplo usa o `FilePut` função para gravar dados em um arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1348">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="6bda5-1349">Cinco registros da estrutura `Person` são gravados no arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1349">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6bda5-1350">
            <paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1350">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="6bda5-1351">O modo de arquivo é inválido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1351">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (int FileNumber, decimal Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(int32 FileNumber, valuetype System.Decimal Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Decimal,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Integer, Value As Decimal, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FilePut : int * decimal * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FilePut (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Decimal" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="6bda5-1352">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1352">Required.</span>
          </span>
          <span data-ttu-id="6bda5-1353">Qualquer número de arquivo válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1353">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="6bda5-1354">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1354">Required.</span>
          </span>
          <span data-ttu-id="6bda5-1355">Nome de variável válido que contém dados gravados em disco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1355">Valid variable name that contains data written to disk.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="6bda5-1356">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1356">Optional.</span>
          </span>
          <span data-ttu-id="6bda5-1357">Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a gravação começa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1357">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6bda5-1358">Grava dados de uma variável em um arquivo de disco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1358">Writes data from a variable to a disk file.</span>
          </span>
          <span data-ttu-id="6bda5-1359">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FilePut" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1359">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span>
          </span>
          <span data-ttu-id="6bda5-1360">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1360">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bda5-1361">`FilePut` só é válido em `Random` e `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1361">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="6bda5-1362">Dados gravados com `FilePut` costumam ser lidos a partir de um arquivo usando `FileGet`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1362">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="6bda5-1363">O primeiro registro ou byte em um arquivo está na posição 1, o segundo registro ou byte está na posição 2 e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1363">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="6bda5-1364">Se você omitir `RecordNumber`, o próximo registro ou byte após a última `FileGet` ou `FilePut` funcionar ou apontado pela última `Seek` função é escrita.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1364">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="6bda5-1365">O argumento `StringIsFixedLength` controla se a função interpreta cadeias de caracteres como sendo de tamanho variável ou fixo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1365">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="6bda5-1366">`FilePut` não grava o descritor do tamanho quando o argumento é `True`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1366">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="6bda5-1367">Se você usar `StringIsFixedLength`  =  `True` com `FilePut`, você precisa fazer o mesmo com `FileGet`, e você precisa certificar-se de que a cadeia de caracteres é inicializada com o tamanho esperado.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1367">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="6bda5-1368">Modo aleatório</span><span class="sxs-lookup"><span data-stu-id="6bda5-1368">Random Mode</span></span>  
 <span data-ttu-id="6bda5-1369">Para arquivos abertos no `Random` modo, as seguintes regras se aplicam:</span><span class="sxs-lookup"><span data-stu-id="6bda5-1369">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="6bda5-1370">Se o comprimento dos dados que estão sendo gravados for menor que o comprimento especificado na `RecordLength` cláusula do `FileOpen` função, `FilePut` grava registros subsequentes em limites de comprimento de registro.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1370">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="6bda5-1371">O espaço entre o final de um registro e o início do próximo registro é preenchido com o conteúdo existente no buffer de arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1371">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="6bda5-1372">Como a quantidade de dados de preenchimento não pode ser determinada com certeza, geralmente é uma boa ideia ter o comprimento do registro corresponde ao tamanho dos dados que estão sendo gravados.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1372">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="6bda5-1373">Se o comprimento dos dados que estão sendo gravados for maior que o comprimento especificado na `RecordLength` cláusula do `FileOpen` função, uma exceção será gerada.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1373">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="6bda5-1374">Caso a variável que está sendo gravada seja uma cadeia de caracteres, `FilePut` grava um descritor de dois bytes que contém o tamanho da cadeia de caracteres e, em seguida, grava os dados que vão para a variável.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1374">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="6bda5-1375">Portanto, o comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser pelo menos dois bytes maior do que o comprimento real da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1375">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="6bda5-1376">Caso a variável que está sendo gravada seja um objeto que contém um tipo numérico, `FilePut` grava dois bytes que identificam o `VarType` do objeto e, em seguida, grava a variável.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1376">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="6bda5-1377">Por exemplo, ao escrever um objeto que contém um número inteiro, `FilePut` grava seis bytes: dois bytes que identificam o objeto como `VarType(3)` (`Integer`) e quatro bytes que contêm os dados.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1377">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="6bda5-1378">O comprimento do registro especificado pelo `RecordLength` parâmetro no `FileOpen` função deve ser pelo menos dois bytes maior do que o número real de bytes necessários para armazenar a variável.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1378">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="6bda5-1379">Se a variável que está sendo gravada for um objeto que contém uma cadeia de caracteres `FilePut` grava um descritor de dois bytes que identifica o `VarType(8)` do objeto, um descritor de dois bytes indicando o comprimento da cadeia de caracteres e, em seguida, grava os dados de cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1379">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="6bda5-1380">O comprimento do registro especificado pelo `RecordLength` parâmetro no `FileOpen` função deve ser maior que o comprimento real da cadeia de caracteres de pelo menos quatro bytes.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1380">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="6bda5-1381">Caso queira colocar uma cadeia de caracteres sem o descritor, você deve passar `True` para o parâmetro `StringIsFixedLength`, e a cadeia de caracteres lida deve ter o tamanho correto.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1381">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="6bda5-1382">Caso a variável gravada seja uma matriz, você tem a opção de gravar ou não um descritor para o tamanho e as dimensões da matriz.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1382">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="6bda5-1383">O descritor de arquivo para uma matriz dinâmica, mas não para uma matriz de tamanho fixo de gravação do Visual Basic 6.0 e versões anteriores.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1383">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="6bda5-1384">O padrão do Visual Basic 2005 é não gravar o descritor.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1384">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="6bda5-1385">Para gravar o descritor, defina as `ArrayIsDynamic` parâmetro para `True`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1385">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="6bda5-1386">Ao escrever a matriz, você precisa comparar a forma com que a matriz será lida; se ela for lida com o descritor, você precisará escrever o descritor.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1386">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="6bda5-1387">O descritor especifica a classificação de matriz, o tamanho e os limites inferiores para cada classificação.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1387">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="6bda5-1388">Seu comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="6bda5-1388">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="6bda5-1389">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessário para gravar os dados de matriz e o descritor de matriz.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1389">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="6bda5-1390">Por exemplo, a seguinte declaração de matriz requer 218 bytes quando a matriz é gravada no disco.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1390">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="6bda5-1391">Se a variável que está sendo gravada for qualquer outro tipo de variável (não uma cadeia de caracteres de comprimento variável ou um objeto), `FilePut` grava apenas os dados da variável.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1391">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="6bda5-1392">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual ao comprimento dos dados que estão sendo gravados.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1392">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="6bda5-1393">`FilePut` grava os elementos de estruturas como se cada um fosse escrito individualmente, exceto que não há nenhum preenchimento entre os elementos.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1393">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="6bda5-1394">O `VBFixedString` atributo pode ser aplicado a campos de cadeia de caracteres em estruturas para indicar o tamanho da cadeia de caracteres quando gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1394">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="6bda5-1395">Os campos que têm mais bytes que o especificado pela cadeia de caracteres a `VBFixedString` atributo são truncados quando gravados em disco,</span><span class="sxs-lookup"><span data-stu-id="6bda5-1395">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="6bda5-1396">Modo binário</span><span class="sxs-lookup"><span data-stu-id="6bda5-1396">Binary Mode</span></span>  
 <span data-ttu-id="6bda5-1397">Para arquivos abertos no `Binary` modo, a maioria do `Random` modo regras se aplicam, com algumas exceções.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1397">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="6bda5-1398">As seguintes regras para arquivos abertos no `Binary` modo são diferentes das regras para `Random` modo:</span><span class="sxs-lookup"><span data-stu-id="6bda5-1398">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="6bda5-1399">A cláusula `RecordLength` na função de `FileOpen` não está em vigor.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1399">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="6bda5-1400">`FilePut` grava todas as variáveis em disco de maneira contígua, ou seja, sem preenchimento entre os registros.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1400">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="6bda5-1401">Para qualquer matriz que não seja uma matriz em uma estrutura, `FilePut` grava apenas os dados.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1401">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="6bda5-1402">Nenhum descritor é escrito.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1402">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="6bda5-1403">`FilePut` Grava cadeias de caracteres de comprimento variável que não são elementos das estruturas sem o descritor de dois bytes de comprimento.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1403">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="6bda5-1404">O número de bytes gravados é igual ao número de caracteres na cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1404">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="6bda5-1405">Por exemplo, as instruções a seguir escrever 11 bytes no arquivo número 1:</span><span class="sxs-lookup"><span data-stu-id="6bda5-1405">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="6bda5-1406">A gravação em um arquivo usando a função `FilePut` requer o acesso `Write` da enumeração <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1406">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6bda5-1407">Este exemplo usa o `FilePut` função para gravar dados em um arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1407">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="6bda5-1408">Cinco registros da estrutura `Person` são gravados no arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1408">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6bda5-1409">
            <paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1409">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="6bda5-1410">O modo de arquivo é inválido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1410">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (int FileNumber, double Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(int32 FileNumber, float64 Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Double,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Integer, Value As Double, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FilePut : int * double * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FilePut (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Double" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="6bda5-1411">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1411">Required.</span>
          </span>
          <span data-ttu-id="6bda5-1412">Qualquer número de arquivo válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1412">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="6bda5-1413">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1413">Required.</span>
          </span>
          <span data-ttu-id="6bda5-1414">Nome de variável válido que contém dados gravados em disco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1414">Valid variable name that contains data written to disk.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="6bda5-1415">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1415">Optional.</span>
          </span>
          <span data-ttu-id="6bda5-1416">Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a gravação começa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1416">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6bda5-1417">Grava dados de uma variável em um arquivo de disco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1417">Writes data from a variable to a disk file.</span>
          </span>
          <span data-ttu-id="6bda5-1418">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FilePut" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1418">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span>
          </span>
          <span data-ttu-id="6bda5-1419">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1419">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bda5-1420">`FilePut` só é válido em `Random` e `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1420">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="6bda5-1421">Dados gravados com `FilePut` costumam ser lidos a partir de um arquivo usando `FileGet`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1421">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="6bda5-1422">O primeiro registro ou byte em um arquivo está na posição 1, o segundo registro ou byte está na posição 2 e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1422">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="6bda5-1423">Se você omitir `RecordNumber`, o próximo registro ou byte após a última `FileGet` ou `FilePut` funcionar ou apontado pela última `Seek` função é escrita.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1423">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="6bda5-1424">O argumento `StringIsFixedLength` controla se a função interpreta cadeias de caracteres como sendo de tamanho variável ou fixo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1424">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="6bda5-1425">`FilePut` não grava o descritor do tamanho quando o argumento é `True`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1425">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="6bda5-1426">Se você usar `StringIsFixedLength`  =  `True` com `FilePut`, você precisa fazer o mesmo com `FileGet`, e você precisa certificar-se de que a cadeia de caracteres é inicializada com o tamanho esperado.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1426">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="6bda5-1427">Modo aleatório</span><span class="sxs-lookup"><span data-stu-id="6bda5-1427">Random Mode</span></span>  
 <span data-ttu-id="6bda5-1428">Para arquivos abertos no `Random` modo, as seguintes regras se aplicam:</span><span class="sxs-lookup"><span data-stu-id="6bda5-1428">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="6bda5-1429">Se o comprimento dos dados que estão sendo gravados for menor que o comprimento especificado na `RecordLength` cláusula do `FileOpen` função, `FilePut` grava registros subsequentes em limites de comprimento de registro.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1429">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="6bda5-1430">O espaço entre o final de um registro e o início do próximo registro é preenchido com o conteúdo existente no buffer de arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1430">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="6bda5-1431">Como a quantidade de dados de preenchimento não pode ser determinada com certeza, geralmente é uma boa ideia ter o comprimento do registro corresponde ao tamanho dos dados que estão sendo gravados.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1431">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="6bda5-1432">Se o comprimento dos dados que estão sendo gravados for maior que o comprimento especificado na `RecordLength` cláusula do `FileOpen` função, uma exceção será gerada.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1432">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="6bda5-1433">Caso a variável que está sendo gravada seja uma cadeia de caracteres, `FilePut` grava um descritor de dois bytes que contém o tamanho da cadeia de caracteres e, em seguida, grava os dados que vão para a variável.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1433">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="6bda5-1434">Portanto, o comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser pelo menos dois bytes maior do que o comprimento real da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1434">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="6bda5-1435">Caso a variável que está sendo gravada seja um objeto que contém um tipo numérico, `FilePut` grava dois bytes que identificam o `VarType` do objeto e, em seguida, grava a variável.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1435">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="6bda5-1436">Por exemplo, ao escrever um objeto que contém um número inteiro, `FilePut` grava seis bytes: dois bytes que identificam o objeto como `VarType(3)` (`Integer`) e quatro bytes que contêm os dados.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1436">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="6bda5-1437">O comprimento do registro especificado pelo `RecordLength` parâmetro no `FileOpen` função deve ser pelo menos dois bytes maior do que o número real de bytes necessários para armazenar a variável.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1437">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="6bda5-1438">Se a variável que está sendo gravada for um objeto que contém uma cadeia de caracteres `FilePut` grava um descritor de dois bytes que identifica o `VarType(8)` do objeto, um descritor de dois bytes indicando o comprimento da cadeia de caracteres e, em seguida, grava os dados de cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1438">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="6bda5-1439">O comprimento do registro especificado pelo `RecordLength` parâmetro no `FileOpen` função deve ser maior que o comprimento real da cadeia de caracteres de pelo menos quatro bytes.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1439">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="6bda5-1440">Caso queira colocar uma cadeia de caracteres sem o descritor, você deve passar `True` para o parâmetro `StringIsFixedLength`, e a cadeia de caracteres lida deve ter o tamanho correto.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1440">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="6bda5-1441">Caso a variável gravada seja uma matriz, você tem a opção de gravar ou não um descritor para o tamanho e as dimensões da matriz.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1441">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="6bda5-1442">O descritor de arquivo para uma matriz dinâmica, mas não para uma matriz de tamanho fixo de gravação do Visual Basic 6.0 e versões anteriores.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1442">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="6bda5-1443">O padrão do Visual Basic 2005 é não gravar o descritor.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1443">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="6bda5-1444">Para gravar o descritor, defina as `ArrayIsDynamic` parâmetro para `True`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1444">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="6bda5-1445">Ao escrever a matriz, você precisa comparar a forma com que a matriz será lida; se ela for lida com o descritor, você precisará escrever o descritor.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1445">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="6bda5-1446">O descritor especifica a classificação de matriz, o tamanho e os limites inferiores para cada classificação.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1446">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="6bda5-1447">Seu comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="6bda5-1447">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="6bda5-1448">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessário para gravar os dados de matriz e o descritor de matriz.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1448">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="6bda5-1449">Por exemplo, a seguinte declaração de matriz requer 218 bytes quando a matriz é gravada no disco.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1449">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="6bda5-1450">Se a variável que está sendo gravada for qualquer outro tipo de variável (não uma cadeia de caracteres de comprimento variável ou um objeto), `FilePut` grava apenas os dados da variável.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1450">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="6bda5-1451">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual ao comprimento dos dados que estão sendo gravados.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1451">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="6bda5-1452">`FilePut` grava os elementos de estruturas como se cada um fosse escrito individualmente, exceto que não há nenhum preenchimento entre os elementos.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1452">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="6bda5-1453">O `VBFixedString` atributo pode ser aplicado a campos de cadeia de caracteres em estruturas para indicar o tamanho da cadeia de caracteres quando gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1453">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="6bda5-1454">Os campos que têm mais bytes que o especificado pela cadeia de caracteres a `VBFixedString` atributo são truncados quando gravados em disco,</span><span class="sxs-lookup"><span data-stu-id="6bda5-1454">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="6bda5-1455">Modo binário</span><span class="sxs-lookup"><span data-stu-id="6bda5-1455">Binary Mode</span></span>  
 <span data-ttu-id="6bda5-1456">Para arquivos abertos no `Binary` modo, a maioria do `Random` modo regras se aplicam, com algumas exceções.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1456">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="6bda5-1457">As seguintes regras para arquivos abertos no `Binary` modo são diferentes das regras para `Random` modo:</span><span class="sxs-lookup"><span data-stu-id="6bda5-1457">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="6bda5-1458">A cláusula `RecordLength` na função de `FileOpen` não está em vigor.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1458">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="6bda5-1459">`FilePut` grava todas as variáveis em disco de maneira contígua, ou seja, sem preenchimento entre os registros.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1459">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="6bda5-1460">Para qualquer matriz que não seja uma matriz em uma estrutura, `FilePut` grava apenas os dados.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1460">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="6bda5-1461">Nenhum descritor é escrito.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1461">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="6bda5-1462">`FilePut` Grava cadeias de caracteres de comprimento variável que não são elementos das estruturas sem o descritor de dois bytes de comprimento.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1462">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="6bda5-1463">O número de bytes gravados é igual ao número de caracteres na cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1463">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="6bda5-1464">Por exemplo, as instruções a seguir escrever 11 bytes no arquivo número 1:</span><span class="sxs-lookup"><span data-stu-id="6bda5-1464">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="6bda5-1465">A gravação em um arquivo usando a função `FilePut` requer o acesso `Write` da enumeração <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1465">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6bda5-1466">Este exemplo usa o `FilePut` função para gravar dados em um arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1466">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="6bda5-1467">Cinco registros da estrutura `Person` são gravados no arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1467">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6bda5-1468">
            <paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1468">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="6bda5-1469">O modo de arquivo é inválido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1469">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (int FileNumber, short Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(int32 FileNumber, int16 Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Int16,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Integer, Value As Short, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FilePut : int * int16 * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FilePut (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Int16" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="6bda5-1470">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1470">Required.</span>
          </span>
          <span data-ttu-id="6bda5-1471">Qualquer número de arquivo válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1471">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="6bda5-1472">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1472">Required.</span>
          </span>
          <span data-ttu-id="6bda5-1473">Nome de variável válido que contém dados gravados em disco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1473">Valid variable name that contains data written to disk.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="6bda5-1474">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1474">Optional.</span>
          </span>
          <span data-ttu-id="6bda5-1475">Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a gravação começa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1475">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6bda5-1476">Grava dados de uma variável em um arquivo de disco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1476">Writes data from a variable to a disk file.</span>
          </span>
          <span data-ttu-id="6bda5-1477">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FilePut" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1477">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span>
          </span>
          <span data-ttu-id="6bda5-1478">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1478">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bda5-1479">`FilePut` só é válido em `Random` e `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1479">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="6bda5-1480">Dados gravados com `FilePut` costumam ser lidos a partir de um arquivo usando `FileGet`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1480">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="6bda5-1481">O primeiro registro ou byte em um arquivo está na posição 1, o segundo registro ou byte está na posição 2 e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1481">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="6bda5-1482">Se você omitir `RecordNumber`, o próximo registro ou byte após a última `FileGet` ou `FilePut` funcionar ou apontado pela última `Seek` função é escrita.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1482">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="6bda5-1483">O argumento `StringIsFixedLength` controla se a função interpreta cadeias de caracteres como sendo de tamanho variável ou fixo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1483">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="6bda5-1484">`FilePut` não grava o descritor do tamanho quando o argumento é `True`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1484">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="6bda5-1485">Se você usar `StringIsFixedLength`  =  `True` com `FilePut`, você precisa fazer o mesmo com `FileGet`, e você precisa certificar-se de que a cadeia de caracteres é inicializada com o tamanho esperado.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1485">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="6bda5-1486">Modo aleatório</span><span class="sxs-lookup"><span data-stu-id="6bda5-1486">Random Mode</span></span>  
 <span data-ttu-id="6bda5-1487">Para arquivos abertos no `Random` modo, as seguintes regras se aplicam:</span><span class="sxs-lookup"><span data-stu-id="6bda5-1487">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="6bda5-1488">Se o comprimento dos dados que estão sendo gravados for menor que o comprimento especificado na `RecordLength` cláusula do `FileOpen` função, `FilePut` grava registros subsequentes em limites de comprimento de registro.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1488">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="6bda5-1489">O espaço entre o final de um registro e o início do próximo registro é preenchido com o conteúdo existente no buffer de arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1489">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="6bda5-1490">Como a quantidade de dados de preenchimento não pode ser determinada com certeza, geralmente é uma boa ideia ter o comprimento do registro corresponde ao tamanho dos dados que estão sendo gravados.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1490">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="6bda5-1491">Se o comprimento dos dados que estão sendo gravados for maior que o comprimento especificado na `RecordLength` cláusula do `FileOpen` função, uma exceção será gerada.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1491">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="6bda5-1492">Caso a variável que está sendo gravada seja uma cadeia de caracteres, `FilePut` grava um descritor de dois bytes que contém o tamanho da cadeia de caracteres e, em seguida, grava os dados que vão para a variável.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1492">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="6bda5-1493">Portanto, o comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser pelo menos dois bytes maior do que o comprimento real da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1493">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="6bda5-1494">Caso a variável que está sendo gravada seja um objeto que contém um tipo numérico, `FilePut` grava dois bytes que identificam o `VarType` do objeto e, em seguida, grava a variável.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1494">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="6bda5-1495">Por exemplo, ao escrever um objeto que contém um número inteiro, `FilePut` grava seis bytes: dois bytes que identificam o objeto como `VarType(3)` (`Integer`) e quatro bytes que contêm os dados.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1495">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="6bda5-1496">O comprimento do registro especificado pelo `RecordLength` parâmetro no `FileOpen` função deve ser pelo menos dois bytes maior do que o número real de bytes necessários para armazenar a variável.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1496">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="6bda5-1497">Se a variável que está sendo gravada for um objeto que contém uma cadeia de caracteres `FilePut` grava um descritor de dois bytes que identifica o`VarType(8)` do objeto, um descritor de dois bytes indicando o comprimento da cadeia de caracteres e, em seguida, grava os dados de cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1497">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the`VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="6bda5-1498">O comprimento do registro especificado pelo `RecordLength` parâmetro no `FileOpen` função deve ser maior que o comprimento real da cadeia de caracteres de pelo menos quatro bytes.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1498">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="6bda5-1499">Caso queira colocar uma cadeia de caracteres sem o descritor, você deve passar `True` para o parâmetro `StringIsFixedLength`, e a cadeia de caracteres lida deve ter o tamanho correto.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1499">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="6bda5-1500">Caso a variável gravada seja uma matriz, você tem a opção de gravar ou não um descritor para o tamanho e as dimensões da matriz.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1500">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="6bda5-1501">O descritor de arquivo para uma matriz dinâmica, mas não para uma matriz de tamanho fixo de gravação do Visual Basic 6.0 e versões anteriores.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1501">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="6bda5-1502">O padrão do Visual Basic 2005 é não gravar o descritor.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1502">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="6bda5-1503">Para gravar o descritor, defina as `ArrayIsDynamic` parâmetro para `True`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1503">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="6bda5-1504">Ao escrever a matriz, você precisa comparar a forma com que a matriz será lida; se ela for lida com o descritor, você precisará escrever o descritor.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1504">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="6bda5-1505">O descritor especifica a classificação de matriz, o tamanho e os limites inferiores para cada classificação.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1505">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="6bda5-1506">Seu comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="6bda5-1506">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="6bda5-1507">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessário para gravar os dados de matriz e o descritor de matriz.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1507">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="6bda5-1508">Por exemplo, a seguinte declaração de matriz requer 218 bytes quando a matriz é gravada no disco.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1508">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="6bda5-1509">Se a variável que está sendo gravada for qualquer outro tipo de variável (não uma cadeia de caracteres de comprimento variável ou um objeto), `FilePut` grava apenas os dados da variável.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1509">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="6bda5-1510">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual ao comprimento dos dados que estão sendo gravados.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1510">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="6bda5-1511">`FilePut` grava os elementos de estruturas como se cada um fosse escrito individualmente, exceto que não há nenhum preenchimento entre os elementos.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1511">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="6bda5-1512">O `VBFixedString` atributo pode ser aplicado a campos de cadeia de caracteres em estruturas para indicar o tamanho da cadeia de caracteres quando gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1512">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="6bda5-1513">Os campos que têm mais bytes que o especificado pela cadeia de caracteres a `VBFixedString` atributo são truncados quando gravados em disco,</span><span class="sxs-lookup"><span data-stu-id="6bda5-1513">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="6bda5-1514">Modo binário</span><span class="sxs-lookup"><span data-stu-id="6bda5-1514">Binary Mode</span></span>  
 <span data-ttu-id="6bda5-1515">Para arquivos abertos no `Binary` modo, a maioria do `Random` modo regras se aplicam, com algumas exceções.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1515">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="6bda5-1516">As seguintes regras para arquivos abertos no `Binary` modo são diferentes das regras para `Random` modo:</span><span class="sxs-lookup"><span data-stu-id="6bda5-1516">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="6bda5-1517">A cláusula `RecordLength` na função de `FileOpen` não está em vigor.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1517">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="6bda5-1518">`FilePut` grava todas as variáveis em disco de maneira contígua, ou seja, sem preenchimento entre os registros.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1518">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="6bda5-1519">Para qualquer matriz que não seja uma matriz em uma estrutura, `FilePut` grava apenas os dados.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1519">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="6bda5-1520">Nenhum descritor é escrito.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1520">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="6bda5-1521">`FilePut` Grava cadeias de caracteres de comprimento variável que não são elementos das estruturas sem o descritor de dois bytes de comprimento.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1521">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="6bda5-1522">O número de bytes gravados é igual ao número de caracteres na cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1522">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="6bda5-1523">Por exemplo, as instruções a seguir escrever 11 bytes no arquivo número 1:</span><span class="sxs-lookup"><span data-stu-id="6bda5-1523">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="6bda5-1524">A gravação em um arquivo usando a função `FilePut` requer o acesso `Write` da enumeração <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1524">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6bda5-1525">Este exemplo usa o `FilePut` função para gravar dados em um arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1525">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="6bda5-1526">Cinco registros da estrutura `Person` são gravados no arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1526">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6bda5-1527">
            <paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1527">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="6bda5-1528">O modo de arquivo é inválido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1528">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (int FileNumber, int Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(int32 FileNumber, int32 Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Int32,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Integer, Value As Integer, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FilePut : int * int * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FilePut (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Int32" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="6bda5-1529">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1529">Required.</span>
          </span>
          <span data-ttu-id="6bda5-1530">Qualquer número de arquivo válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1530">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="6bda5-1531">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1531">Required.</span>
          </span>
          <span data-ttu-id="6bda5-1532">Nome de variável válido que contém dados gravados em disco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1532">Valid variable name that contains data written to disk.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="6bda5-1533">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1533">Optional.</span>
          </span>
          <span data-ttu-id="6bda5-1534">Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a gravação começa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1534">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6bda5-1535">Grava dados de uma variável em um arquivo de disco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1535">Writes data from a variable to a disk file.</span>
          </span>
          <span data-ttu-id="6bda5-1536">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FilePut" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1536">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span>
          </span>
          <span data-ttu-id="6bda5-1537">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1537">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bda5-1538">`FilePut` só é válido em `Random` e `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1538">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="6bda5-1539">Dados gravados com `FilePut` costumam ser lidos a partir de um arquivo usando `FileGet`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1539">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="6bda5-1540">O primeiro registro ou byte em um arquivo está na posição 1, o segundo registro ou byte está na posição 2 e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1540">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="6bda5-1541">Se você omitir `RecordNumber`, o próximo registro ou byte após a última `FileGet` ou `FilePut` funcionar ou apontado pela última `Seek` função é escrita.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1541">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="6bda5-1542">O argumento `StringIsFixedLength` controla se a função interpreta cadeias de caracteres como sendo de tamanho variável ou fixo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1542">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="6bda5-1543">`FilePut` não grava o descritor do tamanho quando o argumento é `True`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1543">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="6bda5-1544">Se você usar `StringIsFixedLength`  =  `True` com `FilePut`, você precisa fazer o mesmo com `FileGet`, e você precisa certificar-se de que a cadeia de caracteres é inicializada com o tamanho esperado.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1544">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="6bda5-1545">Modo aleatório</span><span class="sxs-lookup"><span data-stu-id="6bda5-1545">Random Mode</span></span>  
 <span data-ttu-id="6bda5-1546">Para arquivos abertos no `Random` modo, as seguintes regras se aplicam:</span><span class="sxs-lookup"><span data-stu-id="6bda5-1546">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="6bda5-1547">Se o comprimento dos dados que estão sendo gravados for menor que o comprimento especificado na `RecordLength` cláusula do `FileOpen` função, `FilePut` grava registros subsequentes em limites de comprimento de registro.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1547">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="6bda5-1548">O espaço entre o final de um registro e o início do próximo registro é preenchido com o conteúdo existente no buffer de arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1548">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="6bda5-1549">Como a quantidade de dados de preenchimento não pode ser determinada com certeza, geralmente é uma boa ideia ter o comprimento do registro corresponde ao tamanho dos dados que estão sendo gravados.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1549">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="6bda5-1550">Se o comprimento dos dados que estão sendo gravados for maior que o comprimento especificado na `RecordLength` cláusula do `FileOpen` função, uma exceção será gerada.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1550">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="6bda5-1551">Caso a variável que está sendo gravada seja uma cadeia de caracteres, `FilePut` grava um descritor de dois bytes que contém o tamanho da cadeia de caracteres e, em seguida, grava os dados que vão para a variável.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1551">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="6bda5-1552">Portanto, o comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser pelo menos dois bytes maior do que o comprimento real da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1552">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="6bda5-1553">Caso a variável que está sendo gravada seja um objeto que contém um tipo numérico, `FilePut` grava dois bytes que identificam o `VarType` do objeto e, em seguida, grava a variável.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1553">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="6bda5-1554">Por exemplo, ao escrever um objeto que contém um número inteiro, `FilePut` grava seis bytes: dois bytes que identificam o objeto como `VarType(3)` (`Integer`) e quatro bytes que contêm os dados.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1554">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="6bda5-1555">O comprimento do registro especificado pelo `RecordLength` parâmetro no `FileOpen` função deve ser pelo menos dois bytes maior do que o número real de bytes necessários para armazenar a variável.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1555">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="6bda5-1556">Se a variável que está sendo gravada for um objeto que contém uma cadeia de caracteres `FilePut` grava um descritor de dois bytes que identifica o `VarType(8)` do objeto, um descritor de dois bytes indicando o comprimento da cadeia de caracteres e, em seguida, grava os dados de cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1556">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="6bda5-1557">O comprimento do registro especificado pelo `RecordLength` parâmetro no `FileOpen` função deve ser maior que o comprimento real da cadeia de caracteres de pelo menos quatro bytes.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1557">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="6bda5-1558">Caso queira colocar uma cadeia de caracteres sem o descritor, você deve passar `True` para o parâmetro `StringIsFixedLength`, e a cadeia de caracteres lida deve ter o tamanho correto.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1558">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="6bda5-1559">Caso a variável gravada seja uma matriz, você tem a opção de gravar ou não um descritor para o tamanho e as dimensões da matriz.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1559">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="6bda5-1560">O descritor de arquivo para uma matriz dinâmica, mas não para uma matriz de tamanho fixo de gravação do Visual Basic 6.0 e versões anteriores.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1560">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="6bda5-1561">O padrão do Visual Basic 2005 é não gravar o descritor.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1561">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="6bda5-1562">Para gravar o descritor, defina as `ArrayIsDynamic` parâmetro para `True`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1562">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="6bda5-1563">Ao escrever a matriz, você precisa comparar a forma com que a matriz será lida; se ela for lida com o descritor, você precisará escrever o descritor.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1563">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="6bda5-1564">O descritor especifica a classificação de matriz, o tamanho e os limites inferiores para cada classificação.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1564">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="6bda5-1565">Seu comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="6bda5-1565">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="6bda5-1566">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessário para gravar os dados de matriz e o descritor de matriz.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1566">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="6bda5-1567">Por exemplo, a seguinte declaração de matriz requer 218 bytes quando a matriz é gravada no disco.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1567">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="6bda5-1568">Se a variável que está sendo gravada for qualquer outro tipo de variável (não uma cadeia de caracteres de comprimento variável ou um objeto), `FilePut` grava apenas os dados da variável.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1568">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="6bda5-1569">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual ao comprimento dos dados que estão sendo gravados.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1569">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="6bda5-1570">`FilePut` grava os elementos de estruturas como se cada um fosse escrito individualmente, exceto que não há nenhum preenchimento entre os elementos.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1570">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="6bda5-1571">O `VBFixedString` atributo pode ser aplicado a campos de cadeia de caracteres em estruturas para indicar o tamanho da cadeia de caracteres quando gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1571">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="6bda5-1572">Os campos que têm mais bytes que o especificado pela cadeia de caracteres a `VBFixedString` atributo são truncados quando gravados em disco,</span><span class="sxs-lookup"><span data-stu-id="6bda5-1572">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="6bda5-1573">Modo binário</span><span class="sxs-lookup"><span data-stu-id="6bda5-1573">Binary Mode</span></span>  
 <span data-ttu-id="6bda5-1574">Para arquivos abertos no `Binary` modo, a maioria do `Random` modo regras se aplicam, com algumas exceções.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1574">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="6bda5-1575">As seguintes regras para arquivos abertos no `Binary` modo são diferentes das regras para `Random` modo:</span><span class="sxs-lookup"><span data-stu-id="6bda5-1575">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="6bda5-1576">A cláusula `RecordLength` na função de `FileOpen` não está em vigor.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1576">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="6bda5-1577">`FilePut` grava todas as variáveis em disco de maneira contígua, ou seja, sem preenchimento entre os registros.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1577">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="6bda5-1578">Para qualquer matriz que não seja uma matriz em uma estrutura, `FilePut` grava apenas os dados.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1578">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="6bda5-1579">Nenhum descritor é escrito.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1579">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="6bda5-1580">`FilePut` Grava cadeias de caracteres de comprimento variável que não são elementos das estruturas sem o descritor de dois bytes de comprimento.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1580">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="6bda5-1581">O número de bytes gravados é igual ao número de caracteres na cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1581">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="6bda5-1582">Por exemplo, as instruções a seguir escrever 11 bytes no arquivo número 1:</span><span class="sxs-lookup"><span data-stu-id="6bda5-1582">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="6bda5-1583">A gravação em um arquivo usando a função `FilePut` requer o acesso `Write` da enumeração <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1583">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6bda5-1584">Este exemplo usa o `FilePut` função para gravar dados em um arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1584">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="6bda5-1585">Cinco registros da estrutura `Person` são gravados no arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1585">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6bda5-1586">
            <paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1586">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="6bda5-1587">O modo de arquivo é inválido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1587">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (int FileNumber, long Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(int32 FileNumber, int64 Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Integer, Value As Long, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FilePut : int * int64 * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FilePut (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Int64" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="6bda5-1588">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1588">Required.</span>
          </span>
          <span data-ttu-id="6bda5-1589">Qualquer número de arquivo válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1589">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="6bda5-1590">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1590">Required.</span>
          </span>
          <span data-ttu-id="6bda5-1591">Nome de variável válido que contém dados gravados em disco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1591">Valid variable name that contains data written to disk.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="6bda5-1592">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1592">Optional.</span>
          </span>
          <span data-ttu-id="6bda5-1593">Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a gravação começa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1593">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6bda5-1594">Grava dados de uma variável em um arquivo de disco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1594">Writes data from a variable to a disk file.</span>
          </span>
          <span data-ttu-id="6bda5-1595">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FilePut" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1595">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span>
          </span>
          <span data-ttu-id="6bda5-1596">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1596">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bda5-1597">`FilePut` só é válido em `Random` e `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1597">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="6bda5-1598">Dados gravados com `FilePut` costumam ser lidos a partir de um arquivo usando `FileGet`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1598">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="6bda5-1599">O primeiro registro ou byte em um arquivo está na posição 1, o segundo registro ou byte está na posição 2 e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1599">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="6bda5-1600">Se você omitir `RecordNumber`, o próximo registro ou byte após a última `FileGet` ou `FilePut` funcionar ou apontado pela última `Seek` função é escrita.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1600">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="6bda5-1601">O argumento `StringIsFixedLength` controla se a função interpreta cadeias de caracteres como sendo de tamanho variável ou fixo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1601">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="6bda5-1602">`FilePut` não grava o descritor do tamanho quando o argumento é `True`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1602">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="6bda5-1603">Se você usar `StringIsFixedLength`  =  `True` com `FilePut`, você precisa fazer o mesmo com `FileGet`, e você precisa certificar-se de que a cadeia de caracteres é inicializada com o tamanho esperado.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1603">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="6bda5-1604">Modo aleatório</span><span class="sxs-lookup"><span data-stu-id="6bda5-1604">Random Mode</span></span>  
 <span data-ttu-id="6bda5-1605">Para arquivos abertos no `Random` modo, as seguintes regras se aplicam:</span><span class="sxs-lookup"><span data-stu-id="6bda5-1605">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="6bda5-1606">Se o comprimento dos dados que estão sendo gravados for menor que o comprimento especificado na `RecordLength` cláusula do `FileOpen` função, `FilePut` grava registros subsequentes em limites de comprimento de registro.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1606">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="6bda5-1607">O espaço entre o final de um registro e o início do próximo registro é preenchido com o conteúdo existente no buffer de arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1607">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="6bda5-1608">Como a quantidade de dados de preenchimento não pode ser determinada com certeza, geralmente é uma boa ideia ter o comprimento do registro corresponde ao tamanho dos dados que estão sendo gravados.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1608">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="6bda5-1609">Se o comprimento dos dados que estão sendo gravados for maior que o comprimento especificado na `RecordLength` cláusula do `FileOpen` função, uma exceção será gerada.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1609">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="6bda5-1610">Caso a variável que está sendo gravada seja uma cadeia de caracteres, `FilePut` grava um descritor de dois bytes que contém o tamanho da cadeia de caracteres e, em seguida, grava os dados que vão para a variável.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1610">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="6bda5-1611">Portanto, o comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser pelo menos dois bytes maior do que o comprimento real da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1611">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="6bda5-1612">Caso a variável que está sendo gravada seja um objeto que contém um tipo numérico, `FilePut` grava dois bytes que identificam o `VarType` do objeto e, em seguida, grava a variável.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1612">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="6bda5-1613">Por exemplo, ao escrever um objeto que contém um número inteiro, `FilePut` grava seis bytes: dois bytes que identificam o objeto como `VarType(3)` (`Integer`) e quatro bytes que contêm os dados.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1613">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="6bda5-1614">O comprimento do registro especificado pelo `RecordLength` parâmetro no `FileOpen` função deve ser pelo menos dois bytes maior do que o número real de bytes necessários para armazenar a variável.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1614">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="6bda5-1615">Se a variável que está sendo gravada for um objeto que contém uma cadeia de caracteres `FilePut` grava um descritor de dois bytes que identifica o `VarType(8)` do objeto, um descritor de dois bytes indicando o comprimento da cadeia de caracteres e, em seguida, grava os dados de cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1615">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="6bda5-1616">O comprimento do registro especificado pelo `RecordLength` parâmetro no `FileOpen` função deve ser maior que o comprimento real da cadeia de caracteres de pelo menos quatro bytes.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1616">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="6bda5-1617">Caso queira colocar uma cadeia de caracteres sem o descritor, você deve passar `True` para o parâmetro `StringIsFixedLength`, e a cadeia de caracteres lida deve ter o tamanho correto.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1617">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="6bda5-1618">Caso a variável gravada seja uma matriz, você tem a opção de gravar ou não um descritor para o tamanho e as dimensões da matriz.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1618">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="6bda5-1619">O descritor de arquivo para uma matriz dinâmica, mas não para uma matriz de tamanho fixo de gravação do Visual Basic 6.0 e versões anteriores.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1619">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="6bda5-1620">O padrão do Visual Basic 2005 é não gravar o descritor.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1620">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="6bda5-1621">Para gravar o descritor, defina as `ArrayIsDynamic` parâmetro para `True`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1621">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="6bda5-1622">Ao escrever a matriz, você precisa comparar a forma com que a matriz será lida; se ela for lida com o descritor, você precisará escrever o descritor.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1622">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="6bda5-1623">O descritor especifica a classificação de matriz, o tamanho e os limites inferiores para cada classificação.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1623">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="6bda5-1624">Seu comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="6bda5-1624">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="6bda5-1625">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessário para gravar os dados de matriz e o descritor de matriz.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1625">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="6bda5-1626">Por exemplo, a seguinte declaração de matriz requer 218 bytes quando a matriz é gravada no disco.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1626">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="6bda5-1627">Se a variável que está sendo gravada for qualquer outro tipo de variável (não uma cadeia de caracteres de comprimento variável ou um objeto), `FilePut` grava apenas os dados da variável.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1627">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="6bda5-1628">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual ao comprimento dos dados que estão sendo gravados.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1628">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="6bda5-1629">`FilePut` grava os elementos de estruturas como se cada um fosse escrito individualmente, exceto que não há nenhum preenchimento entre os elementos.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1629">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="6bda5-1630">O `VBFixedString` atributo pode ser aplicado a campos de cadeia de caracteres em estruturas para indicar o tamanho da cadeia de caracteres quando gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1630">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="6bda5-1631">Os campos que têm mais bytes que o especificado pela cadeia de caracteres a `VBFixedString` atributo são truncados quando gravados em disco,</span><span class="sxs-lookup"><span data-stu-id="6bda5-1631">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="6bda5-1632">Modo binário</span><span class="sxs-lookup"><span data-stu-id="6bda5-1632">Binary Mode</span></span>  
 <span data-ttu-id="6bda5-1633">Para arquivos abertos no `Binary` modo, a maioria do `Random` modo regras se aplicam, com algumas exceções.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1633">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="6bda5-1634">As seguintes regras para arquivos abertos no `Binary` modo são diferentes das regras para `Random` modo:</span><span class="sxs-lookup"><span data-stu-id="6bda5-1634">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="6bda5-1635">A cláusula `RecordLength` na função de `FileOpen` não está em vigor.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1635">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="6bda5-1636">`FilePut` grava todas as variáveis em disco de maneira contígua, ou seja, sem preenchimento entre os registros.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1636">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="6bda5-1637">Para qualquer matriz que não seja uma matriz em uma estrutura, `FilePut` grava apenas os dados.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1637">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="6bda5-1638">Nenhum descritor é escrito.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1638">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="6bda5-1639">`FilePut` Grava cadeias de caracteres de comprimento variável que não são elementos das estruturas sem o descritor de dois bytes de comprimento.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1639">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="6bda5-1640">O número de bytes gravados é igual ao número de caracteres na cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1640">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="6bda5-1641">Por exemplo, as instruções a seguir escrever 11 bytes no arquivo número 1:</span><span class="sxs-lookup"><span data-stu-id="6bda5-1641">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="6bda5-1642">A gravação em um arquivo usando a função `FilePut` requer o acesso `Write` da enumeração <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1642">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6bda5-1643">Este exemplo usa o `FilePut` função para gravar dados em um arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1643">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="6bda5-1644">Cinco registros da estrutura `Person` são gravados no arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1644">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6bda5-1645">
            <paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1645">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="6bda5-1646">O modo de arquivo é inválido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1646">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (int FileNumber, float Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(int32 FileNumber, float32 Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Single,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Integer, Value As Single, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FilePut : int * single * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FilePut (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Single" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="6bda5-1647">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1647">Required.</span>
          </span>
          <span data-ttu-id="6bda5-1648">Qualquer número de arquivo válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1648">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="6bda5-1649">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1649">Required.</span>
          </span>
          <span data-ttu-id="6bda5-1650">Nome de variável válido que contém dados gravados em disco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1650">Valid variable name that contains data written to disk.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="6bda5-1651">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1651">Optional.</span>
          </span>
          <span data-ttu-id="6bda5-1652">Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a gravação começa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1652">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6bda5-1653">Grava dados de uma variável em um arquivo de disco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1653">Writes data from a variable to a disk file.</span>
          </span>
          <span data-ttu-id="6bda5-1654">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FilePut" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1654">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span>
          </span>
          <span data-ttu-id="6bda5-1655">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1655">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bda5-1656">`FilePut` só é válido em `Random` e `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1656">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="6bda5-1657">Dados gravados com `FilePut` costumam ser lidos a partir de um arquivo usando `FileGet`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1657">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="6bda5-1658">O primeiro registro ou byte em um arquivo está na posição 1, o segundo registro ou byte está na posição 2 e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1658">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="6bda5-1659">Se você omitir `RecordNumber`, o próximo registro ou byte após a última `FileGet` ou `FilePut` funcionar ou apontado pela última `Seek` função é escrita.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1659">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="6bda5-1660">O argumento `StringIsFixedLength` controla se a função interpreta cadeias de caracteres como sendo de tamanho variável ou fixo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1660">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="6bda5-1661">`FilePut` não grava o descritor do tamanho quando o argumento é `True`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1661">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="6bda5-1662">Se você usar `StringIsFixedLength`  =  `True` com `FilePut`, você precisa fazer o mesmo com `FileGet`, e você precisa certificar-se de que a cadeia de caracteres é inicializada com o tamanho esperado.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1662">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="6bda5-1663">Modo aleatório</span><span class="sxs-lookup"><span data-stu-id="6bda5-1663">Random Mode</span></span>  
 <span data-ttu-id="6bda5-1664">Para arquivos abertos no `Random` modo, as seguintes regras se aplicam:</span><span class="sxs-lookup"><span data-stu-id="6bda5-1664">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="6bda5-1665">Se o comprimento dos dados que estão sendo gravados for menor que o comprimento especificado na `RecordLength` cláusula do `FileOpen` função, `FilePut` grava registros subsequentes em limites de comprimento de registro.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1665">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="6bda5-1666">O espaço entre o final de um registro e o início do próximo registro é preenchido com o conteúdo existente no buffer de arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1666">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="6bda5-1667">Como a quantidade de dados de preenchimento não pode ser determinada com certeza, geralmente é uma boa ideia ter o comprimento do registro corresponde ao tamanho dos dados que estão sendo gravados.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1667">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="6bda5-1668">Se o comprimento dos dados que estão sendo gravados for maior que o comprimento especificado na `RecordLength` cláusula do `FileOpen` função, uma exceção será gerada.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1668">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="6bda5-1669">Caso a variável que está sendo gravada seja uma cadeia de caracteres, `FilePut` grava um descritor de dois bytes que contém o tamanho da cadeia de caracteres e, em seguida, grava os dados que vão para a variável.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1669">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="6bda5-1670">Portanto, o comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser pelo menos dois bytes maior do que o comprimento real da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1670">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="6bda5-1671">Caso a variável que está sendo gravada seja um objeto que contém um tipo numérico, `FilePut` grava dois bytes que identificam o `VarType` do objeto e, em seguida, grava a variável.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1671">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="6bda5-1672">Por exemplo, ao escrever um objeto que contém um número inteiro, `FilePut` grava seis bytes: dois bytes que identificam o objeto como `VarType(3)` (`Integer`) e quatro bytes que contêm os dados.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1672">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="6bda5-1673">O comprimento do registro especificado pelo `RecordLength` parâmetro no `FileOpen` função deve ser pelo menos dois bytes maior do que o número real de bytes necessários para armazenar a variável.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1673">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="6bda5-1674">Se a variável que está sendo gravada for um objeto que contém uma cadeia de caracteres `FilePut` grava um descritor de dois bytes que identifica o `VarType(8)` do objeto, um descritor de dois bytes indicando o comprimento da cadeia de caracteres e, em seguida, grava os dados de cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1674">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="6bda5-1675">O comprimento do registro especificado pelo `RecordLength` parâmetro no `FileOpen` função deve ser maior que o comprimento real da cadeia de caracteres de pelo menos quatro bytes.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1675">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="6bda5-1676">Caso queira colocar uma cadeia de caracteres sem o descritor, você deve passar `True` para o parâmetro `StringIsFixedLength`, e a cadeia de caracteres lida deve ter o tamanho correto.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1676">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="6bda5-1677">Caso a variável gravada seja uma matriz, você tem a opção de gravar ou não um descritor para o tamanho e as dimensões da matriz.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1677">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="6bda5-1678">O descritor de arquivo para uma matriz dinâmica, mas não para uma matriz de tamanho fixo de gravação do Visual Basic 6.0 e versões anteriores.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1678">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="6bda5-1679">O padrão do Visual Basic 2005 é não gravar o descritor.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1679">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="6bda5-1680">Para gravar o descritor, defina as `ArrayIsDynamic` parâmetro para `True`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1680">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="6bda5-1681">Ao escrever a matriz, você precisa comparar a forma com que a matriz será lida; se ela for lida com o descritor, você precisará escrever o descritor.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1681">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="6bda5-1682">O descritor especifica a classificação de matriz, o tamanho e os limites inferiores para cada classificação.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1682">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="6bda5-1683">Seu comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="6bda5-1683">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="6bda5-1684">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessário para gravar os dados de matriz e o descritor de matriz.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1684">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="6bda5-1685">Por exemplo, a seguinte declaração de matriz requer 218 bytes quando a matriz é gravada no disco.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1685">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="6bda5-1686">Se a variável que está sendo gravada for qualquer outro tipo de variável (não uma cadeia de caracteres de comprimento variável ou um objeto), `FilePut` grava apenas os dados da variável.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1686">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="6bda5-1687">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual ao comprimento dos dados que estão sendo gravados.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1687">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="6bda5-1688">`FilePut` grava os elementos de estruturas como se cada um fosse escrito individualmente, exceto que não há nenhum preenchimento entre os elementos.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1688">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="6bda5-1689">O `VBFixedString` atributo pode ser aplicado a campos de cadeia de caracteres em estruturas para indicar o tamanho da cadeia de caracteres quando gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1689">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="6bda5-1690">Os campos que têm mais bytes que o especificado pela cadeia de caracteres a `VBFixedString` atributo são truncados quando gravados em disco,</span><span class="sxs-lookup"><span data-stu-id="6bda5-1690">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="6bda5-1691">Modo binário</span><span class="sxs-lookup"><span data-stu-id="6bda5-1691">Binary Mode</span></span>  
 <span data-ttu-id="6bda5-1692">Para arquivos abertos no `Binary` modo, a maioria do `Random` modo regras se aplicam, com algumas exceções.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1692">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="6bda5-1693">As seguintes regras para arquivos abertos no `Binary` modo são diferentes das regras para `Random` modo:</span><span class="sxs-lookup"><span data-stu-id="6bda5-1693">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="6bda5-1694">A cláusula `RecordLength` na função de `FileOpen` não está em vigor.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1694">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="6bda5-1695">`FilePut` grava todas as variáveis em disco de maneira contígua, ou seja, sem preenchimento entre os registros.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1695">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="6bda5-1696">Para qualquer matriz que não seja uma matriz em uma estrutura, `FilePut` grava apenas os dados.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1696">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="6bda5-1697">Nenhum descritor é escrito.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1697">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="6bda5-1698">`FilePut` Grava cadeias de caracteres de comprimento variável que não são elementos das estruturas sem o descritor de dois bytes de comprimento.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1698">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="6bda5-1699">O número de bytes gravados é igual ao número de caracteres na cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1699">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="6bda5-1700">Por exemplo, as instruções a seguir escrever 11 bytes no arquivo número 1:</span><span class="sxs-lookup"><span data-stu-id="6bda5-1700">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="6bda5-1701">A gravação em um arquivo usando a função `FilePut` requer o acesso `Write` da enumeração <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1701">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6bda5-1702">Este exemplo usa o `FilePut` função para gravar dados em um arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1702">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="6bda5-1703">Cinco registros da estrutura `Person` são gravados no arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1703">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6bda5-1704">
            <paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1704">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="6bda5-1705">O modo de arquivo é inválido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1705">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (int FileNumber, ValueType Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(int32 FileNumber, class System.ValueType Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.ValueType,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Integer, Value As ValueType, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FilePut : int * ValueType * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FilePut (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.ValueType" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="6bda5-1706">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1706">Required.</span>
          </span>
          <span data-ttu-id="6bda5-1707">Qualquer número de arquivo válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1707">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="6bda5-1708">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1708">Required.</span>
          </span>
          <span data-ttu-id="6bda5-1709">Nome de variável válido que contém dados gravados em disco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1709">Valid variable name that contains data written to disk.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="6bda5-1710">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1710">Optional.</span>
          </span>
          <span data-ttu-id="6bda5-1711">Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a gravação começa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1711">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6bda5-1712">Grava dados de uma variável em um arquivo de disco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1712">Writes data from a variable to a disk file.</span>
          </span>
          <span data-ttu-id="6bda5-1713">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FilePut" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1713">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span>
          </span>
          <span data-ttu-id="6bda5-1714">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1714">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bda5-1715">`FilePut` só é válido em `Random` e `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1715">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="6bda5-1716">Dados gravados com `FilePut` costumam ser lidos a partir de um arquivo usando `FileGet`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1716">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="6bda5-1717">O primeiro registro ou byte em um arquivo está na posição 1, o segundo registro ou byte está na posição 2 e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1717">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="6bda5-1718">Se você omitir `RecordNumber`, o próximo registro ou byte após a última `FileGet` ou `FilePut` funcionar ou apontado pela última `Seek` função é escrita.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1718">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="6bda5-1719">O argumento `StringIsFixedLength` controla se a função interpreta cadeias de caracteres como sendo de tamanho variável ou fixo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1719">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="6bda5-1720">`FilePut` não grava o descritor do tamanho quando o argumento é `True`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1720">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="6bda5-1721">Se você usar `StringIsFixedLength`  =  `True` com `FilePut`, você precisa fazer o mesmo com `FileGet`, e você precisa certificar-se de que a cadeia de caracteres é inicializada com o tamanho esperado.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1721">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="6bda5-1722">Modo aleatório</span><span class="sxs-lookup"><span data-stu-id="6bda5-1722">Random Mode</span></span>  
 <span data-ttu-id="6bda5-1723">Para arquivos abertos no `Random` modo, as seguintes regras se aplicam:</span><span class="sxs-lookup"><span data-stu-id="6bda5-1723">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="6bda5-1724">Se o comprimento dos dados que estão sendo gravados for menor que o comprimento especificado na`RecordLength` cláusula do `FileOpen` função, `FilePut` grava registros subsequentes em limites de comprimento de registro.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1724">If the length of the data being written is less than the length specified in the`RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="6bda5-1725">O espaço entre o final de um registro e o início do próximo registro é preenchido com o conteúdo existente no buffer de arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1725">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="6bda5-1726">Como a quantidade de dados de preenchimento não pode ser determinada com certeza, geralmente é uma boa ideia ter o comprimento do registro corresponde ao tamanho dos dados que estão sendo gravados.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1726">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="6bda5-1727">Se o comprimento dos dados que estão sendo gravados for maior que o comprimento especificado na `RecordLength` cláusula do `FileOpen` função, uma exceção será gerada.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1727">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="6bda5-1728">Caso a variável que está sendo gravada seja uma cadeia de caracteres, `FilePut` grava um descritor de dois bytes que contém o tamanho da cadeia de caracteres e, em seguida, grava os dados que vão para a variável.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1728">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="6bda5-1729">Portanto, o comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser pelo menos dois bytes maior do que o comprimento real da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1729">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="6bda5-1730">Caso a variável que está sendo gravada seja um objeto que contém um tipo numérico, `FilePut` grava dois bytes que identificam o `VarType` do objeto e, em seguida, grava a variável.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1730">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="6bda5-1731">Por exemplo, ao escrever um objeto que contém um número inteiro, `FilePut` grava seis bytes: dois bytes que identificam o objeto como `VarType(3)` (`Integer`) e quatro bytes que contêm os dados.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1731">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="6bda5-1732">O comprimento do registro especificado pelo `RecordLength` parâmetro no `FileOpen` função deve ser pelo menos dois bytes maior do que o número real de bytes necessários para armazenar a variável.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1732">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="6bda5-1733">Se a variável que está sendo gravada for um objeto que contém uma cadeia de caracteres `FilePut` grava um descritor de dois bytes que identifica o `VarType(8)` do objeto, um descritor de dois bytes indicando o comprimento da cadeia de caracteres e, em seguida, grava os dados de cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1733">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="6bda5-1734">O comprimento do registro especificado pelo `RecordLength` parâmetro no `FileOpen` função deve ser maior que o comprimento real da cadeia de caracteres de pelo menos quatro bytes.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1734">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="6bda5-1735">Caso queira colocar uma cadeia de caracteres sem o descritor, você deve passar `True` para o parâmetro `StringIsFixedLength`, e a cadeia de caracteres lida deve ter o tamanho correto.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1735">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="6bda5-1736">Caso a variável gravada seja uma matriz, você tem a opção de gravar ou não um descritor para o tamanho e as dimensões da matriz.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1736">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="6bda5-1737">O descritor de arquivo para uma matriz dinâmica, mas não para uma matriz de tamanho fixo de gravação do Visual Basic 6.0 e versões anteriores.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1737">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="6bda5-1738">O padrão do Visual Basic 2005 é não gravar o descritor.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1738">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="6bda5-1739">Para gravar o descritor, defina as `ArrayIsDynamic` parâmetro para `True`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1739">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="6bda5-1740">Ao escrever a matriz, você precisa comparar a forma com que a matriz será lida; se ela for lida com o descritor, você precisará escrever o descritor.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1740">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="6bda5-1741">O descritor especifica a classificação de matriz, o tamanho e os limites inferiores para cada classificação.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1741">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="6bda5-1742">Seu comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="6bda5-1742">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="6bda5-1743">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessário para gravar os dados de matriz e o descritor de matriz.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1743">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="6bda5-1744">Por exemplo, a seguinte declaração de matriz requer 218 bytes quando a matriz é gravada no disco.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1744">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="6bda5-1745">Se a variável que está sendo gravada for qualquer outro tipo de variável (não uma cadeia de caracteres de comprimento variável ou um objeto), `FilePut` grava apenas os dados da variável.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1745">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="6bda5-1746">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual ao comprimento dos dados que estão sendo gravados.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1746">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="6bda5-1747">`FilePut` grava os elementos de estruturas como se cada um fosse escrito individualmente, exceto que não há nenhum preenchimento entre os elementos.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1747">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="6bda5-1748">O `VBFixedString` atributo pode ser aplicado a campos de cadeia de caracteres em estruturas para indicar o tamanho da cadeia de caracteres quando gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1748">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="6bda5-1749">Os campos que têm mais bytes que o especificado pela cadeia de caracteres a `VBFixedString` atributo são truncados quando gravados em disco,</span><span class="sxs-lookup"><span data-stu-id="6bda5-1749">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="6bda5-1750">Modo binário</span><span class="sxs-lookup"><span data-stu-id="6bda5-1750">Binary Mode</span></span>  
 <span data-ttu-id="6bda5-1751">Para arquivos abertos no `Binary` modo, a maioria do `Random` modo regras se aplicam, com algumas exceções.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1751">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="6bda5-1752">As seguintes regras para arquivos abertos no `Binary` modo são diferentes das regras para `Random` modo:</span><span class="sxs-lookup"><span data-stu-id="6bda5-1752">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="6bda5-1753">A cláusula `RecordLength` na função de `FileOpen` não está em vigor.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1753">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="6bda5-1754">`FilePut` grava todas as variáveis em disco de maneira contígua, ou seja, sem preenchimento entre os registros.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1754">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="6bda5-1755">Para qualquer matriz que não seja uma matriz em uma estrutura, `FilePut` grava apenas os dados.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1755">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="6bda5-1756">Nenhum descritor é escrito.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1756">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="6bda5-1757">`FilePut` Grava cadeias de caracteres de comprimento variável que não são elementos das estruturas sem o descritor de dois bytes de comprimento.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1757">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="6bda5-1758">O número de bytes gravados é igual ao número de caracteres na cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1758">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="6bda5-1759">Por exemplo, as instruções a seguir escrever 11 bytes no arquivo número 1:</span><span class="sxs-lookup"><span data-stu-id="6bda5-1759">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="6bda5-1760">A gravação em um arquivo usando a função `FilePut` requer o acesso `Write` da enumeração <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1760">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6bda5-1761">Este exemplo usa o `FilePut` função para gravar dados em um arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1761">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="6bda5-1762">Cinco registros da estrutura `Person` são gravados no arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1762">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6bda5-1763">
            <paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1763">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="6bda5-1764">O modo de arquivo é inválido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1764">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (object FileNumber, object Value, object RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(object FileNumber, object Value, object RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Object, Value As Object, Optional RecordNumber As Object = -1)" />
      <MemberSignature Language="F#" Value="static member FilePut : obj * obj * obj -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FilePut (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Obsolete("This member has been deprecated. Please use FilePutObject to write Object types, or coerce FileNumber and RecordNumber to Integer for writing non-Object types. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("Use FilePutObject to write Object types, or coerce FileNumber and RecordNumber to Integer for writing non-Object types")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Object" />
        <Parameter Name="Value" Type="System.Object" />
        <Parameter Name="RecordNumber" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="6bda5-1765">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1765">Required.</span>
          </span>
          <span data-ttu-id="6bda5-1766">Qualquer número de arquivo válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1766">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="6bda5-1767">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1767">Required.</span>
          </span>
          <span data-ttu-id="6bda5-1768">Nome de variável válido que contém dados gravados em disco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1768">Valid variable name that contains data written to disk.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="6bda5-1769">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1769">Optional.</span>
          </span>
          <span data-ttu-id="6bda5-1770">Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a gravação começa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1770">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6bda5-1771">Grava dados de uma variável em um arquivo de disco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1771">Writes data from a variable to a disk file.</span>
          </span>
          <span data-ttu-id="6bda5-1772">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FilePut" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1772">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span>
          </span>
          <span data-ttu-id="6bda5-1773">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1773">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bda5-1774">`FilePut` só é válido em `Random` e `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1774">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="6bda5-1775">Dados gravados com `FilePut` costumam ser lidos a partir de um arquivo usando `FileGet`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1775">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="6bda5-1776">O primeiro registro ou byte em um arquivo está na posição 1, o segundo registro ou byte está na posição 2 e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1776">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="6bda5-1777">Se você omitir `RecordNumber`, o próximo registro ou byte após a última `FileGet` ou `FilePut` funcionar ou apontado pela última `Seek` função é escrita.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1777">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="6bda5-1778">O argumento `StringIsFixedLength` controla se a função interpreta cadeias de caracteres como sendo de tamanho variável ou fixo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1778">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="6bda5-1779">`FilePut` não grava o descritor do tamanho quando o argumento é `True`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1779">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="6bda5-1780">Se você usar `StringIsFixedLength`  =  `True` com `FilePut`, você precisa fazer o mesmo com `FileGet`, e você precisa certificar-se de que a cadeia de caracteres é inicializada com o tamanho esperado.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1780">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="6bda5-1781">Modo aleatório</span><span class="sxs-lookup"><span data-stu-id="6bda5-1781">Random Mode</span></span>  
 <span data-ttu-id="6bda5-1782">Para arquivos abertos no `Random` modo, as seguintes regras se aplicam:</span><span class="sxs-lookup"><span data-stu-id="6bda5-1782">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="6bda5-1783">Se o comprimento dos dados que estão sendo gravados for menor que o comprimento especificado na `RecordLength` cláusula do `FileOpen` função, `FilePut` grava registros subsequentes em limites de comprimento de registro.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1783">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="6bda5-1784">O espaço entre o final de um registro e o início do próximo registro é preenchido com o conteúdo existente no buffer de arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1784">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="6bda5-1785">Como a quantidade de dados de preenchimento não pode ser determinada com certeza, geralmente é uma boa ideia ter o comprimento do registro corresponde ao tamanho dos dados que estão sendo gravados.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1785">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="6bda5-1786">Se o comprimento dos dados que estão sendo gravados for maior que o comprimento especificado na `RecordLength` cláusula do `FileOpen` função, uma exceção será gerada.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1786">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="6bda5-1787">Caso a variável que está sendo gravada seja uma cadeia de caracteres, `FilePut` grava um descritor de dois bytes que contém o tamanho da cadeia de caracteres e, em seguida, grava os dados que vão para a variável.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1787">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="6bda5-1788">Portanto, o comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser pelo menos dois bytes maior do que o comprimento real da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1788">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="6bda5-1789">Caso a variável que está sendo gravada seja um objeto que contém um tipo numérico, `FilePut` grava dois bytes que identificam o `VarType` do objeto e, em seguida, grava a variável.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1789">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="6bda5-1790">Por exemplo, ao escrever um objeto que contém um número inteiro, `FilePut` grava seis bytes: dois bytes que identificam o objeto como `VarType(3)` (`Integer`) e quatro bytes que contêm os dados.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1790">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="6bda5-1791">O comprimento do registro especificado pelo `RecordLength` parâmetro no `FileOpen` função deve ser pelo menos dois bytes maior do que o número real de bytes necessários para armazenar a variável.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1791">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="6bda5-1792">Se a variável que está sendo gravada for um objeto que contém uma cadeia de caracteres `FilePut` grava um descritor de dois bytes que identifica o `VarType(8)` do objeto, um descritor de dois bytes indicando o comprimento da cadeia de caracteres e, em seguida, grava os dados de cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1792">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="6bda5-1793">O comprimento do registro especificado pelo `RecordLength` parâmetro no `FileOpen` função deve ser maior que o comprimento real da cadeia de caracteres de pelo menos quatro bytes.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1793">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="6bda5-1794">Caso queira colocar uma cadeia de caracteres sem o descritor, você deve passar `True` para o parâmetro `StringIsFixedLength`, e a cadeia de caracteres lida deve ter o tamanho correto.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1794">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="6bda5-1795">Caso a variável gravada seja uma matriz, você tem a opção de gravar ou não um descritor para o tamanho e as dimensões da matriz.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1795">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="6bda5-1796">O descritor de arquivo para uma matriz dinâmica, mas não para uma matriz de tamanho fixo de gravação do Visual Basic 6.0 e versões anteriores.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1796">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="6bda5-1797">O padrão do Visual Basic 2005 é não gravar o descritor.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1797">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="6bda5-1798">Para gravar o descritor, defina as `ArrayIsDynamic` parâmetro para `True`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1798">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="6bda5-1799">Ao escrever a matriz, você precisa comparar a forma com que a matriz será lida; se ela for lida com o descritor, você precisará escrever o descritor.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1799">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="6bda5-1800">O descritor especifica a classificação de matriz, o tamanho e os limites inferiores para cada classificação.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1800">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="6bda5-1801">Seu comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="6bda5-1801">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="6bda5-1802">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessário para gravar os dados de matriz e o descritor de matriz.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1802">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="6bda5-1803">Por exemplo, a seguinte declaração de matriz requer 218 bytes quando a matriz é gravada no disco.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1803">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="6bda5-1804">Se a variável que está sendo gravada for qualquer outro tipo de variável (não uma cadeia de caracteres de comprimento variável ou um objeto), `FilePut` grava apenas os dados da variável.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1804">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="6bda5-1805">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual ao comprimento dos dados que estão sendo gravados.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1805">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="6bda5-1806">`FilePut` grava os elementos de estruturas como se cada um fosse escrito individualmente, exceto que não há nenhum preenchimento entre os elementos.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1806">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="6bda5-1807">O `VBFixedString` atributo pode ser aplicado a campos de cadeia de caracteres em estruturas para indicar o tamanho da cadeia de caracteres quando gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1807">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="6bda5-1808">Os campos que têm mais bytes que o especificado pela cadeia de caracteres a `VBFixedString` atributo são truncados quando gravados em disco,</span><span class="sxs-lookup"><span data-stu-id="6bda5-1808">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="6bda5-1809">Modo binário</span><span class="sxs-lookup"><span data-stu-id="6bda5-1809">Binary Mode</span></span>  
 <span data-ttu-id="6bda5-1810">Para arquivos abertos no `Binary` modo, a maioria do `Random` modo regras se aplicam, com algumas exceções.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1810">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="6bda5-1811">As seguintes regras para arquivos abertos no `Binary` modo são diferentes das regras para `Random` modo:</span><span class="sxs-lookup"><span data-stu-id="6bda5-1811">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="6bda5-1812">A cláusula `RecordLength` na função de `FileOpen` não está em vigor.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1812">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="6bda5-1813">`FilePut` grava todas as variáveis em disco de maneira contígua, ou seja, sem preenchimento entre os registros.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1813">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="6bda5-1814">Para qualquer matriz que não seja uma matriz em uma estrutura, `FilePut` grava apenas os dados.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1814">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="6bda5-1815">Nenhum descritor é escrito.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1815">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="6bda5-1816">`FilePut` Grava cadeias de caracteres de comprimento variável que não são elementos das estruturas sem o descritor de dois bytes de comprimento.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1816">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="6bda5-1817">O número de bytes gravados é igual ao número de caracteres na cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1817">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="6bda5-1818">Por exemplo, as instruções a seguir escrever 11 bytes no arquivo número 1:</span><span class="sxs-lookup"><span data-stu-id="6bda5-1818">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="6bda5-1819">A gravação em um arquivo usando a função `FilePut` requer o acesso `Write` da enumeração <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1819">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6bda5-1820">Este exemplo usa o `FilePut` função para gravar dados em um arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1820">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="6bda5-1821">Cinco registros da estrutura `Person` são gravados no arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1821">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6bda5-1822">
            <paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1822">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="6bda5-1823">O modo de arquivo é inválido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1823">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (int FileNumber, string Value, long RecordNumber = -1, bool StringIsFixedLength = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(int32 FileNumber, string Value, int64 RecordNumber, bool StringIsFixedLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.String,System.Int64,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Integer, Value As String, Optional RecordNumber As Long = -1, Optional StringIsFixedLength As Boolean = false)" />
      <MemberSignature Language="F#" Value="static member FilePut : int * string * int64 * bool -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FilePut (FileNumber, Value, RecordNumber, StringIsFixedLength)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.String" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
        <Parameter Name="StringIsFixedLength" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="6bda5-1824">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1824">Required.</span>
          </span>
          <span data-ttu-id="6bda5-1825">Qualquer número de arquivo válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1825">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="6bda5-1826">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1826">Required.</span>
          </span>
          <span data-ttu-id="6bda5-1827">Nome de variável válido que contém dados gravados em disco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1827">Valid variable name that contains data written to disk.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="6bda5-1828">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1828">Optional.</span>
          </span>
          <span data-ttu-id="6bda5-1829">Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a gravação começa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1829">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span>
          </span>
        </param>
        <param name="StringIsFixedLength">
          <span data-ttu-id="6bda5-1830">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1830">Optional.</span>
          </span>
          <span data-ttu-id="6bda5-1831">Aplica-se somente ao gravar uma cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1831">Applies only when writing a string.</span>
          </span>
          <span data-ttu-id="6bda5-1832">Especifica se um descritor de comprimento de cadeia de caracteres de dois bytes da cadeia de caracteres deve ou não ser gravado no arquivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1832">Specifies whether to write a two-byte string length descriptor for the string to the file.</span>
          </span>
          <span data-ttu-id="6bda5-1833">O padrão é <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1833">The default is <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6bda5-1834">Grava dados de uma variável em um arquivo de disco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1834">Writes data from a variable to a disk file.</span>
          </span>
          <span data-ttu-id="6bda5-1835">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FilePut" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1835">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span>
          </span>
          <span data-ttu-id="6bda5-1836">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1836">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />..</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bda5-1837">`FilePut` só é válido em `Random` e `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1837">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="6bda5-1838">Dados gravados com `FilePut` costumam ser lidos a partir de um arquivo usando `FileGet`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1838">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="6bda5-1839">O primeiro registro ou byte em um arquivo está na posição 1, o segundo registro ou byte está na posição 2 e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1839">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="6bda5-1840">Se você omitir `RecordNumber`, o próximo registro ou byte após a última `FileGet` ou `FilePut` funcionar ou apontado pela última `Seek` função é escrita.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1840">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="6bda5-1841">O argumento `StringIsFixedLength` controla se a função interpreta cadeias de caracteres como sendo de tamanho variável ou fixo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1841">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="6bda5-1842">`FilePut` não grava o descritor do tamanho quando o argumento é `True`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1842">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="6bda5-1843">Se você usar `StringIsFixedLength`  =  `True` com `FilePut`, você precisa fazer o mesmo com `FileGet`, e você precisa certificar-se de que a cadeia de caracteres é inicializada com o tamanho esperado.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1843">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="6bda5-1844">Modo aleatório</span><span class="sxs-lookup"><span data-stu-id="6bda5-1844">Random Mode</span></span>  
 <span data-ttu-id="6bda5-1845">Para arquivos abertos no `Random` modo, as seguintes regras se aplicam:</span><span class="sxs-lookup"><span data-stu-id="6bda5-1845">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="6bda5-1846">Se o comprimento dos dados que estão sendo gravados for menor que o comprimento especificado na `RecordLength` cláusula do `FileOpen` função, `FilePut` grava registros subsequentes em limites de comprimento de registro.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1846">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="6bda5-1847">O espaço entre o final de um registro e o início do próximo registro é preenchido com o conteúdo existente no buffer de arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1847">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="6bda5-1848">Como a quantidade de dados de preenchimento não pode ser determinada com certeza, geralmente é uma boa ideia ter o comprimento do registro corresponde ao tamanho dos dados que estão sendo gravados.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1848">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="6bda5-1849">Se o comprimento dos dados que estão sendo gravados for maior que o comprimento especificado na `RecordLength` cláusula do `FileOpen` função, uma exceção será gerada.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1849">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="6bda5-1850">Caso a variável que está sendo gravada seja uma cadeia de caracteres, `FilePut` grava um descritor de dois bytes que contém o tamanho da cadeia de caracteres e, em seguida, grava os dados que vão para a variável.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1850">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="6bda5-1851">Portanto, o comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser pelo menos dois bytes maior do que o comprimento real da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1851">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="6bda5-1852">Caso a variável que está sendo gravada seja um objeto que contém um tipo numérico, `FilePut` grava dois bytes que identificam o `VarType` do objeto e, em seguida, grava a variável.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1852">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="6bda5-1853">Por exemplo, ao escrever um objeto que contém um número inteiro, `FilePut` grava seis bytes: dois bytes que identificam o objeto como `VarType(3)` (`Integer`) e quatro bytes que contêm os dados.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1853">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="6bda5-1854">O comprimento do registro especificado pelo `RecordLength` parâmetro no `FileOpen` função deve ser pelo menos dois bytes maior do que o número real de bytes necessários para armazenar a variável.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1854">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="6bda5-1855">Se a variável que está sendo gravada for um objeto que contém uma cadeia de caracteres `FilePut` grava um descritor de dois bytes que identifica o `VarType(8)` do objeto, um descritor de dois bytes indicando o comprimento da cadeia de caracteres e, em seguida, grava os dados de cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1855">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="6bda5-1856">O comprimento do registro especificado pelo `RecordLength` parâmetro no `FileOpen` função deve ser maior que o comprimento real da cadeia de caracteres de pelo menos quatro bytes.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1856">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="6bda5-1857">Caso queira colocar uma cadeia de caracteres sem o descritor, você deve passar `True` para o parâmetro `StringIsFixedLength`, e a cadeia de caracteres lida deve ter o tamanho correto.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1857">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="6bda5-1858">Caso a variável gravada seja uma matriz, você tem a opção de gravar ou não um descritor para o tamanho e as dimensões da matriz.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1858">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="6bda5-1859">O descritor de arquivo para uma matriz dinâmica, mas não para uma matriz de tamanho fixo de gravação do Visual Basic 6.0 e versões anteriores.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1859">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="6bda5-1860">O padrão do Visual Basic 2005 é não gravar o descritor.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1860">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="6bda5-1861">Para gravar o descritor, defina as `ArrayIsDynamic` parâmetro para `True`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1861">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="6bda5-1862">Ao escrever a matriz, você precisa comparar a forma com que a matriz será lida; se ela for lida com o descritor, você precisará escrever o descritor.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1862">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="6bda5-1863">O descritor especifica a classificação de matriz, o tamanho e os limites inferiores para cada classificação.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1863">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="6bda5-1864">Seu comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="6bda5-1864">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="6bda5-1865">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessário para gravar os dados de matriz e o descritor de matriz.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1865">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="6bda5-1866">Por exemplo, a seguinte declaração de matriz requer 218 bytes quando a matriz é gravada no disco.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1866">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="6bda5-1867">Se a variável que está sendo gravada for qualquer outro tipo de variável (não uma cadeia de caracteres de comprimento variável ou um objeto), `FilePut` grava apenas os dados da variável.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1867">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="6bda5-1868">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual ao comprimento dos dados que estão sendo gravados.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1868">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="6bda5-1869">`FilePut` grava os elementos de estruturas como se cada um fosse escrito individualmente, exceto que não há nenhum preenchimento entre os elementos.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1869">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="6bda5-1870">O `VBFixedString` atributo pode ser aplicado a campos de cadeia de caracteres em estruturas para indicar o tamanho da cadeia de caracteres quando gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1870">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="6bda5-1871">Os campos que têm mais bytes que o especificado pela cadeia de caracteres a `VBFixedString` atributo são truncados quando gravados em disco,</span><span class="sxs-lookup"><span data-stu-id="6bda5-1871">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="6bda5-1872">Modo binário</span><span class="sxs-lookup"><span data-stu-id="6bda5-1872">Binary Mode</span></span>  
 <span data-ttu-id="6bda5-1873">Para arquivos abertos no `Binary` modo, a maioria do `Random` modo regras se aplicam, com algumas exceções.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1873">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="6bda5-1874">As seguintes regras para arquivos abertos no `Binary` modo são diferentes das regras para `Random` modo:</span><span class="sxs-lookup"><span data-stu-id="6bda5-1874">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="6bda5-1875">A cláusula `RecordLength` na função de `FileOpen` não está em vigor.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1875">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="6bda5-1876">`FilePut` grava todas as variáveis em disco de maneira contígua, ou seja, sem preenchimento entre os registros.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1876">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="6bda5-1877">Para qualquer matriz que não seja uma matriz em uma estrutura, `FilePut` grava apenas os dados.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1877">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="6bda5-1878">Nenhum descritor é escrito.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1878">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="6bda5-1879">`FilePut` Grava cadeias de caracteres de comprimento variável que não são elementos das estruturas sem o descritor de dois bytes de comprimento.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1879">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="6bda5-1880">O número de bytes gravados é igual ao número de caracteres na cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1880">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="6bda5-1881">Por exemplo, as instruções a seguir escrever 11 bytes no arquivo número 1:</span><span class="sxs-lookup"><span data-stu-id="6bda5-1881">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="6bda5-1882">A gravação em um arquivo usando a função `FilePut` requer o acesso `Write` da enumeração <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1882">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6bda5-1883">Este exemplo usa o `FilePut` função para gravar dados em um arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1883">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="6bda5-1884">Cinco registros da estrutura `Person` são gravados no arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1884">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6bda5-1885">
            <paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1885">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="6bda5-1886">O modo de arquivo é inválido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1886">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (int FileNumber, Array Value, long RecordNumber = -1, bool ArrayIsDynamic = false, bool StringIsFixedLength = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(int32 FileNumber, class System.Array Value, int64 RecordNumber, bool ArrayIsDynamic, bool StringIsFixedLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Array,System.Int64,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Integer, Value As Array, Optional RecordNumber As Long = -1, Optional ArrayIsDynamic As Boolean = false, Optional StringIsFixedLength As Boolean = false)" />
      <MemberSignature Language="F#" Value="static member FilePut : int * Array * int64 * bool * bool -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FilePut (FileNumber, Value, RecordNumber, ArrayIsDynamic, StringIsFixedLength)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Array" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
        <Parameter Name="ArrayIsDynamic" Type="System.Boolean" />
        <Parameter Name="StringIsFixedLength" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="6bda5-1887">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1887">Required.</span>
          </span>
          <span data-ttu-id="6bda5-1888">Qualquer número de arquivo válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1888">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="6bda5-1889">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1889">Required.</span>
          </span>
          <span data-ttu-id="6bda5-1890">Nome de variável válido que contém dados gravados em disco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1890">Valid variable name that contains data written to disk.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="6bda5-1891">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1891">Optional.</span>
          </span>
          <span data-ttu-id="6bda5-1892">Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a gravação começa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1892">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span>
          </span>
        </param>
        <param name="ArrayIsDynamic">
          <span data-ttu-id="6bda5-1893">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1893">Optional.</span>
          </span>
          <span data-ttu-id="6bda5-1894">Aplica-se somente ao gravar uma matriz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1894">Applies only when writing an array.</span>
          </span>
          <span data-ttu-id="6bda5-1895">Especifica se a matriz deve ou não ser tratada como dinâmica e se um descritor de matriz deve ou não ser gravado na cadeia de caracteres que descreve o comprimento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1895">Specifies whether the array is to be treated as dynamic, and whether to write an array descriptor for the string that describes the length.</span>
          </span>
        </param>
        <param name="StringIsFixedLength">
          <span data-ttu-id="6bda5-1896">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1896">Optional.</span>
          </span>
          <span data-ttu-id="6bda5-1897">Aplica-se somente ao gravar uma cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1897">Applies only when writing a string.</span>
          </span>
          <span data-ttu-id="6bda5-1898">Especifica se um descritor de comprimento de cadeia de caracteres de dois bytes da cadeia de caracteres deve ou não ser gravado no arquivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1898">Specifies whether to write a two-byte string length descriptor for the string to the file.</span>
          </span>
          <span data-ttu-id="6bda5-1899">O padrão é <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1899">The default is <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6bda5-1900">Grava dados de uma variável em um arquivo de disco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1900">Writes data from a variable to a disk file.</span>
          </span>
          <span data-ttu-id="6bda5-1901">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FilePut" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1901">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span>
          </span>
          <span data-ttu-id="6bda5-1902">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1902">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bda5-1903">`FilePut` só é válido em `Random` e `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1903">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="6bda5-1904">Dados gravados com `FilePut` costumam ser lidos a partir de um arquivo usando `FileGet`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1904">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="6bda5-1905">O primeiro registro ou byte em um arquivo está na posição 1, o segundo registro ou byte está na posição 2 e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1905">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="6bda5-1906">Se você omitir `RecordNumber`, o próximo registro ou byte após a última `FileGet` ou `FilePut` funcionar ou apontado pela última `Seek` função é escrita.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1906">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="6bda5-1907">O argumento `StringIsFixedLength` controla se a função interpreta cadeias de caracteres como sendo de tamanho variável ou fixo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1907">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="6bda5-1908">`FilePut` não grava o descritor do tamanho quando o argumento é `True`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1908">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="6bda5-1909">Se você usar `StringIsFixedLength`  =  `True` com `FilePut`, você precisa fazer o mesmo com `FileGet`, e você precisa certificar-se de que a cadeia de caracteres é inicializada com o tamanho esperado.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1909">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="6bda5-1910">Modo aleatório</span><span class="sxs-lookup"><span data-stu-id="6bda5-1910">Random Mode</span></span>  
 <span data-ttu-id="6bda5-1911">Para arquivos abertos no `Random` modo, as seguintes regras se aplicam:</span><span class="sxs-lookup"><span data-stu-id="6bda5-1911">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="6bda5-1912">Se o comprimento dos dados que estão sendo gravados for menor que o comprimento especificado na `RecordLength` cláusula do `FileOpen` função, `FilePut` grava registros subsequentes em limites de comprimento de registro.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1912">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="6bda5-1913">O espaço entre o final de um registro e o início do próximo registro é preenchido com o conteúdo existente no buffer de arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1913">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="6bda5-1914">Como a quantidade de dados de preenchimento não pode ser determinada com certeza, geralmente é uma boa ideia ter o comprimento do registro corresponde ao tamanho dos dados que estão sendo gravados.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1914">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="6bda5-1915">Se o comprimento dos dados que estão sendo gravados for maior que o comprimento especificado na `RecordLength` cláusula do `FileOpen` função, uma exceção será gerada.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1915">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="6bda5-1916">Caso a variável que está sendo gravada seja uma cadeia de caracteres, `FilePut` grava um descritor de dois bytes que contém o tamanho da cadeia de caracteres e, em seguida, grava os dados que vão para a variável.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1916">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="6bda5-1917">Portanto, o comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser pelo menos dois bytes maior do que o comprimento real da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1917">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="6bda5-1918">Caso a variável que está sendo gravada seja um objeto que contém um tipo numérico, `FilePut` grava dois bytes que identificam o `VarType` do objeto e, em seguida, grava a variável.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1918">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="6bda5-1919">Por exemplo, ao escrever um objeto que contém um número inteiro, `FilePut` grava seis bytes: dois bytes que identificam o objeto como `VarType(3)` (`Integer`) e quatro bytes que contêm os dados.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1919">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="6bda5-1920">O comprimento do registro especificado pelo `RecordLength` parâmetro no `FileOpen` função deve ser pelo menos dois bytes maior do que o número real de bytes necessários para armazenar a variável.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1920">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="6bda5-1921">Se a variável que está sendo gravada for um objeto que contém uma cadeia de caracteres `FilePut` grava um descritor de dois bytes que identifica o `VarType(8)` do objeto, um descritor de dois bytes indicando o comprimento da cadeia de caracteres e, em seguida, grava os dados de cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1921">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="6bda5-1922">O comprimento do registro especificado pelo `RecordLength` parâmetro no `FileOpen` função deve ser maior que o comprimento real da cadeia de caracteres de pelo menos quatro bytes.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1922">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="6bda5-1923">Caso queira colocar uma cadeia de caracteres sem o descritor, você deve passar `True` para o parâmetro `StringIsFixedLength`, e a cadeia de caracteres lida deve ter o tamanho correto.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1923">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="6bda5-1924">Caso a variável gravada seja uma matriz, você tem a opção de gravar ou não um descritor para o tamanho e as dimensões da matriz.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1924">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="6bda5-1925">O descritor de arquivo para uma matriz dinâmica, mas não para uma matriz de tamanho fixo de gravação do Visual Basic 6.0 e versões anteriores.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1925">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="6bda5-1926">O padrão do Visual Basic 2005 é não gravar o descritor.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1926">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="6bda5-1927">Para gravar o descritor, defina as `ArrayIsDynamic` parâmetro para `True`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1927">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="6bda5-1928">Ao escrever a matriz, você precisa comparar a forma com que a matriz será lida; se ela for lida com o descritor, você precisará escrever o descritor.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1928">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="6bda5-1929">O descritor especifica a classificação de matriz, o tamanho e os limites inferiores para cada classificação.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1929">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="6bda5-1930">Seu comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="6bda5-1930">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="6bda5-1931">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessário para gravar os dados de matriz e o descritor de matriz.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1931">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="6bda5-1932">Por exemplo, a seguinte declaração de matriz requer 218 bytes quando a matriz é gravada no disco.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1932">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="6bda5-1933">Se a variável que está sendo gravada for qualquer outro tipo de variável (não uma cadeia de caracteres de comprimento variável ou um objeto), `FilePut` grava apenas os dados da variável.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1933">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="6bda5-1934">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual ao comprimento dos dados que estão sendo gravados.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1934">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="6bda5-1935">`FilePut` grava os elementos de estruturas como se cada um fosse escrito individualmente, exceto que não há nenhum preenchimento entre os elementos.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1935">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="6bda5-1936">O `VBFixedString` atributo pode ser aplicado a campos de cadeia de caracteres em estruturas para indicar o tamanho da cadeia de caracteres quando gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1936">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="6bda5-1937">Os campos que têm mais bytes que o especificado pela cadeia de caracteres a `VBFixedString` atributo são truncados quando gravados em disco,</span><span class="sxs-lookup"><span data-stu-id="6bda5-1937">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="6bda5-1938">Modo binário</span><span class="sxs-lookup"><span data-stu-id="6bda5-1938">Binary Mode</span></span>  
 <span data-ttu-id="6bda5-1939">Para arquivos abertos no `Binary` modo, a maioria do `Random` modo regras se aplicam, com algumas exceções.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1939">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="6bda5-1940">As seguintes regras para arquivos abertos no `Binary` modo são diferentes das regras para `Random` modo:</span><span class="sxs-lookup"><span data-stu-id="6bda5-1940">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="6bda5-1941">A cláusula `RecordLength` na função de `FileOpen` não está em vigor.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1941">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="6bda5-1942">`FilePut` grava todas as variáveis em disco de maneira contígua, ou seja, sem preenchimento entre os registros.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1942">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="6bda5-1943">Para qualquer matriz que não seja uma matriz em uma estrutura, `FilePut` grava apenas os dados.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1943">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="6bda5-1944">Nenhum descritor é escrito.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1944">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="6bda5-1945">`FilePut` Grava cadeias de caracteres de comprimento variável que não são elementos das estruturas sem o descritor de dois bytes de comprimento.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1945">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="6bda5-1946">O número de bytes gravados é igual ao número de caracteres na cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1946">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="6bda5-1947">Por exemplo, as instruções a seguir escrever 11 bytes no arquivo número 1:</span><span class="sxs-lookup"><span data-stu-id="6bda5-1947">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="6bda5-1948">A gravação em um arquivo usando a função `FilePut` requer o acesso `Write` da enumeração <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1948">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6bda5-1949">Este exemplo usa o `FilePut` função para gravar dados em um arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1949">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="6bda5-1950">Cinco registros da estrutura `Person` são gravados no arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1950">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6bda5-1951">
            <paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1951">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="6bda5-1952">O modo de arquivo é inválido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1952">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FilePutObject">
      <MemberSignature Language="C#" Value="public static void FilePutObject (int FileNumber, object Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePutObject(int32 FileNumber, object Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePutObject(System.Int32,System.Object,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePutObject (FileNumber As Integer, Value As Object, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FilePutObject : int * obj * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FilePutObject (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Object" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="6bda5-1953">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1953">Required.</span>
          </span>
          <span data-ttu-id="6bda5-1954">Qualquer número de arquivo válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1954">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="6bda5-1955">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1955">Required.</span>
          </span>
          <span data-ttu-id="6bda5-1956">Nome de variável válido que contém dados gravados em disco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1956">Valid variable name that contains data written to disk.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="6bda5-1957">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1957">Optional.</span>
          </span>
          <span data-ttu-id="6bda5-1958">Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a gravação começa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1958">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6bda5-1959">Grava dados de uma variável em um arquivo de disco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1959">Writes data from a variable to a disk file.</span>
          </span>
          <span data-ttu-id="6bda5-1960">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FilePutObject" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1960">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePutObject" />.</span>
          </span>
          <span data-ttu-id="6bda5-1961">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1961">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bda5-1962">O `FilePutObject` função é usada em vez de `FilePut` para evitar ambiguidades em tempo de compilação se tipo `Object` é passado em vez de outro tipo, como `Integer`, `Long`, `Short`e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1962">The `FilePutObject` function is used instead of `FilePut` to avoid ambiguities at compile time if type `Object` is passed instead of another type, such as `Integer`, `Long`, `Short`, and so forth.</span></span>  
  
 <span data-ttu-id="6bda5-1963">`FilePutObject` gravações e leituras de descritores que descrevem o objeto.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1963">`FilePutObject` writes and reads descriptors that describe the object.</span></span> <span data-ttu-id="6bda5-1964">Se você pretende gravar o `Variant` tipo, `FilePutObject` é necessária.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1964">If you intend to write out the `Variant` type, `FilePutObject` is required.</span></span> <span data-ttu-id="6bda5-1965">Em caso de dúvida, se você estiver usando um objeto para o segundo parâmetro, é recomendável que você sempre use `FilePutObject` e `FileGetObject`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1965">When in doubt, if you are using an object for the second parameter, we recommend that you always use `FilePutObject` and `FileGetObject`.</span></span>  
  
 <span data-ttu-id="6bda5-1966">`FilePutObject` só é válido em `Random` e `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1966">`FilePutObject` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="6bda5-1967">Dados gravados com `FilePutObject` costumam ser lidos a partir de um arquivo usando `FileGetObject`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1967">Data written with `FilePutObject` is usually read from a file by using `FileGetObject`.</span></span>  
  
 <span data-ttu-id="6bda5-1968">O primeiro registro ou byte em um arquivo está na posição 1, o segundo registro ou byte está na posição 2 e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1968">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="6bda5-1969">Se você omitir `RecordNumber`, `FilePutObject` grava o próximo registro ou byte após a última `FileGetObject` ou `FilePutObject` função (ou o registro ou byte apontado pela última `Seek` função).</span><span class="sxs-lookup"><span data-stu-id="6bda5-1969">If you omit `RecordNumber`, `FilePutObject` writes the next record or byte after the last `FileGetObject` or `FilePutObject` function (or the record or byte pointed to by the last `Seek` function).</span></span>  
  
 <span data-ttu-id="6bda5-1970">O argumento `StringIsFixedLength` controla se a função interpreta cadeias de caracteres como sendo de tamanho variável ou fixo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1970">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="6bda5-1971">`FilePutObject` não grava o descritor do tamanho quando o argumento é `True`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1971">`FilePutObject` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="6bda5-1972">Se você usar `StringIsFixedLength`  =  `True` com `FilePutObject`, você precisa fazer o mesmo com `FileGetObject`, e você deve também Certifique-se de que a cadeia de caracteres é inicializada com o tamanho esperado.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1972">If you use `StringIsFixedLength` = `True` with `FilePutObject`, you have to do the same with `FileGetObject`, and you must also make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="6bda5-1973">Modo aleatório</span><span class="sxs-lookup"><span data-stu-id="6bda5-1973">Random Mode</span></span>  
 <span data-ttu-id="6bda5-1974">Para arquivos abertos no `Random` modo, as seguintes regras se aplicam:</span><span class="sxs-lookup"><span data-stu-id="6bda5-1974">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="6bda5-1975">Se o comprimento dos dados que estão sendo gravados for menor que o comprimento especificado na `RecordLength` cláusula do `FileOpen` função, `FilePutObject` grava registros subsequentes em limites de comprimento de registro.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1975">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePutObject` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="6bda5-1976">O espaço entre o final de um registro e o início do próximo registro é preenchido com o conteúdo existente no buffer de arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1976">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="6bda5-1977">Como a quantidade de dados de preenchimento não pode ser determinada precisamente, geralmente é uma boa ideia ter o comprimento do registro corresponde ao tamanho dos dados que estão sendo gravados.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1977">Because the amount of padding data cannot be precisely determined, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="6bda5-1978">Se o comprimento dos dados que estão sendo gravados for maior que o comprimento especificado na `RecordLength` cláusula do `FileOpen` função, uma exceção será lançada.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1978">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception is thrown.</span></span>  
  
-   <span data-ttu-id="6bda5-1979">Caso a variável que está sendo gravada seja um objeto que contém um tipo numérico, `FilePutObject` grava dois bytes que identificam o `VarType` do objeto e, em seguida, grava a variável.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1979">If the variable being written is an object that contains a numeric type, `FilePutObject` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="6bda5-1980">Por exemplo, ao escrever um objeto que contém um número inteiro, `FilePutObject` grava seis bytes: dois bytes que identificam o objeto como `VarType(3)` (`Integer`) e quatro bytes que contêm os dados.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1980">For example, when writing an object that contains an integer, `FilePutObject` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="6bda5-1981">O comprimento do registro especificado pelo `RecordLength` parâmetro no `FileOpen` função deve ser pelo menos dois bytes maior do que o número real de bytes necessários para armazenar a variável.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1981">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="6bda5-1982">Se a variável que está sendo gravada for um objeto que contém uma cadeia de caracteres `FilePutObject` grava um descritor de dois bytes que identifica o `VarType(8)` do objeto, um descritor de dois bytes indicando o comprimento da cadeia de caracteres e, em seguida, grava os dados de cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1982">If the variable being written is an object that contains a string, `FilePutObject` writes a two-byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="6bda5-1983">O comprimento do registro especificado pelo `RecordLength` parâmetro no `FileOpen` função deve ser maior que o comprimento real da cadeia de caracteres de pelo menos quatro bytes.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1983">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="6bda5-1984">Caso queira colocar uma cadeia de caracteres sem o descritor, você deve passar `True` para o parâmetro `StringIsFixedLength`, e a cadeia de caracteres lida deve ter o tamanho correto.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1984">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="6bda5-1985">Se a variável que está sendo gravada seja uma matriz e, em seguida, o comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessário para gravar os dados de matriz e o descritor de matriz.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1985">If the variable being written is an array, then the record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="6bda5-1986">O descritor especifica a classificação de matriz, o tamanho e os limites inferiores para cada classificação.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1986">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="6bda5-1987">Seu comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="6bda5-1987">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="6bda5-1988">Modo binário</span><span class="sxs-lookup"><span data-stu-id="6bda5-1988">Binary Mode</span></span>  
 <span data-ttu-id="6bda5-1989">Para arquivos abertos no `Binary` modo, todos os o `Random` aplicarem regras de modo, exceto:</span><span class="sxs-lookup"><span data-stu-id="6bda5-1989">For files opened in `Binary` mode, all the `Random` mode rules apply, except:</span></span>  
  
-   <span data-ttu-id="6bda5-1990">A cláusula `RecordLength` na função de `FileOpen` não está em vigor.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1990">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="6bda5-1991">`FilePutObject` grava todas as variáveis em disco de maneira contígua, ou seja, sem preenchimento entre os registros.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1991">`FilePutObject` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6bda5-1992">Este exemplo usa o `FilePutObject` função para gravar uma cadeia de caracteres em um arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-1992">This example uses the `FilePutObject` function to write a string to a file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#54](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#54)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />
      </Docs>
    </Member>
    <Member MemberName="FileWidth">
      <MemberSignature Language="C#" Value="public static void FileWidth (int FileNumber, int RecordWidth);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileWidth(int32 FileNumber, int32 RecordWidth) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileWidth(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileWidth (FileNumber As Integer, RecordWidth As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void FileWidth(int FileNumber, int RecordWidth);" />
      <MemberSignature Language="F#" Value="static member FileWidth : int * int -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileWidth (FileNumber, RecordWidth)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="RecordWidth" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="6bda5-1993">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1993">Required.</span>
          </span>
          <span data-ttu-id="6bda5-1994">Qualquer número de arquivo válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1994">Any valid file number.</span>
          </span>
        </param>
        <param name="RecordWidth">
          <span data-ttu-id="6bda5-1995">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1995">Required.</span>
          </span>
          <span data-ttu-id="6bda5-1996">Expressão numérica no intervalo 0 a 255, inclusive, que indica quantos caracteres são exibidos em uma linha antes de uma nova linha ser iniciada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1996">Numeric expression in the range 0–255, inclusive, which indicates how many characters appear on a line before a new line is started.</span>
          </span>
          <span data-ttu-id="6bda5-1997">Se <c>RecordWidth</c> for igual a 0, não haverá nenhum limite para o tamanho de uma linha.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1997">If <c>RecordWidth</c> equals 0, there is no limit to the length of a line.</span>
          </span>
          <span data-ttu-id="6bda5-1998">O valor padrão de <c>RecordWidth</c> é 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1998">The default value for <c>RecordWidth</c> is 0.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6bda5-1999">Atribui uma largura de linha de saída a um arquivo aberto usando a função <see langword="FileOpen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-1999">Assigns an output line width to a file opened by using the <see langword="FileOpen" /> function.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6bda5-2000">Este exemplo usa o `FileWidth` função para definir a largura da linha de saída para um arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2000">This example uses the `FileWidth` function to set the output line width for a file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#10](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="6bda5-2001">O modo de arquivo é inválido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2001">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FreeFile">
      <MemberSignature Language="C#" Value="public static int FreeFile ();" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 FreeFile() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FreeFile" />
      <MemberSignature Language="VB.NET" Value="Public Function FreeFile () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int FreeFile();" />
      <MemberSignature Language="F#" Value="static member FreeFile : unit -&gt; int" Usage="Microsoft.VisualBasic.FileSystem.FreeFile " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6bda5-2002">Retorna um valor <see langword="Integer" /> que representa o próximo número de arquivo disponível para uso pela função <see langword="FileOpen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2002">Returns an <see langword="Integer" /> value that represents the next file number available for use by the <see langword="FileOpen" /> function.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6bda5-2003">Retorna um valor <see langword="Integer" /> que representa o próximo número de arquivo disponível para uso pela função <see langword="FileOpen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2003">Returns an <see langword="Integer" /> value that represents the next file number available for use by the <see langword="FileOpen" /> function.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bda5-2004">Use `FreeFile` para fornecer um número de arquivo que já não está sendo usado.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2004">Use `FreeFile` to supply a file number that is not already being used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6bda5-2005">Este exemplo usa o `FreeFile` função para retornar o próximo número de arquivos disponíveis.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2005">This example uses the `FreeFile` function to return the next available file number.</span></span> <span data-ttu-id="6bda5-2006">Cinco arquivos são abertos para saída dentro do loop, e alguns dados de exemplo são gravados para cada um.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2006">Five files are opened for output within the loop, and some sample data is written to each.</span></span>  
  
 [!code-vb[VbVbalrCatRef#55](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#55)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="6bda5-2007">Mais de 255 arquivos estão em uso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2007">More than 255 files are in use.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="GetAttr">
      <MemberSignature Language="C#" Value="public static Microsoft.VisualBasic.FileAttribute GetAttr (string PathName);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype Microsoft.VisualBasic.FileAttribute GetAttr(string PathName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAttr (PathName As String) As FileAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::VisualBasic::FileAttribute GetAttr(System::String ^ PathName);" />
      <MemberSignature Language="F#" Value="static member GetAttr : string -&gt; Microsoft.VisualBasic.FileAttribute" Usage="Microsoft.VisualBasic.FileSystem.GetAttr PathName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FileAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="PathName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="PathName">
          <span data-ttu-id="6bda5-2008">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2008">Required.</span>
          </span>
          <span data-ttu-id="6bda5-2009">A expressão <see langword="String" /> que especifica um nome de arquivo, diretório ou pasta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2009">
              <see langword="String" /> expression that specifies a file, directory, or folder name.</span>
          </span>
          <span data-ttu-id="6bda5-2010">
            <c>PathName</c> pode incluir o diretório ou a pasta, bem como a unidade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2010">
              <c>PathName</c> can include the directory or folder, and the drive.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6bda5-2011">Retorna um valor <see langword="FileAttribute" /> que representa os atributos de um arquivo, diretório ou pasta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2011">Returns a <see langword="FileAttribute" /> value that represents the attributes of a file, directory, or folder.</span>
          </span>
          <span data-ttu-id="6bda5-2012">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FileAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2012">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileAttribute" />.</span>
          </span>
          <span data-ttu-id="6bda5-2013">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2013">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6bda5-2014">O valor retornado por <see langword="GetAttr" /> é a soma dos seguintes valores de enumeração:</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2014">The value returned by <see langword="GetAttr" /> is the sum of the following enumeration values:</span>
          </span>
          <span data-ttu-id="6bda5-2015">
            <list type="table">
              <item>
                <term> Valor </term>
                <description> Constante  </description>
                <description> Descrição  </description>
              </item>
              <item>
                <term>
                  <see langword="Normal" />
                </term>
                <description>
                  <see langword="vbNormal" />
                </description>
                <description> Normal.  </description>
              </item>
              <item>
                <term>
                  <see langword="ReadOnly" />
                </term>
                <description>
                  <see langword="vbReadOnly" />
                </description>
                <description> Somente leitura.  </description>
              </item>
              <item>
                <term>
                  <see langword="Hidden" />
                </term>
                <description>
                  <see langword="vbHidden" />
                </description>
                <description> Oculto.  </description>
              </item>
              <item>
                <term>
                  <see langword="System" />
                </term>
                <description>
                  <see langword="vbSystem" />
                </description>
                <description> Arquivo do sistema.  </description>
              </item>
              <item>
                <term>
                  <see langword="Directory" />
                </term>
                <description>
                  <see langword="vbDirectory" />
                </description>
                <description> Diretório ou pasta.  </description>
              </item>
              <item>
                <term>
                  <see langword="Archive" />
                </term>
                <description>
                  <see langword="vbArchive" />
                </description>
                <description> O arquivo foi alterado desde o último backup.  </description>
              </item>
              <item>
                <term>
                  <see langword="Alias" />
                </term>
                <description>
                  <see langword="vbAlias" />
                </description>
                <description> O arquivo tem um nome diferente.  </description>
              </item>
            </list>
            <block subset="none" type="note">
              <para> Essas enumerações são especificadas pela linguagem Visual Basic. Os nomes podem ser usados em qualquer lugar no seu código em vez dos valores reais.  </para>
            </block>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2015">
              <list type="table">
                <item>
                  <term> Value  </term>
                  <description> Constant  </description>
                  <description> Description  </description>
                </item>
                <item>
                  <term>
                    <see langword="Normal" />
                  </term>
                  <description>
                    <see langword="vbNormal" />
                  </description>
                  <description> Normal.  </description>
                </item>
                <item>
                  <term>
                    <see langword="ReadOnly" />
                  </term>
                  <description>
                    <see langword="vbReadOnly" />
                  </description>
                  <description> Read-only.  </description>
                </item>
                <item>
                  <term>
                    <see langword="Hidden" />
                  </term>
                  <description>
                    <see langword="vbHidden" />
                  </description>
                  <description> Hidden.  </description>
                </item>
                <item>
                  <term>
                    <see langword="System" />
                  </term>
                  <description>
                    <see langword="vbSystem" />
                  </description>
                  <description> System file.  </description>
                </item>
                <item>
                  <term>
                    <see langword="Directory" />
                  </term>
                  <description>
                    <see langword="vbDirectory" />
                  </description>
                  <description> Directory or folder.  </description>
                </item>
                <item>
                  <term>
                    <see langword="Archive" />
                  </term>
                  <description>
                    <see langword="vbArchive" />
                  </description>
                  <description> File has changed since last backup.  </description>
                </item>
                <item>
                  <term>
                    <see langword="Alias" />
                  </term>
                  <description>
                    <see langword="vbAlias" />
                  </description>
                  <description> File has a different name.  </description>
                </item>
              </list>
              <block subset="none" type="note">
                <para> These enumerations are specified by the Visual Basic language. The names can be used anywhere in your code in place of the actual values.  </para>
              </block>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bda5-2016">Para determinar quais atributos estão definidos, use o `And` operador para executar uma comparação bit a bit do valor retornado pelo `GetAttr` função e o valor do atributo de arquivo individual desejado.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2016">To determine which attributes are set, use the `And` operator to perform a bitwise comparison of the value returned by the `GetAttr` function and the value of the individual file attribute you want.</span></span> <span data-ttu-id="6bda5-2017">Se o resultado não for zero, esse atributo é definido para o arquivo nomeado.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2017">If the result is not zero, that attribute is set for the named file.</span></span> <span data-ttu-id="6bda5-2018">Por exemplo, o valor de retorno dos seguintes `And` expressão for zero, se o `Archive` atributo não for definido:</span><span class="sxs-lookup"><span data-stu-id="6bda5-2018">For example, the return value of the following `And` expression is zero if the `Archive` attribute is not set:</span></span>  
  
```vb  
Result = GetAttr(FName) And vbArchive  
```  
  
 <span data-ttu-id="6bda5-2019">Um valor diferente de zero será retornado se o `Archive` atributo é definido.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2019">A nonzero value is returned if the `Archive` attribute is set.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6bda5-2020">Este exemplo usa o `GetAttr` função para determinar os atributos de um arquivo e diretório ou pasta.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2020">This example uses the `GetAttr` function to determine the attributes of a file and directory or folder.</span></span>  
  
 [!code-vb[VbVbalrCatRef#25](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#25)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="6bda5-2021">
            <paramref name="Pathname" /> é inválido ou contém caracteres curinga.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2021">
              <paramref name="Pathname" /> is invalid or contains wildcards.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="6bda5-2022">O arquivo de destino não existe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2022">Target file does not exist.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileAttr(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SetAttr(System.String,Microsoft.VisualBasic.FileAttribute)" />
        <altmember cref="T:System.IO.IOException" />
        <altmember cref="T:System.IO.FileNotFoundException" />
        <altmember cref="T:Microsoft.VisualBasic.FileAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Input">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6bda5-2023">Lê dados de um arquivo sequencial aberto e atribui os dados a variáveis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2023">Reads data from an open sequential file and assigns the data to variables.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public static void Input (int FileNumber, ref bool Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Input(int32 FileNumber, bool&amp; Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Input (FileNumber As Integer, ByRef Value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Input(int FileNumber, bool % Value);" />
      <MemberSignature Language="F#" Value="static member Input : int *  -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Input (FileNumber, Value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Boolean" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="6bda5-2024">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2024">Required.</span>
          </span>
          <span data-ttu-id="6bda5-2025">Qualquer número de arquivo válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2025">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="6bda5-2026">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2026">Required.</span>
          </span>
          <span data-ttu-id="6bda5-2027">A variável à qual os valores lidos do arquivo são atribuídos, não pode ser uma variável de objeto ou matriz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2027">Variable that is assigned the values read from the file—cannot be an array or object variable.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6bda5-2028">Lê dados de um arquivo sequencial aberto e atribui os dados a variáveis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2028">Reads data from an open sequential file and assigns the data to variables.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bda5-2029">O `Input` função é fornecida para compatibilidade com versões anteriores e pode afetar o desempenho.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2029">The `Input` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="6bda5-2030">Para aplicativos não herdadas, o `My.Computer.FileSystem` objeto fornece um melhor desempenho.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2030">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="6bda5-2031">Para obter mais informações, consulte [acesso a arquivos com o Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="6bda5-2031">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="6bda5-2032">Dados lidos com `Input` costumam ser gravados em um arquivo usando-se `Write`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2032">Data read with `Input` is usually written to a file by using `Write`.</span></span> <span data-ttu-id="6bda5-2033">Use essa função somente com arquivos abertos no `Input` ou `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2033">Use this function only with files opened in `Input` or `Binary` mode.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6bda5-2034">Ao ler de arquivos, não tome decisões sobre o conteúdo do arquivo com base na extensão de nome de arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2034">When reading from files, do not make decisions about the contents of the file based on the file name extension.</span></span> <span data-ttu-id="6bda5-2035">Por exemplo, um arquivo chamado Form1.vb não pode ser um arquivo fonte do Visual Basic 2005.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2035">For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</span></span>  
  
 <span data-ttu-id="6bda5-2036">Quando lidos, dados numéricos ou cadeia de caracteres padrão são atribuídos a variáveis sem modificação.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2036">When read, standard string or numeric data is assigned to variables without modification.</span></span> <span data-ttu-id="6bda5-2037">A tabela a seguir ilustra como outros dados de entrada são tratados.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2037">The following table illustrates how other input data is treated.</span></span>  
  
|<span data-ttu-id="6bda5-2038">Dados</span><span class="sxs-lookup"><span data-stu-id="6bda5-2038">Data</span></span>|<span data-ttu-id="6bda5-2039">Valor atribuído à variável</span><span class="sxs-lookup"><span data-stu-id="6bda5-2039">Value assigned to variable</span></span>|  
|-|-|  
|<span data-ttu-id="6bda5-2040">Delimitador de vírgula ou linha em branco</span><span class="sxs-lookup"><span data-stu-id="6bda5-2040">Delimiting comma or blank line</span></span>|<span data-ttu-id="6bda5-2041">Vazio</span><span class="sxs-lookup"><span data-stu-id="6bda5-2041">Empty</span></span>|  
|<span data-ttu-id="6bda5-2042">NULL # #</span><span class="sxs-lookup"><span data-stu-id="6bda5-2042">#NULL#</span></span>|`DBNull`|  
|<span data-ttu-id="6bda5-2043"># TRUE ou FALSE de # #</span><span class="sxs-lookup"><span data-stu-id="6bda5-2043">#TRUE# or #FALSE#</span></span>|<span data-ttu-id="6bda5-2044">`True` ou `False`</span><span class="sxs-lookup"><span data-stu-id="6bda5-2044">`True` or `False`</span></span>|  
|#`yyyy-mm-dd hh:mm:ss`#|<span data-ttu-id="6bda5-2045">A data e/ou hora representada pela expressão</span><span class="sxs-lookup"><span data-stu-id="6bda5-2045">The date and/or time represented by the expression</span></span>|  
|<span data-ttu-id="6bda5-2046">#ERROR `errornumber`#</span><span class="sxs-lookup"><span data-stu-id="6bda5-2046">#ERROR `errornumber`#</span></span>|<span data-ttu-id="6bda5-2047">`errornumber` (a variável é um objeto marcado como um erro)</span><span class="sxs-lookup"><span data-stu-id="6bda5-2047">`errornumber` (variable is an object tagged as an error)</span></span>|  
  
 <span data-ttu-id="6bda5-2048">Caso você atinja o final do arquivo enquanto insere um item de dados, a entrada é interrompida e ocorre um erro.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2048">If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6bda5-2049">O `Input` função não está localizada.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2049">The `Input` function is not localized.</span></span> <span data-ttu-id="6bda5-2050">Por exemplo, na versão em alemão, caso você insira 3,14159, ele retorna apenas 3, porque a vírgula é tratada como um separador variável, em vez de uma vírgula decimal.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2050">For example, in the German version, if you input 3,14159, it returns only 3, because the comma is treated as a variable separator instead of as a decimal point.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6bda5-2051">Leitura de um arquivo usando o `Input` função requer `Read` acessar do `FileIOPermissionAccess` enumeração.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2051">Reading from a file by using the `Input` function requires `Read` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="6bda5-2052">Para obter mais informações, consulte <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2052">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6bda5-2053">Este exemplo usa o `Input` função para ler dados de um arquivo em duas variáveis.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2053">This example uses the `Input` function to read data from a file into two variables.</span></span> <span data-ttu-id="6bda5-2054">Este exemplo supõe que `TestFile` é um arquivo que tem algumas linhas de dados gravados nele usando o `Write` funcionar, cada linha que contém uma cadeia de caracteres entre aspas e um número separado por uma vírgula, por exemplo: ("Olá", 234).</span><span class="sxs-lookup"><span data-stu-id="6bda5-2054">This example assumes that `TestFile` is a file that has some lines of data written to it using the `Write` function, each line containing a string in quotations and a number separated by a comma, for example: ("Hello", 234).</span></span>  
  
 [!code-vb[VbVbalrCatRef#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="6bda5-2055">O modo de arquivo é inválido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2055">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public static void Input (int FileNumber, ref byte Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Input(int32 FileNumber, unsigned int8&amp; Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Byte@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Input (FileNumber As Integer, ByRef Value As Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Input(int FileNumber, System::Byte % Value);" />
      <MemberSignature Language="F#" Value="static member Input : int *  -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Input (FileNumber, Value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Byte" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="6bda5-2056">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2056">Required.</span>
          </span>
          <span data-ttu-id="6bda5-2057">Qualquer número de arquivo válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2057">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="6bda5-2058">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2058">Required.</span>
          </span>
          <span data-ttu-id="6bda5-2059">A variável à qual os valores lidos do arquivo são atribuídos, não pode ser uma variável de objeto ou matriz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2059">Variable that is assigned the values read from the file—cannot be an array or object variable.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6bda5-2060">Lê dados de um arquivo sequencial aberto e atribui os dados a variáveis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2060">Reads data from an open sequential file and assigns the data to variables.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bda5-2061">O `Input` função é fornecida para compatibilidade com versões anteriores e pode afetar o desempenho.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2061">The `Input` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="6bda5-2062">Para aplicativos não herdadas, o `My.Computer.FileSystem` objeto fornece um melhor desempenho.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2062">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="6bda5-2063">Para obter mais informações, consulte [acesso a arquivos com o Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="6bda5-2063">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="6bda5-2064">Dados lidos com `Input` costumam ser gravados em um arquivo usando-se `Write`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2064">Data read with `Input` is usually written to a file by using `Write`.</span></span> <span data-ttu-id="6bda5-2065">Use essa função somente com arquivos abertos no `Input` ou `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2065">Use this function only with files opened in `Input` or `Binary` mode.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6bda5-2066">Ao ler de arquivos, não tome decisões sobre o conteúdo do arquivo com base na extensão de nome de arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2066">When reading from files, do not make decisions about the contents of the file based on the file name extension.</span></span> <span data-ttu-id="6bda5-2067">Por exemplo, um arquivo chamado Form1.vb não pode ser um arquivo fonte do Visual Basic 2005.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2067">For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</span></span>  
  
 <span data-ttu-id="6bda5-2068">Quando lidos, dados numéricos ou cadeia de caracteres padrão são atribuídos a variáveis sem modificação.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2068">When read, standard string or numeric data is assigned to variables without modification.</span></span> <span data-ttu-id="6bda5-2069">A tabela a seguir ilustra como outros dados de entrada são tratados.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2069">The following table illustrates how other input data is treated.</span></span>  
  
|<span data-ttu-id="6bda5-2070">Dados</span><span class="sxs-lookup"><span data-stu-id="6bda5-2070">Data</span></span>|<span data-ttu-id="6bda5-2071">Valor atribuído à variável</span><span class="sxs-lookup"><span data-stu-id="6bda5-2071">Value assigned to variable</span></span>|  
|-|-|  
|<span data-ttu-id="6bda5-2072">Delimitador de vírgula ou linha em branco</span><span class="sxs-lookup"><span data-stu-id="6bda5-2072">Delimiting comma or blank line</span></span>|<span data-ttu-id="6bda5-2073">Vazio</span><span class="sxs-lookup"><span data-stu-id="6bda5-2073">Empty</span></span>|  
|<span data-ttu-id="6bda5-2074">NULL # #</span><span class="sxs-lookup"><span data-stu-id="6bda5-2074">#NULL#</span></span>|`DBNull`|  
|<span data-ttu-id="6bda5-2075"># TRUE ou FALSE de # #</span><span class="sxs-lookup"><span data-stu-id="6bda5-2075">#TRUE# or #FALSE#</span></span>|<span data-ttu-id="6bda5-2076">`True` ou `False`</span><span class="sxs-lookup"><span data-stu-id="6bda5-2076">`True` or `False`</span></span>|  
|#`yyyy-mm-dd hh:mm:ss`#|<span data-ttu-id="6bda5-2077">A data e/ou hora representada pela expressão</span><span class="sxs-lookup"><span data-stu-id="6bda5-2077">The date and/or time represented by the expression</span></span>|  
|<span data-ttu-id="6bda5-2078">#ERROR `errornumber`#</span><span class="sxs-lookup"><span data-stu-id="6bda5-2078">#ERROR `errornumber`#</span></span>|<span data-ttu-id="6bda5-2079">`errornumber` (a variável é um objeto marcado como um erro)</span><span class="sxs-lookup"><span data-stu-id="6bda5-2079">`errornumber` (variable is an object tagged as an error)</span></span>|  
  
 <span data-ttu-id="6bda5-2080">Caso você atinja o final do arquivo enquanto insere um item de dados, a entrada é interrompida e ocorre um erro.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2080">If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6bda5-2081">O `Input` função não está localizada.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2081">The `Input` function is not localized.</span></span> <span data-ttu-id="6bda5-2082">Por exemplo, na versão em alemão, caso você insira 3,14159, ele retorna apenas 3, porque a vírgula é tratada como um separador variável, em vez de uma vírgula decimal.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2082">For example, in the German version, if you input 3,14159, it returns only 3, because the comma is treated as a variable separator instead of as a decimal point.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6bda5-2083">Leitura de um arquivo usando o `Input` função requer `Read` acessar do `FileIOPermissionAccess` enumeração.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2083">Reading from a file by using the `Input` function requires `Read` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="6bda5-2084">Para obter mais informações, consulte <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2084">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6bda5-2085">Este exemplo usa o `Input` função para ler dados de um arquivo em duas variáveis.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2085">This example uses the `Input` function to read data from a file into two variables.</span></span> <span data-ttu-id="6bda5-2086">Este exemplo supõe que `TestFile` é um arquivo que tem algumas linhas de dados gravados nele usando o `Write` funcionar, cada linha que contém uma cadeia de caracteres entre aspas e um número separado por uma vírgula, por exemplo: ("Olá", 234).</span><span class="sxs-lookup"><span data-stu-id="6bda5-2086">This example assumes that `TestFile` is a file that has some lines of data written to it using the `Write` function, each line containing a string in quotations and a number separated by a comma, for example: ("Hello", 234).</span></span>  
  
 [!code-vb[VbVbalrCatRef#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="6bda5-2087">O modo de arquivo é inválido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2087">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public static void Input (int FileNumber, ref char Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Input(int32 FileNumber, char&amp; Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Char@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Input (FileNumber As Integer, ByRef Value As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Input(int FileNumber, char % Value);" />
      <MemberSignature Language="F#" Value="static member Input : int *  -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Input (FileNumber, Value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Char" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="6bda5-2088">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2088">Required.</span>
          </span>
          <span data-ttu-id="6bda5-2089">Qualquer número de arquivo válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2089">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="6bda5-2090">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2090">Required.</span>
          </span>
          <span data-ttu-id="6bda5-2091">A variável à qual os valores lidos do arquivo são atribuídos, não pode ser uma variável de objeto ou matriz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2091">Variable that is assigned the values read from the file—cannot be an array or object variable.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6bda5-2092">Lê dados de um arquivo sequencial aberto e atribui os dados a variáveis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2092">Reads data from an open sequential file and assigns the data to variables.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bda5-2093">O `Input` função é fornecida para compatibilidade com versões anteriores e pode afetar o desempenho.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2093">The `Input` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="6bda5-2094">Para aplicativos não herdadas, o `My.Computer.FileSystem` objeto fornece um melhor desempenho.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2094">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="6bda5-2095">Para obter mais informações, consulte [acesso a arquivos com o Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="6bda5-2095">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="6bda5-2096">Dados lidos com `Input` costumam ser gravados em um arquivo usando-se `Write`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2096">Data read with `Input` is usually written to a file by using `Write`.</span></span> <span data-ttu-id="6bda5-2097">Use essa função somente com arquivos abertos no `Input` ou `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2097">Use this function only with files opened in `Input` or `Binary` mode.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6bda5-2098">Ao ler de arquivos, não tome decisões sobre o conteúdo do arquivo com base na extensão de nome de arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2098">When reading from files, do not make decisions about the contents of the file based on the file name extension.</span></span> <span data-ttu-id="6bda5-2099">Por exemplo, um arquivo chamado Form1.vb não pode ser um arquivo fonte do Visual Basic 2005.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2099">For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</span></span>  
  
 <span data-ttu-id="6bda5-2100">Quando lidos, dados numéricos ou cadeia de caracteres padrão são atribuídos a variáveis sem modificação.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2100">When read, standard string or numeric data is assigned to variables without modification.</span></span> <span data-ttu-id="6bda5-2101">A tabela a seguir ilustra como outros dados de entrada são tratados.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2101">The following table illustrates how other input data is treated.</span></span>  
  
|<span data-ttu-id="6bda5-2102">Dados</span><span class="sxs-lookup"><span data-stu-id="6bda5-2102">Data</span></span>|<span data-ttu-id="6bda5-2103">Valor atribuído à variável</span><span class="sxs-lookup"><span data-stu-id="6bda5-2103">Value assigned to variable</span></span>|  
|-|-|  
|<span data-ttu-id="6bda5-2104">Delimitador de vírgula ou linha em branco</span><span class="sxs-lookup"><span data-stu-id="6bda5-2104">Delimiting comma or blank line</span></span>|<span data-ttu-id="6bda5-2105">Vazio</span><span class="sxs-lookup"><span data-stu-id="6bda5-2105">Empty</span></span>|  
|<span data-ttu-id="6bda5-2106">NULL # #</span><span class="sxs-lookup"><span data-stu-id="6bda5-2106">#NULL#</span></span>|`DBNull`|  
|<span data-ttu-id="6bda5-2107"># TRUE ou FALSE de # #</span><span class="sxs-lookup"><span data-stu-id="6bda5-2107">#TRUE# or #FALSE#</span></span>|<span data-ttu-id="6bda5-2108">`True` ou `False`</span><span class="sxs-lookup"><span data-stu-id="6bda5-2108">`True` or `False`</span></span>|  
|#`yyyy-mm-dd hh:mm:ss`#|<span data-ttu-id="6bda5-2109">A data e/ou hora representada pela expressão</span><span class="sxs-lookup"><span data-stu-id="6bda5-2109">The date and/or time represented by the expression</span></span>|  
|<span data-ttu-id="6bda5-2110">#ERROR `errornumber`#</span><span class="sxs-lookup"><span data-stu-id="6bda5-2110">#ERROR `errornumber`#</span></span>|<span data-ttu-id="6bda5-2111">`errornumber` (a variável é um objeto marcado como um erro)</span><span class="sxs-lookup"><span data-stu-id="6bda5-2111">`errornumber` (variable is an object tagged as an error)</span></span>|  
  
 <span data-ttu-id="6bda5-2112">Caso você atinja o final do arquivo enquanto insere um item de dados, a entrada é interrompida e ocorre um erro.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2112">If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6bda5-2113">O `Input` função não está localizada.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2113">The `Input` function is not localized.</span></span> <span data-ttu-id="6bda5-2114">Por exemplo, na versão em alemão, caso você insira 3,14159, ele retorna apenas 3, porque a vírgula é tratada como um separador variável, em vez de uma vírgula decimal.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2114">For example, in the German version, if you input 3,14159, it returns only 3, because the comma is treated as a variable separator instead of as a decimal point.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6bda5-2115">Leitura de um arquivo usando o `Input` função requer `Read` acessar do `FileIOPermissionAccess` enumeração.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2115">Reading from a file by using the `Input` function requires `Read` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="6bda5-2116">Para obter mais informações, consulte <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2116">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6bda5-2117">Este exemplo usa o `Input` função para ler dados de um arquivo em duas variáveis.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2117">This example uses the `Input` function to read data from a file into two variables.</span></span> <span data-ttu-id="6bda5-2118">Este exemplo pressupõe que `TestFile` seja um arquivo tendo várias linhas de dados gravadas usando a função `Write`, cada linha contendo uma cadeia de caracteres entre aspas e um número separado por uma vírgula; por exemplo: ("Hello", 234).</span><span class="sxs-lookup"><span data-stu-id="6bda5-2118">This example assumes that `TestFile` is a file that has several lines of data written to it using the `Write` function, each line containing a string in quotations and a number separated by a comma, for example: ("Hello", 234).</span></span>  
  
 [!code-vb[VbVbalrCatRef#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="6bda5-2119">O modo de arquivo é inválido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2119">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public static void Input (int FileNumber, ref DateTime Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Input(int32 FileNumber, valuetype System.DateTime&amp; Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.DateTime@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Input (FileNumber As Integer, ByRef Value As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Input(int FileNumber, DateTime % Value);" />
      <MemberSignature Language="F#" Value="static member Input : int *  -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Input (FileNumber, Value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.DateTime" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="6bda5-2120">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2120">Required.</span>
          </span>
          <span data-ttu-id="6bda5-2121">Qualquer número de arquivo válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2121">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="6bda5-2122">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2122">Required.</span>
          </span>
          <span data-ttu-id="6bda5-2123">A variável à qual os valores lidos do arquivo são atribuídos, não pode ser uma variável de objeto ou matriz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2123">Variable that is assigned the values read from the file—cannot be an array or object variable.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6bda5-2124">Lê dados de um arquivo sequencial aberto e atribui os dados a variáveis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2124">Reads data from an open sequential file and assigns the data to variables.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bda5-2125">O `Input` função é fornecida para compatibilidade com versões anteriores e pode afetar o desempenho.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2125">The `Input` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="6bda5-2126">Para aplicativos não herdadas, o `My.Computer.FileSystem` objeto fornece um melhor desempenho.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2126">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="6bda5-2127">Para obter mais informações, consulte [acesso a arquivos com o Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="6bda5-2127">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="6bda5-2128">Dados lidos com `Input` costumam ser gravados em um arquivo usando-se `Write`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2128">Data read with `Input` is usually written to a file by using `Write`.</span></span> <span data-ttu-id="6bda5-2129">Use essa função somente com arquivos abertos no `Input` ou `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2129">Use this function only with files opened in `Input` or `Binary` mode.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6bda5-2130">Ao ler de arquivos, não tome decisões sobre o conteúdo do arquivo com base na extensão de nome de arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2130">When reading from files, do not make decisions about the contents of the file based on the file name extension.</span></span> <span data-ttu-id="6bda5-2131">Por exemplo, um arquivo chamado Form1.vb não pode ser um arquivo fonte do Visual Basic 2005.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2131">For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</span></span>  
  
 <span data-ttu-id="6bda5-2132">Quando lidos, dados numéricos ou cadeia de caracteres padrão são atribuídos a variáveis sem modificação.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2132">When read, standard string or numeric data is assigned to variables without modification.</span></span> <span data-ttu-id="6bda5-2133">A tabela a seguir ilustra como outros dados de entrada são tratados.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2133">The following table illustrates how other input data is treated.</span></span>  
  
|<span data-ttu-id="6bda5-2134">Dados</span><span class="sxs-lookup"><span data-stu-id="6bda5-2134">Data</span></span>|<span data-ttu-id="6bda5-2135">Valor atribuído à variável</span><span class="sxs-lookup"><span data-stu-id="6bda5-2135">Value assigned to variable</span></span>|  
|-|-|  
|<span data-ttu-id="6bda5-2136">Delimitador de vírgula ou linha em branco</span><span class="sxs-lookup"><span data-stu-id="6bda5-2136">Delimiting comma or blank line</span></span>|<span data-ttu-id="6bda5-2137">Vazio</span><span class="sxs-lookup"><span data-stu-id="6bda5-2137">Empty</span></span>|  
|<span data-ttu-id="6bda5-2138">NULL # #</span><span class="sxs-lookup"><span data-stu-id="6bda5-2138">#NULL#</span></span>|`DBNull`|  
|<span data-ttu-id="6bda5-2139"># TRUE ou FALSE de # #</span><span class="sxs-lookup"><span data-stu-id="6bda5-2139">#TRUE# or #FALSE#</span></span>|<span data-ttu-id="6bda5-2140">`True` ou `False`</span><span class="sxs-lookup"><span data-stu-id="6bda5-2140">`True` or `False`</span></span>|  
|#`yyyy-mm-dd hh:mm:ss`#|<span data-ttu-id="6bda5-2141">A data e/ou hora representada pela expressão</span><span class="sxs-lookup"><span data-stu-id="6bda5-2141">The date and/or time represented by the expression</span></span>|  
|<span data-ttu-id="6bda5-2142">#ERROR `errornumber`#</span><span class="sxs-lookup"><span data-stu-id="6bda5-2142">#ERROR `errornumber`#</span></span>|<span data-ttu-id="6bda5-2143">`errornumber` (a variável é um objeto marcado como um erro)</span><span class="sxs-lookup"><span data-stu-id="6bda5-2143">`errornumber` (variable is an object tagged as an error)</span></span>|  
  
 <span data-ttu-id="6bda5-2144">Caso você atinja o final do arquivo enquanto insere um item de dados, a entrada é interrompida e ocorre um erro.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2144">If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6bda5-2145">O `Input` função não está localizada.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2145">The `Input` function is not localized.</span></span> <span data-ttu-id="6bda5-2146">Por exemplo, na versão em alemão, caso você insira 3,14159, ele retorna apenas 3, porque a vírgula é tratada como um separador variável, em vez de uma vírgula decimal.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2146">For example, in the German version, if you input 3,14159, it returns only 3, because the comma is treated as a variable separator instead of as a decimal point.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6bda5-2147">Leitura de um arquivo usando o `Input` função requer `Read` acessar do `FileIOPermissionAccess` enumeração.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2147">Reading from a file by using the `Input` function requires `Read` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="6bda5-2148">Para obter mais informações, consulte <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2148">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6bda5-2149">Este exemplo usa o `Input` função para ler dados de um arquivo em duas variáveis.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2149">This example uses the `Input` function to read data from a file into two variables.</span></span> <span data-ttu-id="6bda5-2150">Este exemplo pressupõe que `TestFile` seja um arquivo tendo várias linhas de dados gravadas usando a função `Write`, cada linha contendo uma cadeia de caracteres entre aspas e um número separado por uma vírgula; por exemplo: ("Hello", 234).</span><span class="sxs-lookup"><span data-stu-id="6bda5-2150">This example assumes that `TestFile` is a file that has several lines of data written to it using the `Write` function, each line containing a string in quotations and a number separated by a comma, for example: ("Hello", 234).</span></span>  
  
 [!code-vb[VbVbalrCatRef#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="6bda5-2151">O modo de arquivo é inválido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2151">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public static void Input (int FileNumber, ref decimal Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Input(int32 FileNumber, valuetype System.Decimal&amp; Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Decimal@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Input (FileNumber As Integer, ByRef Value As Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Input(int FileNumber, System::Decimal % Value);" />
      <MemberSignature Language="F#" Value="static member Input : int *  -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Input (FileNumber, Value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Decimal" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="6bda5-2152">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2152">Required.</span>
          </span>
          <span data-ttu-id="6bda5-2153">Qualquer número de arquivo válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2153">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="6bda5-2154">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2154">Required.</span>
          </span>
          <span data-ttu-id="6bda5-2155">A variável à qual os valores lidos do arquivo são atribuídos, não pode ser uma variável de objeto ou matriz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2155">Variable that is assigned the values read from the file—cannot be an array or object variable.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6bda5-2156">Lê dados de um arquivo sequencial aberto e atribui os dados a variáveis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2156">Reads data from an open sequential file and assigns the data to variables.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bda5-2157">O `Input` função é fornecida para compatibilidade com versões anteriores e pode afetar o desempenho.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2157">The `Input` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="6bda5-2158">Para aplicativos não herdadas, o `My.Computer.FileSystem` objeto fornece um melhor desempenho.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2158">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="6bda5-2159">Para obter mais informações, consulte [acesso a arquivos com o Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="6bda5-2159">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="6bda5-2160">Dados lidos com `Input` costumam ser gravados em um arquivo usando-se `Write`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2160">Data read with `Input` is usually written to a file by using `Write`.</span></span> <span data-ttu-id="6bda5-2161">Use essa função somente com arquivos abertos no `Input` ou `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2161">Use this function only with files opened in `Input` or `Binary` mode.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6bda5-2162">Ao ler de arquivos, não tome decisões sobre o conteúdo do arquivo com base na extensão de nome de arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2162">When reading from files, do not make decisions about the contents of the file based on the file name extension.</span></span> <span data-ttu-id="6bda5-2163">Por exemplo, um arquivo chamado Form1.vb não pode ser um arquivo fonte do Visual Basic 2005.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2163">For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</span></span>  
  
 <span data-ttu-id="6bda5-2164">Quando lidos, dados numéricos ou cadeia de caracteres padrão são atribuídos a variáveis sem modificação.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2164">When read, standard string or numeric data is assigned to variables without modification.</span></span> <span data-ttu-id="6bda5-2165">A tabela a seguir ilustra como outros dados de entrada são tratados.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2165">The following table illustrates how other input data is treated.</span></span>  
  
|<span data-ttu-id="6bda5-2166">Dados</span><span class="sxs-lookup"><span data-stu-id="6bda5-2166">Data</span></span>|<span data-ttu-id="6bda5-2167">Valor atribuído à variável</span><span class="sxs-lookup"><span data-stu-id="6bda5-2167">Value assigned to variable</span></span>|  
|-|-|  
|<span data-ttu-id="6bda5-2168">Delimitador de vírgula ou linha em branco</span><span class="sxs-lookup"><span data-stu-id="6bda5-2168">Delimiting comma or blank line</span></span>|<span data-ttu-id="6bda5-2169">Vazio</span><span class="sxs-lookup"><span data-stu-id="6bda5-2169">Empty</span></span>|  
|<span data-ttu-id="6bda5-2170">NULL # #</span><span class="sxs-lookup"><span data-stu-id="6bda5-2170">#NULL#</span></span>|`DBNull`|  
|<span data-ttu-id="6bda5-2171"># TRUE ou FALSE de # #</span><span class="sxs-lookup"><span data-stu-id="6bda5-2171">#TRUE# or #FALSE#</span></span>|<span data-ttu-id="6bda5-2172">`True` ou `False`</span><span class="sxs-lookup"><span data-stu-id="6bda5-2172">`True` or `False`</span></span>|  
|#`yyyy-mm-dd hh:mm:ss`#|<span data-ttu-id="6bda5-2173">A data e/ou hora representada pela expressão</span><span class="sxs-lookup"><span data-stu-id="6bda5-2173">The date and/or time represented by the expression</span></span>|  
|<span data-ttu-id="6bda5-2174">#ERROR `errornumber`#</span><span class="sxs-lookup"><span data-stu-id="6bda5-2174">#ERROR `errornumber`#</span></span>|<span data-ttu-id="6bda5-2175">`errornumber` (a variável é um objeto marcado como um erro)</span><span class="sxs-lookup"><span data-stu-id="6bda5-2175">`errornumber` (variable is an object tagged as an error)</span></span>|  
  
 <span data-ttu-id="6bda5-2176">Caso você atinja o final do arquivo enquanto insere um item de dados, a entrada é interrompida e ocorre um erro.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2176">If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6bda5-2177">O `Input` função não está localizada.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2177">The `Input` function is not localized.</span></span> <span data-ttu-id="6bda5-2178">Por exemplo, na versão em alemão, caso você insira 3,14159, ele retorna apenas 3, porque a vírgula é tratada como um separador variável, em vez de uma vírgula decimal.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2178">For example, in the German version, if you input 3,14159, it returns only 3, because the comma is treated as a variable separator instead of as a decimal point.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6bda5-2179">Leitura de um arquivo usando o `Input` função requer `Read` acessar do `FileIOPermissionAccess` enumeração.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2179">Reading from a file by using the `Input` function requires `Read` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="6bda5-2180">Para obter mais informações, consulte <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2180">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6bda5-2181">Este exemplo usa o `Input` função para ler dados de um arquivo em duas variáveis.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2181">This example uses the `Input` function to read data from a file into two variables.</span></span> <span data-ttu-id="6bda5-2182">Este exemplo pressupõe que `TestFile` seja um arquivo tendo várias linhas de dados gravadas usando a função `Write`, cada linha contendo uma cadeia de caracteres entre aspas e um número separado por uma vírgula; por exemplo: ("Hello", 234).</span><span class="sxs-lookup"><span data-stu-id="6bda5-2182">This example assumes that `TestFile` is a file that has several lines of data written to it using the `Write` function, each line containing a string in quotations and a number separated by a comma, for example: ("Hello", 234).</span></span>  
  
 [!code-vb[VbVbalrCatRef#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="6bda5-2183">O modo de arquivo é inválido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2183">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public static void Input (int FileNumber, ref double Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Input(int32 FileNumber, float64&amp; Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Double@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Input (FileNumber As Integer, ByRef Value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Input(int FileNumber, double % Value);" />
      <MemberSignature Language="F#" Value="static member Input : int *  -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Input (FileNumber, Value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Double" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="6bda5-2184">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2184">Required.</span>
          </span>
          <span data-ttu-id="6bda5-2185">Qualquer número de arquivo válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2185">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="6bda5-2186">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2186">Required.</span>
          </span>
          <span data-ttu-id="6bda5-2187">A variável à qual os valores lidos do arquivo são atribuídos, não pode ser uma variável de objeto ou matriz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2187">Variable that is assigned the values read from the file—cannot be an array or object variable.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6bda5-2188">Lê dados de um arquivo sequencial aberto e atribui os dados a variáveis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2188">Reads data from an open sequential file and assigns the data to variables.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bda5-2189">O `Input` função é fornecida para compatibilidade com versões anteriores e pode afetar o desempenho.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2189">The `Input` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="6bda5-2190">Para aplicativos não herdadas, o `My.Computer.FileSystem` objeto fornece um melhor desempenho.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2190">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="6bda5-2191">Para obter mais informações, consulte [acesso a arquivos com o Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="6bda5-2191">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="6bda5-2192">Dados lidos com `Input` costumam ser gravados em um arquivo usando-se `Write`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2192">Data read with `Input` is usually written to a file by using `Write`.</span></span> <span data-ttu-id="6bda5-2193">Use essa função somente com arquivos abertos no `Input` ou `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2193">Use this function only with files opened in `Input` or `Binary` mode.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6bda5-2194">Ao ler de arquivos, não tome decisões sobre o conteúdo do arquivo com base na extensão de nome de arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2194">When reading from files, do not make decisions about the contents of the file based on the file name extension.</span></span> <span data-ttu-id="6bda5-2195">Por exemplo, um arquivo chamado Form1.vb não pode ser um arquivo fonte do Visual Basic 2005.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2195">For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</span></span>  
  
 <span data-ttu-id="6bda5-2196">Quando lidos, dados numéricos ou cadeia de caracteres padrão são atribuídos a variáveis sem modificação.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2196">When read, standard string or numeric data is assigned to variables without modification.</span></span> <span data-ttu-id="6bda5-2197">A tabela a seguir ilustra como outros dados de entrada são tratados.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2197">The following table illustrates how other input data is treated.</span></span>  
  
|<span data-ttu-id="6bda5-2198">Dados</span><span class="sxs-lookup"><span data-stu-id="6bda5-2198">Data</span></span>|<span data-ttu-id="6bda5-2199">Valor atribuído à variável</span><span class="sxs-lookup"><span data-stu-id="6bda5-2199">Value assigned to variable</span></span>|  
|-|-|  
|<span data-ttu-id="6bda5-2200">Delimitador de vírgula ou linha em branco</span><span class="sxs-lookup"><span data-stu-id="6bda5-2200">Delimiting comma or blank line</span></span>|<span data-ttu-id="6bda5-2201">Vazio</span><span class="sxs-lookup"><span data-stu-id="6bda5-2201">Empty</span></span>|  
|<span data-ttu-id="6bda5-2202">NULL # #</span><span class="sxs-lookup"><span data-stu-id="6bda5-2202">#NULL#</span></span>|`DBNull`|  
|<span data-ttu-id="6bda5-2203"># TRUE ou FALSE de # #</span><span class="sxs-lookup"><span data-stu-id="6bda5-2203">#TRUE# or #FALSE#</span></span>|<span data-ttu-id="6bda5-2204">`True` ou `False`</span><span class="sxs-lookup"><span data-stu-id="6bda5-2204">`True` or `False`</span></span>|  
|#`yyyy-mm-dd hh:mm:ss`#|<span data-ttu-id="6bda5-2205">A data e/ou hora representada pela expressão</span><span class="sxs-lookup"><span data-stu-id="6bda5-2205">The date and/or time represented by the expression</span></span>|  
|<span data-ttu-id="6bda5-2206">#ERROR `errornumber`#</span><span class="sxs-lookup"><span data-stu-id="6bda5-2206">#ERROR `errornumber`#</span></span>|<span data-ttu-id="6bda5-2207">`errornumber` (a variável é um objeto marcado como um erro)</span><span class="sxs-lookup"><span data-stu-id="6bda5-2207">`errornumber` (variable is an object tagged as an error)</span></span>|  
  
 <span data-ttu-id="6bda5-2208">Caso você atinja o final do arquivo enquanto insere um item de dados, a entrada é interrompida e ocorre um erro.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2208">If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6bda5-2209">O `Input` função não está localizada.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2209">The `Input` function is not localized.</span></span> <span data-ttu-id="6bda5-2210">Por exemplo, na versão em alemão, caso você insira 3,14159, ele retorna apenas 3, porque a vírgula é tratada como um separador variável, em vez de uma vírgula decimal.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2210">For example, in the German version, if you input 3,14159, it returns only 3, because the comma is treated as a variable separator instead of as a decimal point.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6bda5-2211">Leitura de um arquivo usando o `Input` função requer `Read` acessar do `FileIOPermissionAccess` enumeração.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2211">Reading from a file by using the `Input` function requires `Read` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="6bda5-2212">Para obter mais informações, consulte <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2212">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6bda5-2213">Este exemplo usa o `Input` função para ler dados de um arquivo em duas variáveis.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2213">This example uses the `Input` function to read data from a file into two variables.</span></span> <span data-ttu-id="6bda5-2214">Este exemplo pressupõe que `TestFile` seja um arquivo tendo várias linhas de dados gravadas usando a função `Write`, cada linha contendo uma cadeia de caracteres entre aspas e um número separado por uma vírgula; por exemplo: ("Hello", 234).</span><span class="sxs-lookup"><span data-stu-id="6bda5-2214">This example assumes that `TestFile` is a file that has several lines of data written to it using the `Write` function, each line containing a string in quotations and a number separated by a comma, for example: ("Hello", 234).</span></span>  
  
 [!code-vb[VbVbalrCatRef#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="6bda5-2215">O modo de arquivo é inválido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2215">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public static void Input (int FileNumber, ref short Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Input(int32 FileNumber, int16&amp; Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Int16@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Input (FileNumber As Integer, ByRef Value As Short)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Input(int FileNumber, short % Value);" />
      <MemberSignature Language="F#" Value="static member Input : int *  -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Input (FileNumber, Value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Int16" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="6bda5-2216">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2216">Required.</span>
          </span>
          <span data-ttu-id="6bda5-2217">Qualquer número de arquivo válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2217">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="6bda5-2218">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2218">Required.</span>
          </span>
          <span data-ttu-id="6bda5-2219">A variável à qual os valores lidos do arquivo são atribuídos, não pode ser uma variável de objeto ou matriz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2219">Variable that is assigned the values read from the file—cannot be an array or object variable.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6bda5-2220">Lê dados de um arquivo sequencial aberto e atribui os dados a variáveis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2220">Reads data from an open sequential file and assigns the data to variables.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bda5-2221">O `Input` função é fornecida para compatibilidade com versões anteriores e pode afetar o desempenho.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2221">The `Input` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="6bda5-2222">Para aplicativos não herdadas, o `My.Computer.FileSystem` objeto fornece um melhor desempenho.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2222">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="6bda5-2223">Para obter mais informações, consulte [acesso a arquivos com o Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="6bda5-2223">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="6bda5-2224">Dados lidos com `Input` costumam ser gravados em um arquivo usando-se `Write`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2224">Data read with `Input` is usually written to a file by using `Write`.</span></span> <span data-ttu-id="6bda5-2225">Use essa função somente com arquivos abertos no `Input` ou `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2225">Use this function only with files opened in `Input` or `Binary` mode.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6bda5-2226">Ao ler de arquivos, não tome decisões sobre o conteúdo do arquivo com base na extensão de nome de arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2226">When reading from files, do not make decisions about the contents of the file based on the file name extension.</span></span> <span data-ttu-id="6bda5-2227">Por exemplo, um arquivo chamado Form1.vb não pode ser um arquivo fonte do Visual Basic 2005.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2227">For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</span></span>  
  
 <span data-ttu-id="6bda5-2228">Quando lidos, dados numéricos ou cadeia de caracteres padrão são atribuídos a variáveis sem modificação.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2228">When read, standard string or numeric data is assigned to variables without modification.</span></span> <span data-ttu-id="6bda5-2229">A tabela a seguir ilustra como outros dados de entrada são tratados.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2229">The following table illustrates how other input data is treated.</span></span>  
  
|<span data-ttu-id="6bda5-2230">Dados</span><span class="sxs-lookup"><span data-stu-id="6bda5-2230">Data</span></span>|<span data-ttu-id="6bda5-2231">Valor atribuído à variável</span><span class="sxs-lookup"><span data-stu-id="6bda5-2231">Value assigned to variable</span></span>|  
|-|-|  
|<span data-ttu-id="6bda5-2232">Delimitador de vírgula ou linha em branco</span><span class="sxs-lookup"><span data-stu-id="6bda5-2232">Delimiting comma or blank line</span></span>|<span data-ttu-id="6bda5-2233">Vazio</span><span class="sxs-lookup"><span data-stu-id="6bda5-2233">Empty</span></span>|  
|<span data-ttu-id="6bda5-2234">NULL # #</span><span class="sxs-lookup"><span data-stu-id="6bda5-2234">#NULL#</span></span>|`DBNull`|  
|<span data-ttu-id="6bda5-2235"># TRUE ou FALSE de # #</span><span class="sxs-lookup"><span data-stu-id="6bda5-2235">#TRUE# or #FALSE#</span></span>|<span data-ttu-id="6bda5-2236">`True` ou `False`</span><span class="sxs-lookup"><span data-stu-id="6bda5-2236">`True` or `False`</span></span>|  
|#`yyyy-mm-dd hh:mm:ss`#|<span data-ttu-id="6bda5-2237">A data e/ou hora representada pela expressão</span><span class="sxs-lookup"><span data-stu-id="6bda5-2237">The date and/or time represented by the expression</span></span>|  
|<span data-ttu-id="6bda5-2238">#ERROR `errornumber`#</span><span class="sxs-lookup"><span data-stu-id="6bda5-2238">#ERROR `errornumber`#</span></span>|<span data-ttu-id="6bda5-2239">`errornumber` (a variável é um objeto marcado como um erro)</span><span class="sxs-lookup"><span data-stu-id="6bda5-2239">`errornumber` (variable is an object tagged as an error)</span></span>|  
  
 <span data-ttu-id="6bda5-2240">Caso você atinja o final do arquivo enquanto insere um item de dados, a entrada é interrompida e ocorre um erro.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2240">If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6bda5-2241">O `Input` função não está localizada.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2241">The `Input` function is not localized.</span></span> <span data-ttu-id="6bda5-2242">Por exemplo, na versão em alemão, caso você insira 3,14159, ele retorna apenas 3, porque a vírgula é tratada como um separador variável, em vez de uma vírgula decimal.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2242">For example, in the German version, if you input 3,14159, it returns only 3, because the comma is treated as a variable separator instead of as a decimal point.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6bda5-2243">Leitura de um arquivo usando o `Input` função requer `Read` acessar do `FileIOPermissionAccess` enumeração.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2243">Reading from a file by using the `Input` function requires `Read` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="6bda5-2244">Para obter mais informações, consulte <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2244">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6bda5-2245">Este exemplo usa o `Input` função para ler dados de um arquivo em duas variáveis.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2245">This example uses the `Input` function to read data from a file into two variables.</span></span> <span data-ttu-id="6bda5-2246">Este exemplo pressupõe que `TestFile` seja um arquivo tendo várias linhas de dados gravadas usando a função `Write`, cada linha contendo uma cadeia de caracteres entre aspas e um número separado por uma vírgula; por exemplo: ("Hello", 234).</span><span class="sxs-lookup"><span data-stu-id="6bda5-2246">This example assumes that `TestFile` is a file that has several lines of data written to it using the `Write` function, each line containing a string in quotations and a number separated by a comma, for example: ("Hello", 234).</span></span>  
  
 [!code-vb[VbVbalrCatRef#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="6bda5-2247">O modo de arquivo é inválido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2247">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public static void Input (int FileNumber, ref int Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Input(int32 FileNumber, int32&amp; Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Input (FileNumber As Integer, ByRef Value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Input(int FileNumber, int % Value);" />
      <MemberSignature Language="F#" Value="static member Input : int *  -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Input (FileNumber, Value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Int32" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="6bda5-2248">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2248">Required.</span>
          </span>
          <span data-ttu-id="6bda5-2249">Qualquer número de arquivo válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2249">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="6bda5-2250">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2250">Required.</span>
          </span>
          <span data-ttu-id="6bda5-2251">A variável à qual os valores lidos do arquivo são atribuídos, não pode ser uma variável de objeto ou matriz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2251">Variable that is assigned the values read from the file—cannot be an array or object variable.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6bda5-2252">Lê dados de um arquivo sequencial aberto e atribui os dados a variáveis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2252">Reads data from an open sequential file and assigns the data to variables.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bda5-2253">O `Input` função é fornecida para compatibilidade com versões anteriores e pode afetar o desempenho.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2253">The `Input` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="6bda5-2254">Para aplicativos não herdadas, o `My.Computer.FileSystem` objeto fornece um melhor desempenho.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2254">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="6bda5-2255">Para obter mais informações, consulte [acesso a arquivos com o Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="6bda5-2255">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="6bda5-2256">Dados lidos com `Input` costumam ser gravados em um arquivo usando-se `Write`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2256">Data read with `Input` is usually written to a file by using `Write`.</span></span> <span data-ttu-id="6bda5-2257">Use essa função somente com arquivos abertos no `Input` ou `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2257">Use this function only with files opened in `Input` or `Binary` mode.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6bda5-2258">Ao ler de arquivos, não tome decisões sobre o conteúdo do arquivo com base na extensão de nome de arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2258">When reading from files, do not make decisions about the contents of the file based on the file name extension.</span></span> <span data-ttu-id="6bda5-2259">Por exemplo, um arquivo chamado Form1.vb não pode ser um arquivo fonte do Visual Basic 2005.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2259">For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</span></span>  
  
 <span data-ttu-id="6bda5-2260">Quando lidos, dados numéricos ou cadeia de caracteres padrão são atribuídos a variáveis sem modificação.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2260">When read, standard string or numeric data is assigned to variables without modification.</span></span> <span data-ttu-id="6bda5-2261">A tabela a seguir ilustra como outros dados de entrada são tratados.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2261">The following table illustrates how other input data is treated.</span></span>  
  
|<span data-ttu-id="6bda5-2262">Dados</span><span class="sxs-lookup"><span data-stu-id="6bda5-2262">Data</span></span>|<span data-ttu-id="6bda5-2263">Valor atribuído à variável</span><span class="sxs-lookup"><span data-stu-id="6bda5-2263">Value assigned to variable</span></span>|  
|-|-|  
|<span data-ttu-id="6bda5-2264">Delimitador de vírgula ou linha em branco</span><span class="sxs-lookup"><span data-stu-id="6bda5-2264">Delimiting comma or blank line</span></span>|<span data-ttu-id="6bda5-2265">Vazio</span><span class="sxs-lookup"><span data-stu-id="6bda5-2265">Empty</span></span>|  
|<span data-ttu-id="6bda5-2266">NULL # #</span><span class="sxs-lookup"><span data-stu-id="6bda5-2266">#NULL#</span></span>|`DBNull`|  
|<span data-ttu-id="6bda5-2267"># TRUE ou FALSE de # #</span><span class="sxs-lookup"><span data-stu-id="6bda5-2267">#TRUE# or #FALSE#</span></span>|<span data-ttu-id="6bda5-2268">`True` ou `False`</span><span class="sxs-lookup"><span data-stu-id="6bda5-2268">`True` or `False`</span></span>|  
|#`yyyy-mm-dd hh:mm:ss`#|<span data-ttu-id="6bda5-2269">A data e/ou hora representada pela expressão</span><span class="sxs-lookup"><span data-stu-id="6bda5-2269">The date and/or time represented by the expression</span></span>|  
|<span data-ttu-id="6bda5-2270">#ERROR `errornumber`#</span><span class="sxs-lookup"><span data-stu-id="6bda5-2270">#ERROR `errornumber`#</span></span>|<span data-ttu-id="6bda5-2271">`errornumber` (a variável é um objeto marcado como um erro)</span><span class="sxs-lookup"><span data-stu-id="6bda5-2271">`errornumber` (variable is an object tagged as an error)</span></span>|  
  
 <span data-ttu-id="6bda5-2272">Caso você atinja o final do arquivo enquanto insere um item de dados, a entrada é interrompida e ocorre um erro.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2272">If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6bda5-2273">O `Input` função não está localizada.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2273">The `Input` function is not localized.</span></span> <span data-ttu-id="6bda5-2274">Por exemplo, na versão em alemão, caso você insira 3,14159, ele retorna apenas 3, como a vírgula é tratada como um separador variável, em vez de como um ponto decimal.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2274">For example, in the German version, if you input 3,14159, it returns only 3, since the comma is treated as a variable separator instead of as a decimal point.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6bda5-2275">Leitura de um arquivo usando o `Input` função requer `Read` acessar do `FileIOPermissionAccess` enumeração.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2275">Reading from a file by using the `Input` function requires `Read` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="6bda5-2276">Para obter mais informações, consulte <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2276">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6bda5-2277">Este exemplo usa o `Input` função para ler dados de um arquivo em duas variáveis.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2277">This example uses the `Input` function to read data from a file into two variables.</span></span> <span data-ttu-id="6bda5-2278">Este exemplo pressupõe que `TestFile` seja um arquivo tendo várias linhas de dados gravadas usando a função `Write`, cada linha contendo uma cadeia de caracteres entre aspas e um número separado por uma vírgula; por exemplo: ("Hello", 234).</span><span class="sxs-lookup"><span data-stu-id="6bda5-2278">This example assumes that `TestFile` is a file that has several lines of data written to it using the `Write` function, each line containing a string in quotations and a number separated by a comma, for example: ("Hello", 234).</span></span>  
  
 [!code-vb[VbVbalrCatRef#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="6bda5-2279">O modo de arquivo é inválido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2279">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public static void Input (int FileNumber, ref long Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Input(int32 FileNumber, int64&amp; Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Int64@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Input (FileNumber As Integer, ByRef Value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Input(int FileNumber, long % Value);" />
      <MemberSignature Language="F#" Value="static member Input : int *  -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Input (FileNumber, Value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Int64" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="6bda5-2280">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2280">Required.</span>
          </span>
          <span data-ttu-id="6bda5-2281">Qualquer número de arquivo válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2281">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="6bda5-2282">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2282">Required.</span>
          </span>
          <span data-ttu-id="6bda5-2283">A variável à qual os valores lidos do arquivo são atribuídos, não pode ser uma variável de objeto ou matriz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2283">Variable that is assigned the values read from the file—cannot be an array or object variable.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6bda5-2284">Lê dados de um arquivo sequencial aberto e atribui os dados a variáveis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2284">Reads data from an open sequential file and assigns the data to variables.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bda5-2285">O `Input` função é fornecida para compatibilidade com versões anteriores e pode afetar o desempenho.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2285">The `Input` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="6bda5-2286">Para aplicativos não herdadas, o `My.Computer.FileSystem` objeto fornece um melhor desempenho.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2286">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="6bda5-2287">Para obter mais informações, consulte [acesso a arquivos com o Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="6bda5-2287">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="6bda5-2288">Dados lidos com `Input` costumam ser gravados em um arquivo usando-se `Write`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2288">Data read with `Input` is usually written to a file by using `Write`.</span></span> <span data-ttu-id="6bda5-2289">Use essa função somente com arquivos abertos no `Input` ou `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2289">Use this function only with files opened in `Input` or `Binary` mode.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6bda5-2290">Ao ler de arquivos, não tome decisões sobre o conteúdo do arquivo com base na extensão de nome de arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2290">When reading from files, do not make decisions about the contents of the file based on the file name extension.</span></span> <span data-ttu-id="6bda5-2291">Por exemplo, um arquivo chamado Form1.vb não pode ser um arquivo fonte do Visual Basic 2005.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2291">For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</span></span>  
  
 <span data-ttu-id="6bda5-2292">Quando lidos, dados numéricos ou cadeia de caracteres padrão são atribuídos a variáveis sem modificação.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2292">When read, standard string or numeric data is assigned to variables without modification.</span></span> <span data-ttu-id="6bda5-2293">A tabela a seguir ilustra como outros dados de entrada são tratados.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2293">The following table illustrates how other input data is treated.</span></span>  
  
|<span data-ttu-id="6bda5-2294">Dados</span><span class="sxs-lookup"><span data-stu-id="6bda5-2294">Data</span></span>|<span data-ttu-id="6bda5-2295">Valor atribuído à variável</span><span class="sxs-lookup"><span data-stu-id="6bda5-2295">Value assigned to variable</span></span>|  
|-|-|  
|<span data-ttu-id="6bda5-2296">Delimitador de vírgula ou linha em branco</span><span class="sxs-lookup"><span data-stu-id="6bda5-2296">Delimiting comma or blank line</span></span>|<span data-ttu-id="6bda5-2297">Vazio</span><span class="sxs-lookup"><span data-stu-id="6bda5-2297">Empty</span></span>|  
|<span data-ttu-id="6bda5-2298">NULL # #</span><span class="sxs-lookup"><span data-stu-id="6bda5-2298">#NULL#</span></span>|`DBNull`|  
|<span data-ttu-id="6bda5-2299"># TRUE ou FALSE de # #</span><span class="sxs-lookup"><span data-stu-id="6bda5-2299">#TRUE# or #FALSE#</span></span>|<span data-ttu-id="6bda5-2300">`True` ou `False`</span><span class="sxs-lookup"><span data-stu-id="6bda5-2300">`True` or `False`</span></span>|  
|#`yyyy-mm-dd hh:mm:ss`#|<span data-ttu-id="6bda5-2301">A data e/ou hora representada pela expressão</span><span class="sxs-lookup"><span data-stu-id="6bda5-2301">The date and/or time represented by the expression</span></span>|  
|<span data-ttu-id="6bda5-2302">#ERROR `errornumber`#</span><span class="sxs-lookup"><span data-stu-id="6bda5-2302">#ERROR `errornumber`#</span></span>|<span data-ttu-id="6bda5-2303">`errornumber` (a variável é um objeto marcado como um erro)</span><span class="sxs-lookup"><span data-stu-id="6bda5-2303">`errornumber` (variable is an object tagged as an error)</span></span>|  
  
 <span data-ttu-id="6bda5-2304">Caso você atinja o final do arquivo enquanto insere um item de dados, a entrada é interrompida e ocorre um erro.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2304">If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6bda5-2305">O `Input` função não está localizada.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2305">The `Input` function is not localized.</span></span> <span data-ttu-id="6bda5-2306">Por exemplo, na versão em alemão, caso você insira 3,14159, ele retorna apenas 3, porque a vírgula é tratada como um separador variável, em vez de uma vírgula decimal.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2306">For example, in the German version, if you input 3,14159, it returns only 3, because the comma is treated as a variable separator instead of as a decimal point.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6bda5-2307">Leitura de um arquivo usando o `Input` função requer `Read` acessar do `FileIOPermissionAccess` enumeração.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2307">Reading from a file by using the `Input` function requires `Read` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="6bda5-2308">Para obter mais informações, consulte <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2308">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6bda5-2309">Este exemplo usa o `Input` função para ler dados de um arquivo em duas variáveis.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2309">This example uses the `Input` function to read data from a file into two variables.</span></span> <span data-ttu-id="6bda5-2310">Este exemplo pressupõe que `TestFile` seja um arquivo tendo várias linhas de dados gravadas usando a função `Write`, cada linha contendo uma cadeia de caracteres entre aspas e um número separado por uma vírgula; por exemplo: ("Hello", 234).</span><span class="sxs-lookup"><span data-stu-id="6bda5-2310">This example assumes that `TestFile` is a file that has several lines of data written to it using the `Write` function, each line containing a string in quotations and a number separated by a comma, for example: ("Hello", 234).</span></span>  
  
 [!code-vb[VbVbalrCatRef#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="6bda5-2311">O modo de arquivo é inválido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2311">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public static void Input (int FileNumber, ref object Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Input(int32 FileNumber, object&amp; Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Input (FileNumber As Integer, ByRef Value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Input(int FileNumber, System::Object ^ % Value);" />
      <MemberSignature Language="F#" Value="static member Input : int *  -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Input (FileNumber, Value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="6bda5-2312">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2312">Required.</span>
          </span>
          <span data-ttu-id="6bda5-2313">Qualquer número de arquivo válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2313">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="6bda5-2314">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2314">Required.</span>
          </span>
          <span data-ttu-id="6bda5-2315">A variável à qual os valores lidos do arquivo são atribuídos, não pode ser uma variável de objeto ou matriz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2315">Variable that is assigned the values read from the file—cannot be an array or object variable.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6bda5-2316">Lê dados de um arquivo sequencial aberto e atribui os dados a variáveis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2316">Reads data from an open sequential file and assigns the data to variables.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bda5-2317">O `Input` função é fornecida para compatibilidade com versões anteriores e pode afetar o desempenho.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2317">The `Input` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="6bda5-2318">Para aplicativos não herdadas, o `My.Computer.FileSystem` objeto fornece um melhor desempenho.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2318">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="6bda5-2319">Para obter mais informações, consulte [acesso a arquivos com o Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="6bda5-2319">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="6bda5-2320">Dados lidos com `Input` costumam ser gravados em um arquivo usando-se `Write`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2320">Data read with `Input` is usually written to a file by using `Write`.</span></span> <span data-ttu-id="6bda5-2321">Use essa função somente com arquivos abertos no `Input` ou `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2321">Use this function only with files opened in `Input` or `Binary` mode.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6bda5-2322">Ao ler de arquivos, não tome decisões sobre o conteúdo do arquivo com base na extensão de nome de arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2322">When reading from files, do not make decisions about the contents of the file based on the file name extension.</span></span> <span data-ttu-id="6bda5-2323">Por exemplo, um arquivo chamado Form1.vb não pode ser um arquivo fonte do Visual Basic 2005.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2323">For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</span></span>  
  
 <span data-ttu-id="6bda5-2324">Quando lidos, dados numéricos ou cadeia de caracteres padrão são atribuídos a variáveis sem modificação.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2324">When read, standard string or numeric data is assigned to variables without modification.</span></span> <span data-ttu-id="6bda5-2325">A tabela a seguir ilustra como outros dados de entrada são tratados.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2325">The following table illustrates how other input data is treated.</span></span>  
  
|<span data-ttu-id="6bda5-2326">Dados</span><span class="sxs-lookup"><span data-stu-id="6bda5-2326">Data</span></span>|<span data-ttu-id="6bda5-2327">Valor atribuído à variável</span><span class="sxs-lookup"><span data-stu-id="6bda5-2327">Value assigned to variable</span></span>|  
|-|-|  
|<span data-ttu-id="6bda5-2328">Delimitador de vírgula ou linha em branco</span><span class="sxs-lookup"><span data-stu-id="6bda5-2328">Delimiting comma or blank line</span></span>|<span data-ttu-id="6bda5-2329">Vazio</span><span class="sxs-lookup"><span data-stu-id="6bda5-2329">Empty</span></span>|  
|<span data-ttu-id="6bda5-2330">NULL # #</span><span class="sxs-lookup"><span data-stu-id="6bda5-2330">#NULL#</span></span>|`DBNull`|  
|<span data-ttu-id="6bda5-2331"># TRUE ou FALSE de # #</span><span class="sxs-lookup"><span data-stu-id="6bda5-2331">#TRUE# or #FALSE#</span></span>|<span data-ttu-id="6bda5-2332">`True` ou `False`</span><span class="sxs-lookup"><span data-stu-id="6bda5-2332">`True` or `False`</span></span>|  
|#`yyyy-mm-dd hh:mm:ss`#|<span data-ttu-id="6bda5-2333">A data e/ou hora representada pela expressão</span><span class="sxs-lookup"><span data-stu-id="6bda5-2333">The date and/or time represented by the expression</span></span>|  
|<span data-ttu-id="6bda5-2334">#ERROR `errornumber`#</span><span class="sxs-lookup"><span data-stu-id="6bda5-2334">#ERROR `errornumber`#</span></span>|<span data-ttu-id="6bda5-2335">`errornumber` (a variável é um objeto marcado como um erro)</span><span class="sxs-lookup"><span data-stu-id="6bda5-2335">`errornumber` (variable is an object tagged as an error)</span></span>|  
  
 <span data-ttu-id="6bda5-2336">Caso você atinja o final do arquivo enquanto insere um item de dados, a entrada é interrompida e ocorre um erro.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2336">If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6bda5-2337">O `Input` função não está localizada.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2337">The `Input` function is not localized.</span></span> <span data-ttu-id="6bda5-2338">Por exemplo, na versão em alemão, caso você insira 3,14159, ele retorna apenas 3, porque a vírgula é tratada como um separador variável, em vez de uma vírgula decimal.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2338">For example, in the German version, if you input 3,14159, it returns only 3, because the comma is treated as a variable separator instead of as a decimal point.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6bda5-2339">Leitura de um arquivo usando o `Input` função requer `Read` acessar do `FileIOPermissionAccess` enumeração.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2339">Reading from a file by using the `Input` function requires `Read` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="6bda5-2340">Para obter mais informações, consulte <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2340">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6bda5-2341">Este exemplo usa o `Input` função para ler dados de um arquivo em duas variáveis.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2341">This example uses the `Input` function to read data from a file into two variables.</span></span> <span data-ttu-id="6bda5-2342">Este exemplo pressupõe que `TestFile` seja um arquivo tendo várias linhas de dados gravadas usando a função `Write`, cada linha contendo uma cadeia de caracteres entre aspas e um número separado por uma vírgula; por exemplo: ("Hello", 234).</span><span class="sxs-lookup"><span data-stu-id="6bda5-2342">This example assumes that `TestFile` is a file that has several lines of data written to it using the `Write` function, each line containing a string in quotations and a number separated by a comma, for example: ("Hello", 234).</span></span>  
  
 [!code-vb[VbVbalrCatRef#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="6bda5-2343">O modo de arquivo é inválido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2343">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public static void Input (int FileNumber, ref float Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Input(int32 FileNumber, float32&amp; Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Single@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Input (FileNumber As Integer, ByRef Value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Input(int FileNumber, float % Value);" />
      <MemberSignature Language="F#" Value="static member Input : int *  -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Input (FileNumber, Value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Single" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="6bda5-2344">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2344">Required.</span>
          </span>
          <span data-ttu-id="6bda5-2345">Qualquer número de arquivo válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2345">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="6bda5-2346">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2346">Required.</span>
          </span>
          <span data-ttu-id="6bda5-2347">A variável à qual os valores lidos do arquivo são atribuídos, não pode ser uma variável de objeto ou matriz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2347">Variable that is assigned the values read from the file—cannot be an array or object variable.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6bda5-2348">Lê dados de um arquivo sequencial aberto e atribui os dados a variáveis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2348">Reads data from an open sequential file and assigns the data to variables.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bda5-2349">O `Input` função é fornecida para compatibilidade com versões anteriores e pode afetar o desempenho.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2349">The `Input` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="6bda5-2350">Para aplicativos não herdadas, o `My.Computer.FileSystem` objeto fornece um melhor desempenho.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2350">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="6bda5-2351">Para obter mais informações, consulte [acesso a arquivos com o Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="6bda5-2351">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="6bda5-2352">Dados lidos com `Input` costumam ser gravados em um arquivo usando-se `Write`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2352">Data read with `Input` is usually written to a file by using `Write`.</span></span> <span data-ttu-id="6bda5-2353">Use essa função somente com arquivos abertos no `Input` ou `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2353">Use this function only with files opened in `Input` or `Binary` mode.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6bda5-2354">Ao ler de arquivos, não tome decisões sobre o conteúdo do arquivo com base na extensão de nome de arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2354">When reading from files, do not make decisions about the contents of the file based on the file name extension.</span></span> <span data-ttu-id="6bda5-2355">Por exemplo, um arquivo chamado Form1.vb não pode ser um arquivo fonte do Visual Basic 2005.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2355">For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</span></span>  
  
 <span data-ttu-id="6bda5-2356">Quando lidos, dados numéricos ou cadeia de caracteres padrão são atribuídos a variáveis sem modificação.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2356">When read, standard string or numeric data is assigned to variables without modification.</span></span> <span data-ttu-id="6bda5-2357">A tabela a seguir ilustra como outros dados de entrada são tratados.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2357">The following table illustrates how other input data is treated.</span></span>  
  
|<span data-ttu-id="6bda5-2358">Dados</span><span class="sxs-lookup"><span data-stu-id="6bda5-2358">Data</span></span>|<span data-ttu-id="6bda5-2359">Valor atribuído à variável</span><span class="sxs-lookup"><span data-stu-id="6bda5-2359">Value assigned to variable</span></span>|  
|-|-|  
|<span data-ttu-id="6bda5-2360">Delimitador de vírgula ou linha em branco</span><span class="sxs-lookup"><span data-stu-id="6bda5-2360">Delimiting comma or blank line</span></span>|<span data-ttu-id="6bda5-2361">Vazio</span><span class="sxs-lookup"><span data-stu-id="6bda5-2361">Empty</span></span>|  
|<span data-ttu-id="6bda5-2362">NULL # #</span><span class="sxs-lookup"><span data-stu-id="6bda5-2362">#NULL#</span></span>|`DBNull`|  
|<span data-ttu-id="6bda5-2363"># TRUE ou FALSE de # #</span><span class="sxs-lookup"><span data-stu-id="6bda5-2363">#TRUE# or #FALSE#</span></span>|<span data-ttu-id="6bda5-2364">`True` ou `False`</span><span class="sxs-lookup"><span data-stu-id="6bda5-2364">`True` or `False`</span></span>|  
|#`yyyy-mm-dd hh:mm:ss`#|<span data-ttu-id="6bda5-2365">A data e/ou hora representada pela expressão</span><span class="sxs-lookup"><span data-stu-id="6bda5-2365">The date and/or time represented by the expression</span></span>|  
|<span data-ttu-id="6bda5-2366">#ERROR `errornumber`#</span><span class="sxs-lookup"><span data-stu-id="6bda5-2366">#ERROR `errornumber`#</span></span>|<span data-ttu-id="6bda5-2367">`errornumber` (a variável é um objeto marcado como um erro)</span><span class="sxs-lookup"><span data-stu-id="6bda5-2367">`errornumber` (variable is an object tagged as an error)</span></span>|  
  
 <span data-ttu-id="6bda5-2368">Caso você atinja o final do arquivo enquanto insere um item de dados, a entrada é interrompida e ocorre um erro.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2368">If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6bda5-2369">O `Input` função não está localizada.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2369">The `Input` function is not localized.</span></span> <span data-ttu-id="6bda5-2370">Por exemplo, na versão em alemão, caso você insira 3,14159, ele retorna apenas 3, porque a vírgula é tratada como um separador variável, em vez de uma vírgula decimal.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2370">For example, in the German version, if you input 3,14159, it returns only 3, because the comma is treated as a variable separator instead of as a decimal point.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6bda5-2371">Leitura de um arquivo usando o `Input` função requer `Read` acessar do `FileIOPermissionAccess` enumeração.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2371">Reading from a file by using the `Input` function requires `Read` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="6bda5-2372">Para obter mais informações, consulte <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2372">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6bda5-2373">Este exemplo usa o `Input` função para ler dados de um arquivo em duas variáveis.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2373">This example uses the `Input` function to read data from a file into two variables.</span></span> <span data-ttu-id="6bda5-2374">Este exemplo pressupõe que `TestFile` seja um arquivo tendo várias linhas de dados gravadas usando a função `Write`, cada linha contendo uma cadeia de caracteres entre aspas e um número separado por uma vírgula; por exemplo: ("Hello", 234).</span><span class="sxs-lookup"><span data-stu-id="6bda5-2374">This example assumes that `TestFile` is a file that has several lines of data written to it using the `Write` function, each line containing a string in quotations and a number separated by a comma, for example: ("Hello", 234).</span></span>  
  
 [!code-vb[VbVbalrCatRef#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="6bda5-2375">O modo de arquivo é inválido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2375">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public static void Input (int FileNumber, ref string Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Input(int32 FileNumber, string&amp; Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Input (FileNumber As Integer, ByRef Value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Input(int FileNumber, System::String ^ % Value);" />
      <MemberSignature Language="F#" Value="static member Input : int *  -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Input (FileNumber, Value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.String" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="6bda5-2376">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2376">Required.</span>
          </span>
          <span data-ttu-id="6bda5-2377">Qualquer número de arquivo válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2377">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="6bda5-2378">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2378">Required.</span>
          </span>
          <span data-ttu-id="6bda5-2379">A variável à qual os valores lidos do arquivo são atribuídos, não pode ser uma variável de objeto ou matriz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2379">Variable that is assigned the values read from the file—cannot be an array or object variable.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6bda5-2380">Lê dados de um arquivo sequencial aberto e atribui os dados a variáveis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2380">Reads data from an open sequential file and assigns the data to variables.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bda5-2381">O `Input` função é fornecida para compatibilidade com versões anteriores e pode afetar o desempenho.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2381">The `Input` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="6bda5-2382">Para aplicativos não herdadas, o `My.Computer.FileSystem` objeto fornece um melhor desempenho.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2382">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="6bda5-2383">Para obter mais informações, consulte [acesso a arquivos com o Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="6bda5-2383">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="6bda5-2384">Dados lidos com `Input` costumam ser gravados em um arquivo usando-se `Write`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2384">Data read with `Input` is usually written to a file by using `Write`.</span></span> <span data-ttu-id="6bda5-2385">Use essa função somente com arquivos abertos no `Input` ou `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2385">Use this function only with files opened in `Input` or `Binary` mode.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6bda5-2386">Ao ler de arquivos, não tome decisões sobre o conteúdo do arquivo com base na extensão de nome de arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2386">When reading from files, do not make decisions about the contents of the file based on the file name extension.</span></span> <span data-ttu-id="6bda5-2387">Por exemplo, um arquivo chamado Form1.vb não pode ser um arquivo fonte do Visual Basic 2005.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2387">For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</span></span>  
  
 <span data-ttu-id="6bda5-2388">Quando lidos, dados numéricos ou cadeia de caracteres padrão são atribuídos a variáveis sem modificação.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2388">When read, standard string or numeric data is assigned to variables without modification.</span></span> <span data-ttu-id="6bda5-2389">A tabela a seguir ilustra como outros dados de entrada são tratados.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2389">The following table illustrates how other input data is treated.</span></span>  
  
|<span data-ttu-id="6bda5-2390">Dados</span><span class="sxs-lookup"><span data-stu-id="6bda5-2390">Data</span></span>|<span data-ttu-id="6bda5-2391">Valor atribuído à variável</span><span class="sxs-lookup"><span data-stu-id="6bda5-2391">Value assigned to variable</span></span>|  
|-|-|  
|<span data-ttu-id="6bda5-2392">Delimitador de vírgula ou linha em branco</span><span class="sxs-lookup"><span data-stu-id="6bda5-2392">Delimiting comma or blank line</span></span>|<span data-ttu-id="6bda5-2393">Vazio</span><span class="sxs-lookup"><span data-stu-id="6bda5-2393">Empty</span></span>|  
|<span data-ttu-id="6bda5-2394">NULL # #</span><span class="sxs-lookup"><span data-stu-id="6bda5-2394">#NULL#</span></span>|`DBNull`|  
|<span data-ttu-id="6bda5-2395"># TRUE ou FALSE de # #</span><span class="sxs-lookup"><span data-stu-id="6bda5-2395">#TRUE# or #FALSE#</span></span>|<span data-ttu-id="6bda5-2396">`True` ou `False`</span><span class="sxs-lookup"><span data-stu-id="6bda5-2396">`True` or `False`</span></span>|  
|#`yyyy-mm-dd hh:mm:ss`#|<span data-ttu-id="6bda5-2397">A data e/ou hora representada pela expressão</span><span class="sxs-lookup"><span data-stu-id="6bda5-2397">The date and/or time represented by the expression</span></span>|  
|<span data-ttu-id="6bda5-2398">#ERROR `errornumber`#</span><span class="sxs-lookup"><span data-stu-id="6bda5-2398">#ERROR `errornumber`#</span></span>|<span data-ttu-id="6bda5-2399">`errornumber` (a variável é um objeto marcado como um erro)</span><span class="sxs-lookup"><span data-stu-id="6bda5-2399">`errornumber` (variable is an object tagged as an error)</span></span>|  
  
 <span data-ttu-id="6bda5-2400">Caso você atinja o final do arquivo enquanto insere um item de dados, a entrada é interrompida e ocorre um erro.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2400">If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6bda5-2401">O `Input` função não está localizada.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2401">The `Input` function is not localized.</span></span> <span data-ttu-id="6bda5-2402">Por exemplo, na versão em alemão, caso você insira 3,14159, ele retorna apenas 3, porque a vírgula é tratada como um separador variável, em vez de uma vírgula decimal.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2402">For example, in the German version, if you input 3,14159, it returns only 3, because the comma is treated as a variable separator instead of as a decimal point.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6bda5-2403">Leitura de um arquivo usando o `Input` função requer `Read` acessar do `FileIOPermissionAccess` enumeração.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2403">Reading from a file by using the `Input` function requires `Read` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="6bda5-2404">Para obter mais informações, consulte <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2404">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6bda5-2405">Este exemplo usa o `Input` função para ler dados de um arquivo em duas variáveis.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2405">This example uses the `Input` function to read data from a file into two variables.</span></span> <span data-ttu-id="6bda5-2406">Este exemplo pressupõe que `TestFile` seja um arquivo tendo várias linhas de dados gravadas usando a função `Write`, cada linha contendo uma cadeia de caracteres entre aspas e um número separado por uma vírgula; por exemplo: ("Hello", 234).</span><span class="sxs-lookup"><span data-stu-id="6bda5-2406">This example assumes that `TestFile` is a file that has several lines of data written to it using the `Write` function, each line containing a string in quotations and a number separated by a comma, for example: ("Hello", 234).</span></span>  
  
 [!code-vb[VbVbalrCatRef#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="6bda5-2407">O modo de arquivo é inválido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2407">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="InputString">
      <MemberSignature Language="C#" Value="public static string InputString (int FileNumber, int CharCount);" />
      <MemberSignature Language="ILAsm" Value=".method public static string InputString(int32 FileNumber, int32 CharCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function InputString (FileNumber As Integer, CharCount As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ InputString(int FileNumber, int CharCount);" />
      <MemberSignature Language="F#" Value="static member InputString : int * int -&gt; string" Usage="Microsoft.VisualBasic.FileSystem.InputString (FileNumber, CharCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="CharCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="6bda5-2408">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2408">Required.</span>
          </span>
          <span data-ttu-id="6bda5-2409">Qualquer número de arquivo válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2409">Any valid file number.</span>
          </span>
        </param>
        <param name="CharCount">
          <span data-ttu-id="6bda5-2410">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2410">Required.</span>
          </span>
          <span data-ttu-id="6bda5-2411">Qualquer expressão numérica válida que especifica o número de caracteres a serem lidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2411">Any valid numeric expression specifying the number of characters to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6bda5-2412">Retorna o valor <see langword="String" /> que contém caracteres de um arquivo aberto no modo <see langword="Input" /> ou <see langword="Binary" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2412">Returns <see langword="String" /> value that contains characters from a file opened in <see langword="Input" /> or <see langword="Binary" /> mode.</span>
          </span>
          <span data-ttu-id="6bda5-2413">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="InputString" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2413">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="InputString" />.</span>
          </span>
          <span data-ttu-id="6bda5-2414">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2414">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6bda5-2415">Retorna o valor <see langword="String" /> que contém caracteres de um arquivo aberto no modo <see langword="Input" /> ou <see langword="Binary" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2415">Returns <see langword="String" /> value that contains characters from a file opened in <see langword="Input" /> or <see langword="Binary" /> mode.</span>
          </span>
          <span data-ttu-id="6bda5-2416">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="InputString" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2416">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="InputString" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bda5-2417">O `InputString` função é fornecida para compatibilidade com versões anteriores e pode afetar o desempenho.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2417">The `InputString` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="6bda5-2418">Para aplicativos não herdadas, o `My.Computer.FileSystem` objeto fornece um melhor desempenho.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2418">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="6bda5-2419">Para obter mais informações, consulte [acesso a arquivos com o Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="6bda5-2419">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="6bda5-2420">Dados lidos com o `InputString` função geralmente é gravada em um arquivo usando `Print` ou `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2420">Data read with the `InputString` function is usually written to a file by using `Print` or `FilePut`.</span></span> <span data-ttu-id="6bda5-2421">Use essa função somente com arquivos abertos no `Input` ou `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2421">Use this function only with files opened in `Input` or `Binary` mode.</span></span>  
  
 <span data-ttu-id="6bda5-2422">Ao contrário do `Input` função, o `InputString` função retorna todos os caracteres que ele lê.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2422">Unlike the `Input` function, the `InputString` function returns all the characters it reads.</span></span> <span data-ttu-id="6bda5-2423">Isso inclui vírgulas, retornos de carro, alimentação de linha, as aspas e espaços à esquerda.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2423">This includes commas, carriage returns, line feeds, quotation marks, and leading spaces.</span></span>  
  
 <span data-ttu-id="6bda5-2424">Com arquivos abertos para `Binary` acessar, uma tentativa de ler o arquivo usando o `InputString` funcionando até `EOF` retorna `True` gera um erro.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2424">With files opened for `Binary` access, an attempt to read through the file by using the `InputString` function until `EOF` returns `True` generates an error.</span></span> <span data-ttu-id="6bda5-2425">Use o `LOF` e `Loc` funções em vez de `EOF` quando você ler arquivos binários usando `InputString`, ou use `FileGet` quando você usa o `EOF` função.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2425">Use the `LOF` and `Loc` functions instead of `EOF` when you read binary files by using `InputString`, or use `FileGet` when you use the `EOF` function.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6bda5-2426">Ao ler de arquivos, não tome decisões de segurança sobre o conteúdo do arquivo com base na extensão de nome de arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2426">When reading from files, do not make security decisions about the contents of the file based on the file name extension.</span></span> <span data-ttu-id="6bda5-2427">Por exemplo, um arquivo chamado Form1.vb não pode ser um arquivo de origem do Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2427">For example, a file named Form1.vb may not be a Visual Basic source file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6bda5-2428">Este exemplo usa o `InputString` função para ler um caractere por vez de um arquivo e imprimi-lo para o `Output` janela.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2428">This example uses the `InputString` function to read one character at a time from a file and print it to the `Output` window.</span></span> <span data-ttu-id="6bda5-2429">Este exemplo supõe que `MyFile` é um arquivo de texto que tenha várias linhas de dados de exemplo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2429">This example assumes that `MyFile` is a text file that has several lines of sample data.</span></span>  
  
 [!code-vb[VbVbalrCatRef#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="6bda5-2430">
            <paramref name="FileNumber" /> não existe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2430">
              <paramref name="FileNumber" /> does not exist.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6bda5-2431">
            <paramref name="CharCount" /> &lt; 0 ou &gt; 214.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2431">
              <paramref name="CharCount" /> &lt; 0 or &gt; 214.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Input" />
      </Docs>
    </Member>
    <Member MemberName="Kill">
      <MemberSignature Language="C#" Value="public static void Kill (string PathName);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Kill(string PathName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Kill(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Kill (PathName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Kill(System::String ^ PathName);" />
      <MemberSignature Language="F#" Value="static member Kill : string -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Kill PathName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="PathName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="PathName">
          <span data-ttu-id="6bda5-2432">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2432">Required.</span>
          </span>
          <span data-ttu-id="6bda5-2433">Expressão <see langword="String" /> que especifica um ou mais nomes de arquivo a serem excluídos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2433">
              <see langword="String" /> expression that specifies one or more file names to be deleted.</span>
          </span>
          <span data-ttu-id="6bda5-2434">
            <c>PathName</c> pode incluir o diretório ou a pasta, bem como a unidade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2434">
              <c>PathName</c> can include the directory or folder, and the drive.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6bda5-2435">Exclui arquivos de um disco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2435">Deletes files from a disk.</span>
          </span>
          <span data-ttu-id="6bda5-2436">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="Kill" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2436">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Kill" />.</span>
          </span>
          <span data-ttu-id="6bda5-2437">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2437">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> .</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bda5-2438">`Kill` suporta o uso de vários caracteres (`*`) e de caractere único (`?`) caracteres curinga para especificar vários arquivos.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2438">`Kill` supports the use of multiple-character (`*`) and single-character (`?`) wildcards to specify multiple files.</span></span>  
  
 <span data-ttu-id="6bda5-2439">**Observação de segurança** para executar, o `Kill` função requer `Read` e `PathDiscovery` sinalizadores de <xref:System.Security.Permissions.FileIOPermission> sejam concedidas ao código em execução.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2439">**Security Note** In order to execute, the `Kill` function requires `Read` and `PathDiscovery` flags of <xref:System.Security.Permissions.FileIOPermission> to be granted to the executing code.</span></span> <span data-ttu-id="6bda5-2440">Para obter mais informações, consulte <xref:System.Security.SecurityException> [permissões de acesso do código](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675)</span><span class="sxs-lookup"><span data-stu-id="6bda5-2440">For more information, see <xref:System.Security.SecurityException>[Code Access Permissions](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6bda5-2441">Este exemplo usa o `Kill` função para excluir um arquivo de um disco.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2441">This example uses the `Kill` function to delete a file from a disk.</span></span>  
  
 [!code-vb[VbVbalrCatRef#60](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#60)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="6bda5-2442">Arquivos de destino abertos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2442">Target file(s) open.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="6bda5-2443">Arquivos de destino não encontrados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2443">Target file(s) not found.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="6bda5-2444">Permissão negada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2444">Permission denied.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.RmDir(System.String)" />
        <altmember cref="T:System.IO.IOException" />
        <altmember cref="T:System.IO.FileNotFoundException" />
      </Docs>
    </Member>
    <Member MemberName="LineInput">
      <MemberSignature Language="C#" Value="public static string LineInput (int FileNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public static string LineInput(int32 FileNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.LineInput(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function LineInput (FileNumber As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ LineInput(int FileNumber);" />
      <MemberSignature Language="F#" Value="static member LineInput : int -&gt; string" Usage="Microsoft.VisualBasic.FileSystem.LineInput FileNumber" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="6bda5-2445">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2445">Required.</span>
          </span>
          <span data-ttu-id="6bda5-2446">Qualquer número de arquivo válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2446">Any valid file number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6bda5-2447">Lê uma única linha de um arquivo sequencial aberto e a atribui a uma variável <see langword="String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2447">Reads a single line from an open sequential file and assigns it to a <see langword="String" /> variable.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6bda5-2448">Lê uma única linha de um arquivo sequencial aberto e a atribui a uma variável <see langword="String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2448">Reads a single line from an open sequential file and assigns it to a <see langword="String" /> variable.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bda5-2449">O `LineInput` função é fornecida para compatibilidade com versões anteriores e pode afetar o desempenho.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2449">The `LineInput` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="6bda5-2450">Para aplicativos não herdadas, o `My.Computer.FileSystem` objeto fornece um melhor desempenho.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2450">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="6bda5-2451">Para obter mais informações, consulte [acesso a arquivos com o Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="6bda5-2451">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="6bda5-2452">Dados lidos com `LineInput` costumam ser gravados em um arquivo usando-se `Print`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2452">Data read with `LineInput` is usually written to a file by using `Print`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6bda5-2453">Ao ler de arquivos, não tome decisões sobre o conteúdo de um arquivo com base na extensão de nome de arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2453">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="6bda5-2454">Por exemplo, um arquivo chamado Form1.vb não pode ser um arquivo de origem do Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2454">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
 <span data-ttu-id="6bda5-2455">O `LineInput` função lê a partir de um caractere de um arquivo por vez até encontrar um retorno de carro (`Chr(13)`) ou retorno/alimentação de linha de carro (`Chr(13) + Chr(10)`) sequência.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2455">The `LineInput` function reads from a file one character at a time until it encounters a carriage return (`Chr(13)`) or carriage return/line feed (`Chr(13) + Chr(10)`) sequence.</span></span> <span data-ttu-id="6bda5-2456">Sequências de feed de linha/retorno de carro são ignoradas em vez de acrescentado à cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2456">Carriage return/line feed sequences are skipped instead of appended to the character string.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6bda5-2457">Leitura de um arquivo usando o `LineInput` função requer `Read` acessar do <xref:System.Security.Permissions.FileIOPermissionAccess> enumeração.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2457">Reading from a file by using the `LineInput` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6bda5-2458">Este exemplo usa o `LineInput` função ler uma linha de um arquivo sequencial e atribuí-lo a uma variável.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2458">This example uses the `LineInput` function to read a line from a sequential file and assign it to a variable.</span></span> <span data-ttu-id="6bda5-2459">Este exemplo supõe que `TestFile` é um arquivo de texto que tenha várias linhas de dados de exemplo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2459">This example assumes that `TestFile` is a text file that has several lines of sample data.</span></span>  
  
 [!code-vb[VbVbalrCatRef#19](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#19)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.EndOfStreamException">
          <span data-ttu-id="6bda5-2460">Fim do arquivo atingido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2460">End of file reached.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="6bda5-2461">
            <paramref name="FileNumber" /> não existe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2461">
              <paramref name="FileNumber" /> does not exist.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Input" />
      </Docs>
    </Member>
    <Member MemberName="Loc">
      <MemberSignature Language="C#" Value="public static long Loc (int FileNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public static int64 Loc(int32 FileNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Loc(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Loc (FileNumber As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Loc(int FileNumber);" />
      <MemberSignature Language="F#" Value="static member Loc : int -&gt; int64" Usage="Microsoft.VisualBasic.FileSystem.Loc FileNumber" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="6bda5-2462">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2462">Required.</span>
          </span>
          <span data-ttu-id="6bda5-2463">Qualquer número de arquivo <see langword="Integer" /> válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2463">Any valid <see langword="Integer" /> file number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6bda5-2464">Retorna um <see langword="Long" /> valor que especifica a posição de leitura/gravação atual em um arquivo aberto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2464">Returns a <see langword="Long" /> value that specifies the current read/write position in an open file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6bda5-2465">Retorna um <see langword="Long" /> valor que especifica a posição de leitura/gravação atual em um arquivo aberto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2465">Returns a <see langword="Long" /> value that specifies the current read/write position in an open file.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bda5-2466">O `Loc` função é baseado em zero; usá-lo para recuperar o primeiro byte em um arquivo, retornará 0.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2466">The `Loc` function is zero-based; using it to retrieve the first byte in a file will return 0.</span></span>  
  
 <span data-ttu-id="6bda5-2467">O `Loc` função é fornecida para compatibilidade com versões anteriores e pode afetar o desempenho.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2467">The `Loc` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="6bda5-2468">Para aplicativos não herdadas, o `My.Computer.FileSystem` objeto fornece um melhor desempenho.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2468">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="6bda5-2469">Para obter mais informações, consulte [acesso a arquivos com o Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="6bda5-2469">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="6bda5-2470">O exemplo a seguir descreve o valor de retorno para cada modo de acesso do arquivo:</span><span class="sxs-lookup"><span data-stu-id="6bda5-2470">The following describes the return value for each file access mode:</span></span>  
  
|<span data-ttu-id="6bda5-2471">Modo</span><span class="sxs-lookup"><span data-stu-id="6bda5-2471">Mode</span></span>|<span data-ttu-id="6bda5-2472">Valor retornado</span><span class="sxs-lookup"><span data-stu-id="6bda5-2472">Return value</span></span>|  
|-|-|  
|`Random`|<span data-ttu-id="6bda5-2473">Número do último registro lido ou gravado no arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2473">Number of the last record read from or written to the file.</span></span>|  
|`Sequential`|<span data-ttu-id="6bda5-2474">Posição atual do byte no arquivo dividida por 128.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2474">Current byte position in the file divided by 128.</span></span> <span data-ttu-id="6bda5-2475">No entanto, a informações retornadas pelo `Loc` para arquivos sequenciais não é usada nem necessário.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2475">However, information returned by `Loc` for sequential files is neither used nor required.</span></span>|  
|`Binary`|<span data-ttu-id="6bda5-2476">Posição do último byte lido ou gravado.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2476">Position of the last byte read or written.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="6bda5-2477">Este exemplo usa o `Loc` função para retornar a posição de leitura/gravação atual em um arquivo aberto.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2477">This example uses the `Loc` function to return the current read/write position in an open file.</span></span> <span data-ttu-id="6bda5-2478">Este exemplo supõe que `MyFile` é um arquivo de texto que tenha várias linhas de dados de exemplo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2478">This example assumes that `MyFile` is a text file that has several lines of sample data.</span></span>  
  
 [!code-vb[VbVbalrCatRef#17](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="6bda5-2479">O modo de arquivo é inválido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2479">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.EOF(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.LOF(System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Lock">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6bda5-2480">Controla o acesso por outros processos a todo ou à parte de um arquivo aberto usando a função <see langword="Open" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2480">Controls access by other processes to all or part of a file opened by using the <see langword="Open" /> function.</span>
          </span>
          <span data-ttu-id="6bda5-2481">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S de arquivo que <see langword="Lock" /> e <see langword="Unlock" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2481">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Lock" /> and <see langword="Unlock" />.</span>
          </span>
          <span data-ttu-id="6bda5-2482">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2482">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Lock">
      <MemberSignature Language="C#" Value="public static void Lock (int FileNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Lock(int32 FileNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Lock(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Lock (FileNumber As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Lock(int FileNumber);" />
      <MemberSignature Language="F#" Value="static member Lock : int -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Lock FileNumber" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="6bda5-2483">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2483">Required.</span>
          </span>
          <span data-ttu-id="6bda5-2484">Qualquer número de arquivo válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2484">Any valid file number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6bda5-2485">Controla o acesso por outros processos a todo ou à parte de um arquivo aberto usando a função <see langword="Open" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2485">Controls access by other processes to all or part of a file opened by using the <see langword="Open" /> function.</span>
          </span>
          <span data-ttu-id="6bda5-2486">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S de arquivo que <see langword="Lock" /> e <see langword="Unlock" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2486">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Lock" /> and <see langword="Unlock" />.</span>
          </span>
          <span data-ttu-id="6bda5-2487">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2487">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bda5-2488">O `Lock` e `Unlock` funções são usadas em ambientes onde vários processos podem precisam acessar o mesmo arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2488">The `Lock` and `Unlock` functions are used in environments where several processes might need access to the same file.</span></span>  
  
 <span data-ttu-id="6bda5-2489">`Lock` e `Unlock` funções sempre são usadas em pares.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2489">`Lock` and `Unlock` functions are always used in pairs.</span></span> <span data-ttu-id="6bda5-2490">Os argumentos para `Lock` e `Unlock` devem ser idênticos.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2490">The arguments to `Lock` and `Unlock` must be identical.</span></span>  
  
 <span data-ttu-id="6bda5-2491">Se `Record` ou `FromRecord` e `ToRecord` não for fornecido, o bloqueio será para todo o arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2491">If `Record`, or `FromRecord` and `ToRecord` are not supplied, the lock will be for the whole file.</span></span> <span data-ttu-id="6bda5-2492">Se `Record` sozinho for especificado o único registro será bloqueada/desbloqueado.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2492">If `Record` alone is specified the single record will be locked/unlocked.</span></span>  
  
 <span data-ttu-id="6bda5-2493">Se o arquivo foi aberto para entrada ou saída, sequencial `Lock` e `Unlock` afetam todo o arquivo, independentemente do intervalo especificado por `FromRecord` e`ToRecord`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2493">If the file has been opened for sequential input or output, `Lock` and `Unlock` affect the whole file, regardless of the range specified by `FromRecord` and`ToRecord`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6bda5-2494">Este exemplo ilustra o uso do `Lock` e `Unlock` funções.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2494">This example illustrates the use of the `Lock` and `Unlock` functions.</span></span> <span data-ttu-id="6bda5-2495">Este exemplo pressupõe que `People.txt` seja um arquivo contendo registros da estrutura `Person`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2495">This example assumes that `People.txt` is a file that contains records of the structure `Person`.</span></span>  
  
 [!code-vb[VbVbalrCatRef#13](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="6bda5-2496">O modo de arquivo é inválido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2496">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="Lock">
      <MemberSignature Language="C#" Value="public static void Lock (int FileNumber, long Record);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Lock(int32 FileNumber, int64 Record) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Lock(System.Int32,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Lock (FileNumber As Integer, Record As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Lock(int FileNumber, long Record);" />
      <MemberSignature Language="F#" Value="static member Lock : int * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Lock (FileNumber, Record)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Record" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="6bda5-2497">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2497">Required.</span>
          </span>
          <span data-ttu-id="6bda5-2498">Qualquer número de arquivo válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2498">Any valid file number.</span>
          </span>
        </param>
        <param name="Record">
          <span data-ttu-id="6bda5-2499">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2499">Optional.</span>
          </span>
          <span data-ttu-id="6bda5-2500">Número do único registro ou byte a ser bloqueado ou desbloqueado</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2500">Number of the only record or byte to lock or unlock</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6bda5-2501">Controla o acesso por outros processos a todo ou à parte de um arquivo aberto usando a função <see langword="Open" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2501">Controls access by other processes to all or part of a file opened by using the <see langword="Open" /> function.</span>
          </span>
          <span data-ttu-id="6bda5-2502">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S de arquivo que <see langword="Lock" /> e <see langword="Unlock" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2502">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Lock" /> and <see langword="Unlock" />.</span>
          </span>
          <span data-ttu-id="6bda5-2503">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2503">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bda5-2504">O `Lock` e `Unlock` funções são usadas em ambientes onde vários processos podem precisam acessar o mesmo arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2504">The `Lock` and `Unlock` functions are used in environments where several processes might need access to the same file.</span></span>  
  
 <span data-ttu-id="6bda5-2505">`Lock` e `Unlock` funções sempre são usadas em pares.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2505">`Lock` and `Unlock` functions are always used in pairs.</span></span> <span data-ttu-id="6bda5-2506">Os argumentos para `Lock` e `Unlock` devem ser idênticos.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2506">The arguments to `Lock` and `Unlock` must be identical.</span></span>  
  
 <span data-ttu-id="6bda5-2507">Se `Record` ou `FromRecord` e `ToRecord` não for fornecido, o bloqueio será para todo o arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2507">If `Record`, or `FromRecord` and `ToRecord` are not supplied, the lock will be for the whole file.</span></span> <span data-ttu-id="6bda5-2508">Se `Record` sozinho for especificado o único registro será bloqueada/desbloqueado.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2508">If `Record` alone is specified the single record will be locked/unlocked.</span></span>  
  
 <span data-ttu-id="6bda5-2509">Se o arquivo foi aberto para entrada ou saída, sequencial `Lock` e `Unlock` afetam todo o arquivo, independentemente do intervalo especificado por `FromRecord` e`ToRecord`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2509">If the file has been opened for sequential input or output, `Lock` and `Unlock` affect the whole file, regardless of the range specified by `FromRecord` and`ToRecord`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6bda5-2510">Este exemplo ilustra o uso do `Lock` e `Unlock` funções.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2510">This example illustrates the use of the `Lock` and `Unlock` functions.</span></span> <span data-ttu-id="6bda5-2511">Este exemplo pressupõe que `People.txt` seja um arquivo contendo registros da estrutura `Person`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2511">This example assumes that `People.txt` is a file that contains records of the structure `Person`.</span></span>  
  
 [!code-vb[VbVbalrCatRef#13](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="6bda5-2512">O modo de arquivo é inválido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2512">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="Lock">
      <MemberSignature Language="C#" Value="public static void Lock (int FileNumber, long FromRecord, long ToRecord);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Lock(int32 FileNumber, int64 FromRecord, int64 ToRecord) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Lock(System.Int32,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Lock (FileNumber As Integer, FromRecord As Long, ToRecord As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Lock(int FileNumber, long FromRecord, long ToRecord);" />
      <MemberSignature Language="F#" Value="static member Lock : int * int64 * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Lock (FileNumber, FromRecord, ToRecord)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="FromRecord" Type="System.Int64" />
        <Parameter Name="ToRecord" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="6bda5-2513">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2513">Required.</span>
          </span>
          <span data-ttu-id="6bda5-2514">Qualquer número de arquivo válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2514">Any valid file number.</span>
          </span>
        </param>
        <param name="FromRecord">
          <span data-ttu-id="6bda5-2515">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2515">Optional.</span>
          </span>
          <span data-ttu-id="6bda5-2516">Número do primeiro registro ou byte a ser bloqueado ou desbloqueado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2516">Number of the first record or byte to lock or unlock.</span>
          </span>
        </param>
        <param name="ToRecord">
          <span data-ttu-id="6bda5-2517">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2517">Optional.</span>
          </span>
          <span data-ttu-id="6bda5-2518">Número do último registro ou byte a ser bloqueado ou desbloqueado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2518">Number of the last record or byte to lock or unlock.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6bda5-2519">Controla o acesso por outros processos a todo ou à parte de um arquivo aberto usando a função <see langword="Open" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2519">Controls access by other processes to all or part of a file opened by using the <see langword="Open" /> function.</span>
          </span>
          <span data-ttu-id="6bda5-2520">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S de arquivo que <see langword="Lock" /> e <see langword="Unlock" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2520">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Lock" /> and <see langword="Unlock" />.</span>
          </span>
          <span data-ttu-id="6bda5-2521">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2521">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bda5-2522">O `Lock` e `Unlock` funções são usadas em ambientes onde vários processos podem precisam acessar o mesmo arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2522">The `Lock` and `Unlock` functions are used in environments where several processes might need access to the same file.</span></span>  
  
 <span data-ttu-id="6bda5-2523">`Lock` e `Unlock` funções sempre são usadas em pares.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2523">`Lock` and `Unlock` functions are always used in pairs.</span></span> <span data-ttu-id="6bda5-2524">Os argumentos para `Lock` e `Unlock` devem ser idênticos.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2524">The arguments to `Lock` and `Unlock` must be identical.</span></span>  
  
 <span data-ttu-id="6bda5-2525">Se `Record` ou `FromRecord` e `ToRecord` não for fornecido, o bloqueio será para todo o arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2525">If `Record`, or `FromRecord` and `ToRecord` are not supplied, the lock will be for the whole file.</span></span> <span data-ttu-id="6bda5-2526">Se `Record` sozinho for especificado o único registro será bloqueada/desbloqueado.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2526">If `Record` alone is specified the single record will be locked/unlocked.</span></span>  
  
 <span data-ttu-id="6bda5-2527">Se o arquivo foi aberto para entrada ou saída, sequencial `Lock` e `Unlock` afetam todo o arquivo, independentemente do intervalo especificado por `FromRecord` e`ToRecord`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2527">If the file has been opened for sequential input or output, `Lock` and `Unlock` affect the whole file, regardless of the range specified by `FromRecord` and`ToRecord`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6bda5-2528">Este exemplo ilustra o uso do `Lock` e `Unlock` funções.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2528">This example illustrates the use of the `Lock` and `Unlock` functions.</span></span> <span data-ttu-id="6bda5-2529">Este exemplo pressupõe que `People.txt` seja um arquivo contendo registros da estrutura `Person`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2529">This example assumes that `People.txt` is a file that contains records of the structure `Person`.</span></span>  
  
 [!code-vb[VbVbalrCatRef#13](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="6bda5-2530">O modo de arquivo é inválido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2530">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="LOF">
      <MemberSignature Language="C#" Value="public static long LOF (int FileNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public static int64 LOF(int32 FileNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.LOF(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function LOF (FileNumber As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long LOF(int FileNumber);" />
      <MemberSignature Language="F#" Value="static member LOF : int -&gt; int64" Usage="Microsoft.VisualBasic.FileSystem.LOF FileNumber" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="6bda5-2531">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2531">Required.</span>
          </span>
          <span data-ttu-id="6bda5-2532">Um <see langword="Integer" /> que contém um número de arquivo válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2532">An <see langword="Integer" /> that contains a valid file number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6bda5-2533">Retorna um <see langword="Long" /> que representa o tamanho, em bytes, de um arquivo aberto usando a função <see langword="FileOpen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2533">Returns a <see langword="Long" /> representing the size, in bytes, of a file opened by using the <see langword="FileOpen" /> function.</span>
          </span>
          <span data-ttu-id="6bda5-2534">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="LOF" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2534">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="LOF" />.</span>
          </span>
          <span data-ttu-id="6bda5-2535">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2535">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6bda5-2536">Retorna um <see langword="Long" /> que representa o tamanho, em bytes, de um arquivo aberto usando a função <see langword="FileOpen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2536">Returns a <see langword="Long" /> representing the size, in bytes, of a file opened by using the <see langword="FileOpen" /> function.</span>
          </span>
          <span data-ttu-id="6bda5-2537">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="LOF" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2537">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="LOF" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bda5-2538">Use o `FileLen` função para obter o comprimento de um arquivo que não está aberto.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2538">Use the `FileLen` function to obtain the length of a file that is not open.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6bda5-2539">Este exemplo usa o `LOF` função para determinar o tamanho de um arquivo aberto.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2539">This example uses the `LOF` function to determine the size of an open file.</span></span> <span data-ttu-id="6bda5-2540">Este exemplo supõe que `TestFile` é um arquivo de texto que contém dados de exemplo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2540">This example assumes that `TestFile` is a text file that contains sample data.</span></span>  
  
 [!code-vb[VbVbalrCatRef#23](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#23)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="6bda5-2541">O modo de arquivo é inválido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2541">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.EOF(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileLen(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Loc(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="MkDir">
      <MemberSignature Language="C#" Value="public static void MkDir (string Path);" />
      <MemberSignature Language="ILAsm" Value=".method public static void MkDir(string Path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.MkDir(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MkDir (Path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void MkDir(System::String ^ Path);" />
      <MemberSignature Language="F#" Value="static member MkDir : string -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.MkDir Path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Path">
          <span data-ttu-id="6bda5-2542">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2542">Required.</span>
          </span>
          <span data-ttu-id="6bda5-2543">Expressão <see langword="String" /> que identifica o diretório a ser criado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2543">
              <see langword="String" /> expression that identifies the directory to be created.</span>
          </span>
          <span data-ttu-id="6bda5-2544">O <c>Caminho</c> pode incluir a unidade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2544">The <c>Path</c> may include the drive.</span>
          </span>
          <span data-ttu-id="6bda5-2545">Se nenhuma unidade for especificada, <see langword="MkDir" /> criará um novo diretório na unidade atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2545">If no drive is specified, <see langword="MkDir" /> creates the new directory on the current drive.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6bda5-2546">Cria um novo diretório.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2546">Creates a new directory.</span>
          </span>
          <span data-ttu-id="6bda5-2547">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="MkDir" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2547">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="MkDir" />.</span>
          </span>
          <span data-ttu-id="6bda5-2548">Para obter mais informações, consulte <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.CreateDirectory(System.String)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2548">For more information, see <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.CreateDirectory(System.String)" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bda5-2549">Essa função cria um novo diretório.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2549">This function creates a new directory.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6bda5-2550">Este exemplo usa o `MkDir` função para criar um diretório.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2550">This example uses the `MkDir` function to create a directory.</span></span> <span data-ttu-id="6bda5-2551">Se a unidade não for especificada, o novo diretório é criado na unidade atual.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2551">If the drive is not specified, the new directory is created on the current drive.</span></span>  
  
 [!code-vb[VbVbalrCatRef#38](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#38)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6bda5-2552">
            <paramref name="Path" /> não foi especificado ou está vazio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2552">
              <paramref name="Path" /> is not specified or is empty.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="6bda5-2553">Permissão negada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2553">Permission denied.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="6bda5-2554">O diretório já existe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2554">Directory already exists.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.ChDir(System.String)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.CurDir" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.RmDir(System.String)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="Print">
      <MemberSignature Language="C#" Value="public static void Print (int FileNumber, params object[] Output);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Print(int32 FileNumber, object[] Output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub Print (FileNumber As Integer, ParamArray Output As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Print(int FileNumber, ... cli::array &lt;System::Object ^&gt; ^ Output);" />
      <MemberSignature Language="F#" Value="static member Print : int * obj[] -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Print (FileNumber, Output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Output" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="6bda5-2555">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2555">Required.</span>
          </span>
          <span data-ttu-id="6bda5-2556">Qualquer número de arquivo válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2556">Any valid file number.</span>
          </span>
        </param>
        <param name="Output">
          <span data-ttu-id="6bda5-2557">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2557">Optional.</span>
          </span>
          <span data-ttu-id="6bda5-2558">Zero ou mais expressões delimitadas por vírgula a serem gravadas em um arquivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2558">Zero or more comma-delimited expressions to write to a file.</span>
          </span>
          <span data-ttu-id="6bda5-2559">As configurações do argumento <c>Saída</c> são:</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2559">The <c>Output</c> argument settings are:</span>
          </span>
          <span data-ttu-id="6bda5-2560">
            <see langword="T:System.IO.IOException" />: o modo de arquivo é inválido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2560">
              <see langword="T:System.IO.IOException" />: File mode is invalid.</span>
          </span>
          <span data-ttu-id="6bda5-2561">
            <see langword="T:System.IO.IOException" />: <c>FileNumber</c> não existe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2561">
              <see langword="T:System.IO.IOException" />: <c>FileNumber</c> does not exist.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6bda5-2562">Grava dados formatados para exibição em um arquivo sequencial.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2562">Writes display-formatted data to a sequential file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bda5-2563">O `Print` e `PrintLine` funções são fornecidas para compatibilidade com versões anteriores e pode afetar o desempenho.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2563">The `Print` and `PrintLine` functions are provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="6bda5-2564">Para aplicativos não herdadas, o `My.Computer.FileSystem` objeto fornece um melhor desempenho.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2564">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="6bda5-2565">Para obter mais informações, consulte [acesso a arquivos com o Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="6bda5-2565">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="6bda5-2566">`Print` não inclui uma alimentação de linha no final de uma linha; No entanto, `PrintLine` incluem uma alimentação de linha.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2566">`Print` does not include a line feed at the end of a line; however, `PrintLine` does include a line feed.</span></span>  
  
 <span data-ttu-id="6bda5-2567">Dados gravados com `Print` costumam ser lidos de um arquivo usando `LineInput` ou `Input`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2567">Data written with `Print` is usually read from a file by using `LineInput` or `Input`.</span></span>  
  
 <span data-ttu-id="6bda5-2568">Se você omitir `Output` para `PrintLine`, uma linha em branco é impressa no arquivo; para `Print`, nada é de saída.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2568">If you omit `Output` for `PrintLine`, a blank line is printed to the file; for `Print`, nothing is output.</span></span> <span data-ttu-id="6bda5-2569">Várias expressões separadas com uma vírgula serão alinhadas nos limites de tabulação, mas a mistura de vírgulas e `TAB` pode causar resultados inconsistentes.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2569">Multiple expressions separated with a comma will be aligned on tab boundaries, but mixing commas and `TAB` may cause inconsistent results.</span></span>  
  
 <span data-ttu-id="6bda5-2570">Para `Boolean` dados, seja `True` ou `False` é impresso.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2570">For `Boolean` data, either `True` or `False` is printed.</span></span> <span data-ttu-id="6bda5-2571">O `True` e `False` palavras-chave não são traduzidas, independentemente da localidade.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2571">The `True` and `False` keywords are not translated, regardless of the locale.</span></span>  
  
 <span data-ttu-id="6bda5-2572">Dados de data são gravados no arquivo usando o formato de data abreviada padrão reconhecido pelo seu sistema.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2572">Date data is written to the file by using the standard short date format recognized by your system.</span></span> <span data-ttu-id="6bda5-2573">Quando a data ou o componente de tempo está ausente ou zero, somente a parte fornecida é gravada no arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2573">When either the date or the time component is missing or zero, only the part provided is written to the file.</span></span>  
  
 <span data-ttu-id="6bda5-2574">Nada será gravado no arquivo se `Output` dados estão vazios.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2574">Nothing is written to the file if `Output` data is empty.</span></span> <span data-ttu-id="6bda5-2575">No entanto, se `Output` dados de lista estão `DBNull`, `Null` é gravada no arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2575">However, if `Output` list data is `DBNull`, `Null` is written to the file.</span></span>  
  
 <span data-ttu-id="6bda5-2576">Para `Error` dados, a saída é exibida como `Error errorcode`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2576">For `Error` data, the output appears as `Error errorcode`.</span></span> <span data-ttu-id="6bda5-2577">O `Error` palavra-chave não será convertido, independentemente da localidade.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2577">The `Error` keyword is not translated regardless of the locale.</span></span>  
  
 <span data-ttu-id="6bda5-2578">Todos os dados gravados no arquivo usando `Print` internacionalmente reconhece; ou seja, os dados são formatados corretamente usando o separador decimal apropriado.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2578">All data written to the file by using `Print` is internationally aware; that is, the data is correctly formatted using the appropriate decimal separator.</span></span> <span data-ttu-id="6bda5-2579">Se o usuário deseja gerar a saída de dados para uso em várias localidades, `Write` deve ser usado.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2579">If the user wishes to output data for use by multiple locales, `Write` should be used.</span></span>  
  
 <span data-ttu-id="6bda5-2580">Gravando em um arquivo usando o `Print` ou `PrintLine` funções requer `Write` acessar do `FileIOPermissionAccess` enumeração.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2580">Writing to a file by using the `Print` or `PrintLine` functions requires `Write` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="6bda5-2581">Para obter mais informações, consulte <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2581">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess> .</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6bda5-2582">Este exemplo usa o `Print` e `PrintLine` funções para gravar dados em um arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2582">This example uses the `Print` and `PrintLine` functions to write data to a file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#53](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#53)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SPC(System.Int16)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.TAB" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="PrintLine">
      <MemberSignature Language="C#" Value="public static void PrintLine (int FileNumber, params object[] Output);" />
      <MemberSignature Language="ILAsm" Value=".method public static void PrintLine(int32 FileNumber, object[] Output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrintLine (FileNumber As Integer, ParamArray Output As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void PrintLine(int FileNumber, ... cli::array &lt;System::Object ^&gt; ^ Output);" />
      <MemberSignature Language="F#" Value="static member PrintLine : int * obj[] -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.PrintLine (FileNumber, Output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Output" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="6bda5-2583">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2583">Required.</span>
          </span>
          <span data-ttu-id="6bda5-2584">Qualquer número de arquivo válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2584">Any valid file number.</span>
          </span>
        </param>
        <param name="Output">
          <span data-ttu-id="6bda5-2585">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2585">Optional.</span>
          </span>
          <span data-ttu-id="6bda5-2586">Zero ou mais expressões delimitadas por vírgula a serem gravadas em um arquivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2586">Zero or more comma-delimited expressions to write to a file.</span>
          </span>
          <span data-ttu-id="6bda5-2587">As configurações do argumento <c>Saída</c> são:</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2587">The <c>Output</c> argument settings are:</span>
          </span>
          <span data-ttu-id="6bda5-2588">
            <see langword="T:System.IO.IOException" />: o modo de arquivo é inválido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2588">
              <see langword="T:System.IO.IOException" />: File mode is invalid.</span>
          </span>
          <span data-ttu-id="6bda5-2589">
            <see langword="T:System.IO.IOException" />: <c>FileNumber</c> não existe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2589">
              <see langword="T:System.IO.IOException" />: <c>FileNumber</c> does not exist.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6bda5-2590">Grava dados formatados para exibição em um arquivo sequencial.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2590">Writes display-formatted data to a sequential file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bda5-2591">O `Print` e `PrintLine` funções são fornecidas para compatibilidade com versões anteriores e pode afetar o desempenho.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2591">The `Print` and `PrintLine` functions are provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="6bda5-2592">Para aplicativos não herdadas, o `My.Computer.FileSystem` objeto fornece um melhor desempenho.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2592">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="6bda5-2593">Para obter mais informações, consulte [acesso a arquivos com o Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="6bda5-2593">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="6bda5-2594">`Print` não inclui uma alimentação de linha no final de uma linha; No entanto,`PrintLine` incluem uma alimentação de linha.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2594">`Print` does not include a line feed at the end of a line; however,`PrintLine` does include a line feed.</span></span>  
  
 <span data-ttu-id="6bda5-2595">Dados gravados com `Print` costumam ser lidos de um arquivo usando `LineInput` ou `Input`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2595">Data written with `Print` is usually read from a file by using `LineInput` or `Input`.</span></span>  
  
 <span data-ttu-id="6bda5-2596">Se você omitir `Output` para `PrintLine`, uma linha em branco é impressa no arquivo; para `Print`, nada é de saída.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2596">If you omit `Output` for `PrintLine`, a blank line is printed to the file; for `Print`, nothing is output.</span></span> <span data-ttu-id="6bda5-2597">Várias expressões separadas com uma vírgula serão alinhadas nos limites de tabulação, mas a mistura de vírgulas e `TAB` pode causar resultados inconsistentes.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2597">Multiple expressions separated with a comma will be aligned on tab boundaries, but mixing commas and `TAB` may cause inconsistent results.</span></span>  
  
 <span data-ttu-id="6bda5-2598">Para `Boolean` dados, seja `True` ou `False` é impresso.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2598">For `Boolean` data, either `True` or `False` is printed.</span></span> <span data-ttu-id="6bda5-2599">O `True` e `False` palavras-chave não são traduzidas, independentemente da localidade.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2599">The `True` and `False` keywords are not translated, regardless of the locale.</span></span>  
  
 <span data-ttu-id="6bda5-2600">Dados de data são gravados no arquivo usando o formato de data abreviada padrão reconhecido pelo sistema.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2600">Date data is written to the file by using the standard short date format recognized by the system.</span></span> <span data-ttu-id="6bda5-2601">Quando a data ou o componente de tempo está ausente ou zero, somente a parte fornecida é gravada no arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2601">When either the date or the time component is missing or zero, only the part provided is written to the file.</span></span>  
  
 <span data-ttu-id="6bda5-2602">Nada será gravado no arquivo se `Output` dados estão vazios.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2602">Nothing is written to the file if `Output` data is empty.</span></span> <span data-ttu-id="6bda5-2603">No entanto, se `Output` dados de lista estão `DBNull`, `Null` é gravada no arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2603">However, if `Output` list data is `DBNull`, `Null` is written to the file.</span></span>  
  
 <span data-ttu-id="6bda5-2604">Para `Error` dados, a saída é exibida como `Error errorcode`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2604">For `Error` data, the output appears as `Error errorcode`.</span></span> <span data-ttu-id="6bda5-2605">O `Error` palavra-chave não será convertido, independentemente da localidade.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2605">The `Error` keyword is not translated regardless of the locale.</span></span>  
  
 <span data-ttu-id="6bda5-2606">Todos os dados gravados no arquivo usando `Print` internacionalmente reconhece; ou seja, os dados são formatados corretamente usando o separador decimal apropriado.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2606">All data written to the file by using `Print` is internationally aware; that is, the data is correctly formatted using the appropriate decimal separator.</span></span> <span data-ttu-id="6bda5-2607">Se o usuário deseja gerar a saída de dados para uso em várias localidades, `Write` deve ser usado.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2607">If the user wishes to output data for use by multiple locales, `Write` should be used.</span></span>  
  
 <span data-ttu-id="6bda5-2608">Gravando em um arquivo usando o `Print` ou `PrintLine` funções requer `Write` acessar do `FileIOPermissionAccess` enumeração.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2608">Writing to a file by using the `Print` or `PrintLine` functions requires `Write` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="6bda5-2609">Para obter mais informações, consulte <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2609">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess> .</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6bda5-2610">Este exemplo usa o `Print` e `PrintLine` funções para gravar dados em um arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2610">This example uses the `Print` and `PrintLine` functions to write data to a file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#53](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#53)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SPC(System.Int16)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.TAB" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="Rename">
      <MemberSignature Language="C#" Value="public static void Rename (string OldPath, string NewPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Rename(string OldPath, string NewPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Rename(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Rename (OldPath As String, NewPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Rename(System::String ^ OldPath, System::String ^ NewPath);" />
      <MemberSignature Language="F#" Value="static member Rename : string * string -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Rename (OldPath, NewPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="OldPath" Type="System.String" />
        <Parameter Name="NewPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="OldPath">
          <span data-ttu-id="6bda5-2611">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2611">Required.</span>
          </span>
          <span data-ttu-id="6bda5-2612">
            <see langword="String" /> expressão que especifica o local e o nome do arquivo existente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2612">
              <see langword="String" /> expression that specifies the existing file name and location.</span>
          </span>
          <span data-ttu-id="6bda5-2613">
            <c>OldPath</c> pode incluir o diretório e a unidade do arquivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2613">
              <c>OldPath</c> may include the directory, and drive, of the file.</span>
          </span>
        </param>
        <param name="NewPath">
          <span data-ttu-id="6bda5-2614">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2614">Required.</span>
          </span>
          <span data-ttu-id="6bda5-2615">
            <see langword="String" /> expressão que especifica o local e o nome do novo arquivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2615">
              <see langword="String" /> expression that specifies the new file name and location.</span>
          </span>
          <span data-ttu-id="6bda5-2616">
            <c>NewPath</c> pode incluir o diretório e a unidade do local de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2616">
              <c>NewPath</c> may include directory and drive of the destination location.</span>
          </span>
          <span data-ttu-id="6bda5-2617">O nome do arquivo especificado por <c>NewPath</c> não pode já existir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2617">The file name specified by <c>NewPath</c> cannot already exist.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6bda5-2618">Renomeia um arquivo de disco ou um diretório.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2618">Renames a disk file or directory.</span>
          </span>
          <span data-ttu-id="6bda5-2619">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="Rename" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2619">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Rename" />.</span>
          </span>
          <span data-ttu-id="6bda5-2620">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2620">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bda5-2621">O`Rename` função renomeia um arquivo e a move para um diretório diferente, se necessário.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2621">The`Rename` function renames a file and moves it to a different directory, if it is required.</span></span> <span data-ttu-id="6bda5-2622">O `Rename` função pode mover um arquivo em unidades, mas ele só pode renomear um diretório existente quando ambos `NewPath` e `OldPath` estão localizados na mesma unidade.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2622">The `Rename` function can move a file across drives, but it can only rename an existing directory when both `NewPath` and `OldPath` are located on the same drive.</span></span> <span data-ttu-id="6bda5-2623">`Rename` não é possível criar um novo arquivo ou diretório.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2623">`Rename` cannot create a new file or directory.</span></span>  
  
 <span data-ttu-id="6bda5-2624">Usando o `Rename` função em um arquivo aberto produz um erro.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2624">Using the `Rename` function on an open file produces an error.</span></span> <span data-ttu-id="6bda5-2625">Você deve fechar um arquivo aberto antes de renomeá-lo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2625">You must close an open file before renaming it.</span></span> <span data-ttu-id="6bda5-2626">`Rename` argumentos não podem incluir caracteres curinga de caractere único (?) e de vários caracteres (\*).</span><span class="sxs-lookup"><span data-stu-id="6bda5-2626">`Rename` arguments cannot include multiple-character (\*) and single-character (?) wildcards.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6bda5-2627">Ao usar `Rename` para copiar um arquivo de um local desprotegido para um local protegido, o arquivo manterá os direitos menos restritos.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2627">When using `Rename` to copy a file from an unprotected location to a protected location, the file retains the less restricted rights.</span></span> <span data-ttu-id="6bda5-2628">Verifique se você não está apresentando um possível risco à segurança.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2628">Check to make sure that you are not introducing a possible security risk.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6bda5-2629">Este exemplo usa o `Rename` função para renomear um arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2629">This example uses the `Rename` function to rename a file.</span></span> <span data-ttu-id="6bda5-2630">Para fins deste exemplo, suponha que os diretórios que são especificados já existem.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2630">For purposes of this example, assume that the directories that are specified already exist.</span></span>  
  
 [!code-vb[VbVbalrCatRef#30](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#30)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6bda5-2631">Caminho inválido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2631">Path is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="6bda5-2632">O arquivo <paramref name="OldPath" /> não existe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2632">
              <paramref name="OldPath" /> file does not exist.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="6bda5-2633">Não é possível renomear com outro dispositivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2633">Cannot rename to different device.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Kill(System.String)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.FileNotFoundException" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public static void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public static void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Reset();" />
      <MemberSignature Language="F#" Value="static member Reset : unit -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6bda5-2634">Fecha todos os arquivos de disco abertos usando a função <see langword="FileOpen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2634">Closes all disk files opened by using the <see langword="FileOpen" /> function.</span>
          </span>
          <span data-ttu-id="6bda5-2635">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="Reset" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2635">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Reset" />.</span>
          </span>
          <span data-ttu-id="6bda5-2636">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2636">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bda5-2637">O `Reset` função fecha todos os arquivos ativos abertos pela `FileOpen` de função e tem a mesma função que `FileClose()` sem parâmetros.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2637">The `Reset` function closes all active files opened by the `FileOpen` function and has the same function as `FileClose()` without any parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6bda5-2638">Este exemplo usa o `Reset` função para fechar todos os arquivos abertos e gravar o conteúdo de todos os buffers de arquivo em disco.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2638">This example uses the `Reset` function to close all open files and write the contents of all file buffers to disk.</span></span> <span data-ttu-id="6bda5-2639">Observe o uso do `Object` variável `FileNumber` como uma cadeia de caracteres e um número.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2639">Note the use of the `Object` variable `FileNumber` as both a string and a number.</span></span>  
  
 [!code-vb[VbVbalrCatRef#12](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileClose(System.Int32[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="RmDir">
      <MemberSignature Language="C#" Value="public static void RmDir (string Path);" />
      <MemberSignature Language="ILAsm" Value=".method public static void RmDir(string Path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.RmDir(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RmDir (Path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RmDir(System::String ^ Path);" />
      <MemberSignature Language="F#" Value="static member RmDir : string -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.RmDir Path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Path">
          <span data-ttu-id="6bda5-2640">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2640">Required.</span>
          </span>
          <span data-ttu-id="6bda5-2641">
            <see langword="String" /> expressão que identifica o diretório ou a pasta a ser removida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2641">
              <see langword="String" /> expression that identifies the directory or folder to be removed.</span>
          </span>
          <span data-ttu-id="6bda5-2642">
            <c>Path</c> pode incluir a unidade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2642">
              <c>Path</c> can include the drive.</span>
          </span>
          <span data-ttu-id="6bda5-2643">Se nenhuma unidade for especificada, <see langword="RmDir" /> removerá o diretório na unidade atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2643">If no drive is specified, <see langword="RmDir" /> removes the directory on the current drive.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6bda5-2644">Remove um diretório existente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2644">Removes an existing directory.</span>
          </span>
          <span data-ttu-id="6bda5-2645">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="RmDir" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2645">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="RmDir" />.</span>
          </span>
          <span data-ttu-id="6bda5-2646">Para obter mais informações, consulte <see cref="Overload:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2646">For more information, see <see cref="Overload:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bda5-2647">Ocorrerá um erro se você tentar usar `RmDir` em um diretório que contém os arquivos.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2647">An error occurs if you try to use `RmDir` on a directory that contains files.</span></span> <span data-ttu-id="6bda5-2648">Use o `Kill` função para excluir todos os arquivos antes de tentar remover um diretório.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2648">Use the `Kill` function to delete all files before you try to remove a directory.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6bda5-2649">Este exemplo usa o `RmDir` function para remover um diretório existente.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2649">This example uses the `RmDir` function to remove an existing directory.</span></span>  
  
 [!code-vb[VbVbalrCatRef#31](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#31)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6bda5-2650">
            <paramref name="Path" /> não foi especificado ou está vazio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2650">
              <paramref name="Path" /> is not specified or is empty.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="6bda5-2651">O diretório de destino contém arquivos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2651">Target directory contains files.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="6bda5-2652">O diretório não existe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2652">Directory does not exist.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.ChDir(System.String)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.CurDir" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Kill(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.MkDir(System.String)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
        <altmember cref="T:System.IO.FileNotFoundException" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Seek">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6bda5-2653">Retorna um <see langword="Long" /> que especifica a posição de leitura/gravação atual em um arquivo aberto usando a função <see langword="FileOpen" /> ou define a posição para a próxima operação de leitura/gravação em um arquivo aberto usando a função <see langword="FileOpen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2653">Returns a <see langword="Long" /> specifying the current read/write position in a file opened by using the <see langword="FileOpen" /> function, or sets the position for the next read/write operation in a file opened by using the <see langword="FileOpen" /> function.</span>
          </span>
          <span data-ttu-id="6bda5-2654">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="Seek" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2654">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Seek" />.</span>
          </span>
          <span data-ttu-id="6bda5-2655">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2655">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public static long Seek (int FileNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public static int64 Seek(int32 FileNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Seek(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Seek (FileNumber As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Seek(int FileNumber);" />
      <MemberSignature Language="F#" Value="static member Seek : int -&gt; int64" Usage="Microsoft.VisualBasic.FileSystem.Seek FileNumber" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="6bda5-2656">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2656">Required.</span>
          </span>
          <span data-ttu-id="6bda5-2657">Um <see langword="Integer" /> que contém um número de arquivo válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2657">An <see langword="Integer" /> that contains a valid file number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6bda5-2658">Retorna um <see langword="Long" /> que especifica a posição de leitura/gravação atual em um arquivo aberto usando a função <see langword="FileOpen" /> ou define a posição para a próxima operação de leitura/gravação em um arquivo aberto usando a função <see langword="FileOpen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2658">Returns a <see langword="Long" /> specifying the current read/write position in a file opened by using the <see langword="FileOpen" /> function, or sets the position for the next read/write operation in a file opened by using the <see langword="FileOpen" /> function.</span>
          </span>
          <span data-ttu-id="6bda5-2659">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="Seek" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2659">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Seek" />.</span>
          </span>
          <span data-ttu-id="6bda5-2660">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2660">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6bda5-2661">Retorna um <see langword="Long" /> que especifica a posição de leitura/gravação atual em um arquivo aberto usando a função <see langword="FileOpen" /> ou define a posição para a próxima operação de leitura/gravação em um arquivo aberto usando a função <see langword="FileOpen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2661">Returns a <see langword="Long" /> specifying the current read/write position in a file opened by using the <see langword="FileOpen" /> function, or sets the position for the next read/write operation in a file opened by using the <see langword="FileOpen" /> function.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bda5-2662">`Seek` Retorna um valor entre 1 e 2.147.483.647 (equivalente a 2 ^ 31 – 1), inclusive.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2662">`Seek` returns a value between 1 and 2,147,483,647 (equivalent to 2^31 – 1), inclusive.</span></span>  
  
 <span data-ttu-id="6bda5-2663">O exemplo a seguir descreve os valores retornados para cada modo de acesso do arquivo:</span><span class="sxs-lookup"><span data-stu-id="6bda5-2663">The following describes the return values for each file access mode:</span></span>  
  
|<span data-ttu-id="6bda5-2664">Modo</span><span class="sxs-lookup"><span data-stu-id="6bda5-2664">Mode</span></span>|<span data-ttu-id="6bda5-2665">Valor de Retorno</span><span class="sxs-lookup"><span data-stu-id="6bda5-2665">Return Value</span></span>|  
|-|-|  
|`Random`|<span data-ttu-id="6bda5-2666">Número do próximo registro lido ou gravado</span><span class="sxs-lookup"><span data-stu-id="6bda5-2666">Number of the next record read or written</span></span>|  
|<span data-ttu-id="6bda5-2667">`Binary`, `Input`, `Output`, `Append`</span><span class="sxs-lookup"><span data-stu-id="6bda5-2667">`Binary`, `Input`, `Output`, `Append`</span></span>|<span data-ttu-id="6bda5-2668">Posição do byte em que a próxima operação ocorre.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2668">Byte position at which the next operation occurs.</span></span> <span data-ttu-id="6bda5-2669">O primeiro byte em um arquivo está na posição 1, o segundo byte estiver na posição 2 e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2669">The first byte in a file is at position 1, the second byte is at position 2, and so on.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="6bda5-2670">Este exemplo usa o `Seek` função para retornar a posição atual do arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2670">This example uses the `Seek` function to return the current file position.</span></span> <span data-ttu-id="6bda5-2671">O exemplo supõe `TestFile` é um arquivo que contém registros de uma estrutura `Record`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2671">The example assumes `TestFile` is a file that contains records of the structure `Record`.</span></span>  
  
 [!code-vb[VbVbalrCatRef#47](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#47)]  
  
 <span data-ttu-id="6bda5-2672">Para arquivos abertos no `Random` modo, `Seek` retorna o número do próximo registro.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2672">For files opened in `Random` mode, `Seek` returns the number of next record.</span></span>  
  
 [!code-vb[VbVbalrCatRef#48](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#48)]  
  
 <span data-ttu-id="6bda5-2673">Para arquivos abertos em modos diferentes de `Random` modo, `Seek` retorna a posição do byte em que a próxima operação ocorre.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2673">For files opened in modes other than `Random` mode, `Seek` returns the byte position at which the next operation occurs.</span></span> <span data-ttu-id="6bda5-2674">Suponha que `TestFile` seja um arquivo contendo várias linhas de texto.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2674">Assume `TestFile` is a file that contains several lines of text.</span></span>  
  
 [!code-vb[VbVbalrCatRef#49](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#49)]  
  
 <span data-ttu-id="6bda5-2675">Este exemplo usa o `Seek` função para definir a posição para a próxima leitura ou gravação em um arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2675">This example uses the `Seek` function to set the position for the next read or write in a file.</span></span>  
  
 <span data-ttu-id="6bda5-2676">Para arquivos abertos em modos diferentes de `Random` modo, `Seek` define a posição do byte em que a próxima operação ocorre.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2676">For files opened in modes other than `Random` mode, `Seek` sets the byte position at which the next operation occurs.</span></span> <span data-ttu-id="6bda5-2677">Suponha que `TestFile` seja um arquivo contendo várias linhas de texto.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2677">Assume `TestFile` is a file that contains several lines of text.</span></span>  
  
 [!code-vb[VbVbalrCatRef#52](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#52)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="6bda5-2678">O modo de arquivo é inválido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2678">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Loc(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public static void Seek (int FileNumber, long Position);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Seek(int32 FileNumber, int64 Position) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Seek(System.Int32,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Seek (FileNumber As Integer, Position As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Seek(int FileNumber, long Position);" />
      <MemberSignature Language="F#" Value="static member Seek : int * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Seek (FileNumber, Position)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Position" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="6bda5-2679">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2679">Required.</span>
          </span>
          <span data-ttu-id="6bda5-2680">Um <see langword="Integer" /> que contém um número de arquivo válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2680">An <see langword="Integer" /> that contains a valid file number.</span>
          </span>
        </param>
        <param name="Position">
          <span data-ttu-id="6bda5-2681">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2681">Required.</span>
          </span>
          <span data-ttu-id="6bda5-2682">Número no intervalo de 1 a 2.147.483.647, inclusive, que indica onde a próxima operação de leitura/gravação deve ocorrer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2682">Number in the range 1–2,147,483,647, inclusive, that indicates where the next read/write operation should occur.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6bda5-2683">Retorna um <see langword="Long" /> que especifica a posição de leitura/gravação atual em um arquivo aberto usando a função <see langword="FileOpen" /> ou define a posição para a próxima operação de leitura/gravação em um arquivo aberto usando a função <see langword="FileOpen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2683">Returns a <see langword="Long" /> specifying the current read/write position in a file opened by using the <see langword="FileOpen" /> function, or sets the position for the next read/write operation in a file opened by using the <see langword="FileOpen" /> function.</span>
          </span>
          <span data-ttu-id="6bda5-2684">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="Seek" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2684">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Seek" />.</span>
          </span>
          <span data-ttu-id="6bda5-2685">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2685">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bda5-2686">`Seek` Retorna um valor entre 1 e 2.147.483.647 (equivalente a 2 ^ 31 – 1), inclusive.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2686">`Seek` returns a value between 1 and 2,147,483,647 (equivalent to 2^31 – 1), inclusive.</span></span>  
  
 <span data-ttu-id="6bda5-2687">O exemplo a seguir descreve os valores retornados para cada modo de acesso do arquivo:</span><span class="sxs-lookup"><span data-stu-id="6bda5-2687">The following describes the return values for each file access mode:</span></span>  
  
|<span data-ttu-id="6bda5-2688">Modo</span><span class="sxs-lookup"><span data-stu-id="6bda5-2688">Mode</span></span>|<span data-ttu-id="6bda5-2689">Valor de Retorno</span><span class="sxs-lookup"><span data-stu-id="6bda5-2689">Return Value</span></span>|  
|-|-|  
|`Random`|<span data-ttu-id="6bda5-2690">Número do próximo registro lido ou gravado</span><span class="sxs-lookup"><span data-stu-id="6bda5-2690">Number of the next record read or written</span></span>|  
|<span data-ttu-id="6bda5-2691">`Binary`, `Input`, `Output`, `Append`</span><span class="sxs-lookup"><span data-stu-id="6bda5-2691">`Binary`, `Input`, `Output`, `Append`</span></span>|<span data-ttu-id="6bda5-2692">Posição do byte em que a próxima operação ocorre.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2692">Byte position at which the next operation occurs.</span></span> <span data-ttu-id="6bda5-2693">O primeiro byte em um arquivo está na posição 1, o segundo byte estiver na posição 2 e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2693">The first byte in a file is at position 1, the second byte is at position 2, and so on.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="6bda5-2694">Este exemplo usa o `Seek` função para retornar a posição atual do arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2694">This example uses the `Seek` function to return the current file position.</span></span> <span data-ttu-id="6bda5-2695">O exemplo supõe `TestFile` é um arquivo que contém registros de uma estrutura `Record`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2695">The example assumes `TestFile` is a file that contains records of the structure `Record`.</span></span>  
  
 [!code-vb[VbVbalrCatRef#47](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#47)]  
  
 <span data-ttu-id="6bda5-2696">Para arquivos abertos no `Random` modo, `Seek` retorna o número do próximo registro.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2696">For files opened in `Random` mode, `Seek` returns the number of next record.</span></span>  
  
 [!code-vb[VbVbalrCatRef#48](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#48)]  
  
 <span data-ttu-id="6bda5-2697">Para arquivos abertos em modos diferentes de `Random` modo, `Seek` retorna a posição do byte em que a próxima operação ocorre.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2697">For files opened in modes other than `Random` mode, `Seek` returns the byte position at which the next operation occurs.</span></span> <span data-ttu-id="6bda5-2698">Suponha que `TestFile` seja um arquivo contendo várias linhas de texto.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2698">Assume `TestFile` is a file that contains several lines of text.</span></span>  
  
 [!code-vb[VbVbalrCatRef#49](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#49)]  
  
 <span data-ttu-id="6bda5-2699">Este exemplo usa o `Seek` função para definir a posição para a próxima leitura ou gravação em um arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2699">This example uses the `Seek` function to set the position for the next read or write in a file.</span></span>  
  
 <span data-ttu-id="6bda5-2700">Para arquivos abertos em modos diferentes de `Random` modo, `Seek` define a posição do byte em que a próxima operação ocorre.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2700">For files opened in modes other than `Random` mode, `Seek` sets the byte position at which the next operation occurs.</span></span> <span data-ttu-id="6bda5-2701">Suponha que `TestFile` seja um arquivo contendo várias linhas de texto.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2701">Assume `TestFile` is a file that contains several lines of text.</span></span>  
  
 [!code-vb[VbVbalrCatRef#52](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#52)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="6bda5-2702">O modo de arquivo é inválido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2702">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Loc(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="SetAttr">
      <MemberSignature Language="C#" Value="public static void SetAttr (string PathName, Microsoft.VisualBasic.FileAttribute Attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static void SetAttr(string PathName, valuetype Microsoft.VisualBasic.FileAttribute Attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.SetAttr(System.String,Microsoft.VisualBasic.FileAttribute)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAttr (PathName As String, Attributes As FileAttribute)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetAttr(System::String ^ PathName, Microsoft::VisualBasic::FileAttribute Attributes);" />
      <MemberSignature Language="F#" Value="static member SetAttr : string * Microsoft.VisualBasic.FileAttribute -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.SetAttr (PathName, Attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="PathName" Type="System.String" />
        <Parameter Name="Attributes" Type="Microsoft.VisualBasic.FileAttribute" />
      </Parameters>
      <Docs>
        <param name="PathName">
          <span data-ttu-id="6bda5-2703">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2703">Required.</span>
          </span>
          <span data-ttu-id="6bda5-2704">Expressão <see langword="String" /> que especifica um nome de arquivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2704">
              <see langword="String" /> expression that specifies a file name.</span>
          </span>
          <span data-ttu-id="6bda5-2705">
            <c>PathName</c> pode incluir o diretório ou a pasta, bem como a unidade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2705">
              <c>PathName</c> can include directory or folder, and drive.</span>
          </span>
        </param>
        <param name="Attributes">
          <span data-ttu-id="6bda5-2706">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2706">Required.</span>
          </span>
          <span data-ttu-id="6bda5-2707">Expressão constante ou numérica, cuja soma especifica atributos de arquivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2707">Constant or numeric expression, whose sum specifies file attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6bda5-2708">Define as informações de atributo de um arquivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2708">Sets attribute information for a file.</span>
          </span>
          <span data-ttu-id="6bda5-2709">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="SetAttr" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2709">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="SetAttr" />.</span>
          </span>
          <span data-ttu-id="6bda5-2710">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2710">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bda5-2711">Um erro de tempo de execução ocorrerá se você tentar definir os atributos de um arquivo aberto.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2711">A run-time error occurs if you try to set the attributes of an open file.</span></span>  
  
 <span data-ttu-id="6bda5-2712">O `Attributes` valores de enumeração de argumento são da seguinte maneira:</span><span class="sxs-lookup"><span data-stu-id="6bda5-2712">The `Attributes` argument enumeration values are as follows:</span></span>  
  
|<span data-ttu-id="6bda5-2713">Valor</span><span class="sxs-lookup"><span data-stu-id="6bda5-2713">Value</span></span>|<span data-ttu-id="6bda5-2714">Constante</span><span class="sxs-lookup"><span data-stu-id="6bda5-2714">Constant</span></span>|<span data-ttu-id="6bda5-2715">Descrição</span><span class="sxs-lookup"><span data-stu-id="6bda5-2715">Description</span></span>|  
|-|-|-|  
|`Normal`|`vbNormal`|<span data-ttu-id="6bda5-2716">Normal (padrão).</span><span class="sxs-lookup"><span data-stu-id="6bda5-2716">Normal (default).</span></span>|  
|`ReadOnly`|`vbReadOnly`|<span data-ttu-id="6bda5-2717">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2717">Read-only.</span></span>|  
|`Hidden`|`vbHidden`|<span data-ttu-id="6bda5-2718">Oculto.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2718">Hidden.</span></span>|  
|`System`|`vbSystem`|<span data-ttu-id="6bda5-2719">Arquivo do sistema.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2719">System file.</span></span>|  
|`Volume`|`vbVolume`|<span data-ttu-id="6bda5-2720">Rótulo do volume</span><span class="sxs-lookup"><span data-stu-id="6bda5-2720">Volume label</span></span>|  
|`Directory`|`vbDirectory`|<span data-ttu-id="6bda5-2721">Diretório ou pasta.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2721">Directory or folder.</span></span>|  
|`Archive`|`vbArchive`|<span data-ttu-id="6bda5-2722">O arquivo foi alterado desde o último backup.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2722">File has changed since last backup.</span></span>|  
|`Alias`|`vbAlias`|<span data-ttu-id="6bda5-2723">O arquivo tem um nome diferente.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2723">File has a different name.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="6bda5-2724">Essas enumerações são especificadas pela linguagem Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2724">These enumerations are specified by the Visual Basic language.</span></span> <span data-ttu-id="6bda5-2725">Os nomes podem ser usados em qualquer lugar no seu código em vez dos valores reais.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2725">The names can be used anywhere in your code instead of the actual values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6bda5-2726">Este exemplo usa o `SetAttr` função para definir atributos para um arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2726">This example uses the `SetAttr` function to set attributes for a file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#14](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6bda5-2727">O tipo <paramref name="Attribute" /> é inválido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2727">
              <paramref name="Attribute" /> type is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileAttr(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:Microsoft.VisualBasic.FileAttribute" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />
      </Docs>
    </Member>
    <Member MemberName="SPC">
      <MemberSignature Language="C#" Value="public static Microsoft.VisualBasic.SpcInfo SPC (short Count);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype Microsoft.VisualBasic.SpcInfo SPC(int16 Count) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.SPC(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Function SPC (Count As Short) As SpcInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::VisualBasic::SpcInfo SPC(short Count);" />
      <MemberSignature Language="F#" Value="static member SPC : int16 -&gt; Microsoft.VisualBasic.SpcInfo" Usage="Microsoft.VisualBasic.FileSystem.SPC Count" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.SpcInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Count" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="Count">
          <span data-ttu-id="6bda5-2728">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2728">Required.</span>
          </span>
          <span data-ttu-id="6bda5-2729">O número de espaços a serem inseridos antes de exibir ou imprimir a próxima expressão em uma lista.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2729">The number of spaces to insert before displaying or printing the next expression in a list.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6bda5-2730">Usado com a função <see langword="Print" /> ou <see langword="PrintLine" /> para posicionar a saída.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2730">Used with the <see langword="Print" /> or <see langword="PrintLine" /> function to position output.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6bda5-2731">Usado com a função <see langword="Print" /> ou <see langword="PrintLine" /> para posicionar a saída.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2731">Used with the <see langword="Print" /> or <see langword="PrintLine" /> function to position output.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bda5-2732">Se `Count` é menor do que a largura da linha de saída, a próxima posição de impressão imediatamente após o número de espaços impressos.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2732">If `Count` is less than the output line width, the next print position immediately follows the number of spaces printed.</span></span> <span data-ttu-id="6bda5-2733">Se`Count` é maior que a largura da linha de saída, `SPC` calculará a próxima posição de impressa usando a fórmula:</span><span class="sxs-lookup"><span data-stu-id="6bda5-2733">If`Count` is greater than the output line width, `SPC` calculates the next print position using the formula:</span></span>  
  
 <span data-ttu-id="6bda5-2734">`currentprintposition`(+(`Count``Mod``width`))</span><span class="sxs-lookup"><span data-stu-id="6bda5-2734">`currentprintposition`(+(`Count``Mod``width`))</span></span>  
  
 <span data-ttu-id="6bda5-2735">Por exemplo, se a posição de impressão atual for 24, a largura de linha de saída for 80, e você especificar `SPC(90)`, a próxima impressão começará na posição 34 (posição de impressão atual + o resto de 90/80).</span><span class="sxs-lookup"><span data-stu-id="6bda5-2735">For example, if the current print position is 24, the output line width is 80, and you specify `SPC(90)`, the next print will start at position 34 (current print position + the remainder of 90/80).</span></span> <span data-ttu-id="6bda5-2736">Se a diferença entre a posição atual de impressão e a largura da linha de saída for menor que `Count` (ou `Count` `Mod` *largura*), o `SPC` função pula para o início da próxima linha e gera espaços iguais a `Count` – (*largura* – *currentprintposition*).</span><span class="sxs-lookup"><span data-stu-id="6bda5-2736">If the difference between the current print position and the output line width is less than `Count` (or `Count` `Mod` *width*), the `SPC` function skips to the start of the next line and generates spaces equal to `Count` – (*width* – *currentprintposition*).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6bda5-2737">Verifique se que as colunas da tabela são suficientes permitir a amplas letras.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2737">Make sure your tabular columns are wide enough to allow for wide letters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6bda5-2738">Este exemplo usa o `SPC` função para posicionar a saída em um arquivo e em de **saída** janela.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2738">This example uses the `SPC` function to position output in a file and in the **Output** window.</span></span>  
  
 [!code-vb[VbVbalrCatRef#16](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#16)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Space(System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.TAB" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileWidth(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="TAB">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6bda5-2739">Usado com as funções <see langword="Print" /> ou <see langword="PrintLine" /> para posicionar a saída.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2739">Used with the <see langword="Print" /> or <see langword="PrintLine" /> functions to position output.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TAB">
      <MemberSignature Language="C#" Value="public static Microsoft.VisualBasic.TabInfo TAB ();" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype Microsoft.VisualBasic.TabInfo TAB() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.TAB" />
      <MemberSignature Language="VB.NET" Value="Public Function TAB () As TabInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::VisualBasic::TabInfo TAB();" />
      <MemberSignature Language="F#" Value="static member TAB : unit -&gt; Microsoft.VisualBasic.TabInfo" Usage="Microsoft.VisualBasic.FileSystem.TAB " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.TabInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6bda5-2740">Usado com as funções <see langword="Print" /> ou <see langword="PrintLine" /> para posicionar a saída.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2740">Used with the <see langword="Print" /> or <see langword="PrintLine" /> functions to position output.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6bda5-2741">Usado com as funções <see langword="Print" /> ou <see langword="PrintLine" /> para posicionar a saída.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2741">Used with the <see langword="Print" /> or <see langword="PrintLine" /> functions to position output.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bda5-2742">Se a posição de impressão atual na linha atual é maior que `Column`, `TAB` pulará para a coluna de valor igual a `Column` na próxima linha de saída.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2742">If the current print position on the current line is larger than `Column`, `TAB` skips to the column value equal to `Column` on the next output line.</span></span> <span data-ttu-id="6bda5-2743">Se `Column` é menor que 1, `TAB` move a posição de impressão para a coluna 1.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2743">If `Column` is less than 1, `TAB` moves the print position to column 1.</span></span> <span data-ttu-id="6bda5-2744">Se `Column` é maior do que a largura da linha de saída, `TAB` calculará a próxima posição de impressa usando a fórmula:</span><span class="sxs-lookup"><span data-stu-id="6bda5-2744">If `Column` is larger than the output line width, `TAB` calculates the next print position using the formula:</span></span>  
  
 <span data-ttu-id="6bda5-2745">Largura da coluna Mod</span><span class="sxs-lookup"><span data-stu-id="6bda5-2745">Column Mod width</span></span>  
  
 <span data-ttu-id="6bda5-2746">Por exemplo, se *largura* é 80 e você especificar `TAB(90)`, a próxima impressão começará na coluna 10 (o resto de 90/80).</span><span class="sxs-lookup"><span data-stu-id="6bda5-2746">For example, if *width* is 80 and you specify `TAB(90)`, the next print will start at column 10 (the remainder of 90/80).</span></span> <span data-ttu-id="6bda5-2747">Se `Column` é menor que a posição atual de impressão, impressão é iniciado na próxima linha na posição de impressão calculada.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2747">If `Column` is less than the current print position, printing starts on the next line at the calculated print position.</span></span> <span data-ttu-id="6bda5-2748">Se a posição de impressão calculada for maior que a posição atual de impressão, impressão começa no calculada imprimir a posição na mesma linha.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2748">If the calculated print position is larger than the current print position, printing starts at the calculated print position on the same line.</span></span>  
  
 <span data-ttu-id="6bda5-2749">A posição mais à esquerda de impressão em uma linha de saída é sempre 1.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2749">The leftmost print position on an output line is always 1.</span></span> <span data-ttu-id="6bda5-2750">Quando você usa o `Print` ou `PrintLine` funções para imprimir arquivos, a posição de impressão mais à direita é a largura atual do arquivo de saída, você pode definir usando o `FileWidth` função.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2750">When you use the `Print` or `PrintLine` functions to print to files, the rightmost print position is the current width of the output file, which you can set using the `FileWidth` function.</span></span>  
  
 <span data-ttu-id="6bda5-2751">O `TAB` função também pode ser usada com o `WriteLine` função.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2751">The `TAB` function can also be used with the `WriteLine` function.</span></span> <span data-ttu-id="6bda5-2752">Ele não pode ser usado com <xref:System.Diagnostics.Debug.WriteLine%2A?displayProperty=nameWithType> ou <xref:System.Console.WriteLine%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2752">It cannot be used with <xref:System.Diagnostics.Debug.WriteLine%2A?displayProperty=nameWithType> or <xref:System.Console.WriteLine%2A?displayProperty=nameWithType>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6bda5-2753">Verifique se que as colunas da tabela são grande o suficiente para conter letras amplas.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2753">Make sure your tabular columns are wide enough to contain wide letters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6bda5-2754">Este exemplo usa o `TAB` função para posicionar a saída em um arquivo e em de **saída** janela.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2754">This example uses the `TAB` function to position output in a file and in the **Output** window.</span></span>  
  
 [!code-vb[VbVbalrCatRef#37](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#37)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Space(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SPC(System.Int16)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileWidth(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="TAB">
      <MemberSignature Language="C#" Value="public static Microsoft.VisualBasic.TabInfo TAB (short Column);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype Microsoft.VisualBasic.TabInfo TAB(int16 Column) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.TAB(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Function TAB (Column As Short) As TabInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::VisualBasic::TabInfo TAB(short Column);" />
      <MemberSignature Language="F#" Value="static member TAB : int16 -&gt; Microsoft.VisualBasic.TabInfo" Usage="Microsoft.VisualBasic.FileSystem.TAB Column" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.TabInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Column" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="Column">
          <span data-ttu-id="6bda5-2755">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2755">Optional.</span>
          </span>
          <span data-ttu-id="6bda5-2756">O número de coluna movido antes de exibir ou imprimir a próxima expressão em uma lista.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2756">The column number moved to before displaying or printing the next expression in a list.</span>
          </span>
          <span data-ttu-id="6bda5-2757">Se omitido, <see langword="TAB" /> move o ponto de inserção para o início da próxima zona de impressão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2757">If omitted, <see langword="TAB" /> moves the insertion point to the start of the next print zone.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6bda5-2758">Usado com as funções <see langword="Print" /> ou <see langword="PrintLine" /> para posicionar a saída.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2758">Used with the <see langword="Print" /> or <see langword="PrintLine" /> functions to position output.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6bda5-2759">Usado com as funções <see langword="Print" /> ou <see langword="PrintLine" /> para posicionar a saída.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2759">Used with the <see langword="Print" /> or <see langword="PrintLine" /> functions to position output.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bda5-2760">Se a posição de impressão atual na linha atual for maior que `Column`, `TAB` pulará para a coluna de valor igual a `Column` na próxima linha de saída.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2760">If the current print position on the current line is greater than `Column`, `TAB` skips to the column value equal to `Column` on the next output line.</span></span> <span data-ttu-id="6bda5-2761">Se `Column` é menor que 1, `TAB` move a posição de impressão para a coluna 1.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2761">If `Column` is less than 1, `TAB` moves the print position to column 1.</span></span> <span data-ttu-id="6bda5-2762">Se `Column` é maior que a largura da linha de saída, `TAB` calculará a próxima posição de impressa usando a fórmula:</span><span class="sxs-lookup"><span data-stu-id="6bda5-2762">If `Column` is greater than the output line width, `TAB` calculates the next print position using the formula:</span></span>  
  
 <span data-ttu-id="6bda5-2763">Largura da coluna Mod</span><span class="sxs-lookup"><span data-stu-id="6bda5-2763">Column Mod width</span></span>  
  
 <span data-ttu-id="6bda5-2764">Por exemplo, se *largura* é 80 e você especificar `TAB(90)`, a próxima impressão começará na coluna 10 (o resto de 90/80).</span><span class="sxs-lookup"><span data-stu-id="6bda5-2764">For example, if *width* is 80 and you specify `TAB(90)`, the next print will start at column 10 (the remainder of 90/80).</span></span> <span data-ttu-id="6bda5-2765">Se `Column` é menor que a posição atual de impressão, impressão é iniciado na próxima linha na posição de impressão calculada.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2765">If `Column` is less than the current print position, printing starts on the next line at the calculated print position.</span></span> <span data-ttu-id="6bda5-2766">Se a posição de impressão calculada for maior que a posição atual de impressão, impressão começa no calculada imprimir a posição na mesma linha.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2766">If the calculated print position is greater than the current print position, printing starts at the calculated print position on the same line.</span></span>  
  
 <span data-ttu-id="6bda5-2767">A posição mais à esquerda de impressão em uma linha de saída é sempre 1.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2767">The leftmost print position on an output line is always 1.</span></span> <span data-ttu-id="6bda5-2768">Quando você usa o `Print` ou `PrintLine` funções para imprimir arquivos, a posição de impressão mais à direita é a largura atual do arquivo de saída, você pode definir usando o `FileWidth` função.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2768">When you use the `Print` or `PrintLine` functions to print to files, the rightmost print position is the current width of the output file, which you can set using the `FileWidth` function.</span></span>  
  
 <span data-ttu-id="6bda5-2769">O `TAB` função também pode ser usada com o `WriteLine` função.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2769">The `TAB` function can also be used with the `WriteLine` function.</span></span> <span data-ttu-id="6bda5-2770">Ele não pode ser usado com <xref:System.Diagnostics.Debug.WriteLine%2A?displayProperty=nameWithType> ou <xref:System.Console.WriteLine%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2770">It cannot be used with <xref:System.Diagnostics.Debug.WriteLine%2A?displayProperty=nameWithType> or <xref:System.Console.WriteLine%2A?displayProperty=nameWithType>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6bda5-2771">Verifique se que as colunas da tabela são grande o suficiente para conter letras amplas.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2771">Make sure your tabular columns are wide enough to contain wide letters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6bda5-2772">Este exemplo usa o `TAB` função para posicionar a saída em um arquivo e em de **saída** janela.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2772">This example uses the `TAB` function to position output in a file and in the **Output** window.</span></span>  
  
 [!code-vb[VbVbalrCatRef#37](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#37)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Space(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SPC(System.Int16)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileWidth(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Unlock">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6bda5-2773">Controla o acesso por outros processos a todo ou à parte de um arquivo aberto usando a função <see langword="Open" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2773">Controls access by other processes to all or part of a file opened by using the <see langword="Open" /> function.</span>
          </span>
          <span data-ttu-id="6bda5-2774">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S de arquivo que <see langword="Lock" /> e <see langword="Unlock" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2774">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Lock" /> and <see langword="Unlock" />.</span>
          </span>
          <span data-ttu-id="6bda5-2775">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2775">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Unlock">
      <MemberSignature Language="C#" Value="public static void Unlock (int FileNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Unlock(int32 FileNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Unlock(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unlock (FileNumber As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Unlock(int FileNumber);" />
      <MemberSignature Language="F#" Value="static member Unlock : int -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Unlock FileNumber" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="6bda5-2776">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2776">Required.</span>
          </span>
          <span data-ttu-id="6bda5-2777">Qualquer número de arquivo válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2777">Any valid file number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6bda5-2778">Controla o acesso por outros processos a todo ou à parte de um arquivo aberto usando a função <see langword="Open" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2778">Controls access by other processes to all or part of a file opened by using the <see langword="Open" /> function.</span>
          </span>
          <span data-ttu-id="6bda5-2779">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S de arquivo que <see langword="Lock" /> e <see langword="Unlock" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2779">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Lock" /> and <see langword="Unlock" />.</span>
          </span>
          <span data-ttu-id="6bda5-2780">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2780">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bda5-2781">O `Lock` e `Unlock` funções são usadas em ambientes onde vários processos podem precisam acessar o mesmo arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2781">The `Lock` and `Unlock` functions are used in environments where several processes might need access to the same file.</span></span>  
  
 <span data-ttu-id="6bda5-2782">`Lock` e `Unlock` funções sempre são usadas em pares.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2782">`Lock` and `Unlock` functions are always used in pairs.</span></span> <span data-ttu-id="6bda5-2783">Os argumentos para `Lock` e `Unlock` devem ser idênticos.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2783">The arguments to `Lock` and `Unlock` must be identical.</span></span>  
  
 <span data-ttu-id="6bda5-2784">Se `Record` ou `FromRecord` e `ToRecord` não for fornecido, o bloqueio será para todo o arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2784">If `Record`, or `FromRecord` and `ToRecord` are not supplied, the lock will be for the whole file.</span></span> <span data-ttu-id="6bda5-2785">Se `Record` sozinho for especificado o único registro será bloqueada/desbloqueado.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2785">If `Record` alone is specified the single record will be locked/unlocked.</span></span>  
  
 <span data-ttu-id="6bda5-2786">Se o arquivo foi aberto para entrada ou saída, sequencial `Lock` e `Unlock` afetam todo o arquivo, independentemente do intervalo especificado por `FromRecord` e`ToRecord`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2786">If the file has been opened for sequential input or output, `Lock` and `Unlock` affect the whole file, regardless of the range specified by `FromRecord` and`ToRecord`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6bda5-2787">Este exemplo ilustra o uso do `Lock` e `Unlock` funções.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2787">This example illustrates the use of the `Lock` and `Unlock` functions.</span></span> <span data-ttu-id="6bda5-2788">Este exemplo pressupõe que `People.txt` seja um arquivo contendo registros da estrutura `Person`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2788">This example assumes that `People.txt` is a file that contains records of the structure `Person`.</span></span>  
  
 [!code-vb[VbVbalrCatRef#13](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="6bda5-2789">O modo de arquivo é inválido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2789">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="Unlock">
      <MemberSignature Language="C#" Value="public static void Unlock (int FileNumber, long Record);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Unlock(int32 FileNumber, int64 Record) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Unlock(System.Int32,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unlock (FileNumber As Integer, Record As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Unlock(int FileNumber, long Record);" />
      <MemberSignature Language="F#" Value="static member Unlock : int * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Unlock (FileNumber, Record)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Record" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="6bda5-2790">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2790">Required.</span>
          </span>
          <span data-ttu-id="6bda5-2791">Qualquer número de arquivo válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2791">Any valid file number.</span>
          </span>
        </param>
        <param name="Record">
          <span data-ttu-id="6bda5-2792">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2792">Optional.</span>
          </span>
          <span data-ttu-id="6bda5-2793">Número do único registro ou byte a ser bloqueado ou desbloqueado</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2793">Number of the only record or byte to lock or unlock</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6bda5-2794">Controla o acesso por outros processos a todo ou à parte de um arquivo aberto usando a função <see langword="Open" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2794">Controls access by other processes to all or part of a file opened by using the <see langword="Open" /> function.</span>
          </span>
          <span data-ttu-id="6bda5-2795">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S de arquivo que <see langword="Lock" /> e <see langword="Unlock" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2795">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Lock" /> and <see langword="Unlock" />.</span>
          </span>
          <span data-ttu-id="6bda5-2796">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2796">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bda5-2797">O `Lock` e `Unlock` funções são usadas em ambientes onde vários processos podem precisam acessar o mesmo arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2797">The `Lock` and `Unlock` functions are used in environments where several processes might need access to the same file.</span></span>  
  
 <span data-ttu-id="6bda5-2798">`Lock` e `Unlock` funções sempre são usadas em pares.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2798">`Lock` and `Unlock` functions are always used in pairs.</span></span> <span data-ttu-id="6bda5-2799">Os argumentos para `Lock` e `Unlock` devem ser idênticos.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2799">The arguments to `Lock` and `Unlock` must be identical.</span></span>  
  
 <span data-ttu-id="6bda5-2800">Se `Record` ou `FromRecord` e `ToRecord` não for fornecido, o bloqueio será para todo o arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2800">If `Record`, or `FromRecord` and `ToRecord` are not supplied, the lock will be for the whole file.</span></span> <span data-ttu-id="6bda5-2801">Se `Record` sozinho for especificado o único registro será bloqueada/desbloqueado.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2801">If `Record` alone is specified the single record will be locked/unlocked.</span></span>  
  
 <span data-ttu-id="6bda5-2802">Se o arquivo foi aberto para entrada ou saída, sequencial `Lock` e `Unlock` afetam todo o arquivo, independentemente do intervalo especificado por `FromRecord` e`ToRecord`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2802">If the file has been opened for sequential input or output, `Lock` and `Unlock` affect the whole file, regardless of the range specified by `FromRecord` and`ToRecord`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6bda5-2803">Este exemplo ilustra o uso do `Lock` e `Unlock` funções.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2803">This example illustrates the use of the `Lock` and `Unlock` functions.</span></span> <span data-ttu-id="6bda5-2804">Este exemplo pressupõe que `People.txt` seja um arquivo contendo registros da estrutura `Person`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2804">This example assumes that `People.txt` is a file that contains records of the structure `Person`.</span></span>  
  
 [!code-vb[VbVbalrCatRef#13](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="6bda5-2805">O modo de arquivo é inválido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2805">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="Unlock">
      <MemberSignature Language="C#" Value="public static void Unlock (int FileNumber, long FromRecord, long ToRecord);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Unlock(int32 FileNumber, int64 FromRecord, int64 ToRecord) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Unlock(System.Int32,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unlock (FileNumber As Integer, FromRecord As Long, ToRecord As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Unlock(int FileNumber, long FromRecord, long ToRecord);" />
      <MemberSignature Language="F#" Value="static member Unlock : int * int64 * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Unlock (FileNumber, FromRecord, ToRecord)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="FromRecord" Type="System.Int64" />
        <Parameter Name="ToRecord" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="6bda5-2806">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2806">Required.</span>
          </span>
          <span data-ttu-id="6bda5-2807">Qualquer número de arquivo válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2807">Any valid file number.</span>
          </span>
        </param>
        <param name="FromRecord">
          <span data-ttu-id="6bda5-2808">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2808">Optional.</span>
          </span>
          <span data-ttu-id="6bda5-2809">Número do primeiro registro ou byte a ser bloqueado ou desbloqueado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2809">Number of the first record or byte to lock or unlock.</span>
          </span>
        </param>
        <param name="ToRecord">
          <span data-ttu-id="6bda5-2810">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2810">Optional.</span>
          </span>
          <span data-ttu-id="6bda5-2811">Número do último registro ou byte a ser bloqueado ou desbloqueado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2811">Number of the last record or byte to lock or unlock.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6bda5-2812">Controla o acesso por outros processos a todo ou à parte de um arquivo aberto usando a função <see langword="Open" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2812">Controls access by other processes to all or part of a file opened by using the <see langword="Open" /> function.</span>
          </span>
          <span data-ttu-id="6bda5-2813">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S de arquivo que <see langword="Lock" /> e <see langword="Unlock" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2813">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Lock" /> and <see langword="Unlock" />.</span>
          </span>
          <span data-ttu-id="6bda5-2814">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2814">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bda5-2815">O `Lock` e `Unlock` funções são usadas em ambientes onde vários processos podem precisam acessar o mesmo arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2815">The `Lock` and `Unlock` functions are used in environments where several processes might need access to the same file.</span></span>  
  
 <span data-ttu-id="6bda5-2816">`Lock` e `Unlock` funções sempre são usadas em pares.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2816">`Lock` and `Unlock` functions are always used in pairs.</span></span> <span data-ttu-id="6bda5-2817">Os argumentos para `Lock` e `Unlock` devem ser idênticos.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2817">The arguments to `Lock` and `Unlock` must be identical.</span></span>  
  
 <span data-ttu-id="6bda5-2818">Se `Record` ou `FromRecord` e `ToRecord` não for fornecido, o bloqueio será para todo o arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2818">If `Record`, or `FromRecord` and `ToRecord` are not supplied, the lock will be for the whole file.</span></span> <span data-ttu-id="6bda5-2819">Se `Record` sozinho for especificado o único registro será bloqueada/desbloqueado.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2819">If `Record` alone is specified the single record will be locked/unlocked.</span></span>  
  
 <span data-ttu-id="6bda5-2820">Se o arquivo foi aberto para entrada ou saída, sequencial `Lock` e `Unlock` afetam todo o arquivo, independentemente do intervalo especificado por `FromRecord` e`ToRecord`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2820">If the file has been opened for sequential input or output, `Lock` and `Unlock` affect the whole file, regardless of the range specified by `FromRecord` and`ToRecord`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6bda5-2821">Este exemplo ilustra o uso do `Lock` e `Unlock` funções.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2821">This example illustrates the use of the `Lock` and `Unlock` functions.</span></span> <span data-ttu-id="6bda5-2822">Este exemplo pressupõe que `People.txt` seja um arquivo contendo registros da estrutura `Person`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2822">This example assumes that `People.txt` is a file that contains records of the structure `Person`.</span></span>  
  
 [!code-vb[VbVbalrCatRef#13](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="6bda5-2823">O modo de arquivo é inválido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2823">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (int FileNumber, params object[] Output);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Write(int32 FileNumber, object[] Output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (FileNumber As Integer, ParamArray Output As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(int FileNumber, ... cli::array &lt;System::Object ^&gt; ^ Output);" />
      <MemberSignature Language="F#" Value="static member Write : int * obj[] -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Write (FileNumber, Output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Output" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="6bda5-2824">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2824">Required.</span>
          </span>
          <span data-ttu-id="6bda5-2825">Uma expressão <see langword="Integer" /> que contém qualquer número de arquivo válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2825">An <see langword="Integer" /> expression that contains any valid file number.</span>
          </span>
        </param>
        <param name="Output">
          <span data-ttu-id="6bda5-2826">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2826">Optional.</span>
          </span>
          <span data-ttu-id="6bda5-2827">Uma ou mais expressões delimitadas por vírgula para gravar em um arquivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2827">One or more comma-delimited expressions to write to a file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6bda5-2828">Grava dados em um arquivo sequencial.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2828">Writes data to a sequential file.</span>
          </span>
          <span data-ttu-id="6bda5-2829">Dados gravados com <see langword="Write" /> costumam ser lidos a partir de um arquivo usando <see langword="Input" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2829">Data written with <see langword="Write" /> is usually read from a file by using <see langword="Input" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bda5-2830">O `Write` e `WriteLine` funções são fornecidas para compatibilidade com versões anteriores e pode afetar o desempenho.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2830">The `Write` and `WriteLine` functions are provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="6bda5-2831">Para aplicativos não herdadas, o `My.Computer.FileSystem` objeto fornece um melhor desempenho.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2831">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="6bda5-2832">Para obter mais informações, consulte [acesso a arquivos com o Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="6bda5-2832">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="6bda5-2833">Se você omitir `Output`, uma linha em branco é impresso para o arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2833">If you omit `Output`, a blank line is printed to the file.</span></span> <span data-ttu-id="6bda5-2834">Várias expressões podem ser separadas por vírgula.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2834">Multiple expressions can be separated with a comma.</span></span>  
  
 <span data-ttu-id="6bda5-2835">Ao contrário do `Print` função, o `Write` função insere vírgulas entre os itens e cadeias de caracteres entre aspas conforme elas são gravadas no arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2835">Unlike the `Print` function, the `Write` function inserts commas between items and quotation marks around strings as they are written to the file.</span></span> <span data-ttu-id="6bda5-2836">Você não precisa colocar delimitadores explícitas na lista.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2836">You do not have to put explicit delimiters in the list.</span></span> <span data-ttu-id="6bda5-2837">Quando `Write` é usado para gravar dados em um arquivo, numérico somente `Boolean`, data, null, e `Error` há suporte para formatos de dados.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2837">When `Write` is used to write data to a file, only numeric, `Boolean`, date, null, and `Error` data formats are supported.</span></span> <span data-ttu-id="6bda5-2838">As seguintes suposições universais são seguidas para que os dados sempre podem ser lido e interpretado corretamente usando `Input`, independentemente da localidade:</span><span class="sxs-lookup"><span data-stu-id="6bda5-2838">The following universal assumptions are followed so the data can always be read and correctly interpreted using `Input`, regardless of locale:</span></span>  
  
-   <span data-ttu-id="6bda5-2839">Dados numéricos são sempre gravados usando o ponto como separador decimal.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2839">Numeric data is always written using the period as the decimal separator.</span></span>  
  
-   <span data-ttu-id="6bda5-2840">Para `Boolean` dados, seja `#TRUE#` ou `#FALSE#` é impresso.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2840">For `Boolean` data, either `#TRUE#` or `#FALSE#` is printed.</span></span> <span data-ttu-id="6bda5-2841">O `True` e `False` palavras-chave não são traduzidas, independente da localidade.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2841">The `True` and `False` keywords are not translated, regardless of locale.</span></span>  
  
-   <span data-ttu-id="6bda5-2842">Dados de data são gravados no arquivo usando o formato de data universal.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2842">Date data is written to the file using the universal date format.</span></span> <span data-ttu-id="6bda5-2843">Quando a data ou o componente de tempo está ausente ou zero, somente a parte fornecida é gravada no arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2843">When either the date or the time component is missing or zero, only the part provided is written to the file.</span></span>  
  
-   <span data-ttu-id="6bda5-2844">Nada será gravado no arquivo se `Output` dados estão vazios.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2844">Nothing is written to the file if `Output` data is empty.</span></span> <span data-ttu-id="6bda5-2845">No entanto, para dados nulos, `#NULL#` é gravado.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2845">However, for null data, `#NULL#` is written.</span></span>  
  
-   <span data-ttu-id="6bda5-2846">Para `Error` dados, a saída é exibida como `#ERROR errorcode#`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2846">For `Error` data, the output appears as `#ERROR errorcode#`.</span></span> <span data-ttu-id="6bda5-2847">O `Error` palavra-chave não será convertido, independente da localidade.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2847">The `Error` keyword is not translated, regardless of locale.</span></span>  
  
 <span data-ttu-id="6bda5-2848">`WriteLine` Insere um caractere de nova linha (ou seja, um retorno de carro/linha de alimentação, ou `Chr(13) + Chr(10)`), depois de escrever o caractere final `Output` para o arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2848">`WriteLine` inserts a newline character (that is, a carriage return/line feed, or `Chr(13) + Chr(10)`), after it has written the final character in `Output` to the file.</span></span>  
  
 <span data-ttu-id="6bda5-2849">Você pode inserir aspas em uma cadeia de caracteres usando aspas duplas, ou "".</span><span class="sxs-lookup"><span data-stu-id="6bda5-2849">You can embed quotation marks in a string by using double quotation marks, or "".</span></span> <span data-ttu-id="6bda5-2850">Por exemplo,</span><span class="sxs-lookup"><span data-stu-id="6bda5-2850">For example,</span></span>  
  
 [!code-vb[VbVbalrCatRef#63](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#63)]  
  
 <span data-ttu-id="6bda5-2851">Retorna uma cadeia de caracteres com o valor de `Double quotation marks aren't "difficult" to handle`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2851">returns a string with the value of `Double quotation marks aren't "difficult" to handle`.</span></span>  
  
 <span data-ttu-id="6bda5-2852">Gravando em um arquivo usando o `Write` ou `WriteLine` funções requer `Append` acessar do `FileIOPermissionAccess` enumeração.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2852">Writing to a file by using the `Write` or `WriteLine` functions requires `Append` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="6bda5-2853">Para obter mais informações, consulte <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2853">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess> .</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6bda5-2854">Este exemplo usa o `Write` função para gravar dados brutos em um arquivo sequencial.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2854">This example uses the `Write` function to write raw data to a sequential file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#64](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#64)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="6bda5-2855">O modo de arquivo é inválido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2855">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Input" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (int FileNumber, params object[] Output);" />
      <MemberSignature Language="ILAsm" Value=".method public static void WriteLine(int32 FileNumber, object[] Output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteLine (FileNumber As Integer, ParamArray Output As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(int FileNumber, ... cli::array &lt;System::Object ^&gt; ^ Output);" />
      <MemberSignature Language="F#" Value="static member WriteLine : int * obj[] -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.WriteLine (FileNumber, Output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Output" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="6bda5-2856">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2856">Required.</span>
          </span>
          <span data-ttu-id="6bda5-2857">Uma expressão <see langword="Integer" /> que contém qualquer número de arquivo válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2857">An <see langword="Integer" /> expression that contains any valid file number.</span>
          </span>
        </param>
        <param name="Output">
          <span data-ttu-id="6bda5-2858">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2858">Optional.</span>
          </span>
          <span data-ttu-id="6bda5-2859">Uma ou mais expressões delimitadas por vírgula para gravar em um arquivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2859">One or more comma-delimited expressions to write to a file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6bda5-2860">Grava dados em um arquivo sequencial.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2860">Writes data to a sequential file.</span>
          </span>
          <span data-ttu-id="6bda5-2861">Dados gravados com <see langword="Write" /> costumam ser lidos a partir de um arquivo usando <see langword="Input" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bda5-2861">Data written with <see langword="Write" /> is usually read from a file by using <see langword="Input" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bda5-2862">O `Write` e `WriteLine` funções são fornecidas para compatibilidade com versões anteriores e pode afetar o desempenho.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2862">The `Write` and `WriteLine` functions are provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="6bda5-2863">Para aplicativos não herdadas, o `My.Computer.FileSystem` objeto fornece um melhor desempenho.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2863">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="6bda5-2864">Para obter mais informações, consulte [acesso a arquivos com o Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="6bda5-2864">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="6bda5-2865">Se você omitir `Output`, uma linha em branco é impresso para o arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2865">If you omit `Output`, a blank line is printed to the file.</span></span> <span data-ttu-id="6bda5-2866">Várias expressões podem ser separadas por vírgula.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2866">Multiple expressions can be separated with a comma.</span></span>  
  
 <span data-ttu-id="6bda5-2867">Ao contrário do `Print` função, o `Write` função insere vírgulas entre os itens e cadeias de caracteres entre aspas conforme elas são gravadas no arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2867">Unlike the `Print` function, the `Write` function inserts commas between items and quotation marks around strings as they are written to the file.</span></span> <span data-ttu-id="6bda5-2868">Você não precisa colocar delimitadores explícitas na lista.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2868">You do not have to put explicit delimiters in the list.</span></span> <span data-ttu-id="6bda5-2869">Quando `Write` é usado para gravar dados em um arquivo, numérico somente `Boolean`, data, null, e `Error` há suporte para formatos de dados.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2869">When `Write` is used to write data to a file, only numeric, `Boolean`, date, null, and `Error` data formats are supported.</span></span> <span data-ttu-id="6bda5-2870">As seguintes suposições universais são seguidas para que os dados sempre podem ser lido e interpretado corretamente usando `Input`, independentemente da localidade:</span><span class="sxs-lookup"><span data-stu-id="6bda5-2870">The following universal assumptions are followed so the data can always be read and correctly interpreted using `Input`, regardless of locale:</span></span>  
  
-   <span data-ttu-id="6bda5-2871">Dados numéricos são sempre gravados usando o ponto como separador decimal.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2871">Numeric data is always written using the period as the decimal separator.</span></span>  
  
-   <span data-ttu-id="6bda5-2872">Para `Boolean` dados, seja `#TRUE#` ou `#FALSE#` é impresso.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2872">For `Boolean` data, either `#TRUE#` or `#FALSE#` is printed.</span></span> <span data-ttu-id="6bda5-2873">O `True` e `False` palavras-chave não são traduzidas, independente da localidade.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2873">The `True` and `False` keywords are not translated, regardless of locale.</span></span>  
  
-   <span data-ttu-id="6bda5-2874">Dados de data são gravados no arquivo usando o formato de data universal.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2874">Date data is written to the file using the universal date format.</span></span> <span data-ttu-id="6bda5-2875">Quando a data ou o componente de tempo está ausente ou zero, somente a parte fornecida é gravada no arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2875">When either the date or the time component is missing or zero, only the part provided is written to the file.</span></span>  
  
-   <span data-ttu-id="6bda5-2876">Nada será gravado no arquivo se `Output` dados estão vazios.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2876">Nothing is written to the file if `Output` data is empty.</span></span> <span data-ttu-id="6bda5-2877">No entanto, para dados nulos, `#NULL#` é gravado.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2877">However, for null data, `#NULL#` is written.</span></span>  
  
-   <span data-ttu-id="6bda5-2878">Para `Error` dados, a saída é exibida como `#ERROR errorcode#`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2878">For `Error` data, the output appears as `#ERROR errorcode#`.</span></span> <span data-ttu-id="6bda5-2879">O `Error` palavra-chave não será convertido, independente da localidade.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2879">The `Error` keyword is not translated, regardless of locale.</span></span>  
  
 <span data-ttu-id="6bda5-2880">`WriteLine` Insere um caractere de nova linha (ou seja, um retorno de carro/linha de alimentação, ou `Chr(13) + Chr(10)`), depois de escrever o caractere final `Output` para o arquivo.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2880">`WriteLine` inserts a newline character (that is, a carriage return/line feed, or `Chr(13) + Chr(10)`), after it has written the final character in `Output` to the file.</span></span>  
  
 <span data-ttu-id="6bda5-2881">Você pode inserir aspas em uma cadeia de caracteres usando aspas duplas, ou "".</span><span class="sxs-lookup"><span data-stu-id="6bda5-2881">You can embed quotation marks in a string by using double quotation marks, or "".</span></span> <span data-ttu-id="6bda5-2882">Por exemplo,</span><span class="sxs-lookup"><span data-stu-id="6bda5-2882">For example,</span></span>  
  
 [!code-vb[VbVbalrCatRef#63](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#63)]  
  
 <span data-ttu-id="6bda5-2883">Retorna uma cadeia de caracteres com o valor de `Double quotation marks aren't "difficult" to handle`.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2883">returns a string with the value of `Double quotation marks aren't "difficult" to handle`.</span></span>  
  
 <span data-ttu-id="6bda5-2884">Gravando em um arquivo usando o `Write` ou `WriteLine` funções requer `Append` acessar do `FileIOPermissionAccess` enumeração.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2884">Writing to a file by using the `Write` or `WriteLine` functions requires `Append` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="6bda5-2885">Para obter mais informações, consulte <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2885">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess> .</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6bda5-2886">Este exemplo usa o `Write` função para gravar dados brutos em um arquivo sequencial.</span><span class="sxs-lookup"><span data-stu-id="6bda5-2886">This example uses the `Write` function to write raw data to a sequential file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#64](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#64)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Input" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
  </Members>
</Type>