<Type Name="FileSystem" FullName="Microsoft.VisualBasic.FileSystem">
  <Metadata><Meta Name="ms.openlocfilehash" Value="86f064f440ae5767e7b891c416e8e3b3adac224b" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57937402" /></Metadata><TypeSignature Language="C#" Value="public sealed class FileSystem" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit FileSystem extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.FileSystem" />
  <TypeSignature Language="VB.NET" Value="Public Module FileSystem" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileSystem sealed" />
  <TypeSignature Language="F#" Value="type FileSystem = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Microsoft.VisualBasic.CompilerServices.StandardModule</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="29143-101">O módulo <see langword="FileSystem" /> contém os procedimentos usados para executar operações de arquivo, diretório ou pasta e sistema.</span><span class="sxs-lookup"><span data-stu-id="29143-101">The <see langword="FileSystem" /> module contains the procedures that are used to perform file, directory or folder, and system operations.</span></span> <span data-ttu-id="29143-102">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S de arquivo do que usando o módulo <see langword="FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="29143-102">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than using the <see langword="FileSystem" /> module.</span></span> <span data-ttu-id="29143-103">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="29143-103">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29143-104">Este módulo oferece suporte a palavras-chave de linguagem Visual Basic e membros da biblioteca em tempo de execução que acessam arquivos e pastas.</span><span class="sxs-lookup"><span data-stu-id="29143-104">This module supports the Visual Basic language keywords and run-time library members that access files and folders.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29143-105">Este exemplo usa o `GetAttr` função para determinar os atributos de um arquivo e diretório ou pasta.</span><span class="sxs-lookup"><span data-stu-id="29143-105">This example uses the `GetAttr` function to determine the attributes of a file and directory or folder.</span></span>  
  
 [!code-vb[VbVbalrCatRef#25](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#25)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/visual-basic/language-reference/keywords/directories-and-files-summary.md"><span data-ttu-id="29143-106">Resumo de diretórios e arquivos</span><span class="sxs-lookup"><span data-stu-id="29143-106">Directories and Files Summary</span></span></related>
    <related type="Article" href="~/docs/visual-basic/language-reference/keywords/input-and-output-summary.md"><span data-ttu-id="29143-107">Resumo de entrada e saída</span><span class="sxs-lookup"><span data-stu-id="29143-107">Input and Output Summary</span></span></related>
    <related type="Article" href="~/docs/visual-basic/language-reference/keywords/index.md"><span data-ttu-id="29143-108">Palavras-chave (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="29143-108">Keywords (Visual Basic)</span></span></related>
    <related type="Article" href="~/docs/visual-basic/language-reference/runtime-library-members.md"><span data-ttu-id="29143-109">Membros de biblioteca de tempo de execução do Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-109">Visual Basic Run-Time Library Members</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="ChDir">
      <MemberSignature Language="C#" Value="public static void ChDir (string Path);" />
      <MemberSignature Language="ILAsm" Value=".method public static void ChDir(string Path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.ChDir(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ChDir (Path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ChDir(System::String ^ Path);" />
      <MemberSignature Language="F#" Value="static member ChDir : string -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.ChDir Path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Path"><span data-ttu-id="29143-110">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-110">Required.</span></span> <span data-ttu-id="29143-111">Uma expressão de cadeia de caracteres que identifica qual diretório ou pasta se torna o novo diretório ou pasta padrão.</span><span class="sxs-lookup"><span data-stu-id="29143-111">A string expression that identifies which directory or folder becomes the new default directory or folder.</span></span> <span data-ttu-id="29143-112"><paramref name="Path" /> pode incluir a unidade.</span><span class="sxs-lookup"><span data-stu-id="29143-112"><paramref name="Path" /> may include the drive.</span></span> <span data-ttu-id="29143-113">Se nenhuma unidade for especificada, o <see langword="ChDir" /> alterará o diretório ou pasta padrão na unidade atual.</span><span class="sxs-lookup"><span data-stu-id="29143-113">If no drive is specified, <see langword="ChDir" /> changes the default directory or folder on the current drive.</span></span></param>
        <summary><span data-ttu-id="29143-114">Altera o diretório ou pasta atual.</span><span class="sxs-lookup"><span data-stu-id="29143-114">Changes the current directory or folder.</span></span> <span data-ttu-id="29143-115">O recurso <see langword="My" /> oferece maior produtividade e desempenho em operações de E/S de arquivo do que a função <see langword="ChDir" />.</span><span class="sxs-lookup"><span data-stu-id="29143-115">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than the <see langword="ChDir" /> function.</span></span> <span data-ttu-id="29143-116">Para obter mais informações, consulte <see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" />.</span><span class="sxs-lookup"><span data-stu-id="29143-116">For more information, see <see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" /> .</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29143-117">O `ChDir` função altera o diretório padrão, mas não a unidade padrão.</span><span class="sxs-lookup"><span data-stu-id="29143-117">The `ChDir` function changes the default directory, but not the default drive.</span></span> <span data-ttu-id="29143-118">Por exemplo, se a unidade padrão é C, a instrução a seguir altera o diretório padrão na unidade D, mas C permanece a unidade padrão:</span><span class="sxs-lookup"><span data-stu-id="29143-118">For example, if the default drive is C, the following statement changes the default directory on drive D, but C remains the default drive:</span></span>  
  
 [!code-vb[VbVbalrCatRef#39](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#39)]  
  
 <span data-ttu-id="29143-119">Você pode tornar relativo alterações de diretório é, digitando dois pontos, da seguinte maneira:</span><span class="sxs-lookup"><span data-stu-id="29143-119">You can make relative directory changes is by typing two periods, as follows:</span></span>  
  
 [!code-vb[VbVbalrCatRef#40](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#40)]  
  
> [!IMPORTANT]
>  <span data-ttu-id="29143-120">O `ChDir` função requer permissão de código não gerenciado, que pode afetar sua execução em situações de confiança parcial.</span><span class="sxs-lookup"><span data-stu-id="29143-120">The `ChDir` function requires unmanaged code permission, which may affect its execution in partial-trust situations.</span></span> <span data-ttu-id="29143-121">Para obter mais informações, consulte <xref:System.Security.Permissions.SecurityPermission> e.</span><span class="sxs-lookup"><span data-stu-id="29143-121">For more information, see <xref:System.Security.Permissions.SecurityPermission> and .</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29143-122">Este exemplo usa o `ChDir` função para alterar o diretório atual ou a pasta.</span><span class="sxs-lookup"><span data-stu-id="29143-122">This example uses the `ChDir` function to change the current directory or folder.</span></span>  
  
 [!code-vb[VbVbalrCatRef#41](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#41)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="29143-123"><paramref name="Path" /> está vazio.</span><span class="sxs-lookup"><span data-stu-id="29143-123"><paramref name="Path" /> is empty.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="29143-124">Uma unidade inválida foi especificada ou a unidade está indisponível.</span><span class="sxs-lookup"><span data-stu-id="29143-124">Invalid drive is specified, or drive is unavailable.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.ChDrive" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.CurDir" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Dir" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.MkDir(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.RmDir(System.String)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.FileNotFoundException" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md"><span data-ttu-id="29143-125">Como analisar demarcadores de arquivo no Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-125">How to: Parse File Paths in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/creating-deleting-and-moving-files-and-directories.md"><span data-ttu-id="29143-126">Criando, excluindo e movendo arquivos e diretórios no Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-126">Creating, Deleting, and Moving Files and Directories in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ChDrive">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="29143-127">Altera a unidade atual.</span><span class="sxs-lookup"><span data-stu-id="29143-127">Changes the current drive.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ChDrive">
      <MemberSignature Language="C#" Value="public static void ChDrive (char Drive);" />
      <MemberSignature Language="ILAsm" Value=".method public static void ChDrive(char Drive) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.ChDrive(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ChDrive (Drive As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ChDrive(char Drive);" />
      <MemberSignature Language="F#" Value="static member ChDrive : char -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.ChDrive Drive" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Drive" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="Drive"><span data-ttu-id="29143-128">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-128">Required.</span></span> <span data-ttu-id="29143-129">Expressão de cadeia de caracteres que especifica uma unidade existente.</span><span class="sxs-lookup"><span data-stu-id="29143-129">String expression that specifies an existing drive.</span></span> <span data-ttu-id="29143-130">Se você fornecer uma cadeia de caracteres de tamanho zero (""), a unidade atual não será alterada.</span><span class="sxs-lookup"><span data-stu-id="29143-130">If you supply a zero-length string (""), the current drive does not change.</span></span> <span data-ttu-id="29143-131">Se o argumento <paramref name="Drive" /> for uma cadeia de vários caracteres, <see langword="ChDrive" /> usará somente a primeira letra.</span><span class="sxs-lookup"><span data-stu-id="29143-131">If the <paramref name="Drive" /> argument is a multiple-character string, <see langword="ChDrive" /> uses only the first letter.</span></span></param>
        <summary><span data-ttu-id="29143-132">Altera a unidade atual.</span><span class="sxs-lookup"><span data-stu-id="29143-132">Changes the current drive.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29143-133">O `ChDrive` função requer permissão de código não gerenciado, que pode afetar sua execução em situações de confiança parcial.</span><span class="sxs-lookup"><span data-stu-id="29143-133">The `ChDrive` function requires unmanaged-code permission, which may affect its execution in partial-trust situations.</span></span> <span data-ttu-id="29143-134">Para obter mais informações, consulte <xref:System.Security.Permissions.SecurityPermission> e [permissões de acesso do código](https://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span><span class="sxs-lookup"><span data-stu-id="29143-134">For more information, see <xref:System.Security.Permissions.SecurityPermission> and [Code Access Permissions](https://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29143-135">Este exemplo usa o `ChDrive` função para alterar a unidade atual.</span><span class="sxs-lookup"><span data-stu-id="29143-135">This example uses the `ChDrive` function to change the current drive.</span></span> <span data-ttu-id="29143-136">A função gera uma exceção se a unidade não existe.</span><span class="sxs-lookup"><span data-stu-id="29143-136">The function throws an exception if the drive does not exist.</span></span>  
  
 [!code-vb[VbVbalrCatRef#32](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#32)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="29143-137">Uma unidade inválida foi especificada ou a unidade está indisponível.</span><span class="sxs-lookup"><span data-stu-id="29143-137">Invalid drive is specified, or drive is unavailable.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.ChDir(System.String)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.CurDir" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Dir" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.MkDir(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.RmDir(System.String)" />
        <altmember cref="T:System.IO.IOException" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md"><span data-ttu-id="29143-138">Access de arquivo com o Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-138">File Access with Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ChDrive">
      <MemberSignature Language="C#" Value="public static void ChDrive (string Drive);" />
      <MemberSignature Language="ILAsm" Value=".method public static void ChDrive(string Drive) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.ChDrive(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ChDrive (Drive As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ChDrive(System::String ^ Drive);" />
      <MemberSignature Language="F#" Value="static member ChDrive : string -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.ChDrive Drive" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Drive" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Drive"><span data-ttu-id="29143-139">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-139">Required.</span></span> <span data-ttu-id="29143-140">Expressão de cadeia de caracteres que especifica uma unidade existente.</span><span class="sxs-lookup"><span data-stu-id="29143-140">String expression that specifies an existing drive.</span></span> <span data-ttu-id="29143-141">Se você fornecer uma cadeia de caracteres de tamanho zero (""), a unidade atual não será alterada.</span><span class="sxs-lookup"><span data-stu-id="29143-141">If you supply a zero-length string (""), the current drive does not change.</span></span> <span data-ttu-id="29143-142">Se o argumento <paramref name="Drive" /> for uma cadeia de vários caracteres, <see langword="ChDrive" /> usará somente a primeira letra.</span><span class="sxs-lookup"><span data-stu-id="29143-142">If the <paramref name="Drive" /> argument is a multiple-character string, <see langword="ChDrive" /> uses only the first letter.</span></span></param>
        <summary><span data-ttu-id="29143-143">Altera a unidade atual.</span><span class="sxs-lookup"><span data-stu-id="29143-143">Changes the current drive.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29143-144">O `ChDrive` função requer permissão de código não gerenciado, que pode afetar sua execução em situações de confiança parcial.</span><span class="sxs-lookup"><span data-stu-id="29143-144">The `ChDrive` function requires unmanaged-code permission, which may affect its execution in partial-trust situations.</span></span> <span data-ttu-id="29143-145">Para obter mais informações, consulte <xref:System.Security.Permissions.SecurityPermission> e [permissões de acesso do código](https://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span><span class="sxs-lookup"><span data-stu-id="29143-145">For more information, see <xref:System.Security.Permissions.SecurityPermission> and [Code Access Permissions](https://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29143-146">Este exemplo usa o `ChDrive` função para alterar a unidade atual.</span><span class="sxs-lookup"><span data-stu-id="29143-146">This example uses the `ChDrive` function to change the current drive.</span></span> <span data-ttu-id="29143-147">A função gera uma exceção se a unidade não existe.</span><span class="sxs-lookup"><span data-stu-id="29143-147">The function throws an exception if the drive does not exist.</span></span>  
  
 [!code-vb[VbVbalrCatRef#32](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#32)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="29143-148">Uma unidade inválida foi especificada ou a unidade está indisponível.</span><span class="sxs-lookup"><span data-stu-id="29143-148">Invalid drive is specified, or drive is unavailable.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.ChDir(System.String)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.CurDir" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Dir" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.MkDir(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.RmDir(System.String)" />
        <altmember cref="T:System.IO.IOException" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md"><span data-ttu-id="29143-149">Access de arquivo com o Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-149">File Access with Visual Basic</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="CurDir">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="29143-150">Retorna uma cadeia de caracteres que representa o caminho atual.</span><span class="sxs-lookup"><span data-stu-id="29143-150">Returns a string representing the current path.</span></span> <span data-ttu-id="29143-151">O <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> oferece maior produtividade e desempenho em operações de E/S de arquivo que <see langword="CurDir" />.</span><span class="sxs-lookup"><span data-stu-id="29143-151">The <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> gives you better productivity and performance in file I/O operations than <see langword="CurDir" />.</span></span> <span data-ttu-id="29143-152">Para obter mais informações, consulte <see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" />.</span><span class="sxs-lookup"><span data-stu-id="29143-152">For more information, see <see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CurDir">
      <MemberSignature Language="C#" Value="public static string CurDir ();" />
      <MemberSignature Language="ILAsm" Value=".method public static string CurDir() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.CurDir" />
      <MemberSignature Language="VB.NET" Value="Public Function CurDir () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ CurDir();" />
      <MemberSignature Language="F#" Value="static member CurDir : unit -&gt; string" Usage="Microsoft.VisualBasic.FileSystem.CurDir " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="29143-153">Retorna uma cadeia de caracteres que representa o caminho atual.</span><span class="sxs-lookup"><span data-stu-id="29143-153">Returns a string representing the current path.</span></span> <span data-ttu-id="29143-154">O <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> oferece maior produtividade e desempenho em operações de E/S de arquivo que <see langword="CurDir" />.</span><span class="sxs-lookup"><span data-stu-id="29143-154">The <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> gives you better productivity and performance in file I/O operations than <see langword="CurDir" />.</span></span> <span data-ttu-id="29143-155">Para obter mais informações, consulte <see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" />.</span><span class="sxs-lookup"><span data-stu-id="29143-155">For more information, see <see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" />.</span></span></summary>
        <returns><span data-ttu-id="29143-156">Uma cadeia de caracteres que representa o caminho atual.</span><span class="sxs-lookup"><span data-stu-id="29143-156">A string representing the current path.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="29143-157">Este exemplo usa o `CurDir` função para retornar o caminho atual.</span><span class="sxs-lookup"><span data-stu-id="29143-157">This example uses the `CurDir` function to return the current path.</span></span>  
  
 [!code-vb[VbVbalrCatRef#65](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#65)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.ChDrive" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.ChDir(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.MkDir(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.RmDir(System.String)" />
        <altmember cref="T:System.IO.IOException" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="CurDir">
      <MemberSignature Language="C#" Value="public static string CurDir (char Drive);" />
      <MemberSignature Language="ILAsm" Value=".method public static string CurDir(char Drive) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.CurDir(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function CurDir (Drive As Char) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ CurDir(char Drive);" />
      <MemberSignature Language="F#" Value="static member CurDir : char -&gt; string" Usage="Microsoft.VisualBasic.FileSystem.CurDir Drive" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Drive" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="Drive"><span data-ttu-id="29143-158">Opcional.</span><span class="sxs-lookup"><span data-stu-id="29143-158">Optional.</span></span> <span data-ttu-id="29143-159">A expressão <see langword="Char" /> que especifica uma unidade existente.</span><span class="sxs-lookup"><span data-stu-id="29143-159"><see langword="Char" /> expression that specifies an existing drive.</span></span> <span data-ttu-id="29143-160">Se nenhuma unidade for especificada ou, se <paramref name="Drive" /> for uma cadeia de caracteres de tamanho zero (""), <see langword="CurDir" /> retornará o caminho da unidade atual.</span><span class="sxs-lookup"><span data-stu-id="29143-160">If no drive is specified, or if <paramref name="Drive" /> is a zero-length string (""), <see langword="CurDir" /> returns the path for the current drive.</span></span></param>
        <summary><span data-ttu-id="29143-161">Retorna uma cadeia de caracteres que representa o caminho atual.</span><span class="sxs-lookup"><span data-stu-id="29143-161">Returns a string representing the current path.</span></span> <span data-ttu-id="29143-162">O <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> oferece maior produtividade e desempenho em operações de E/S de arquivo que <see langword="CurDir" />.</span><span class="sxs-lookup"><span data-stu-id="29143-162">The <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> gives you better productivity and performance in file I/O operations than <see langword="CurDir" />.</span></span> <span data-ttu-id="29143-163">Para obter mais informações, consulte <see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" />.</span><span class="sxs-lookup"><span data-stu-id="29143-163">For more information, see <see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" />.</span></span></summary>
        <returns><span data-ttu-id="29143-164">Uma cadeia de caracteres que representa o caminho atual.</span><span class="sxs-lookup"><span data-stu-id="29143-164">A string representing the current path.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="29143-165">Este exemplo usa o `CurDir` função para retornar o caminho atual.</span><span class="sxs-lookup"><span data-stu-id="29143-165">This example uses the `CurDir` function to return the current path.</span></span>  
  
 [!code-vb[VbVbalrCatRef#65](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#65)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.ChDrive" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.ChDir(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.MkDir(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.RmDir(System.String)" />
        <altmember cref="T:System.IO.IOException" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dir">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="29143-166">Retorna uma cadeia de caracteres que representa o nome de um arquivo, diretório ou pasta que corresponde a um padrão ou atributo de arquivo especificado ou o rótulo de volume de uma unidade.</span><span class="sxs-lookup"><span data-stu-id="29143-166">Returns a string representing the name of a file, directory, or folder that matches a specified pattern or file attribute, or the volume label of a drive.</span></span> <span data-ttu-id="29143-167">O <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> oferece maior produtividade e desempenho em operações de E/S de arquivo do que a função <see langword="Dir" />.</span><span class="sxs-lookup"><span data-stu-id="29143-167">The <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> gives you better productivity and performance in file I/O operations than the <see langword="Dir" /> function.</span></span> <span data-ttu-id="29143-168">Consulte <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)" /> para obter mais informações.</span><span class="sxs-lookup"><span data-stu-id="29143-168">See <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)" /> for more information.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dir">
      <MemberSignature Language="C#" Value="public static string Dir ();" />
      <MemberSignature Language="ILAsm" Value=".method public static string Dir() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Dir" />
      <MemberSignature Language="VB.NET" Value="Public Function Dir () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Dir();" />
      <MemberSignature Language="F#" Value="static member Dir : unit -&gt; string" Usage="Microsoft.VisualBasic.FileSystem.Dir " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="29143-169">Retorna uma cadeia de caracteres que representa o nome de um arquivo, diretório ou pasta que corresponde a um padrão ou atributo de arquivo especificado ou o rótulo de volume de uma unidade.</span><span class="sxs-lookup"><span data-stu-id="29143-169">Returns a string representing the name of a file, directory, or folder that matches a specified pattern or file attribute, or the volume label of a drive.</span></span> <span data-ttu-id="29143-170">O <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> oferece maior produtividade e desempenho em operações de E/S de arquivo do que a função <see langword="Dir" />.</span><span class="sxs-lookup"><span data-stu-id="29143-170">The <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> gives you better productivity and performance in file I/O operations than the <see langword="Dir" /> function.</span></span> <span data-ttu-id="29143-171">Consulte <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)" /> para obter mais informações.</span><span class="sxs-lookup"><span data-stu-id="29143-171">See <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)" /> for more information.</span></span></summary>
        <returns><span data-ttu-id="29143-172">Uma cadeia de caracteres representando o nome de um arquivo, diretório ou pasta correspondente a um padrão especificado ou atributo de arquivo ou o rótulo de volume de uma unidade.</span><span class="sxs-lookup"><span data-stu-id="29143-172">A string representing the name of a file, directory, or folder that matches a specified pattern or file attribute, or the volume label of a drive.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29143-173">O `Dir` função suporta o uso de vários caracteres (`*`) e de caractere único (`?`) caracteres curinga para especificar vários arquivos.</span><span class="sxs-lookup"><span data-stu-id="29143-173">The `Dir` function supports the use of multiple-character (`*`) and single-character (`?`) wildcards to specify multiple files.</span></span>  
  
 <span data-ttu-id="29143-174">`VbVolume` Retorna o rótulo de volume para a unidade em vez de um nome de arquivo específico.</span><span class="sxs-lookup"><span data-stu-id="29143-174">`VbVolume` returns the volume label for the drive instead of a specific file name.</span></span>  
  
 <span data-ttu-id="29143-175">Você deve fornecer um `PathName` na primeira vez que você chamar o `Dir` função.</span><span class="sxs-lookup"><span data-stu-id="29143-175">You must supply a `PathName` the first time that you call the `Dir` function.</span></span> <span data-ttu-id="29143-176">Para recuperar o próximo item, você pode fazer chamadas subsequentes para o `Dir` função sem parâmetros.</span><span class="sxs-lookup"><span data-stu-id="29143-176">To retrieve the next item, you can make subsequent calls to the `Dir` function without parameters.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="29143-177">Para ser executado corretamente, o `Dir` função requer que o <xref:System.Security.Permissions.FileIOPermissionAccess.Read> e <xref:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery> sinalizadores de <xref:System.Security.Permissions.FileIOPermission> sejam concedidas ao código em execução.</span><span class="sxs-lookup"><span data-stu-id="29143-177">To run correctly, the `Dir` function requires the <xref:System.Security.Permissions.FileIOPermissionAccess.Read> and <xref:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery> flags of <xref:System.Security.Permissions.FileIOPermission> to be granted to the executing code.</span></span> <span data-ttu-id="29143-178">Para obter mais informações, consulte <xref:System.Security.Permissions.FileIOPermission>, <xref:System.Security.SecurityException>, e [permissões de acesso do código](https://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span><span class="sxs-lookup"><span data-stu-id="29143-178">For more information, see <xref:System.Security.Permissions.FileIOPermission>, <xref:System.Security.SecurityException>, and [Code Access Permissions](https://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span></span>  
  
 <span data-ttu-id="29143-179">O `Attributes` valores de enumeração de argumento são da seguinte maneira:</span><span class="sxs-lookup"><span data-stu-id="29143-179">The `Attributes` argument enumeration values are as follows:</span></span>  
  
|<span data-ttu-id="29143-180">Valor</span><span class="sxs-lookup"><span data-stu-id="29143-180">Value</span></span>|<span data-ttu-id="29143-181">Constante</span><span class="sxs-lookup"><span data-stu-id="29143-181">Constant</span></span>|<span data-ttu-id="29143-182">Descrição</span><span class="sxs-lookup"><span data-stu-id="29143-182">Description</span></span>|  
|-|-|-|  
|`Normal`|`vbnormal`|<span data-ttu-id="29143-183">Padrão.</span><span class="sxs-lookup"><span data-stu-id="29143-183">Default.</span></span> <span data-ttu-id="29143-184">Especifica os arquivos sem atributos.</span><span class="sxs-lookup"><span data-stu-id="29143-184">Specifies files without attributes.</span></span>|  
|`ReadOnly`|`vbReadOnly`|<span data-ttu-id="29143-185">Especifica arquivos somente leitura e também arquivos sem atributos.</span><span class="sxs-lookup"><span data-stu-id="29143-185">Specifies read-only files, and also files without attributes.</span></span>|  
|`Hidden`|`vbHidden`|<span data-ttu-id="29143-186">Especifica arquivos ocultos e também arquivos sem atributos.</span><span class="sxs-lookup"><span data-stu-id="29143-186">Specifies hidden files, and also files without attributes.</span></span>|  
|`System`|`vbSystem`|<span data-ttu-id="29143-187">Especifica os arquivos do sistema e arquivos sem atributos.</span><span class="sxs-lookup"><span data-stu-id="29143-187">Specifies system files, and also files without attributes.</span></span>|  
|`Volume`|`vbVolume`|<span data-ttu-id="29143-188">Especifica o rótulo do volume; Se qualquer outro atributo for especificado, `vbVolume` será ignorado.</span><span class="sxs-lookup"><span data-stu-id="29143-188">Specifies volume label; if any other attribute is specified, `vbVolume` is ignored.</span></span>|  
|`Directory`|`vbDirectory`|<span data-ttu-id="29143-189">Especifica diretórios ou pastas e arquivos sem atributos.</span><span class="sxs-lookup"><span data-stu-id="29143-189">Specifies directories or folders, and also files without attributes.</span></span>|  
|`Archive`|`vbArchive`|<span data-ttu-id="29143-190">O arquivo foi alterado desde o último backup.</span><span class="sxs-lookup"><span data-stu-id="29143-190">File has changed since last backup.</span></span>|  
|`Alias`|`vbAlias`|<span data-ttu-id="29143-191">O arquivo tem um nome diferente.</span><span class="sxs-lookup"><span data-stu-id="29143-191">File has a different name.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="29143-192">Essas enumerações são especificadas pela linguagem Visual Basic e podem ser usadas em qualquer lugar em seu código em vez dos valores reais.</span><span class="sxs-lookup"><span data-stu-id="29143-192">These enumerations are specified by the Visual Basic language and can be used anywhere in your code instead of the actual values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29143-193">Este exemplo usa o `Dir` função para verificar se existem determinados arquivos e diretórios.</span><span class="sxs-lookup"><span data-stu-id="29143-193">This example uses the `Dir` function to check if certain files and directories exist.</span></span>  
  
 [!code-vb[VbVbalrCatRef#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.ChDir(System.String)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.ChDrive" />
        <altmember cref="T:Microsoft.VisualBasic.FileAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Dir">
      <MemberSignature Language="C#" Value="public static string Dir (string Pathname, Microsoft.VisualBasic.FileAttribute Attributes = Microsoft.VisualBasic.FileAttribute.Normal);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Dir(string Pathname, valuetype Microsoft.VisualBasic.FileAttribute Attributes) cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Dir(System.String,Microsoft.VisualBasic.FileAttribute)" FrameworkAlternate="netframework-1.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Function Dir (Pathname As String, Optional Attributes As FileAttribute = Microsoft.VisualBasic.FileAttribute.Normal) As String" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C#" Value="public static string Dir (string PathName, Microsoft.VisualBasic.FileAttribute Attributes = Microsoft.VisualBasic.FileAttribute.Normal);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public static string Dir(string PathName, valuetype Microsoft.VisualBasic.FileAttribute Attributes) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Function Dir (PathName As String, Optional Attributes As FileAttribute = Microsoft.VisualBasic.FileAttribute.Normal) As String" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="static member Dir : string * Microsoft.VisualBasic.FileAttribute -&gt; string" Usage="Microsoft.VisualBasic.FileSystem.Dir (PathName, Attributes)" FrameworkAlternate="netframework-1.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Dir(System.String,Microsoft.VisualBasic.FileAttribute)" FrameworkAlternate="netframework-2.0" />
      <MemberSignature Language="F#" Value="static member Dir : string * Microsoft.VisualBasic.FileAttribute -&gt; string" Usage="Microsoft.VisualBasic.FileSystem.Dir (PathName, Attributes)" FrameworkAlternate="netframework-2.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Pathname" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="PathName" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Attributes" Type="Microsoft.VisualBasic.FileAttribute" Index="1" />
      </Parameters>
      <Docs>
        <param name="PathName"><span data-ttu-id="29143-194">Opcional.</span><span class="sxs-lookup"><span data-stu-id="29143-194">Optional.</span></span> <span data-ttu-id="29143-195">Uma expressão de cadeia de caracteres que especifica um nome de arquivo, diretório ou pasta ou um rótulo de volume de unidade.</span><span class="sxs-lookup"><span data-stu-id="29143-195">A string expression that specifies a file name, directory or folder name, or drive volume label.</span></span> <span data-ttu-id="29143-196">Uma cadeia de caracteres de comprimento zero (<see langword="&quot;&quot;" />) será retornada se <paramref name="PathName" /> não for encontrado.</span><span class="sxs-lookup"><span data-stu-id="29143-196">A zero-length string (<see langword="&quot;&quot;" />) is returned if <paramref name="PathName" /> is not found.</span></span></param>
        <param name="Pathname"><span data-ttu-id="29143-197">Opcional.</span><span class="sxs-lookup"><span data-stu-id="29143-197">Optional.</span></span> <span data-ttu-id="29143-198">Uma expressão de cadeia de caracteres que especifica um nome de arquivo, diretório ou pasta ou um rótulo de volume de unidade.</span><span class="sxs-lookup"><span data-stu-id="29143-198">A string expression that specifies a file name, directory or folder name, or drive volume label.</span></span> <span data-ttu-id="29143-199">Uma cadeia de caracteres de comprimento zero (<see langword="&quot;&quot;" />) será retornada se <paramref name="Pathname" /> não for encontrado.</span><span class="sxs-lookup"><span data-stu-id="29143-199">A zero-length string (<see langword="&quot;&quot;" />) is returned if <paramref name="Pathname" /> is not found.</span></span></param>
        <param name="Attributes"><span data-ttu-id="29143-200">Opcional.</span><span class="sxs-lookup"><span data-stu-id="29143-200">Optional.</span></span> <span data-ttu-id="29143-201">Enumeração ou expressão numérica cujo valor especifica atributos de arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-201">Enumeration or numeric expression whose value specifies file attributes.</span></span> <span data-ttu-id="29143-202">Se omitido, <see langword="Dir" /> retorna arquivos que correspondem a <paramref name="Pathname" />, mas não têm atributos.</span><span class="sxs-lookup"><span data-stu-id="29143-202">If omitted, <see langword="Dir" /> returns files that match <paramref name="Pathname" /> but have no attributes.</span></span></param>
        <summary><span data-ttu-id="29143-203">Retorna uma cadeia de caracteres que representa o nome de um arquivo, diretório ou pasta que corresponde a um padrão ou atributo de arquivo especificado ou o rótulo de volume de uma unidade.</span><span class="sxs-lookup"><span data-stu-id="29143-203">Returns a string representing the name of a file, directory, or folder that matches a specified pattern or file attribute, or the volume label of a drive.</span></span> <span data-ttu-id="29143-204">O <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> oferece maior produtividade e desempenho em operações de E/S de arquivo do que a função <see langword="Dir" />.</span><span class="sxs-lookup"><span data-stu-id="29143-204">The <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> gives you better productivity and performance in file I/O operations than the <see langword="Dir" /> function.</span></span> <span data-ttu-id="29143-205">Consulte <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)" /> para obter mais informações.</span><span class="sxs-lookup"><span data-stu-id="29143-205">See <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)" /> for more information.</span></span></summary>
        <returns><span data-ttu-id="29143-206">Uma cadeia de caracteres representando o nome de um arquivo, diretório ou pasta correspondente a um padrão especificado ou atributo de arquivo ou o rótulo de volume de uma unidade.</span><span class="sxs-lookup"><span data-stu-id="29143-206">A string representing the name of a file, directory, or folder that matches a specified pattern or file attribute, or the volume label of a drive.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29143-207">O `Dir` função suporta o uso de vários caracteres (`*`) e de caractere único (`?`) caracteres curinga para especificar vários arquivos.</span><span class="sxs-lookup"><span data-stu-id="29143-207">The `Dir` function supports the use of multiple-character (`*`) and single-character (`?`) wildcards to specify multiple files.</span></span>  
  
 <span data-ttu-id="29143-208">`VbVolume` Retorna o rótulo de volume para a unidade em vez de um nome de arquivo específico.</span><span class="sxs-lookup"><span data-stu-id="29143-208">`VbVolume` returns the volume label for the drive instead of a specific file name.</span></span>  
  
 <span data-ttu-id="29143-209">Você deve fornecer um `PathName` na primeira vez que você chamar o `Dir` função.</span><span class="sxs-lookup"><span data-stu-id="29143-209">You must supply a `PathName` the first time that you call the `Dir` function.</span></span> <span data-ttu-id="29143-210">Para recuperar o próximo item, você pode fazer chamadas subsequentes para o `Dir` função sem parâmetros.</span><span class="sxs-lookup"><span data-stu-id="29143-210">To retrieve the next item, you can make subsequent calls to the `Dir` function with no parameters.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="29143-211">Para ser executado corretamente, o `Dir` função requer que o <xref:System.Security.Permissions.FileIOPermissionAccess.Read> e <xref:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery> sinalizadores de <xref:System.Security.Permissions.FileIOPermission> sejam concedidas ao código em execução.</span><span class="sxs-lookup"><span data-stu-id="29143-211">To run correctly, the `Dir` function requires the <xref:System.Security.Permissions.FileIOPermissionAccess.Read> and <xref:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery> flags of <xref:System.Security.Permissions.FileIOPermission> to be granted to the executing code.</span></span> <span data-ttu-id="29143-212">Para obter mais informações, consulte <xref:System.Security.Permissions.FileIOPermission>, <xref:System.Security.SecurityException>, e [permissões de acesso do código](https://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span><span class="sxs-lookup"><span data-stu-id="29143-212">For more information, see <xref:System.Security.Permissions.FileIOPermission>, <xref:System.Security.SecurityException>, and [Code Access Permissions](https://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span></span>  
  
 <span data-ttu-id="29143-213">O `Attributes` valores de enumeração de argumento são da seguinte maneira:</span><span class="sxs-lookup"><span data-stu-id="29143-213">The `Attributes` argument enumeration values are as follows:</span></span>  
  
|<span data-ttu-id="29143-214">Valor</span><span class="sxs-lookup"><span data-stu-id="29143-214">Value</span></span>|<span data-ttu-id="29143-215">Constante</span><span class="sxs-lookup"><span data-stu-id="29143-215">Constant</span></span>|<span data-ttu-id="29143-216">Descrição</span><span class="sxs-lookup"><span data-stu-id="29143-216">Description</span></span>|  
|-|-|-|  
|`Normal`|`vbnormal`|<span data-ttu-id="29143-217">Padrão.</span><span class="sxs-lookup"><span data-stu-id="29143-217">Default.</span></span> <span data-ttu-id="29143-218">Especifica os arquivos que não têm atributos.</span><span class="sxs-lookup"><span data-stu-id="29143-218">Specifies files that have no attributes.</span></span>|  
|`ReadOnly`|`vbReadOnly`|<span data-ttu-id="29143-219">Especifica arquivos somente leitura, além dos arquivos que não têm atributos.</span><span class="sxs-lookup"><span data-stu-id="29143-219">Specifies read-only files, in addition to files that have no attributes.</span></span>|  
|`Hidden`|`vbHidden`|<span data-ttu-id="29143-220">Especifica arquivos ocultos, além dos arquivos que não têm atributos.</span><span class="sxs-lookup"><span data-stu-id="29143-220">Specifies hidden files, in addition to files that have no attributes.</span></span>|  
|`System`|`vbSystem`|<span data-ttu-id="29143-221">Especifica os arquivos do sistema, além dos arquivos que não têm atributos.</span><span class="sxs-lookup"><span data-stu-id="29143-221">Specifies system files, in addition to files that have no attributes.</span></span>|  
|`Volume`|`vbVolume`|<span data-ttu-id="29143-222">Especifica o rótulo do volume; Se qualquer outro atributo for especificado, `vbVolume` será ignorado.</span><span class="sxs-lookup"><span data-stu-id="29143-222">Specifies volume label; if any other attribute is specified, `vbVolume` is ignored.</span></span>|  
|`Directory`|`vbDirectory`|<span data-ttu-id="29143-223">Especifica diretórios ou pastas, além dos arquivos que não têm atributos.</span><span class="sxs-lookup"><span data-stu-id="29143-223">Specifies directories or folders, in addition to files that have no attributes.</span></span>|  
|`Archive`|`vbArchive`|<span data-ttu-id="29143-224">O arquivo foi alterado desde o último backup.</span><span class="sxs-lookup"><span data-stu-id="29143-224">File has changed since last backup.</span></span>|  
|`Alias`|`vbAlias`|<span data-ttu-id="29143-225">O arquivo tem um nome diferente.</span><span class="sxs-lookup"><span data-stu-id="29143-225">File has a different name.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="29143-226">Essas enumerações são especificadas pela linguagem Visual Basic e podem ser usadas em qualquer lugar em seu código no lugar dos valores reais.</span><span class="sxs-lookup"><span data-stu-id="29143-226">These enumerations are specified by the Visual Basic language and can be used anywhere in your code in place of the actual values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29143-227">Este exemplo usa o `Dir` função para verificar se existem determinados arquivos e diretórios.</span><span class="sxs-lookup"><span data-stu-id="29143-227">This example uses the `Dir` function to check if certain files and directories exist.</span></span>  
  
 [!code-vb[VbVbalrCatRef#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.ChDir(System.String)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.ChDrive" />
        <altmember cref="T:Microsoft.VisualBasic.FileAttribute" />
      </Docs>
    </Member>
    <Member MemberName="EOF">
      <MemberSignature Language="C#" Value="public static bool EOF (int FileNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool EOF(int32 FileNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.EOF(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function EOF (FileNumber As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool EOF(int FileNumber);" />
      <MemberSignature Language="F#" Value="static member EOF : int -&gt; bool" Usage="Microsoft.VisualBasic.FileSystem.EOF FileNumber" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="29143-228">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-228">Required.</span></span> <span data-ttu-id="29143-229">Um <see langword="Integer" /> que contém qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="29143-229">An <see langword="Integer" /> that contains any valid file number.</span></span></param>
        <summary><span data-ttu-id="29143-230">Retorna um valor booliano <see langword="True" /> quando o final de um arquivo aberto para <see langword="Random" /> ou <see langword="Input" /> sequencial foi atingido.</span><span class="sxs-lookup"><span data-stu-id="29143-230">Returns a Boolean value <see langword="True" /> when the end of a file opened for <see langword="Random" /> or sequential <see langword="Input" /> has been reached.</span></span></summary>
        <returns><span data-ttu-id="29143-231">Um valor booliano <see langword="True" /> quando o final de um arquivo aberto para <see langword="Random" /> ou <see langword="Input" /> sequencial foi atingido.</span><span class="sxs-lookup"><span data-stu-id="29143-231">A Boolean value <see langword="True" /> when the end of a file opened for <see langword="Random" /> or sequential <see langword="Input" /> has been reached.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29143-232">Use `EOF` para evitar o erro gerado pela tentativa de obter entrada passou do final de um arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-232">Use `EOF` to avoid the error generated by attempting to get input past the end of a file.</span></span>  
  
 <span data-ttu-id="29143-233">O `EOF` retornos de função `False` até o final do arquivo foi atingido.</span><span class="sxs-lookup"><span data-stu-id="29143-233">The `EOF` function returns `False` until the end of the file has been reached.</span></span> <span data-ttu-id="29143-234">Com arquivos abertos para `Random` ou `Binary` acesso `EOF` retorna `False` até o último executado `FileGet` função não é possível ler um registro inteiro.</span><span class="sxs-lookup"><span data-stu-id="29143-234">With files opened for `Random` or `Binary` access, `EOF` returns `False` until the last executed `FileGet` function is unable to read a whole record.</span></span>  
  
 <span data-ttu-id="29143-235">Com arquivos abertos para `Binary` acessar, uma tentativa de ler o arquivo usando o `Input` funcionando até `EOF` retorna `True` gera um erro.</span><span class="sxs-lookup"><span data-stu-id="29143-235">With files opened for `Binary` access, an attempt to read through the file using the `Input` function until `EOF` returns `True` generates an error.</span></span> <span data-ttu-id="29143-236">Use o `LOF` e `Loc` funções em vez de `EOF` ao ler arquivos binários com `Input`, ou use `Get` ao usar o `EOF` função.</span><span class="sxs-lookup"><span data-stu-id="29143-236">Use the `LOF` and `Loc` functions instead of `EOF` when reading binary files with `Input`, or use `Get` when using the `EOF` function.</span></span> <span data-ttu-id="29143-237">Com arquivos abertos para `Output`, `EOF` sempre retorna `True`.</span><span class="sxs-lookup"><span data-stu-id="29143-237">With files opened for `Output`, `EOF` always returns `True`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29143-238">Este exemplo usa o `EOF` função para detectar o final de um arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-238">This example uses the `EOF` function to detect the end of a file.</span></span> <span data-ttu-id="29143-239">Este exemplo supõe que `Testfile` é um arquivo de texto que contém várias linhas de texto.</span><span class="sxs-lookup"><span data-stu-id="29143-239">This example assumes that `Testfile` is a text file that contains several lines of text.</span></span>  
  
 [!code-vb[VbVbalrCatRef#62](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#62)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="29143-240">O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="29143-240">File mode is invalid.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Loc(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.LOF(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FileAttr">
      <MemberSignature Language="C#" Value="public static Microsoft.VisualBasic.OpenMode FileAttr (int FileNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype Microsoft.VisualBasic.OpenMode FileAttr(int32 FileNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileAttr(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function FileAttr (FileNumber As Integer) As OpenMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::VisualBasic::OpenMode FileAttr(int FileNumber);" />
      <MemberSignature Language="F#" Value="static member FileAttr : int -&gt; Microsoft.VisualBasic.OpenMode" Usage="Microsoft.VisualBasic.FileSystem.FileAttr FileNumber" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.OpenMode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="29143-241">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-241">Required.</span></span> <span data-ttu-id="29143-242"><see langword="Integer" />.</span><span class="sxs-lookup"><span data-stu-id="29143-242"><see langword="Integer" />.</span></span> <span data-ttu-id="29143-243">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="29143-243">Any valid file number.</span></span></param>
        <summary><span data-ttu-id="29143-244">Retorna uma enumeração que representa o modo de arquivo para arquivos abertos usando a função <see langword="FileOpen" />.</span><span class="sxs-lookup"><span data-stu-id="29143-244">Returns an enumeration representing the file mode for files opened using the <see langword="FileOpen" /> function.</span></span> <span data-ttu-id="29143-245">O <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> oferece maior produtividade e desempenho em operações de E/S de arquivo do que a função <see langword="FileAttr" />.</span><span class="sxs-lookup"><span data-stu-id="29143-245">The <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> gives you better productivity and performance in file I/O operations than the <see langword="FileAttr" /> function.</span></span> <span data-ttu-id="29143-246">Consulte <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)" /> para obter mais informações.</span><span class="sxs-lookup"><span data-stu-id="29143-246">See <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)" /> for more information.</span></span></summary>
        <returns><span data-ttu-id="29143-247">Os seguintes valores de enumeração indicam o modo de acesso do arquivo:</span><span class="sxs-lookup"><span data-stu-id="29143-247">The following enumeration values indicate the file access mode:</span></span> 
 <list type="table"><item><term> <span data-ttu-id="29143-248">Valor</span><span class="sxs-lookup"><span data-stu-id="29143-248">Value</span></span> 
 </term><description> <span data-ttu-id="29143-249">Modo</span><span class="sxs-lookup"><span data-stu-id="29143-249">Mode</span></span> 
 </description></item><item><term> <span data-ttu-id="29143-250">1</span><span class="sxs-lookup"><span data-stu-id="29143-250">1</span></span> 
 </term><description><see langword="OpenMode.Input" /></description></item><item><term> <span data-ttu-id="29143-251">2</span><span class="sxs-lookup"><span data-stu-id="29143-251">2</span></span> 
 </term><description><see langword="OpenMode.Output" /></description></item><item><term> <span data-ttu-id="29143-252">4</span><span class="sxs-lookup"><span data-stu-id="29143-252">4</span></span> 
 </term><description><see langword="OpenMode.Random" /></description></item><item><term> <span data-ttu-id="29143-253">8</span><span class="sxs-lookup"><span data-stu-id="29143-253">8</span></span> 
 </term><description><see langword="OpenMode.Append" /></description></item><item><term> <span data-ttu-id="29143-254">32</span><span class="sxs-lookup"><span data-stu-id="29143-254">32</span></span> 
 </term><description><see langword="OpenMode.Binary" /></description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29143-255">Essa função retorna uma enumeração que representa o modo de arquivo para arquivos abertos usando o `FileOpen` função.</span><span class="sxs-lookup"><span data-stu-id="29143-255">This function returns an enumeration representing the file mode for files opened using the `FileOpen` function.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29143-256">Este exemplo usa o `FileAttr` função para retornar o modo de arquivo de um arquivo aberto.</span><span class="sxs-lookup"><span data-stu-id="29143-256">This example uses the `FileAttr` function to return the file mode of an open file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#46](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#46)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SetAttr(System.String,Microsoft.VisualBasic.FileAttribute)" />
        <altmember cref="T:System.IO.IOException" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md"><span data-ttu-id="29143-257">Access de arquivo com o Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-257">File Access with Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FileClose">
      <MemberSignature Language="C#" Value="public static void FileClose (params int[] FileNumbers);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileClose(int32[] FileNumbers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileClose(System.Int32[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileClose (ParamArray FileNumbers As Integer())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void FileClose(... cli::array &lt;int&gt; ^ FileNumbers);" />
      <MemberSignature Language="F#" Value="static member FileClose : int[] -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileClose FileNumbers" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumbers" Type="System.Int32[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-1.1">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="FileNumbers"><span data-ttu-id="29143-258">Opcional.</span><span class="sxs-lookup"><span data-stu-id="29143-258">Optional.</span></span> <span data-ttu-id="29143-259">Matriz de parâmetros de 0 ou mais canais que serão fechados.</span><span class="sxs-lookup"><span data-stu-id="29143-259">Parameter array of 0 or more channels to be closed.</span></span></param>
        <summary><span data-ttu-id="29143-260">Conclui a E/S (Entrada/Saída) para um arquivo aberto usando a função <see langword="FileOpen" />.</span><span class="sxs-lookup"><span data-stu-id="29143-260">Concludes input/output (I/O) to a file opened using the <see langword="FileOpen" /> function.</span></span> <span data-ttu-id="29143-261"><see langword="My" /> oferece maior produtividade e desempenho em operações de E/S de arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-261"><see langword="My" /> gives you better productivity and performance in file I/O operations.</span></span> <span data-ttu-id="29143-262">Consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> para obter mais informações.</span><span class="sxs-lookup"><span data-stu-id="29143-262">See <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> for more information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29143-263">O `FileClose` função é fornecida para compatibilidade com versões anteriores e pode afetar o desempenho.</span><span class="sxs-lookup"><span data-stu-id="29143-263">The `FileClose` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="29143-264">Para aplicativos não herdadas, o `My.Computer.FileSystem` objeto fornece um melhor desempenho.</span><span class="sxs-lookup"><span data-stu-id="29143-264">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="29143-265">Para obter mais informações, confira [Como: Ler texto de arquivos com um StreamReader](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-text-from-files-with-a-streamreader.md), [como: Gravar texto em arquivos com um StreamWriter](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files-with-a-streamwriter.md), e [passo a passo: Manipulando arquivos e diretórios no Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/walkthrough-manipulating-files-and-directories.md).</span><span class="sxs-lookup"><span data-stu-id="29143-265">For more information, see [How to: Read Text from Files with a StreamReader](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-text-from-files-with-a-streamreader.md), [How to: Write Text to Files with a StreamWriter](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files-with-a-streamwriter.md), and [Walkthrough: Manipulating Files and Directories in Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/walkthrough-manipulating-files-and-directories.md).</span></span>  
  
 <span data-ttu-id="29143-266">Se você omitir `FileNumbers`, todos os arquivos ativos abertos pelo `FileOpen` função são fechados.</span><span class="sxs-lookup"><span data-stu-id="29143-266">If you omit `FileNumbers`, all active files opened by the `FileOpen` function are closed.</span></span>  
  
 <span data-ttu-id="29143-267">Quando você fecha arquivos abertos para `Output` ou `Append`, o buffer final da saída é gravado no buffer de sistema operacional para esse arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-267">When you close files that were opened for `Output` or `Append`, the final buffer of output is written to the operating system buffer for that file.</span></span> <span data-ttu-id="29143-268">Todos os buffers espaço associado fechado arquivo seja liberado.</span><span class="sxs-lookup"><span data-stu-id="29143-268">All buffer space associated with the closed file is released.</span></span>  
  
 <span data-ttu-id="29143-269">Quando o `FileClose` função é executada, a associação de um arquivo com seu arquivo número termina.</span><span class="sxs-lookup"><span data-stu-id="29143-269">When the `FileClose` function is executed, the association of a file with its file number ends.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29143-270">Este exemplo usa o `FileClose` função para fechar um arquivo aberto para `Input`.</span><span class="sxs-lookup"><span data-stu-id="29143-270">This example uses the `FileClose` function to close a file opened for `Input`.</span></span>  
  
 [!code-vb[VbVbalrCatRef#69](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#69)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="29143-271"><paramref name="FileNumber" /> não existe.</span><span class="sxs-lookup"><span data-stu-id="29143-271"><paramref name="FileNumber" /> does not exist.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Reset" />
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/end-statement.md"><span data-ttu-id="29143-272">Instrução End</span><span class="sxs-lookup"><span data-stu-id="29143-272">End Statement</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/stop-statement.md"><span data-ttu-id="29143-273">Instrução Stop (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="29143-273">Stop Statement (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md"><span data-ttu-id="29143-274">Access de arquivo com o Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-274">File Access with Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FileCopy">
      <MemberSignature Language="C#" Value="public static void FileCopy (string Source, string Destination);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileCopy(string Source, string Destination) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileCopy(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileCopy (Source As String, Destination As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void FileCopy(System::String ^ Source, System::String ^ Destination);" />
      <MemberSignature Language="F#" Value="static member FileCopy : string * string -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileCopy (Source, Destination)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Source" Type="System.String" />
        <Parameter Name="Destination" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Source"><span data-ttu-id="29143-275">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-275">Required.</span></span> <span data-ttu-id="29143-276">Uma expressão de cadeia de caracteres que especifica o nome do arquivo a ser copiado.</span><span class="sxs-lookup"><span data-stu-id="29143-276">A string expression that specifies the name of the file to be copied.</span></span> <span data-ttu-id="29143-277"><paramref name="Source" /> pode incluir o diretório ou a pasta e a unidade do arquivo de origem.</span><span class="sxs-lookup"><span data-stu-id="29143-277"><paramref name="Source" /> may include the directory or folder, and drive, of the source file.</span></span></param>
        <param name="Destination"><span data-ttu-id="29143-278">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-278">Required.</span></span> <span data-ttu-id="29143-279">Uma expressão de cadeia de caracteres que especifica o nome do arquivo de destino.</span><span class="sxs-lookup"><span data-stu-id="29143-279">A string expression that specifies the destination file name.</span></span> <span data-ttu-id="29143-280"><paramref name="Destination" /> pode incluir o diretório ou a pasta e a unidade do arquivo de destino.</span><span class="sxs-lookup"><span data-stu-id="29143-280"><paramref name="Destination" /> may include the directory or folder, and drive, of the destination file.</span></span></param>
        <summary><span data-ttu-id="29143-281">Copia um arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-281">Copies a file.</span></span> <span data-ttu-id="29143-282">O <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> oferece maior produtividade e desempenho em operações de E/S de arquivo que <see langword="FileCopy" />.</span><span class="sxs-lookup"><span data-stu-id="29143-282">The <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> gives you better productivity and performance in file I/O operations than <see langword="FileCopy" />.</span></span> <span data-ttu-id="29143-283">Consulte <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String)" /> para obter mais informações.</span><span class="sxs-lookup"><span data-stu-id="29143-283">See <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String)" /> for more information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29143-284">Se você tentar usar o `FileCopy` de função em um arquivo aberto, ocorrerá um erro.</span><span class="sxs-lookup"><span data-stu-id="29143-284">If you try to use the `FileCopy` function on a currently open file, an error occurs.</span></span>  
  
 <span data-ttu-id="29143-285">`FileCopy` requer confiança total para trabalhar na unidade local.</span><span class="sxs-lookup"><span data-stu-id="29143-285">`FileCopy` requires full trust to work on the local drive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29143-286">Este exemplo usa o `FileCopy` função para copiar um arquivo para outro.</span><span class="sxs-lookup"><span data-stu-id="29143-286">This example uses the `FileCopy` function to copy one file to another.</span></span> <span data-ttu-id="29143-287">Para fins deste exemplo, suponha que `SrcFile` é um arquivo que contém dados.</span><span class="sxs-lookup"><span data-stu-id="29143-287">For purposes of this example, assume that `SrcFile` is a file that contains data.</span></span>  
  
 [!code-vb[VbVbalrCatRef#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="29143-288"><paramref name="Source" /> ou <paramref name="Destination" /> é inválido ou não foi especificado.</span><span class="sxs-lookup"><span data-stu-id="29143-288"><paramref name="Source" /> or <paramref name="Destination" /> is invalid or not specified.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="29143-289">O arquivo já está aberto.</span><span class="sxs-lookup"><span data-stu-id="29143-289">File is already open.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="29143-290">Arquivo inexistente.</span><span class="sxs-lookup"><span data-stu-id="29143-290">File does not exist.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Kill(System.String)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
        <altmember cref="T:System.IO.FileNotFoundException" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-create-a-copy-of-a-file-in-a-different-directory.md"><span data-ttu-id="29143-291">Como criar uma cópia de um arquivo em um diretório diferente no Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-291">How to: Create a Copy of a File in a Different Directory in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-create-a-copy-of-a-file-in-the-same-directory.md"><span data-ttu-id="29143-292">Como criar uma cópia de um arquivo no mesmo diretório no Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-292">How to: Create a Copy of a File in the Same Directory in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-copy-a-directory-to-another-directory.md"><span data-ttu-id="29143-293">Como copiar um diretório para outro diretório no Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-293">How to: Copy a Directory to Another Directory in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FileDateTime">
      <MemberSignature Language="C#" Value="public static DateTime FileDateTime (string PathName);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype System.DateTime FileDateTime(string PathName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileDateTime(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FileDateTime (PathName As String) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime FileDateTime(System::String ^ PathName);" />
      <MemberSignature Language="F#" Value="static member FileDateTime : string -&gt; DateTime" Usage="Microsoft.VisualBasic.FileSystem.FileDateTime PathName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="PathName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="PathName"><span data-ttu-id="29143-294">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-294">Required.</span></span> <span data-ttu-id="29143-295">Uma expressão de cadeia de caracteres que especifica um nome de arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-295">A string expression that specifies a file name.</span></span> <span data-ttu-id="29143-296"><paramref name="PathName" /> pode incluir o diretório ou a pasta, bem como a unidade.</span><span class="sxs-lookup"><span data-stu-id="29143-296"><paramref name="PathName" /> may include the directory or folder, and the drive.</span></span></param>
        <summary><span data-ttu-id="29143-297">Retorna um valor <see langword="Date" /> que indica a data e hora em que ocorreu a gravação em um arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-297">Returns a <see langword="Date" /> value that indicates the date and time a file was written to.</span></span> <span data-ttu-id="29143-298">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FileDateTime" />.</span><span class="sxs-lookup"><span data-stu-id="29143-298">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileDateTime" />.</span></span> <span data-ttu-id="29143-299">Para obter mais informações, consulte <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)" />.</span><span class="sxs-lookup"><span data-stu-id="29143-299">For more information, see <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)" /></span></span></summary>
        <returns><span data-ttu-id="29143-300">Retorna um valor <see langword="Date" /> que indica a data e hora em que um arquivo foi criado ou modificado pela última vez.</span><span class="sxs-lookup"><span data-stu-id="29143-300"><see langword="Date" /> value that indicates the date and time a file was created or last modified.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="29143-301">Este exemplo usa o `FileDateTime` função para determinar a data e hora em que um arquivo foi criada ou modificado pela última vez.</span><span class="sxs-lookup"><span data-stu-id="29143-301">This example uses the `FileDateTime` function to determine the date and time a file was created or last modified.</span></span> <span data-ttu-id="29143-302">O formato de data e hora exibido se baseia nas configurações de localidade do sistema.</span><span class="sxs-lookup"><span data-stu-id="29143-302">The format of the date and time displayed is based on the locale settings of the system.</span></span>  
  
 [!code-vb[VbVbalrCatRef#34](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#34)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="29143-303"><paramref name="PathName" /> é inválido ou contém caracteres curinga.</span><span class="sxs-lookup"><span data-stu-id="29143-303"><paramref name="PathName" /> is invalid or contains wildcards.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="29143-304">O arquivo de destino não existe.</span><span class="sxs-lookup"><span data-stu-id="29143-304">Target file does not exist.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileLen(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.FileNotFoundException" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md"><span data-ttu-id="29143-305">Access de arquivo com o Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-305">File Access with Visual Basic</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="FileGet">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="29143-306">Lê dados de um arquivo aberto de disco em uma variável.</span><span class="sxs-lookup"><span data-stu-id="29143-306">Reads data from an open disk file into a variable.</span></span> <span data-ttu-id="29143-307">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FileGet" />.</span><span class="sxs-lookup"><span data-stu-id="29143-307">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span></span> <span data-ttu-id="29143-308">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="29143-308">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FileGet">
      <MemberSignature Language="C#" Value="public static void FileGet (int FileNumber, ref bool Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGet(int32 FileNumber, bool&amp; Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Boolean@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGet (FileNumber As Integer, ByRef Value As Boolean, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FileGet : int *  * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileGet (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Boolean" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="29143-309">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-309">Required.</span></span> <span data-ttu-id="29143-310">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="29143-310">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="29143-311">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-311">Required.</span></span> <span data-ttu-id="29143-312">Nome de variável válido no qual os dados são lidos.</span><span class="sxs-lookup"><span data-stu-id="29143-312">Valid variable name into which data is read.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="29143-313">Opcional.</span><span class="sxs-lookup"><span data-stu-id="29143-313">Optional.</span></span> <span data-ttu-id="29143-314">Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a leitura começa.</span><span class="sxs-lookup"><span data-stu-id="29143-314">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span></span></param>
        <summary><span data-ttu-id="29143-315">Lê dados de um arquivo aberto de disco em uma variável.</span><span class="sxs-lookup"><span data-stu-id="29143-315">Reads data from an open disk file into a variable.</span></span> <span data-ttu-id="29143-316">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FileGet" />.</span><span class="sxs-lookup"><span data-stu-id="29143-316">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span></span> <span data-ttu-id="29143-317">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="29143-317">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /></span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29143-318">`FileGet` só é válido em `Random` e `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="29143-318">`FileGet` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="29143-319">Dados lidos com `FileGet` geralmente são gravados em um arquivo com `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="29143-319">Data read with `FileGet` is usually written to a file with `FilePut`.</span></span>  
  
 <span data-ttu-id="29143-320">O primeiro registro ou byte em um arquivo está na posição 1, o segundo registro ou byte está na posição 2 e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="29143-320">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="29143-321">Se você omitir `RecordNumber`, o próximo registro ou byte após a última `FileGet` ou `FilePut` função (ou apontada pela última `Seek` função) é lido.</span><span class="sxs-lookup"><span data-stu-id="29143-321">If you omit `RecordNumber`, the next record or byte following the last `FileGet` or `FilePut` function (or pointed to by the last `Seek` function) is read.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="29143-322">Ao ler de arquivos, não tome decisões sobre o conteúdo de um arquivo com base na extensão de nome de arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-322">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="29143-323">Por exemplo, um arquivo chamado Form1.vb não pode ser um arquivo de origem do Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="29143-323">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="29143-324">Modo aleatório</span><span class="sxs-lookup"><span data-stu-id="29143-324">Random Mode</span></span>  
 <span data-ttu-id="29143-325">Para arquivos abertos no `Random` modo, as seguintes regras se aplicam:</span><span class="sxs-lookup"><span data-stu-id="29143-325">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="29143-326">Se o comprimento dos dados que está sendo lidos for menor que o comprimento especificado na `RecordLength` cláusula do `FileOpen` função, `FileGet` lê registros subsequentes em limites de comprimento de registro.</span><span class="sxs-lookup"><span data-stu-id="29143-326">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FileGet` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="29143-327">O espaço entre o final de um registro e o início do próximo registro é preenchido com o conteúdo existente no buffer de arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-327">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="29143-328">Como a quantidade de dados de preenchimento não pode ser determinada com certeza, geralmente é uma boa ideia ter o comprimento do registro corresponde ao tamanho dos dados que está sendo lidos.</span><span class="sxs-lookup"><span data-stu-id="29143-328">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="29143-329">Por padrão, se a variável que está sendo lida é uma cadeia de caracteres, `FileGet` lê um descritor de dois bytes que contém o comprimento da cadeia de caracteres e, em seguida, lê os dados que vão para a variável.</span><span class="sxs-lookup"><span data-stu-id="29143-329">By default, if the variable being read into is a string, `FileGet` reads a two-byte descriptor that contains the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="29143-330">Portanto, o comprimento do registro especificado pelo `RecordLength` cláusula do `FileOpen` função deve ser pelo menos dois bytes maior do que o comprimento real da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="29143-330">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="29143-331">Visual Basic 6.0 e versões anteriores dão suporte a cadeias de caracteres de comprimento fixo; Quando colocado em um arquivo, o descritor de comprimento não é gravado.</span><span class="sxs-lookup"><span data-stu-id="29143-331">Visual Basic 6.0 and earlier versions support fixed-length strings; when put to a file, the length descriptor is not written.</span></span> <span data-ttu-id="29143-332">Se você deseja ler uma cadeia de caracteres sem o descritor, você deve passar `True` para o `StringIsFixedLength` parâmetro e a cadeia de caracteres lida deve ter o tamanho correto.</span><span class="sxs-lookup"><span data-stu-id="29143-332">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="29143-333">Se a variável que está sendo lida é uma matriz, você pode optar por ler um descritor para o tamanho e a dimensão da matriz.</span><span class="sxs-lookup"><span data-stu-id="29143-333">If the variable being read into is an array, you can choose whether to read a descriptor for the size and dimension of the array.</span></span> <span data-ttu-id="29143-334">Para gravar o descritor, defina as `ArrayIsDynamic` parâmetro para `True`.</span><span class="sxs-lookup"><span data-stu-id="29143-334">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="29143-335">Ao ler a matriz, você precisa coincidir com a forma que de matriz foi escrita.</span><span class="sxs-lookup"><span data-stu-id="29143-335">When reading the array, you have to match the way the array was written.</span></span> <span data-ttu-id="29143-336">Se ele foi gravado com o descritor, você precisará ler o descritor.</span><span class="sxs-lookup"><span data-stu-id="29143-336">If it was written with the descriptor, you have to read the descriptor.</span></span> <span data-ttu-id="29143-337">Se o descritor não for usado, o tamanho e limites da matriz passaram para `FileGet` determinar o que ler.</span><span class="sxs-lookup"><span data-stu-id="29143-337">If the descriptor is not used, the size and bounds of the array passed into `FileGet` determine what to read.</span></span>  
  
     <span data-ttu-id="29143-338">O descritor especifica a classificação de matriz, o tamanho e os limites inferiores para cada classificação.</span><span class="sxs-lookup"><span data-stu-id="29143-338">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="29143-339">Seu comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="29143-339">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="29143-340">O comprimento do registro especificado pelo `RecordLength` parâmetro no `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessário para gravar os dados de matriz e o descritor de matriz.</span><span class="sxs-lookup"><span data-stu-id="29143-340">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="29143-341">Por exemplo, a seguinte declaração de matriz requer 218 bytes quando a matriz é gravada no disco.</span><span class="sxs-lookup"><span data-stu-id="29143-341">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#21)]  
  
     <span data-ttu-id="29143-342">218 bytes são distribuídos da seguinte maneira:</span><span class="sxs-lookup"><span data-stu-id="29143-342">The 218 bytes are distributed as follows:</span></span>  
  
    -   <span data-ttu-id="29143-343">18 bytes para o descritor: (2 + 8 \* 2)</span><span class="sxs-lookup"><span data-stu-id="29143-343">18 bytes for the descriptor: (2 + 8 \* 2)</span></span>  
  
    -   <span data-ttu-id="29143-344">200 bytes para os dados: (5 \* 10 \* 4).</span><span class="sxs-lookup"><span data-stu-id="29143-344">200 bytes for the data: (5 \* 10 \* 4).</span></span>  
  
-   <span data-ttu-id="29143-345">Se a variável que está sendo lida for qualquer outro tipo de variável (não uma cadeia de caracteres de comprimento variável ou um objeto), `FileGet` lê apenas os dados da variável.</span><span class="sxs-lookup"><span data-stu-id="29143-345">If the variable being read into is any other type of variable (not a variable-length string or an object), `FileGet` reads only the variable data.</span></span> <span data-ttu-id="29143-346">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual ao comprimento dos dados que está sendo lidos.</span><span class="sxs-lookup"><span data-stu-id="29143-346">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being read.</span></span>  
  
-   <span data-ttu-id="29143-347">`FileGet` lê os elementos de estruturas como se cada um estava sendo lido individualmente, exceto que não há nenhum preenchimento entre elementos.</span><span class="sxs-lookup"><span data-stu-id="29143-347">`FileGet` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="29143-348">No disco, uma matriz dinâmica em um tipo definido pelo usuário (escritos com `FilePut`) é prefixado por um descritor cujo comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="29143-348">On disk, a dynamic array in a user-defined type (written with `FilePut`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="29143-349">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessários para ler os elementos individuais.</span><span class="sxs-lookup"><span data-stu-id="29143-349">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements.</span></span> <span data-ttu-id="29143-350">Isso inclui qualquer matrizes e seus descritores.</span><span class="sxs-lookup"><span data-stu-id="29143-350">This includes any arrays and their descriptors.</span></span> <span data-ttu-id="29143-351">O `VBFixedString` atributo pode ser aplicado a campos de cadeia de caracteres em estruturas para indicar o tamanho de uma cadeia de caracteres quando gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="29143-351">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of a string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="29143-352">Modo binário</span><span class="sxs-lookup"><span data-stu-id="29143-352">Binary Mode</span></span>  
 <span data-ttu-id="29143-353">Para arquivos abertos no `Binary` modo, a maioria do `Random` modo regras se aplicam, com algumas exceções.</span><span class="sxs-lookup"><span data-stu-id="29143-353">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="29143-354">As seguintes regras para arquivos abertos no `Binary` modo são diferentes das regras para `Random` modo:</span><span class="sxs-lookup"><span data-stu-id="29143-354">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="29143-355">A cláusula `RecordLength` na função de `FileOpen` não está em vigor.</span><span class="sxs-lookup"><span data-stu-id="29143-355">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="29143-356">`FileGet` lê todas as variáveis do disco de maneira contígua; ou seja, sem nenhum preenchimento entre registros.</span><span class="sxs-lookup"><span data-stu-id="29143-356">`FileGet` reads all variables from disk contiguously; that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="29143-357">Para qualquer matriz que não seja uma matriz em uma estrutura, `FileGet` lê apenas os dados.</span><span class="sxs-lookup"><span data-stu-id="29143-357">For any array other than an array in a structure, `FileGet` reads only the data.</span></span> <span data-ttu-id="29143-358">Nenhum descritor é lido.</span><span class="sxs-lookup"><span data-stu-id="29143-358">No descriptor is read.</span></span>  
  
-   <span data-ttu-id="29143-359">`FileGet` lê cadeias de caracteres de comprimento variável que não são elementos das estruturas sem esperar o descritor de dois bytes de comprimento.</span><span class="sxs-lookup"><span data-stu-id="29143-359">`FileGet` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="29143-360">O número de bytes lidos é igual ao número de caracteres já na cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="29143-360">The number of bytes read equals the number of characters already in the string.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="29143-361">Leitura de um arquivo usando o`FileGet` função requer `Read` acessar do <xref:System.Security.Permissions.FileIOPermissionAccess> enumeração.</span><span class="sxs-lookup"><span data-stu-id="29143-361">Reading from a file by using the`FileGet` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="29143-362"><paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</span><span class="sxs-lookup"><span data-stu-id="29143-362"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="29143-363">O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="29143-363">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/reading-from-files.md"><span data-ttu-id="29143-364">Lendo a partir de arquivos no Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-364">Reading from Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/writing-to-files.md"><span data-ttu-id="29143-365">Gravando em arquivos no Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-365">Writing to Files in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FileGet">
      <MemberSignature Language="C#" Value="public static void FileGet (int FileNumber, ref byte Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGet(int32 FileNumber, unsigned int8&amp; Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Byte@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGet (FileNumber As Integer, ByRef Value As Byte, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FileGet : int *  * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileGet (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Byte" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="29143-366">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-366">Required.</span></span> <span data-ttu-id="29143-367">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="29143-367">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="29143-368">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-368">Required.</span></span> <span data-ttu-id="29143-369">Nome de variável válido no qual os dados são lidos.</span><span class="sxs-lookup"><span data-stu-id="29143-369">Valid variable name into which data is read.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="29143-370">Opcional.</span><span class="sxs-lookup"><span data-stu-id="29143-370">Optional.</span></span> <span data-ttu-id="29143-371">Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a leitura começa.</span><span class="sxs-lookup"><span data-stu-id="29143-371">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span></span></param>
        <summary><span data-ttu-id="29143-372">Lê dados de um arquivo aberto de disco em uma variável.</span><span class="sxs-lookup"><span data-stu-id="29143-372">Reads data from an open disk file into a variable.</span></span> <span data-ttu-id="29143-373">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FileGet" />.</span><span class="sxs-lookup"><span data-stu-id="29143-373">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span></span> <span data-ttu-id="29143-374">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="29143-374">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29143-375">`FileGet` só é válido em `Random` e `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="29143-375">`FileGet` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="29143-376">Dados lidos com `FileGet` geralmente são gravados em um arquivo com `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="29143-376">Data read with `FileGet` is usually written to a file with `FilePut`.</span></span>  
  
 <span data-ttu-id="29143-377">O primeiro registro ou byte em um arquivo está na posição 1, o segundo registro ou byte está na posição 2 e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="29143-377">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="29143-378">Se você omitir `RecordNumber`, o próximo registro ou byte após a última `FileGet` ou `FilePut` função (ou apontada pela última `Seek` função) é lido.</span><span class="sxs-lookup"><span data-stu-id="29143-378">If you omit `RecordNumber`, the next record or byte following the last `FileGet` or `FilePut` function (or pointed to by the last `Seek` function) is read.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="29143-379">Ao ler de arquivos, não tome decisões sobre o conteúdo de um arquivo com base na extensão de nome de arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-379">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="29143-380">Por exemplo, um arquivo chamado Form1.vb não pode ser um arquivo de origem do Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="29143-380">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="29143-381">Modo aleatório</span><span class="sxs-lookup"><span data-stu-id="29143-381">Random Mode</span></span>  
 <span data-ttu-id="29143-382">Para arquivos abertos no `Random` modo, as seguintes regras se aplicam:</span><span class="sxs-lookup"><span data-stu-id="29143-382">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="29143-383">Se o comprimento dos dados que está sendo lidos for menor que o comprimento especificado na `RecordLength` cláusula do `FileOpen` função, `FileGet` lê registros subsequentes em limites de comprimento de registro.</span><span class="sxs-lookup"><span data-stu-id="29143-383">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FileGet` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="29143-384">O espaço entre o final de um registro e o início do próximo registro é preenchido com o conteúdo existente no buffer de arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-384">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="29143-385">Como a quantidade de dados de preenchimento não pode ser determinada com certeza, geralmente é uma boa ideia ter o comprimento do registro corresponde ao tamanho dos dados que está sendo lidos.</span><span class="sxs-lookup"><span data-stu-id="29143-385">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="29143-386">Por padrão, se a variável que está sendo lida é uma cadeia de caracteres, `FileGet` lê um descritor de dois bytes que contém o comprimento da cadeia de caracteres e, em seguida, lê os dados que vão para a variável.</span><span class="sxs-lookup"><span data-stu-id="29143-386">By default, if the variable being read into is a string, `FileGet` reads a two-byte descriptor that contains the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="29143-387">Portanto, o comprimento do registro especificado pelo `RecordLength` cláusula do `FileOpen` função deve ser pelo menos dois bytes maior do que o comprimento real da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="29143-387">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="29143-388">Visual Basic 6.0 e versões anteriores dão suporte a cadeias de caracteres de comprimento fixo; Quando colocado em um arquivo, o descritor de comprimento não é gravado.</span><span class="sxs-lookup"><span data-stu-id="29143-388">Visual Basic 6.0 and earlier versions support fixed-length strings; when put to a file, the length descriptor is not written.</span></span> <span data-ttu-id="29143-389">Se você deseja ler uma cadeia de caracteres sem o descritor, você deve passar `True` para o `StringIsFixedLength` parâmetro e a cadeia de caracteres lida deve ter o tamanho correto.</span><span class="sxs-lookup"><span data-stu-id="29143-389">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="29143-390">Se a variável que está sendo lida é uma matriz, você pode optar por ler um descritor para o tamanho e a dimensão da matriz.</span><span class="sxs-lookup"><span data-stu-id="29143-390">If the variable being read into is an array, you can choose whether to read a descriptor for the size and dimension of the array.</span></span> <span data-ttu-id="29143-391">Para gravar o descritor, defina as `ArrayIsDynamic` parâmetro para `True`.</span><span class="sxs-lookup"><span data-stu-id="29143-391">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="29143-392">Ao ler a matriz, você precisa coincidir com a forma que de matriz foi escrita.</span><span class="sxs-lookup"><span data-stu-id="29143-392">When reading the array, you have to match the way the array was written.</span></span> <span data-ttu-id="29143-393">Se ele foi gravado com o descritor, você precisará ler o descritor.</span><span class="sxs-lookup"><span data-stu-id="29143-393">If it was written with the descriptor, you have to read the descriptor.</span></span> <span data-ttu-id="29143-394">Se o descritor não for usado.</span><span class="sxs-lookup"><span data-stu-id="29143-394">If the descriptor is not used.</span></span> <span data-ttu-id="29143-395">Em seguida, o tamanho e limites da matriz passaram para `FileGet` determinar o que ler.</span><span class="sxs-lookup"><span data-stu-id="29143-395">Then the size and bounds of the array passed into `FileGet` determine what to read.</span></span>  
  
     <span data-ttu-id="29143-396">O descritor especifica a classificação de matriz, o tamanho e os limites inferiores para cada classificação.</span><span class="sxs-lookup"><span data-stu-id="29143-396">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="29143-397">Seu comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="29143-397">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="29143-398">O comprimento do registro especificado pelo `RecordLength` parâmetro no `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessário para gravar os dados de matriz e o descritor de matriz.</span><span class="sxs-lookup"><span data-stu-id="29143-398">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="29143-399">Por exemplo, a seguinte declaração de matriz requer 218 bytes quando a matriz é gravada no disco.</span><span class="sxs-lookup"><span data-stu-id="29143-399">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#21)]  
  
     <span data-ttu-id="29143-400">218 bytes são distribuídos da seguinte maneira:</span><span class="sxs-lookup"><span data-stu-id="29143-400">The 218 bytes are distributed as follows:</span></span>  
  
    -   <span data-ttu-id="29143-401">18 bytes para o descritor: (2 + 8 \* 2)</span><span class="sxs-lookup"><span data-stu-id="29143-401">18 bytes for the descriptor: (2 + 8 \* 2)</span></span>  
  
    -   <span data-ttu-id="29143-402">200 bytes para os dados: (5 \* 10 \* 4).</span><span class="sxs-lookup"><span data-stu-id="29143-402">200 bytes for the data: (5 \* 10 \* 4).</span></span>  
  
-   <span data-ttu-id="29143-403">Se a variável que está sendo lida for qualquer outro tipo de variável (não uma cadeia de caracteres de comprimento variável ou um objeto), `FileGet` lê apenas os dados da variável.</span><span class="sxs-lookup"><span data-stu-id="29143-403">If the variable being read into is any other type of variable (not a variable-length string or an object), `FileGet` reads only the variable data.</span></span> <span data-ttu-id="29143-404">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual ao comprimento dos dados que está sendo lidos.</span><span class="sxs-lookup"><span data-stu-id="29143-404">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being read.</span></span>  
  
-   <span data-ttu-id="29143-405">`FileGet` lê os elementos de estruturas como se cada um estava sendo lido individualmente, exceto que não há nenhum preenchimento entre elementos.</span><span class="sxs-lookup"><span data-stu-id="29143-405">`FileGet` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="29143-406">No disco, uma matriz dinâmica em um tipo definido pelo usuário (escritos com `FilePut`) é prefixado por um descritor cujo comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="29143-406">On disk, a dynamic array in a user-defined type (written with `FilePut`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="29143-407">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessários para ler os elementos individuais.</span><span class="sxs-lookup"><span data-stu-id="29143-407">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements.</span></span> <span data-ttu-id="29143-408">Isso inclui qualquer matrizes e seus descritores.</span><span class="sxs-lookup"><span data-stu-id="29143-408">This includes any arrays and their descriptors.</span></span> <span data-ttu-id="29143-409">O `VBFixedString` atributo pode ser aplicado a campos de cadeia de caracteres em estruturas para indicar o tamanho de uma cadeia de caracteres quando gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="29143-409">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of a string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="29143-410">Modo binário</span><span class="sxs-lookup"><span data-stu-id="29143-410">Binary Mode</span></span>  
 <span data-ttu-id="29143-411">Para arquivos abertos no `Binary` modo, a maioria do `Random` modo regras se aplicam, com algumas exceções.</span><span class="sxs-lookup"><span data-stu-id="29143-411">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="29143-412">As seguintes regras para arquivos abertos no `Binary` modo são diferentes das regras para `Random` modo:</span><span class="sxs-lookup"><span data-stu-id="29143-412">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="29143-413">A cláusula `RecordLength` na função de `FileOpen` não está em vigor.</span><span class="sxs-lookup"><span data-stu-id="29143-413">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="29143-414">`FileGet` lê todas as variáveis do disco de maneira contígua; ou seja, sem nenhum preenchimento entre registros.</span><span class="sxs-lookup"><span data-stu-id="29143-414">`FileGet` reads all variables from disk contiguously; that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="29143-415">Para qualquer matriz que não seja uma matriz em uma estrutura, `FileGet` lê apenas os dados.</span><span class="sxs-lookup"><span data-stu-id="29143-415">For any array other than an array in a structure, `FileGet` reads only the data.</span></span> <span data-ttu-id="29143-416">Nenhum descritor é lido.</span><span class="sxs-lookup"><span data-stu-id="29143-416">No descriptor is read.</span></span>  
  
-   <span data-ttu-id="29143-417">`FileGet` lê cadeias de caracteres de comprimento variável que não são elementos das estruturas sem esperar o descritor de dois bytes de comprimento.</span><span class="sxs-lookup"><span data-stu-id="29143-417">`FileGet` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="29143-418">O número de bytes lidos é igual ao número de caracteres já na cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="29143-418">The number of bytes read equals the number of characters already in the string.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="29143-419">Leitura de um arquivo usando o `FileGet` função requer `Read` acessar do <xref:System.Security.Permissions.FileIOPermissionAccess> enumeração.</span><span class="sxs-lookup"><span data-stu-id="29143-419">Reading from a file by using the `FileGet` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="29143-420"><paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</span><span class="sxs-lookup"><span data-stu-id="29143-420"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="29143-421">O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="29143-421">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/reading-from-files.md"><span data-ttu-id="29143-422">Lendo a partir de arquivos no Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-422">Reading from Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/writing-to-files.md"><span data-ttu-id="29143-423">Gravando em arquivos no Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-423">Writing to Files in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FileGet">
      <MemberSignature Language="C#" Value="public static void FileGet (int FileNumber, ref char Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGet(int32 FileNumber, char&amp; Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Char@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGet (FileNumber As Integer, ByRef Value As Char, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FileGet : int *  * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileGet (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Char" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="29143-424">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-424">Required.</span></span> <span data-ttu-id="29143-425">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="29143-425">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="29143-426">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-426">Required.</span></span> <span data-ttu-id="29143-427">Nome de variável válido no qual os dados são lidos.</span><span class="sxs-lookup"><span data-stu-id="29143-427">Valid variable name into which data is read.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="29143-428">Opcional.</span><span class="sxs-lookup"><span data-stu-id="29143-428">Optional.</span></span> <span data-ttu-id="29143-429">Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a leitura começa.</span><span class="sxs-lookup"><span data-stu-id="29143-429">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span></span></param>
        <summary><span data-ttu-id="29143-430">Lê dados de um arquivo aberto de disco em uma variável.</span><span class="sxs-lookup"><span data-stu-id="29143-430">Reads data from an open disk file into a variable.</span></span> <span data-ttu-id="29143-431">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FileGet" />.</span><span class="sxs-lookup"><span data-stu-id="29143-431">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span></span> <span data-ttu-id="29143-432">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="29143-432">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29143-433">`FileGet` só é válido em `Random` e `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="29143-433">`FileGet` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="29143-434">Dados lidos com `FileGet` geralmente são gravados em um arquivo com `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="29143-434">Data read with `FileGet` is usually written to a file with `FilePut`.</span></span>  
  
 <span data-ttu-id="29143-435">O primeiro registro ou byte em um arquivo está na posição 1, o segundo registro ou byte está na posição 2 e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="29143-435">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="29143-436">Se você omitir `RecordNumber`, o próximo registro ou byte após a última `FileGet` ou `FilePut` função (ou apontada pela última `Seek` função) é lido.</span><span class="sxs-lookup"><span data-stu-id="29143-436">If you omit `RecordNumber`, the next record or byte following the last `FileGet` or `FilePut` function (or pointed to by the last `Seek` function) is read.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="29143-437">Ao ler de arquivos, não tome decisões sobre o conteúdo de um arquivo com base na extensão de nome de arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-437">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="29143-438">Por exemplo, um arquivo chamado Form1.vb não pode ser um arquivo de origem do Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="29143-438">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="29143-439">Modo aleatório</span><span class="sxs-lookup"><span data-stu-id="29143-439">Random Mode</span></span>  
 <span data-ttu-id="29143-440">Para arquivos abertos no `Random` modo, as seguintes regras se aplicam:</span><span class="sxs-lookup"><span data-stu-id="29143-440">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="29143-441">Se o comprimento dos dados que está sendo lidos for menor que o comprimento especificado na `RecordLength` cláusula do `FileOpen` função, `FileGet` lê registros subsequentes em limites de comprimento de registro.</span><span class="sxs-lookup"><span data-stu-id="29143-441">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FileGet` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="29143-442">O espaço entre o final de um registro e o início do próximo registro é preenchido com o conteúdo existente no buffer de arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-442">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="29143-443">Como a quantidade de dados de preenchimento não pode ser determinada com certeza, geralmente é uma boa ideia ter o comprimento do registro corresponde ao tamanho dos dados que está sendo lidos.</span><span class="sxs-lookup"><span data-stu-id="29143-443">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="29143-444">Por padrão, se a variável que está sendo lida é uma cadeia de caracteres, `FileGet` lê um descritor de dois bytes que contém o comprimento da cadeia de caracteres e, em seguida, lê os dados que vão para a variável.</span><span class="sxs-lookup"><span data-stu-id="29143-444">By default, if the variable being read into is a string, `FileGet` reads a two-byte descriptor that contains the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="29143-445">Portanto, o comprimento do registro especificado pelo `RecordLength` cláusula do `FileOpen` função deve ser pelo menos dois bytes maior do que o comprimento real da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="29143-445">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="29143-446">Visual Basic 6.0 e versões anteriores dão suporte a cadeias de caracteres de comprimento fixo; Quando colocado em um arquivo, o descritor de comprimento não é gravado.</span><span class="sxs-lookup"><span data-stu-id="29143-446">Visual Basic 6.0 and earlier versions support fixed-length strings; when put to a file, the length descriptor is not written.</span></span> <span data-ttu-id="29143-447">Se você deseja ler uma cadeia de caracteres sem o descritor, você deve passar `True` para o `StringIsFixedLength` parâmetro e a cadeia de caracteres lida deve ter o tamanho correto.</span><span class="sxs-lookup"><span data-stu-id="29143-447">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="29143-448">Se a variável que está sendo lida é uma matriz, você pode optar por ler um descritor para o tamanho e a dimensão da matriz.</span><span class="sxs-lookup"><span data-stu-id="29143-448">If the variable being read into is an array, you can choose whether to read a descriptor for the size and dimension of the array.</span></span> <span data-ttu-id="29143-449">Para gravar o descritor, defina as `ArrayIsDynamic` parâmetro para `True`.</span><span class="sxs-lookup"><span data-stu-id="29143-449">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="29143-450">Ao ler a matriz, você precisa coincidir com a forma que de matriz foi escrita.</span><span class="sxs-lookup"><span data-stu-id="29143-450">When reading the array, you have to match the way the array was written.</span></span> <span data-ttu-id="29143-451">Se ele foi gravado com o descritor, você precisará ler o descritor.</span><span class="sxs-lookup"><span data-stu-id="29143-451">If it was written with the descriptor, you have to read the descriptor.</span></span> <span data-ttu-id="29143-452">Se o descritor não for usado, o tamanho e limites da matriz passaram para `FileGet` determinar o que ler.</span><span class="sxs-lookup"><span data-stu-id="29143-452">If the descriptor is not used, the size and bounds of the array passed into `FileGet` determine what to read.</span></span>  
  
     <span data-ttu-id="29143-453">O descritor especifica a classificação de matriz, o tamanho e os limites inferiores para cada classificação.</span><span class="sxs-lookup"><span data-stu-id="29143-453">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="29143-454">Seu comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="29143-454">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="29143-455">O comprimento do registro especificado pelo `RecordLength` parâmetro no `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessário para gravar os dados de matriz e o descritor de matriz.</span><span class="sxs-lookup"><span data-stu-id="29143-455">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="29143-456">Por exemplo, a seguinte declaração de matriz requer 218 bytes quando a matriz é gravada no disco.</span><span class="sxs-lookup"><span data-stu-id="29143-456">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#21)]  
  
     <span data-ttu-id="29143-457">218 bytes são distribuídos da seguinte maneira:</span><span class="sxs-lookup"><span data-stu-id="29143-457">The 218 bytes are distributed as follows:</span></span>  
  
    -   <span data-ttu-id="29143-458">18 bytes para o descritor: (2 + 8 \* 2)</span><span class="sxs-lookup"><span data-stu-id="29143-458">18 bytes for the descriptor: (2 + 8 \* 2)</span></span>  
  
    -   <span data-ttu-id="29143-459">200 bytes para os dados: (5 \* 10 \* 4).</span><span class="sxs-lookup"><span data-stu-id="29143-459">200 bytes for the data: (5 \* 10 \* 4).</span></span>  
  
-   <span data-ttu-id="29143-460">Se a variável que está sendo lida for qualquer outro tipo de variável (não uma cadeia de caracteres de comprimento variável ou um objeto), `FileGet` lê apenas os dados da variável.</span><span class="sxs-lookup"><span data-stu-id="29143-460">If the variable being read into is any other type of variable (not a variable-length string or an object), `FileGet` reads only the variable data.</span></span> <span data-ttu-id="29143-461">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual ao comprimento dos dados que está sendo lidos.</span><span class="sxs-lookup"><span data-stu-id="29143-461">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being read.</span></span>  
  
-   <span data-ttu-id="29143-462">`FileGet` lê os elementos de estruturas como se cada um estava sendo lido individualmente, exceto que não há nenhum preenchimento entre elementos.</span><span class="sxs-lookup"><span data-stu-id="29143-462">`FileGet` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="29143-463">No disco, uma matriz dinâmica em um tipo definido pelo usuário (escritos com `FilePut`) é prefixado por um descritor cujo comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="29143-463">On disk, a dynamic array in a user-defined type (written with `FilePut`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="29143-464">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessários para ler os elementos individuais.</span><span class="sxs-lookup"><span data-stu-id="29143-464">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements.</span></span> <span data-ttu-id="29143-465">Isso inclui qualquer matrizes e seus descritores.</span><span class="sxs-lookup"><span data-stu-id="29143-465">This includes any arrays and their descriptors.</span></span> <span data-ttu-id="29143-466">O `VBFixedString` atributo pode ser aplicado a campos de cadeia de caracteres em estruturas para indicar o tamanho de uma cadeia de caracteres quando gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="29143-466">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of a string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="29143-467">Modo binário</span><span class="sxs-lookup"><span data-stu-id="29143-467">Binary Mode</span></span>  
 <span data-ttu-id="29143-468">Para arquivos abertos no `Binary` modo, a maioria do `Random` modo regras se aplicam, com algumas exceções.</span><span class="sxs-lookup"><span data-stu-id="29143-468">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="29143-469">As seguintes regras para arquivos abertos no `Binary` modo são diferentes das regras para `Random` modo:</span><span class="sxs-lookup"><span data-stu-id="29143-469">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="29143-470">A cláusula `RecordLength` na função de `FileOpen` não está em vigor.</span><span class="sxs-lookup"><span data-stu-id="29143-470">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="29143-471">`FileGet` lê todas as variáveis do disco de maneira contígua; ou seja, sem nenhum preenchimento entre registros.</span><span class="sxs-lookup"><span data-stu-id="29143-471">`FileGet` reads all variables from disk contiguously; that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="29143-472">Para qualquer matriz que não seja uma matriz em uma estrutura, `FileGet` lê apenas os dados.</span><span class="sxs-lookup"><span data-stu-id="29143-472">For any array other than an array in a structure, `FileGet` reads only the data.</span></span> <span data-ttu-id="29143-473">Nenhum descritor é lido.</span><span class="sxs-lookup"><span data-stu-id="29143-473">No descriptor is read.</span></span>  
  
-   <span data-ttu-id="29143-474">`FileGet` lê cadeias de caracteres de comprimento variável que não são elementos das estruturas sem esperar o descritor de dois bytes de comprimento.</span><span class="sxs-lookup"><span data-stu-id="29143-474">`FileGet` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="29143-475">O número de bytes lidos é igual ao número de caracteres já na cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="29143-475">The number of bytes read equals the number of characters already in the string.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="29143-476">Leitura de um arquivo usando o `FileGet` função requer `Read` acessar do <xref:System.Security.Permissions.FileIOPermissionAccess> enumeração.</span><span class="sxs-lookup"><span data-stu-id="29143-476">Reading from a file by using the `FileGet` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="29143-477"><paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</span><span class="sxs-lookup"><span data-stu-id="29143-477"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="29143-478">O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="29143-478">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/reading-from-files.md"><span data-ttu-id="29143-479">Lendo a partir de arquivos no Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-479">Reading from Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/writing-to-files.md"><span data-ttu-id="29143-480">Gravando em arquivos no Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-480">Writing to Files in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FileGet">
      <MemberSignature Language="C#" Value="public static void FileGet (int FileNumber, ref DateTime Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGet(int32 FileNumber, valuetype System.DateTime&amp; Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.DateTime@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGet (FileNumber As Integer, ByRef Value As DateTime, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FileGet : int *  * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileGet (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.DateTime" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="29143-481">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-481">Required.</span></span> <span data-ttu-id="29143-482">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="29143-482">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="29143-483">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-483">Required.</span></span> <span data-ttu-id="29143-484">Nome de variável válido no qual os dados são lidos.</span><span class="sxs-lookup"><span data-stu-id="29143-484">Valid variable name into which data is read.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="29143-485">Opcional.</span><span class="sxs-lookup"><span data-stu-id="29143-485">Optional.</span></span> <span data-ttu-id="29143-486">Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a leitura começa.</span><span class="sxs-lookup"><span data-stu-id="29143-486">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span></span></param>
        <summary><span data-ttu-id="29143-487">Lê dados de um arquivo aberto de disco em uma variável.</span><span class="sxs-lookup"><span data-stu-id="29143-487">Reads data from an open disk file into a variable.</span></span> <span data-ttu-id="29143-488">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FileGet" />.</span><span class="sxs-lookup"><span data-stu-id="29143-488">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span></span> <span data-ttu-id="29143-489">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="29143-489">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29143-490">`FileGet` só é válido em `Random` e `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="29143-490">`FileGet` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="29143-491">Dados lidos com `FileGet` geralmente são gravados em um arquivo com `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="29143-491">Data read with `FileGet` is usually written to a file with `FilePut`.</span></span>  
  
 <span data-ttu-id="29143-492">O primeiro registro ou byte em um arquivo está na posição 1, o segundo registro ou byte está na posição 2 e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="29143-492">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="29143-493">Se você omitir `RecordNumber`, o próximo registro ou byte após a última `FileGet` ou `FilePut` função (ou apontada pela última `Seek` função) é lido.</span><span class="sxs-lookup"><span data-stu-id="29143-493">If you omit `RecordNumber`, the next record or byte following the last `FileGet` or `FilePut` function (or pointed to by the last `Seek` function) is read.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="29143-494">Ao ler de arquivos, não tome decisões sobre o conteúdo de um arquivo com base na extensão de nome de arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-494">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="29143-495">Por exemplo, um arquivo chamado Form1.vb não pode ser um arquivo de origem do Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="29143-495">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="29143-496">Modo aleatório</span><span class="sxs-lookup"><span data-stu-id="29143-496">Random Mode</span></span>  
 <span data-ttu-id="29143-497">Para arquivos abertos no `Random` modo, as seguintes regras se aplicam:</span><span class="sxs-lookup"><span data-stu-id="29143-497">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="29143-498">Se o comprimento dos dados que está sendo lidos for menor que o comprimento especificado na `RecordLength` cláusula do `FileOpen` função,`FileGet` lê registros subsequentes em limites de comprimento de registro.</span><span class="sxs-lookup"><span data-stu-id="29143-498">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function,`FileGet` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="29143-499">O espaço entre o final de um registro e o início do próximo registro é preenchido com o conteúdo existente no buffer de arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-499">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="29143-500">Como a quantidade de dados de preenchimento não pode ser determinada com certeza, geralmente é uma boa ideia ter o comprimento do registro corresponde ao tamanho dos dados que está sendo lidos.</span><span class="sxs-lookup"><span data-stu-id="29143-500">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="29143-501">Por padrão, se a variável que está sendo lida é uma cadeia de caracteres, `FileGet` lê um descritor de dois bytes que contém o comprimento da cadeia de caracteres e, em seguida, lê os dados que vão para a variável.</span><span class="sxs-lookup"><span data-stu-id="29143-501">By default, if the variable being read into is a string, `FileGet` reads a two-byte descriptor that contains the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="29143-502">Portanto, o comprimento do registro especificado pelo `RecordLength` cláusula do `FileOpen` função deve ser pelo menos dois bytes maior do que o comprimento real da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="29143-502">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="29143-503">Visual Basic 6.0 e versões anteriores dão suporte a cadeias de caracteres de comprimento fixo; Quando colocado em um arquivo, o descritor de comprimento não é gravado.</span><span class="sxs-lookup"><span data-stu-id="29143-503">Visual Basic 6.0 and earlier versions support fixed-length strings; when put to a file, the length descriptor is not written.</span></span> <span data-ttu-id="29143-504">Se você deseja ler uma cadeia de caracteres sem o descritor, você deve passar `True` para o `StringIsFixedLength` parâmetro e a cadeia de caracteres lida deve ter o tamanho correto.</span><span class="sxs-lookup"><span data-stu-id="29143-504">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="29143-505">Se a variável que está sendo lida é uma matriz, você pode optar por ler um descritor para o tamanho e a dimensão da matriz.</span><span class="sxs-lookup"><span data-stu-id="29143-505">If the variable being read into is an array, you can choose whether to read a descriptor for the size and dimension of the array.</span></span> <span data-ttu-id="29143-506">Para gravar o descritor, defina as `ArrayIsDynamic` parâmetro para `True`.</span><span class="sxs-lookup"><span data-stu-id="29143-506">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="29143-507">Ao ler a matriz, você precisa coincidir com a forma que de matriz foi escrita.</span><span class="sxs-lookup"><span data-stu-id="29143-507">When reading the array, you have to match the way the array was written.</span></span> <span data-ttu-id="29143-508">Se ele foi gravado com o descritor, você precisará ler o descritor.</span><span class="sxs-lookup"><span data-stu-id="29143-508">If it was written with the descriptor, you have to read the descriptor.</span></span> <span data-ttu-id="29143-509">Se o descritor não for usado, o tamanho e limites da matriz passaram para `FileGet` determinar o que ler.</span><span class="sxs-lookup"><span data-stu-id="29143-509">If the descriptor is not used, the size and bounds of the array passed into `FileGet` determine what to read.</span></span>  
  
     <span data-ttu-id="29143-510">O descritor especifica a classificação de matriz, o tamanho e os limites inferiores para cada classificação.</span><span class="sxs-lookup"><span data-stu-id="29143-510">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="29143-511">Seu comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="29143-511">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="29143-512">O comprimento do registro especificado pelo `RecordLength` parâmetro no `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessário para gravar os dados de matriz e o descritor de matriz.</span><span class="sxs-lookup"><span data-stu-id="29143-512">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="29143-513">Por exemplo, a seguinte declaração de matriz requer 218 bytes quando a matriz é gravada no disco.</span><span class="sxs-lookup"><span data-stu-id="29143-513">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#21)]  
  
     <span data-ttu-id="29143-514">218 bytes são distribuídos da seguinte maneira:</span><span class="sxs-lookup"><span data-stu-id="29143-514">The 218 bytes are distributed as follows:</span></span>  
  
    -   <span data-ttu-id="29143-515">18 bytes para o descritor: (2 + 8 \* 2)</span><span class="sxs-lookup"><span data-stu-id="29143-515">18 bytes for the descriptor: (2 + 8 \* 2)</span></span>  
  
    -   <span data-ttu-id="29143-516">200 bytes para os dados: (5 \* 10 \* 4).</span><span class="sxs-lookup"><span data-stu-id="29143-516">200 bytes for the data: (5 \* 10 \* 4).</span></span>  
  
-   <span data-ttu-id="29143-517">Se a variável que está sendo lida for qualquer outro tipo de variável (não uma cadeia de caracteres de comprimento variável ou um objeto), `FileGet` lê apenas os dados da variável.</span><span class="sxs-lookup"><span data-stu-id="29143-517">If the variable being read into is any other type of variable (not a variable-length string or an object), `FileGet` reads only the variable data.</span></span> <span data-ttu-id="29143-518">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual ao comprimento dos dados que está sendo lidos.</span><span class="sxs-lookup"><span data-stu-id="29143-518">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being read.</span></span>  
  
-   <span data-ttu-id="29143-519">`FileGet` lê os elementos de estruturas como se cada um estava sendo lido individualmente, exceto que não há nenhum preenchimento entre elementos.</span><span class="sxs-lookup"><span data-stu-id="29143-519">`FileGet` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="29143-520">No disco, uma matriz dinâmica em um tipo definido pelo usuário (escritos com `FilePut`) é prefixado por um descritor cujo comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="29143-520">On disk, a dynamic array in a user-defined type (written with `FilePut`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="29143-521">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessários para ler os elementos individuais.</span><span class="sxs-lookup"><span data-stu-id="29143-521">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements.</span></span> <span data-ttu-id="29143-522">Isso inclui qualquer matrizes e seus descritores.</span><span class="sxs-lookup"><span data-stu-id="29143-522">This includes any arrays and their descriptors.</span></span> <span data-ttu-id="29143-523">O `VBFixedString` atributo pode ser aplicado a campos de cadeia de caracteres em estruturas para indicar o tamanho de uma cadeia de caracteres quando gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="29143-523">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of a string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="29143-524">Modo binário</span><span class="sxs-lookup"><span data-stu-id="29143-524">Binary Mode</span></span>  
 <span data-ttu-id="29143-525">Para arquivos abertos no `Binary` modo, a maioria do `Random` modo regras se aplicam, com algumas exceções.</span><span class="sxs-lookup"><span data-stu-id="29143-525">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="29143-526">As seguintes regras para arquivos abertos no `Binary` modo são diferentes das regras para `Random` modo:</span><span class="sxs-lookup"><span data-stu-id="29143-526">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="29143-527">A cláusula `RecordLength` na função de `FileOpen` não está em vigor.</span><span class="sxs-lookup"><span data-stu-id="29143-527">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="29143-528">`FileGet` lê todas as variáveis do disco de maneira contígua; ou seja, sem nenhum preenchimento entre registros.</span><span class="sxs-lookup"><span data-stu-id="29143-528">`FileGet` reads all variables from disk contiguously; that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="29143-529">Para qualquer matriz que não seja uma matriz em uma estrutura, `FileGet` lê apenas os dados.</span><span class="sxs-lookup"><span data-stu-id="29143-529">For any array other than an array in a structure, `FileGet` reads only the data.</span></span> <span data-ttu-id="29143-530">Nenhum descritor é lido.</span><span class="sxs-lookup"><span data-stu-id="29143-530">No descriptor is read.</span></span>  
  
-   <span data-ttu-id="29143-531">`FileGet` lê cadeias de caracteres de comprimento variável que não são elementos das estruturas sem esperar o descritor de dois bytes de comprimento.</span><span class="sxs-lookup"><span data-stu-id="29143-531">`FileGet` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="29143-532">O número de bytes lidos é igual ao número de caracteres já na cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="29143-532">The number of bytes read equals the number of characters already in the string.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="29143-533">Leitura de um arquivo usando o `FileGet` função requer `Read` acessar do <xref:System.Security.Permissions.FileIOPermissionAccess> enumeração.</span><span class="sxs-lookup"><span data-stu-id="29143-533">Reading from a file by using the `FileGet` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="29143-534"><paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</span><span class="sxs-lookup"><span data-stu-id="29143-534"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="29143-535">O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="29143-535">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/reading-from-files.md"><span data-ttu-id="29143-536">Lendo a partir de arquivos no Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-536">Reading from Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/writing-to-files.md"><span data-ttu-id="29143-537">Gravando em arquivos no Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-537">Writing to Files in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FileGet">
      <MemberSignature Language="C#" Value="public static void FileGet (int FileNumber, ref decimal Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGet(int32 FileNumber, valuetype System.Decimal&amp; Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Decimal@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGet (FileNumber As Integer, ByRef Value As Decimal, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FileGet : int *  * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileGet (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Decimal" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="29143-538">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-538">Required.</span></span> <span data-ttu-id="29143-539">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="29143-539">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="29143-540">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-540">Required.</span></span> <span data-ttu-id="29143-541">Nome de variável válido no qual os dados são lidos.</span><span class="sxs-lookup"><span data-stu-id="29143-541">Valid variable name into which data is read.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="29143-542">Opcional.</span><span class="sxs-lookup"><span data-stu-id="29143-542">Optional.</span></span> <span data-ttu-id="29143-543">Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a leitura começa.</span><span class="sxs-lookup"><span data-stu-id="29143-543">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span></span></param>
        <summary><span data-ttu-id="29143-544">Lê dados de um arquivo aberto de disco em uma variável.</span><span class="sxs-lookup"><span data-stu-id="29143-544">Reads data from an open disk file into a variable.</span></span> <span data-ttu-id="29143-545">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FileGet" />.</span><span class="sxs-lookup"><span data-stu-id="29143-545">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span></span> <span data-ttu-id="29143-546">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="29143-546">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29143-547">`FileGet` só é válido em `Random` e `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="29143-547">`FileGet` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="29143-548">Dados lidos com `FileGet` costumam ser gravados em um arquivo usando-se `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="29143-548">Data read with `FileGet` is usually written to a file by using `FilePut`.</span></span>  
  
 <span data-ttu-id="29143-549">O primeiro registro ou byte em um arquivo está na posição 1, o segundo registro ou byte está na posição 2 e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="29143-549">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="29143-550">Se você omitir `RecordNumber`, o próximo registro ou byte após a última `FileGet` ou `FilePut` função (ou apontada pela última `Seek` função) é lido.</span><span class="sxs-lookup"><span data-stu-id="29143-550">If you omit `RecordNumber`, the next record or byte following the last `FileGet` or `FilePut` function (or pointed to by the last `Seek` function) is read.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="29143-551">Ao ler de arquivos, não tome decisões sobre o conteúdo de um arquivo com base na extensão de nome de arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-551">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="29143-552">Por exemplo, um arquivo chamado Form1.vb não pode ser um arquivo de origem do Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="29143-552">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="29143-553">Modo aleatório</span><span class="sxs-lookup"><span data-stu-id="29143-553">Random Mode</span></span>  
 <span data-ttu-id="29143-554">Para arquivos abertos no `Random` modo, as seguintes regras se aplicam:</span><span class="sxs-lookup"><span data-stu-id="29143-554">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="29143-555">Se o comprimento dos dados que está sendo lidos for menor que o comprimento especificado na `RecordLength` cláusula do `FileOpen` função, `FileGet` lê registros subsequentes em limites de comprimento de registro.</span><span class="sxs-lookup"><span data-stu-id="29143-555">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FileGet` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="29143-556">O espaço entre o final de um registro e o início do próximo registro é preenchido com o conteúdo existente no buffer de arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-556">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="29143-557">Como a quantidade de dados de preenchimento não pode ser determinada com certeza, geralmente é uma boa ideia ter o comprimento do registro corresponde ao tamanho dos dados que está sendo lidos.</span><span class="sxs-lookup"><span data-stu-id="29143-557">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="29143-558">Por padrão, se a variável que está sendo lida é uma cadeia de caracteres, `FileGet` lê um descritor de dois bytes que contém o comprimento da cadeia de caracteres e, em seguida, lê os dados que vão para a variável.</span><span class="sxs-lookup"><span data-stu-id="29143-558">By default, if the variable being read into is a string, `FileGet` reads a two-byte descriptor that contains the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="29143-559">Portanto, o comprimento do registro especificado pelo `RecordLength` cláusula do `FileOpen` função deve ser pelo menos dois bytes maior do que o comprimento real da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="29143-559">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="29143-560">Visual Basic 6.0 e versões anteriores dão suporte a cadeias de caracteres de comprimento fixo; Quando colocado em um arquivo, o descritor de comprimento não é gravado.</span><span class="sxs-lookup"><span data-stu-id="29143-560">Visual Basic 6.0 and earlier versions support fixed-length strings; when put to a file, the length descriptor is not written.</span></span> <span data-ttu-id="29143-561">Se você deseja ler uma cadeia de caracteres sem o descritor, você deve passar `True` para o `StringIsFixedLength` parâmetro e a cadeia de caracteres lida deve ter o tamanho correto.</span><span class="sxs-lookup"><span data-stu-id="29143-561">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="29143-562">Se a variável que está sendo lida é uma matriz, você pode optar por ler um descritor para o tamanho e a dimensão da matriz.</span><span class="sxs-lookup"><span data-stu-id="29143-562">If the variable being read into is an array, you can choose whether to read a descriptor for the size and dimension of the array.</span></span> <span data-ttu-id="29143-563">Para gravar o descritor, defina as `ArrayIsDynamic` parâmetro para `True`.</span><span class="sxs-lookup"><span data-stu-id="29143-563">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="29143-564">Ao ler a matriz, você precisa coincidir com a forma que de matriz foi escrita.</span><span class="sxs-lookup"><span data-stu-id="29143-564">When reading the array, you have to match the way the array was written.</span></span> <span data-ttu-id="29143-565">Se ele foi gravado com o descritor, você precisará ler o descritor.</span><span class="sxs-lookup"><span data-stu-id="29143-565">If it was written with the descriptor, you have to read the descriptor.</span></span> <span data-ttu-id="29143-566">Se o descritor não for usado, o tamanho e limites da matriz passaram para `FileGet` determinar o que ler.</span><span class="sxs-lookup"><span data-stu-id="29143-566">If the descriptor is not used, the size and bounds of the array passed into `FileGet` determine what to read.</span></span>  
  
     <span data-ttu-id="29143-567">O descritor especifica a classificação de matriz, o tamanho e os limites inferiores para cada classificação.</span><span class="sxs-lookup"><span data-stu-id="29143-567">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="29143-568">Seu comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="29143-568">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="29143-569">O comprimento do registro especificado pelo `RecordLength` parâmetro no `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessário para gravar os dados de matriz e o descritor de matriz.</span><span class="sxs-lookup"><span data-stu-id="29143-569">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="29143-570">Por exemplo, a seguinte declaração de matriz requer 218 bytes quando a matriz é gravada no disco.</span><span class="sxs-lookup"><span data-stu-id="29143-570">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#21)]  
  
     <span data-ttu-id="29143-571">218 bytes são distribuídos da seguinte maneira:</span><span class="sxs-lookup"><span data-stu-id="29143-571">The 218 bytes are distributed as follows:</span></span>  
  
    -   <span data-ttu-id="29143-572">18 bytes para o descritor: (2 + 8 \* 2)</span><span class="sxs-lookup"><span data-stu-id="29143-572">18 bytes for the descriptor: (2 + 8 \* 2)</span></span>  
  
    -   <span data-ttu-id="29143-573">200 bytes para os dados: (5 \* 10 \* 4).</span><span class="sxs-lookup"><span data-stu-id="29143-573">200 bytes for the data: (5 \* 10 \* 4).</span></span>  
  
-   <span data-ttu-id="29143-574">Se a variável que está sendo lida for qualquer outro tipo de variável (não uma cadeia de caracteres de comprimento variável ou um objeto), `FileGet` lê apenas os dados da variável.</span><span class="sxs-lookup"><span data-stu-id="29143-574">If the variable being read into is any other type of variable (not a variable-length string or an object), `FileGet` reads only the variable data.</span></span> <span data-ttu-id="29143-575">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual ao comprimento dos dados que está sendo lidos.</span><span class="sxs-lookup"><span data-stu-id="29143-575">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being read.</span></span>  
  
-   <span data-ttu-id="29143-576">`FileGet` lê os elementos de estruturas como se cada um estava sendo lido individualmente, exceto que não há nenhum preenchimento entre elementos.</span><span class="sxs-lookup"><span data-stu-id="29143-576">`FileGet` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="29143-577">No disco, uma matriz dinâmica em um tipo definido pelo usuário (escritos com `FilePut`) é prefixado por um descritor cujo comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="29143-577">On disk, a dynamic array in a user-defined type (written with `FilePut`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="29143-578">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessários para ler os elementos individuais.</span><span class="sxs-lookup"><span data-stu-id="29143-578">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements.</span></span> <span data-ttu-id="29143-579">Isso inclui qualquer matrizes e seus descritores.</span><span class="sxs-lookup"><span data-stu-id="29143-579">This includes any arrays and their descriptors.</span></span> <span data-ttu-id="29143-580">O `VBFixedString` atributo pode ser aplicado a campos de cadeia de caracteres em estruturas para indicar o tamanho de uma cadeia de caracteres quando gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="29143-580">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of a string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="29143-581">Modo binário</span><span class="sxs-lookup"><span data-stu-id="29143-581">Binary Mode</span></span>  
 <span data-ttu-id="29143-582">Para arquivos abertos no `Binary` modo, a maioria do `Random` modo regras se aplicam, com algumas exceções.</span><span class="sxs-lookup"><span data-stu-id="29143-582">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="29143-583">As seguintes regras para arquivos abertos no `Binary` modo são diferentes das regras para `Random` modo:</span><span class="sxs-lookup"><span data-stu-id="29143-583">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="29143-584">A cláusula `RecordLength` na função de `FileOpen` não está em vigor.</span><span class="sxs-lookup"><span data-stu-id="29143-584">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="29143-585">`FileGet` lê todas as variáveis do disco de maneira contígua; ou seja, sem nenhum preenchimento entre registros.</span><span class="sxs-lookup"><span data-stu-id="29143-585">`FileGet` reads all variables from disk contiguously; that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="29143-586">Para qualquer matriz que não seja uma matriz em uma estrutura, `FileGet` lê apenas os dados.</span><span class="sxs-lookup"><span data-stu-id="29143-586">For any array other than an array in a structure, `FileGet` reads only the data.</span></span> <span data-ttu-id="29143-587">Nenhum descritor é lido.</span><span class="sxs-lookup"><span data-stu-id="29143-587">No descriptor is read.</span></span>  
  
-   <span data-ttu-id="29143-588">`FileGet` lê cadeias de caracteres de comprimento variável que não são elementos das estruturas sem esperar o descritor de dois bytes de comprimento.</span><span class="sxs-lookup"><span data-stu-id="29143-588">`FileGet` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="29143-589">O número de bytes lidos é igual ao número de caracteres já na cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="29143-589">The number of bytes read equals the number of characters already in the string.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="29143-590">Leitura de um arquivo usando o `FileGet` função requer `Read` acessar do <xref:System.Security.Permissions.FileIOPermissionAccess> enumeração.</span><span class="sxs-lookup"><span data-stu-id="29143-590">Reading from a file by using the `FileGet` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="29143-591"><paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</span><span class="sxs-lookup"><span data-stu-id="29143-591"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="29143-592">O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="29143-592">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/reading-from-files.md"><span data-ttu-id="29143-593">Lendo a partir de arquivos no Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-593">Reading from Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/writing-to-files.md"><span data-ttu-id="29143-594">Gravando em arquivos no Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-594">Writing to Files in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FileGet">
      <MemberSignature Language="C#" Value="public static void FileGet (int FileNumber, ref double Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGet(int32 FileNumber, float64&amp; Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Double@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGet (FileNumber As Integer, ByRef Value As Double, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FileGet : int *  * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileGet (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Double" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="29143-595">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-595">Required.</span></span> <span data-ttu-id="29143-596">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="29143-596">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="29143-597">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-597">Required.</span></span> <span data-ttu-id="29143-598">Nome de variável válido no qual os dados são lidos.</span><span class="sxs-lookup"><span data-stu-id="29143-598">Valid variable name into which data is read.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="29143-599">Opcional.</span><span class="sxs-lookup"><span data-stu-id="29143-599">Optional.</span></span> <span data-ttu-id="29143-600">Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a leitura começa.</span><span class="sxs-lookup"><span data-stu-id="29143-600">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span></span></param>
        <summary><span data-ttu-id="29143-601">Lê dados de um arquivo aberto de disco em uma variável.</span><span class="sxs-lookup"><span data-stu-id="29143-601">Reads data from an open disk file into a variable.</span></span> <span data-ttu-id="29143-602">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FileGet" />.</span><span class="sxs-lookup"><span data-stu-id="29143-602">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span></span> <span data-ttu-id="29143-603">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="29143-603">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29143-604">`FileGet` só é válido em `Random` e `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="29143-604">`FileGet` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="29143-605">Dados lidos com `FileGet` costumam ser gravados em um arquivo usando-se `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="29143-605">Data read with `FileGet` is usually written to a file by using `FilePut`.</span></span>  
  
 <span data-ttu-id="29143-606">O primeiro registro ou byte em um arquivo está na posição 1, o segundo registro ou byte está na posição 2 e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="29143-606">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="29143-607">Se você omitir `RecordNumber`, o próximo registro ou byte após a última `FileGet` ou `FilePut` função (ou apontada pela última `Seek` função) é lido.</span><span class="sxs-lookup"><span data-stu-id="29143-607">If you omit `RecordNumber`, the next record or byte following the last `FileGet` or `FilePut` function (or pointed to by the last `Seek` function) is read.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="29143-608">Ao ler de arquivos, não tome decisões sobre o conteúdo de um arquivo com base na extensão de nome de arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-608">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="29143-609">Por exemplo, um arquivo chamado Form1.vb não pode ser um arquivo de origem do Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="29143-609">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="29143-610">Modo aleatório</span><span class="sxs-lookup"><span data-stu-id="29143-610">Random Mode</span></span>  
 <span data-ttu-id="29143-611">Para arquivos abertos no `Random` modo, as seguintes regras se aplicam:</span><span class="sxs-lookup"><span data-stu-id="29143-611">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="29143-612">Se o comprimento dos dados que está sendo lidos for menor que o comprimento especificado na `RecordLength` cláusula do `FileOpen` função, `FileGet` lê registros subsequentes em limites de comprimento de registro.</span><span class="sxs-lookup"><span data-stu-id="29143-612">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FileGet` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="29143-613">O espaço entre o final de um registro e o início do próximo registro é preenchido com o conteúdo existente no buffer de arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-613">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="29143-614">Como a quantidade de dados de preenchimento não pode ser determinada com certeza, geralmente é uma boa ideia ter o comprimento do registro corresponde ao tamanho dos dados que está sendo lidos.</span><span class="sxs-lookup"><span data-stu-id="29143-614">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="29143-615">Por padrão, se a variável que está sendo lida é uma cadeia de caracteres, `FileGet` lê um descritor de dois bytes que contém o comprimento da cadeia de caracteres e, em seguida, lê os dados que vão para a variável.</span><span class="sxs-lookup"><span data-stu-id="29143-615">By default, if the variable being read into is a string, `FileGet` reads a two-byte descriptor that contains the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="29143-616">Portanto, o comprimento do registro especificado pelo `RecordLength` cláusula do `FileOpen` função deve ser pelo menos dois bytes maior do que o comprimento real da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="29143-616">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="29143-617">Visual Basic 6.0 e versões anteriores dão suporte a cadeias de caracteres de comprimento fixo; Quando colocado em um arquivo, o descritor de comprimento não é gravado.</span><span class="sxs-lookup"><span data-stu-id="29143-617">Visual Basic 6.0 and earlier versions support fixed-length strings; when put to a file, the length descriptor is not written.</span></span> <span data-ttu-id="29143-618">Se você deseja ler uma cadeia de caracteres sem o descritor, você deve passar `True` para o `StringIsFixedLength` parâmetro e a cadeia de caracteres lida deve ter o tamanho correto.</span><span class="sxs-lookup"><span data-stu-id="29143-618">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="29143-619">Se a variável que está sendo lida é uma matriz, você pode optar por ler um descritor para o tamanho e a dimensão da matriz.</span><span class="sxs-lookup"><span data-stu-id="29143-619">If the variable being read into is an array, you can choose whether to read a descriptor for the size and dimension of the array.</span></span> <span data-ttu-id="29143-620">Para gravar o descritor, defina as `ArrayIsDynamic` parâmetro para `True`.</span><span class="sxs-lookup"><span data-stu-id="29143-620">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="29143-621">Ao ler a matriz, você precisa coincidir com a forma que de matriz foi escrita.</span><span class="sxs-lookup"><span data-stu-id="29143-621">When reading the array, you have to match the way the array was written.</span></span> <span data-ttu-id="29143-622">Se ele foi gravado com o descritor, você precisará ler o descritor.</span><span class="sxs-lookup"><span data-stu-id="29143-622">If it was written with the descriptor, you have to read the descriptor.</span></span> <span data-ttu-id="29143-623">Se o descritor não for usado, o tamanho e limites da matriz passaram para `FileGet` determinar o que ler.</span><span class="sxs-lookup"><span data-stu-id="29143-623">If the descriptor is not used, the size and bounds of the array passed into `FileGet` determine what to read.</span></span>  
  
     <span data-ttu-id="29143-624">O descritor especifica a classificação de matriz, o tamanho e os limites inferiores para cada classificação.</span><span class="sxs-lookup"><span data-stu-id="29143-624">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="29143-625">Seu comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="29143-625">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="29143-626">O comprimento do registro especificado pelo `RecordLength` parâmetro no `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessário para gravar os dados de matriz e o descritor de matriz.</span><span class="sxs-lookup"><span data-stu-id="29143-626">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="29143-627">Por exemplo, a seguinte declaração de matriz requer 218 bytes quando a matriz é gravada no disco.</span><span class="sxs-lookup"><span data-stu-id="29143-627">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#21)]  
  
     <span data-ttu-id="29143-628">218 bytes são distribuídos da seguinte maneira:</span><span class="sxs-lookup"><span data-stu-id="29143-628">The 218 bytes are distributed as follows:</span></span>  
  
    -   <span data-ttu-id="29143-629">18 bytes para o descritor: (2 + 8 \* 2)</span><span class="sxs-lookup"><span data-stu-id="29143-629">18 bytes for the descriptor: (2 + 8 \* 2)</span></span>  
  
    -   <span data-ttu-id="29143-630">200 bytes para os dados: (5 \* 10 \* 4).</span><span class="sxs-lookup"><span data-stu-id="29143-630">200 bytes for the data: (5 \* 10 \* 4).</span></span>  
  
-   <span data-ttu-id="29143-631">Se a variável que está sendo lida for qualquer outro tipo de variável (não uma cadeia de caracteres de comprimento variável ou um objeto), `FileGet` lê apenas os dados da variável.</span><span class="sxs-lookup"><span data-stu-id="29143-631">If the variable being read into is any other type of variable (not a variable-length string or an object), `FileGet` reads only the variable data.</span></span> <span data-ttu-id="29143-632">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual ao comprimento dos dados que está sendo lidos.</span><span class="sxs-lookup"><span data-stu-id="29143-632">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being read.</span></span>  
  
-   <span data-ttu-id="29143-633">`FileGet` lê os elementos de estruturas como se cada um estava sendo lido individualmente, exceto que não há nenhum preenchimento entre elementos.</span><span class="sxs-lookup"><span data-stu-id="29143-633">`FileGet` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="29143-634">No disco, uma matriz dinâmica em um tipo definido pelo usuário (escritos com `FilePut`) é prefixado por um descritor cujo comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="29143-634">On disk, a dynamic array in a user-defined type (written with `FilePut`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="29143-635">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessários para ler os elementos individuais.</span><span class="sxs-lookup"><span data-stu-id="29143-635">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements.</span></span> <span data-ttu-id="29143-636">Isso inclui qualquer matrizes e seus descritores.</span><span class="sxs-lookup"><span data-stu-id="29143-636">This includes any arrays and their descriptors.</span></span> <span data-ttu-id="29143-637">O `VBFixedString` atributo pode ser aplicado a campos de cadeia de caracteres em estruturas para indicar o tamanho de uma cadeia de caracteres quando gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="29143-637">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of a string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="29143-638">Modo binário</span><span class="sxs-lookup"><span data-stu-id="29143-638">Binary Mode</span></span>  
 <span data-ttu-id="29143-639">Para arquivos abertos no `Binary` modo, a maioria do `Random` modo regras se aplicam, com algumas exceções.</span><span class="sxs-lookup"><span data-stu-id="29143-639">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="29143-640">As seguintes regras para arquivos abertos no `Binary` modo são diferentes das regras para `Random` modo:</span><span class="sxs-lookup"><span data-stu-id="29143-640">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="29143-641">A cláusula `RecordLength` na função de `FileOpen` não está em vigor.</span><span class="sxs-lookup"><span data-stu-id="29143-641">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="29143-642">`FileGet` lê todas as variáveis do disco de maneira contígua; ou seja, sem nenhum preenchimento entre registros.</span><span class="sxs-lookup"><span data-stu-id="29143-642">`FileGet` reads all variables from disk contiguously; that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="29143-643">Para qualquer matriz que não seja uma matriz em uma estrutura, `FileGet` lê apenas os dados.</span><span class="sxs-lookup"><span data-stu-id="29143-643">For any array other than an array in a structure, `FileGet` reads only the data.</span></span> <span data-ttu-id="29143-644">Nenhum descritor é lido.</span><span class="sxs-lookup"><span data-stu-id="29143-644">No descriptor is read.</span></span>  
  
-   <span data-ttu-id="29143-645">`FileGet` lê cadeias de caracteres de comprimento variável que não são elementos das estruturas sem esperar o descritor de dois bytes de comprimento.</span><span class="sxs-lookup"><span data-stu-id="29143-645">`FileGet` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="29143-646">O número de bytes lidos é igual ao número de caracteres já na cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="29143-646">The number of bytes read equals the number of characters already in the string.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="29143-647">Leitura de um arquivo usando o`FileGet` função requer `Read` acessar do <xref:System.Security.Permissions.FileIOPermissionAccess> enumeração.</span><span class="sxs-lookup"><span data-stu-id="29143-647">Reading from a file by using the`FileGet` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="29143-648"><paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</span><span class="sxs-lookup"><span data-stu-id="29143-648"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="29143-649">O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="29143-649">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/reading-from-files.md"><span data-ttu-id="29143-650">Lendo a partir de arquivos no Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-650">Reading from Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/writing-to-files.md"><span data-ttu-id="29143-651">Gravando em arquivos no Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-651">Writing to Files in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FileGet">
      <MemberSignature Language="C#" Value="public static void FileGet (int FileNumber, ref short Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGet(int32 FileNumber, int16&amp; Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Int16@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGet (FileNumber As Integer, ByRef Value As Short, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FileGet : int *  * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileGet (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Int16" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="29143-652">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-652">Required.</span></span> <span data-ttu-id="29143-653">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="29143-653">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="29143-654">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-654">Required.</span></span> <span data-ttu-id="29143-655">Nome de variável válido no qual os dados são lidos.</span><span class="sxs-lookup"><span data-stu-id="29143-655">Valid variable name into which data is read.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="29143-656">Opcional.</span><span class="sxs-lookup"><span data-stu-id="29143-656">Optional.</span></span> <span data-ttu-id="29143-657">Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a leitura começa.</span><span class="sxs-lookup"><span data-stu-id="29143-657">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span></span></param>
        <summary><span data-ttu-id="29143-658">Lê dados de um arquivo aberto de disco em uma variável.</span><span class="sxs-lookup"><span data-stu-id="29143-658">Reads data from an open disk file into a variable.</span></span> <span data-ttu-id="29143-659">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FileGet" />.</span><span class="sxs-lookup"><span data-stu-id="29143-659">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span></span> <span data-ttu-id="29143-660">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="29143-660">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29143-661">`FileGet` só é válido em `Random` e `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="29143-661">`FileGet` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="29143-662">Dados lidos com `FileGet` costumam ser gravados em um arquivo usando-se `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="29143-662">Data read with `FileGet` is usually written to a file by using `FilePut`.</span></span>  
  
 <span data-ttu-id="29143-663">O primeiro registro ou byte em um arquivo está na posição 1, o segundo registro ou byte está na posição 2 e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="29143-663">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="29143-664">Se você omitir `RecordNumber`, o próximo registro ou byte após a última `FileGet` ou `FilePut` função (ou apontada pela última `Seek` função) é lido.</span><span class="sxs-lookup"><span data-stu-id="29143-664">If you omit `RecordNumber`, the next record or byte following the last `FileGet` or `FilePut` function (or pointed to by the last `Seek` function) is read.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="29143-665">Ao ler de arquivos, não tome decisões sobre o conteúdo de um arquivo com base na extensão de nome de arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-665">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="29143-666">Por exemplo, um arquivo chamado Form1.vb não pode ser um arquivo de origem do Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="29143-666">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="29143-667">Modo aleatório</span><span class="sxs-lookup"><span data-stu-id="29143-667">Random Mode</span></span>  
 <span data-ttu-id="29143-668">Para arquivos abertos no `Random` modo, as seguintes regras se aplicam:</span><span class="sxs-lookup"><span data-stu-id="29143-668">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="29143-669">Se o comprimento dos dados que está sendo lidos for menor que o comprimento especificado na `RecordLength` cláusula do `FileOpen` função, `FileGet` lê registros subsequentes em limites de comprimento de registro.</span><span class="sxs-lookup"><span data-stu-id="29143-669">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FileGet` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="29143-670">O espaço entre o final de um registro e o início do próximo registro é preenchido com o conteúdo existente no buffer de arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-670">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="29143-671">Como a quantidade de dados de preenchimento não pode ser determinada com certeza, geralmente é uma boa ideia ter o comprimento do registro corresponde ao tamanho dos dados que está sendo lidos.</span><span class="sxs-lookup"><span data-stu-id="29143-671">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="29143-672">Por padrão, se a variável que está sendo lida é uma cadeia de caracteres, `FileGet` lê um descritor de dois bytes que contém o comprimento da cadeia de caracteres e, em seguida, lê os dados que vão para a variável.</span><span class="sxs-lookup"><span data-stu-id="29143-672">By default, if the variable being read into is a string, `FileGet` reads a two-byte descriptor that contains the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="29143-673">Portanto, o comprimento do registro especificado pelo `RecordLength` cláusula do `FileOpen` função deve ser pelo menos dois bytes maior do que o comprimento real da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="29143-673">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="29143-674">Visual Basic 6.0 e versões anteriores dão suporte a cadeias de caracteres de comprimento fixo; Quando colocado em um arquivo, o descritor de comprimento não é gravado.</span><span class="sxs-lookup"><span data-stu-id="29143-674">Visual Basic 6.0 and earlier versions support fixed-length strings; when put to a file, the length descriptor is not written.</span></span> <span data-ttu-id="29143-675">Se você deseja ler uma cadeia de caracteres sem o descritor, você deve passar `True` para o `StringIsFixedLength` parâmetro e a cadeia de caracteres lida deve ter o tamanho correto.</span><span class="sxs-lookup"><span data-stu-id="29143-675">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="29143-676">Se a variável que está sendo lida é uma matriz, você pode optar por ler um descritor para o tamanho e a dimensão da matriz.</span><span class="sxs-lookup"><span data-stu-id="29143-676">If the variable being read into is an array, you can choose whether to read a descriptor for the size and dimension of the array.</span></span> <span data-ttu-id="29143-677">Para gravar o descritor, defina as `ArrayIsDynamic` parâmetro para `True`.</span><span class="sxs-lookup"><span data-stu-id="29143-677">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="29143-678">Ao ler a matriz, você precisa coincidir com a forma que de matriz foi escrita.</span><span class="sxs-lookup"><span data-stu-id="29143-678">When reading the array, you have to match the way the array was written.</span></span> <span data-ttu-id="29143-679">Se ele foi gravado com o descritor, você precisará ler o descritor.</span><span class="sxs-lookup"><span data-stu-id="29143-679">If it was written with the descriptor, you have to read the descriptor.</span></span> <span data-ttu-id="29143-680">Se o descritor não for usado, o tamanho e limites da matriz passaram para `FileGet` determinar o que ler.</span><span class="sxs-lookup"><span data-stu-id="29143-680">If the descriptor is not used, the size and bounds of the array passed into `FileGet` determine what to read.</span></span>  
  
     <span data-ttu-id="29143-681">O descritor especifica a classificação de matriz, o tamanho e os limites inferiores para cada classificação.</span><span class="sxs-lookup"><span data-stu-id="29143-681">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="29143-682">Seu comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="29143-682">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="29143-683">O comprimento do registro especificado pelo `RecordLength` parâmetro no `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessário para gravar os dados de matriz e o descritor de matriz.</span><span class="sxs-lookup"><span data-stu-id="29143-683">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="29143-684">Por exemplo, a seguinte declaração de matriz requer 218 bytes quando a matriz é gravada no disco.</span><span class="sxs-lookup"><span data-stu-id="29143-684">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#21)]  
  
     <span data-ttu-id="29143-685">218 bytes são distribuídos da seguinte maneira:</span><span class="sxs-lookup"><span data-stu-id="29143-685">The 218 bytes are distributed as follows:</span></span>  
  
    -   <span data-ttu-id="29143-686">18 bytes para o descritor: (2 + 8 \* 2)</span><span class="sxs-lookup"><span data-stu-id="29143-686">18 bytes for the descriptor: (2 + 8 \* 2)</span></span>  
  
    -   <span data-ttu-id="29143-687">200 bytes para os dados: (5 \* 10 \* 4).</span><span class="sxs-lookup"><span data-stu-id="29143-687">200 bytes for the data: (5 \* 10 \* 4).</span></span>  
  
-   <span data-ttu-id="29143-688">Se a variável que está sendo lida for qualquer outro tipo de variável (não uma cadeia de caracteres de comprimento variável ou um objeto), `FileGet` lê apenas os dados da variável.</span><span class="sxs-lookup"><span data-stu-id="29143-688">If the variable being read into is any other type of variable (not a variable-length string or an object), `FileGet` reads only the variable data.</span></span> <span data-ttu-id="29143-689">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual ao comprimento dos dados que está sendo lidos.</span><span class="sxs-lookup"><span data-stu-id="29143-689">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being read.</span></span>  
  
-   <span data-ttu-id="29143-690">`FileGet` lê os elementos de estruturas como se cada um estava sendo lido individualmente, exceto que não há nenhum preenchimento entre elementos.</span><span class="sxs-lookup"><span data-stu-id="29143-690">`FileGet` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="29143-691">No disco, uma matriz dinâmica em um tipo definido pelo usuário (escritos com `FilePut`) é prefixado por um descritor cujo comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="29143-691">On disk, a dynamic array in a user-defined type (written with `FilePut`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="29143-692">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessários para ler os elementos individuais.</span><span class="sxs-lookup"><span data-stu-id="29143-692">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements.</span></span> <span data-ttu-id="29143-693">Isso inclui qualquer matrizes e seus descritores.</span><span class="sxs-lookup"><span data-stu-id="29143-693">This includes any arrays and their descriptors.</span></span> <span data-ttu-id="29143-694">O `VBFixedString` atributo pode ser aplicado a campos de cadeia de caracteres em estruturas para indicar o tamanho de uma cadeia de caracteres quando gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="29143-694">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of a string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="29143-695">Modo binário</span><span class="sxs-lookup"><span data-stu-id="29143-695">Binary Mode</span></span>  
 <span data-ttu-id="29143-696">Para arquivos abertos no `Binary` modo, a maioria do `Random` modo regras se aplicam, com algumas exceções.</span><span class="sxs-lookup"><span data-stu-id="29143-696">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="29143-697">As seguintes regras para arquivos abertos no `Binary` modo são diferentes das regras para `Random` modo:</span><span class="sxs-lookup"><span data-stu-id="29143-697">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="29143-698">A cláusula `RecordLength` na função de `FileOpen` não está em vigor.</span><span class="sxs-lookup"><span data-stu-id="29143-698">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="29143-699">`FileGet` lê todas as variáveis do disco de maneira contígua; ou seja, sem nenhum preenchimento entre registros.</span><span class="sxs-lookup"><span data-stu-id="29143-699">`FileGet` reads all variables from disk contiguously; that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="29143-700">Para qualquer matriz que não seja uma matriz em uma estrutura, `FileGet` lê apenas os dados.</span><span class="sxs-lookup"><span data-stu-id="29143-700">For any array other than an array in a structure, `FileGet` reads only the data.</span></span> <span data-ttu-id="29143-701">Nenhum descritor é lido.</span><span class="sxs-lookup"><span data-stu-id="29143-701">No descriptor is read.</span></span>  
  
-   <span data-ttu-id="29143-702">`FileGet` lê cadeias de caracteres de comprimento variável que não são elementos das estruturas sem esperar o descritor de dois bytes de comprimento.</span><span class="sxs-lookup"><span data-stu-id="29143-702">`FileGet` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="29143-703">O número de bytes lidos é igual ao número de caracteres já na cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="29143-703">The number of bytes read equals the number of characters already in the string.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="29143-704">Leitura de um arquivo usando o `FileGet` função requer `Read` acessar do <xref:System.Security.Permissions.FileIOPermissionAccess> enumeração.</span><span class="sxs-lookup"><span data-stu-id="29143-704">Reading from a file by using the `FileGet` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="29143-705"><paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</span><span class="sxs-lookup"><span data-stu-id="29143-705"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="29143-706">O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="29143-706">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/reading-from-files.md"><span data-ttu-id="29143-707">Lendo a partir de arquivos no Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-707">Reading from Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/writing-to-files.md"><span data-ttu-id="29143-708">Gravando em arquivos no Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-708">Writing to Files in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FileGet">
      <MemberSignature Language="C#" Value="public static void FileGet (int FileNumber, ref int Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGet(int32 FileNumber, int32&amp; Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Int32@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGet (FileNumber As Integer, ByRef Value As Integer, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FileGet : int *  * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileGet (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Int32" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="29143-709">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-709">Required.</span></span> <span data-ttu-id="29143-710">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="29143-710">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="29143-711">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-711">Required.</span></span> <span data-ttu-id="29143-712">Nome de variável válido no qual os dados são lidos.</span><span class="sxs-lookup"><span data-stu-id="29143-712">Valid variable name into which data is read.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="29143-713">Opcional.</span><span class="sxs-lookup"><span data-stu-id="29143-713">Optional.</span></span> <span data-ttu-id="29143-714">Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a leitura começa.</span><span class="sxs-lookup"><span data-stu-id="29143-714">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span></span></param>
        <summary><span data-ttu-id="29143-715">Lê dados de um arquivo aberto de disco em uma variável.</span><span class="sxs-lookup"><span data-stu-id="29143-715">Reads data from an open disk file into a variable.</span></span> <span data-ttu-id="29143-716">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FileGet" />.</span><span class="sxs-lookup"><span data-stu-id="29143-716">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span></span> <span data-ttu-id="29143-717">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="29143-717">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29143-718">`FileGet` só é válido em `Random` e `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="29143-718">`FileGet` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="29143-719">Dados lidos com `FileGet` costumam ser gravados em um arquivo usando-se `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="29143-719">Data read with `FileGet` is usually written to a file by using `FilePut`.</span></span>  
  
 <span data-ttu-id="29143-720">O primeiro registro ou byte em um arquivo está na posição 1, o segundo registro ou byte está na posição 2 e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="29143-720">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="29143-721">Se você omitir `RecordNumber`, o próximo registro ou byte após a última `FileGet` ou `FilePut` função (ou apontada pela última `Seek` função) é lido.</span><span class="sxs-lookup"><span data-stu-id="29143-721">If you omit `RecordNumber`, the next record or byte following the last `FileGet` or `FilePut` function (or pointed to by the last `Seek` function) is read.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="29143-722">Ao ler de arquivos, não tome decisões sobre o conteúdo de um arquivo com base na extensão de nome de arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-722">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="29143-723">Por exemplo, um arquivo chamado Form1.vb não pode ser um arquivo de origem do Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="29143-723">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="29143-724">Modo aleatório</span><span class="sxs-lookup"><span data-stu-id="29143-724">Random Mode</span></span>  
 <span data-ttu-id="29143-725">Para arquivos abertos no `Random` modo, as seguintes regras se aplicam:</span><span class="sxs-lookup"><span data-stu-id="29143-725">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="29143-726">Se o comprimento dos dados que está sendo lidos for menor que o comprimento especificado na `RecordLength` cláusula do `FileOpen` função, `FileGet` lê registros subsequentes em limites de comprimento de registro.</span><span class="sxs-lookup"><span data-stu-id="29143-726">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FileGet` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="29143-727">O espaço entre o final de um registro e o início do próximo registro é preenchido com o conteúdo existente no buffer de arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-727">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="29143-728">Como a quantidade de dados de preenchimento não pode ser determinada com certeza, geralmente é uma boa ideia ter o comprimento do registro corresponde ao tamanho dos dados que está sendo lidos.</span><span class="sxs-lookup"><span data-stu-id="29143-728">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="29143-729">Por padrão, se a variável que está sendo lida é uma cadeia de caracteres, `FileGet` lê um descritor de dois bytes que contém o comprimento da cadeia de caracteres e, em seguida, lê os dados que vão para a variável.</span><span class="sxs-lookup"><span data-stu-id="29143-729">By default, if the variable being read into is a string, `FileGet` reads a two-byte descriptor that contains the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="29143-730">Portanto, o comprimento do registro especificado pelo `RecordLength` cláusula do `FileOpen` função deve ser pelo menos dois bytes maior do que o comprimento real da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="29143-730">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="29143-731">Visual Basic 6.0 e versões anteriores dão suporte a cadeias de caracteres de comprimento fixo; Quando colocado em um arquivo, o descritor de comprimento não é gravado.</span><span class="sxs-lookup"><span data-stu-id="29143-731">Visual Basic 6.0 and earlier versions support fixed-length strings; when put to a file, the length descriptor is not written.</span></span> <span data-ttu-id="29143-732">Se você deseja ler uma cadeia de caracteres sem o descritor, você deve passar `True` para o `StringIsFixedLength` parâmetro e a cadeia de caracteres lida deve ter o tamanho correto.</span><span class="sxs-lookup"><span data-stu-id="29143-732">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="29143-733">Se a variável que está sendo lida é uma matriz, você pode optar por ler um descritor para o tamanho e a dimensão da matriz.</span><span class="sxs-lookup"><span data-stu-id="29143-733">If the variable being read into is an array, you can choose whether to read a descriptor for the size and dimension of the array.</span></span> <span data-ttu-id="29143-734">Para gravar o descritor, defina as `ArrayIsDynamic` parâmetro para `True`.</span><span class="sxs-lookup"><span data-stu-id="29143-734">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="29143-735">Ao ler a matriz, você precisa coincidir com a forma que de matriz foi escrita.</span><span class="sxs-lookup"><span data-stu-id="29143-735">When reading the array, you have to match the way the array was written.</span></span> <span data-ttu-id="29143-736">Se ele foi gravado com o descritor, você precisará ler o descritor.</span><span class="sxs-lookup"><span data-stu-id="29143-736">If it was written with the descriptor, you have to read the descriptor.</span></span> <span data-ttu-id="29143-737">Se o descritor não for usado, o tamanho e limites da matriz passaram para `FileGet` determinar o que ler.</span><span class="sxs-lookup"><span data-stu-id="29143-737">If the descriptor is not used, the size and bounds of the array passed into `FileGet` determine what to read.</span></span>  
  
     <span data-ttu-id="29143-738">O descritor especifica a classificação de matriz, o tamanho e os limites inferiores para cada classificação.</span><span class="sxs-lookup"><span data-stu-id="29143-738">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="29143-739">Seu comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="29143-739">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="29143-740">O comprimento do registro especificado pelo `RecordLength` parâmetro no `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessário para gravar os dados de matriz e o descritor de matriz.</span><span class="sxs-lookup"><span data-stu-id="29143-740">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="29143-741">Por exemplo, a seguinte declaração de matriz requer 218 bytes quando a matriz é gravada no disco.</span><span class="sxs-lookup"><span data-stu-id="29143-741">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#21)]  
  
     <span data-ttu-id="29143-742">218 bytes são distribuídos da seguinte maneira:</span><span class="sxs-lookup"><span data-stu-id="29143-742">The 218 bytes are distributed as follows:</span></span>  
  
    -   <span data-ttu-id="29143-743">18 bytes para o descritor: (2 + 8 \* 2)</span><span class="sxs-lookup"><span data-stu-id="29143-743">18 bytes for the descriptor: (2 + 8 \* 2)</span></span>  
  
    -   <span data-ttu-id="29143-744">200 bytes para os dados: (5 \* 10 \* 4).</span><span class="sxs-lookup"><span data-stu-id="29143-744">200 bytes for the data: (5 \* 10 \* 4).</span></span>  
  
-   <span data-ttu-id="29143-745">Se a variável que está sendo lida for qualquer outro tipo de variável (não uma cadeia de caracteres de comprimento variável ou um objeto), `FileGet` lê apenas os dados da variável.</span><span class="sxs-lookup"><span data-stu-id="29143-745">If the variable being read into is any other type of variable (not a variable-length string or an object), `FileGet` reads only the variable data.</span></span> <span data-ttu-id="29143-746">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual ao comprimento dos dados que está sendo lidos.</span><span class="sxs-lookup"><span data-stu-id="29143-746">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being read.</span></span>  
  
-   <span data-ttu-id="29143-747">`FileGet` lê os elementos de estruturas como se cada um estava sendo lido individualmente, exceto que não há nenhum preenchimento entre elementos.</span><span class="sxs-lookup"><span data-stu-id="29143-747">`FileGet` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="29143-748">No disco, uma matriz dinâmica em um tipo definido pelo usuário (escritos com `FilePut`) é prefixado por um descritor cujo comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="29143-748">On disk, a dynamic array in a user-defined type (written with `FilePut`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="29143-749">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessários para ler os elementos individuais.</span><span class="sxs-lookup"><span data-stu-id="29143-749">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements.</span></span> <span data-ttu-id="29143-750">Isso inclui qualquer matrizes e seus descritores.</span><span class="sxs-lookup"><span data-stu-id="29143-750">This includes any arrays and their descriptors.</span></span> <span data-ttu-id="29143-751">O `VBFixedString` atributo pode ser aplicado a campos de cadeia de caracteres em estruturas para indicar o tamanho de uma cadeia de caracteres quando gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="29143-751">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of a string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="29143-752">Modo binário</span><span class="sxs-lookup"><span data-stu-id="29143-752">Binary Mode</span></span>  
 <span data-ttu-id="29143-753">Para arquivos abertos no `Binary` modo, a maioria do `Random` modo regras se aplicam, com algumas exceções.</span><span class="sxs-lookup"><span data-stu-id="29143-753">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="29143-754">As seguintes regras para arquivos abertos no `Binary` modo são diferentes das regras para `Random` modo:</span><span class="sxs-lookup"><span data-stu-id="29143-754">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="29143-755">A cláusula `RecordLength` na função de `FileOpen` não está em vigor.</span><span class="sxs-lookup"><span data-stu-id="29143-755">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="29143-756">`FileGet` lê todas as variáveis do disco de maneira contígua; ou seja, sem nenhum preenchimento entre registros.</span><span class="sxs-lookup"><span data-stu-id="29143-756">`FileGet` reads all variables from disk contiguously; that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="29143-757">Para qualquer matriz que não seja uma matriz em uma estrutura, `FileGet` lê apenas os dados.</span><span class="sxs-lookup"><span data-stu-id="29143-757">For any array other than an array in a structure, `FileGet` reads only the data.</span></span> <span data-ttu-id="29143-758">Nenhum descritor é lido.</span><span class="sxs-lookup"><span data-stu-id="29143-758">No descriptor is read.</span></span>  
  
-   <span data-ttu-id="29143-759">`FileGet` lê cadeias de caracteres de comprimento variável que não são elementos das estruturas sem esperar o descritor de dois bytes de comprimento.</span><span class="sxs-lookup"><span data-stu-id="29143-759">`FileGet` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="29143-760">O número de bytes lidos é igual ao número de caracteres já na cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="29143-760">The number of bytes read equals the number of characters already in the string.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="29143-761">Leitura de um arquivo usando o `FileGet` função requer `Read` acessar do <xref:System.Security.Permissions.FileIOPermissionAccess> enumeração.</span><span class="sxs-lookup"><span data-stu-id="29143-761">Reading from a file by using the `FileGet` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="29143-762"><paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</span><span class="sxs-lookup"><span data-stu-id="29143-762"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="29143-763">O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="29143-763">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/reading-from-files.md"><span data-ttu-id="29143-764">Lendo a partir de arquivos no Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-764">Reading from Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/writing-to-files.md"><span data-ttu-id="29143-765">Gravando em arquivos no Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-765">Writing to Files in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FileGet">
      <MemberSignature Language="C#" Value="public static void FileGet (int FileNumber, ref long Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGet(int32 FileNumber, int64&amp; Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Int64@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGet (FileNumber As Integer, ByRef Value As Long, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FileGet : int *  * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileGet (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Int64" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="29143-766">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-766">Required.</span></span> <span data-ttu-id="29143-767">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="29143-767">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="29143-768">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-768">Required.</span></span> <span data-ttu-id="29143-769">Nome de variável válido no qual os dados são lidos.</span><span class="sxs-lookup"><span data-stu-id="29143-769">Valid variable name into which data is read.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="29143-770">Opcional.</span><span class="sxs-lookup"><span data-stu-id="29143-770">Optional.</span></span> <span data-ttu-id="29143-771">Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a leitura começa.</span><span class="sxs-lookup"><span data-stu-id="29143-771">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span></span></param>
        <summary><span data-ttu-id="29143-772">Lê dados de um arquivo aberto de disco em uma variável.</span><span class="sxs-lookup"><span data-stu-id="29143-772">Reads data from an open disk file into a variable.</span></span> <span data-ttu-id="29143-773">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FileGet" />.</span><span class="sxs-lookup"><span data-stu-id="29143-773">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span></span> <span data-ttu-id="29143-774">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="29143-774">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29143-775">`FileGet` só é válido em `Random` e `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="29143-775">`FileGet` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="29143-776">Dados lidos com `FileGet` costumam ser gravados em um arquivo usando-se `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="29143-776">Data read with `FileGet` is usually written to a file by using `FilePut`.</span></span>  
  
 <span data-ttu-id="29143-777">O primeiro registro ou byte em um arquivo está na posição 1, o segundo registro ou byte está na posição 2 e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="29143-777">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="29143-778">Se você omitir `RecordNumber`, o próximo registro ou byte após a última `FileGet` ou `FilePut` função (ou apontada pela última `Seek` função) é lido.</span><span class="sxs-lookup"><span data-stu-id="29143-778">If you omit `RecordNumber`, the next record or byte following the last `FileGet` or `FilePut` function (or pointed to by the last `Seek` function) is read.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="29143-779">Ao ler de arquivos, não tome decisões sobre o conteúdo de um arquivo com base na extensão de nome de arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-779">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="29143-780">Por exemplo, um arquivo chamado Form1.vb não pode ser um arquivo de origem do Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="29143-780">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="29143-781">Modo aleatório</span><span class="sxs-lookup"><span data-stu-id="29143-781">Random Mode</span></span>  
 <span data-ttu-id="29143-782">Para arquivos abertos no `Random` modo, as seguintes regras se aplicam:</span><span class="sxs-lookup"><span data-stu-id="29143-782">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="29143-783">Se o comprimento dos dados que está sendo lidos for menor que o comprimento especificado na `RecordLength` cláusula do `FileOpen` função, `FileGet` lê registros subsequentes em limites de comprimento de registro.</span><span class="sxs-lookup"><span data-stu-id="29143-783">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FileGet` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="29143-784">O espaço entre o final de um registro e o início do próximo registro é preenchido com o conteúdo existente no buffer de arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-784">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="29143-785">Como a quantidade de dados de preenchimento não pode ser determinada com certeza, geralmente é uma boa ideia ter o comprimento do registro corresponde ao tamanho dos dados que está sendo lidos.</span><span class="sxs-lookup"><span data-stu-id="29143-785">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="29143-786">Por padrão, se a variável que está sendo lida é uma cadeia de caracteres, `FileGet` lê um descritor de dois bytes que contém o comprimento da cadeia de caracteres e, em seguida, lê os dados que vão para a variável.</span><span class="sxs-lookup"><span data-stu-id="29143-786">By default, if the variable being read into is a string, `FileGet` reads a two-byte descriptor that contains the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="29143-787">Portanto, o comprimento do registro especificado pelo `RecordLength` cláusula do `FileOpen` função deve ser pelo menos dois bytes maior do que o comprimento real da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="29143-787">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="29143-788">Visual Basic 6.0 e versões anteriores dão suporte a cadeias de caracteres de comprimento fixo; Quando colocado em um arquivo, o descritor de comprimento não é gravado.</span><span class="sxs-lookup"><span data-stu-id="29143-788">Visual Basic 6.0 and earlier versions support fixed-length strings; when put to a file, the length descriptor is not written.</span></span> <span data-ttu-id="29143-789">Se você deseja ler uma cadeia de caracteres sem o descritor, você deve passar `True` para o `StringIsFixedLength` parâmetro e a cadeia de caracteres lida deve ter o tamanho correto.</span><span class="sxs-lookup"><span data-stu-id="29143-789">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="29143-790">Se a variável que está sendo lida é uma matriz, você pode optar por ler um descritor para o tamanho e a dimensão da matriz.</span><span class="sxs-lookup"><span data-stu-id="29143-790">If the variable being read into is an array, you can choose whether to read a descriptor for the size and dimension of the array.</span></span> <span data-ttu-id="29143-791">Para gravar o descritor, defina as `ArrayIsDynamic` parâmetro para `True`.</span><span class="sxs-lookup"><span data-stu-id="29143-791">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="29143-792">Ao ler a matriz, você precisa coincidir com a forma que de matriz foi escrita.</span><span class="sxs-lookup"><span data-stu-id="29143-792">When reading the array, you have to match the way the array was written.</span></span> <span data-ttu-id="29143-793">Se ele foi gravado com o descritor, você precisará ler o descritor.</span><span class="sxs-lookup"><span data-stu-id="29143-793">If it was written with the descriptor, you have to read the descriptor.</span></span> <span data-ttu-id="29143-794">Se o descritor não for usado, o tamanho e limites da matriz passaram para `FileGet` determinar o que ler.</span><span class="sxs-lookup"><span data-stu-id="29143-794">If the descriptor is not used, the size and bounds of the array passed into `FileGet` determine what to read.</span></span>  
  
     <span data-ttu-id="29143-795">O descritor especifica a classificação de matriz, o tamanho e os limites inferiores para cada classificação.</span><span class="sxs-lookup"><span data-stu-id="29143-795">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="29143-796">Seu comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="29143-796">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="29143-797">O comprimento do registro especificado pelo `RecordLength` parâmetro no `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessário para gravar os dados de matriz e o descritor de matriz.</span><span class="sxs-lookup"><span data-stu-id="29143-797">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="29143-798">Por exemplo, a seguinte declaração de matriz requer 218 bytes quando a matriz é gravada no disco.</span><span class="sxs-lookup"><span data-stu-id="29143-798">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#21)]  
  
     <span data-ttu-id="29143-799">218 bytes são distribuídos da seguinte maneira:</span><span class="sxs-lookup"><span data-stu-id="29143-799">The 218 bytes are distributed as follows:</span></span>  
  
    -   <span data-ttu-id="29143-800">18 bytes para o descritor: (2 + 8 \* 2)</span><span class="sxs-lookup"><span data-stu-id="29143-800">18 bytes for the descriptor: (2 + 8 \* 2)</span></span>  
  
    -   <span data-ttu-id="29143-801">200 bytes para os dados: (5 \* 10 \* 4).</span><span class="sxs-lookup"><span data-stu-id="29143-801">200 bytes for the data: (5 \* 10 \* 4).</span></span>  
  
-   <span data-ttu-id="29143-802">Se a variável que está sendo lida for qualquer outro tipo de variável (não uma cadeia de caracteres de comprimento variável ou um objeto), `FileGet` lê apenas os dados da variável.</span><span class="sxs-lookup"><span data-stu-id="29143-802">If the variable being read into is any other type of variable (not a variable-length string or an object), `FileGet` reads only the variable data.</span></span> <span data-ttu-id="29143-803">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual ao comprimento dos dados que está sendo lidos.</span><span class="sxs-lookup"><span data-stu-id="29143-803">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being read.</span></span>  
  
-   <span data-ttu-id="29143-804">`FileGet` lê os elementos de estruturas como se cada um estava sendo lido individualmente, exceto que não há nenhum preenchimento entre elementos.</span><span class="sxs-lookup"><span data-stu-id="29143-804">`FileGet` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="29143-805">No disco, uma matriz dinâmica em um tipo definido pelo usuário (escritos com `FilePut`) é prefixado por um descritor cujo comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="29143-805">On disk, a dynamic array in a user-defined type (written with `FilePut`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="29143-806">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessários para ler os elementos individuais.</span><span class="sxs-lookup"><span data-stu-id="29143-806">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements.</span></span> <span data-ttu-id="29143-807">Isso inclui qualquer matrizes e seus descritores.</span><span class="sxs-lookup"><span data-stu-id="29143-807">This includes any arrays and their descriptors.</span></span> <span data-ttu-id="29143-808">O `VBFixedString` atributo pode ser aplicado a campos de cadeia de caracteres em estruturas para indicar o tamanho de uma cadeia de caracteres quando gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="29143-808">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of a string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="29143-809">Modo binário</span><span class="sxs-lookup"><span data-stu-id="29143-809">Binary Mode</span></span>  
 <span data-ttu-id="29143-810">Para arquivos abertos no `Binary` modo, a maioria do `Random` modo regras se aplicam, com algumas exceções.</span><span class="sxs-lookup"><span data-stu-id="29143-810">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="29143-811">As seguintes regras para arquivos abertos no `Binary` modo são diferentes das regras para `Random` modo:</span><span class="sxs-lookup"><span data-stu-id="29143-811">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="29143-812">A cláusula `RecordLength` na função de `FileOpen` não está em vigor.</span><span class="sxs-lookup"><span data-stu-id="29143-812">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="29143-813">`FileGet` lê todas as variáveis do disco de maneira contígua; ou seja, sem nenhum preenchimento entre registros.</span><span class="sxs-lookup"><span data-stu-id="29143-813">`FileGet` reads all variables from disk contiguously; that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="29143-814">Para qualquer matriz que não seja uma matriz em uma estrutura, `FileGet` lê apenas os dados.</span><span class="sxs-lookup"><span data-stu-id="29143-814">For any array other than an array in a structure, `FileGet` reads only the data.</span></span> <span data-ttu-id="29143-815">Nenhum descritor é lido.</span><span class="sxs-lookup"><span data-stu-id="29143-815">No descriptor is read.</span></span>  
  
-   <span data-ttu-id="29143-816">`FileGet` lê cadeias de caracteres de comprimento variável que não são elementos das estruturas sem esperar o descritor de dois bytes de comprimento.</span><span class="sxs-lookup"><span data-stu-id="29143-816">`FileGet` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="29143-817">O número de bytes lidos é igual ao número de caracteres já na cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="29143-817">The number of bytes read equals the number of characters already in the string.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="29143-818">Leitura de um arquivo usando o `FileGet` função requer `Read` acessar do <xref:System.Security.Permissions.FileIOPermissionAccess> enumeração.</span><span class="sxs-lookup"><span data-stu-id="29143-818">Reading from a file by using the `FileGet` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="29143-819"><paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</span><span class="sxs-lookup"><span data-stu-id="29143-819"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="29143-820">O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="29143-820">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/reading-from-files.md"><span data-ttu-id="29143-821">Lendo a partir de arquivos no Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-821">Reading from Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/writing-to-files.md"><span data-ttu-id="29143-822">Gravando em arquivos no Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-822">Writing to Files in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FileGet">
      <MemberSignature Language="C#" Value="public static void FileGet (int FileNumber, ref float Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGet(int32 FileNumber, float32&amp; Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Single@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGet (FileNumber As Integer, ByRef Value As Single, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FileGet : int *  * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileGet (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Single" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="29143-823">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-823">Required.</span></span> <span data-ttu-id="29143-824">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="29143-824">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="29143-825">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-825">Required.</span></span> <span data-ttu-id="29143-826">Nome de variável válido no qual os dados são lidos.</span><span class="sxs-lookup"><span data-stu-id="29143-826">Valid variable name into which data is read.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="29143-827">Opcional.</span><span class="sxs-lookup"><span data-stu-id="29143-827">Optional.</span></span> <span data-ttu-id="29143-828">Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a leitura começa.</span><span class="sxs-lookup"><span data-stu-id="29143-828">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span></span></param>
        <summary><span data-ttu-id="29143-829">Lê dados de um arquivo aberto de disco em uma variável.</span><span class="sxs-lookup"><span data-stu-id="29143-829">Reads data from an open disk file into a variable.</span></span> <span data-ttu-id="29143-830">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FileGet" />.</span><span class="sxs-lookup"><span data-stu-id="29143-830">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span></span> <span data-ttu-id="29143-831">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="29143-831">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29143-832">`FileGet` só é válido em `Random` e `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="29143-832">`FileGet` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="29143-833">Dados lidos com `FileGet` costumam ser gravados em um arquivo usando-se `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="29143-833">Data read with `FileGet` is usually written to a file by using `FilePut`.</span></span>  
  
 <span data-ttu-id="29143-834">O primeiro registro ou byte em um arquivo está na posição 1, o segundo registro ou byte está na posição 2 e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="29143-834">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="29143-835">Se você omitir `RecordNumber`, o próximo registro ou byte após a última `FileGet` ou `FilePut` função (ou apontada pela última `Seek` função) é lido.</span><span class="sxs-lookup"><span data-stu-id="29143-835">If you omit `RecordNumber`, the next record or byte following the last `FileGet` or `FilePut` function (or pointed to by the last `Seek` function) is read.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="29143-836">Ao ler de arquivos, não tome decisões sobre o conteúdo de um arquivo com base na extensão de nome de arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-836">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="29143-837">Por exemplo, um arquivo chamado Form1.vb não pode ser um arquivo de origem do Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="29143-837">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="29143-838">Modo aleatório</span><span class="sxs-lookup"><span data-stu-id="29143-838">Random Mode</span></span>  
 <span data-ttu-id="29143-839">Para arquivos abertos no `Random` modo, as seguintes regras se aplicam:</span><span class="sxs-lookup"><span data-stu-id="29143-839">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="29143-840">Se o comprimento dos dados que está sendo lidos for menor que o comprimento especificado na `RecordLength` cláusula do `FileOpen` função, `FileGet` lê registros subsequentes em limites de comprimento de registro.</span><span class="sxs-lookup"><span data-stu-id="29143-840">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FileGet` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="29143-841">O espaço entre o final de um registro e o início do próximo registro é preenchido com o conteúdo existente no buffer de arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-841">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="29143-842">Como a quantidade de dados de preenchimento não pode ser determinada com certeza, geralmente é uma boa ideia ter o comprimento do registro corresponde ao tamanho dos dados que está sendo lidos.</span><span class="sxs-lookup"><span data-stu-id="29143-842">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="29143-843">Por padrão, se a variável que está sendo lida é uma cadeia de caracteres, `FileGet` lê um descritor de dois bytes que contém o comprimento da cadeia de caracteres e, em seguida, lê os dados que vão para a variável.</span><span class="sxs-lookup"><span data-stu-id="29143-843">By default, if the variable being read into is a string, `FileGet` reads a two-byte descriptor that contains the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="29143-844">Portanto, o comprimento do registro especificado pelo `RecordLength` cláusula do `FileOpen` função deve ser pelo menos dois bytes maior do que o comprimento real da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="29143-844">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="29143-845">Visual Basic 6.0 e versões anteriores dão suporte a cadeias de caracteres de comprimento fixo; Quando colocado em um arquivo, o descritor de comprimento não é gravado.</span><span class="sxs-lookup"><span data-stu-id="29143-845">Visual Basic 6.0 and earlier versions support fixed-length strings; when put to a file, the length descriptor is not written.</span></span> <span data-ttu-id="29143-846">Se você deseja ler uma cadeia de caracteres sem o descritor, você deve passar `True` para o `StringIsFixedLength` parâmetro e a cadeia de caracteres lida deve ter o tamanho correto.</span><span class="sxs-lookup"><span data-stu-id="29143-846">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="29143-847">Se a variável que está sendo lida é uma matriz, você pode optar por ler um descritor para o tamanho e a dimensão da matriz.</span><span class="sxs-lookup"><span data-stu-id="29143-847">If the variable being read into is an array, you can choose whether to read a descriptor for the size and dimension of the array.</span></span> <span data-ttu-id="29143-848">Para gravar o descritor, defina as `ArrayIsDynamic` parâmetro para `True`.</span><span class="sxs-lookup"><span data-stu-id="29143-848">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="29143-849">Ao ler a matriz, você precisa coincidir com a forma que de matriz foi escrita.</span><span class="sxs-lookup"><span data-stu-id="29143-849">When reading the array, you have to match the way the array was written.</span></span> <span data-ttu-id="29143-850">Se ele foi gravado com o descritor, você precisará ler o descritor.</span><span class="sxs-lookup"><span data-stu-id="29143-850">If it was written with the descriptor, you have to read the descriptor.</span></span> <span data-ttu-id="29143-851">Se o descritor não for usado, o tamanho e limites da matriz passaram para `FileGet` determinar o que ler.</span><span class="sxs-lookup"><span data-stu-id="29143-851">If the descriptor is not used, the size and bounds of the array passed into `FileGet` determine what to read.</span></span>  
  
     <span data-ttu-id="29143-852">O descritor especifica a classificação de matriz, o tamanho e os limites inferiores para cada classificação.</span><span class="sxs-lookup"><span data-stu-id="29143-852">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="29143-853">Seu comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="29143-853">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="29143-854">O comprimento do registro especificado pelo `RecordLength` parâmetro no `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessário para gravar os dados de matriz e o descritor de matriz.</span><span class="sxs-lookup"><span data-stu-id="29143-854">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="29143-855">Por exemplo, a seguinte declaração de matriz requer 218 bytes quando a matriz é gravada no disco.</span><span class="sxs-lookup"><span data-stu-id="29143-855">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#21)]  
  
     <span data-ttu-id="29143-856">218 bytes são distribuídos da seguinte maneira:</span><span class="sxs-lookup"><span data-stu-id="29143-856">The 218 bytes are distributed as follows:</span></span>  
  
    -   <span data-ttu-id="29143-857">18 bytes para o descritor: (2 + 8 \* 2)</span><span class="sxs-lookup"><span data-stu-id="29143-857">18 bytes for the descriptor: (2 + 8 \* 2)</span></span>  
  
    -   <span data-ttu-id="29143-858">200 bytes para os dados: (5 \* 10 \* 4).</span><span class="sxs-lookup"><span data-stu-id="29143-858">200 bytes for the data: (5 \* 10 \* 4).</span></span>  
  
-   <span data-ttu-id="29143-859">Se a variável que está sendo lida for qualquer outro tipo de variável (não uma cadeia de caracteres de comprimento variável ou um objeto), `FileGet` lê apenas os dados da variável.</span><span class="sxs-lookup"><span data-stu-id="29143-859">If the variable being read into is any other type of variable (not a variable-length string or an object), `FileGet` reads only the variable data.</span></span> <span data-ttu-id="29143-860">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual ao comprimento dos dados que está sendo lidos.</span><span class="sxs-lookup"><span data-stu-id="29143-860">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being read.</span></span>  
  
-   <span data-ttu-id="29143-861">`FileGet` lê os elementos de estruturas como se cada um estava sendo lido individualmente, exceto que não há nenhum preenchimento entre elementos.</span><span class="sxs-lookup"><span data-stu-id="29143-861">`FileGet` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="29143-862">No disco, uma matriz dinâmica em um tipo definido pelo usuário (escritos com `FilePut`) é prefixado por um descritor cujo comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="29143-862">On disk, a dynamic array in a user-defined type (written with `FilePut`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="29143-863">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessários para ler os elementos individuais.</span><span class="sxs-lookup"><span data-stu-id="29143-863">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements.</span></span> <span data-ttu-id="29143-864">Isso inclui qualquer matrizes e seus descritores.</span><span class="sxs-lookup"><span data-stu-id="29143-864">This includes any arrays and their descriptors.</span></span> <span data-ttu-id="29143-865">O `VBFixedString` atributo pode ser aplicado a campos de cadeia de caracteres em estruturas para indicar o tamanho de uma cadeia de caracteres quando gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="29143-865">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of a string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="29143-866">Modo binário</span><span class="sxs-lookup"><span data-stu-id="29143-866">Binary Mode</span></span>  
 <span data-ttu-id="29143-867">Para arquivos abertos no `Binary` modo, a maioria do `Random` modo regras se aplicam, com algumas exceções.</span><span class="sxs-lookup"><span data-stu-id="29143-867">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="29143-868">As seguintes regras para arquivos abertos no `Binary` modo são diferentes das regras para `Random` modo:</span><span class="sxs-lookup"><span data-stu-id="29143-868">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="29143-869">A cláusula `RecordLength` na função de `FileOpen` não está em vigor.</span><span class="sxs-lookup"><span data-stu-id="29143-869">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="29143-870">`FileGet` lê todas as variáveis do disco de maneira contígua; ou seja, sem nenhum preenchimento entre registros.</span><span class="sxs-lookup"><span data-stu-id="29143-870">`FileGet` reads all variables from disk contiguously; that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="29143-871">Para qualquer matriz que não seja uma matriz em uma estrutura, `FileGet` lê apenas os dados.</span><span class="sxs-lookup"><span data-stu-id="29143-871">For any array other than an array in a structure, `FileGet` reads only the data.</span></span> <span data-ttu-id="29143-872">Nenhum descritor é lido.</span><span class="sxs-lookup"><span data-stu-id="29143-872">No descriptor is read.</span></span>  
  
-   <span data-ttu-id="29143-873">`FileGet` lê cadeias de caracteres de comprimento variável que não são elementos das estruturas sem esperar o descritor de dois bytes de comprimento.</span><span class="sxs-lookup"><span data-stu-id="29143-873">`FileGet` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="29143-874">O número de bytes lidos é igual ao número de caracteres já na cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="29143-874">The number of bytes read equals the number of characters already in the string.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="29143-875">Leitura de um arquivo usando o `FileGet` função requer `Read` acessar do <xref:System.Security.Permissions.FileIOPermissionAccess> enumeração.</span><span class="sxs-lookup"><span data-stu-id="29143-875">Reading from a file by using the `FileGet` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="29143-876"><paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</span><span class="sxs-lookup"><span data-stu-id="29143-876"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="29143-877">O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="29143-877">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/reading-from-files.md"><span data-ttu-id="29143-878">Lendo a partir de arquivos no Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-878">Reading from Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/writing-to-files.md"><span data-ttu-id="29143-879">Gravando em arquivos no Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-879">Writing to Files in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FileGet">
      <MemberSignature Language="C#" Value="public static void FileGet (int FileNumber, ref ValueType Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGet(int32 FileNumber, class System.ValueType&amp; Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.ValueType@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGet (FileNumber As Integer, ByRef Value As ValueType, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FileGet : int *  * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileGet (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.ValueType" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="29143-880">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-880">Required.</span></span> <span data-ttu-id="29143-881">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="29143-881">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="29143-882">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-882">Required.</span></span> <span data-ttu-id="29143-883">Nome de variável válido no qual os dados são lidos.</span><span class="sxs-lookup"><span data-stu-id="29143-883">Valid variable name into which data is read.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="29143-884">Opcional.</span><span class="sxs-lookup"><span data-stu-id="29143-884">Optional.</span></span> <span data-ttu-id="29143-885">Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a leitura começa.</span><span class="sxs-lookup"><span data-stu-id="29143-885">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span></span></param>
        <summary><span data-ttu-id="29143-886">Lê dados de um arquivo aberto de disco em uma variável.</span><span class="sxs-lookup"><span data-stu-id="29143-886">Reads data from an open disk file into a variable.</span></span> <span data-ttu-id="29143-887">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FileGet" />.</span><span class="sxs-lookup"><span data-stu-id="29143-887">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span></span> <span data-ttu-id="29143-888">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="29143-888">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29143-889">`FileGet` só é válido em `Random` e `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="29143-889">`FileGet` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="29143-890">Dados lidos com `FileGet` costumam ser gravados em um arquivo usando-se `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="29143-890">Data read with `FileGet` is usually written to a file by using `FilePut`.</span></span>  
  
 <span data-ttu-id="29143-891">O primeiro registro ou byte em um arquivo está na posição 1, o segundo registro ou byte está na posição 2 e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="29143-891">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="29143-892">Se você omitir `RecordNumber`, o próximo registro ou byte após a última `FileGet` ou `FilePut` função (ou apontada pela última `Seek` função) é lido.</span><span class="sxs-lookup"><span data-stu-id="29143-892">If you omit `RecordNumber`, the next record or byte following the last `FileGet` or `FilePut` function (or pointed to by the last `Seek` function) is read.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="29143-893">Ao ler de arquivos, não tome decisões sobre o conteúdo de um arquivo com base na extensão de nome de arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-893">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="29143-894">Por exemplo, um arquivo chamado Form1.vb não pode ser um arquivo de origem do Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="29143-894">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="29143-895">Modo aleatório</span><span class="sxs-lookup"><span data-stu-id="29143-895">Random Mode</span></span>  
 <span data-ttu-id="29143-896">Para arquivos abertos no `Random` modo, as seguintes regras se aplicam:</span><span class="sxs-lookup"><span data-stu-id="29143-896">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="29143-897">Se o comprimento dos dados que está sendo lidos for menor que o comprimento especificado na `RecordLength` cláusula do `FileOpen` função, `FileGet` lê registros subsequentes em limites de comprimento de registro.</span><span class="sxs-lookup"><span data-stu-id="29143-897">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FileGet` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="29143-898">O espaço entre o final de um registro e o início do próximo registro é preenchido com o conteúdo existente no buffer de arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-898">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="29143-899">Como a quantidade de dados de preenchimento não pode ser determinada com certeza, geralmente é uma boa ideia ter o comprimento do registro corresponde ao tamanho dos dados que está sendo lidos.</span><span class="sxs-lookup"><span data-stu-id="29143-899">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="29143-900">Por padrão, se a variável que está sendo lida é uma cadeia de caracteres, `FileGet` lê um descritor de dois bytes que contém o comprimento da cadeia de caracteres e, em seguida, lê os dados que vão para a variável.</span><span class="sxs-lookup"><span data-stu-id="29143-900">By default, if the variable being read into is a string, `FileGet` reads a two-byte descriptor that contains the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="29143-901">Portanto, o comprimento do registro especificado pelo `RecordLength` cláusula do `FileOpen` função deve ser pelo menos dois bytes maior do que o comprimento real da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="29143-901">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="29143-902">Visual Basic 6.0 e versões anteriores dão suporte a cadeias de caracteres de comprimento fixo; Quando colocado em um arquivo, o descritor de comprimento não é gravado.</span><span class="sxs-lookup"><span data-stu-id="29143-902">Visual Basic 6.0 and earlier versions support fixed-length strings; when put to a file, the length descriptor is not written.</span></span> <span data-ttu-id="29143-903">Se você deseja ler uma cadeia de caracteres sem o descritor, você deve passar `True` para o `StringIsFixedLength` parâmetro e a cadeia de caracteres lida deve ter o tamanho correto.</span><span class="sxs-lookup"><span data-stu-id="29143-903">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="29143-904">Se a variável que está sendo lida é uma matriz, você pode optar por ler um descritor para o tamanho e a dimensão da matriz.</span><span class="sxs-lookup"><span data-stu-id="29143-904">If the variable being read into is an array, you can choose whether to read a descriptor for the size and dimension of the array.</span></span> <span data-ttu-id="29143-905">Para gravar o descritor, defina as `ArrayIsDynamic` parâmetro para `True`.</span><span class="sxs-lookup"><span data-stu-id="29143-905">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="29143-906">Ao ler a matriz, você precisa coincidir com a forma que de matriz foi escrita.</span><span class="sxs-lookup"><span data-stu-id="29143-906">When reading the array, you have to match the way the array was written.</span></span> <span data-ttu-id="29143-907">Se ele foi gravado com o descritor, você precisará ler o descritor.</span><span class="sxs-lookup"><span data-stu-id="29143-907">If it was written with the descriptor, you have to read the descriptor.</span></span> <span data-ttu-id="29143-908">Se o descritor não for usado, o tamanho e limites da matriz passaram para `FileGet` determinar o que ler.</span><span class="sxs-lookup"><span data-stu-id="29143-908">If the descriptor is not used, the size and bounds of the array passed into `FileGet` determine what to read.</span></span>  
  
     <span data-ttu-id="29143-909">O descritor especifica a classificação de matriz, o tamanho e os limites inferiores para cada classificação.</span><span class="sxs-lookup"><span data-stu-id="29143-909">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="29143-910">Seu comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="29143-910">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="29143-911">O comprimento do registro especificado pelo `RecordLength` parâmetro no `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessário para gravar os dados de matriz e o descritor de matriz.</span><span class="sxs-lookup"><span data-stu-id="29143-911">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="29143-912">Por exemplo, a seguinte declaração de matriz requer 218 bytes quando a matriz é gravada no disco.</span><span class="sxs-lookup"><span data-stu-id="29143-912">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#21)]  
  
     <span data-ttu-id="29143-913">218 bytes são distribuídos da seguinte maneira:</span><span class="sxs-lookup"><span data-stu-id="29143-913">The 218 bytes are distributed as follows:</span></span>  
  
    -   <span data-ttu-id="29143-914">18 bytes para o descritor: (2 + 8 \* 2)</span><span class="sxs-lookup"><span data-stu-id="29143-914">18 bytes for the descriptor: (2 + 8 \* 2)</span></span>  
  
    -   <span data-ttu-id="29143-915">200 bytes para os dados: (5 \* 10 \* 4).</span><span class="sxs-lookup"><span data-stu-id="29143-915">200 bytes for the data: (5 \* 10 \* 4).</span></span>  
  
-   <span data-ttu-id="29143-916">Se a variável que está sendo lida for qualquer outro tipo de variável (não uma cadeia de caracteres de comprimento variável ou um objeto), `FileGet` lê apenas os dados da variável.</span><span class="sxs-lookup"><span data-stu-id="29143-916">If the variable being read into is any other type of variable (not a variable-length string or an object), `FileGet` reads only the variable data.</span></span> <span data-ttu-id="29143-917">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual ao comprimento dos dados que está sendo lidos.</span><span class="sxs-lookup"><span data-stu-id="29143-917">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being read.</span></span>  
  
-   <span data-ttu-id="29143-918">`FileGet` lê os elementos de estruturas como se cada um estava sendo lido individualmente, exceto que não há nenhum preenchimento entre elementos.</span><span class="sxs-lookup"><span data-stu-id="29143-918">`FileGet` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="29143-919">No disco, uma matriz dinâmica em um tipo definido pelo usuário (escritos com `FilePut`) é prefixado por um descritor cujo comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="29143-919">On disk, a dynamic array in a user-defined type (written with `FilePut`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="29143-920">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessários para ler os elementos individuais.</span><span class="sxs-lookup"><span data-stu-id="29143-920">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements.</span></span> <span data-ttu-id="29143-921">Isso inclui qualquer matrizes e seus descritores.</span><span class="sxs-lookup"><span data-stu-id="29143-921">This includes any arrays and their descriptors.</span></span> <span data-ttu-id="29143-922">O `VBFixedString` atributo pode ser aplicado a campos de cadeia de caracteres em estruturas para indicar o tamanho de uma cadeia de caracteres quando gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="29143-922">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of a string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="29143-923">Modo binário</span><span class="sxs-lookup"><span data-stu-id="29143-923">Binary Mode</span></span>  
 <span data-ttu-id="29143-924">Para arquivos abertos no `Binary` modo, a maioria do `Random` modo regras se aplicam, com algumas exceções.</span><span class="sxs-lookup"><span data-stu-id="29143-924">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="29143-925">As seguintes regras para arquivos abertos no `Binary` modo são diferentes das regras para `Random` modo:</span><span class="sxs-lookup"><span data-stu-id="29143-925">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="29143-926">A cláusula `RecordLength` na função de `FileOpen` não está em vigor.</span><span class="sxs-lookup"><span data-stu-id="29143-926">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="29143-927">`FileGet` lê todas as variáveis do disco de maneira contígua; ou seja, sem nenhum preenchimento entre registros.</span><span class="sxs-lookup"><span data-stu-id="29143-927">`FileGet` reads all variables from disk contiguously; that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="29143-928">Para qualquer matriz que não seja uma matriz em uma estrutura, `FileGet` lê apenas os dados.</span><span class="sxs-lookup"><span data-stu-id="29143-928">For any array other than an array in a structure, `FileGet` reads only the data.</span></span> <span data-ttu-id="29143-929">Nenhum descritor é lido.</span><span class="sxs-lookup"><span data-stu-id="29143-929">No descriptor is read.</span></span>  
  
-   <span data-ttu-id="29143-930">`FileGet` lê cadeias de caracteres de comprimento variável que não são elementos das estruturas sem esperar o descritor de dois bytes de comprimento.</span><span class="sxs-lookup"><span data-stu-id="29143-930">`FileGet` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="29143-931">O número de bytes lidos é igual ao número de caracteres já na cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="29143-931">The number of bytes read equals the number of characters already in the string.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="29143-932">Leitura de um arquivo usando o `FileGet` função requer `Read` acessar do <xref:System.Security.Permissions.FileIOPermissionAccess> enumeração.</span><span class="sxs-lookup"><span data-stu-id="29143-932">Reading from a file by using the `FileGet` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="29143-933"><paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</span><span class="sxs-lookup"><span data-stu-id="29143-933"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="29143-934">O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="29143-934">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/reading-from-files.md"><span data-ttu-id="29143-935">Lendo a partir de arquivos no Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-935">Reading from Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/writing-to-files.md"><span data-ttu-id="29143-936">Gravando em arquivos no Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-936">Writing to Files in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FileGet">
      <MemberSignature Language="C#" Value="public static void FileGet (int FileNumber, ref string Value, long RecordNumber = -1, bool StringIsFixedLength = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGet(int32 FileNumber, string&amp; Value, int64 RecordNumber, bool StringIsFixedLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.String@,System.Int64,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGet (FileNumber As Integer, ByRef Value As String, Optional RecordNumber As Long = -1, Optional StringIsFixedLength As Boolean = false)" />
      <MemberSignature Language="F#" Value="static member FileGet : int *  * int64 * bool -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileGet (FileNumber, Value, RecordNumber, StringIsFixedLength)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.String" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
        <Parameter Name="StringIsFixedLength" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="29143-937">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-937">Required.</span></span> <span data-ttu-id="29143-938">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="29143-938">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="29143-939">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-939">Required.</span></span> <span data-ttu-id="29143-940">Nome de variável válido no qual os dados são lidos.</span><span class="sxs-lookup"><span data-stu-id="29143-940">Valid variable name into which data is read.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="29143-941">Opcional.</span><span class="sxs-lookup"><span data-stu-id="29143-941">Optional.</span></span> <span data-ttu-id="29143-942">Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a leitura começa.</span><span class="sxs-lookup"><span data-stu-id="29143-942">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span></span></param>
        <param name="StringIsFixedLength"><span data-ttu-id="29143-943">Opcional.</span><span class="sxs-lookup"><span data-stu-id="29143-943">Optional.</span></span> <span data-ttu-id="29143-944">Aplica-se somente ao gravar uma cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="29143-944">Applies only when writing a string.</span></span> <span data-ttu-id="29143-945">Especifica se deve gravar um descritor de dois bytes para a cadeia de caracteres que descreve o tamanho.</span><span class="sxs-lookup"><span data-stu-id="29143-945">Specifies whether to write a two-byte descriptor for the string that describes the length.</span></span> <span data-ttu-id="29143-946">O padrão é <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="29143-946">The default is <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="29143-947">Lê dados de um arquivo aberto de disco em uma variável.</span><span class="sxs-lookup"><span data-stu-id="29143-947">Reads data from an open disk file into a variable.</span></span> <span data-ttu-id="29143-948">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FileGet" />.</span><span class="sxs-lookup"><span data-stu-id="29143-948">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span></span> <span data-ttu-id="29143-949">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="29143-949">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29143-950">`FileGet` só é válido em `Random` e `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="29143-950">`FileGet` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="29143-951">Dados lidos com `FileGet` costumam ser gravados em um arquivo usando-se `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="29143-951">Data read with `FileGet` is usually written to a file by using `FilePut`.</span></span>  
  
 <span data-ttu-id="29143-952">O primeiro registro ou byte em um arquivo está na posição 1, o segundo registro ou byte está na posição 2 e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="29143-952">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="29143-953">Se você omitir `RecordNumber`, o próximo registro ou byte após a última `FileGet` ou `FilePut` função (ou apontada pela última `Seek` função) é lido.</span><span class="sxs-lookup"><span data-stu-id="29143-953">If you omit `RecordNumber`, the next record or byte following the last `FileGet` or `FilePut` function (or pointed to by the last `Seek` function) is read.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="29143-954">Ao ler de arquivos, não tome decisões sobre o conteúdo de um arquivo com base na extensão de nome de arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-954">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="29143-955">Por exemplo, um arquivo chamado Form1.vb não pode ser um arquivo de origem do Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="29143-955">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="29143-956">Modo aleatório</span><span class="sxs-lookup"><span data-stu-id="29143-956">Random Mode</span></span>  
 <span data-ttu-id="29143-957">Para arquivos abertos no `Random` modo, as seguintes regras se aplicam:</span><span class="sxs-lookup"><span data-stu-id="29143-957">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="29143-958">Se o comprimento dos dados que está sendo lidos for menor que o comprimento especificado na `RecordLength` cláusula do `FileOpen` função, `FileGet` lê registros subsequentes em limites de comprimento de registro.</span><span class="sxs-lookup"><span data-stu-id="29143-958">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FileGet` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="29143-959">O espaço entre o final de um registro e o início do próximo registro é preenchido com o conteúdo existente no buffer de arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-959">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="29143-960">Como a quantidade de dados de preenchimento não pode ser determinada com certeza, geralmente é uma boa ideia ter o comprimento do registro corresponde ao tamanho dos dados que está sendo lidos.</span><span class="sxs-lookup"><span data-stu-id="29143-960">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="29143-961">Por padrão, se a variável que está sendo lida é uma cadeia de caracteres, `FileGet` lê um descritor de dois bytes que contém o comprimento da cadeia de caracteres e, em seguida, lê os dados que vão para a variável.</span><span class="sxs-lookup"><span data-stu-id="29143-961">By default, if the variable being read into is a string, `FileGet` reads a two-byte descriptor that contains the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="29143-962">Portanto, o comprimento do registro especificado pelo `RecordLength` cláusula do `FileOpen` função deve ser pelo menos dois bytes maior do que o comprimento real da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="29143-962">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="29143-963">Visual Basic 6.0 e versões anteriores dão suporte a cadeias de caracteres de comprimento fixo; Quando colocado em um arquivo, o descritor de comprimento não é gravado.</span><span class="sxs-lookup"><span data-stu-id="29143-963">Visual Basic 6.0 and earlier versions support fixed-length strings; when put to a file, the length descriptor is not written.</span></span> <span data-ttu-id="29143-964">Se você deseja ler uma cadeia de caracteres sem o descritor, você deve passar `True` para o `StringIsFixedLength` parâmetro e a cadeia de caracteres lida deve ter o tamanho correto.</span><span class="sxs-lookup"><span data-stu-id="29143-964">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="29143-965">Se a variável que está sendo lida é uma matriz, você pode optar por ler um descritor para o tamanho e a dimensão da matriz.</span><span class="sxs-lookup"><span data-stu-id="29143-965">If the variable being read into is an array, you can choose whether to read a descriptor for the size and dimension of the array.</span></span> <span data-ttu-id="29143-966">Para gravar o descritor, defina as `ArrayIsDynamic` parâmetro para `True`.</span><span class="sxs-lookup"><span data-stu-id="29143-966">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="29143-967">Ao ler a matriz, você precisa coincidir com a forma que de matriz foi escrita.</span><span class="sxs-lookup"><span data-stu-id="29143-967">When reading the array, you have to match the way the array was written.</span></span> <span data-ttu-id="29143-968">Se ele foi gravado com o descritor, você precisará ler o descritor.</span><span class="sxs-lookup"><span data-stu-id="29143-968">If it was written with the descriptor, you have to read the descriptor.</span></span> <span data-ttu-id="29143-969">Se o descritor não for usado, o tamanho e limites da matriz passaram para `FileGet` determinar o que ler.</span><span class="sxs-lookup"><span data-stu-id="29143-969">If the descriptor is not used, the size and bounds of the array passed into `FileGet` determine what to read.</span></span>  
  
     <span data-ttu-id="29143-970">O descritor especifica a classificação de matriz, o tamanho e os limites inferiores para cada classificação.</span><span class="sxs-lookup"><span data-stu-id="29143-970">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="29143-971">Seu comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="29143-971">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="29143-972">O comprimento do registro especificado pelo `RecordLength` parâmetro no `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessário para gravar os dados de matriz e o descritor de matriz.</span><span class="sxs-lookup"><span data-stu-id="29143-972">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="29143-973">Por exemplo, a seguinte declaração de matriz requer 218 bytes quando a matriz é gravada no disco.</span><span class="sxs-lookup"><span data-stu-id="29143-973">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#21)]  
  
     <span data-ttu-id="29143-974">218 bytes são distribuídos da seguinte maneira:</span><span class="sxs-lookup"><span data-stu-id="29143-974">The 218 bytes are distributed as follows:</span></span>  
  
    -   <span data-ttu-id="29143-975">18 bytes para o descritor: (2 + 8 \* 2)</span><span class="sxs-lookup"><span data-stu-id="29143-975">18 bytes for the descriptor: (2 + 8 \* 2)</span></span>  
  
    -   <span data-ttu-id="29143-976">200 bytes para os dados: (5 \* 10 \* 4).</span><span class="sxs-lookup"><span data-stu-id="29143-976">200 bytes for the data: (5 \* 10 \* 4).</span></span>  
  
-   <span data-ttu-id="29143-977">Se a variável que está sendo lida for qualquer outro tipo de variável (não uma cadeia de caracteres de comprimento variável ou um objeto), `FileGet` lê apenas os dados da variável.</span><span class="sxs-lookup"><span data-stu-id="29143-977">If the variable being read into is any other type of variable (not a variable-length string or an object), `FileGet` reads only the variable data.</span></span> <span data-ttu-id="29143-978">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual ao comprimento dos dados que está sendo lidos.</span><span class="sxs-lookup"><span data-stu-id="29143-978">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being read.</span></span>  
  
-   <span data-ttu-id="29143-979">`FileGet` lê os elementos de estruturas como se cada um estava sendo lido individualmente, exceto que não há nenhum preenchimento entre elementos.</span><span class="sxs-lookup"><span data-stu-id="29143-979">`FileGet` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="29143-980">No disco, uma matriz dinâmica em um tipo definido pelo usuário (escritos com `FilePut`) é prefixado por um descritor cujo comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="29143-980">On disk, a dynamic array in a user-defined type (written with `FilePut`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="29143-981">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessários para ler os elementos individuais.</span><span class="sxs-lookup"><span data-stu-id="29143-981">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements.</span></span> <span data-ttu-id="29143-982">Isso inclui qualquer matrizes e seus descritores.</span><span class="sxs-lookup"><span data-stu-id="29143-982">This includes any arrays and their descriptors.</span></span> <span data-ttu-id="29143-983">O `VBFixedString` atributo pode ser aplicado a campos de cadeia de caracteres em estruturas para indicar o tamanho de uma cadeia de caracteres quando gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="29143-983">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of a string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="29143-984">Modo binário</span><span class="sxs-lookup"><span data-stu-id="29143-984">Binary Mode</span></span>  
 <span data-ttu-id="29143-985">Para arquivos abertos no `Binary` modo, a maioria do `Random` modo regras se aplicam, com algumas exceções.</span><span class="sxs-lookup"><span data-stu-id="29143-985">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="29143-986">As seguintes regras para arquivos abertos no `Binary` modo são diferentes das regras para `Random` modo:</span><span class="sxs-lookup"><span data-stu-id="29143-986">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="29143-987">A cláusula `RecordLength` na função de `FileOpen` não está em vigor.</span><span class="sxs-lookup"><span data-stu-id="29143-987">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="29143-988">`FileGet` lê todas as variáveis do disco de maneira contígua; ou seja, sem nenhum preenchimento entre registros.</span><span class="sxs-lookup"><span data-stu-id="29143-988">`FileGet` reads all variables from disk contiguously; that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="29143-989">Para qualquer matriz que não seja uma matriz em uma estrutura, `FileGet` lê apenas os dados.</span><span class="sxs-lookup"><span data-stu-id="29143-989">For any array other than an array in a structure, `FileGet` reads only the data.</span></span> <span data-ttu-id="29143-990">Nenhum descritor é lido.</span><span class="sxs-lookup"><span data-stu-id="29143-990">No descriptor is read.</span></span>  
  
-   <span data-ttu-id="29143-991">`FileGet` lê cadeias de caracteres de comprimento variável que não são elementos das estruturas sem esperar o descritor de dois bytes de comprimento.</span><span class="sxs-lookup"><span data-stu-id="29143-991">`FileGet` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="29143-992">O número de bytes lidos é igual ao número de caracteres já na cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="29143-992">The number of bytes read equals the number of characters already in the string.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="29143-993">Leitura de um arquivo usando o `FileGet` função requer `Read` acessar do <xref:System.Security.Permissions.FileIOPermissionAccess> enumeração.</span><span class="sxs-lookup"><span data-stu-id="29143-993">Reading from a file by using the `FileGet` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="29143-994"><paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</span><span class="sxs-lookup"><span data-stu-id="29143-994"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="29143-995">O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="29143-995">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/reading-from-files.md"><span data-ttu-id="29143-996">Lendo a partir de arquivos no Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-996">Reading from Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/writing-to-files.md"><span data-ttu-id="29143-997">Gravando em arquivos no Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-997">Writing to Files in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FileGet">
      <MemberSignature Language="C#" Value="public static void FileGet (int FileNumber, ref Array Value, long RecordNumber = -1, bool ArrayIsDynamic = false, bool StringIsFixedLength = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGet(int32 FileNumber, class System.Array&amp; Value, int64 RecordNumber, bool ArrayIsDynamic, bool StringIsFixedLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Array@,System.Int64,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGet (FileNumber As Integer, ByRef Value As Array, Optional RecordNumber As Long = -1, Optional ArrayIsDynamic As Boolean = false, Optional StringIsFixedLength As Boolean = false)" />
      <MemberSignature Language="F#" Value="static member FileGet : int *  * int64 * bool * bool -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileGet (FileNumber, Value, RecordNumber, ArrayIsDynamic, StringIsFixedLength)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Array" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
        <Parameter Name="ArrayIsDynamic" Type="System.Boolean" />
        <Parameter Name="StringIsFixedLength" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="29143-998">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-998">Required.</span></span> <span data-ttu-id="29143-999">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="29143-999">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="29143-1000">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-1000">Required.</span></span> <span data-ttu-id="29143-1001">Nome de variável válido no qual os dados são lidos.</span><span class="sxs-lookup"><span data-stu-id="29143-1001">Valid variable name into which data is read.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="29143-1002">Opcional.</span><span class="sxs-lookup"><span data-stu-id="29143-1002">Optional.</span></span> <span data-ttu-id="29143-1003">Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a leitura começa.</span><span class="sxs-lookup"><span data-stu-id="29143-1003">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span></span></param>
        <param name="ArrayIsDynamic"><span data-ttu-id="29143-1004">Opcional.</span><span class="sxs-lookup"><span data-stu-id="29143-1004">Optional.</span></span> <span data-ttu-id="29143-1005">Aplica-se somente ao gravar uma matriz.</span><span class="sxs-lookup"><span data-stu-id="29143-1005">Applies only when writing an array.</span></span> <span data-ttu-id="29143-1006">Especifica se a matriz deve ser tratada como dinâmica e se é necessário um descritor de matriz que descreve o tamanho e limites da matriz.</span><span class="sxs-lookup"><span data-stu-id="29143-1006">Specifies whether the array is to be treated as dynamic and whether an array descriptor describing the size and bounds of the array is necessary.</span></span></param>
        <param name="StringIsFixedLength"><span data-ttu-id="29143-1007">Opcional.</span><span class="sxs-lookup"><span data-stu-id="29143-1007">Optional.</span></span> <span data-ttu-id="29143-1008">Aplica-se somente ao gravar uma cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="29143-1008">Applies only when writing a string.</span></span> <span data-ttu-id="29143-1009">Especifica se deve gravar um descritor de dois bytes para a cadeia de caracteres que descreve o tamanho.</span><span class="sxs-lookup"><span data-stu-id="29143-1009">Specifies whether to write a two-byte descriptor for the string that describes the length.</span></span> <span data-ttu-id="29143-1010">O padrão é <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="29143-1010">The default is <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="29143-1011">Lê dados de um arquivo aberto de disco em uma variável.</span><span class="sxs-lookup"><span data-stu-id="29143-1011">Reads data from an open disk file into a variable.</span></span> <span data-ttu-id="29143-1012">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FileGet" />.</span><span class="sxs-lookup"><span data-stu-id="29143-1012">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span></span> <span data-ttu-id="29143-1013">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="29143-1013">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29143-1014">`FileGet` só é válido em `Random` e `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="29143-1014">`FileGet` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="29143-1015">Dados lidos com `FileGet` costumam ser gravados em um arquivo usando-se `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="29143-1015">Data read with `FileGet` is usually written to a file by using `FilePut`.</span></span>  
  
 <span data-ttu-id="29143-1016">O primeiro registro ou byte em um arquivo está na posição 1, o segundo registro ou byte está na posição 2 e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="29143-1016">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="29143-1017">Se você omitir `RecordNumber`, o próximo registro ou byte após a última `FileGet` ou `FilePut` função (ou apontada pela última `Seek` função) é lido.</span><span class="sxs-lookup"><span data-stu-id="29143-1017">If you omit `RecordNumber`, the next record or byte following the last `FileGet` or `FilePut` function (or pointed to by the last `Seek` function) is read.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="29143-1018">Ao ler de arquivos, não tome decisões sobre o conteúdo de um arquivo com base na extensão de nome de arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-1018">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="29143-1019">Por exemplo, um arquivo chamado Form1.vb não pode ser um arquivo de origem do Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="29143-1019">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="29143-1020">Modo aleatório</span><span class="sxs-lookup"><span data-stu-id="29143-1020">Random Mode</span></span>  
 <span data-ttu-id="29143-1021">Para arquivos abertos no `Random` modo, as seguintes regras se aplicam:</span><span class="sxs-lookup"><span data-stu-id="29143-1021">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="29143-1022">Se o comprimento dos dados que está sendo lidos for menor que o comprimento especificado na `RecordLength` cláusula do `FileOpen` função, `FileGet` lê registros subsequentes em limites de comprimento de registro.</span><span class="sxs-lookup"><span data-stu-id="29143-1022">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FileGet` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="29143-1023">O espaço entre o final de um registro e o início do próximo registro é preenchido com o conteúdo existente no buffer de arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-1023">The space between the end of one record and the starting of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="29143-1024">Como a quantidade de dados de preenchimento não pode ser determinada com certeza, geralmente é uma boa ideia ter o comprimento do registro corresponde ao tamanho dos dados que está sendo lidos.</span><span class="sxs-lookup"><span data-stu-id="29143-1024">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="29143-1025">Por padrão, se a variável que está sendo lida é uma cadeia de caracteres, `FileGet` lê um descritor de dois bytes que contém o comprimento da cadeia de caracteres e, em seguida, lê os dados que vão para a variável.</span><span class="sxs-lookup"><span data-stu-id="29143-1025">By default, if the variable being read into is a string, `FileGet` reads a two-byte descriptor that contains the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="29143-1026">Portanto, o comprimento do registro especificado pelo `RecordLength` cláusula do `FileOpen` função deve ser pelo menos dois bytes maior do que o comprimento real da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="29143-1026">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="29143-1027">Visual Basic 6.0 e versões anteriores dão suporte a cadeias de caracteres de comprimento fixo; Quando colocado em um arquivo, o descritor de comprimento não é gravado.</span><span class="sxs-lookup"><span data-stu-id="29143-1027">Visual Basic 6.0 and earlier versions support fixed-length strings; when put to a file, the length descriptor is not written.</span></span> <span data-ttu-id="29143-1028">Se você deseja ler uma cadeia de caracteres sem o descritor, você deve passar `True` para o `StringIsFixedLength` parâmetro e a cadeia de caracteres lida deve ter o tamanho correto.</span><span class="sxs-lookup"><span data-stu-id="29143-1028">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="29143-1029">Se a variável que está sendo lida é uma matriz, você pode optar por ler um descritor para o tamanho e a dimensão da matriz.</span><span class="sxs-lookup"><span data-stu-id="29143-1029">If the variable being read into is an array, you can choose whether to read a descriptor for the size and dimension of the array.</span></span> <span data-ttu-id="29143-1030">Para gravar o descritor, defina as `ArrayIsDynamic` parâmetro para `True`.</span><span class="sxs-lookup"><span data-stu-id="29143-1030">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="29143-1031">Ao ler a matriz, você precisa coincidir com a forma que de matriz foi escrita.</span><span class="sxs-lookup"><span data-stu-id="29143-1031">When reading the array, you have to match the way the array was written.</span></span> <span data-ttu-id="29143-1032">Se ele foi gravado com o descritor, você precisará ler o descritor.</span><span class="sxs-lookup"><span data-stu-id="29143-1032">If it was written with the descriptor, you have to read the descriptor.</span></span> <span data-ttu-id="29143-1033">Se o descritor não for usado, o tamanho e limites da matriz passaram para `FileGet` determinar o que ler.</span><span class="sxs-lookup"><span data-stu-id="29143-1033">If the descriptor is not used, the size and bounds of the array passed into `FileGet` determine what to read.</span></span>  
  
     <span data-ttu-id="29143-1034">O descritor especifica a classificação de matriz, o tamanho e os limites inferiores para cada classificação.</span><span class="sxs-lookup"><span data-stu-id="29143-1034">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="29143-1035">Seu comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="29143-1035">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="29143-1036">O comprimento do registro especificado pelo `RecordLength` parâmetro no `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessário para gravar os dados de matriz e o descritor de matriz.</span><span class="sxs-lookup"><span data-stu-id="29143-1036">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="29143-1037">Por exemplo, a seguinte declaração de matriz requer 218 bytes quando a matriz é gravada no disco.</span><span class="sxs-lookup"><span data-stu-id="29143-1037">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#21)]  
  
     <span data-ttu-id="29143-1038">218 bytes são distribuídos da seguinte maneira:</span><span class="sxs-lookup"><span data-stu-id="29143-1038">The 218 bytes are distributed as follows:</span></span>  
  
    -   <span data-ttu-id="29143-1039">18 bytes para o descritor: (2 + 8 \* 2)</span><span class="sxs-lookup"><span data-stu-id="29143-1039">18 bytes for the descriptor: (2 + 8 \* 2)</span></span>  
  
    -   <span data-ttu-id="29143-1040">200 bytes para os dados: (5 \* 10 \* 4).</span><span class="sxs-lookup"><span data-stu-id="29143-1040">200 bytes for the data: (5 \* 10 \* 4).</span></span>  
  
-   <span data-ttu-id="29143-1041">Se a variável que está sendo lida for qualquer outro tipo de variável (não uma cadeia de caracteres de comprimento variável ou um objeto), `FileGet` lê apenas os dados da variável.</span><span class="sxs-lookup"><span data-stu-id="29143-1041">If the variable being read into is any other type of variable (not a variable-length string or an object), `FileGet` reads only the variable data.</span></span> <span data-ttu-id="29143-1042">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual ao comprimento dos dados que está sendo lidos.</span><span class="sxs-lookup"><span data-stu-id="29143-1042">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being read.</span></span>  
  
-   <span data-ttu-id="29143-1043">`FileGet` lê os elementos de estruturas como se cada um estava sendo lido individualmente, exceto que não há nenhum preenchimento entre elementos.</span><span class="sxs-lookup"><span data-stu-id="29143-1043">`FileGet` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="29143-1044">No disco, uma matriz dinâmica em um tipo definido pelo usuário (escritos com `FilePut`) é prefixado por um descritor cujo comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="29143-1044">On disk, a dynamic array in a user-defined type (written with `FilePut`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="29143-1045">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessários para ler os elementos individuais.</span><span class="sxs-lookup"><span data-stu-id="29143-1045">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements.</span></span> <span data-ttu-id="29143-1046">Isso inclui qualquer matrizes e seus descritores.</span><span class="sxs-lookup"><span data-stu-id="29143-1046">This includes any arrays and their descriptors.</span></span> <span data-ttu-id="29143-1047">O `VBFixedString` atributo pode ser aplicado a campos de cadeia de caracteres em estruturas para indicar o tamanho de uma cadeia de caracteres quando gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="29143-1047">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of a string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="29143-1048">Modo binário</span><span class="sxs-lookup"><span data-stu-id="29143-1048">Binary Mode</span></span>  
 <span data-ttu-id="29143-1049">Para arquivos abertos no `Binary` modo, a maioria do `Random` modo regras se aplicam, com algumas exceções.</span><span class="sxs-lookup"><span data-stu-id="29143-1049">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="29143-1050">As seguintes regras para arquivos abertos no `Binary` modo são diferentes das regras para `Random` modo:</span><span class="sxs-lookup"><span data-stu-id="29143-1050">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="29143-1051">A cláusula `RecordLength` na função de `FileOpen` não está em vigor.</span><span class="sxs-lookup"><span data-stu-id="29143-1051">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="29143-1052">`FileGet` lê todas as variáveis do disco de maneira contígua; ou seja, sem nenhum preenchimento entre registros.</span><span class="sxs-lookup"><span data-stu-id="29143-1052">`FileGet` reads all variables from disk contiguously; that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="29143-1053">Para qualquer matriz que não seja uma matriz em uma estrutura, `FileGet` lê apenas os dados.</span><span class="sxs-lookup"><span data-stu-id="29143-1053">For any array other than an array in a structure, `FileGet` reads only the data.</span></span> <span data-ttu-id="29143-1054">Nenhum descritor é lido.</span><span class="sxs-lookup"><span data-stu-id="29143-1054">No descriptor is read.</span></span>  
  
-   <span data-ttu-id="29143-1055">`FileGet` lê cadeias de caracteres de comprimento variável que não são elementos das estruturas sem esperar o descritor de dois bytes de comprimento.</span><span class="sxs-lookup"><span data-stu-id="29143-1055">`FileGet` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="29143-1056">O número de bytes lidos é igual ao número de caracteres já na cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="29143-1056">The number of bytes read equals the number of characters already in the string.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="29143-1057">Leitura de um arquivo usando o `FileGet` função requer `Read` acessar do <xref:System.Security.Permissions.FileIOPermissionAccess> enumeração.</span><span class="sxs-lookup"><span data-stu-id="29143-1057">Reading from a file by using the `FileGet` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="29143-1058"><paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</span><span class="sxs-lookup"><span data-stu-id="29143-1058"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="29143-1059">O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="29143-1059">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/reading-from-files.md"><span data-ttu-id="29143-1060">Lendo a partir de arquivos no Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-1060">Reading from Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/writing-to-files.md"><span data-ttu-id="29143-1061">Gravando em arquivos no Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-1061">Writing to Files in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FileGetObject">
      <MemberSignature Language="C#" Value="public static void FileGetObject (int FileNumber, ref object Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGetObject(int32 FileNumber, object&amp; Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGetObject (FileNumber As Integer, ByRef Value As Object, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FileGetObject : int *  * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileGetObject (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Object" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="29143-1062">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-1062">Required.</span></span> <span data-ttu-id="29143-1063">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="29143-1063">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="29143-1064">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-1064">Required.</span></span> <span data-ttu-id="29143-1065">Nome de variável válido no qual os dados são lidos.</span><span class="sxs-lookup"><span data-stu-id="29143-1065">Valid variable name into which data is read.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="29143-1066">Opcional.</span><span class="sxs-lookup"><span data-stu-id="29143-1066">Optional.</span></span> <span data-ttu-id="29143-1067">Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a leitura começa.</span><span class="sxs-lookup"><span data-stu-id="29143-1067">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span></span></param>
        <summary><span data-ttu-id="29143-1068">Lê dados de um arquivo aberto de disco em uma variável.</span><span class="sxs-lookup"><span data-stu-id="29143-1068">Reads data from an open disk file into a variable.</span></span>  <span data-ttu-id="29143-1069">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FileGetObject" />.</span><span class="sxs-lookup"><span data-stu-id="29143-1069">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGetObject" />.</span></span> <span data-ttu-id="29143-1070">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="29143-1070">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29143-1071">O `FileGetObject` função é usada em vez de `FileGet` para evitar ambiguidades em tempo de compilação se tipo `Object` é retornado em vez de outro tipo, como `Integer`, `Long`, `Short`e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="29143-1071">The `FileGetObject` function is used instead of `FileGet` to avoid ambiguities at compile time if type `Object` is returned instead of another type, such as `Integer`, `Long`, `Short`, and so forth.</span></span>  
  
 <span data-ttu-id="29143-1072">Se você pretende gravar o `Variant` tipo, `FileGetObject` é necessária.</span><span class="sxs-lookup"><span data-stu-id="29143-1072">If you intend to write out the `Variant` type, `FileGetObject` is required.</span></span> <span data-ttu-id="29143-1073">Em caso de dúvida, se você estiver usando um objeto para o segundo parâmetro, é sempre aconselhável que você use `FilePutObject` e `FileGetObject`.</span><span class="sxs-lookup"><span data-stu-id="29143-1073">When in doubt, if you are using an object for the second parameter, it is always suggested that you use `FilePutObject` and `FileGetObject`.</span></span>  
  
 <span data-ttu-id="29143-1074">`FileGetObject` só é válido em `Random` e `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="29143-1074">`FileGetObject` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="29143-1075">Dados lidos com `FileGetObject` geralmente são gravados com `FilePutObject`.</span><span class="sxs-lookup"><span data-stu-id="29143-1075">Data read with `FileGetObject` is usually written with `FilePutObject`.</span></span>  
  
 <span data-ttu-id="29143-1076">O primeiro registro ou byte em um arquivo está na posição 1, o segundo registro ou byte está na posição 2 e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="29143-1076">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="29143-1077">Se você omitir `RecordNumber`, `FileGetObject` lê o registro ou byte após a última `FileGetObject` ou `FilePutObject` função (ou apontada pela última `Seek` função).</span><span class="sxs-lookup"><span data-stu-id="29143-1077">If you omit `RecordNumber`, `FileGetObject` reads the record or byte after the last `FileGetObject` or `FilePutObject` function (or pointed to by the last `Seek` function).</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="29143-1078">Modo aleatório</span><span class="sxs-lookup"><span data-stu-id="29143-1078">Random Mode</span></span>  
 <span data-ttu-id="29143-1079">Para arquivos abertos no `Random` modo, as seguintes regras se aplicam:</span><span class="sxs-lookup"><span data-stu-id="29143-1079">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="29143-1080">Se o comprimento dos dados que está sendo lidos for menor que o comprimento especificado na `RecordLength` cláusula do `FileOpen` função, `FileGetObject` lê registros subsequentes em limites de comprimento de registro.</span><span class="sxs-lookup"><span data-stu-id="29143-1080">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FileGetObject` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="29143-1081">O espaço entre o final de um registro e o início do próximo registro é preenchido com o conteúdo existente no buffer de arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-1081">The space between the end of one record and the beginning of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="29143-1082">Como a quantidade de dados de preenchimento não pode ser determinada precisamente, é uma boa ideia ter o comprimento do registro corresponde ao tamanho dos dados que está sendo lidos.</span><span class="sxs-lookup"><span data-stu-id="29143-1082">Because the amount of padding data cannot be precisely determined, it is a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="29143-1083">Se a variável que está sendo lida é uma cadeia de caracteres, por padrão `FileGetObject` lê um descritor de dois bytes que contém o comprimento da cadeia de caracteres e, em seguida, lê os dados que vão para a variável.</span><span class="sxs-lookup"><span data-stu-id="29143-1083">If the variable being read into is a string, by default `FileGetObject` reads a two-byte descriptor containing the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="29143-1084">Portanto, o comprimento do registro especificado pelo `RecordLength` cláusula do `FileOpen` função deve ser pelo menos dois bytes maior do que o comprimento real da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="29143-1084">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="29143-1085">Visual Basic 6.0 e versões anteriores dão suporte a cadeias de caracteres de comprimento fixo e ao ler um arquivo, o descritor de comprimento não é gravado.</span><span class="sxs-lookup"><span data-stu-id="29143-1085">Visual Basic 6.0 and earlier versions support fixed-length strings and when read to a file, the length descriptor is not written.</span></span> <span data-ttu-id="29143-1086">Se você deseja ler uma cadeia de caracteres sem o descritor, você deve passar `True` para o `StringIsFixedLength` parâmetro e a cadeia de caracteres lida deve ter o tamanho correto.</span><span class="sxs-lookup"><span data-stu-id="29143-1086">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="29143-1087">Se a variável que está sendo lida é uma matriz e, em seguida, o comprimento do registro especificado pelo `RecordLength` parâmetro no `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessário para gravar os dados de matriz e o descritor de matriz.</span><span class="sxs-lookup"><span data-stu-id="29143-1087">If the variable being read into is an array, then the record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="29143-1088">O descritor especifica a classificação de matriz, o tamanho e os limites inferiores para cada classificação.</span><span class="sxs-lookup"><span data-stu-id="29143-1088">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="29143-1089">Seu comprimento é igual a 2 mais 8 vezes o número de dimensões: 2 + 8 \* NumberOfDimensions.</span><span class="sxs-lookup"><span data-stu-id="29143-1089">Its length equals 2 plus 8 times the number of dimensions: 2 + 8 \* NumberOfDimensions.</span></span>  
  
     <span data-ttu-id="29143-1090">Por exemplo, a seguinte declaração de matriz requer 218 bytes quando a matriz é gravada no disco:</span><span class="sxs-lookup"><span data-stu-id="29143-1090">For example, the following array declaration requires 218 bytes when the array is written to disk:</span></span>  
  
     [!code-vb[VbVbalrCatRef#27](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#27)]  
  
     <span data-ttu-id="29143-1091">218 bytes são distribuídos da seguinte maneira: 18 bytes para o descritor (2 + 8 \* 2) e 100 bytes para os dados (5 \* 10 \* 4).</span><span class="sxs-lookup"><span data-stu-id="29143-1091">The 218 bytes are distributed as follows: 18 bytes for the descriptor (2 + 8 \* 2), and 100 bytes for the data (5 \* 10 \* 4).</span></span>  
  
-   <span data-ttu-id="29143-1092">`FileGetObject` lê os elementos de estruturas como se cada um estava sendo lido individualmente, exceto que não há nenhum preenchimento entre elementos.</span><span class="sxs-lookup"><span data-stu-id="29143-1092">`FileGetObject` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="29143-1093">No disco, uma matriz dinâmica em um tipo definido pelo usuário (escritos com `FilePutObject`) é prefixado por um descritor cujo comprimento é igual a 2 mais 8 vezes o número de dimensões: 2 + 8 \* NumberOfDimensions.</span><span class="sxs-lookup"><span data-stu-id="29143-1093">On disk, a dynamic array in a user-defined type (written with `FilePutObject`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: 2 + 8 \* NumberOfDimensions.</span></span> <span data-ttu-id="29143-1094">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessários para ler os elementos individuais, incluindo qualquer matrizes e seus descritores.</span><span class="sxs-lookup"><span data-stu-id="29143-1094">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements, including any arrays and their descriptors.</span></span> <span data-ttu-id="29143-1095">O <xref:Microsoft.VisualBasic.VBFixedStringAttribute> classe pode ser aplicada a campos de cadeia de caracteres em estruturas para indicar o tamanho da cadeia de caracteres quando gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="29143-1095">The <xref:Microsoft.VisualBasic.VBFixedStringAttribute> class can be applied to string fields in the structures to indicate the size of string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="29143-1096">Modo binário</span><span class="sxs-lookup"><span data-stu-id="29143-1096">Binary Mode</span></span>  
 <span data-ttu-id="29143-1097">Para arquivos abertos no `Binary` modo, todos os `Random` regras se aplicam, com as seguintes exceções:</span><span class="sxs-lookup"><span data-stu-id="29143-1097">For files opened in `Binary` mode, all of the `Random` rules apply, with these exceptions:</span></span>  
  
-   <span data-ttu-id="29143-1098">A cláusula `RecordLength` na função de `FileOpen` não está em vigor.</span><span class="sxs-lookup"><span data-stu-id="29143-1098">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="29143-1099">`FileGetObject` lê todas as variáveis do disco de forma contígua, ou seja, sem nenhum preenchimento entre registros.</span><span class="sxs-lookup"><span data-stu-id="29143-1099">`FileGetObject` reads all variables from disk contiguously, that is, with no padding between records.</span></span>  
  
-   <span data-ttu-id="29143-1100">Para qualquer matriz que não seja uma matriz em uma estrutura, `FileGetObject` lê apenas os dados.</span><span class="sxs-lookup"><span data-stu-id="29143-1100">For any array other than an array in a structure, `FileGetObject` reads only the data.</span></span> <span data-ttu-id="29143-1101">Nenhum descritor é lido.</span><span class="sxs-lookup"><span data-stu-id="29143-1101">No descriptor is read.</span></span>  
  
 <span data-ttu-id="29143-1102">`FileGetObject` lê cadeias de caracteres de comprimento variável que não são elementos das estruturas sem esperar o descritor de dois bytes de comprimento.</span><span class="sxs-lookup"><span data-stu-id="29143-1102">`FileGetObject` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="29143-1103">O número de bytes lidos é igual ao número de caracteres já na cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="29143-1103">The number of bytes read equals the number of characters already in the string.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="29143-1104">Ao ler de arquivos, não tome decisões sobre o conteúdo de um arquivo com base na extensão de nome de arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-1104">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="29143-1105">Por exemplo, um arquivo chamado Form1.vb não pode ser um arquivo de origem do Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="29143-1105">For example, a file named Form1.vb may not be a Visual Basic source file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29143-1106">O exemplo a seguir lê um registro em um arquivo de teste e, em seguida, irá recuperá-lo.</span><span class="sxs-lookup"><span data-stu-id="29143-1106">The following example reads a record into a test file and then retrieves it.</span></span>  
  
 [!code-vb[VbVbalrCatRef#26](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#26)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/reading-from-files.md"><span data-ttu-id="29143-1107">Lendo a partir de arquivos no Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-1107">Reading from Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/writing-to-files.md"><span data-ttu-id="29143-1108">Gravando em arquivos no Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-1108">Writing to Files in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FileLen">
      <MemberSignature Language="C#" Value="public static long FileLen (string PathName);" />
      <MemberSignature Language="ILAsm" Value=".method public static int64 FileLen(string PathName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileLen(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FileLen (PathName As String) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long FileLen(System::String ^ PathName);" />
      <MemberSignature Language="F#" Value="static member FileLen : string -&gt; int64" Usage="Microsoft.VisualBasic.FileSystem.FileLen PathName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="PathName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="PathName"><span data-ttu-id="29143-1109">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-1109">Required.</span></span> <span data-ttu-id="29143-1110">Uma expressão de cadeia de caracteres que especifica um arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-1110">A string expression that specifies a file.</span></span> <span data-ttu-id="29143-1111"><paramref name="PathName" /> pode incluir o diretório ou a pasta, bem como a unidade.</span><span class="sxs-lookup"><span data-stu-id="29143-1111"><paramref name="PathName" /> may include the directory or folder, and the drive.</span></span></param>
        <summary><span data-ttu-id="29143-1112">Retorna um valor que especifica o tamanho de um arquivo em bytes.</span><span class="sxs-lookup"><span data-stu-id="29143-1112">Returns a value that specifies the length of a file in bytes.</span></span> <span data-ttu-id="29143-1113">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FileLen" />.</span><span class="sxs-lookup"><span data-stu-id="29143-1113">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileLen" />.</span></span> <span data-ttu-id="29143-1114">Para obter mais informações, consulte <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)" />.</span><span class="sxs-lookup"><span data-stu-id="29143-1114">For more information, see <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)" />.</span></span></summary>
        <returns><span data-ttu-id="29143-1115">O tamanho do arquivo em bytes.</span><span class="sxs-lookup"><span data-stu-id="29143-1115">The length of a file in bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29143-1116">Se o arquivo especificado estiver aberto quando o `FileLen` função é chamada, o valor retornado representa o tamanho do arquivo no momento em que ele foi aberto.</span><span class="sxs-lookup"><span data-stu-id="29143-1116">If the specified file is open when the `FileLen` function is called, the value returned represents the size of the file at the time it was opened.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="29143-1117">Para obter o tamanho atual de um arquivo aberto, use o `LOF` função.</span><span class="sxs-lookup"><span data-stu-id="29143-1117">To obtain the current length of an open file, use the `LOF` function.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29143-1118">Este exemplo usa o `FileLen` função para retornar o comprimento de um arquivo em bytes.</span><span class="sxs-lookup"><span data-stu-id="29143-1118">This example uses the `FileLen` function to return the length of a file in bytes.</span></span> <span data-ttu-id="29143-1119">Para fins deste exemplo, suponha que `TestFile` é um arquivo que contém alguns dados.</span><span class="sxs-lookup"><span data-stu-id="29143-1119">For purposes of this example, assume that `TestFile` is a file that contains some data.</span></span>  
  
 [!code-vb[VbVbalrCatRef#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="29143-1120">Arquivo inexistente.</span><span class="sxs-lookup"><span data-stu-id="29143-1120">File does not exist.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileDateTime(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.LOF(System.Int32)" />
        <altmember cref="T:System.IO.FileNotFoundException" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md"><span data-ttu-id="29143-1121">Access de arquivo com o Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-1121">File Access with Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FileOpen">
      <MemberSignature Language="C#" Value="public static void FileOpen (int FileNumber, string FileName, Microsoft.VisualBasic.OpenMode Mode, Microsoft.VisualBasic.OpenAccess Access = Microsoft.VisualBasic.OpenAccess.Default, Microsoft.VisualBasic.OpenShare Share = Microsoft.VisualBasic.OpenShare.Default, int RecordLength = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileOpen(int32 FileNumber, string FileName, valuetype Microsoft.VisualBasic.OpenMode Mode, valuetype Microsoft.VisualBasic.OpenAccess Access, valuetype Microsoft.VisualBasic.OpenShare Share, int32 RecordLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileOpen (FileNumber As Integer, FileName As String, Mode As OpenMode, Optional Access As OpenAccess = Microsoft.VisualBasic.OpenAccess.Default, Optional Share As OpenShare = Microsoft.VisualBasic.OpenShare.Default, Optional RecordLength As Integer = -1)" />
      <MemberSignature Language="F#" Value="static member FileOpen : int * string * Microsoft.VisualBasic.OpenMode * Microsoft.VisualBasic.OpenAccess * Microsoft.VisualBasic.OpenShare * int -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileOpen (FileNumber, FileName, Mode, Access, Share, RecordLength)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="FileName" Type="System.String" />
        <Parameter Name="Mode" Type="Microsoft.VisualBasic.OpenMode" />
        <Parameter Name="Access" Type="Microsoft.VisualBasic.OpenAccess" />
        <Parameter Name="Share" Type="Microsoft.VisualBasic.OpenShare" />
        <Parameter Name="RecordLength" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="29143-1122">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-1122">Required.</span></span> <span data-ttu-id="29143-1123">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="29143-1123">Any valid file number.</span></span> <span data-ttu-id="29143-1124">Use a função de <see langword="FreeFile" /> para obter o próximo número disponível de arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-1124">Use the <see langword="FreeFile" /> function to obtain the next available file number.</span></span></param>
        <param name="FileName"><span data-ttu-id="29143-1125">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-1125">Required.</span></span> <span data-ttu-id="29143-1126">Uma expressão de cadeia de caracteres que especifica um nome de arquivo – pode incluir o diretório ou a pasta e a unidade.</span><span class="sxs-lookup"><span data-stu-id="29143-1126">A string expression that specifies a file name - may include directory or folder, and drive.</span></span></param>
        <param name="Mode"><span data-ttu-id="29143-1127">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-1127">Required.</span></span> <span data-ttu-id="29143-1128">Enumeração especificando o modo de arquivo: <see langword="Append" />, <see langword="Binary" />, <see langword="Input" />, <see langword="Output" /> ou <see langword="Random" />.</span><span class="sxs-lookup"><span data-stu-id="29143-1128">Enumeration specifying the file mode: <see langword="Append" />, <see langword="Binary" />, <see langword="Input" />, <see langword="Output" />, or <see langword="Random" />.</span></span> <span data-ttu-id="29143-1129">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.OpenMode" />.</span><span class="sxs-lookup"><span data-stu-id="29143-1129">For more information, see <see cref="T:Microsoft.VisualBasic.OpenMode" /> .</span></span></param>
        <param name="Access"><span data-ttu-id="29143-1130">Opcional.</span><span class="sxs-lookup"><span data-stu-id="29143-1130">Optional.</span></span> <span data-ttu-id="29143-1131">Enumeração especificando as operações permitidas no arquivo aberto: <see langword="Read" />, <see langword="Write" /> ou <see langword="ReadWrite" />.</span><span class="sxs-lookup"><span data-stu-id="29143-1131">Enumeration specifying the operations permitted on the open file: <see langword="Read" />, <see langword="Write" />, or <see langword="ReadWrite" />.</span></span> <span data-ttu-id="29143-1132">Assume o padrão de <see langword="ReadWrite" />.</span><span class="sxs-lookup"><span data-stu-id="29143-1132">Defaults to <see langword="ReadWrite" />.</span></span> <span data-ttu-id="29143-1133">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.OpenAccess" />.</span><span class="sxs-lookup"><span data-stu-id="29143-1133">For more information, see <see cref="T:Microsoft.VisualBasic.OpenAccess" /> .</span></span></param>
        <param name="Share"><span data-ttu-id="29143-1134">Opcional.</span><span class="sxs-lookup"><span data-stu-id="29143-1134">Optional.</span></span> <span data-ttu-id="29143-1135">Enumeração especificando as operações não permitidas no arquivo aberto: <see langword="Shared" />, <see langword="Lock Read" />, <see langword="Lock Write" /> ou <see langword="Lock Read Write" />.</span><span class="sxs-lookup"><span data-stu-id="29143-1135">Enumeration specifying the operations not permitted on the open file by other processes: <see langword="Shared" />, <see langword="Lock Read" />, <see langword="Lock Write" />, and <see langword="Lock Read Write" />.</span></span> <span data-ttu-id="29143-1136">Assume o padrão de <see langword="Lock Read Write" />.</span><span class="sxs-lookup"><span data-stu-id="29143-1136">Defaults to <see langword="Lock Read Write" />.</span></span> <span data-ttu-id="29143-1137">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.OpenShare" />.</span><span class="sxs-lookup"><span data-stu-id="29143-1137">For more information, see <see cref="T:Microsoft.VisualBasic.OpenShare" /> .</span></span></param>
        <param name="RecordLength"><span data-ttu-id="29143-1138">Opcional.</span><span class="sxs-lookup"><span data-stu-id="29143-1138">Optional.</span></span> <span data-ttu-id="29143-1139">Número menor que ou igual a 32.767 (bytes).</span><span class="sxs-lookup"><span data-stu-id="29143-1139">Number less than or equal to 32,767 (bytes).</span></span> <span data-ttu-id="29143-1140">Para arquivos abertos para acesso aleatório, esse valor é o tamanho do registro.</span><span class="sxs-lookup"><span data-stu-id="29143-1140">For files opened for random access, this value is the record length.</span></span> <span data-ttu-id="29143-1141">Para arquivos sequenciais, esse valor é o número de caracteres armazenados em buffer.</span><span class="sxs-lookup"><span data-stu-id="29143-1141">For sequential files, this value is the number of characters buffered.</span></span></param>
        <summary><span data-ttu-id="29143-1142">Abre um arquivo para entrada ou saída.</span><span class="sxs-lookup"><span data-stu-id="29143-1142">Opens a file for input or output.</span></span> <span data-ttu-id="29143-1143">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FileOpen" />.</span><span class="sxs-lookup"><span data-stu-id="29143-1143">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileOpen" />.</span></span> <span data-ttu-id="29143-1144">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="29143-1144">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29143-1145">O `FileOpen` função é fornecida para compatibilidade com versões anteriores e pode afetar o desempenho.</span><span class="sxs-lookup"><span data-stu-id="29143-1145">The `FileOpen` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="29143-1146">Para aplicativos não herdadas, o `My.Computer.FileSystem` objeto fornece um melhor desempenho.</span><span class="sxs-lookup"><span data-stu-id="29143-1146">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="29143-1147">Para obter mais informações, consulte [acesso a arquivos com o Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="29143-1147">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="29143-1148">Você deve abrir um arquivo antes de qualquer operação de e/s pode ser executada nele.</span><span class="sxs-lookup"><span data-stu-id="29143-1148">You must open a file before any I/O operation can be performed on it.</span></span> <span data-ttu-id="29143-1149">`FileOpen` aloca um buffer de e/s para o arquivo e determina o modo de acesso para usar com o buffer.</span><span class="sxs-lookup"><span data-stu-id="29143-1149">`FileOpen` allocates a buffer for I/O to the file and determines the mode of access to use with the buffer.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="29143-1150">Ao gravar em um arquivo, um aplicativo pode ter que criar um arquivo, se não existir o arquivo ao qual ele está tentando gravar.</span><span class="sxs-lookup"><span data-stu-id="29143-1150">When writing to a file, an application may have to create a file, if the file to which it is trying to write does not exist.</span></span> <span data-ttu-id="29143-1151">Para fazer isso, ele precisa de permissão para o diretório no qual o arquivo deve ser criado.</span><span class="sxs-lookup"><span data-stu-id="29143-1151">To do so, it needs permission for the directory in which the file is to be created.</span></span> <span data-ttu-id="29143-1152">No entanto, se o arquivo especificado por `FileName` existir, o aplicativo precisa `Write` permissão somente para o arquivo propriamente dito.</span><span class="sxs-lookup"><span data-stu-id="29143-1152">However, if the file specified by `FileName` does exist, the application needs `Write` permission only to the file itself.</span></span> <span data-ttu-id="29143-1153">Sempre que possível, para ajudar a melhorar a segurança, criar o arquivo durante a implantação e grant `Write` permissão a esse arquivo único, em vez de para todo o diretório.</span><span class="sxs-lookup"><span data-stu-id="29143-1153">Wherever possible, to help improve security, create the file during deployment and grant `Write` permission to that file only, instead of to the whole directory.</span></span> <span data-ttu-id="29143-1154">Para ajudar a aprimorar a segurança, gravar dados em diretórios de usuário em vez de para o diretório raiz ou o diretório de arquivos de programas.</span><span class="sxs-lookup"><span data-stu-id="29143-1154">To help improve security, write data to user directories instead of to the root directory or the Program Files directory.</span></span>  
  
 <span data-ttu-id="29143-1155">Para abrir o canal pode ser encontrado usando o `FreeFile()` função.</span><span class="sxs-lookup"><span data-stu-id="29143-1155">The channel to open can be found by using the `FreeFile()` function.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="29143-1156">O `FileOpen` função requer `Read` acessar a partir de `FileIOPermissionAccess` enumeração, que pode afetar sua execução em situações de confiança parcial.</span><span class="sxs-lookup"><span data-stu-id="29143-1156">The `FileOpen` function requires `Read` access from the `FileIOPermissionAccess` enumeration, which may affect its execution in partial trust situations.</span></span> <span data-ttu-id="29143-1157">Para obter mais informações, consulte <xref:System.Security.Permissions.FileIOPermissionAccess> enumeração.</span><span class="sxs-lookup"><span data-stu-id="29143-1157">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29143-1158">Este exemplo ilustra vários usos do `FileOpen` função para habilitar a entrada e saída para um arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-1158">This example illustrates various uses of the `FileOpen` function to enable input and output to a file.</span></span>  
  
 <span data-ttu-id="29143-1159">O código a seguir abre o arquivo `TestFile` em `Input` modo.</span><span class="sxs-lookup"><span data-stu-id="29143-1159">The following code opens the file `TestFile` in `Input` mode.</span></span>  
  
 [!code-vb[VbVbalrCatRef#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#5)]  
  
 <span data-ttu-id="29143-1160">Este exemplo abre o arquivo no `Binary` modo para gravar somente operações.</span><span class="sxs-lookup"><span data-stu-id="29143-1160">This example opens the file in `Binary` mode for writing operations only.</span></span>  
  
 [!code-vb[VbVbalrCatRef#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#6)]  
  
 <span data-ttu-id="29143-1161">O exemplo a seguir abre o arquivo no `Random` modo.</span><span class="sxs-lookup"><span data-stu-id="29143-1161">The following example opens the file in `Random` mode.</span></span> <span data-ttu-id="29143-1162">O arquivo contiver registros da estrutura `Person`.</span><span class="sxs-lookup"><span data-stu-id="29143-1162">The file contains records of the structure `Person`.</span></span>  
  
 [!code-vb[VbVbalrCatRef#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#7)]  
  
 <span data-ttu-id="29143-1163">Este exemplo de código abre o arquivo no `Output` modo; qualquer possível de processo de leitura ou gravação em um arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-1163">This code example opens the file in `Output` mode; any process can read or write to file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#8)]  
  
 <span data-ttu-id="29143-1164">Este exemplo de código abre o arquivo no `Binary` modo para leitura; outros processos não é possível ler o arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-1164">This code example opens the file in `Binary` mode for reading; other processes cannot read file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#9](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="29143-1165">tamanho do registro é negativo (e não é igual a -1).</span><span class="sxs-lookup"><span data-stu-id="29143-1165">Record length is negative (and not equal to -1).</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="29143-1166"><paramref name="FileName" /> já está aberto ou <paramref name="FileName" /> é inválido.</span><span class="sxs-lookup"><span data-stu-id="29143-1166"><paramref name="FileName" /> is already open, or <paramref name="FileName" /> is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileClose(System.Int32[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FreeFile" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/reading-from-files.md"><span data-ttu-id="29143-1167">Lendo a partir de arquivos no Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-1167">Reading from Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/writing-to-files.md"><span data-ttu-id="29143-1168">Gravando em arquivos no Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-1168">Writing to Files in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="FilePut">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="29143-1169">Grava dados de uma variável em um arquivo de disco.</span><span class="sxs-lookup"><span data-stu-id="29143-1169">Writes data from a variable to a disk file.</span></span> <span data-ttu-id="29143-1170">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FilePut" />.</span><span class="sxs-lookup"><span data-stu-id="29143-1170">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span></span> <span data-ttu-id="29143-1171">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="29143-1171">F For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (int FileNumber, bool Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(int32 FileNumber, bool Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Boolean,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Integer, Value As Boolean, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FilePut : int * bool * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FilePut (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Boolean" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="29143-1172">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-1172">Required.</span></span> <span data-ttu-id="29143-1173">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="29143-1173">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="29143-1174">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-1174">Required.</span></span> <span data-ttu-id="29143-1175">Nome de variável válido que contém dados gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="29143-1175">Valid variable name that contains data written to disk.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="29143-1176">Opcional.</span><span class="sxs-lookup"><span data-stu-id="29143-1176">Optional.</span></span> <span data-ttu-id="29143-1177">Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a gravação começa.</span><span class="sxs-lookup"><span data-stu-id="29143-1177">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span></span></param>
        <summary><span data-ttu-id="29143-1178">Grava dados de uma variável em um arquivo de disco.</span><span class="sxs-lookup"><span data-stu-id="29143-1178">Writes data from a variable to a disk file.</span></span> <span data-ttu-id="29143-1179">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FilePut" />.</span><span class="sxs-lookup"><span data-stu-id="29143-1179">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span></span> <span data-ttu-id="29143-1180">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="29143-1180">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29143-1181">`FilePut` só é válido em `Random` e `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="29143-1181">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="29143-1182">Dados gravados com `FilePut` costumam ser lidos a partir de um arquivo usando `FileGet`.</span><span class="sxs-lookup"><span data-stu-id="29143-1182">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="29143-1183">O primeiro registro ou byte em um arquivo está na posição 1, o segundo registro ou byte está na posição 2 e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="29143-1183">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="29143-1184">Se você omitir `RecordNumber`, o próximo registro ou byte após a última `FileGet` ou `FilePut` funcionar ou apontado pela última `Seek` função é escrita.</span><span class="sxs-lookup"><span data-stu-id="29143-1184">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="29143-1185">O argumento `StringIsFixedLength` controla se a função interpreta cadeias de caracteres como sendo de tamanho variável ou fixo.</span><span class="sxs-lookup"><span data-stu-id="29143-1185">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="29143-1186">`FilePut` não grava o descritor do tamanho quando o argumento é `True`.</span><span class="sxs-lookup"><span data-stu-id="29143-1186">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="29143-1187">Se você usar `StringIsFixedLength`  =  `True` com `FilePut`, você precisa fazer o mesmo com `FileGet`, e você precisa certificar-se de que a cadeia de caracteres é inicializada com o tamanho esperado.</span><span class="sxs-lookup"><span data-stu-id="29143-1187">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="29143-1188">Modo aleatório</span><span class="sxs-lookup"><span data-stu-id="29143-1188">Random Mode</span></span>  
 <span data-ttu-id="29143-1189">Para arquivos abertos no `Random` modo, as seguintes regras se aplicam:</span><span class="sxs-lookup"><span data-stu-id="29143-1189">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="29143-1190">Se o comprimento dos dados que estão sendo gravados for menor que o comprimento especificado na `RecordLength` cláusula do `FileOpen` função, `FilePut` grava registros subsequentes em limites de comprimento de registro.</span><span class="sxs-lookup"><span data-stu-id="29143-1190">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="29143-1191">O espaço entre o final de um registro e o início do próximo registro é preenchido com o conteúdo existente no buffer de arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-1191">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="29143-1192">Como a quantidade de dados de preenchimento não pode ser determinada com certeza, geralmente é uma boa ideia ter o comprimento do registro corresponde ao tamanho dos dados que estão sendo gravados.</span><span class="sxs-lookup"><span data-stu-id="29143-1192">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="29143-1193">Se o comprimento dos dados que estão sendo gravados for maior que o comprimento especificado na `RecordLength` cláusula do `FileOpen` função, uma exceção será gerada.</span><span class="sxs-lookup"><span data-stu-id="29143-1193">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="29143-1194">Caso a variável que está sendo gravada seja uma cadeia de caracteres, `FilePut` grava um descritor de dois bytes que contém o tamanho da cadeia de caracteres e, em seguida, grava os dados que vão para a variável.</span><span class="sxs-lookup"><span data-stu-id="29143-1194">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="29143-1195">Portanto, o comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser pelo menos dois bytes maior do que o comprimento real da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="29143-1195">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="29143-1196">Caso a variável que está sendo gravada seja um objeto que contém um tipo numérico, `FilePut` grava dois bytes que identificam o `VarType` do objeto e, em seguida, grava a variável.</span><span class="sxs-lookup"><span data-stu-id="29143-1196">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="29143-1197">Por exemplo, ao escrever um objeto que contém um número inteiro, `FilePut` grava seis bytes: dois bytes que identificam o objeto como `VarType(3)` (`Integer`) e quatro bytes que contêm os dados.</span><span class="sxs-lookup"><span data-stu-id="29143-1197">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="29143-1198">O comprimento do registro especificado pelo `RecordLength` parâmetro no `FileOpen` função deve ser pelo menos dois bytes maior do que o número real de bytes necessários para armazenar a variável.</span><span class="sxs-lookup"><span data-stu-id="29143-1198">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="29143-1199">Se a variável que está sendo gravada for um objeto que contém uma cadeia de caracteres `FilePut` grava um descritor de dois bytes que identifica o `VarType(8)` do objeto, um descritor de dois bytes indicando o comprimento da cadeia de caracteres e, em seguida, grava os dados de cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="29143-1199">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="29143-1200">O comprimento do registro especificado pelo `RecordLength` parâmetro no `FileOpen` função deve ser maior que o comprimento real da cadeia de caracteres de pelo menos quatro bytes.</span><span class="sxs-lookup"><span data-stu-id="29143-1200">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="29143-1201">Caso queira colocar uma cadeia de caracteres sem o descritor, você deve passar `True` para o parâmetro `StringIsFixedLength`, e a cadeia de caracteres lida deve ter o tamanho correto.</span><span class="sxs-lookup"><span data-stu-id="29143-1201">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="29143-1202">Caso a variável gravada seja uma matriz, você tem a opção de gravar ou não um descritor para o tamanho e as dimensões da matriz.</span><span class="sxs-lookup"><span data-stu-id="29143-1202">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="29143-1203">O descritor de arquivo para uma matriz dinâmica, mas não para uma matriz de tamanho fixo de gravação do Visual Basic 6.0 e versões anteriores.</span><span class="sxs-lookup"><span data-stu-id="29143-1203">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="29143-1204">O padrão do Visual Basic 2005 é não gravar o descritor.</span><span class="sxs-lookup"><span data-stu-id="29143-1204">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="29143-1205">Para gravar o descritor, defina as `ArrayIsDynamic` parâmetro para `True`.</span><span class="sxs-lookup"><span data-stu-id="29143-1205">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="29143-1206">Ao escrever a matriz, você precisa comparar a forma com que a matriz será lida; se ela for lida com o descritor, você precisará escrever o descritor.</span><span class="sxs-lookup"><span data-stu-id="29143-1206">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="29143-1207">O descritor especifica a classificação de matriz, o tamanho e os limites inferiores para cada classificação.</span><span class="sxs-lookup"><span data-stu-id="29143-1207">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="29143-1208">Seu comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="29143-1208">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="29143-1209">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessário para gravar os dados de matriz e o descritor de matriz.</span><span class="sxs-lookup"><span data-stu-id="29143-1209">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="29143-1210">Por exemplo, a seguinte declaração de matriz requer 218 bytes quando a matriz é gravada no disco.</span><span class="sxs-lookup"><span data-stu-id="29143-1210">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="29143-1211">Se a variável que está sendo gravada for qualquer outro tipo de variável (não uma cadeia de caracteres de comprimento variável ou um objeto), `FilePut` grava apenas os dados da variável.</span><span class="sxs-lookup"><span data-stu-id="29143-1211">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="29143-1212">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual ao comprimento dos dados que estão sendo gravados.</span><span class="sxs-lookup"><span data-stu-id="29143-1212">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="29143-1213">`FilePut` grava os elementos de estruturas como se cada um fosse escrito individualmente, exceto que não há nenhum preenchimento entre os elementos.</span><span class="sxs-lookup"><span data-stu-id="29143-1213">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="29143-1214">O `VBFixedString` atributo pode ser aplicado a campos de cadeia de caracteres em estruturas para indicar o tamanho da cadeia de caracteres quando gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="29143-1214">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="29143-1215">Os campos que têm mais bytes que o especificado pela cadeia de caracteres a `VBFixedString` atributo são truncados quando gravados em disco,</span><span class="sxs-lookup"><span data-stu-id="29143-1215">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="29143-1216">Modo binário</span><span class="sxs-lookup"><span data-stu-id="29143-1216">Binary Mode</span></span>  
 <span data-ttu-id="29143-1217">Para arquivos abertos no `Binary` modo, a maioria do `Random` modo regras se aplicam, com algumas exceções.</span><span class="sxs-lookup"><span data-stu-id="29143-1217">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="29143-1218">As seguintes regras para arquivos abertos no `Binary` modo são diferentes das regras para `Random` modo:</span><span class="sxs-lookup"><span data-stu-id="29143-1218">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="29143-1219">A cláusula `RecordLength` na função de `FileOpen` não está em vigor.</span><span class="sxs-lookup"><span data-stu-id="29143-1219">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="29143-1220">`FilePut` grava todas as variáveis em disco de maneira contígua, ou seja, sem preenchimento entre os registros.</span><span class="sxs-lookup"><span data-stu-id="29143-1220">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="29143-1221">Para qualquer matriz que não seja uma matriz em uma estrutura, `FilePut` grava apenas os dados.</span><span class="sxs-lookup"><span data-stu-id="29143-1221">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="29143-1222">Nenhum descritor é escrito.</span><span class="sxs-lookup"><span data-stu-id="29143-1222">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="29143-1223">`FilePut` Grava cadeias de caracteres de comprimento variável que não são elementos das estruturas sem o descritor de dois bytes de comprimento.</span><span class="sxs-lookup"><span data-stu-id="29143-1223">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="29143-1224">O número de bytes gravados é igual ao número de caracteres na cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="29143-1224">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="29143-1225">Por exemplo, as instruções a seguir escrever 11 bytes no arquivo número 1:</span><span class="sxs-lookup"><span data-stu-id="29143-1225">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="29143-1226">A gravação em um arquivo usando a função `FilePut` requer o acesso `Write` da enumeração <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="29143-1226">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29143-1227">Este exemplo usa o `FilePut` função para gravar dados em um arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-1227">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="29143-1228">Cinco registros da estrutura `Person` são gravados no arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-1228">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="29143-1229"><paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</span><span class="sxs-lookup"><span data-stu-id="29143-1229"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="29143-1230">O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="29143-1230">File mode is invalid.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/writing-to-files.md"><span data-ttu-id="29143-1231">Gravando em arquivos no Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-1231">Writing to Files in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (int FileNumber, byte Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(int32 FileNumber, unsigned int8 Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Byte,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Integer, Value As Byte, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FilePut : int * byte * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FilePut (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Byte" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="29143-1232">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-1232">Required.</span></span> <span data-ttu-id="29143-1233">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="29143-1233">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="29143-1234">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-1234">Required.</span></span> <span data-ttu-id="29143-1235">Nome de variável válido que contém dados gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="29143-1235">Valid variable name that contains data written to disk.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="29143-1236">Opcional.</span><span class="sxs-lookup"><span data-stu-id="29143-1236">Optional.</span></span> <span data-ttu-id="29143-1237">Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a gravação começa.</span><span class="sxs-lookup"><span data-stu-id="29143-1237">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span></span></param>
        <summary><span data-ttu-id="29143-1238">Grava dados de uma variável em um arquivo de disco.</span><span class="sxs-lookup"><span data-stu-id="29143-1238">Writes data from a variable to a disk file.</span></span> <span data-ttu-id="29143-1239">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FilePut" />.</span><span class="sxs-lookup"><span data-stu-id="29143-1239">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span></span> <span data-ttu-id="29143-1240">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="29143-1240">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29143-1241">`FilePut` só é válido em `Random` e `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="29143-1241">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="29143-1242">Dados gravados com `FilePut` costumam ser lidos a partir de um arquivo usando `FileGet`.</span><span class="sxs-lookup"><span data-stu-id="29143-1242">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="29143-1243">O primeiro registro ou byte em um arquivo está na posição 1, o segundo registro ou byte está na posição 2 e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="29143-1243">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="29143-1244">Se você omitir `RecordNumber`, o próximo registro ou byte após a última `FileGet` ou `FilePut` funcionar ou apontado pela última `Seek` função é escrita.</span><span class="sxs-lookup"><span data-stu-id="29143-1244">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="29143-1245">O argumento `StringIsFixedLength` controla se a função interpreta cadeias de caracteres como sendo de tamanho variável ou fixo.</span><span class="sxs-lookup"><span data-stu-id="29143-1245">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="29143-1246">`FilePut` não grava o descritor do tamanho quando o argumento é `True`.</span><span class="sxs-lookup"><span data-stu-id="29143-1246">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="29143-1247">Se você usar `StringIsFixedLength`  =  `True` com `FilePut`, você precisa fazer o mesmo com `FileGet`, e você precisa certificar-se de que a cadeia de caracteres é inicializada com o tamanho esperado.</span><span class="sxs-lookup"><span data-stu-id="29143-1247">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="29143-1248">Modo aleatório</span><span class="sxs-lookup"><span data-stu-id="29143-1248">Random Mode</span></span>  
 <span data-ttu-id="29143-1249">Para arquivos abertos no `Random` modo, as seguintes regras se aplicam:</span><span class="sxs-lookup"><span data-stu-id="29143-1249">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="29143-1250">Se o comprimento dos dados que estão sendo gravados for menor que o comprimento especificado na `RecordLength` cláusula do `FileOpen` função, `FilePut` grava registros subsequentes em limites de comprimento de registro.</span><span class="sxs-lookup"><span data-stu-id="29143-1250">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="29143-1251">O espaço entre o final de um registro e o início do próximo registro é preenchido com o conteúdo existente no buffer de arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-1251">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="29143-1252">Como a quantidade de dados de preenchimento não pode ser determinada com certeza, geralmente é uma boa ideia ter o comprimento do registro corresponde ao tamanho dos dados que estão sendo gravados.</span><span class="sxs-lookup"><span data-stu-id="29143-1252">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="29143-1253">Se o comprimento dos dados que estão sendo gravados for maior que o comprimento especificado na `RecordLength` cláusula do `FileOpen` função, uma exceção será gerada.</span><span class="sxs-lookup"><span data-stu-id="29143-1253">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="29143-1254">Caso a variável que está sendo gravada seja uma cadeia de caracteres, `FilePut` grava um descritor de dois bytes que contém o tamanho da cadeia de caracteres e, em seguida, grava os dados que vão para a variável.</span><span class="sxs-lookup"><span data-stu-id="29143-1254">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="29143-1255">Portanto, o comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser pelo menos dois bytes maior do que o comprimento real da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="29143-1255">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="29143-1256">Caso a variável que está sendo gravada seja um objeto que contém um tipo numérico, `FilePut` grava dois bytes que identificam o `VarType` do objeto e, em seguida, grava a variável.</span><span class="sxs-lookup"><span data-stu-id="29143-1256">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="29143-1257">Por exemplo, ao escrever um objeto que contém um número inteiro, `FilePut` grava seis bytes: dois bytes que identificam o objeto como `VarType(3)` (`Integer`) e quatro bytes que contêm os dados.</span><span class="sxs-lookup"><span data-stu-id="29143-1257">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="29143-1258">O comprimento do registro especificado pelo `RecordLength` parâmetro no `FileOpen` função deve ser pelo menos dois bytes maior do que o número real de bytes necessários para armazenar a variável.</span><span class="sxs-lookup"><span data-stu-id="29143-1258">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="29143-1259">Se a variável que está sendo gravada for um objeto que contém uma cadeia de caracteres `FilePut` grava um descritor de dois bytes que identifica o `VarType(8)` do objeto, um descritor de dois bytes indicando o comprimento da cadeia de caracteres e, em seguida, grava os dados de cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="29143-1259">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="29143-1260">O comprimento do registro especificado pelo `RecordLength` parâmetro no `FileOpen` função deve ser maior que o comprimento real da cadeia de caracteres de pelo menos quatro bytes.</span><span class="sxs-lookup"><span data-stu-id="29143-1260">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="29143-1261">Caso queira colocar uma cadeia de caracteres sem o descritor, você deve passar `True` para o parâmetro `StringIsFixedLength`, e a cadeia de caracteres lida deve ter o tamanho correto.</span><span class="sxs-lookup"><span data-stu-id="29143-1261">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="29143-1262">Caso a variável gravada seja uma matriz, você tem a opção de gravar ou não um descritor para o tamanho e as dimensões da matriz.</span><span class="sxs-lookup"><span data-stu-id="29143-1262">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="29143-1263">O descritor de arquivo para uma matriz dinâmica, mas não para uma matriz de tamanho fixo de gravação do Visual Basic 6.0 e versões anteriores.</span><span class="sxs-lookup"><span data-stu-id="29143-1263">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="29143-1264">O padrão do Visual Basic 2005 é não gravar o descritor.</span><span class="sxs-lookup"><span data-stu-id="29143-1264">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="29143-1265">Para gravar o descritor, defina as `ArrayIsDynamic` parâmetro para `True`.</span><span class="sxs-lookup"><span data-stu-id="29143-1265">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="29143-1266">Ao escrever a matriz, você precisa comparar a forma com que a matriz será lida; se ela for lida com o descritor, você precisará escrever o descritor.</span><span class="sxs-lookup"><span data-stu-id="29143-1266">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="29143-1267">O descritor especifica a classificação de matriz, o tamanho e os limites inferiores para cada classificação.</span><span class="sxs-lookup"><span data-stu-id="29143-1267">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="29143-1268">Seu comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="29143-1268">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="29143-1269">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessário para gravar os dados de matriz e o descritor de matriz.</span><span class="sxs-lookup"><span data-stu-id="29143-1269">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="29143-1270">Por exemplo, a seguinte declaração de matriz requer 218 bytes quando a matriz é gravada no disco.</span><span class="sxs-lookup"><span data-stu-id="29143-1270">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="29143-1271">Se a variável que está sendo gravada for qualquer outro tipo de variável (não uma cadeia de caracteres de comprimento variável ou um objeto), `FilePut` grava apenas os dados da variável.</span><span class="sxs-lookup"><span data-stu-id="29143-1271">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="29143-1272">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual ao comprimento dos dados que estão sendo gravados.</span><span class="sxs-lookup"><span data-stu-id="29143-1272">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="29143-1273">`FilePut` grava os elementos de estruturas como se cada um fosse escrito individualmente, exceto que não há nenhum preenchimento entre os elementos.</span><span class="sxs-lookup"><span data-stu-id="29143-1273">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="29143-1274">O `VBFixedString` atributo pode ser aplicado a campos de cadeia de caracteres em estruturas para indicar o tamanho da cadeia de caracteres quando gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="29143-1274">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="29143-1275">Os campos que têm mais bytes que o especificado pela cadeia de caracteres a `VBFixedString` atributo são truncados quando gravados em disco,</span><span class="sxs-lookup"><span data-stu-id="29143-1275">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="29143-1276">Modo binário</span><span class="sxs-lookup"><span data-stu-id="29143-1276">Binary Mode</span></span>  
 <span data-ttu-id="29143-1277">Para arquivos abertos no `Binary` modo, a maioria do `Random` modo regras se aplicam, com algumas exceções.</span><span class="sxs-lookup"><span data-stu-id="29143-1277">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="29143-1278">As seguintes regras para arquivos abertos no `Binary` modo são diferentes das regras para `Random` modo:</span><span class="sxs-lookup"><span data-stu-id="29143-1278">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="29143-1279">A cláusula `RecordLength` na função de `FileOpen` não está em vigor.</span><span class="sxs-lookup"><span data-stu-id="29143-1279">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="29143-1280">`FilePut` grava todas as variáveis em disco de maneira contígua, ou seja, sem preenchimento entre os registros.</span><span class="sxs-lookup"><span data-stu-id="29143-1280">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="29143-1281">Para qualquer matriz que não seja uma matriz em uma estrutura, `FilePut` grava apenas os dados.</span><span class="sxs-lookup"><span data-stu-id="29143-1281">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="29143-1282">Nenhum descritor é escrito.</span><span class="sxs-lookup"><span data-stu-id="29143-1282">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="29143-1283">`FilePut` Grava cadeias de caracteres de comprimento variável que não são elementos das estruturas sem o descritor de dois bytes de comprimento.</span><span class="sxs-lookup"><span data-stu-id="29143-1283">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="29143-1284">O número de bytes gravados é igual ao número de caracteres na cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="29143-1284">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="29143-1285">Por exemplo, as instruções a seguir escrever 11 bytes no arquivo número 1:</span><span class="sxs-lookup"><span data-stu-id="29143-1285">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="29143-1286">A gravação em um arquivo usando a função `FilePut` requer o acesso `Write` da enumeração <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="29143-1286">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29143-1287">Este exemplo usa o `FilePut` função para gravar dados em um arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-1287">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="29143-1288">Cinco registros da estrutura `Person` são gravados no arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-1288">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="29143-1289"><paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</span><span class="sxs-lookup"><span data-stu-id="29143-1289"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="29143-1290">O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="29143-1290">File mode is invalid.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/writing-to-files.md"><span data-ttu-id="29143-1291">Gravando em arquivos no Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-1291">Writing to Files in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (int FileNumber, char Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(int32 FileNumber, char Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Char,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Integer, Value As Char, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FilePut : int * char * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FilePut (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Char" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="29143-1292">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-1292">Required.</span></span> <span data-ttu-id="29143-1293">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="29143-1293">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="29143-1294">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-1294">Required.</span></span> <span data-ttu-id="29143-1295">Nome de variável válido que contém dados gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="29143-1295">Valid variable name that contains data written to disk.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="29143-1296">Opcional.</span><span class="sxs-lookup"><span data-stu-id="29143-1296">Optional.</span></span> <span data-ttu-id="29143-1297">Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a gravação começa.</span><span class="sxs-lookup"><span data-stu-id="29143-1297">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span></span></param>
        <summary><span data-ttu-id="29143-1298">Grava dados de uma variável em um arquivo de disco.</span><span class="sxs-lookup"><span data-stu-id="29143-1298">Writes data from a variable to a disk file.</span></span> <span data-ttu-id="29143-1299">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FilePut" />.</span><span class="sxs-lookup"><span data-stu-id="29143-1299">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span></span> <span data-ttu-id="29143-1300">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="29143-1300">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29143-1301">`FilePut` só é válido em `Random` e `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="29143-1301">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="29143-1302">Dados gravados com `FilePut` costumam ser lidos a partir de um arquivo usando `FileGet`.</span><span class="sxs-lookup"><span data-stu-id="29143-1302">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="29143-1303">O primeiro registro ou byte em um arquivo está na posição 1, o segundo registro ou byte está na posição 2 e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="29143-1303">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="29143-1304">Se você omitir `RecordNumber`, o próximo registro ou byte após a última `FileGet` ou `FilePut` funcionar ou apontado pela última `Seek` função é escrita.</span><span class="sxs-lookup"><span data-stu-id="29143-1304">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="29143-1305">O argumento `StringIsFixedLength` controla se a função interpreta cadeias de caracteres como sendo de tamanho variável ou fixo.</span><span class="sxs-lookup"><span data-stu-id="29143-1305">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="29143-1306">`FilePut` não grava o descritor do tamanho quando o argumento é `True`.</span><span class="sxs-lookup"><span data-stu-id="29143-1306">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="29143-1307">Se você usar `StringIsFixedLength`  =  `True` com `FilePut`, você precisa fazer o mesmo com `FileGet`, e você precisa certificar-se de que a cadeia de caracteres é inicializada com o tamanho esperado.</span><span class="sxs-lookup"><span data-stu-id="29143-1307">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="29143-1308">Modo aleatório</span><span class="sxs-lookup"><span data-stu-id="29143-1308">Random Mode</span></span>  
 <span data-ttu-id="29143-1309">Para arquivos abertos no `Random` modo, as seguintes regras se aplicam:</span><span class="sxs-lookup"><span data-stu-id="29143-1309">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="29143-1310">Se o comprimento dos dados que estão sendo gravados for menor que o comprimento especificado na `RecordLength` cláusula do `FileOpen` função, `FilePut` grava registros subsequentes em limites de comprimento de registro.</span><span class="sxs-lookup"><span data-stu-id="29143-1310">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="29143-1311">O espaço entre o final de um registro e o início do próximo registro é preenchido com o conteúdo existente no buffer de arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-1311">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="29143-1312">Como a quantidade de dados de preenchimento não pode ser determinada com certeza, geralmente é uma boa ideia ter o comprimento do registro corresponde ao tamanho dos dados que estão sendo gravados.</span><span class="sxs-lookup"><span data-stu-id="29143-1312">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="29143-1313">Se o comprimento dos dados que estão sendo gravados for maior que o comprimento especificado na `RecordLength` cláusula do `FileOpen` função, uma exceção será gerada.</span><span class="sxs-lookup"><span data-stu-id="29143-1313">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="29143-1314">Caso a variável que está sendo gravada seja uma cadeia de caracteres, `FilePut` grava um descritor de dois bytes que contém o tamanho da cadeia de caracteres e, em seguida, grava os dados que vão para a variável.</span><span class="sxs-lookup"><span data-stu-id="29143-1314">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="29143-1315">Portanto, o comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser pelo menos dois bytes maior do que o comprimento real da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="29143-1315">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="29143-1316">Caso a variável que está sendo gravada seja um objeto que contém um tipo numérico, `FilePut` grava dois bytes que identificam o `VarType` do objeto e, em seguida, grava a variável.</span><span class="sxs-lookup"><span data-stu-id="29143-1316">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="29143-1317">Por exemplo, ao escrever um objeto que contém um número inteiro, `FilePut` grava seis bytes: dois bytes que identificam o objeto como `VarType(3)` (`Integer`) e quatro bytes que contêm os dados.</span><span class="sxs-lookup"><span data-stu-id="29143-1317">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="29143-1318">O comprimento do registro especificado pelo `RecordLength` parâmetro no `FileOpen` função deve ser pelo menos dois bytes maior do que o número real de bytes necessários para armazenar a variável.</span><span class="sxs-lookup"><span data-stu-id="29143-1318">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="29143-1319">Se a variável que está sendo gravada for um objeto que contém uma cadeia de caracteres `FilePut` grava um descritor de dois bytes que identifica o `VarType(8)` do objeto, um descritor de dois bytes indicando o comprimento da cadeia de caracteres e, em seguida, grava os dados de cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="29143-1319">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="29143-1320">O comprimento do registro especificado pelo `RecordLength` parâmetro no `FileOpen` função deve ser maior que o comprimento real da cadeia de caracteres de pelo menos quatro bytes.</span><span class="sxs-lookup"><span data-stu-id="29143-1320">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="29143-1321">Caso queira colocar uma cadeia de caracteres sem o descritor, você deve passar `True` para o parâmetro `StringIsFixedLength`, e a cadeia de caracteres lida deve ter o tamanho correto.</span><span class="sxs-lookup"><span data-stu-id="29143-1321">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="29143-1322">Caso a variável gravada seja uma matriz, você tem a opção de gravar ou não um descritor para o tamanho e as dimensões da matriz.</span><span class="sxs-lookup"><span data-stu-id="29143-1322">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="29143-1323">O descritor de arquivo para uma matriz dinâmica, mas não para uma matriz de tamanho fixo de gravação do Visual Basic 6.0 e versões anteriores.</span><span class="sxs-lookup"><span data-stu-id="29143-1323">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="29143-1324">O padrão do Visual Basic 2005 é não gravar o descritor.</span><span class="sxs-lookup"><span data-stu-id="29143-1324">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="29143-1325">Para gravar o descritor, defina as `ArrayIsDynamic` parâmetro para `True`.</span><span class="sxs-lookup"><span data-stu-id="29143-1325">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="29143-1326">Ao escrever a matriz, você precisa comparar a forma com que a matriz será lida; se ela for lida com o descritor, você precisará escrever o descritor.</span><span class="sxs-lookup"><span data-stu-id="29143-1326">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="29143-1327">O descritor especifica a classificação de matriz, o tamanho e os limites inferiores para cada classificação.</span><span class="sxs-lookup"><span data-stu-id="29143-1327">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="29143-1328">Seu comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="29143-1328">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="29143-1329">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessário para gravar os dados de matriz e o descritor de matriz.</span><span class="sxs-lookup"><span data-stu-id="29143-1329">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="29143-1330">Por exemplo, a seguinte declaração de matriz requer 218 bytes quando a matriz é gravada no disco.</span><span class="sxs-lookup"><span data-stu-id="29143-1330">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="29143-1331">Se a variável que está sendo gravada for qualquer outro tipo de variável (não uma cadeia de caracteres de comprimento variável ou um objeto), `FilePut` grava apenas os dados da variável.</span><span class="sxs-lookup"><span data-stu-id="29143-1331">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="29143-1332">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual ao comprimento dos dados que estão sendo gravados.</span><span class="sxs-lookup"><span data-stu-id="29143-1332">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="29143-1333">`FilePut` grava os elementos de estruturas como se cada um fosse escrito individualmente, exceto que não há nenhum preenchimento entre os elementos.</span><span class="sxs-lookup"><span data-stu-id="29143-1333">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="29143-1334">O `VBFixedString` atributo pode ser aplicado a campos de cadeia de caracteres em estruturas para indicar o tamanho da cadeia de caracteres quando gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="29143-1334">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="29143-1335">Os campos que têm mais bytes que o especificado pela cadeia de caracteres a `VBFixedString` atributo são truncados quando gravados em disco,</span><span class="sxs-lookup"><span data-stu-id="29143-1335">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="29143-1336">Modo binário</span><span class="sxs-lookup"><span data-stu-id="29143-1336">Binary Mode</span></span>  
 <span data-ttu-id="29143-1337">Para arquivos abertos no `Binary` modo, a maioria do `Random` modo regras se aplicam, com algumas exceções.</span><span class="sxs-lookup"><span data-stu-id="29143-1337">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="29143-1338">As seguintes regras para arquivos abertos no `Binary` modo são diferentes das regras para `Random` modo:</span><span class="sxs-lookup"><span data-stu-id="29143-1338">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="29143-1339">A cláusula `RecordLength` na função de `FileOpen` não está em vigor.</span><span class="sxs-lookup"><span data-stu-id="29143-1339">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="29143-1340">`FilePut` grava todas as variáveis em disco de maneira contígua, ou seja, sem preenchimento entre os registros.</span><span class="sxs-lookup"><span data-stu-id="29143-1340">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="29143-1341">Para qualquer matriz que não seja uma matriz em uma estrutura, `FilePut` grava apenas os dados.</span><span class="sxs-lookup"><span data-stu-id="29143-1341">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="29143-1342">Nenhum descritor é escrito.</span><span class="sxs-lookup"><span data-stu-id="29143-1342">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="29143-1343">`FilePut` Grava cadeias de caracteres de comprimento variável que não são elementos das estruturas sem o descritor de dois bytes de comprimento.</span><span class="sxs-lookup"><span data-stu-id="29143-1343">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="29143-1344">O número de bytes gravados é igual ao número de caracteres na cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="29143-1344">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="29143-1345">Por exemplo, as instruções a seguir escrever 11 bytes no arquivo número 1:</span><span class="sxs-lookup"><span data-stu-id="29143-1345">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="29143-1346">A gravação em um arquivo usando a função `FilePut` requer o acesso `Write` da enumeração <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="29143-1346">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29143-1347">Este exemplo usa o `FilePut` função para gravar dados em um arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-1347">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="29143-1348">Cinco registros da estrutura `Person` são gravados no arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-1348">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="29143-1349"><paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</span><span class="sxs-lookup"><span data-stu-id="29143-1349"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="29143-1350">O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="29143-1350">File mode is invalid.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/writing-to-files.md"><span data-ttu-id="29143-1351">Gravando em arquivos no Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-1351">Writing to Files in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (int FileNumber, DateTime Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(int32 FileNumber, valuetype System.DateTime Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.DateTime,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Integer, Value As DateTime, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FilePut : int * DateTime * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FilePut (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.DateTime" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="29143-1352">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-1352">Required.</span></span> <span data-ttu-id="29143-1353">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="29143-1353">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="29143-1354">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-1354">Required.</span></span> <span data-ttu-id="29143-1355">Nome de variável válido que contém dados gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="29143-1355">Valid variable name that contains data written to disk.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="29143-1356">Opcional.</span><span class="sxs-lookup"><span data-stu-id="29143-1356">Optional.</span></span> <span data-ttu-id="29143-1357">Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a gravação começa.</span><span class="sxs-lookup"><span data-stu-id="29143-1357">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span></span></param>
        <summary><span data-ttu-id="29143-1358">Grava dados de uma variável em um arquivo de disco.</span><span class="sxs-lookup"><span data-stu-id="29143-1358">Writes data from a variable to a disk file.</span></span> <span data-ttu-id="29143-1359">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FilePut" />.</span><span class="sxs-lookup"><span data-stu-id="29143-1359">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span></span> <span data-ttu-id="29143-1360">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="29143-1360">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29143-1361">`FilePut` só é válido em `Random` e `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="29143-1361">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="29143-1362">Dados gravados com `FilePut` costumam ser lidos a partir de um arquivo usando `FileGet`.</span><span class="sxs-lookup"><span data-stu-id="29143-1362">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="29143-1363">O primeiro registro ou byte em um arquivo está na posição 1, o segundo registro ou byte está na posição 2 e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="29143-1363">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="29143-1364">Se você omitir `RecordNumber`, o próximo registro ou byte após a última `FileGet` ou `FilePut` funcionar ou apontado pela última `Seek` função é escrita.</span><span class="sxs-lookup"><span data-stu-id="29143-1364">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="29143-1365">O argumento `StringIsFixedLength` controla se a função interpreta cadeias de caracteres como sendo de tamanho variável ou fixo.</span><span class="sxs-lookup"><span data-stu-id="29143-1365">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="29143-1366">`FilePut` não grava o descritor do tamanho quando o argumento é `True`.</span><span class="sxs-lookup"><span data-stu-id="29143-1366">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="29143-1367">Se você usar `StringIsFixedLength`  =  `True` com `FilePut`, você precisa fazer o mesmo com `FileGet`, e você precisa certificar-se de que a cadeia de caracteres é inicializada com o tamanho esperado.</span><span class="sxs-lookup"><span data-stu-id="29143-1367">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="29143-1368">Modo aleatório</span><span class="sxs-lookup"><span data-stu-id="29143-1368">Random Mode</span></span>  
 <span data-ttu-id="29143-1369">Para arquivos abertos no `Random` modo, as seguintes regras se aplicam:</span><span class="sxs-lookup"><span data-stu-id="29143-1369">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="29143-1370">Se o comprimento dos dados que estão sendo gravados for menor que o comprimento especificado na `RecordLength` cláusula do `FileOpen` função, `FilePut` grava registros subsequentes em limites de comprimento de registro.</span><span class="sxs-lookup"><span data-stu-id="29143-1370">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="29143-1371">O espaço entre o final de um registro e o início do próximo registro é preenchido com o conteúdo existente no buffer de arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-1371">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="29143-1372">Como a quantidade de dados de preenchimento não pode ser determinada com certeza, geralmente é uma boa ideia ter o comprimento do registro corresponde ao tamanho dos dados que estão sendo gravados.</span><span class="sxs-lookup"><span data-stu-id="29143-1372">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="29143-1373">Se o comprimento dos dados que estão sendo gravados for maior que o comprimento especificado na `RecordLength` cláusula do `FileOpen` função, uma exceção será gerada.</span><span class="sxs-lookup"><span data-stu-id="29143-1373">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="29143-1374">Caso a variável que está sendo gravada seja uma cadeia de caracteres, `FilePut` grava um descritor de dois bytes que contém o tamanho da cadeia de caracteres e, em seguida, grava os dados que vão para a variável.</span><span class="sxs-lookup"><span data-stu-id="29143-1374">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="29143-1375">Portanto, o comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser pelo menos dois bytes maior do que o comprimento real da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="29143-1375">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="29143-1376">Caso a variável que está sendo gravada seja um objeto que contém um tipo numérico, `FilePut` grava dois bytes que identificam o `VarType` do objeto e, em seguida, grava a variável.</span><span class="sxs-lookup"><span data-stu-id="29143-1376">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="29143-1377">Por exemplo, ao escrever um objeto que contém um número inteiro, `FilePut` grava seis bytes: dois bytes que identificam o objeto como `VarType(3)` (`Integer`) e quatro bytes que contêm os dados.</span><span class="sxs-lookup"><span data-stu-id="29143-1377">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="29143-1378">O comprimento do registro especificado pelo `RecordLength` parâmetro no `FileOpen` função deve ser pelo menos dois bytes maior do que o número real de bytes necessários para armazenar a variável.</span><span class="sxs-lookup"><span data-stu-id="29143-1378">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="29143-1379">Se a variável que está sendo gravada for um objeto que contém uma cadeia de caracteres `FilePut` grava um descritor de dois bytes que identifica o `VarType(8)` do objeto, um descritor de dois bytes indicando o comprimento da cadeia de caracteres e, em seguida, grava os dados de cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="29143-1379">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="29143-1380">O comprimento do registro especificado pelo `RecordLength` parâmetro no `FileOpen` função deve ser maior que o comprimento real da cadeia de caracteres de pelo menos quatro bytes.</span><span class="sxs-lookup"><span data-stu-id="29143-1380">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="29143-1381">Caso queira colocar uma cadeia de caracteres sem o descritor, você deve passar `True` para o parâmetro `StringIsFixedLength`, e a cadeia de caracteres lida deve ter o tamanho correto.</span><span class="sxs-lookup"><span data-stu-id="29143-1381">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="29143-1382">Caso a variável gravada seja uma matriz, você tem a opção de gravar ou não um descritor para o tamanho e as dimensões da matriz.</span><span class="sxs-lookup"><span data-stu-id="29143-1382">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="29143-1383">O descritor de arquivo para uma matriz dinâmica, mas não para uma matriz de tamanho fixo de gravação do Visual Basic 6.0 e versões anteriores.</span><span class="sxs-lookup"><span data-stu-id="29143-1383">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="29143-1384">O padrão do Visual Basic 2005 é não gravar o descritor.</span><span class="sxs-lookup"><span data-stu-id="29143-1384">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="29143-1385">Para gravar o descritor, defina as `ArrayIsDynamic` parâmetro para `True`.</span><span class="sxs-lookup"><span data-stu-id="29143-1385">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="29143-1386">Ao escrever a matriz, você precisa comparar a forma com que a matriz será lida; se ela for lida com o descritor, você precisará escrever o descritor.</span><span class="sxs-lookup"><span data-stu-id="29143-1386">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="29143-1387">O descritor especifica a classificação de matriz, o tamanho e os limites inferiores para cada classificação.</span><span class="sxs-lookup"><span data-stu-id="29143-1387">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="29143-1388">Seu comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="29143-1388">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="29143-1389">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessário para gravar os dados de matriz e o descritor de matriz.</span><span class="sxs-lookup"><span data-stu-id="29143-1389">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="29143-1390">Por exemplo, a seguinte declaração de matriz requer 218 bytes quando a matriz é gravada no disco.</span><span class="sxs-lookup"><span data-stu-id="29143-1390">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="29143-1391">Se a variável que está sendo gravada for qualquer outro tipo de variável (não uma cadeia de caracteres de comprimento variável ou um objeto), `FilePut` grava apenas os dados da variável.</span><span class="sxs-lookup"><span data-stu-id="29143-1391">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="29143-1392">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual ao comprimento dos dados que estão sendo gravados.</span><span class="sxs-lookup"><span data-stu-id="29143-1392">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="29143-1393">`FilePut` grava os elementos de estruturas como se cada um fosse escrito individualmente, exceto que não há nenhum preenchimento entre os elementos.</span><span class="sxs-lookup"><span data-stu-id="29143-1393">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="29143-1394">O `VBFixedString` atributo pode ser aplicado a campos de cadeia de caracteres em estruturas para indicar o tamanho da cadeia de caracteres quando gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="29143-1394">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="29143-1395">Os campos que têm mais bytes que o especificado pela cadeia de caracteres a `VBFixedString` atributo são truncados quando gravados em disco,</span><span class="sxs-lookup"><span data-stu-id="29143-1395">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="29143-1396">Modo binário</span><span class="sxs-lookup"><span data-stu-id="29143-1396">Binary Mode</span></span>  
 <span data-ttu-id="29143-1397">Para arquivos abertos no `Binary` modo, a maioria do `Random` modo regras se aplicam, com algumas exceções.</span><span class="sxs-lookup"><span data-stu-id="29143-1397">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="29143-1398">As seguintes regras para arquivos abertos no `Binary` modo são diferentes das regras para `Random` modo:</span><span class="sxs-lookup"><span data-stu-id="29143-1398">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="29143-1399">A cláusula `RecordLength` na função de `FileOpen` não está em vigor.</span><span class="sxs-lookup"><span data-stu-id="29143-1399">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="29143-1400">`FilePut` grava todas as variáveis em disco de maneira contígua, ou seja, sem preenchimento entre os registros.</span><span class="sxs-lookup"><span data-stu-id="29143-1400">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="29143-1401">Para qualquer matriz que não seja uma matriz em uma estrutura, `FilePut` grava apenas os dados.</span><span class="sxs-lookup"><span data-stu-id="29143-1401">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="29143-1402">Nenhum descritor é escrito.</span><span class="sxs-lookup"><span data-stu-id="29143-1402">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="29143-1403">`FilePut` Grava cadeias de caracteres de comprimento variável que não são elementos das estruturas sem o descritor de dois bytes de comprimento.</span><span class="sxs-lookup"><span data-stu-id="29143-1403">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="29143-1404">O número de bytes gravados é igual ao número de caracteres na cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="29143-1404">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="29143-1405">Por exemplo, as instruções a seguir escrever 11 bytes no arquivo número 1:</span><span class="sxs-lookup"><span data-stu-id="29143-1405">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="29143-1406">A gravação em um arquivo usando a função `FilePut` requer o acesso `Write` da enumeração <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="29143-1406">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29143-1407">Este exemplo usa o `FilePut` função para gravar dados em um arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-1407">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="29143-1408">Cinco registros da estrutura `Person` são gravados no arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-1408">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="29143-1409"><paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</span><span class="sxs-lookup"><span data-stu-id="29143-1409"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="29143-1410">O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="29143-1410">File mode is invalid.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/writing-to-files.md"><span data-ttu-id="29143-1411">Gravando em arquivos no Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-1411">Writing to Files in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (int FileNumber, decimal Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(int32 FileNumber, valuetype System.Decimal Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Decimal,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Integer, Value As Decimal, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FilePut : int * decimal * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FilePut (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Decimal" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="29143-1412">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-1412">Required.</span></span> <span data-ttu-id="29143-1413">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="29143-1413">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="29143-1414">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-1414">Required.</span></span> <span data-ttu-id="29143-1415">Nome de variável válido que contém dados gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="29143-1415">Valid variable name that contains data written to disk.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="29143-1416">Opcional.</span><span class="sxs-lookup"><span data-stu-id="29143-1416">Optional.</span></span> <span data-ttu-id="29143-1417">Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a gravação começa.</span><span class="sxs-lookup"><span data-stu-id="29143-1417">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span></span></param>
        <summary><span data-ttu-id="29143-1418">Grava dados de uma variável em um arquivo de disco.</span><span class="sxs-lookup"><span data-stu-id="29143-1418">Writes data from a variable to a disk file.</span></span> <span data-ttu-id="29143-1419">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FilePut" />.</span><span class="sxs-lookup"><span data-stu-id="29143-1419">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span></span> <span data-ttu-id="29143-1420">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="29143-1420">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29143-1421">`FilePut` só é válido em `Random` e `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="29143-1421">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="29143-1422">Dados gravados com `FilePut` costumam ser lidos a partir de um arquivo usando `FileGet`.</span><span class="sxs-lookup"><span data-stu-id="29143-1422">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="29143-1423">O primeiro registro ou byte em um arquivo está na posição 1, o segundo registro ou byte está na posição 2 e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="29143-1423">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="29143-1424">Se você omitir `RecordNumber`, o próximo registro ou byte após a última `FileGet` ou `FilePut` funcionar ou apontado pela última `Seek` função é escrita.</span><span class="sxs-lookup"><span data-stu-id="29143-1424">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="29143-1425">O argumento `StringIsFixedLength` controla se a função interpreta cadeias de caracteres como sendo de tamanho variável ou fixo.</span><span class="sxs-lookup"><span data-stu-id="29143-1425">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="29143-1426">`FilePut` não grava o descritor do tamanho quando o argumento é `True`.</span><span class="sxs-lookup"><span data-stu-id="29143-1426">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="29143-1427">Se você usar `StringIsFixedLength`  =  `True` com `FilePut`, você precisa fazer o mesmo com `FileGet`, e você precisa certificar-se de que a cadeia de caracteres é inicializada com o tamanho esperado.</span><span class="sxs-lookup"><span data-stu-id="29143-1427">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="29143-1428">Modo aleatório</span><span class="sxs-lookup"><span data-stu-id="29143-1428">Random Mode</span></span>  
 <span data-ttu-id="29143-1429">Para arquivos abertos no `Random` modo, as seguintes regras se aplicam:</span><span class="sxs-lookup"><span data-stu-id="29143-1429">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="29143-1430">Se o comprimento dos dados que estão sendo gravados for menor que o comprimento especificado na `RecordLength` cláusula do `FileOpen` função, `FilePut` grava registros subsequentes em limites de comprimento de registro.</span><span class="sxs-lookup"><span data-stu-id="29143-1430">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="29143-1431">O espaço entre o final de um registro e o início do próximo registro é preenchido com o conteúdo existente no buffer de arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-1431">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="29143-1432">Como a quantidade de dados de preenchimento não pode ser determinada com certeza, geralmente é uma boa ideia ter o comprimento do registro corresponde ao tamanho dos dados que estão sendo gravados.</span><span class="sxs-lookup"><span data-stu-id="29143-1432">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="29143-1433">Se o comprimento dos dados que estão sendo gravados for maior que o comprimento especificado na `RecordLength` cláusula do `FileOpen` função, uma exceção será gerada.</span><span class="sxs-lookup"><span data-stu-id="29143-1433">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="29143-1434">Caso a variável que está sendo gravada seja uma cadeia de caracteres, `FilePut` grava um descritor de dois bytes que contém o tamanho da cadeia de caracteres e, em seguida, grava os dados que vão para a variável.</span><span class="sxs-lookup"><span data-stu-id="29143-1434">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="29143-1435">Portanto, o comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser pelo menos dois bytes maior do que o comprimento real da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="29143-1435">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="29143-1436">Caso a variável que está sendo gravada seja um objeto que contém um tipo numérico, `FilePut` grava dois bytes que identificam o `VarType` do objeto e, em seguida, grava a variável.</span><span class="sxs-lookup"><span data-stu-id="29143-1436">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="29143-1437">Por exemplo, ao escrever um objeto que contém um número inteiro, `FilePut` grava seis bytes: dois bytes que identificam o objeto como `VarType(3)` (`Integer`) e quatro bytes que contêm os dados.</span><span class="sxs-lookup"><span data-stu-id="29143-1437">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="29143-1438">O comprimento do registro especificado pelo `RecordLength` parâmetro no `FileOpen` função deve ser pelo menos dois bytes maior do que o número real de bytes necessários para armazenar a variável.</span><span class="sxs-lookup"><span data-stu-id="29143-1438">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="29143-1439">Se a variável que está sendo gravada for um objeto que contém uma cadeia de caracteres `FilePut` grava um descritor de dois bytes que identifica o `VarType(8)` do objeto, um descritor de dois bytes indicando o comprimento da cadeia de caracteres e, em seguida, grava os dados de cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="29143-1439">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="29143-1440">O comprimento do registro especificado pelo `RecordLength` parâmetro no `FileOpen` função deve ser maior que o comprimento real da cadeia de caracteres de pelo menos quatro bytes.</span><span class="sxs-lookup"><span data-stu-id="29143-1440">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="29143-1441">Caso queira colocar uma cadeia de caracteres sem o descritor, você deve passar `True` para o parâmetro `StringIsFixedLength`, e a cadeia de caracteres lida deve ter o tamanho correto.</span><span class="sxs-lookup"><span data-stu-id="29143-1441">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="29143-1442">Caso a variável gravada seja uma matriz, você tem a opção de gravar ou não um descritor para o tamanho e as dimensões da matriz.</span><span class="sxs-lookup"><span data-stu-id="29143-1442">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="29143-1443">O descritor de arquivo para uma matriz dinâmica, mas não para uma matriz de tamanho fixo de gravação do Visual Basic 6.0 e versões anteriores.</span><span class="sxs-lookup"><span data-stu-id="29143-1443">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="29143-1444">O padrão do Visual Basic 2005 é não gravar o descritor.</span><span class="sxs-lookup"><span data-stu-id="29143-1444">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="29143-1445">Para gravar o descritor, defina as `ArrayIsDynamic` parâmetro para `True`.</span><span class="sxs-lookup"><span data-stu-id="29143-1445">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="29143-1446">Ao escrever a matriz, você precisa comparar a forma com que a matriz será lida; se ela for lida com o descritor, você precisará escrever o descritor.</span><span class="sxs-lookup"><span data-stu-id="29143-1446">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="29143-1447">O descritor especifica a classificação de matriz, o tamanho e os limites inferiores para cada classificação.</span><span class="sxs-lookup"><span data-stu-id="29143-1447">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="29143-1448">Seu comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="29143-1448">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="29143-1449">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessário para gravar os dados de matriz e o descritor de matriz.</span><span class="sxs-lookup"><span data-stu-id="29143-1449">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="29143-1450">Por exemplo, a seguinte declaração de matriz requer 218 bytes quando a matriz é gravada no disco.</span><span class="sxs-lookup"><span data-stu-id="29143-1450">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="29143-1451">Se a variável que está sendo gravada for qualquer outro tipo de variável (não uma cadeia de caracteres de comprimento variável ou um objeto), `FilePut` grava apenas os dados da variável.</span><span class="sxs-lookup"><span data-stu-id="29143-1451">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="29143-1452">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual ao comprimento dos dados que estão sendo gravados.</span><span class="sxs-lookup"><span data-stu-id="29143-1452">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="29143-1453">`FilePut` grava os elementos de estruturas como se cada um fosse escrito individualmente, exceto que não há nenhum preenchimento entre os elementos.</span><span class="sxs-lookup"><span data-stu-id="29143-1453">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="29143-1454">O `VBFixedString` atributo pode ser aplicado a campos de cadeia de caracteres em estruturas para indicar o tamanho da cadeia de caracteres quando gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="29143-1454">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="29143-1455">Os campos que têm mais bytes que o especificado pela cadeia de caracteres a `VBFixedString` atributo são truncados quando gravados em disco,</span><span class="sxs-lookup"><span data-stu-id="29143-1455">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="29143-1456">Modo binário</span><span class="sxs-lookup"><span data-stu-id="29143-1456">Binary Mode</span></span>  
 <span data-ttu-id="29143-1457">Para arquivos abertos no `Binary` modo, a maioria do `Random` modo regras se aplicam, com algumas exceções.</span><span class="sxs-lookup"><span data-stu-id="29143-1457">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="29143-1458">As seguintes regras para arquivos abertos no `Binary` modo são diferentes das regras para `Random` modo:</span><span class="sxs-lookup"><span data-stu-id="29143-1458">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="29143-1459">A cláusula `RecordLength` na função de `FileOpen` não está em vigor.</span><span class="sxs-lookup"><span data-stu-id="29143-1459">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="29143-1460">`FilePut` grava todas as variáveis em disco de maneira contígua, ou seja, sem preenchimento entre os registros.</span><span class="sxs-lookup"><span data-stu-id="29143-1460">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="29143-1461">Para qualquer matriz que não seja uma matriz em uma estrutura, `FilePut` grava apenas os dados.</span><span class="sxs-lookup"><span data-stu-id="29143-1461">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="29143-1462">Nenhum descritor é escrito.</span><span class="sxs-lookup"><span data-stu-id="29143-1462">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="29143-1463">`FilePut` Grava cadeias de caracteres de comprimento variável que não são elementos das estruturas sem o descritor de dois bytes de comprimento.</span><span class="sxs-lookup"><span data-stu-id="29143-1463">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="29143-1464">O número de bytes gravados é igual ao número de caracteres na cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="29143-1464">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="29143-1465">Por exemplo, as instruções a seguir escrever 11 bytes no arquivo número 1:</span><span class="sxs-lookup"><span data-stu-id="29143-1465">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="29143-1466">A gravação em um arquivo usando a função `FilePut` requer o acesso `Write` da enumeração <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="29143-1466">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29143-1467">Este exemplo usa o `FilePut` função para gravar dados em um arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-1467">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="29143-1468">Cinco registros da estrutura `Person` são gravados no arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-1468">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="29143-1469"><paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</span><span class="sxs-lookup"><span data-stu-id="29143-1469"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="29143-1470">O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="29143-1470">File mode is invalid.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/writing-to-files.md"><span data-ttu-id="29143-1471">Gravando em arquivos no Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-1471">Writing to Files in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (int FileNumber, double Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(int32 FileNumber, float64 Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Double,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Integer, Value As Double, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FilePut : int * double * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FilePut (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Double" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="29143-1472">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-1472">Required.</span></span> <span data-ttu-id="29143-1473">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="29143-1473">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="29143-1474">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-1474">Required.</span></span> <span data-ttu-id="29143-1475">Nome de variável válido que contém dados gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="29143-1475">Valid variable name that contains data written to disk.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="29143-1476">Opcional.</span><span class="sxs-lookup"><span data-stu-id="29143-1476">Optional.</span></span> <span data-ttu-id="29143-1477">Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a gravação começa.</span><span class="sxs-lookup"><span data-stu-id="29143-1477">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span></span></param>
        <summary><span data-ttu-id="29143-1478">Grava dados de uma variável em um arquivo de disco.</span><span class="sxs-lookup"><span data-stu-id="29143-1478">Writes data from a variable to a disk file.</span></span> <span data-ttu-id="29143-1479">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FilePut" />.</span><span class="sxs-lookup"><span data-stu-id="29143-1479">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span></span> <span data-ttu-id="29143-1480">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="29143-1480">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29143-1481">`FilePut` só é válido em `Random` e `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="29143-1481">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="29143-1482">Dados gravados com `FilePut` costumam ser lidos a partir de um arquivo usando `FileGet`.</span><span class="sxs-lookup"><span data-stu-id="29143-1482">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="29143-1483">O primeiro registro ou byte em um arquivo está na posição 1, o segundo registro ou byte está na posição 2 e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="29143-1483">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="29143-1484">Se você omitir `RecordNumber`, o próximo registro ou byte após a última `FileGet` ou `FilePut` funcionar ou apontado pela última `Seek` função é escrita.</span><span class="sxs-lookup"><span data-stu-id="29143-1484">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="29143-1485">O argumento `StringIsFixedLength` controla se a função interpreta cadeias de caracteres como sendo de tamanho variável ou fixo.</span><span class="sxs-lookup"><span data-stu-id="29143-1485">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="29143-1486">`FilePut` não grava o descritor do tamanho quando o argumento é `True`.</span><span class="sxs-lookup"><span data-stu-id="29143-1486">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="29143-1487">Se você usar `StringIsFixedLength`  =  `True` com `FilePut`, você precisa fazer o mesmo com `FileGet`, e você precisa certificar-se de que a cadeia de caracteres é inicializada com o tamanho esperado.</span><span class="sxs-lookup"><span data-stu-id="29143-1487">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="29143-1488">Modo aleatório</span><span class="sxs-lookup"><span data-stu-id="29143-1488">Random Mode</span></span>  
 <span data-ttu-id="29143-1489">Para arquivos abertos no `Random` modo, as seguintes regras se aplicam:</span><span class="sxs-lookup"><span data-stu-id="29143-1489">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="29143-1490">Se o comprimento dos dados que estão sendo gravados for menor que o comprimento especificado na `RecordLength` cláusula do `FileOpen` função, `FilePut` grava registros subsequentes em limites de comprimento de registro.</span><span class="sxs-lookup"><span data-stu-id="29143-1490">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="29143-1491">O espaço entre o final de um registro e o início do próximo registro é preenchido com o conteúdo existente no buffer de arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-1491">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="29143-1492">Como a quantidade de dados de preenchimento não pode ser determinada com certeza, geralmente é uma boa ideia ter o comprimento do registro corresponde ao tamanho dos dados que estão sendo gravados.</span><span class="sxs-lookup"><span data-stu-id="29143-1492">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="29143-1493">Se o comprimento dos dados que estão sendo gravados for maior que o comprimento especificado na `RecordLength` cláusula do `FileOpen` função, uma exceção será gerada.</span><span class="sxs-lookup"><span data-stu-id="29143-1493">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="29143-1494">Caso a variável que está sendo gravada seja uma cadeia de caracteres, `FilePut` grava um descritor de dois bytes que contém o tamanho da cadeia de caracteres e, em seguida, grava os dados que vão para a variável.</span><span class="sxs-lookup"><span data-stu-id="29143-1494">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="29143-1495">Portanto, o comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser pelo menos dois bytes maior do que o comprimento real da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="29143-1495">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="29143-1496">Caso a variável que está sendo gravada seja um objeto que contém um tipo numérico, `FilePut` grava dois bytes que identificam o `VarType` do objeto e, em seguida, grava a variável.</span><span class="sxs-lookup"><span data-stu-id="29143-1496">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="29143-1497">Por exemplo, ao escrever um objeto que contém um número inteiro, `FilePut` grava seis bytes: dois bytes que identificam o objeto como `VarType(3)` (`Integer`) e quatro bytes que contêm os dados.</span><span class="sxs-lookup"><span data-stu-id="29143-1497">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="29143-1498">O comprimento do registro especificado pelo `RecordLength` parâmetro no `FileOpen` função deve ser pelo menos dois bytes maior do que o número real de bytes necessários para armazenar a variável.</span><span class="sxs-lookup"><span data-stu-id="29143-1498">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="29143-1499">Se a variável que está sendo gravada for um objeto que contém uma cadeia de caracteres `FilePut` grava um descritor de dois bytes que identifica o `VarType(8)` do objeto, um descritor de dois bytes indicando o comprimento da cadeia de caracteres e, em seguida, grava os dados de cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="29143-1499">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="29143-1500">O comprimento do registro especificado pelo `RecordLength` parâmetro no `FileOpen` função deve ser maior que o comprimento real da cadeia de caracteres de pelo menos quatro bytes.</span><span class="sxs-lookup"><span data-stu-id="29143-1500">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="29143-1501">Caso queira colocar uma cadeia de caracteres sem o descritor, você deve passar `True` para o parâmetro `StringIsFixedLength`, e a cadeia de caracteres lida deve ter o tamanho correto.</span><span class="sxs-lookup"><span data-stu-id="29143-1501">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="29143-1502">Caso a variável gravada seja uma matriz, você tem a opção de gravar ou não um descritor para o tamanho e as dimensões da matriz.</span><span class="sxs-lookup"><span data-stu-id="29143-1502">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="29143-1503">O descritor de arquivo para uma matriz dinâmica, mas não para uma matriz de tamanho fixo de gravação do Visual Basic 6.0 e versões anteriores.</span><span class="sxs-lookup"><span data-stu-id="29143-1503">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="29143-1504">O padrão do Visual Basic 2005 é não gravar o descritor.</span><span class="sxs-lookup"><span data-stu-id="29143-1504">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="29143-1505">Para gravar o descritor, defina as `ArrayIsDynamic` parâmetro para `True`.</span><span class="sxs-lookup"><span data-stu-id="29143-1505">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="29143-1506">Ao escrever a matriz, você precisa comparar a forma com que a matriz será lida; se ela for lida com o descritor, você precisará escrever o descritor.</span><span class="sxs-lookup"><span data-stu-id="29143-1506">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="29143-1507">O descritor especifica a classificação de matriz, o tamanho e os limites inferiores para cada classificação.</span><span class="sxs-lookup"><span data-stu-id="29143-1507">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="29143-1508">Seu comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="29143-1508">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="29143-1509">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessário para gravar os dados de matriz e o descritor de matriz.</span><span class="sxs-lookup"><span data-stu-id="29143-1509">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="29143-1510">Por exemplo, a seguinte declaração de matriz requer 218 bytes quando a matriz é gravada no disco.</span><span class="sxs-lookup"><span data-stu-id="29143-1510">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="29143-1511">Se a variável que está sendo gravada for qualquer outro tipo de variável (não uma cadeia de caracteres de comprimento variável ou um objeto), `FilePut` grava apenas os dados da variável.</span><span class="sxs-lookup"><span data-stu-id="29143-1511">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="29143-1512">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual ao comprimento dos dados que estão sendo gravados.</span><span class="sxs-lookup"><span data-stu-id="29143-1512">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="29143-1513">`FilePut` grava os elementos de estruturas como se cada um fosse escrito individualmente, exceto que não há nenhum preenchimento entre os elementos.</span><span class="sxs-lookup"><span data-stu-id="29143-1513">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="29143-1514">O `VBFixedString` atributo pode ser aplicado a campos de cadeia de caracteres em estruturas para indicar o tamanho da cadeia de caracteres quando gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="29143-1514">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="29143-1515">Os campos que têm mais bytes que o especificado pela cadeia de caracteres a `VBFixedString` atributo são truncados quando gravados em disco,</span><span class="sxs-lookup"><span data-stu-id="29143-1515">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="29143-1516">Modo binário</span><span class="sxs-lookup"><span data-stu-id="29143-1516">Binary Mode</span></span>  
 <span data-ttu-id="29143-1517">Para arquivos abertos no `Binary` modo, a maioria do `Random` modo regras se aplicam, com algumas exceções.</span><span class="sxs-lookup"><span data-stu-id="29143-1517">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="29143-1518">As seguintes regras para arquivos abertos no `Binary` modo são diferentes das regras para `Random` modo:</span><span class="sxs-lookup"><span data-stu-id="29143-1518">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="29143-1519">A cláusula `RecordLength` na função de `FileOpen` não está em vigor.</span><span class="sxs-lookup"><span data-stu-id="29143-1519">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="29143-1520">`FilePut` grava todas as variáveis em disco de maneira contígua, ou seja, sem preenchimento entre os registros.</span><span class="sxs-lookup"><span data-stu-id="29143-1520">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="29143-1521">Para qualquer matriz que não seja uma matriz em uma estrutura, `FilePut` grava apenas os dados.</span><span class="sxs-lookup"><span data-stu-id="29143-1521">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="29143-1522">Nenhum descritor é escrito.</span><span class="sxs-lookup"><span data-stu-id="29143-1522">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="29143-1523">`FilePut` Grava cadeias de caracteres de comprimento variável que não são elementos das estruturas sem o descritor de dois bytes de comprimento.</span><span class="sxs-lookup"><span data-stu-id="29143-1523">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="29143-1524">O número de bytes gravados é igual ao número de caracteres na cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="29143-1524">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="29143-1525">Por exemplo, as instruções a seguir escrever 11 bytes no arquivo número 1:</span><span class="sxs-lookup"><span data-stu-id="29143-1525">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="29143-1526">A gravação em um arquivo usando a função `FilePut` requer o acesso `Write` da enumeração <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="29143-1526">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29143-1527">Este exemplo usa o `FilePut` função para gravar dados em um arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-1527">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="29143-1528">Cinco registros da estrutura `Person` são gravados no arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-1528">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="29143-1529"><paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</span><span class="sxs-lookup"><span data-stu-id="29143-1529"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="29143-1530">O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="29143-1530">File mode is invalid.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/writing-to-files.md"><span data-ttu-id="29143-1531">Gravando em arquivos no Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-1531">Writing to Files in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (int FileNumber, short Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(int32 FileNumber, int16 Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Int16,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Integer, Value As Short, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FilePut : int * int16 * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FilePut (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Int16" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="29143-1532">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-1532">Required.</span></span> <span data-ttu-id="29143-1533">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="29143-1533">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="29143-1534">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-1534">Required.</span></span> <span data-ttu-id="29143-1535">Nome de variável válido que contém dados gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="29143-1535">Valid variable name that contains data written to disk.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="29143-1536">Opcional.</span><span class="sxs-lookup"><span data-stu-id="29143-1536">Optional.</span></span> <span data-ttu-id="29143-1537">Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a gravação começa.</span><span class="sxs-lookup"><span data-stu-id="29143-1537">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span></span></param>
        <summary><span data-ttu-id="29143-1538">Grava dados de uma variável em um arquivo de disco.</span><span class="sxs-lookup"><span data-stu-id="29143-1538">Writes data from a variable to a disk file.</span></span> <span data-ttu-id="29143-1539">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FilePut" />.</span><span class="sxs-lookup"><span data-stu-id="29143-1539">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span></span> <span data-ttu-id="29143-1540">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="29143-1540">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29143-1541">`FilePut` só é válido em `Random` e `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="29143-1541">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="29143-1542">Dados gravados com `FilePut` costumam ser lidos a partir de um arquivo usando `FileGet`.</span><span class="sxs-lookup"><span data-stu-id="29143-1542">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="29143-1543">O primeiro registro ou byte em um arquivo está na posição 1, o segundo registro ou byte está na posição 2 e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="29143-1543">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="29143-1544">Se você omitir `RecordNumber`, o próximo registro ou byte após a última `FileGet` ou `FilePut` funcionar ou apontado pela última `Seek` função é escrita.</span><span class="sxs-lookup"><span data-stu-id="29143-1544">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="29143-1545">O argumento `StringIsFixedLength` controla se a função interpreta cadeias de caracteres como sendo de tamanho variável ou fixo.</span><span class="sxs-lookup"><span data-stu-id="29143-1545">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="29143-1546">`FilePut` não grava o descritor do tamanho quando o argumento é `True`.</span><span class="sxs-lookup"><span data-stu-id="29143-1546">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="29143-1547">Se você usar `StringIsFixedLength`  =  `True` com `FilePut`, você precisa fazer o mesmo com `FileGet`, e você precisa certificar-se de que a cadeia de caracteres é inicializada com o tamanho esperado.</span><span class="sxs-lookup"><span data-stu-id="29143-1547">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="29143-1548">Modo aleatório</span><span class="sxs-lookup"><span data-stu-id="29143-1548">Random Mode</span></span>  
 <span data-ttu-id="29143-1549">Para arquivos abertos no `Random` modo, as seguintes regras se aplicam:</span><span class="sxs-lookup"><span data-stu-id="29143-1549">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="29143-1550">Se o comprimento dos dados que estão sendo gravados for menor que o comprimento especificado na `RecordLength` cláusula do `FileOpen` função, `FilePut` grava registros subsequentes em limites de comprimento de registro.</span><span class="sxs-lookup"><span data-stu-id="29143-1550">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="29143-1551">O espaço entre o final de um registro e o início do próximo registro é preenchido com o conteúdo existente no buffer de arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-1551">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="29143-1552">Como a quantidade de dados de preenchimento não pode ser determinada com certeza, geralmente é uma boa ideia ter o comprimento do registro corresponde ao tamanho dos dados que estão sendo gravados.</span><span class="sxs-lookup"><span data-stu-id="29143-1552">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="29143-1553">Se o comprimento dos dados que estão sendo gravados for maior que o comprimento especificado na `RecordLength` cláusula do `FileOpen` função, uma exceção será gerada.</span><span class="sxs-lookup"><span data-stu-id="29143-1553">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="29143-1554">Caso a variável que está sendo gravada seja uma cadeia de caracteres, `FilePut` grava um descritor de dois bytes que contém o tamanho da cadeia de caracteres e, em seguida, grava os dados que vão para a variável.</span><span class="sxs-lookup"><span data-stu-id="29143-1554">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="29143-1555">Portanto, o comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser pelo menos dois bytes maior do que o comprimento real da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="29143-1555">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="29143-1556">Caso a variável que está sendo gravada seja um objeto que contém um tipo numérico, `FilePut` grava dois bytes que identificam o `VarType` do objeto e, em seguida, grava a variável.</span><span class="sxs-lookup"><span data-stu-id="29143-1556">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="29143-1557">Por exemplo, ao escrever um objeto que contém um número inteiro, `FilePut` grava seis bytes: dois bytes que identificam o objeto como `VarType(3)` (`Integer`) e quatro bytes que contêm os dados.</span><span class="sxs-lookup"><span data-stu-id="29143-1557">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="29143-1558">O comprimento do registro especificado pelo `RecordLength` parâmetro no `FileOpen` função deve ser pelo menos dois bytes maior do que o número real de bytes necessários para armazenar a variável.</span><span class="sxs-lookup"><span data-stu-id="29143-1558">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="29143-1559">Se a variável que está sendo gravada for um objeto que contém uma cadeia de caracteres `FilePut` grava um descritor de dois bytes que identifica o`VarType(8)` do objeto, um descritor de dois bytes indicando o comprimento da cadeia de caracteres e, em seguida, grava os dados de cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="29143-1559">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the`VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="29143-1560">O comprimento do registro especificado pelo `RecordLength` parâmetro no `FileOpen` função deve ser maior que o comprimento real da cadeia de caracteres de pelo menos quatro bytes.</span><span class="sxs-lookup"><span data-stu-id="29143-1560">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="29143-1561">Caso queira colocar uma cadeia de caracteres sem o descritor, você deve passar `True` para o parâmetro `StringIsFixedLength`, e a cadeia de caracteres lida deve ter o tamanho correto.</span><span class="sxs-lookup"><span data-stu-id="29143-1561">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="29143-1562">Caso a variável gravada seja uma matriz, você tem a opção de gravar ou não um descritor para o tamanho e as dimensões da matriz.</span><span class="sxs-lookup"><span data-stu-id="29143-1562">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="29143-1563">O descritor de arquivo para uma matriz dinâmica, mas não para uma matriz de tamanho fixo de gravação do Visual Basic 6.0 e versões anteriores.</span><span class="sxs-lookup"><span data-stu-id="29143-1563">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="29143-1564">O padrão do Visual Basic 2005 é não gravar o descritor.</span><span class="sxs-lookup"><span data-stu-id="29143-1564">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="29143-1565">Para gravar o descritor, defina as `ArrayIsDynamic` parâmetro para `True`.</span><span class="sxs-lookup"><span data-stu-id="29143-1565">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="29143-1566">Ao escrever a matriz, você precisa comparar a forma com que a matriz será lida; se ela for lida com o descritor, você precisará escrever o descritor.</span><span class="sxs-lookup"><span data-stu-id="29143-1566">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="29143-1567">O descritor especifica a classificação de matriz, o tamanho e os limites inferiores para cada classificação.</span><span class="sxs-lookup"><span data-stu-id="29143-1567">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="29143-1568">Seu comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="29143-1568">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="29143-1569">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessário para gravar os dados de matriz e o descritor de matriz.</span><span class="sxs-lookup"><span data-stu-id="29143-1569">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="29143-1570">Por exemplo, a seguinte declaração de matriz requer 218 bytes quando a matriz é gravada no disco.</span><span class="sxs-lookup"><span data-stu-id="29143-1570">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="29143-1571">Se a variável que está sendo gravada for qualquer outro tipo de variável (não uma cadeia de caracteres de comprimento variável ou um objeto), `FilePut` grava apenas os dados da variável.</span><span class="sxs-lookup"><span data-stu-id="29143-1571">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="29143-1572">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual ao comprimento dos dados que estão sendo gravados.</span><span class="sxs-lookup"><span data-stu-id="29143-1572">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="29143-1573">`FilePut` grava os elementos de estruturas como se cada um fosse escrito individualmente, exceto que não há nenhum preenchimento entre os elementos.</span><span class="sxs-lookup"><span data-stu-id="29143-1573">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="29143-1574">O `VBFixedString` atributo pode ser aplicado a campos de cadeia de caracteres em estruturas para indicar o tamanho da cadeia de caracteres quando gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="29143-1574">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="29143-1575">Os campos que têm mais bytes que o especificado pela cadeia de caracteres a `VBFixedString` atributo são truncados quando gravados em disco,</span><span class="sxs-lookup"><span data-stu-id="29143-1575">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="29143-1576">Modo binário</span><span class="sxs-lookup"><span data-stu-id="29143-1576">Binary Mode</span></span>  
 <span data-ttu-id="29143-1577">Para arquivos abertos no `Binary` modo, a maioria do `Random` modo regras se aplicam, com algumas exceções.</span><span class="sxs-lookup"><span data-stu-id="29143-1577">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="29143-1578">As seguintes regras para arquivos abertos no `Binary` modo são diferentes das regras para `Random` modo:</span><span class="sxs-lookup"><span data-stu-id="29143-1578">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="29143-1579">A cláusula `RecordLength` na função de `FileOpen` não está em vigor.</span><span class="sxs-lookup"><span data-stu-id="29143-1579">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="29143-1580">`FilePut` grava todas as variáveis em disco de maneira contígua, ou seja, sem preenchimento entre os registros.</span><span class="sxs-lookup"><span data-stu-id="29143-1580">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="29143-1581">Para qualquer matriz que não seja uma matriz em uma estrutura, `FilePut` grava apenas os dados.</span><span class="sxs-lookup"><span data-stu-id="29143-1581">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="29143-1582">Nenhum descritor é escrito.</span><span class="sxs-lookup"><span data-stu-id="29143-1582">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="29143-1583">`FilePut` Grava cadeias de caracteres de comprimento variável que não são elementos das estruturas sem o descritor de dois bytes de comprimento.</span><span class="sxs-lookup"><span data-stu-id="29143-1583">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="29143-1584">O número de bytes gravados é igual ao número de caracteres na cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="29143-1584">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="29143-1585">Por exemplo, as instruções a seguir escrever 11 bytes no arquivo número 1:</span><span class="sxs-lookup"><span data-stu-id="29143-1585">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="29143-1586">A gravação em um arquivo usando a função `FilePut` requer o acesso `Write` da enumeração <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="29143-1586">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29143-1587">Este exemplo usa o `FilePut` função para gravar dados em um arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-1587">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="29143-1588">Cinco registros da estrutura `Person` são gravados no arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-1588">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="29143-1589"><paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</span><span class="sxs-lookup"><span data-stu-id="29143-1589"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="29143-1590">O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="29143-1590">File mode is invalid.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/writing-to-files.md"><span data-ttu-id="29143-1591">Gravando em arquivos no Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-1591">Writing to Files in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (int FileNumber, int Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(int32 FileNumber, int32 Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Int32,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Integer, Value As Integer, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FilePut : int * int * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FilePut (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Int32" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="29143-1592">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-1592">Required.</span></span> <span data-ttu-id="29143-1593">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="29143-1593">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="29143-1594">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-1594">Required.</span></span> <span data-ttu-id="29143-1595">Nome de variável válido que contém dados gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="29143-1595">Valid variable name that contains data written to disk.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="29143-1596">Opcional.</span><span class="sxs-lookup"><span data-stu-id="29143-1596">Optional.</span></span> <span data-ttu-id="29143-1597">Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a gravação começa.</span><span class="sxs-lookup"><span data-stu-id="29143-1597">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span></span></param>
        <summary><span data-ttu-id="29143-1598">Grava dados de uma variável em um arquivo de disco.</span><span class="sxs-lookup"><span data-stu-id="29143-1598">Writes data from a variable to a disk file.</span></span> <span data-ttu-id="29143-1599">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FilePut" />.</span><span class="sxs-lookup"><span data-stu-id="29143-1599">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span></span> <span data-ttu-id="29143-1600">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="29143-1600">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29143-1601">`FilePut` só é válido em `Random` e `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="29143-1601">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="29143-1602">Dados gravados com `FilePut` costumam ser lidos a partir de um arquivo usando `FileGet`.</span><span class="sxs-lookup"><span data-stu-id="29143-1602">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="29143-1603">O primeiro registro ou byte em um arquivo está na posição 1, o segundo registro ou byte está na posição 2 e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="29143-1603">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="29143-1604">Se você omitir `RecordNumber`, o próximo registro ou byte após a última `FileGet` ou `FilePut` funcionar ou apontado pela última `Seek` função é escrita.</span><span class="sxs-lookup"><span data-stu-id="29143-1604">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="29143-1605">O argumento `StringIsFixedLength` controla se a função interpreta cadeias de caracteres como sendo de tamanho variável ou fixo.</span><span class="sxs-lookup"><span data-stu-id="29143-1605">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="29143-1606">`FilePut` não grava o descritor do tamanho quando o argumento é `True`.</span><span class="sxs-lookup"><span data-stu-id="29143-1606">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="29143-1607">Se você usar `StringIsFixedLength`  =  `True` com `FilePut`, você precisa fazer o mesmo com `FileGet`, e você precisa certificar-se de que a cadeia de caracteres é inicializada com o tamanho esperado.</span><span class="sxs-lookup"><span data-stu-id="29143-1607">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="29143-1608">Modo aleatório</span><span class="sxs-lookup"><span data-stu-id="29143-1608">Random Mode</span></span>  
 <span data-ttu-id="29143-1609">Para arquivos abertos no `Random` modo, as seguintes regras se aplicam:</span><span class="sxs-lookup"><span data-stu-id="29143-1609">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="29143-1610">Se o comprimento dos dados que estão sendo gravados for menor que o comprimento especificado na `RecordLength` cláusula do `FileOpen` função, `FilePut` grava registros subsequentes em limites de comprimento de registro.</span><span class="sxs-lookup"><span data-stu-id="29143-1610">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="29143-1611">O espaço entre o final de um registro e o início do próximo registro é preenchido com o conteúdo existente no buffer de arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-1611">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="29143-1612">Como a quantidade de dados de preenchimento não pode ser determinada com certeza, geralmente é uma boa ideia ter o comprimento do registro corresponde ao tamanho dos dados que estão sendo gravados.</span><span class="sxs-lookup"><span data-stu-id="29143-1612">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="29143-1613">Se o comprimento dos dados que estão sendo gravados for maior que o comprimento especificado na `RecordLength` cláusula do `FileOpen` função, uma exceção será gerada.</span><span class="sxs-lookup"><span data-stu-id="29143-1613">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="29143-1614">Caso a variável que está sendo gravada seja uma cadeia de caracteres, `FilePut` grava um descritor de dois bytes que contém o tamanho da cadeia de caracteres e, em seguida, grava os dados que vão para a variável.</span><span class="sxs-lookup"><span data-stu-id="29143-1614">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="29143-1615">Portanto, o comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser pelo menos dois bytes maior do que o comprimento real da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="29143-1615">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="29143-1616">Caso a variável que está sendo gravada seja um objeto que contém um tipo numérico, `FilePut` grava dois bytes que identificam o `VarType` do objeto e, em seguida, grava a variável.</span><span class="sxs-lookup"><span data-stu-id="29143-1616">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="29143-1617">Por exemplo, ao escrever um objeto que contém um número inteiro, `FilePut` grava seis bytes: dois bytes que identificam o objeto como `VarType(3)` (`Integer`) e quatro bytes que contêm os dados.</span><span class="sxs-lookup"><span data-stu-id="29143-1617">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="29143-1618">O comprimento do registro especificado pelo `RecordLength` parâmetro no `FileOpen` função deve ser pelo menos dois bytes maior do que o número real de bytes necessários para armazenar a variável.</span><span class="sxs-lookup"><span data-stu-id="29143-1618">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="29143-1619">Se a variável que está sendo gravada for um objeto que contém uma cadeia de caracteres `FilePut` grava um descritor de dois bytes que identifica o `VarType(8)` do objeto, um descritor de dois bytes indicando o comprimento da cadeia de caracteres e, em seguida, grava os dados de cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="29143-1619">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="29143-1620">O comprimento do registro especificado pelo `RecordLength` parâmetro no `FileOpen` função deve ser maior que o comprimento real da cadeia de caracteres de pelo menos quatro bytes.</span><span class="sxs-lookup"><span data-stu-id="29143-1620">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="29143-1621">Caso queira colocar uma cadeia de caracteres sem o descritor, você deve passar `True` para o parâmetro `StringIsFixedLength`, e a cadeia de caracteres lida deve ter o tamanho correto.</span><span class="sxs-lookup"><span data-stu-id="29143-1621">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="29143-1622">Caso a variável gravada seja uma matriz, você tem a opção de gravar ou não um descritor para o tamanho e as dimensões da matriz.</span><span class="sxs-lookup"><span data-stu-id="29143-1622">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="29143-1623">O descritor de arquivo para uma matriz dinâmica, mas não para uma matriz de tamanho fixo de gravação do Visual Basic 6.0 e versões anteriores.</span><span class="sxs-lookup"><span data-stu-id="29143-1623">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="29143-1624">O padrão do Visual Basic 2005 é não gravar o descritor.</span><span class="sxs-lookup"><span data-stu-id="29143-1624">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="29143-1625">Para gravar o descritor, defina as `ArrayIsDynamic` parâmetro para `True`.</span><span class="sxs-lookup"><span data-stu-id="29143-1625">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="29143-1626">Ao escrever a matriz, você precisa comparar a forma com que a matriz será lida; se ela for lida com o descritor, você precisará escrever o descritor.</span><span class="sxs-lookup"><span data-stu-id="29143-1626">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="29143-1627">O descritor especifica a classificação de matriz, o tamanho e os limites inferiores para cada classificação.</span><span class="sxs-lookup"><span data-stu-id="29143-1627">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="29143-1628">Seu comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="29143-1628">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="29143-1629">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessário para gravar os dados de matriz e o descritor de matriz.</span><span class="sxs-lookup"><span data-stu-id="29143-1629">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="29143-1630">Por exemplo, a seguinte declaração de matriz requer 218 bytes quando a matriz é gravada no disco.</span><span class="sxs-lookup"><span data-stu-id="29143-1630">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="29143-1631">Se a variável que está sendo gravada for qualquer outro tipo de variável (não uma cadeia de caracteres de comprimento variável ou um objeto), `FilePut` grava apenas os dados da variável.</span><span class="sxs-lookup"><span data-stu-id="29143-1631">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="29143-1632">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual ao comprimento dos dados que estão sendo gravados.</span><span class="sxs-lookup"><span data-stu-id="29143-1632">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="29143-1633">`FilePut` grava os elementos de estruturas como se cada um fosse escrito individualmente, exceto que não há nenhum preenchimento entre os elementos.</span><span class="sxs-lookup"><span data-stu-id="29143-1633">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="29143-1634">O `VBFixedString` atributo pode ser aplicado a campos de cadeia de caracteres em estruturas para indicar o tamanho da cadeia de caracteres quando gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="29143-1634">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="29143-1635">Os campos que têm mais bytes que o especificado pela cadeia de caracteres a `VBFixedString` atributo são truncados quando gravados em disco,</span><span class="sxs-lookup"><span data-stu-id="29143-1635">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="29143-1636">Modo binário</span><span class="sxs-lookup"><span data-stu-id="29143-1636">Binary Mode</span></span>  
 <span data-ttu-id="29143-1637">Para arquivos abertos no `Binary` modo, a maioria do `Random` modo regras se aplicam, com algumas exceções.</span><span class="sxs-lookup"><span data-stu-id="29143-1637">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="29143-1638">As seguintes regras para arquivos abertos no `Binary` modo são diferentes das regras para `Random` modo:</span><span class="sxs-lookup"><span data-stu-id="29143-1638">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="29143-1639">A cláusula `RecordLength` na função de `FileOpen` não está em vigor.</span><span class="sxs-lookup"><span data-stu-id="29143-1639">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="29143-1640">`FilePut` grava todas as variáveis em disco de maneira contígua, ou seja, sem preenchimento entre os registros.</span><span class="sxs-lookup"><span data-stu-id="29143-1640">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="29143-1641">Para qualquer matriz que não seja uma matriz em uma estrutura, `FilePut` grava apenas os dados.</span><span class="sxs-lookup"><span data-stu-id="29143-1641">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="29143-1642">Nenhum descritor é escrito.</span><span class="sxs-lookup"><span data-stu-id="29143-1642">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="29143-1643">`FilePut` Grava cadeias de caracteres de comprimento variável que não são elementos das estruturas sem o descritor de dois bytes de comprimento.</span><span class="sxs-lookup"><span data-stu-id="29143-1643">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="29143-1644">O número de bytes gravados é igual ao número de caracteres na cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="29143-1644">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="29143-1645">Por exemplo, as instruções a seguir escrever 11 bytes no arquivo número 1:</span><span class="sxs-lookup"><span data-stu-id="29143-1645">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="29143-1646">A gravação em um arquivo usando a função `FilePut` requer o acesso `Write` da enumeração <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="29143-1646">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29143-1647">Este exemplo usa o `FilePut` função para gravar dados em um arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-1647">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="29143-1648">Cinco registros da estrutura `Person` são gravados no arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-1648">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="29143-1649"><paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</span><span class="sxs-lookup"><span data-stu-id="29143-1649"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="29143-1650">O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="29143-1650">File mode is invalid.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/writing-to-files.md"><span data-ttu-id="29143-1651">Gravando em arquivos no Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-1651">Writing to Files in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (int FileNumber, long Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(int32 FileNumber, int64 Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Integer, Value As Long, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FilePut : int * int64 * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FilePut (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Int64" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="29143-1652">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-1652">Required.</span></span> <span data-ttu-id="29143-1653">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="29143-1653">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="29143-1654">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-1654">Required.</span></span> <span data-ttu-id="29143-1655">Nome de variável válido que contém dados gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="29143-1655">Valid variable name that contains data written to disk.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="29143-1656">Opcional.</span><span class="sxs-lookup"><span data-stu-id="29143-1656">Optional.</span></span> <span data-ttu-id="29143-1657">Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a gravação começa.</span><span class="sxs-lookup"><span data-stu-id="29143-1657">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span></span></param>
        <summary><span data-ttu-id="29143-1658">Grava dados de uma variável em um arquivo de disco.</span><span class="sxs-lookup"><span data-stu-id="29143-1658">Writes data from a variable to a disk file.</span></span> <span data-ttu-id="29143-1659">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FilePut" />.</span><span class="sxs-lookup"><span data-stu-id="29143-1659">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span></span> <span data-ttu-id="29143-1660">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="29143-1660">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29143-1661">`FilePut` só é válido em `Random` e `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="29143-1661">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="29143-1662">Dados gravados com `FilePut` costumam ser lidos a partir de um arquivo usando `FileGet`.</span><span class="sxs-lookup"><span data-stu-id="29143-1662">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="29143-1663">O primeiro registro ou byte em um arquivo está na posição 1, o segundo registro ou byte está na posição 2 e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="29143-1663">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="29143-1664">Se você omitir `RecordNumber`, o próximo registro ou byte após a última `FileGet` ou `FilePut` funcionar ou apontado pela última `Seek` função é escrita.</span><span class="sxs-lookup"><span data-stu-id="29143-1664">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="29143-1665">O argumento `StringIsFixedLength` controla se a função interpreta cadeias de caracteres como sendo de tamanho variável ou fixo.</span><span class="sxs-lookup"><span data-stu-id="29143-1665">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="29143-1666">`FilePut` não grava o descritor do tamanho quando o argumento é `True`.</span><span class="sxs-lookup"><span data-stu-id="29143-1666">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="29143-1667">Se você usar `StringIsFixedLength`  =  `True` com `FilePut`, você precisa fazer o mesmo com `FileGet`, e você precisa certificar-se de que a cadeia de caracteres é inicializada com o tamanho esperado.</span><span class="sxs-lookup"><span data-stu-id="29143-1667">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="29143-1668">Modo aleatório</span><span class="sxs-lookup"><span data-stu-id="29143-1668">Random Mode</span></span>  
 <span data-ttu-id="29143-1669">Para arquivos abertos no `Random` modo, as seguintes regras se aplicam:</span><span class="sxs-lookup"><span data-stu-id="29143-1669">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="29143-1670">Se o comprimento dos dados que estão sendo gravados for menor que o comprimento especificado na `RecordLength` cláusula do `FileOpen` função, `FilePut` grava registros subsequentes em limites de comprimento de registro.</span><span class="sxs-lookup"><span data-stu-id="29143-1670">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="29143-1671">O espaço entre o final de um registro e o início do próximo registro é preenchido com o conteúdo existente no buffer de arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-1671">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="29143-1672">Como a quantidade de dados de preenchimento não pode ser determinada com certeza, geralmente é uma boa ideia ter o comprimento do registro corresponde ao tamanho dos dados que estão sendo gravados.</span><span class="sxs-lookup"><span data-stu-id="29143-1672">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="29143-1673">Se o comprimento dos dados que estão sendo gravados for maior que o comprimento especificado na `RecordLength` cláusula do `FileOpen` função, uma exceção será gerada.</span><span class="sxs-lookup"><span data-stu-id="29143-1673">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="29143-1674">Caso a variável que está sendo gravada seja uma cadeia de caracteres, `FilePut` grava um descritor de dois bytes que contém o tamanho da cadeia de caracteres e, em seguida, grava os dados que vão para a variável.</span><span class="sxs-lookup"><span data-stu-id="29143-1674">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="29143-1675">Portanto, o comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser pelo menos dois bytes maior do que o comprimento real da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="29143-1675">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="29143-1676">Caso a variável que está sendo gravada seja um objeto que contém um tipo numérico, `FilePut` grava dois bytes que identificam o `VarType` do objeto e, em seguida, grava a variável.</span><span class="sxs-lookup"><span data-stu-id="29143-1676">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="29143-1677">Por exemplo, ao escrever um objeto que contém um número inteiro, `FilePut` grava seis bytes: dois bytes que identificam o objeto como `VarType(3)` (`Integer`) e quatro bytes que contêm os dados.</span><span class="sxs-lookup"><span data-stu-id="29143-1677">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="29143-1678">O comprimento do registro especificado pelo `RecordLength` parâmetro no `FileOpen` função deve ser pelo menos dois bytes maior do que o número real de bytes necessários para armazenar a variável.</span><span class="sxs-lookup"><span data-stu-id="29143-1678">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="29143-1679">Se a variável que está sendo gravada for um objeto que contém uma cadeia de caracteres `FilePut` grava um descritor de dois bytes que identifica o `VarType(8)` do objeto, um descritor de dois bytes indicando o comprimento da cadeia de caracteres e, em seguida, grava os dados de cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="29143-1679">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="29143-1680">O comprimento do registro especificado pelo `RecordLength` parâmetro no `FileOpen` função deve ser maior que o comprimento real da cadeia de caracteres de pelo menos quatro bytes.</span><span class="sxs-lookup"><span data-stu-id="29143-1680">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="29143-1681">Caso queira colocar uma cadeia de caracteres sem o descritor, você deve passar `True` para o parâmetro `StringIsFixedLength`, e a cadeia de caracteres lida deve ter o tamanho correto.</span><span class="sxs-lookup"><span data-stu-id="29143-1681">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="29143-1682">Caso a variável gravada seja uma matriz, você tem a opção de gravar ou não um descritor para o tamanho e as dimensões da matriz.</span><span class="sxs-lookup"><span data-stu-id="29143-1682">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="29143-1683">O descritor de arquivo para uma matriz dinâmica, mas não para uma matriz de tamanho fixo de gravação do Visual Basic 6.0 e versões anteriores.</span><span class="sxs-lookup"><span data-stu-id="29143-1683">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="29143-1684">O padrão do Visual Basic 2005 é não gravar o descritor.</span><span class="sxs-lookup"><span data-stu-id="29143-1684">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="29143-1685">Para gravar o descritor, defina as `ArrayIsDynamic` parâmetro para `True`.</span><span class="sxs-lookup"><span data-stu-id="29143-1685">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="29143-1686">Ao escrever a matriz, você precisa comparar a forma com que a matriz será lida; se ela for lida com o descritor, você precisará escrever o descritor.</span><span class="sxs-lookup"><span data-stu-id="29143-1686">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="29143-1687">O descritor especifica a classificação de matriz, o tamanho e os limites inferiores para cada classificação.</span><span class="sxs-lookup"><span data-stu-id="29143-1687">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="29143-1688">Seu comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="29143-1688">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="29143-1689">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessário para gravar os dados de matriz e o descritor de matriz.</span><span class="sxs-lookup"><span data-stu-id="29143-1689">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="29143-1690">Por exemplo, a seguinte declaração de matriz requer 218 bytes quando a matriz é gravada no disco.</span><span class="sxs-lookup"><span data-stu-id="29143-1690">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="29143-1691">Se a variável que está sendo gravada for qualquer outro tipo de variável (não uma cadeia de caracteres de comprimento variável ou um objeto), `FilePut` grava apenas os dados da variável.</span><span class="sxs-lookup"><span data-stu-id="29143-1691">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="29143-1692">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual ao comprimento dos dados que estão sendo gravados.</span><span class="sxs-lookup"><span data-stu-id="29143-1692">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="29143-1693">`FilePut` grava os elementos de estruturas como se cada um fosse escrito individualmente, exceto que não há nenhum preenchimento entre os elementos.</span><span class="sxs-lookup"><span data-stu-id="29143-1693">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="29143-1694">O `VBFixedString` atributo pode ser aplicado a campos de cadeia de caracteres em estruturas para indicar o tamanho da cadeia de caracteres quando gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="29143-1694">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="29143-1695">Os campos que têm mais bytes que o especificado pela cadeia de caracteres a `VBFixedString` atributo são truncados quando gravados em disco,</span><span class="sxs-lookup"><span data-stu-id="29143-1695">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="29143-1696">Modo binário</span><span class="sxs-lookup"><span data-stu-id="29143-1696">Binary Mode</span></span>  
 <span data-ttu-id="29143-1697">Para arquivos abertos no `Binary` modo, a maioria do `Random` modo regras se aplicam, com algumas exceções.</span><span class="sxs-lookup"><span data-stu-id="29143-1697">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="29143-1698">As seguintes regras para arquivos abertos no `Binary` modo são diferentes das regras para `Random` modo:</span><span class="sxs-lookup"><span data-stu-id="29143-1698">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="29143-1699">A cláusula `RecordLength` na função de `FileOpen` não está em vigor.</span><span class="sxs-lookup"><span data-stu-id="29143-1699">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="29143-1700">`FilePut` grava todas as variáveis em disco de maneira contígua, ou seja, sem preenchimento entre os registros.</span><span class="sxs-lookup"><span data-stu-id="29143-1700">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="29143-1701">Para qualquer matriz que não seja uma matriz em uma estrutura, `FilePut` grava apenas os dados.</span><span class="sxs-lookup"><span data-stu-id="29143-1701">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="29143-1702">Nenhum descritor é escrito.</span><span class="sxs-lookup"><span data-stu-id="29143-1702">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="29143-1703">`FilePut` Grava cadeias de caracteres de comprimento variável que não são elementos das estruturas sem o descritor de dois bytes de comprimento.</span><span class="sxs-lookup"><span data-stu-id="29143-1703">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="29143-1704">O número de bytes gravados é igual ao número de caracteres na cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="29143-1704">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="29143-1705">Por exemplo, as instruções a seguir escrever 11 bytes no arquivo número 1:</span><span class="sxs-lookup"><span data-stu-id="29143-1705">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="29143-1706">A gravação em um arquivo usando a função `FilePut` requer o acesso `Write` da enumeração <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="29143-1706">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29143-1707">Este exemplo usa o `FilePut` função para gravar dados em um arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-1707">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="29143-1708">Cinco registros da estrutura `Person` são gravados no arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-1708">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="29143-1709"><paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</span><span class="sxs-lookup"><span data-stu-id="29143-1709"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="29143-1710">O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="29143-1710">File mode is invalid.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/writing-to-files.md"><span data-ttu-id="29143-1711">Gravando em arquivos no Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-1711">Writing to Files in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (int FileNumber, float Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(int32 FileNumber, float32 Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Single,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Integer, Value As Single, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FilePut : int * single * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FilePut (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Single" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="29143-1712">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-1712">Required.</span></span> <span data-ttu-id="29143-1713">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="29143-1713">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="29143-1714">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-1714">Required.</span></span> <span data-ttu-id="29143-1715">Nome de variável válido que contém dados gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="29143-1715">Valid variable name that contains data written to disk.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="29143-1716">Opcional.</span><span class="sxs-lookup"><span data-stu-id="29143-1716">Optional.</span></span> <span data-ttu-id="29143-1717">Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a gravação começa.</span><span class="sxs-lookup"><span data-stu-id="29143-1717">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span></span></param>
        <summary><span data-ttu-id="29143-1718">Grava dados de uma variável em um arquivo de disco.</span><span class="sxs-lookup"><span data-stu-id="29143-1718">Writes data from a variable to a disk file.</span></span> <span data-ttu-id="29143-1719">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FilePut" />.</span><span class="sxs-lookup"><span data-stu-id="29143-1719">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span></span> <span data-ttu-id="29143-1720">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="29143-1720">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29143-1721">`FilePut` só é válido em `Random` e `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="29143-1721">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="29143-1722">Dados gravados com `FilePut` costumam ser lidos a partir de um arquivo usando `FileGet`.</span><span class="sxs-lookup"><span data-stu-id="29143-1722">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="29143-1723">O primeiro registro ou byte em um arquivo está na posição 1, o segundo registro ou byte está na posição 2 e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="29143-1723">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="29143-1724">Se você omitir `RecordNumber`, o próximo registro ou byte após a última `FileGet` ou `FilePut` funcionar ou apontado pela última `Seek` função é escrita.</span><span class="sxs-lookup"><span data-stu-id="29143-1724">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="29143-1725">O argumento `StringIsFixedLength` controla se a função interpreta cadeias de caracteres como sendo de tamanho variável ou fixo.</span><span class="sxs-lookup"><span data-stu-id="29143-1725">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="29143-1726">`FilePut` não grava o descritor do tamanho quando o argumento é `True`.</span><span class="sxs-lookup"><span data-stu-id="29143-1726">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="29143-1727">Se você usar `StringIsFixedLength`  =  `True` com `FilePut`, você precisa fazer o mesmo com `FileGet`, e você precisa certificar-se de que a cadeia de caracteres é inicializada com o tamanho esperado.</span><span class="sxs-lookup"><span data-stu-id="29143-1727">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="29143-1728">Modo aleatório</span><span class="sxs-lookup"><span data-stu-id="29143-1728">Random Mode</span></span>  
 <span data-ttu-id="29143-1729">Para arquivos abertos no `Random` modo, as seguintes regras se aplicam:</span><span class="sxs-lookup"><span data-stu-id="29143-1729">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="29143-1730">Se o comprimento dos dados que estão sendo gravados for menor que o comprimento especificado na `RecordLength` cláusula do `FileOpen` função, `FilePut` grava registros subsequentes em limites de comprimento de registro.</span><span class="sxs-lookup"><span data-stu-id="29143-1730">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="29143-1731">O espaço entre o final de um registro e o início do próximo registro é preenchido com o conteúdo existente no buffer de arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-1731">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="29143-1732">Como a quantidade de dados de preenchimento não pode ser determinada com certeza, geralmente é uma boa ideia ter o comprimento do registro corresponde ao tamanho dos dados que estão sendo gravados.</span><span class="sxs-lookup"><span data-stu-id="29143-1732">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="29143-1733">Se o comprimento dos dados que estão sendo gravados for maior que o comprimento especificado na `RecordLength` cláusula do `FileOpen` função, uma exceção será gerada.</span><span class="sxs-lookup"><span data-stu-id="29143-1733">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="29143-1734">Caso a variável que está sendo gravada seja uma cadeia de caracteres, `FilePut` grava um descritor de dois bytes que contém o tamanho da cadeia de caracteres e, em seguida, grava os dados que vão para a variável.</span><span class="sxs-lookup"><span data-stu-id="29143-1734">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="29143-1735">Portanto, o comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser pelo menos dois bytes maior do que o comprimento real da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="29143-1735">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="29143-1736">Caso a variável que está sendo gravada seja um objeto que contém um tipo numérico, `FilePut` grava dois bytes que identificam o `VarType` do objeto e, em seguida, grava a variável.</span><span class="sxs-lookup"><span data-stu-id="29143-1736">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="29143-1737">Por exemplo, ao escrever um objeto que contém um número inteiro, `FilePut` grava seis bytes: dois bytes que identificam o objeto como `VarType(3)` (`Integer`) e quatro bytes que contêm os dados.</span><span class="sxs-lookup"><span data-stu-id="29143-1737">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="29143-1738">O comprimento do registro especificado pelo `RecordLength` parâmetro no `FileOpen` função deve ser pelo menos dois bytes maior do que o número real de bytes necessários para armazenar a variável.</span><span class="sxs-lookup"><span data-stu-id="29143-1738">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="29143-1739">Se a variável que está sendo gravada for um objeto que contém uma cadeia de caracteres `FilePut` grava um descritor de dois bytes que identifica o `VarType(8)` do objeto, um descritor de dois bytes indicando o comprimento da cadeia de caracteres e, em seguida, grava os dados de cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="29143-1739">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="29143-1740">O comprimento do registro especificado pelo `RecordLength` parâmetro no `FileOpen` função deve ser maior que o comprimento real da cadeia de caracteres de pelo menos quatro bytes.</span><span class="sxs-lookup"><span data-stu-id="29143-1740">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="29143-1741">Caso queira colocar uma cadeia de caracteres sem o descritor, você deve passar `True` para o parâmetro `StringIsFixedLength`, e a cadeia de caracteres lida deve ter o tamanho correto.</span><span class="sxs-lookup"><span data-stu-id="29143-1741">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="29143-1742">Caso a variável gravada seja uma matriz, você tem a opção de gravar ou não um descritor para o tamanho e as dimensões da matriz.</span><span class="sxs-lookup"><span data-stu-id="29143-1742">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="29143-1743">O descritor de arquivo para uma matriz dinâmica, mas não para uma matriz de tamanho fixo de gravação do Visual Basic 6.0 e versões anteriores.</span><span class="sxs-lookup"><span data-stu-id="29143-1743">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="29143-1744">O padrão do Visual Basic 2005 é não gravar o descritor.</span><span class="sxs-lookup"><span data-stu-id="29143-1744">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="29143-1745">Para gravar o descritor, defina as `ArrayIsDynamic` parâmetro para `True`.</span><span class="sxs-lookup"><span data-stu-id="29143-1745">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="29143-1746">Ao escrever a matriz, você precisa comparar a forma com que a matriz será lida; se ela for lida com o descritor, você precisará escrever o descritor.</span><span class="sxs-lookup"><span data-stu-id="29143-1746">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="29143-1747">O descritor especifica a classificação de matriz, o tamanho e os limites inferiores para cada classificação.</span><span class="sxs-lookup"><span data-stu-id="29143-1747">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="29143-1748">Seu comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="29143-1748">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="29143-1749">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessário para gravar os dados de matriz e o descritor de matriz.</span><span class="sxs-lookup"><span data-stu-id="29143-1749">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="29143-1750">Por exemplo, a seguinte declaração de matriz requer 218 bytes quando a matriz é gravada no disco.</span><span class="sxs-lookup"><span data-stu-id="29143-1750">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="29143-1751">Se a variável que está sendo gravada for qualquer outro tipo de variável (não uma cadeia de caracteres de comprimento variável ou um objeto), `FilePut` grava apenas os dados da variável.</span><span class="sxs-lookup"><span data-stu-id="29143-1751">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="29143-1752">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual ao comprimento dos dados que estão sendo gravados.</span><span class="sxs-lookup"><span data-stu-id="29143-1752">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="29143-1753">`FilePut` grava os elementos de estruturas como se cada um fosse escrito individualmente, exceto que não há nenhum preenchimento entre os elementos.</span><span class="sxs-lookup"><span data-stu-id="29143-1753">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="29143-1754">O `VBFixedString` atributo pode ser aplicado a campos de cadeia de caracteres em estruturas para indicar o tamanho da cadeia de caracteres quando gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="29143-1754">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="29143-1755">Os campos que têm mais bytes que o especificado pela cadeia de caracteres a `VBFixedString` atributo são truncados quando gravados em disco,</span><span class="sxs-lookup"><span data-stu-id="29143-1755">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="29143-1756">Modo binário</span><span class="sxs-lookup"><span data-stu-id="29143-1756">Binary Mode</span></span>  
 <span data-ttu-id="29143-1757">Para arquivos abertos no `Binary` modo, a maioria do `Random` modo regras se aplicam, com algumas exceções.</span><span class="sxs-lookup"><span data-stu-id="29143-1757">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="29143-1758">As seguintes regras para arquivos abertos no `Binary` modo são diferentes das regras para `Random` modo:</span><span class="sxs-lookup"><span data-stu-id="29143-1758">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="29143-1759">A cláusula `RecordLength` na função de `FileOpen` não está em vigor.</span><span class="sxs-lookup"><span data-stu-id="29143-1759">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="29143-1760">`FilePut` grava todas as variáveis em disco de maneira contígua, ou seja, sem preenchimento entre os registros.</span><span class="sxs-lookup"><span data-stu-id="29143-1760">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="29143-1761">Para qualquer matriz que não seja uma matriz em uma estrutura, `FilePut` grava apenas os dados.</span><span class="sxs-lookup"><span data-stu-id="29143-1761">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="29143-1762">Nenhum descritor é escrito.</span><span class="sxs-lookup"><span data-stu-id="29143-1762">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="29143-1763">`FilePut` Grava cadeias de caracteres de comprimento variável que não são elementos das estruturas sem o descritor de dois bytes de comprimento.</span><span class="sxs-lookup"><span data-stu-id="29143-1763">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="29143-1764">O número de bytes gravados é igual ao número de caracteres na cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="29143-1764">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="29143-1765">Por exemplo, as instruções a seguir escrever 11 bytes no arquivo número 1:</span><span class="sxs-lookup"><span data-stu-id="29143-1765">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="29143-1766">A gravação em um arquivo usando a função `FilePut` requer o acesso `Write` da enumeração <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="29143-1766">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29143-1767">Este exemplo usa o `FilePut` função para gravar dados em um arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-1767">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="29143-1768">Cinco registros da estrutura `Person` são gravados no arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-1768">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="29143-1769"><paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</span><span class="sxs-lookup"><span data-stu-id="29143-1769"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="29143-1770">O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="29143-1770">File mode is invalid.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/writing-to-files.md"><span data-ttu-id="29143-1771">Gravando em arquivos no Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-1771">Writing to Files in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (int FileNumber, ValueType Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(int32 FileNumber, class System.ValueType Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.ValueType,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Integer, Value As ValueType, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FilePut : int * ValueType * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FilePut (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.ValueType" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="29143-1772">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-1772">Required.</span></span> <span data-ttu-id="29143-1773">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="29143-1773">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="29143-1774">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-1774">Required.</span></span> <span data-ttu-id="29143-1775">Nome de variável válido que contém dados gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="29143-1775">Valid variable name that contains data written to disk.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="29143-1776">Opcional.</span><span class="sxs-lookup"><span data-stu-id="29143-1776">Optional.</span></span> <span data-ttu-id="29143-1777">Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a gravação começa.</span><span class="sxs-lookup"><span data-stu-id="29143-1777">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span></span></param>
        <summary><span data-ttu-id="29143-1778">Grava dados de uma variável em um arquivo de disco.</span><span class="sxs-lookup"><span data-stu-id="29143-1778">Writes data from a variable to a disk file.</span></span> <span data-ttu-id="29143-1779">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FilePut" />.</span><span class="sxs-lookup"><span data-stu-id="29143-1779">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span></span> <span data-ttu-id="29143-1780">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="29143-1780">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29143-1781">`FilePut` só é válido em `Random` e `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="29143-1781">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="29143-1782">Dados gravados com `FilePut` costumam ser lidos a partir de um arquivo usando `FileGet`.</span><span class="sxs-lookup"><span data-stu-id="29143-1782">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="29143-1783">O primeiro registro ou byte em um arquivo está na posição 1, o segundo registro ou byte está na posição 2 e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="29143-1783">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="29143-1784">Se você omitir `RecordNumber`, o próximo registro ou byte após a última `FileGet` ou `FilePut` funcionar ou apontado pela última `Seek` função é escrita.</span><span class="sxs-lookup"><span data-stu-id="29143-1784">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="29143-1785">O argumento `StringIsFixedLength` controla se a função interpreta cadeias de caracteres como sendo de tamanho variável ou fixo.</span><span class="sxs-lookup"><span data-stu-id="29143-1785">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="29143-1786">`FilePut` não grava o descritor do tamanho quando o argumento é `True`.</span><span class="sxs-lookup"><span data-stu-id="29143-1786">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="29143-1787">Se você usar `StringIsFixedLength`  =  `True` com `FilePut`, você precisa fazer o mesmo com `FileGet`, e você precisa certificar-se de que a cadeia de caracteres é inicializada com o tamanho esperado.</span><span class="sxs-lookup"><span data-stu-id="29143-1787">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="29143-1788">Modo aleatório</span><span class="sxs-lookup"><span data-stu-id="29143-1788">Random Mode</span></span>  
 <span data-ttu-id="29143-1789">Para arquivos abertos no `Random` modo, as seguintes regras se aplicam:</span><span class="sxs-lookup"><span data-stu-id="29143-1789">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="29143-1790">Se o comprimento dos dados que estão sendo gravados for menor que o comprimento especificado na`RecordLength` cláusula do `FileOpen` função, `FilePut` grava registros subsequentes em limites de comprimento de registro.</span><span class="sxs-lookup"><span data-stu-id="29143-1790">If the length of the data being written is less than the length specified in the`RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="29143-1791">O espaço entre o final de um registro e o início do próximo registro é preenchido com o conteúdo existente no buffer de arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-1791">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="29143-1792">Como a quantidade de dados de preenchimento não pode ser determinada com certeza, geralmente é uma boa ideia ter o comprimento do registro corresponde ao tamanho dos dados que estão sendo gravados.</span><span class="sxs-lookup"><span data-stu-id="29143-1792">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="29143-1793">Se o comprimento dos dados que estão sendo gravados for maior que o comprimento especificado na `RecordLength` cláusula do `FileOpen` função, uma exceção será gerada.</span><span class="sxs-lookup"><span data-stu-id="29143-1793">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="29143-1794">Caso a variável que está sendo gravada seja uma cadeia de caracteres, `FilePut` grava um descritor de dois bytes que contém o tamanho da cadeia de caracteres e, em seguida, grava os dados que vão para a variável.</span><span class="sxs-lookup"><span data-stu-id="29143-1794">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="29143-1795">Portanto, o comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser pelo menos dois bytes maior do que o comprimento real da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="29143-1795">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="29143-1796">Caso a variável que está sendo gravada seja um objeto que contém um tipo numérico, `FilePut` grava dois bytes que identificam o `VarType` do objeto e, em seguida, grava a variável.</span><span class="sxs-lookup"><span data-stu-id="29143-1796">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="29143-1797">Por exemplo, ao escrever um objeto que contém um número inteiro, `FilePut` grava seis bytes: dois bytes que identificam o objeto como `VarType(3)` (`Integer`) e quatro bytes que contêm os dados.</span><span class="sxs-lookup"><span data-stu-id="29143-1797">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="29143-1798">O comprimento do registro especificado pelo `RecordLength` parâmetro no `FileOpen` função deve ser pelo menos dois bytes maior do que o número real de bytes necessários para armazenar a variável.</span><span class="sxs-lookup"><span data-stu-id="29143-1798">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="29143-1799">Se a variável que está sendo gravada for um objeto que contém uma cadeia de caracteres `FilePut` grava um descritor de dois bytes que identifica o `VarType(8)` do objeto, um descritor de dois bytes indicando o comprimento da cadeia de caracteres e, em seguida, grava os dados de cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="29143-1799">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="29143-1800">O comprimento do registro especificado pelo `RecordLength` parâmetro no `FileOpen` função deve ser maior que o comprimento real da cadeia de caracteres de pelo menos quatro bytes.</span><span class="sxs-lookup"><span data-stu-id="29143-1800">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="29143-1801">Caso queira colocar uma cadeia de caracteres sem o descritor, você deve passar `True` para o parâmetro `StringIsFixedLength`, e a cadeia de caracteres lida deve ter o tamanho correto.</span><span class="sxs-lookup"><span data-stu-id="29143-1801">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="29143-1802">Caso a variável gravada seja uma matriz, você tem a opção de gravar ou não um descritor para o tamanho e as dimensões da matriz.</span><span class="sxs-lookup"><span data-stu-id="29143-1802">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="29143-1803">O descritor de arquivo para uma matriz dinâmica, mas não para uma matriz de tamanho fixo de gravação do Visual Basic 6.0 e versões anteriores.</span><span class="sxs-lookup"><span data-stu-id="29143-1803">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="29143-1804">O padrão do Visual Basic 2005 é não gravar o descritor.</span><span class="sxs-lookup"><span data-stu-id="29143-1804">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="29143-1805">Para gravar o descritor, defina as `ArrayIsDynamic` parâmetro para `True`.</span><span class="sxs-lookup"><span data-stu-id="29143-1805">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="29143-1806">Ao escrever a matriz, você precisa comparar a forma com que a matriz será lida; se ela for lida com o descritor, você precisará escrever o descritor.</span><span class="sxs-lookup"><span data-stu-id="29143-1806">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="29143-1807">O descritor especifica a classificação de matriz, o tamanho e os limites inferiores para cada classificação.</span><span class="sxs-lookup"><span data-stu-id="29143-1807">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="29143-1808">Seu comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="29143-1808">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="29143-1809">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessário para gravar os dados de matriz e o descritor de matriz.</span><span class="sxs-lookup"><span data-stu-id="29143-1809">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="29143-1810">Por exemplo, a seguinte declaração de matriz requer 218 bytes quando a matriz é gravada no disco.</span><span class="sxs-lookup"><span data-stu-id="29143-1810">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="29143-1811">Se a variável que está sendo gravada for qualquer outro tipo de variável (não uma cadeia de caracteres de comprimento variável ou um objeto), `FilePut` grava apenas os dados da variável.</span><span class="sxs-lookup"><span data-stu-id="29143-1811">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="29143-1812">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual ao comprimento dos dados que estão sendo gravados.</span><span class="sxs-lookup"><span data-stu-id="29143-1812">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="29143-1813">`FilePut` grava os elementos de estruturas como se cada um fosse escrito individualmente, exceto que não há nenhum preenchimento entre os elementos.</span><span class="sxs-lookup"><span data-stu-id="29143-1813">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="29143-1814">O `VBFixedString` atributo pode ser aplicado a campos de cadeia de caracteres em estruturas para indicar o tamanho da cadeia de caracteres quando gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="29143-1814">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="29143-1815">Os campos que têm mais bytes que o especificado pela cadeia de caracteres a `VBFixedString` atributo são truncados quando gravados em disco,</span><span class="sxs-lookup"><span data-stu-id="29143-1815">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="29143-1816">Modo binário</span><span class="sxs-lookup"><span data-stu-id="29143-1816">Binary Mode</span></span>  
 <span data-ttu-id="29143-1817">Para arquivos abertos no `Binary` modo, a maioria do `Random` modo regras se aplicam, com algumas exceções.</span><span class="sxs-lookup"><span data-stu-id="29143-1817">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="29143-1818">As seguintes regras para arquivos abertos no `Binary` modo são diferentes das regras para `Random` modo:</span><span class="sxs-lookup"><span data-stu-id="29143-1818">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="29143-1819">A cláusula `RecordLength` na função de `FileOpen` não está em vigor.</span><span class="sxs-lookup"><span data-stu-id="29143-1819">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="29143-1820">`FilePut` grava todas as variáveis em disco de maneira contígua, ou seja, sem preenchimento entre os registros.</span><span class="sxs-lookup"><span data-stu-id="29143-1820">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="29143-1821">Para qualquer matriz que não seja uma matriz em uma estrutura, `FilePut` grava apenas os dados.</span><span class="sxs-lookup"><span data-stu-id="29143-1821">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="29143-1822">Nenhum descritor é escrito.</span><span class="sxs-lookup"><span data-stu-id="29143-1822">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="29143-1823">`FilePut` Grava cadeias de caracteres de comprimento variável que não são elementos das estruturas sem o descritor de dois bytes de comprimento.</span><span class="sxs-lookup"><span data-stu-id="29143-1823">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="29143-1824">O número de bytes gravados é igual ao número de caracteres na cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="29143-1824">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="29143-1825">Por exemplo, as instruções a seguir escrever 11 bytes no arquivo número 1:</span><span class="sxs-lookup"><span data-stu-id="29143-1825">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="29143-1826">A gravação em um arquivo usando a função `FilePut` requer o acesso `Write` da enumeração <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="29143-1826">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29143-1827">Este exemplo usa o `FilePut` função para gravar dados em um arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-1827">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="29143-1828">Cinco registros da estrutura `Person` são gravados no arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-1828">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="29143-1829"><paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</span><span class="sxs-lookup"><span data-stu-id="29143-1829"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="29143-1830">O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="29143-1830">File mode is invalid.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/writing-to-files.md"><span data-ttu-id="29143-1831">Gravando em arquivos no Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-1831">Writing to Files in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (object FileNumber, object Value, object RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(object FileNumber, object Value, object RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Object, Value As Object, Optional RecordNumber As Object = -1)" />
      <MemberSignature Language="F#" Value="static member FilePut : obj * obj * obj -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FilePut (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("This member has been deprecated. Please use FilePutObject to write Object types, or coerce FileNumber and RecordNumber to Integer for writing non-Object types. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("Use FilePutObject to write Object types, or coerce FileNumber and RecordNumber to Integer for writing non-Object types")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Object" />
        <Parameter Name="Value" Type="System.Object" />
        <Parameter Name="RecordNumber" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="29143-1832">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-1832">Required.</span></span> <span data-ttu-id="29143-1833">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="29143-1833">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="29143-1834">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-1834">Required.</span></span> <span data-ttu-id="29143-1835">Nome de variável válido que contém dados gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="29143-1835">Valid variable name that contains data written to disk.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="29143-1836">Opcional.</span><span class="sxs-lookup"><span data-stu-id="29143-1836">Optional.</span></span> <span data-ttu-id="29143-1837">Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a gravação começa.</span><span class="sxs-lookup"><span data-stu-id="29143-1837">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span></span></param>
        <summary><span data-ttu-id="29143-1838">Grava dados de uma variável em um arquivo de disco.</span><span class="sxs-lookup"><span data-stu-id="29143-1838">Writes data from a variable to a disk file.</span></span> <span data-ttu-id="29143-1839">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FilePut" />.</span><span class="sxs-lookup"><span data-stu-id="29143-1839">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span></span> <span data-ttu-id="29143-1840">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="29143-1840">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29143-1841">`FilePut` só é válido em `Random` e `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="29143-1841">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="29143-1842">Dados gravados com `FilePut` costumam ser lidos a partir de um arquivo usando `FileGet`.</span><span class="sxs-lookup"><span data-stu-id="29143-1842">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="29143-1843">O primeiro registro ou byte em um arquivo está na posição 1, o segundo registro ou byte está na posição 2 e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="29143-1843">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="29143-1844">Se você omitir `RecordNumber`, o próximo registro ou byte após a última `FileGet` ou `FilePut` funcionar ou apontado pela última `Seek` função é escrita.</span><span class="sxs-lookup"><span data-stu-id="29143-1844">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="29143-1845">O argumento `StringIsFixedLength` controla se a função interpreta cadeias de caracteres como sendo de tamanho variável ou fixo.</span><span class="sxs-lookup"><span data-stu-id="29143-1845">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="29143-1846">`FilePut` não grava o descritor do tamanho quando o argumento é `True`.</span><span class="sxs-lookup"><span data-stu-id="29143-1846">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="29143-1847">Se você usar `StringIsFixedLength`  =  `True` com `FilePut`, você precisa fazer o mesmo com `FileGet`, e você precisa certificar-se de que a cadeia de caracteres é inicializada com o tamanho esperado.</span><span class="sxs-lookup"><span data-stu-id="29143-1847">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="29143-1848">Modo aleatório</span><span class="sxs-lookup"><span data-stu-id="29143-1848">Random Mode</span></span>  
 <span data-ttu-id="29143-1849">Para arquivos abertos no `Random` modo, as seguintes regras se aplicam:</span><span class="sxs-lookup"><span data-stu-id="29143-1849">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="29143-1850">Se o comprimento dos dados que estão sendo gravados for menor que o comprimento especificado na `RecordLength` cláusula do `FileOpen` função, `FilePut` grava registros subsequentes em limites de comprimento de registro.</span><span class="sxs-lookup"><span data-stu-id="29143-1850">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="29143-1851">O espaço entre o final de um registro e o início do próximo registro é preenchido com o conteúdo existente no buffer de arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-1851">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="29143-1852">Como a quantidade de dados de preenchimento não pode ser determinada com certeza, geralmente é uma boa ideia ter o comprimento do registro corresponde ao tamanho dos dados que estão sendo gravados.</span><span class="sxs-lookup"><span data-stu-id="29143-1852">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="29143-1853">Se o comprimento dos dados que estão sendo gravados for maior que o comprimento especificado na `RecordLength` cláusula do `FileOpen` função, uma exceção será gerada.</span><span class="sxs-lookup"><span data-stu-id="29143-1853">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="29143-1854">Caso a variável que está sendo gravada seja uma cadeia de caracteres, `FilePut` grava um descritor de dois bytes que contém o tamanho da cadeia de caracteres e, em seguida, grava os dados que vão para a variável.</span><span class="sxs-lookup"><span data-stu-id="29143-1854">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="29143-1855">Portanto, o comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser pelo menos dois bytes maior do que o comprimento real da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="29143-1855">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="29143-1856">Caso a variável que está sendo gravada seja um objeto que contém um tipo numérico, `FilePut` grava dois bytes que identificam o `VarType` do objeto e, em seguida, grava a variável.</span><span class="sxs-lookup"><span data-stu-id="29143-1856">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="29143-1857">Por exemplo, ao escrever um objeto que contém um número inteiro, `FilePut` grava seis bytes: dois bytes que identificam o objeto como `VarType(3)` (`Integer`) e quatro bytes que contêm os dados.</span><span class="sxs-lookup"><span data-stu-id="29143-1857">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="29143-1858">O comprimento do registro especificado pelo `RecordLength` parâmetro no `FileOpen` função deve ser pelo menos dois bytes maior do que o número real de bytes necessários para armazenar a variável.</span><span class="sxs-lookup"><span data-stu-id="29143-1858">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="29143-1859">Se a variável que está sendo gravada for um objeto que contém uma cadeia de caracteres `FilePut` grava um descritor de dois bytes que identifica o `VarType(8)` do objeto, um descritor de dois bytes indicando o comprimento da cadeia de caracteres e, em seguida, grava os dados de cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="29143-1859">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="29143-1860">O comprimento do registro especificado pelo `RecordLength` parâmetro no `FileOpen` função deve ser maior que o comprimento real da cadeia de caracteres de pelo menos quatro bytes.</span><span class="sxs-lookup"><span data-stu-id="29143-1860">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="29143-1861">Caso queira colocar uma cadeia de caracteres sem o descritor, você deve passar `True` para o parâmetro `StringIsFixedLength`, e a cadeia de caracteres lida deve ter o tamanho correto.</span><span class="sxs-lookup"><span data-stu-id="29143-1861">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="29143-1862">Caso a variável gravada seja uma matriz, você tem a opção de gravar ou não um descritor para o tamanho e as dimensões da matriz.</span><span class="sxs-lookup"><span data-stu-id="29143-1862">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="29143-1863">O descritor de arquivo para uma matriz dinâmica, mas não para uma matriz de tamanho fixo de gravação do Visual Basic 6.0 e versões anteriores.</span><span class="sxs-lookup"><span data-stu-id="29143-1863">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="29143-1864">O padrão do Visual Basic 2005 é não gravar o descritor.</span><span class="sxs-lookup"><span data-stu-id="29143-1864">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="29143-1865">Para gravar o descritor, defina as `ArrayIsDynamic` parâmetro para `True`.</span><span class="sxs-lookup"><span data-stu-id="29143-1865">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="29143-1866">Ao escrever a matriz, você precisa comparar a forma com que a matriz será lida; se ela for lida com o descritor, você precisará escrever o descritor.</span><span class="sxs-lookup"><span data-stu-id="29143-1866">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="29143-1867">O descritor especifica a classificação de matriz, o tamanho e os limites inferiores para cada classificação.</span><span class="sxs-lookup"><span data-stu-id="29143-1867">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="29143-1868">Seu comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="29143-1868">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="29143-1869">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessário para gravar os dados de matriz e o descritor de matriz.</span><span class="sxs-lookup"><span data-stu-id="29143-1869">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="29143-1870">Por exemplo, a seguinte declaração de matriz requer 218 bytes quando a matriz é gravada no disco.</span><span class="sxs-lookup"><span data-stu-id="29143-1870">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="29143-1871">Se a variável que está sendo gravada for qualquer outro tipo de variável (não uma cadeia de caracteres de comprimento variável ou um objeto), `FilePut` grava apenas os dados da variável.</span><span class="sxs-lookup"><span data-stu-id="29143-1871">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="29143-1872">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual ao comprimento dos dados que estão sendo gravados.</span><span class="sxs-lookup"><span data-stu-id="29143-1872">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="29143-1873">`FilePut` grava os elementos de estruturas como se cada um fosse escrito individualmente, exceto que não há nenhum preenchimento entre os elementos.</span><span class="sxs-lookup"><span data-stu-id="29143-1873">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="29143-1874">O `VBFixedString` atributo pode ser aplicado a campos de cadeia de caracteres em estruturas para indicar o tamanho da cadeia de caracteres quando gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="29143-1874">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="29143-1875">Os campos que têm mais bytes que o especificado pela cadeia de caracteres a `VBFixedString` atributo são truncados quando gravados em disco,</span><span class="sxs-lookup"><span data-stu-id="29143-1875">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="29143-1876">Modo binário</span><span class="sxs-lookup"><span data-stu-id="29143-1876">Binary Mode</span></span>  
 <span data-ttu-id="29143-1877">Para arquivos abertos no `Binary` modo, a maioria do `Random` modo regras se aplicam, com algumas exceções.</span><span class="sxs-lookup"><span data-stu-id="29143-1877">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="29143-1878">As seguintes regras para arquivos abertos no `Binary` modo são diferentes das regras para `Random` modo:</span><span class="sxs-lookup"><span data-stu-id="29143-1878">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="29143-1879">A cláusula `RecordLength` na função de `FileOpen` não está em vigor.</span><span class="sxs-lookup"><span data-stu-id="29143-1879">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="29143-1880">`FilePut` grava todas as variáveis em disco de maneira contígua, ou seja, sem preenchimento entre os registros.</span><span class="sxs-lookup"><span data-stu-id="29143-1880">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="29143-1881">Para qualquer matriz que não seja uma matriz em uma estrutura, `FilePut` grava apenas os dados.</span><span class="sxs-lookup"><span data-stu-id="29143-1881">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="29143-1882">Nenhum descritor é escrito.</span><span class="sxs-lookup"><span data-stu-id="29143-1882">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="29143-1883">`FilePut` Grava cadeias de caracteres de comprimento variável que não são elementos das estruturas sem o descritor de dois bytes de comprimento.</span><span class="sxs-lookup"><span data-stu-id="29143-1883">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="29143-1884">O número de bytes gravados é igual ao número de caracteres na cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="29143-1884">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="29143-1885">Por exemplo, as instruções a seguir escrever 11 bytes no arquivo número 1:</span><span class="sxs-lookup"><span data-stu-id="29143-1885">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="29143-1886">A gravação em um arquivo usando a função `FilePut` requer o acesso `Write` da enumeração <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="29143-1886">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29143-1887">Este exemplo usa o `FilePut` função para gravar dados em um arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-1887">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="29143-1888">Cinco registros da estrutura `Person` são gravados no arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-1888">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="29143-1889"><paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</span><span class="sxs-lookup"><span data-stu-id="29143-1889"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="29143-1890">O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="29143-1890">File mode is invalid.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/writing-to-files.md"><span data-ttu-id="29143-1891">Gravando em arquivos no Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-1891">Writing to Files in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (int FileNumber, string Value, long RecordNumber = -1, bool StringIsFixedLength = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(int32 FileNumber, string Value, int64 RecordNumber, bool StringIsFixedLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.String,System.Int64,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Integer, Value As String, Optional RecordNumber As Long = -1, Optional StringIsFixedLength As Boolean = false)" />
      <MemberSignature Language="F#" Value="static member FilePut : int * string * int64 * bool -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FilePut (FileNumber, Value, RecordNumber, StringIsFixedLength)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.String" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
        <Parameter Name="StringIsFixedLength" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="29143-1892">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-1892">Required.</span></span> <span data-ttu-id="29143-1893">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="29143-1893">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="29143-1894">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-1894">Required.</span></span> <span data-ttu-id="29143-1895">Nome de variável válido que contém dados gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="29143-1895">Valid variable name that contains data written to disk.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="29143-1896">Opcional.</span><span class="sxs-lookup"><span data-stu-id="29143-1896">Optional.</span></span> <span data-ttu-id="29143-1897">Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a gravação começa.</span><span class="sxs-lookup"><span data-stu-id="29143-1897">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span></span></param>
        <param name="StringIsFixedLength"><span data-ttu-id="29143-1898">Opcional.</span><span class="sxs-lookup"><span data-stu-id="29143-1898">Optional.</span></span> <span data-ttu-id="29143-1899">Aplica-se somente ao gravar uma cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="29143-1899">Applies only when writing a string.</span></span> <span data-ttu-id="29143-1900">Especifica se um descritor de comprimento de cadeia de caracteres de dois bytes da cadeia de caracteres deve ou não ser gravado no arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-1900">Specifies whether to write a two-byte string length descriptor for the string to the file.</span></span> <span data-ttu-id="29143-1901">O padrão é <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="29143-1901">The default is <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="29143-1902">Grava dados de uma variável em um arquivo de disco.</span><span class="sxs-lookup"><span data-stu-id="29143-1902">Writes data from a variable to a disk file.</span></span> <span data-ttu-id="29143-1903">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FilePut" />.</span><span class="sxs-lookup"><span data-stu-id="29143-1903">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span></span> <span data-ttu-id="29143-1904">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="29143-1904">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29143-1905">`FilePut` só é válido em `Random` e `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="29143-1905">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="29143-1906">Dados gravados com `FilePut` costumam ser lidos a partir de um arquivo usando `FileGet`.</span><span class="sxs-lookup"><span data-stu-id="29143-1906">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="29143-1907">O primeiro registro ou byte em um arquivo está na posição 1, o segundo registro ou byte está na posição 2 e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="29143-1907">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="29143-1908">Se você omitir `RecordNumber`, o próximo registro ou byte após a última `FileGet` ou `FilePut` funcionar ou apontado pela última `Seek` função é escrita.</span><span class="sxs-lookup"><span data-stu-id="29143-1908">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="29143-1909">O argumento `StringIsFixedLength` controla se a função interpreta cadeias de caracteres como sendo de tamanho variável ou fixo.</span><span class="sxs-lookup"><span data-stu-id="29143-1909">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="29143-1910">`FilePut` não grava o descritor do tamanho quando o argumento é `True`.</span><span class="sxs-lookup"><span data-stu-id="29143-1910">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="29143-1911">Se você usar `StringIsFixedLength`  =  `True` com `FilePut`, você precisa fazer o mesmo com `FileGet`, e você precisa certificar-se de que a cadeia de caracteres é inicializada com o tamanho esperado.</span><span class="sxs-lookup"><span data-stu-id="29143-1911">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="29143-1912">Modo aleatório</span><span class="sxs-lookup"><span data-stu-id="29143-1912">Random Mode</span></span>  
 <span data-ttu-id="29143-1913">Para arquivos abertos no `Random` modo, as seguintes regras se aplicam:</span><span class="sxs-lookup"><span data-stu-id="29143-1913">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="29143-1914">Se o comprimento dos dados que estão sendo gravados for menor que o comprimento especificado na `RecordLength` cláusula do `FileOpen` função, `FilePut` grava registros subsequentes em limites de comprimento de registro.</span><span class="sxs-lookup"><span data-stu-id="29143-1914">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="29143-1915">O espaço entre o final de um registro e o início do próximo registro é preenchido com o conteúdo existente no buffer de arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-1915">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="29143-1916">Como a quantidade de dados de preenchimento não pode ser determinada com certeza, geralmente é uma boa ideia ter o comprimento do registro corresponde ao tamanho dos dados que estão sendo gravados.</span><span class="sxs-lookup"><span data-stu-id="29143-1916">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="29143-1917">Se o comprimento dos dados que estão sendo gravados for maior que o comprimento especificado na `RecordLength` cláusula do `FileOpen` função, uma exceção será gerada.</span><span class="sxs-lookup"><span data-stu-id="29143-1917">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="29143-1918">Caso a variável que está sendo gravada seja uma cadeia de caracteres, `FilePut` grava um descritor de dois bytes que contém o tamanho da cadeia de caracteres e, em seguida, grava os dados que vão para a variável.</span><span class="sxs-lookup"><span data-stu-id="29143-1918">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="29143-1919">Portanto, o comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser pelo menos dois bytes maior do que o comprimento real da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="29143-1919">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="29143-1920">Caso a variável que está sendo gravada seja um objeto que contém um tipo numérico, `FilePut` grava dois bytes que identificam o `VarType` do objeto e, em seguida, grava a variável.</span><span class="sxs-lookup"><span data-stu-id="29143-1920">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="29143-1921">Por exemplo, ao escrever um objeto que contém um número inteiro, `FilePut` grava seis bytes: dois bytes que identificam o objeto como `VarType(3)` (`Integer`) e quatro bytes que contêm os dados.</span><span class="sxs-lookup"><span data-stu-id="29143-1921">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="29143-1922">O comprimento do registro especificado pelo `RecordLength` parâmetro no `FileOpen` função deve ser pelo menos dois bytes maior do que o número real de bytes necessários para armazenar a variável.</span><span class="sxs-lookup"><span data-stu-id="29143-1922">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="29143-1923">Se a variável que está sendo gravada for um objeto que contém uma cadeia de caracteres `FilePut` grava um descritor de dois bytes que identifica o `VarType(8)` do objeto, um descritor de dois bytes indicando o comprimento da cadeia de caracteres e, em seguida, grava os dados de cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="29143-1923">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="29143-1924">O comprimento do registro especificado pelo `RecordLength` parâmetro no `FileOpen` função deve ser maior que o comprimento real da cadeia de caracteres de pelo menos quatro bytes.</span><span class="sxs-lookup"><span data-stu-id="29143-1924">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="29143-1925">Caso queira colocar uma cadeia de caracteres sem o descritor, você deve passar `True` para o parâmetro `StringIsFixedLength`, e a cadeia de caracteres lida deve ter o tamanho correto.</span><span class="sxs-lookup"><span data-stu-id="29143-1925">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="29143-1926">Caso a variável gravada seja uma matriz, você tem a opção de gravar ou não um descritor para o tamanho e as dimensões da matriz.</span><span class="sxs-lookup"><span data-stu-id="29143-1926">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="29143-1927">O descritor de arquivo para uma matriz dinâmica, mas não para uma matriz de tamanho fixo de gravação do Visual Basic 6.0 e versões anteriores.</span><span class="sxs-lookup"><span data-stu-id="29143-1927">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="29143-1928">O padrão do Visual Basic 2005 é não gravar o descritor.</span><span class="sxs-lookup"><span data-stu-id="29143-1928">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="29143-1929">Para gravar o descritor, defina as `ArrayIsDynamic` parâmetro para `True`.</span><span class="sxs-lookup"><span data-stu-id="29143-1929">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="29143-1930">Ao escrever a matriz, você precisa comparar a forma com que a matriz será lida; se ela for lida com o descritor, você precisará escrever o descritor.</span><span class="sxs-lookup"><span data-stu-id="29143-1930">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="29143-1931">O descritor especifica a classificação de matriz, o tamanho e os limites inferiores para cada classificação.</span><span class="sxs-lookup"><span data-stu-id="29143-1931">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="29143-1932">Seu comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="29143-1932">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="29143-1933">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessário para gravar os dados de matriz e o descritor de matriz.</span><span class="sxs-lookup"><span data-stu-id="29143-1933">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="29143-1934">Por exemplo, a seguinte declaração de matriz requer 218 bytes quando a matriz é gravada no disco.</span><span class="sxs-lookup"><span data-stu-id="29143-1934">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="29143-1935">Se a variável que está sendo gravada for qualquer outro tipo de variável (não uma cadeia de caracteres de comprimento variável ou um objeto), `FilePut` grava apenas os dados da variável.</span><span class="sxs-lookup"><span data-stu-id="29143-1935">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="29143-1936">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual ao comprimento dos dados que estão sendo gravados.</span><span class="sxs-lookup"><span data-stu-id="29143-1936">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="29143-1937">`FilePut` grava os elementos de estruturas como se cada um fosse escrito individualmente, exceto que não há nenhum preenchimento entre os elementos.</span><span class="sxs-lookup"><span data-stu-id="29143-1937">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="29143-1938">O `VBFixedString` atributo pode ser aplicado a campos de cadeia de caracteres em estruturas para indicar o tamanho da cadeia de caracteres quando gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="29143-1938">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="29143-1939">Os campos que têm mais bytes que o especificado pela cadeia de caracteres a `VBFixedString` atributo são truncados quando gravados em disco,</span><span class="sxs-lookup"><span data-stu-id="29143-1939">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="29143-1940">Modo binário</span><span class="sxs-lookup"><span data-stu-id="29143-1940">Binary Mode</span></span>  
 <span data-ttu-id="29143-1941">Para arquivos abertos no `Binary` modo, a maioria do `Random` modo regras se aplicam, com algumas exceções.</span><span class="sxs-lookup"><span data-stu-id="29143-1941">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="29143-1942">As seguintes regras para arquivos abertos no `Binary` modo são diferentes das regras para `Random` modo:</span><span class="sxs-lookup"><span data-stu-id="29143-1942">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="29143-1943">A cláusula `RecordLength` na função de `FileOpen` não está em vigor.</span><span class="sxs-lookup"><span data-stu-id="29143-1943">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="29143-1944">`FilePut` grava todas as variáveis em disco de maneira contígua, ou seja, sem preenchimento entre os registros.</span><span class="sxs-lookup"><span data-stu-id="29143-1944">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="29143-1945">Para qualquer matriz que não seja uma matriz em uma estrutura, `FilePut` grava apenas os dados.</span><span class="sxs-lookup"><span data-stu-id="29143-1945">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="29143-1946">Nenhum descritor é escrito.</span><span class="sxs-lookup"><span data-stu-id="29143-1946">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="29143-1947">`FilePut` Grava cadeias de caracteres de comprimento variável que não são elementos das estruturas sem o descritor de dois bytes de comprimento.</span><span class="sxs-lookup"><span data-stu-id="29143-1947">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="29143-1948">O número de bytes gravados é igual ao número de caracteres na cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="29143-1948">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="29143-1949">Por exemplo, as instruções a seguir escrever 11 bytes no arquivo número 1:</span><span class="sxs-lookup"><span data-stu-id="29143-1949">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="29143-1950">A gravação em um arquivo usando a função `FilePut` requer o acesso `Write` da enumeração <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="29143-1950">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29143-1951">Este exemplo usa o `FilePut` função para gravar dados em um arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-1951">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="29143-1952">Cinco registros da estrutura `Person` são gravados no arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-1952">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="29143-1953"><paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</span><span class="sxs-lookup"><span data-stu-id="29143-1953"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="29143-1954">O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="29143-1954">File mode is invalid.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/writing-to-files.md"><span data-ttu-id="29143-1955">Gravando em arquivos no Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-1955">Writing to Files in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (int FileNumber, Array Value, long RecordNumber = -1, bool ArrayIsDynamic = false, bool StringIsFixedLength = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(int32 FileNumber, class System.Array Value, int64 RecordNumber, bool ArrayIsDynamic, bool StringIsFixedLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Array,System.Int64,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Integer, Value As Array, Optional RecordNumber As Long = -1, Optional ArrayIsDynamic As Boolean = false, Optional StringIsFixedLength As Boolean = false)" />
      <MemberSignature Language="F#" Value="static member FilePut : int * Array * int64 * bool * bool -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FilePut (FileNumber, Value, RecordNumber, ArrayIsDynamic, StringIsFixedLength)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Array" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
        <Parameter Name="ArrayIsDynamic" Type="System.Boolean" />
        <Parameter Name="StringIsFixedLength" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="29143-1956">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-1956">Required.</span></span> <span data-ttu-id="29143-1957">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="29143-1957">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="29143-1958">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-1958">Required.</span></span> <span data-ttu-id="29143-1959">Nome de variável válido que contém dados gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="29143-1959">Valid variable name that contains data written to disk.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="29143-1960">Opcional.</span><span class="sxs-lookup"><span data-stu-id="29143-1960">Optional.</span></span> <span data-ttu-id="29143-1961">Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a gravação começa.</span><span class="sxs-lookup"><span data-stu-id="29143-1961">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span></span></param>
        <param name="ArrayIsDynamic"><span data-ttu-id="29143-1962">Opcional.</span><span class="sxs-lookup"><span data-stu-id="29143-1962">Optional.</span></span> <span data-ttu-id="29143-1963">Aplica-se somente ao gravar uma matriz.</span><span class="sxs-lookup"><span data-stu-id="29143-1963">Applies only when writing an array.</span></span> <span data-ttu-id="29143-1964">Especifica se a matriz deve ou não ser tratada como dinâmica e se um descritor de matriz deve ou não ser gravado na cadeia de caracteres que descreve o comprimento.</span><span class="sxs-lookup"><span data-stu-id="29143-1964">Specifies whether the array is to be treated as dynamic, and whether to write an array descriptor for the string that describes the length.</span></span></param>
        <param name="StringIsFixedLength"><span data-ttu-id="29143-1965">Opcional.</span><span class="sxs-lookup"><span data-stu-id="29143-1965">Optional.</span></span> <span data-ttu-id="29143-1966">Aplica-se somente ao gravar uma cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="29143-1966">Applies only when writing a string.</span></span> <span data-ttu-id="29143-1967">Especifica se um descritor de comprimento de cadeia de caracteres de dois bytes da cadeia de caracteres deve ou não ser gravado no arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-1967">Specifies whether to write a two-byte string length descriptor for the string to the file.</span></span> <span data-ttu-id="29143-1968">O padrão é <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="29143-1968">The default is <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="29143-1969">Grava dados de uma variável em um arquivo de disco.</span><span class="sxs-lookup"><span data-stu-id="29143-1969">Writes data from a variable to a disk file.</span></span> <span data-ttu-id="29143-1970">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FilePut" />.</span><span class="sxs-lookup"><span data-stu-id="29143-1970">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span></span> <span data-ttu-id="29143-1971">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="29143-1971">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29143-1972">`FilePut` só é válido em `Random` e `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="29143-1972">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="29143-1973">Dados gravados com `FilePut` costumam ser lidos a partir de um arquivo usando `FileGet`.</span><span class="sxs-lookup"><span data-stu-id="29143-1973">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="29143-1974">O primeiro registro ou byte em um arquivo está na posição 1, o segundo registro ou byte está na posição 2 e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="29143-1974">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="29143-1975">Se você omitir `RecordNumber`, o próximo registro ou byte após a última `FileGet` ou `FilePut` funcionar ou apontado pela última `Seek` função é escrita.</span><span class="sxs-lookup"><span data-stu-id="29143-1975">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="29143-1976">O argumento `StringIsFixedLength` controla se a função interpreta cadeias de caracteres como sendo de tamanho variável ou fixo.</span><span class="sxs-lookup"><span data-stu-id="29143-1976">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="29143-1977">`FilePut` não grava o descritor do tamanho quando o argumento é `True`.</span><span class="sxs-lookup"><span data-stu-id="29143-1977">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="29143-1978">Se você usar `StringIsFixedLength`  =  `True` com `FilePut`, você precisa fazer o mesmo com `FileGet`, e você precisa certificar-se de que a cadeia de caracteres é inicializada com o tamanho esperado.</span><span class="sxs-lookup"><span data-stu-id="29143-1978">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="29143-1979">Modo aleatório</span><span class="sxs-lookup"><span data-stu-id="29143-1979">Random Mode</span></span>  
 <span data-ttu-id="29143-1980">Para arquivos abertos no `Random` modo, as seguintes regras se aplicam:</span><span class="sxs-lookup"><span data-stu-id="29143-1980">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="29143-1981">Se o comprimento dos dados que estão sendo gravados for menor que o comprimento especificado na `RecordLength` cláusula do `FileOpen` função, `FilePut` grava registros subsequentes em limites de comprimento de registro.</span><span class="sxs-lookup"><span data-stu-id="29143-1981">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="29143-1982">O espaço entre o final de um registro e o início do próximo registro é preenchido com o conteúdo existente no buffer de arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-1982">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="29143-1983">Como a quantidade de dados de preenchimento não pode ser determinada com certeza, geralmente é uma boa ideia ter o comprimento do registro corresponde ao tamanho dos dados que estão sendo gravados.</span><span class="sxs-lookup"><span data-stu-id="29143-1983">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="29143-1984">Se o comprimento dos dados que estão sendo gravados for maior que o comprimento especificado na `RecordLength` cláusula do `FileOpen` função, uma exceção será gerada.</span><span class="sxs-lookup"><span data-stu-id="29143-1984">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="29143-1985">Caso a variável que está sendo gravada seja uma cadeia de caracteres, `FilePut` grava um descritor de dois bytes que contém o tamanho da cadeia de caracteres e, em seguida, grava os dados que vão para a variável.</span><span class="sxs-lookup"><span data-stu-id="29143-1985">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="29143-1986">Portanto, o comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser pelo menos dois bytes maior do que o comprimento real da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="29143-1986">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="29143-1987">Caso a variável que está sendo gravada seja um objeto que contém um tipo numérico, `FilePut` grava dois bytes que identificam o `VarType` do objeto e, em seguida, grava a variável.</span><span class="sxs-lookup"><span data-stu-id="29143-1987">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="29143-1988">Por exemplo, ao escrever um objeto que contém um número inteiro, `FilePut` grava seis bytes: dois bytes que identificam o objeto como `VarType(3)` (`Integer`) e quatro bytes que contêm os dados.</span><span class="sxs-lookup"><span data-stu-id="29143-1988">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="29143-1989">O comprimento do registro especificado pelo `RecordLength` parâmetro no `FileOpen` função deve ser pelo menos dois bytes maior do que o número real de bytes necessários para armazenar a variável.</span><span class="sxs-lookup"><span data-stu-id="29143-1989">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="29143-1990">Se a variável que está sendo gravada for um objeto que contém uma cadeia de caracteres `FilePut` grava um descritor de dois bytes que identifica o `VarType(8)` do objeto, um descritor de dois bytes indicando o comprimento da cadeia de caracteres e, em seguida, grava os dados de cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="29143-1990">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="29143-1991">O comprimento do registro especificado pelo `RecordLength` parâmetro no `FileOpen` função deve ser maior que o comprimento real da cadeia de caracteres de pelo menos quatro bytes.</span><span class="sxs-lookup"><span data-stu-id="29143-1991">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="29143-1992">Caso queira colocar uma cadeia de caracteres sem o descritor, você deve passar `True` para o parâmetro `StringIsFixedLength`, e a cadeia de caracteres lida deve ter o tamanho correto.</span><span class="sxs-lookup"><span data-stu-id="29143-1992">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="29143-1993">Caso a variável gravada seja uma matriz, você tem a opção de gravar ou não um descritor para o tamanho e as dimensões da matriz.</span><span class="sxs-lookup"><span data-stu-id="29143-1993">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="29143-1994">O descritor de arquivo para uma matriz dinâmica, mas não para uma matriz de tamanho fixo de gravação do Visual Basic 6.0 e versões anteriores.</span><span class="sxs-lookup"><span data-stu-id="29143-1994">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="29143-1995">O padrão do Visual Basic 2005 é não gravar o descritor.</span><span class="sxs-lookup"><span data-stu-id="29143-1995">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="29143-1996">Para gravar o descritor, defina as `ArrayIsDynamic` parâmetro para `True`.</span><span class="sxs-lookup"><span data-stu-id="29143-1996">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="29143-1997">Ao escrever a matriz, você precisa comparar a forma com que a matriz será lida; se ela for lida com o descritor, você precisará escrever o descritor.</span><span class="sxs-lookup"><span data-stu-id="29143-1997">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="29143-1998">O descritor especifica a classificação de matriz, o tamanho e os limites inferiores para cada classificação.</span><span class="sxs-lookup"><span data-stu-id="29143-1998">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="29143-1999">Seu comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="29143-1999">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="29143-2000">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessário para gravar os dados de matriz e o descritor de matriz.</span><span class="sxs-lookup"><span data-stu-id="29143-2000">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="29143-2001">Por exemplo, a seguinte declaração de matriz requer 218 bytes quando a matriz é gravada no disco.</span><span class="sxs-lookup"><span data-stu-id="29143-2001">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="29143-2002">Se a variável que está sendo gravada for qualquer outro tipo de variável (não uma cadeia de caracteres de comprimento variável ou um objeto), `FilePut` grava apenas os dados da variável.</span><span class="sxs-lookup"><span data-stu-id="29143-2002">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="29143-2003">O comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual ao comprimento dos dados que estão sendo gravados.</span><span class="sxs-lookup"><span data-stu-id="29143-2003">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="29143-2004">`FilePut` grava os elementos de estruturas como se cada um fosse escrito individualmente, exceto que não há nenhum preenchimento entre os elementos.</span><span class="sxs-lookup"><span data-stu-id="29143-2004">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="29143-2005">O `VBFixedString` atributo pode ser aplicado a campos de cadeia de caracteres em estruturas para indicar o tamanho da cadeia de caracteres quando gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="29143-2005">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="29143-2006">Os campos que têm mais bytes que o especificado pela cadeia de caracteres a `VBFixedString` atributo são truncados quando gravados em disco,</span><span class="sxs-lookup"><span data-stu-id="29143-2006">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="29143-2007">Modo binário</span><span class="sxs-lookup"><span data-stu-id="29143-2007">Binary Mode</span></span>  
 <span data-ttu-id="29143-2008">Para arquivos abertos no `Binary` modo, a maioria do `Random` modo regras se aplicam, com algumas exceções.</span><span class="sxs-lookup"><span data-stu-id="29143-2008">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="29143-2009">As seguintes regras para arquivos abertos no `Binary` modo são diferentes das regras para `Random` modo:</span><span class="sxs-lookup"><span data-stu-id="29143-2009">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="29143-2010">A cláusula `RecordLength` na função de `FileOpen` não está em vigor.</span><span class="sxs-lookup"><span data-stu-id="29143-2010">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="29143-2011">`FilePut` grava todas as variáveis em disco de maneira contígua, ou seja, sem preenchimento entre os registros.</span><span class="sxs-lookup"><span data-stu-id="29143-2011">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="29143-2012">Para qualquer matriz que não seja uma matriz em uma estrutura, `FilePut` grava apenas os dados.</span><span class="sxs-lookup"><span data-stu-id="29143-2012">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="29143-2013">Nenhum descritor é escrito.</span><span class="sxs-lookup"><span data-stu-id="29143-2013">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="29143-2014">`FilePut` Grava cadeias de caracteres de comprimento variável que não são elementos das estruturas sem o descritor de dois bytes de comprimento.</span><span class="sxs-lookup"><span data-stu-id="29143-2014">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="29143-2015">O número de bytes gravados é igual ao número de caracteres na cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="29143-2015">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="29143-2016">Por exemplo, as instruções a seguir escrever 11 bytes no arquivo número 1:</span><span class="sxs-lookup"><span data-stu-id="29143-2016">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="29143-2017">A gravação em um arquivo usando a função `FilePut` requer o acesso `Write` da enumeração <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="29143-2017">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29143-2018">Este exemplo usa o `FilePut` função para gravar dados em um arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-2018">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="29143-2019">Cinco registros da estrutura `Person` são gravados no arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-2019">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="29143-2020"><paramref name="RecordNumber" /> &lt; 1 e não é igual a -1.</span><span class="sxs-lookup"><span data-stu-id="29143-2020"><paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="29143-2021">O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="29143-2021">File mode is invalid.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/writing-to-files.md"><span data-ttu-id="29143-2022">Gravando em arquivos no Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-2022">Writing to Files in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FilePutObject">
      <MemberSignature Language="C#" Value="public static void FilePutObject (int FileNumber, object Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePutObject(int32 FileNumber, object Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePutObject(System.Int32,System.Object,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePutObject (FileNumber As Integer, Value As Object, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FilePutObject : int * obj * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FilePutObject (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Object" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="29143-2023">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-2023">Required.</span></span> <span data-ttu-id="29143-2024">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="29143-2024">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="29143-2025">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-2025">Required.</span></span> <span data-ttu-id="29143-2026">Nome de variável válido que contém dados gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="29143-2026">Valid variable name that contains data written to disk.</span></span></param>
        <param name="RecordNumber"><span data-ttu-id="29143-2027">Opcional.</span><span class="sxs-lookup"><span data-stu-id="29143-2027">Optional.</span></span> <span data-ttu-id="29143-2028">Registre o número (arquivos de modo <see langword="Random" />) ou número de byte (arquivos de modo <see langword="Binary" />) no qual a gravação começa.</span><span class="sxs-lookup"><span data-stu-id="29143-2028">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span></span></param>
        <summary><span data-ttu-id="29143-2029">Grava dados de uma variável em um arquivo de disco.</span><span class="sxs-lookup"><span data-stu-id="29143-2029">Writes data from a variable to a disk file.</span></span>  <span data-ttu-id="29143-2030">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FilePutObject" />.</span><span class="sxs-lookup"><span data-stu-id="29143-2030">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePutObject" />.</span></span> <span data-ttu-id="29143-2031">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="29143-2031">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29143-2032">O `FilePutObject` função é usada em vez de `FilePut` para evitar ambiguidades em tempo de compilação se tipo `Object` é passado em vez de outro tipo, como `Integer`, `Long`, `Short`e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="29143-2032">The `FilePutObject` function is used instead of `FilePut` to avoid ambiguities at compile time if type `Object` is passed instead of another type, such as `Integer`, `Long`, `Short`, and so forth.</span></span>  
  
 <span data-ttu-id="29143-2033">`FilePutObject` gravações e leituras de descritores que descrevem o objeto.</span><span class="sxs-lookup"><span data-stu-id="29143-2033">`FilePutObject` writes and reads descriptors that describe the object.</span></span> <span data-ttu-id="29143-2034">Se você pretende gravar o `Variant` tipo, `FilePutObject` é necessária.</span><span class="sxs-lookup"><span data-stu-id="29143-2034">If you intend to write out the `Variant` type, `FilePutObject` is required.</span></span> <span data-ttu-id="29143-2035">Em caso de dúvida, se você estiver usando um objeto para o segundo parâmetro, é recomendável que você sempre use `FilePutObject` e `FileGetObject`.</span><span class="sxs-lookup"><span data-stu-id="29143-2035">When in doubt, if you are using an object for the second parameter, we recommend that you always use `FilePutObject` and `FileGetObject`.</span></span>  
  
 <span data-ttu-id="29143-2036">`FilePutObject` só é válido em `Random` e `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="29143-2036">`FilePutObject` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="29143-2037">Dados gravados com `FilePutObject` costumam ser lidos a partir de um arquivo usando `FileGetObject`.</span><span class="sxs-lookup"><span data-stu-id="29143-2037">Data written with `FilePutObject` is usually read from a file by using `FileGetObject`.</span></span>  
  
 <span data-ttu-id="29143-2038">O primeiro registro ou byte em um arquivo está na posição 1, o segundo registro ou byte está na posição 2 e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="29143-2038">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="29143-2039">Se você omitir `RecordNumber`, `FilePutObject` grava o próximo registro ou byte após a última `FileGetObject` ou `FilePutObject` função (ou o registro ou byte apontado pela última `Seek` função).</span><span class="sxs-lookup"><span data-stu-id="29143-2039">If you omit `RecordNumber`, `FilePutObject` writes the next record or byte after the last `FileGetObject` or `FilePutObject` function (or the record or byte pointed to by the last `Seek` function).</span></span>  
  
 <span data-ttu-id="29143-2040">O argumento `StringIsFixedLength` controla se a função interpreta cadeias de caracteres como sendo de tamanho variável ou fixo.</span><span class="sxs-lookup"><span data-stu-id="29143-2040">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="29143-2041">`FilePutObject` não grava o descritor do tamanho quando o argumento é `True`.</span><span class="sxs-lookup"><span data-stu-id="29143-2041">`FilePutObject` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="29143-2042">Se você usar `StringIsFixedLength`  =  `True` com `FilePutObject`, você precisa fazer o mesmo com `FileGetObject`, e você deve também Certifique-se de que a cadeia de caracteres é inicializada com o tamanho esperado.</span><span class="sxs-lookup"><span data-stu-id="29143-2042">If you use `StringIsFixedLength` = `True` with `FilePutObject`, you have to do the same with `FileGetObject`, and you must also make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="29143-2043">Modo aleatório</span><span class="sxs-lookup"><span data-stu-id="29143-2043">Random Mode</span></span>  
 <span data-ttu-id="29143-2044">Para arquivos abertos no `Random` modo, as seguintes regras se aplicam:</span><span class="sxs-lookup"><span data-stu-id="29143-2044">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="29143-2045">Se o comprimento dos dados que estão sendo gravados for menor que o comprimento especificado na `RecordLength` cláusula do `FileOpen` função, `FilePutObject` grava registros subsequentes em limites de comprimento de registro.</span><span class="sxs-lookup"><span data-stu-id="29143-2045">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePutObject` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="29143-2046">O espaço entre o final de um registro e o início do próximo registro é preenchido com o conteúdo existente no buffer de arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-2046">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="29143-2047">Como a quantidade de dados de preenchimento não pode ser determinada precisamente, geralmente é uma boa ideia ter o comprimento do registro corresponde ao tamanho dos dados que estão sendo gravados.</span><span class="sxs-lookup"><span data-stu-id="29143-2047">Because the amount of padding data cannot be precisely determined, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="29143-2048">Se o comprimento dos dados que estão sendo gravados for maior que o comprimento especificado na `RecordLength` cláusula do `FileOpen` função, uma exceção será lançada.</span><span class="sxs-lookup"><span data-stu-id="29143-2048">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception is thrown.</span></span>  
  
-   <span data-ttu-id="29143-2049">Caso a variável que está sendo gravada seja um objeto que contém um tipo numérico, `FilePutObject` grava dois bytes que identificam o `VarType` do objeto e, em seguida, grava a variável.</span><span class="sxs-lookup"><span data-stu-id="29143-2049">If the variable being written is an object that contains a numeric type, `FilePutObject` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="29143-2050">Por exemplo, ao escrever um objeto que contém um número inteiro, `FilePutObject` grava seis bytes: dois bytes que identificam o objeto como `VarType(3)` (`Integer`) e quatro bytes que contêm os dados.</span><span class="sxs-lookup"><span data-stu-id="29143-2050">For example, when writing an object that contains an integer, `FilePutObject` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="29143-2051">O comprimento do registro especificado pelo `RecordLength` parâmetro no `FileOpen` função deve ser pelo menos dois bytes maior do que o número real de bytes necessários para armazenar a variável.</span><span class="sxs-lookup"><span data-stu-id="29143-2051">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="29143-2052">Se a variável que está sendo gravada for um objeto que contém uma cadeia de caracteres `FilePutObject` grava um descritor de dois bytes que identifica o `VarType(8)` do objeto, um descritor de dois bytes indicando o comprimento da cadeia de caracteres e, em seguida, grava os dados de cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="29143-2052">If the variable being written is an object that contains a string, `FilePutObject` writes a two-byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="29143-2053">O comprimento do registro especificado pelo `RecordLength` parâmetro no `FileOpen` função deve ser maior que o comprimento real da cadeia de caracteres de pelo menos quatro bytes.</span><span class="sxs-lookup"><span data-stu-id="29143-2053">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="29143-2054">Caso queira colocar uma cadeia de caracteres sem o descritor, você deve passar `True` para o parâmetro `StringIsFixedLength`, e a cadeia de caracteres lida deve ter o tamanho correto.</span><span class="sxs-lookup"><span data-stu-id="29143-2054">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="29143-2055">Se a variável que está sendo gravada seja uma matriz e, em seguida, o comprimento do registro especificado pelo `RecordLength` cláusula no `FileOpen` função deve ser maior que ou igual à soma de todos os bytes necessário para gravar os dados de matriz e o descritor de matriz.</span><span class="sxs-lookup"><span data-stu-id="29143-2055">If the variable being written is an array, then the record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="29143-2056">O descritor especifica a classificação de matriz, o tamanho e os limites inferiores para cada classificação.</span><span class="sxs-lookup"><span data-stu-id="29143-2056">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="29143-2057">Seu comprimento é igual a 2 mais 8 vezes o número de dimensões: (2 + 8 \* NumberOfDimensions).</span><span class="sxs-lookup"><span data-stu-id="29143-2057">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="29143-2058">Modo binário</span><span class="sxs-lookup"><span data-stu-id="29143-2058">Binary Mode</span></span>  
 <span data-ttu-id="29143-2059">Para arquivos abertos no `Binary` modo, todos os o `Random` aplicarem regras de modo, exceto:</span><span class="sxs-lookup"><span data-stu-id="29143-2059">For files opened in `Binary` mode, all the `Random` mode rules apply, except:</span></span>  
  
-   <span data-ttu-id="29143-2060">A cláusula `RecordLength` na função de `FileOpen` não está em vigor.</span><span class="sxs-lookup"><span data-stu-id="29143-2060">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="29143-2061">`FilePutObject` grava todas as variáveis em disco de maneira contígua, ou seja, sem preenchimento entre os registros.</span><span class="sxs-lookup"><span data-stu-id="29143-2061">`FilePutObject` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29143-2062">Este exemplo usa o `FilePutObject` função para gravar uma cadeia de caracteres em um arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-2062">This example uses the `FilePutObject` function to write a string to a file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#54](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#54)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/writing-to-files.md"><span data-ttu-id="29143-2063">Gravando em arquivos no Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-2063">Writing to Files in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FileWidth">
      <MemberSignature Language="C#" Value="public static void FileWidth (int FileNumber, int RecordWidth);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileWidth(int32 FileNumber, int32 RecordWidth) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileWidth(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileWidth (FileNumber As Integer, RecordWidth As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void FileWidth(int FileNumber, int RecordWidth);" />
      <MemberSignature Language="F#" Value="static member FileWidth : int * int -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileWidth (FileNumber, RecordWidth)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="RecordWidth" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="29143-2064">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-2064">Required.</span></span> <span data-ttu-id="29143-2065">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="29143-2065">Any valid file number.</span></span></param>
        <param name="RecordWidth"><span data-ttu-id="29143-2066">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-2066">Required.</span></span> <span data-ttu-id="29143-2067">Expressão numérica no intervalo de 0 a 255 (incluindo este número), que indica quantos caracteres são exibidos em uma linha antes de uma nova linha ser iniciada.</span><span class="sxs-lookup"><span data-stu-id="29143-2067">Numeric expression in the range 0-255, inclusive, which indicates how many characters appear on a line before a new line is started.</span></span> <span data-ttu-id="29143-2068">Se <paramref name="RecordWidth" /> for igual a 0, não haverá nenhum limite para o tamanho de uma linha.</span><span class="sxs-lookup"><span data-stu-id="29143-2068">If <paramref name="RecordWidth" /> equals 0, there is no limit to the length of a line.</span></span> <span data-ttu-id="29143-2069">O valor padrão para <paramref name="RecordWidth" /> é 0.</span><span class="sxs-lookup"><span data-stu-id="29143-2069">The default value for <paramref name="RecordWidth" /> is 0.</span></span></param>
        <summary><span data-ttu-id="29143-2070">Atribui uma largura de linha de saída a um arquivo aberto usando a função <see langword="FileOpen" />.</span><span class="sxs-lookup"><span data-stu-id="29143-2070">Assigns an output line width to a file opened by using the <see langword="FileOpen" /> function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="29143-2071">Este exemplo usa o `FileWidth` função para definir a largura da linha de saída para um arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-2071">This example uses the `FileWidth` function to set the output line width for a file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#10](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="29143-2072">O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="29143-2072">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="T:System.IO.IOException" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md"><span data-ttu-id="29143-2073">Access de arquivo com o Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-2073">File Access with Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FreeFile">
      <MemberSignature Language="C#" Value="public static int FreeFile ();" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 FreeFile() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FreeFile" />
      <MemberSignature Language="VB.NET" Value="Public Function FreeFile () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int FreeFile();" />
      <MemberSignature Language="F#" Value="static member FreeFile : unit -&gt; int" Usage="Microsoft.VisualBasic.FileSystem.FreeFile " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="29143-2074">Retorna um valor <see langword="Integer" /> que representa o próximo número de arquivo disponível para uso pela função <see langword="FileOpen" />.</span><span class="sxs-lookup"><span data-stu-id="29143-2074">Returns an <see langword="Integer" /> value that represents the next file number available for use by the <see langword="FileOpen" /> function.</span></span></summary>
        <returns><span data-ttu-id="29143-2075">Um valor inteiro que representa o próximo número de arquivo disponível para uso pela função <see langword="FileOpen" />.</span><span class="sxs-lookup"><span data-stu-id="29143-2075">An integer value that represents the next file number available for use by the <see langword="FileOpen" /> function.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29143-2076">Use `FreeFile` para fornecer um número de arquivo que já não está sendo usado.</span><span class="sxs-lookup"><span data-stu-id="29143-2076">Use `FreeFile` to supply a file number that is not already being used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29143-2077">Este exemplo usa o `FreeFile` função para retornar o próximo número de arquivos disponíveis.</span><span class="sxs-lookup"><span data-stu-id="29143-2077">This example uses the `FreeFile` function to return the next available file number.</span></span> <span data-ttu-id="29143-2078">Cinco arquivos são abertos para saída dentro do loop, e alguns dados de exemplo são gravados para cada um.</span><span class="sxs-lookup"><span data-stu-id="29143-2078">Five files are opened for output within the loop, and some sample data is written to each.</span></span>  
  
 [!code-vb[VbVbalrCatRef#55](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#55)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="29143-2079">Mais de 255 arquivos estão em uso.</span><span class="sxs-lookup"><span data-stu-id="29143-2079">More than 255 files are in use.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="T:System.IO.IOException" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/writing-to-files.md"><span data-ttu-id="29143-2080">Gravando em arquivos no Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-2080">Writing to Files in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetAttr">
      <MemberSignature Language="C#" Value="public static Microsoft.VisualBasic.FileAttribute GetAttr (string PathName);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype Microsoft.VisualBasic.FileAttribute GetAttr(string PathName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAttr (PathName As String) As FileAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::VisualBasic::FileAttribute GetAttr(System::String ^ PathName);" />
      <MemberSignature Language="F#" Value="static member GetAttr : string -&gt; Microsoft.VisualBasic.FileAttribute" Usage="Microsoft.VisualBasic.FileSystem.GetAttr PathName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FileAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="PathName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="PathName"><span data-ttu-id="29143-2081">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-2081">Required.</span></span> <span data-ttu-id="29143-2082">Uma expressão de cadeia de caracteres que especifica um nome de arquivo, diretório ou pasta.</span><span class="sxs-lookup"><span data-stu-id="29143-2082">A string expression that specifies a file, directory, or folder name.</span></span> <span data-ttu-id="29143-2083"><paramref name="PathName" /> pode incluir o diretório ou a pasta e a unidade.</span><span class="sxs-lookup"><span data-stu-id="29143-2083"><paramref name="PathName" /> can include the directory or folder, and the drive.</span></span></param>
        <summary><span data-ttu-id="29143-2084">Retorna um valor <see langword="FileAttribute" /> que representa os atributos de um arquivo, diretório ou pasta.</span><span class="sxs-lookup"><span data-stu-id="29143-2084">Returns a <see langword="FileAttribute" /> value that represents the attributes of a file, directory, or folder.</span></span> <span data-ttu-id="29143-2085">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="FileAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="29143-2085">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileAttribute" />.</span></span> <span data-ttu-id="29143-2086">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="29143-2086">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <returns><span data-ttu-id="29143-2087">O valor retornado por <see langword="GetAttr" /> é a soma dos seguintes valores de enumeração:</span><span class="sxs-lookup"><span data-stu-id="29143-2087">The value returned by <see langword="GetAttr" /> is the sum of the following enumeration values:</span></span> 
 <list type="table"><item><term> <span data-ttu-id="29143-2088">Valor</span><span class="sxs-lookup"><span data-stu-id="29143-2088">Value</span></span> 
 </term><description> <span data-ttu-id="29143-2089">Constante</span><span class="sxs-lookup"><span data-stu-id="29143-2089">Constant</span></span> 
 </description><description> <span data-ttu-id="29143-2090">Descrição</span><span class="sxs-lookup"><span data-stu-id="29143-2090">Description</span></span> 
 </description></item><item><term><see langword="Normal" /></term><description><see langword="vbNormal" /></description><description> <span data-ttu-id="29143-2091">Normal.</span><span class="sxs-lookup"><span data-stu-id="29143-2091">Normal.</span></span>  
  
 </description></item><item><term><see langword="ReadOnly" /></term><description><see langword="vbReadOnly" /></description><description> <span data-ttu-id="29143-2092">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="29143-2092">Read-only.</span></span>  
  
 </description></item><item><term><see langword="Hidden" /></term><description><see langword="vbHidden" /></description><description> <span data-ttu-id="29143-2093">Oculto.</span><span class="sxs-lookup"><span data-stu-id="29143-2093">Hidden.</span></span>  
  
 </description></item><item><term><see langword="System" /></term><description><see langword="vbSystem" /></description><description> <span data-ttu-id="29143-2094">Arquivo do sistema.</span><span class="sxs-lookup"><span data-stu-id="29143-2094">System file.</span></span>  
  
 </description></item><item><term><see langword="Directory" /></term><description><see langword="vbDirectory" /></description><description> <span data-ttu-id="29143-2095">Diretório ou pasta.</span><span class="sxs-lookup"><span data-stu-id="29143-2095">Directory or folder.</span></span>  
  
 </description></item><item><term><see langword="Archive" /></term><description><see langword="vbArchive" /></description><description> <span data-ttu-id="29143-2096">O arquivo foi alterado desde o último backup.</span><span class="sxs-lookup"><span data-stu-id="29143-2096">File has changed since last backup.</span></span>  
  
 </description></item><item><term><see langword="Alias" /></term><description><see langword="vbAlias" /></description><description> <span data-ttu-id="29143-2097">O arquivo tem um nome diferente.</span><span class="sxs-lookup"><span data-stu-id="29143-2097">File has a different name.</span></span>  
  
 </description></item></list><block subset="none" type="note"><para>  
 <span data-ttu-id="29143-2098">Essas enumerações são especificadas pela linguagem Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="29143-2098">These enumerations are specified by the Visual Basic language.</span></span> <span data-ttu-id="29143-2099">Os nomes podem ser usados em qualquer lugar no seu código em vez dos valores reais.</span><span class="sxs-lookup"><span data-stu-id="29143-2099">The names can be used anywhere in your code in place of the actual values.</span></span>  
  
</para></block></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29143-2100">Para determinar quais atributos estão definidos, use o `And` operador para executar uma comparação bit a bit do valor retornado pelo `GetAttr` função e o valor do atributo de arquivo individual desejado.</span><span class="sxs-lookup"><span data-stu-id="29143-2100">To determine which attributes are set, use the `And` operator to perform a bitwise comparison of the value returned by the `GetAttr` function and the value of the individual file attribute you want.</span></span> <span data-ttu-id="29143-2101">Se o resultado não for zero, esse atributo é definido para o arquivo nomeado.</span><span class="sxs-lookup"><span data-stu-id="29143-2101">If the result is not zero, that attribute is set for the named file.</span></span> <span data-ttu-id="29143-2102">Por exemplo, o valor de retorno dos seguintes `And` expressão for zero, se o `Archive` atributo não for definido:</span><span class="sxs-lookup"><span data-stu-id="29143-2102">For example, the return value of the following `And` expression is zero if the `Archive` attribute is not set:</span></span>  
  
```vb  
Result = GetAttr(FName) And vbArchive  
```  
  
 <span data-ttu-id="29143-2103">Um valor diferente de zero será retornado se o `Archive` atributo é definido.</span><span class="sxs-lookup"><span data-stu-id="29143-2103">A nonzero value is returned if the `Archive` attribute is set.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29143-2104">Este exemplo usa o `GetAttr` função para determinar os atributos de um arquivo e diretório ou pasta.</span><span class="sxs-lookup"><span data-stu-id="29143-2104">This example uses the `GetAttr` function to determine the attributes of a file and directory or folder.</span></span>  
  
 [!code-vb[VbVbalrCatRef#25](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#25)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="29143-2105"><paramref name="Pathname" /> é inválido ou contém caracteres curinga.</span><span class="sxs-lookup"><span data-stu-id="29143-2105"><paramref name="Pathname" /> is invalid or contains wildcards.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="29143-2106">O arquivo de destino não existe.</span><span class="sxs-lookup"><span data-stu-id="29143-2106">Target file does not exist.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileAttr(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SetAttr(System.String,Microsoft.VisualBasic.FileAttribute)" />
        <altmember cref="T:System.IO.IOException" />
        <altmember cref="T:System.IO.FileNotFoundException" />
        <altmember cref="T:Microsoft.VisualBasic.FileAttribute" />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/and-operator.md"><span data-ttu-id="29143-2107">Operador And (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="29143-2107">And Operator (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md"><span data-ttu-id="29143-2108">Access de arquivo com o Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-2108">File Access with Visual Basic</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Input">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="29143-2109">Lê dados de um arquivo sequencial aberto e atribui os dados a variáveis.</span><span class="sxs-lookup"><span data-stu-id="29143-2109">Reads data from an open sequential file and assigns the data to variables.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public static void Input (int FileNumber, ref bool Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Input(int32 FileNumber, bool&amp; Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Input (FileNumber As Integer, ByRef Value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Input(int FileNumber, bool % Value);" />
      <MemberSignature Language="F#" Value="static member Input : int *  -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Input (FileNumber, Value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Boolean" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="29143-2110">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-2110">Required.</span></span> <span data-ttu-id="29143-2111">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="29143-2111">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="29143-2112">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-2112">Required.</span></span> <span data-ttu-id="29143-2113">A variável que recebeu os valores lidos do arquivo não pode ser uma variável de matriz ou objeto.</span><span class="sxs-lookup"><span data-stu-id="29143-2113">Variable that is assigned the values read from the file - cannot be an array or object variable.</span></span></param>
        <summary><span data-ttu-id="29143-2114">Lê dados de um arquivo sequencial aberto e atribui os dados a variáveis.</span><span class="sxs-lookup"><span data-stu-id="29143-2114">Reads data from an open sequential file and assigns the data to variables.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29143-2115">O `Input` função é fornecida para compatibilidade com versões anteriores e pode afetar o desempenho.</span><span class="sxs-lookup"><span data-stu-id="29143-2115">The `Input` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="29143-2116">Para aplicativos não herdadas, o `My.Computer.FileSystem` objeto fornece um melhor desempenho.</span><span class="sxs-lookup"><span data-stu-id="29143-2116">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="29143-2117">Para obter mais informações, consulte [acesso a arquivos com o Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="29143-2117">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="29143-2118">Dados lidos com `Input` costumam ser gravados em um arquivo usando-se `Write`.</span><span class="sxs-lookup"><span data-stu-id="29143-2118">Data read with `Input` is usually written to a file by using `Write`.</span></span> <span data-ttu-id="29143-2119">Use essa função somente com arquivos abertos no `Input` ou `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="29143-2119">Use this function only with files opened in `Input` or `Binary` mode.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="29143-2120">Ao ler de arquivos, não tome decisões sobre o conteúdo do arquivo com base na extensão de nome de arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-2120">When reading from files, do not make decisions about the contents of the file based on the file name extension.</span></span> <span data-ttu-id="29143-2121">Por exemplo, um arquivo chamado Form1.vb não pode ser um arquivo fonte do Visual Basic 2005.</span><span class="sxs-lookup"><span data-stu-id="29143-2121">For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</span></span>  
  
 <span data-ttu-id="29143-2122">Quando lidos, dados numéricos ou cadeia de caracteres padrão são atribuídos a variáveis sem modificação.</span><span class="sxs-lookup"><span data-stu-id="29143-2122">When read, standard string or numeric data is assigned to variables without modification.</span></span> <span data-ttu-id="29143-2123">A tabela a seguir ilustra como outros dados de entrada são tratados.</span><span class="sxs-lookup"><span data-stu-id="29143-2123">The following table illustrates how other input data is treated.</span></span>  
  
|<span data-ttu-id="29143-2124">Dados</span><span class="sxs-lookup"><span data-stu-id="29143-2124">Data</span></span>|<span data-ttu-id="29143-2125">Valor atribuído à variável</span><span class="sxs-lookup"><span data-stu-id="29143-2125">Value assigned to variable</span></span>|  
|-|-|  
|<span data-ttu-id="29143-2126">Delimitador de vírgula ou linha em branco</span><span class="sxs-lookup"><span data-stu-id="29143-2126">Delimiting comma or blank line</span></span>|<span data-ttu-id="29143-2127">Vazio</span><span class="sxs-lookup"><span data-stu-id="29143-2127">Empty</span></span>|  
|<span data-ttu-id="29143-2128">NULL # #</span><span class="sxs-lookup"><span data-stu-id="29143-2128">#NULL#</span></span>|`DBNull`|  
|<span data-ttu-id="29143-2129"># TRUE ou FALSE de # #</span><span class="sxs-lookup"><span data-stu-id="29143-2129">#TRUE# or #FALSE#</span></span>|<span data-ttu-id="29143-2130">`True` ou `False`</span><span class="sxs-lookup"><span data-stu-id="29143-2130">`True` or `False`</span></span>|  
|#`yyyy-mm-dd hh:mm:ss`#|<span data-ttu-id="29143-2131">A data e/ou hora representada pela expressão</span><span class="sxs-lookup"><span data-stu-id="29143-2131">The date and/or time represented by the expression</span></span>|  
|<span data-ttu-id="29143-2132">#ERROR `errornumber`#</span><span class="sxs-lookup"><span data-stu-id="29143-2132">#ERROR `errornumber`#</span></span>|<span data-ttu-id="29143-2133">`errornumber` (a variável é um objeto marcado como um erro)</span><span class="sxs-lookup"><span data-stu-id="29143-2133">`errornumber` (variable is an object tagged as an error)</span></span>|  
  
 <span data-ttu-id="29143-2134">Caso você atinja o final do arquivo enquanto insere um item de dados, a entrada é interrompida e ocorre um erro.</span><span class="sxs-lookup"><span data-stu-id="29143-2134">If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="29143-2135">O `Input` função não está localizada.</span><span class="sxs-lookup"><span data-stu-id="29143-2135">The `Input` function is not localized.</span></span> <span data-ttu-id="29143-2136">Por exemplo, na versão em alemão, caso você insira 3,14159, ele retorna apenas 3, porque a vírgula é tratada como um separador variável, em vez de uma vírgula decimal.</span><span class="sxs-lookup"><span data-stu-id="29143-2136">For example, in the German version, if you input 3,14159, it returns only 3, because the comma is treated as a variable separator instead of as a decimal point.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="29143-2137">Leitura de um arquivo usando o `Input` função requer `Read` acessar do `FileIOPermissionAccess` enumeração.</span><span class="sxs-lookup"><span data-stu-id="29143-2137">Reading from a file by using the `Input` function requires `Read` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="29143-2138">Para obter mais informações, consulte <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="29143-2138">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29143-2139">Este exemplo usa o `Input` função para ler dados de um arquivo em duas variáveis.</span><span class="sxs-lookup"><span data-stu-id="29143-2139">This example uses the `Input` function to read data from a file into two variables.</span></span> <span data-ttu-id="29143-2140">Este exemplo supõe que `TestFile` é um arquivo que tem algumas linhas de dados gravados nele usando o `Write` funcionar, cada linha que contém uma cadeia de caracteres entre aspas e um número separado por uma vírgula, por exemplo: ("Olá", 234).</span><span class="sxs-lookup"><span data-stu-id="29143-2140">This example assumes that `TestFile` is a file that has some lines of data written to it using the `Write` function, each line containing a string in quotations and a number separated by a comma, for example: ("Hello", 234).</span></span>  
  
 [!code-vb[VbVbalrCatRef#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="29143-2141">O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="29143-2141">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files.md"><span data-ttu-id="29143-2142">Como gravar texto em arquivos no Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-2142">How to: Write Text to Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md"><span data-ttu-id="29143-2143">Access de arquivo com o Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-2143">File Access with Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files-with-a-streamwriter.md"><span data-ttu-id="29143-2144">Como: Gravar texto em um arquivo com um Streamwriter (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="29143-2144">How to: Write Text to a File with a Streamwriter (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public static void Input (int FileNumber, ref byte Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Input(int32 FileNumber, unsigned int8&amp; Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Byte@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Input (FileNumber As Integer, ByRef Value As Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Input(int FileNumber, System::Byte % Value);" />
      <MemberSignature Language="F#" Value="static member Input : int *  -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Input (FileNumber, Value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Byte" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="29143-2145">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-2145">Required.</span></span> <span data-ttu-id="29143-2146">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="29143-2146">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="29143-2147">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-2147">Required.</span></span> <span data-ttu-id="29143-2148">A variável que recebeu os valores lidos do arquivo não pode ser uma variável de matriz ou objeto.</span><span class="sxs-lookup"><span data-stu-id="29143-2148">Variable that is assigned the values read from the file - cannot be an array or object variable.</span></span></param>
        <summary><span data-ttu-id="29143-2149">Lê dados de um arquivo sequencial aberto e atribui os dados a variáveis.</span><span class="sxs-lookup"><span data-stu-id="29143-2149">Reads data from an open sequential file and assigns the data to variables.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29143-2150">O `Input` função é fornecida para compatibilidade com versões anteriores e pode afetar o desempenho.</span><span class="sxs-lookup"><span data-stu-id="29143-2150">The `Input` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="29143-2151">Para aplicativos não herdadas, o `My.Computer.FileSystem` objeto fornece um melhor desempenho.</span><span class="sxs-lookup"><span data-stu-id="29143-2151">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="29143-2152">Para obter mais informações, consulte [acesso a arquivos com o Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="29143-2152">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="29143-2153">Dados lidos com `Input` costumam ser gravados em um arquivo usando-se `Write`.</span><span class="sxs-lookup"><span data-stu-id="29143-2153">Data read with `Input` is usually written to a file by using `Write`.</span></span> <span data-ttu-id="29143-2154">Use essa função somente com arquivos abertos no `Input` ou `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="29143-2154">Use this function only with files opened in `Input` or `Binary` mode.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="29143-2155">Ao ler de arquivos, não tome decisões sobre o conteúdo do arquivo com base na extensão de nome de arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-2155">When reading from files, do not make decisions about the contents of the file based on the file name extension.</span></span> <span data-ttu-id="29143-2156">Por exemplo, um arquivo chamado Form1.vb não pode ser um arquivo fonte do Visual Basic 2005.</span><span class="sxs-lookup"><span data-stu-id="29143-2156">For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</span></span>  
  
 <span data-ttu-id="29143-2157">Quando lidos, dados numéricos ou cadeia de caracteres padrão são atribuídos a variáveis sem modificação.</span><span class="sxs-lookup"><span data-stu-id="29143-2157">When read, standard string or numeric data is assigned to variables without modification.</span></span> <span data-ttu-id="29143-2158">A tabela a seguir ilustra como outros dados de entrada são tratados.</span><span class="sxs-lookup"><span data-stu-id="29143-2158">The following table illustrates how other input data is treated.</span></span>  
  
|<span data-ttu-id="29143-2159">Dados</span><span class="sxs-lookup"><span data-stu-id="29143-2159">Data</span></span>|<span data-ttu-id="29143-2160">Valor atribuído à variável</span><span class="sxs-lookup"><span data-stu-id="29143-2160">Value assigned to variable</span></span>|  
|-|-|  
|<span data-ttu-id="29143-2161">Delimitador de vírgula ou linha em branco</span><span class="sxs-lookup"><span data-stu-id="29143-2161">Delimiting comma or blank line</span></span>|<span data-ttu-id="29143-2162">Vazio</span><span class="sxs-lookup"><span data-stu-id="29143-2162">Empty</span></span>|  
|<span data-ttu-id="29143-2163">NULL # #</span><span class="sxs-lookup"><span data-stu-id="29143-2163">#NULL#</span></span>|`DBNull`|  
|<span data-ttu-id="29143-2164"># TRUE ou FALSE de # #</span><span class="sxs-lookup"><span data-stu-id="29143-2164">#TRUE# or #FALSE#</span></span>|<span data-ttu-id="29143-2165">`True` ou `False`</span><span class="sxs-lookup"><span data-stu-id="29143-2165">`True` or `False`</span></span>|  
|#`yyyy-mm-dd hh:mm:ss`#|<span data-ttu-id="29143-2166">A data e/ou hora representada pela expressão</span><span class="sxs-lookup"><span data-stu-id="29143-2166">The date and/or time represented by the expression</span></span>|  
|<span data-ttu-id="29143-2167">#ERROR `errornumber`#</span><span class="sxs-lookup"><span data-stu-id="29143-2167">#ERROR `errornumber`#</span></span>|<span data-ttu-id="29143-2168">`errornumber` (a variável é um objeto marcado como um erro)</span><span class="sxs-lookup"><span data-stu-id="29143-2168">`errornumber` (variable is an object tagged as an error)</span></span>|  
  
 <span data-ttu-id="29143-2169">Caso você atinja o final do arquivo enquanto insere um item de dados, a entrada é interrompida e ocorre um erro.</span><span class="sxs-lookup"><span data-stu-id="29143-2169">If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="29143-2170">O `Input` função não está localizada.</span><span class="sxs-lookup"><span data-stu-id="29143-2170">The `Input` function is not localized.</span></span> <span data-ttu-id="29143-2171">Por exemplo, na versão em alemão, caso você insira 3,14159, ele retorna apenas 3, porque a vírgula é tratada como um separador variável, em vez de uma vírgula decimal.</span><span class="sxs-lookup"><span data-stu-id="29143-2171">For example, in the German version, if you input 3,14159, it returns only 3, because the comma is treated as a variable separator instead of as a decimal point.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="29143-2172">Leitura de um arquivo usando o `Input` função requer `Read` acessar do `FileIOPermissionAccess` enumeração.</span><span class="sxs-lookup"><span data-stu-id="29143-2172">Reading from a file by using the `Input` function requires `Read` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="29143-2173">Para obter mais informações, consulte <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="29143-2173">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29143-2174">Este exemplo usa o `Input` função para ler dados de um arquivo em duas variáveis.</span><span class="sxs-lookup"><span data-stu-id="29143-2174">This example uses the `Input` function to read data from a file into two variables.</span></span> <span data-ttu-id="29143-2175">Este exemplo supõe que `TestFile` é um arquivo que tem algumas linhas de dados gravados nele usando o `Write` funcionar, cada linha que contém uma cadeia de caracteres entre aspas e um número separado por uma vírgula, por exemplo: ("Olá", 234).</span><span class="sxs-lookup"><span data-stu-id="29143-2175">This example assumes that `TestFile` is a file that has some lines of data written to it using the `Write` function, each line containing a string in quotations and a number separated by a comma, for example: ("Hello", 234).</span></span>  
  
 [!code-vb[VbVbalrCatRef#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="29143-2176">O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="29143-2176">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files.md"><span data-ttu-id="29143-2177">Como gravar texto em arquivos no Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-2177">How to: Write Text to Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md"><span data-ttu-id="29143-2178">Access de arquivo com o Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-2178">File Access with Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files-with-a-streamwriter.md"><span data-ttu-id="29143-2179">Como: Gravar texto em um arquivo com um Streamwriter (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="29143-2179">How to: Write Text to a File with a Streamwriter (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public static void Input (int FileNumber, ref char Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Input(int32 FileNumber, char&amp; Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Char@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Input (FileNumber As Integer, ByRef Value As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Input(int FileNumber, char % Value);" />
      <MemberSignature Language="F#" Value="static member Input : int *  -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Input (FileNumber, Value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Char" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="29143-2180">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-2180">Required.</span></span> <span data-ttu-id="29143-2181">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="29143-2181">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="29143-2182">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-2182">Required.</span></span> <span data-ttu-id="29143-2183">A variável que recebeu os valores lidos do arquivo não pode ser uma variável de matriz ou objeto.</span><span class="sxs-lookup"><span data-stu-id="29143-2183">Variable that is assigned the values read from the file - cannot be an array or object variable.</span></span></param>
        <summary><span data-ttu-id="29143-2184">Lê dados de um arquivo sequencial aberto e atribui os dados a variáveis.</span><span class="sxs-lookup"><span data-stu-id="29143-2184">Reads data from an open sequential file and assigns the data to variables.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29143-2185">O `Input` função é fornecida para compatibilidade com versões anteriores e pode afetar o desempenho.</span><span class="sxs-lookup"><span data-stu-id="29143-2185">The `Input` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="29143-2186">Para aplicativos não herdadas, o `My.Computer.FileSystem` objeto fornece um melhor desempenho.</span><span class="sxs-lookup"><span data-stu-id="29143-2186">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="29143-2187">Para obter mais informações, consulte [acesso a arquivos com o Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="29143-2187">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="29143-2188">Dados lidos com `Input` costumam ser gravados em um arquivo usando-se `Write`.</span><span class="sxs-lookup"><span data-stu-id="29143-2188">Data read with `Input` is usually written to a file by using `Write`.</span></span> <span data-ttu-id="29143-2189">Use essa função somente com arquivos abertos no `Input` ou `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="29143-2189">Use this function only with files opened in `Input` or `Binary` mode.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="29143-2190">Ao ler de arquivos, não tome decisões sobre o conteúdo do arquivo com base na extensão de nome de arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-2190">When reading from files, do not make decisions about the contents of the file based on the file name extension.</span></span> <span data-ttu-id="29143-2191">Por exemplo, um arquivo chamado Form1.vb não pode ser um arquivo fonte do Visual Basic 2005.</span><span class="sxs-lookup"><span data-stu-id="29143-2191">For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</span></span>  
  
 <span data-ttu-id="29143-2192">Quando lidos, dados numéricos ou cadeia de caracteres padrão são atribuídos a variáveis sem modificação.</span><span class="sxs-lookup"><span data-stu-id="29143-2192">When read, standard string or numeric data is assigned to variables without modification.</span></span> <span data-ttu-id="29143-2193">A tabela a seguir ilustra como outros dados de entrada são tratados.</span><span class="sxs-lookup"><span data-stu-id="29143-2193">The following table illustrates how other input data is treated.</span></span>  
  
|<span data-ttu-id="29143-2194">Dados</span><span class="sxs-lookup"><span data-stu-id="29143-2194">Data</span></span>|<span data-ttu-id="29143-2195">Valor atribuído à variável</span><span class="sxs-lookup"><span data-stu-id="29143-2195">Value assigned to variable</span></span>|  
|-|-|  
|<span data-ttu-id="29143-2196">Delimitador de vírgula ou linha em branco</span><span class="sxs-lookup"><span data-stu-id="29143-2196">Delimiting comma or blank line</span></span>|<span data-ttu-id="29143-2197">Vazio</span><span class="sxs-lookup"><span data-stu-id="29143-2197">Empty</span></span>|  
|<span data-ttu-id="29143-2198">NULL # #</span><span class="sxs-lookup"><span data-stu-id="29143-2198">#NULL#</span></span>|`DBNull`|  
|<span data-ttu-id="29143-2199"># TRUE ou FALSE de # #</span><span class="sxs-lookup"><span data-stu-id="29143-2199">#TRUE# or #FALSE#</span></span>|<span data-ttu-id="29143-2200">`True` ou `False`</span><span class="sxs-lookup"><span data-stu-id="29143-2200">`True` or `False`</span></span>|  
|#`yyyy-mm-dd hh:mm:ss`#|<span data-ttu-id="29143-2201">A data e/ou hora representada pela expressão</span><span class="sxs-lookup"><span data-stu-id="29143-2201">The date and/or time represented by the expression</span></span>|  
|<span data-ttu-id="29143-2202">#ERROR `errornumber`#</span><span class="sxs-lookup"><span data-stu-id="29143-2202">#ERROR `errornumber`#</span></span>|<span data-ttu-id="29143-2203">`errornumber` (a variável é um objeto marcado como um erro)</span><span class="sxs-lookup"><span data-stu-id="29143-2203">`errornumber` (variable is an object tagged as an error)</span></span>|  
  
 <span data-ttu-id="29143-2204">Caso você atinja o final do arquivo enquanto insere um item de dados, a entrada é interrompida e ocorre um erro.</span><span class="sxs-lookup"><span data-stu-id="29143-2204">If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="29143-2205">O `Input` função não está localizada.</span><span class="sxs-lookup"><span data-stu-id="29143-2205">The `Input` function is not localized.</span></span> <span data-ttu-id="29143-2206">Por exemplo, na versão em alemão, caso você insira 3,14159, ele retorna apenas 3, porque a vírgula é tratada como um separador variável, em vez de uma vírgula decimal.</span><span class="sxs-lookup"><span data-stu-id="29143-2206">For example, in the German version, if you input 3,14159, it returns only 3, because the comma is treated as a variable separator instead of as a decimal point.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="29143-2207">Leitura de um arquivo usando o `Input` função requer `Read` acessar do `FileIOPermissionAccess` enumeração.</span><span class="sxs-lookup"><span data-stu-id="29143-2207">Reading from a file by using the `Input` function requires `Read` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="29143-2208">Para obter mais informações, consulte <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="29143-2208">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29143-2209">Este exemplo usa o `Input` função para ler dados de um arquivo em duas variáveis.</span><span class="sxs-lookup"><span data-stu-id="29143-2209">This example uses the `Input` function to read data from a file into two variables.</span></span> <span data-ttu-id="29143-2210">Este exemplo pressupõe que `TestFile` seja um arquivo tendo várias linhas de dados gravadas usando a função `Write`, cada linha contendo uma cadeia de caracteres entre aspas e um número separado por uma vírgula; por exemplo: ("Hello", 234).</span><span class="sxs-lookup"><span data-stu-id="29143-2210">This example assumes that `TestFile` is a file that has several lines of data written to it using the `Write` function, each line containing a string in quotations and a number separated by a comma, for example: ("Hello", 234).</span></span>  
  
 [!code-vb[VbVbalrCatRef#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="29143-2211">O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="29143-2211">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files.md"><span data-ttu-id="29143-2212">Como gravar texto em arquivos no Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-2212">How to: Write Text to Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md"><span data-ttu-id="29143-2213">Access de arquivo com o Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-2213">File Access with Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files-with-a-streamwriter.md"><span data-ttu-id="29143-2214">Como: Gravar texto em um arquivo com um Streamwriter (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="29143-2214">How to: Write Text to a File with a Streamwriter (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public static void Input (int FileNumber, ref DateTime Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Input(int32 FileNumber, valuetype System.DateTime&amp; Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.DateTime@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Input (FileNumber As Integer, ByRef Value As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Input(int FileNumber, DateTime % Value);" />
      <MemberSignature Language="F#" Value="static member Input : int *  -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Input (FileNumber, Value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.DateTime" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="29143-2215">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-2215">Required.</span></span> <span data-ttu-id="29143-2216">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="29143-2216">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="29143-2217">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-2217">Required.</span></span> <span data-ttu-id="29143-2218">A variável que recebeu os valores lidos do arquivo não pode ser uma variável de matriz ou objeto.</span><span class="sxs-lookup"><span data-stu-id="29143-2218">Variable that is assigned the values read from the file - cannot be an array or object variable.</span></span></param>
        <summary><span data-ttu-id="29143-2219">Lê dados de um arquivo sequencial aberto e atribui os dados a variáveis.</span><span class="sxs-lookup"><span data-stu-id="29143-2219">Reads data from an open sequential file and assigns the data to variables.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29143-2220">O `Input` função é fornecida para compatibilidade com versões anteriores e pode afetar o desempenho.</span><span class="sxs-lookup"><span data-stu-id="29143-2220">The `Input` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="29143-2221">Para aplicativos não herdadas, o `My.Computer.FileSystem` objeto fornece um melhor desempenho.</span><span class="sxs-lookup"><span data-stu-id="29143-2221">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="29143-2222">Para obter mais informações, consulte [acesso a arquivos com o Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="29143-2222">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="29143-2223">Dados lidos com `Input` costumam ser gravados em um arquivo usando-se `Write`.</span><span class="sxs-lookup"><span data-stu-id="29143-2223">Data read with `Input` is usually written to a file by using `Write`.</span></span> <span data-ttu-id="29143-2224">Use essa função somente com arquivos abertos no `Input` ou `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="29143-2224">Use this function only with files opened in `Input` or `Binary` mode.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="29143-2225">Ao ler de arquivos, não tome decisões sobre o conteúdo do arquivo com base na extensão de nome de arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-2225">When reading from files, do not make decisions about the contents of the file based on the file name extension.</span></span> <span data-ttu-id="29143-2226">Por exemplo, um arquivo chamado Form1.vb não pode ser um arquivo fonte do Visual Basic 2005.</span><span class="sxs-lookup"><span data-stu-id="29143-2226">For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</span></span>  
  
 <span data-ttu-id="29143-2227">Quando lidos, dados numéricos ou cadeia de caracteres padrão são atribuídos a variáveis sem modificação.</span><span class="sxs-lookup"><span data-stu-id="29143-2227">When read, standard string or numeric data is assigned to variables without modification.</span></span> <span data-ttu-id="29143-2228">A tabela a seguir ilustra como outros dados de entrada são tratados.</span><span class="sxs-lookup"><span data-stu-id="29143-2228">The following table illustrates how other input data is treated.</span></span>  
  
|<span data-ttu-id="29143-2229">Dados</span><span class="sxs-lookup"><span data-stu-id="29143-2229">Data</span></span>|<span data-ttu-id="29143-2230">Valor atribuído à variável</span><span class="sxs-lookup"><span data-stu-id="29143-2230">Value assigned to variable</span></span>|  
|-|-|  
|<span data-ttu-id="29143-2231">Delimitador de vírgula ou linha em branco</span><span class="sxs-lookup"><span data-stu-id="29143-2231">Delimiting comma or blank line</span></span>|<span data-ttu-id="29143-2232">Vazio</span><span class="sxs-lookup"><span data-stu-id="29143-2232">Empty</span></span>|  
|<span data-ttu-id="29143-2233">NULL # #</span><span class="sxs-lookup"><span data-stu-id="29143-2233">#NULL#</span></span>|`DBNull`|  
|<span data-ttu-id="29143-2234"># TRUE ou FALSE de # #</span><span class="sxs-lookup"><span data-stu-id="29143-2234">#TRUE# or #FALSE#</span></span>|<span data-ttu-id="29143-2235">`True` ou `False`</span><span class="sxs-lookup"><span data-stu-id="29143-2235">`True` or `False`</span></span>|  
|#`yyyy-mm-dd hh:mm:ss`#|<span data-ttu-id="29143-2236">A data e/ou hora representada pela expressão</span><span class="sxs-lookup"><span data-stu-id="29143-2236">The date and/or time represented by the expression</span></span>|  
|<span data-ttu-id="29143-2237">#ERROR `errornumber`#</span><span class="sxs-lookup"><span data-stu-id="29143-2237">#ERROR `errornumber`#</span></span>|<span data-ttu-id="29143-2238">`errornumber` (a variável é um objeto marcado como um erro)</span><span class="sxs-lookup"><span data-stu-id="29143-2238">`errornumber` (variable is an object tagged as an error)</span></span>|  
  
 <span data-ttu-id="29143-2239">Caso você atinja o final do arquivo enquanto insere um item de dados, a entrada é interrompida e ocorre um erro.</span><span class="sxs-lookup"><span data-stu-id="29143-2239">If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="29143-2240">O `Input` função não está localizada.</span><span class="sxs-lookup"><span data-stu-id="29143-2240">The `Input` function is not localized.</span></span> <span data-ttu-id="29143-2241">Por exemplo, na versão em alemão, caso você insira 3,14159, ele retorna apenas 3, porque a vírgula é tratada como um separador variável, em vez de uma vírgula decimal.</span><span class="sxs-lookup"><span data-stu-id="29143-2241">For example, in the German version, if you input 3,14159, it returns only 3, because the comma is treated as a variable separator instead of as a decimal point.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="29143-2242">Leitura de um arquivo usando o `Input` função requer `Read` acessar do `FileIOPermissionAccess` enumeração.</span><span class="sxs-lookup"><span data-stu-id="29143-2242">Reading from a file by using the `Input` function requires `Read` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="29143-2243">Para obter mais informações, consulte <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="29143-2243">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29143-2244">Este exemplo usa o `Input` função para ler dados de um arquivo em duas variáveis.</span><span class="sxs-lookup"><span data-stu-id="29143-2244">This example uses the `Input` function to read data from a file into two variables.</span></span> <span data-ttu-id="29143-2245">Este exemplo pressupõe que `TestFile` seja um arquivo tendo várias linhas de dados gravadas usando a função `Write`, cada linha contendo uma cadeia de caracteres entre aspas e um número separado por uma vírgula; por exemplo: ("Hello", 234).</span><span class="sxs-lookup"><span data-stu-id="29143-2245">This example assumes that `TestFile` is a file that has several lines of data written to it using the `Write` function, each line containing a string in quotations and a number separated by a comma, for example: ("Hello", 234).</span></span>  
  
 [!code-vb[VbVbalrCatRef#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="29143-2246">O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="29143-2246">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files.md"><span data-ttu-id="29143-2247">Como gravar texto em arquivos no Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-2247">How to: Write Text to Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md"><span data-ttu-id="29143-2248">Access de arquivo com o Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-2248">File Access with Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files-with-a-streamwriter.md"><span data-ttu-id="29143-2249">Como: Gravar texto em um arquivo com um Streamwriter (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="29143-2249">How to: Write Text to a File with a Streamwriter (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public static void Input (int FileNumber, ref decimal Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Input(int32 FileNumber, valuetype System.Decimal&amp; Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Decimal@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Input (FileNumber As Integer, ByRef Value As Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Input(int FileNumber, System::Decimal % Value);" />
      <MemberSignature Language="F#" Value="static member Input : int *  -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Input (FileNumber, Value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Decimal" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="29143-2250">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-2250">Required.</span></span> <span data-ttu-id="29143-2251">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="29143-2251">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="29143-2252">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-2252">Required.</span></span> <span data-ttu-id="29143-2253">A variável que recebeu os valores lidos do arquivo não pode ser uma variável de matriz ou objeto.</span><span class="sxs-lookup"><span data-stu-id="29143-2253">Variable that is assigned the values read from the file - cannot be an array or object variable.</span></span></param>
        <summary><span data-ttu-id="29143-2254">Lê dados de um arquivo sequencial aberto e atribui os dados a variáveis.</span><span class="sxs-lookup"><span data-stu-id="29143-2254">Reads data from an open sequential file and assigns the data to variables.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29143-2255">O `Input` função é fornecida para compatibilidade com versões anteriores e pode afetar o desempenho.</span><span class="sxs-lookup"><span data-stu-id="29143-2255">The `Input` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="29143-2256">Para aplicativos não herdadas, o `My.Computer.FileSystem` objeto fornece um melhor desempenho.</span><span class="sxs-lookup"><span data-stu-id="29143-2256">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="29143-2257">Para obter mais informações, consulte [acesso a arquivos com o Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="29143-2257">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="29143-2258">Dados lidos com `Input` costumam ser gravados em um arquivo usando-se `Write`.</span><span class="sxs-lookup"><span data-stu-id="29143-2258">Data read with `Input` is usually written to a file by using `Write`.</span></span> <span data-ttu-id="29143-2259">Use essa função somente com arquivos abertos no `Input` ou `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="29143-2259">Use this function only with files opened in `Input` or `Binary` mode.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="29143-2260">Ao ler de arquivos, não tome decisões sobre o conteúdo do arquivo com base na extensão de nome de arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-2260">When reading from files, do not make decisions about the contents of the file based on the file name extension.</span></span> <span data-ttu-id="29143-2261">Por exemplo, um arquivo chamado Form1.vb não pode ser um arquivo fonte do Visual Basic 2005.</span><span class="sxs-lookup"><span data-stu-id="29143-2261">For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</span></span>  
  
 <span data-ttu-id="29143-2262">Quando lidos, dados numéricos ou cadeia de caracteres padrão são atribuídos a variáveis sem modificação.</span><span class="sxs-lookup"><span data-stu-id="29143-2262">When read, standard string or numeric data is assigned to variables without modification.</span></span> <span data-ttu-id="29143-2263">A tabela a seguir ilustra como outros dados de entrada são tratados.</span><span class="sxs-lookup"><span data-stu-id="29143-2263">The following table illustrates how other input data is treated.</span></span>  
  
|<span data-ttu-id="29143-2264">Dados</span><span class="sxs-lookup"><span data-stu-id="29143-2264">Data</span></span>|<span data-ttu-id="29143-2265">Valor atribuído à variável</span><span class="sxs-lookup"><span data-stu-id="29143-2265">Value assigned to variable</span></span>|  
|-|-|  
|<span data-ttu-id="29143-2266">Delimitador de vírgula ou linha em branco</span><span class="sxs-lookup"><span data-stu-id="29143-2266">Delimiting comma or blank line</span></span>|<span data-ttu-id="29143-2267">Vazio</span><span class="sxs-lookup"><span data-stu-id="29143-2267">Empty</span></span>|  
|<span data-ttu-id="29143-2268">NULL # #</span><span class="sxs-lookup"><span data-stu-id="29143-2268">#NULL#</span></span>|`DBNull`|  
|<span data-ttu-id="29143-2269"># TRUE ou FALSE de # #</span><span class="sxs-lookup"><span data-stu-id="29143-2269">#TRUE# or #FALSE#</span></span>|<span data-ttu-id="29143-2270">`True` ou `False`</span><span class="sxs-lookup"><span data-stu-id="29143-2270">`True` or `False`</span></span>|  
|#`yyyy-mm-dd hh:mm:ss`#|<span data-ttu-id="29143-2271">A data e/ou hora representada pela expressão</span><span class="sxs-lookup"><span data-stu-id="29143-2271">The date and/or time represented by the expression</span></span>|  
|<span data-ttu-id="29143-2272">#ERROR `errornumber`#</span><span class="sxs-lookup"><span data-stu-id="29143-2272">#ERROR `errornumber`#</span></span>|<span data-ttu-id="29143-2273">`errornumber` (a variável é um objeto marcado como um erro)</span><span class="sxs-lookup"><span data-stu-id="29143-2273">`errornumber` (variable is an object tagged as an error)</span></span>|  
  
 <span data-ttu-id="29143-2274">Caso você atinja o final do arquivo enquanto insere um item de dados, a entrada é interrompida e ocorre um erro.</span><span class="sxs-lookup"><span data-stu-id="29143-2274">If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="29143-2275">O `Input` função não está localizada.</span><span class="sxs-lookup"><span data-stu-id="29143-2275">The `Input` function is not localized.</span></span> <span data-ttu-id="29143-2276">Por exemplo, na versão em alemão, caso você insira 3,14159, ele retorna apenas 3, porque a vírgula é tratada como um separador variável, em vez de uma vírgula decimal.</span><span class="sxs-lookup"><span data-stu-id="29143-2276">For example, in the German version, if you input 3,14159, it returns only 3, because the comma is treated as a variable separator instead of as a decimal point.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="29143-2277">Leitura de um arquivo usando o `Input` função requer `Read` acessar do `FileIOPermissionAccess` enumeração.</span><span class="sxs-lookup"><span data-stu-id="29143-2277">Reading from a file by using the `Input` function requires `Read` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="29143-2278">Para obter mais informações, consulte <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="29143-2278">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29143-2279">Este exemplo usa o `Input` função para ler dados de um arquivo em duas variáveis.</span><span class="sxs-lookup"><span data-stu-id="29143-2279">This example uses the `Input` function to read data from a file into two variables.</span></span> <span data-ttu-id="29143-2280">Este exemplo pressupõe que `TestFile` seja um arquivo tendo várias linhas de dados gravadas usando a função `Write`, cada linha contendo uma cadeia de caracteres entre aspas e um número separado por uma vírgula; por exemplo: ("Hello", 234).</span><span class="sxs-lookup"><span data-stu-id="29143-2280">This example assumes that `TestFile` is a file that has several lines of data written to it using the `Write` function, each line containing a string in quotations and a number separated by a comma, for example: ("Hello", 234).</span></span>  
  
 [!code-vb[VbVbalrCatRef#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="29143-2281">O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="29143-2281">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files.md"><span data-ttu-id="29143-2282">Como gravar texto em arquivos no Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-2282">How to: Write Text to Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md"><span data-ttu-id="29143-2283">Access de arquivo com o Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-2283">File Access with Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files-with-a-streamwriter.md"><span data-ttu-id="29143-2284">Como: Gravar texto em um arquivo com um Streamwriter (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="29143-2284">How to: Write Text to a File with a Streamwriter (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public static void Input (int FileNumber, ref double Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Input(int32 FileNumber, float64&amp; Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Double@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Input (FileNumber As Integer, ByRef Value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Input(int FileNumber, double % Value);" />
      <MemberSignature Language="F#" Value="static member Input : int *  -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Input (FileNumber, Value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Double" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="29143-2285">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-2285">Required.</span></span> <span data-ttu-id="29143-2286">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="29143-2286">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="29143-2287">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-2287">Required.</span></span> <span data-ttu-id="29143-2288">A variável que recebeu os valores lidos do arquivo não pode ser uma variável de matriz ou objeto.</span><span class="sxs-lookup"><span data-stu-id="29143-2288">Variable that is assigned the values read from the file - cannot be an array or object variable.</span></span></param>
        <summary><span data-ttu-id="29143-2289">Lê dados de um arquivo sequencial aberto e atribui os dados a variáveis.</span><span class="sxs-lookup"><span data-stu-id="29143-2289">Reads data from an open sequential file and assigns the data to variables.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29143-2290">O `Input` função é fornecida para compatibilidade com versões anteriores e pode afetar o desempenho.</span><span class="sxs-lookup"><span data-stu-id="29143-2290">The `Input` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="29143-2291">Para aplicativos não herdadas, o `My.Computer.FileSystem` objeto fornece um melhor desempenho.</span><span class="sxs-lookup"><span data-stu-id="29143-2291">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="29143-2292">Para obter mais informações, consulte [acesso a arquivos com o Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="29143-2292">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="29143-2293">Dados lidos com `Input` costumam ser gravados em um arquivo usando-se `Write`.</span><span class="sxs-lookup"><span data-stu-id="29143-2293">Data read with `Input` is usually written to a file by using `Write`.</span></span> <span data-ttu-id="29143-2294">Use essa função somente com arquivos abertos no `Input` ou `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="29143-2294">Use this function only with files opened in `Input` or `Binary` mode.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="29143-2295">Ao ler de arquivos, não tome decisões sobre o conteúdo do arquivo com base na extensão de nome de arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-2295">When reading from files, do not make decisions about the contents of the file based on the file name extension.</span></span> <span data-ttu-id="29143-2296">Por exemplo, um arquivo chamado Form1.vb não pode ser um arquivo fonte do Visual Basic 2005.</span><span class="sxs-lookup"><span data-stu-id="29143-2296">For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</span></span>  
  
 <span data-ttu-id="29143-2297">Quando lidos, dados numéricos ou cadeia de caracteres padrão são atribuídos a variáveis sem modificação.</span><span class="sxs-lookup"><span data-stu-id="29143-2297">When read, standard string or numeric data is assigned to variables without modification.</span></span> <span data-ttu-id="29143-2298">A tabela a seguir ilustra como outros dados de entrada são tratados.</span><span class="sxs-lookup"><span data-stu-id="29143-2298">The following table illustrates how other input data is treated.</span></span>  
  
|<span data-ttu-id="29143-2299">Dados</span><span class="sxs-lookup"><span data-stu-id="29143-2299">Data</span></span>|<span data-ttu-id="29143-2300">Valor atribuído à variável</span><span class="sxs-lookup"><span data-stu-id="29143-2300">Value assigned to variable</span></span>|  
|-|-|  
|<span data-ttu-id="29143-2301">Delimitador de vírgula ou linha em branco</span><span class="sxs-lookup"><span data-stu-id="29143-2301">Delimiting comma or blank line</span></span>|<span data-ttu-id="29143-2302">Vazio</span><span class="sxs-lookup"><span data-stu-id="29143-2302">Empty</span></span>|  
|<span data-ttu-id="29143-2303">NULL # #</span><span class="sxs-lookup"><span data-stu-id="29143-2303">#NULL#</span></span>|`DBNull`|  
|<span data-ttu-id="29143-2304"># TRUE ou FALSE de # #</span><span class="sxs-lookup"><span data-stu-id="29143-2304">#TRUE# or #FALSE#</span></span>|<span data-ttu-id="29143-2305">`True` ou `False`</span><span class="sxs-lookup"><span data-stu-id="29143-2305">`True` or `False`</span></span>|  
|#`yyyy-mm-dd hh:mm:ss`#|<span data-ttu-id="29143-2306">A data e/ou hora representada pela expressão</span><span class="sxs-lookup"><span data-stu-id="29143-2306">The date and/or time represented by the expression</span></span>|  
|<span data-ttu-id="29143-2307">#ERROR `errornumber`#</span><span class="sxs-lookup"><span data-stu-id="29143-2307">#ERROR `errornumber`#</span></span>|<span data-ttu-id="29143-2308">`errornumber` (a variável é um objeto marcado como um erro)</span><span class="sxs-lookup"><span data-stu-id="29143-2308">`errornumber` (variable is an object tagged as an error)</span></span>|  
  
 <span data-ttu-id="29143-2309">Caso você atinja o final do arquivo enquanto insere um item de dados, a entrada é interrompida e ocorre um erro.</span><span class="sxs-lookup"><span data-stu-id="29143-2309">If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="29143-2310">O `Input` função não está localizada.</span><span class="sxs-lookup"><span data-stu-id="29143-2310">The `Input` function is not localized.</span></span> <span data-ttu-id="29143-2311">Por exemplo, na versão em alemão, caso você insira 3,14159, ele retorna apenas 3, porque a vírgula é tratada como um separador variável, em vez de uma vírgula decimal.</span><span class="sxs-lookup"><span data-stu-id="29143-2311">For example, in the German version, if you input 3,14159, it returns only 3, because the comma is treated as a variable separator instead of as a decimal point.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="29143-2312">Leitura de um arquivo usando o `Input` função requer `Read` acessar do `FileIOPermissionAccess` enumeração.</span><span class="sxs-lookup"><span data-stu-id="29143-2312">Reading from a file by using the `Input` function requires `Read` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="29143-2313">Para obter mais informações, consulte <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="29143-2313">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29143-2314">Este exemplo usa o `Input` função para ler dados de um arquivo em duas variáveis.</span><span class="sxs-lookup"><span data-stu-id="29143-2314">This example uses the `Input` function to read data from a file into two variables.</span></span> <span data-ttu-id="29143-2315">Este exemplo pressupõe que `TestFile` seja um arquivo tendo várias linhas de dados gravadas usando a função `Write`, cada linha contendo uma cadeia de caracteres entre aspas e um número separado por uma vírgula; por exemplo: ("Hello", 234).</span><span class="sxs-lookup"><span data-stu-id="29143-2315">This example assumes that `TestFile` is a file that has several lines of data written to it using the `Write` function, each line containing a string in quotations and a number separated by a comma, for example: ("Hello", 234).</span></span>  
  
 [!code-vb[VbVbalrCatRef#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="29143-2316">O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="29143-2316">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files.md"><span data-ttu-id="29143-2317">Como gravar texto em arquivos no Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-2317">How to: Write Text to Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md"><span data-ttu-id="29143-2318">Access de arquivo com o Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-2318">File Access with Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files-with-a-streamwriter.md"><span data-ttu-id="29143-2319">Como: Gravar texto em um arquivo com um Streamwriter (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="29143-2319">How to: Write Text to a File with a Streamwriter (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public static void Input (int FileNumber, ref short Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Input(int32 FileNumber, int16&amp; Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Int16@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Input (FileNumber As Integer, ByRef Value As Short)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Input(int FileNumber, short % Value);" />
      <MemberSignature Language="F#" Value="static member Input : int *  -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Input (FileNumber, Value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Int16" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="29143-2320">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-2320">Required.</span></span> <span data-ttu-id="29143-2321">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="29143-2321">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="29143-2322">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-2322">Required.</span></span> <span data-ttu-id="29143-2323">A variável que recebeu os valores lidos do arquivo não pode ser uma variável de matriz ou objeto.</span><span class="sxs-lookup"><span data-stu-id="29143-2323">Variable that is assigned the values read from the file - cannot be an array or object variable.</span></span></param>
        <summary><span data-ttu-id="29143-2324">Lê dados de um arquivo sequencial aberto e atribui os dados a variáveis.</span><span class="sxs-lookup"><span data-stu-id="29143-2324">Reads data from an open sequential file and assigns the data to variables.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29143-2325">O `Input` função é fornecida para compatibilidade com versões anteriores e pode afetar o desempenho.</span><span class="sxs-lookup"><span data-stu-id="29143-2325">The `Input` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="29143-2326">Para aplicativos não herdadas, o `My.Computer.FileSystem` objeto fornece um melhor desempenho.</span><span class="sxs-lookup"><span data-stu-id="29143-2326">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="29143-2327">Para obter mais informações, consulte [acesso a arquivos com o Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="29143-2327">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="29143-2328">Dados lidos com `Input` costumam ser gravados em um arquivo usando-se `Write`.</span><span class="sxs-lookup"><span data-stu-id="29143-2328">Data read with `Input` is usually written to a file by using `Write`.</span></span> <span data-ttu-id="29143-2329">Use essa função somente com arquivos abertos no `Input` ou `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="29143-2329">Use this function only with files opened in `Input` or `Binary` mode.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="29143-2330">Ao ler de arquivos, não tome decisões sobre o conteúdo do arquivo com base na extensão de nome de arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-2330">When reading from files, do not make decisions about the contents of the file based on the file name extension.</span></span> <span data-ttu-id="29143-2331">Por exemplo, um arquivo chamado Form1.vb não pode ser um arquivo fonte do Visual Basic 2005.</span><span class="sxs-lookup"><span data-stu-id="29143-2331">For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</span></span>  
  
 <span data-ttu-id="29143-2332">Quando lidos, dados numéricos ou cadeia de caracteres padrão são atribuídos a variáveis sem modificação.</span><span class="sxs-lookup"><span data-stu-id="29143-2332">When read, standard string or numeric data is assigned to variables without modification.</span></span> <span data-ttu-id="29143-2333">A tabela a seguir ilustra como outros dados de entrada são tratados.</span><span class="sxs-lookup"><span data-stu-id="29143-2333">The following table illustrates how other input data is treated.</span></span>  
  
|<span data-ttu-id="29143-2334">Dados</span><span class="sxs-lookup"><span data-stu-id="29143-2334">Data</span></span>|<span data-ttu-id="29143-2335">Valor atribuído à variável</span><span class="sxs-lookup"><span data-stu-id="29143-2335">Value assigned to variable</span></span>|  
|-|-|  
|<span data-ttu-id="29143-2336">Delimitador de vírgula ou linha em branco</span><span class="sxs-lookup"><span data-stu-id="29143-2336">Delimiting comma or blank line</span></span>|<span data-ttu-id="29143-2337">Vazio</span><span class="sxs-lookup"><span data-stu-id="29143-2337">Empty</span></span>|  
|<span data-ttu-id="29143-2338">NULL # #</span><span class="sxs-lookup"><span data-stu-id="29143-2338">#NULL#</span></span>|`DBNull`|  
|<span data-ttu-id="29143-2339"># TRUE ou FALSE de # #</span><span class="sxs-lookup"><span data-stu-id="29143-2339">#TRUE# or #FALSE#</span></span>|<span data-ttu-id="29143-2340">`True` ou `False`</span><span class="sxs-lookup"><span data-stu-id="29143-2340">`True` or `False`</span></span>|  
|#`yyyy-mm-dd hh:mm:ss`#|<span data-ttu-id="29143-2341">A data e/ou hora representada pela expressão</span><span class="sxs-lookup"><span data-stu-id="29143-2341">The date and/or time represented by the expression</span></span>|  
|<span data-ttu-id="29143-2342">#ERROR `errornumber`#</span><span class="sxs-lookup"><span data-stu-id="29143-2342">#ERROR `errornumber`#</span></span>|<span data-ttu-id="29143-2343">`errornumber` (a variável é um objeto marcado como um erro)</span><span class="sxs-lookup"><span data-stu-id="29143-2343">`errornumber` (variable is an object tagged as an error)</span></span>|  
  
 <span data-ttu-id="29143-2344">Caso você atinja o final do arquivo enquanto insere um item de dados, a entrada é interrompida e ocorre um erro.</span><span class="sxs-lookup"><span data-stu-id="29143-2344">If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="29143-2345">O `Input` função não está localizada.</span><span class="sxs-lookup"><span data-stu-id="29143-2345">The `Input` function is not localized.</span></span> <span data-ttu-id="29143-2346">Por exemplo, na versão em alemão, caso você insira 3,14159, ele retorna apenas 3, porque a vírgula é tratada como um separador variável, em vez de uma vírgula decimal.</span><span class="sxs-lookup"><span data-stu-id="29143-2346">For example, in the German version, if you input 3,14159, it returns only 3, because the comma is treated as a variable separator instead of as a decimal point.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="29143-2347">Leitura de um arquivo usando o `Input` função requer `Read` acessar do `FileIOPermissionAccess` enumeração.</span><span class="sxs-lookup"><span data-stu-id="29143-2347">Reading from a file by using the `Input` function requires `Read` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="29143-2348">Para obter mais informações, consulte <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="29143-2348">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29143-2349">Este exemplo usa o `Input` função para ler dados de um arquivo em duas variáveis.</span><span class="sxs-lookup"><span data-stu-id="29143-2349">This example uses the `Input` function to read data from a file into two variables.</span></span> <span data-ttu-id="29143-2350">Este exemplo pressupõe que `TestFile` seja um arquivo tendo várias linhas de dados gravadas usando a função `Write`, cada linha contendo uma cadeia de caracteres entre aspas e um número separado por uma vírgula; por exemplo: ("Hello", 234).</span><span class="sxs-lookup"><span data-stu-id="29143-2350">This example assumes that `TestFile` is a file that has several lines of data written to it using the `Write` function, each line containing a string in quotations and a number separated by a comma, for example: ("Hello", 234).</span></span>  
  
 [!code-vb[VbVbalrCatRef#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="29143-2351">O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="29143-2351">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files.md"><span data-ttu-id="29143-2352">Como gravar texto em arquivos no Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-2352">How to: Write Text to Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md"><span data-ttu-id="29143-2353">Access de arquivo com o Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-2353">File Access with Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files-with-a-streamwriter.md"><span data-ttu-id="29143-2354">Como: Gravar texto em um arquivo com um Streamwriter (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="29143-2354">How to: Write Text to a File with a Streamwriter (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public static void Input (int FileNumber, ref int Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Input(int32 FileNumber, int32&amp; Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Input (FileNumber As Integer, ByRef Value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Input(int FileNumber, int % Value);" />
      <MemberSignature Language="F#" Value="static member Input : int *  -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Input (FileNumber, Value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Int32" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="29143-2355">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-2355">Required.</span></span> <span data-ttu-id="29143-2356">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="29143-2356">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="29143-2357">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-2357">Required.</span></span> <span data-ttu-id="29143-2358">A variável que recebeu os valores lidos do arquivo não pode ser uma variável de matriz ou objeto.</span><span class="sxs-lookup"><span data-stu-id="29143-2358">Variable that is assigned the values read from the file - cannot be an array or object variable.</span></span></param>
        <summary><span data-ttu-id="29143-2359">Lê dados de um arquivo sequencial aberto e atribui os dados a variáveis.</span><span class="sxs-lookup"><span data-stu-id="29143-2359">Reads data from an open sequential file and assigns the data to variables.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29143-2360">O `Input` função é fornecida para compatibilidade com versões anteriores e pode afetar o desempenho.</span><span class="sxs-lookup"><span data-stu-id="29143-2360">The `Input` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="29143-2361">Para aplicativos não herdadas, o `My.Computer.FileSystem` objeto fornece um melhor desempenho.</span><span class="sxs-lookup"><span data-stu-id="29143-2361">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="29143-2362">Para obter mais informações, consulte [acesso a arquivos com o Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="29143-2362">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="29143-2363">Dados lidos com `Input` costumam ser gravados em um arquivo usando-se `Write`.</span><span class="sxs-lookup"><span data-stu-id="29143-2363">Data read with `Input` is usually written to a file by using `Write`.</span></span> <span data-ttu-id="29143-2364">Use essa função somente com arquivos abertos no `Input` ou `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="29143-2364">Use this function only with files opened in `Input` or `Binary` mode.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="29143-2365">Ao ler de arquivos, não tome decisões sobre o conteúdo do arquivo com base na extensão de nome de arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-2365">When reading from files, do not make decisions about the contents of the file based on the file name extension.</span></span> <span data-ttu-id="29143-2366">Por exemplo, um arquivo chamado Form1.vb não pode ser um arquivo fonte do Visual Basic 2005.</span><span class="sxs-lookup"><span data-stu-id="29143-2366">For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</span></span>  
  
 <span data-ttu-id="29143-2367">Quando lidos, dados numéricos ou cadeia de caracteres padrão são atribuídos a variáveis sem modificação.</span><span class="sxs-lookup"><span data-stu-id="29143-2367">When read, standard string or numeric data is assigned to variables without modification.</span></span> <span data-ttu-id="29143-2368">A tabela a seguir ilustra como outros dados de entrada são tratados.</span><span class="sxs-lookup"><span data-stu-id="29143-2368">The following table illustrates how other input data is treated.</span></span>  
  
|<span data-ttu-id="29143-2369">Dados</span><span class="sxs-lookup"><span data-stu-id="29143-2369">Data</span></span>|<span data-ttu-id="29143-2370">Valor atribuído à variável</span><span class="sxs-lookup"><span data-stu-id="29143-2370">Value assigned to variable</span></span>|  
|-|-|  
|<span data-ttu-id="29143-2371">Delimitador de vírgula ou linha em branco</span><span class="sxs-lookup"><span data-stu-id="29143-2371">Delimiting comma or blank line</span></span>|<span data-ttu-id="29143-2372">Vazio</span><span class="sxs-lookup"><span data-stu-id="29143-2372">Empty</span></span>|  
|<span data-ttu-id="29143-2373">NULL # #</span><span class="sxs-lookup"><span data-stu-id="29143-2373">#NULL#</span></span>|`DBNull`|  
|<span data-ttu-id="29143-2374"># TRUE ou FALSE de # #</span><span class="sxs-lookup"><span data-stu-id="29143-2374">#TRUE# or #FALSE#</span></span>|<span data-ttu-id="29143-2375">`True` ou `False`</span><span class="sxs-lookup"><span data-stu-id="29143-2375">`True` or `False`</span></span>|  
|#`yyyy-mm-dd hh:mm:ss`#|<span data-ttu-id="29143-2376">A data e/ou hora representada pela expressão</span><span class="sxs-lookup"><span data-stu-id="29143-2376">The date and/or time represented by the expression</span></span>|  
|<span data-ttu-id="29143-2377">#ERROR `errornumber`#</span><span class="sxs-lookup"><span data-stu-id="29143-2377">#ERROR `errornumber`#</span></span>|<span data-ttu-id="29143-2378">`errornumber` (a variável é um objeto marcado como um erro)</span><span class="sxs-lookup"><span data-stu-id="29143-2378">`errornumber` (variable is an object tagged as an error)</span></span>|  
  
 <span data-ttu-id="29143-2379">Caso você atinja o final do arquivo enquanto insere um item de dados, a entrada é interrompida e ocorre um erro.</span><span class="sxs-lookup"><span data-stu-id="29143-2379">If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="29143-2380">O `Input` função não está localizada.</span><span class="sxs-lookup"><span data-stu-id="29143-2380">The `Input` function is not localized.</span></span> <span data-ttu-id="29143-2381">Por exemplo, na versão em alemão, caso você insira 3,14159, ele retorna apenas 3, como a vírgula é tratada como um separador variável, em vez de como um ponto decimal.</span><span class="sxs-lookup"><span data-stu-id="29143-2381">For example, in the German version, if you input 3,14159, it returns only 3, since the comma is treated as a variable separator instead of as a decimal point.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="29143-2382">Leitura de um arquivo usando o `Input` função requer `Read` acessar do `FileIOPermissionAccess` enumeração.</span><span class="sxs-lookup"><span data-stu-id="29143-2382">Reading from a file by using the `Input` function requires `Read` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="29143-2383">Para obter mais informações, consulte <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="29143-2383">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29143-2384">Este exemplo usa o `Input` função para ler dados de um arquivo em duas variáveis.</span><span class="sxs-lookup"><span data-stu-id="29143-2384">This example uses the `Input` function to read data from a file into two variables.</span></span> <span data-ttu-id="29143-2385">Este exemplo pressupõe que `TestFile` seja um arquivo tendo várias linhas de dados gravadas usando a função `Write`, cada linha contendo uma cadeia de caracteres entre aspas e um número separado por uma vírgula; por exemplo: ("Hello", 234).</span><span class="sxs-lookup"><span data-stu-id="29143-2385">This example assumes that `TestFile` is a file that has several lines of data written to it using the `Write` function, each line containing a string in quotations and a number separated by a comma, for example: ("Hello", 234).</span></span>  
  
 [!code-vb[VbVbalrCatRef#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="29143-2386">O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="29143-2386">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files.md"><span data-ttu-id="29143-2387">Como gravar texto em arquivos no Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-2387">How to: Write Text to Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md"><span data-ttu-id="29143-2388">Access de arquivo com o Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-2388">File Access with Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files-with-a-streamwriter.md"><span data-ttu-id="29143-2389">Como: Gravar texto em um arquivo com um Streamwriter (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="29143-2389">How to: Write Text to a File with a Streamwriter (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public static void Input (int FileNumber, ref long Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Input(int32 FileNumber, int64&amp; Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Int64@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Input (FileNumber As Integer, ByRef Value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Input(int FileNumber, long % Value);" />
      <MemberSignature Language="F#" Value="static member Input : int *  -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Input (FileNumber, Value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Int64" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="29143-2390">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-2390">Required.</span></span> <span data-ttu-id="29143-2391">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="29143-2391">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="29143-2392">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-2392">Required.</span></span> <span data-ttu-id="29143-2393">A variável que recebeu os valores lidos do arquivo não pode ser uma variável de matriz ou objeto.</span><span class="sxs-lookup"><span data-stu-id="29143-2393">Variable that is assigned the values read from the file - cannot be an array or object variable.</span></span></param>
        <summary><span data-ttu-id="29143-2394">Lê dados de um arquivo sequencial aberto e atribui os dados a variáveis.</span><span class="sxs-lookup"><span data-stu-id="29143-2394">Reads data from an open sequential file and assigns the data to variables.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29143-2395">O `Input` função é fornecida para compatibilidade com versões anteriores e pode afetar o desempenho.</span><span class="sxs-lookup"><span data-stu-id="29143-2395">The `Input` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="29143-2396">Para aplicativos não herdadas, o `My.Computer.FileSystem` objeto fornece um melhor desempenho.</span><span class="sxs-lookup"><span data-stu-id="29143-2396">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="29143-2397">Para obter mais informações, consulte [acesso a arquivos com o Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="29143-2397">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="29143-2398">Dados lidos com `Input` costumam ser gravados em um arquivo usando-se `Write`.</span><span class="sxs-lookup"><span data-stu-id="29143-2398">Data read with `Input` is usually written to a file by using `Write`.</span></span> <span data-ttu-id="29143-2399">Use essa função somente com arquivos abertos no `Input` ou `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="29143-2399">Use this function only with files opened in `Input` or `Binary` mode.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="29143-2400">Ao ler de arquivos, não tome decisões sobre o conteúdo do arquivo com base na extensão de nome de arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-2400">When reading from files, do not make decisions about the contents of the file based on the file name extension.</span></span> <span data-ttu-id="29143-2401">Por exemplo, um arquivo chamado Form1.vb não pode ser um arquivo fonte do Visual Basic 2005.</span><span class="sxs-lookup"><span data-stu-id="29143-2401">For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</span></span>  
  
 <span data-ttu-id="29143-2402">Quando lidos, dados numéricos ou cadeia de caracteres padrão são atribuídos a variáveis sem modificação.</span><span class="sxs-lookup"><span data-stu-id="29143-2402">When read, standard string or numeric data is assigned to variables without modification.</span></span> <span data-ttu-id="29143-2403">A tabela a seguir ilustra como outros dados de entrada são tratados.</span><span class="sxs-lookup"><span data-stu-id="29143-2403">The following table illustrates how other input data is treated.</span></span>  
  
|<span data-ttu-id="29143-2404">Dados</span><span class="sxs-lookup"><span data-stu-id="29143-2404">Data</span></span>|<span data-ttu-id="29143-2405">Valor atribuído à variável</span><span class="sxs-lookup"><span data-stu-id="29143-2405">Value assigned to variable</span></span>|  
|-|-|  
|<span data-ttu-id="29143-2406">Delimitador de vírgula ou linha em branco</span><span class="sxs-lookup"><span data-stu-id="29143-2406">Delimiting comma or blank line</span></span>|<span data-ttu-id="29143-2407">Vazio</span><span class="sxs-lookup"><span data-stu-id="29143-2407">Empty</span></span>|  
|<span data-ttu-id="29143-2408">NULL # #</span><span class="sxs-lookup"><span data-stu-id="29143-2408">#NULL#</span></span>|`DBNull`|  
|<span data-ttu-id="29143-2409"># TRUE ou FALSE de # #</span><span class="sxs-lookup"><span data-stu-id="29143-2409">#TRUE# or #FALSE#</span></span>|<span data-ttu-id="29143-2410">`True` ou `False`</span><span class="sxs-lookup"><span data-stu-id="29143-2410">`True` or `False`</span></span>|  
|#`yyyy-mm-dd hh:mm:ss`#|<span data-ttu-id="29143-2411">A data e/ou hora representada pela expressão</span><span class="sxs-lookup"><span data-stu-id="29143-2411">The date and/or time represented by the expression</span></span>|  
|<span data-ttu-id="29143-2412">#ERROR `errornumber`#</span><span class="sxs-lookup"><span data-stu-id="29143-2412">#ERROR `errornumber`#</span></span>|<span data-ttu-id="29143-2413">`errornumber` (a variável é um objeto marcado como um erro)</span><span class="sxs-lookup"><span data-stu-id="29143-2413">`errornumber` (variable is an object tagged as an error)</span></span>|  
  
 <span data-ttu-id="29143-2414">Caso você atinja o final do arquivo enquanto insere um item de dados, a entrada é interrompida e ocorre um erro.</span><span class="sxs-lookup"><span data-stu-id="29143-2414">If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="29143-2415">O `Input` função não está localizada.</span><span class="sxs-lookup"><span data-stu-id="29143-2415">The `Input` function is not localized.</span></span> <span data-ttu-id="29143-2416">Por exemplo, na versão em alemão, caso você insira 3,14159, ele retorna apenas 3, porque a vírgula é tratada como um separador variável, em vez de uma vírgula decimal.</span><span class="sxs-lookup"><span data-stu-id="29143-2416">For example, in the German version, if you input 3,14159, it returns only 3, because the comma is treated as a variable separator instead of as a decimal point.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="29143-2417">Leitura de um arquivo usando o `Input` função requer `Read` acessar do `FileIOPermissionAccess` enumeração.</span><span class="sxs-lookup"><span data-stu-id="29143-2417">Reading from a file by using the `Input` function requires `Read` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="29143-2418">Para obter mais informações, consulte <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="29143-2418">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29143-2419">Este exemplo usa o `Input` função para ler dados de um arquivo em duas variáveis.</span><span class="sxs-lookup"><span data-stu-id="29143-2419">This example uses the `Input` function to read data from a file into two variables.</span></span> <span data-ttu-id="29143-2420">Este exemplo pressupõe que `TestFile` seja um arquivo tendo várias linhas de dados gravadas usando a função `Write`, cada linha contendo uma cadeia de caracteres entre aspas e um número separado por uma vírgula; por exemplo: ("Hello", 234).</span><span class="sxs-lookup"><span data-stu-id="29143-2420">This example assumes that `TestFile` is a file that has several lines of data written to it using the `Write` function, each line containing a string in quotations and a number separated by a comma, for example: ("Hello", 234).</span></span>  
  
 [!code-vb[VbVbalrCatRef#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="29143-2421">O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="29143-2421">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files.md"><span data-ttu-id="29143-2422">Como gravar texto em arquivos no Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-2422">How to: Write Text to Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md"><span data-ttu-id="29143-2423">Access de arquivo com o Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-2423">File Access with Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files-with-a-streamwriter.md"><span data-ttu-id="29143-2424">Como: Gravar texto em um arquivo com um Streamwriter (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="29143-2424">How to: Write Text to a File with a Streamwriter (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public static void Input (int FileNumber, ref object Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Input(int32 FileNumber, object&amp; Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Input (FileNumber As Integer, ByRef Value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Input(int FileNumber, System::Object ^ % Value);" />
      <MemberSignature Language="F#" Value="static member Input : int *  -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Input (FileNumber, Value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="29143-2425">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-2425">Required.</span></span> <span data-ttu-id="29143-2426">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="29143-2426">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="29143-2427">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-2427">Required.</span></span> <span data-ttu-id="29143-2428">A variável que recebeu os valores lidos do arquivo não pode ser uma variável de matriz ou objeto.</span><span class="sxs-lookup"><span data-stu-id="29143-2428">Variable that is assigned the values read from the file - cannot be an array or object variable.</span></span></param>
        <summary><span data-ttu-id="29143-2429">Lê dados de um arquivo sequencial aberto e atribui os dados a variáveis.</span><span class="sxs-lookup"><span data-stu-id="29143-2429">Reads data from an open sequential file and assigns the data to variables.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29143-2430">O `Input` função é fornecida para compatibilidade com versões anteriores e pode afetar o desempenho.</span><span class="sxs-lookup"><span data-stu-id="29143-2430">The `Input` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="29143-2431">Para aplicativos não herdadas, o `My.Computer.FileSystem` objeto fornece um melhor desempenho.</span><span class="sxs-lookup"><span data-stu-id="29143-2431">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="29143-2432">Para obter mais informações, consulte [acesso a arquivos com o Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="29143-2432">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="29143-2433">Dados lidos com `Input` costumam ser gravados em um arquivo usando-se `Write`.</span><span class="sxs-lookup"><span data-stu-id="29143-2433">Data read with `Input` is usually written to a file by using `Write`.</span></span> <span data-ttu-id="29143-2434">Use essa função somente com arquivos abertos no `Input` ou `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="29143-2434">Use this function only with files opened in `Input` or `Binary` mode.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="29143-2435">Ao ler de arquivos, não tome decisões sobre o conteúdo do arquivo com base na extensão de nome de arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-2435">When reading from files, do not make decisions about the contents of the file based on the file name extension.</span></span> <span data-ttu-id="29143-2436">Por exemplo, um arquivo chamado Form1.vb não pode ser um arquivo fonte do Visual Basic 2005.</span><span class="sxs-lookup"><span data-stu-id="29143-2436">For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</span></span>  
  
 <span data-ttu-id="29143-2437">Quando lidos, dados numéricos ou cadeia de caracteres padrão são atribuídos a variáveis sem modificação.</span><span class="sxs-lookup"><span data-stu-id="29143-2437">When read, standard string or numeric data is assigned to variables without modification.</span></span> <span data-ttu-id="29143-2438">A tabela a seguir ilustra como outros dados de entrada são tratados.</span><span class="sxs-lookup"><span data-stu-id="29143-2438">The following table illustrates how other input data is treated.</span></span>  
  
|<span data-ttu-id="29143-2439">Dados</span><span class="sxs-lookup"><span data-stu-id="29143-2439">Data</span></span>|<span data-ttu-id="29143-2440">Valor atribuído à variável</span><span class="sxs-lookup"><span data-stu-id="29143-2440">Value assigned to variable</span></span>|  
|-|-|  
|<span data-ttu-id="29143-2441">Delimitador de vírgula ou linha em branco</span><span class="sxs-lookup"><span data-stu-id="29143-2441">Delimiting comma or blank line</span></span>|<span data-ttu-id="29143-2442">Vazio</span><span class="sxs-lookup"><span data-stu-id="29143-2442">Empty</span></span>|  
|<span data-ttu-id="29143-2443">NULL # #</span><span class="sxs-lookup"><span data-stu-id="29143-2443">#NULL#</span></span>|`DBNull`|  
|<span data-ttu-id="29143-2444"># TRUE ou FALSE de # #</span><span class="sxs-lookup"><span data-stu-id="29143-2444">#TRUE# or #FALSE#</span></span>|<span data-ttu-id="29143-2445">`True` ou `False`</span><span class="sxs-lookup"><span data-stu-id="29143-2445">`True` or `False`</span></span>|  
|#`yyyy-mm-dd hh:mm:ss`#|<span data-ttu-id="29143-2446">A data e/ou hora representada pela expressão</span><span class="sxs-lookup"><span data-stu-id="29143-2446">The date and/or time represented by the expression</span></span>|  
|<span data-ttu-id="29143-2447">#ERROR `errornumber`#</span><span class="sxs-lookup"><span data-stu-id="29143-2447">#ERROR `errornumber`#</span></span>|<span data-ttu-id="29143-2448">`errornumber` (a variável é um objeto marcado como um erro)</span><span class="sxs-lookup"><span data-stu-id="29143-2448">`errornumber` (variable is an object tagged as an error)</span></span>|  
  
 <span data-ttu-id="29143-2449">Caso você atinja o final do arquivo enquanto insere um item de dados, a entrada é interrompida e ocorre um erro.</span><span class="sxs-lookup"><span data-stu-id="29143-2449">If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="29143-2450">O `Input` função não está localizada.</span><span class="sxs-lookup"><span data-stu-id="29143-2450">The `Input` function is not localized.</span></span> <span data-ttu-id="29143-2451">Por exemplo, na versão em alemão, caso você insira 3,14159, ele retorna apenas 3, porque a vírgula é tratada como um separador variável, em vez de uma vírgula decimal.</span><span class="sxs-lookup"><span data-stu-id="29143-2451">For example, in the German version, if you input 3,14159, it returns only 3, because the comma is treated as a variable separator instead of as a decimal point.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="29143-2452">Leitura de um arquivo usando o `Input` função requer `Read` acessar do `FileIOPermissionAccess` enumeração.</span><span class="sxs-lookup"><span data-stu-id="29143-2452">Reading from a file by using the `Input` function requires `Read` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="29143-2453">Para obter mais informações, consulte <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="29143-2453">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29143-2454">Este exemplo usa o `Input` função para ler dados de um arquivo em duas variáveis.</span><span class="sxs-lookup"><span data-stu-id="29143-2454">This example uses the `Input` function to read data from a file into two variables.</span></span> <span data-ttu-id="29143-2455">Este exemplo pressupõe que `TestFile` seja um arquivo tendo várias linhas de dados gravadas usando a função `Write`, cada linha contendo uma cadeia de caracteres entre aspas e um número separado por uma vírgula; por exemplo: ("Hello", 234).</span><span class="sxs-lookup"><span data-stu-id="29143-2455">This example assumes that `TestFile` is a file that has several lines of data written to it using the `Write` function, each line containing a string in quotations and a number separated by a comma, for example: ("Hello", 234).</span></span>  
  
 [!code-vb[VbVbalrCatRef#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="29143-2456">O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="29143-2456">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files.md"><span data-ttu-id="29143-2457">Como gravar texto em arquivos no Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-2457">How to: Write Text to Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md"><span data-ttu-id="29143-2458">Access de arquivo com o Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-2458">File Access with Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files-with-a-streamwriter.md"><span data-ttu-id="29143-2459">Como: Gravar texto em um arquivo com um Streamwriter (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="29143-2459">How to: Write Text to a File with a Streamwriter (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public static void Input (int FileNumber, ref float Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Input(int32 FileNumber, float32&amp; Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Single@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Input (FileNumber As Integer, ByRef Value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Input(int FileNumber, float % Value);" />
      <MemberSignature Language="F#" Value="static member Input : int *  -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Input (FileNumber, Value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Single" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="29143-2460">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-2460">Required.</span></span> <span data-ttu-id="29143-2461">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="29143-2461">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="29143-2462">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-2462">Required.</span></span> <span data-ttu-id="29143-2463">A variável que recebeu os valores lidos do arquivo não pode ser uma variável de matriz ou objeto.</span><span class="sxs-lookup"><span data-stu-id="29143-2463">Variable that is assigned the values read from the file - cannot be an array or object variable.</span></span></param>
        <summary><span data-ttu-id="29143-2464">Lê dados de um arquivo sequencial aberto e atribui os dados a variáveis.</span><span class="sxs-lookup"><span data-stu-id="29143-2464">Reads data from an open sequential file and assigns the data to variables.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29143-2465">O `Input` função é fornecida para compatibilidade com versões anteriores e pode afetar o desempenho.</span><span class="sxs-lookup"><span data-stu-id="29143-2465">The `Input` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="29143-2466">Para aplicativos não herdadas, o `My.Computer.FileSystem` objeto fornece um melhor desempenho.</span><span class="sxs-lookup"><span data-stu-id="29143-2466">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="29143-2467">Para obter mais informações, consulte [acesso a arquivos com o Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="29143-2467">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="29143-2468">Dados lidos com `Input` costumam ser gravados em um arquivo usando-se `Write`.</span><span class="sxs-lookup"><span data-stu-id="29143-2468">Data read with `Input` is usually written to a file by using `Write`.</span></span> <span data-ttu-id="29143-2469">Use essa função somente com arquivos abertos no `Input` ou `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="29143-2469">Use this function only with files opened in `Input` or `Binary` mode.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="29143-2470">Ao ler de arquivos, não tome decisões sobre o conteúdo do arquivo com base na extensão de nome de arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-2470">When reading from files, do not make decisions about the contents of the file based on the file name extension.</span></span> <span data-ttu-id="29143-2471">Por exemplo, um arquivo chamado Form1.vb não pode ser um arquivo fonte do Visual Basic 2005.</span><span class="sxs-lookup"><span data-stu-id="29143-2471">For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</span></span>  
  
 <span data-ttu-id="29143-2472">Quando lidos, dados numéricos ou cadeia de caracteres padrão são atribuídos a variáveis sem modificação.</span><span class="sxs-lookup"><span data-stu-id="29143-2472">When read, standard string or numeric data is assigned to variables without modification.</span></span> <span data-ttu-id="29143-2473">A tabela a seguir ilustra como outros dados de entrada são tratados.</span><span class="sxs-lookup"><span data-stu-id="29143-2473">The following table illustrates how other input data is treated.</span></span>  
  
|<span data-ttu-id="29143-2474">Dados</span><span class="sxs-lookup"><span data-stu-id="29143-2474">Data</span></span>|<span data-ttu-id="29143-2475">Valor atribuído à variável</span><span class="sxs-lookup"><span data-stu-id="29143-2475">Value assigned to variable</span></span>|  
|-|-|  
|<span data-ttu-id="29143-2476">Delimitador de vírgula ou linha em branco</span><span class="sxs-lookup"><span data-stu-id="29143-2476">Delimiting comma or blank line</span></span>|<span data-ttu-id="29143-2477">Vazio</span><span class="sxs-lookup"><span data-stu-id="29143-2477">Empty</span></span>|  
|<span data-ttu-id="29143-2478">NULL # #</span><span class="sxs-lookup"><span data-stu-id="29143-2478">#NULL#</span></span>|`DBNull`|  
|<span data-ttu-id="29143-2479"># TRUE ou FALSE de # #</span><span class="sxs-lookup"><span data-stu-id="29143-2479">#TRUE# or #FALSE#</span></span>|<span data-ttu-id="29143-2480">`True` ou `False`</span><span class="sxs-lookup"><span data-stu-id="29143-2480">`True` or `False`</span></span>|  
|#`yyyy-mm-dd hh:mm:ss`#|<span data-ttu-id="29143-2481">A data e/ou hora representada pela expressão</span><span class="sxs-lookup"><span data-stu-id="29143-2481">The date and/or time represented by the expression</span></span>|  
|<span data-ttu-id="29143-2482">#ERROR `errornumber`#</span><span class="sxs-lookup"><span data-stu-id="29143-2482">#ERROR `errornumber`#</span></span>|<span data-ttu-id="29143-2483">`errornumber` (a variável é um objeto marcado como um erro)</span><span class="sxs-lookup"><span data-stu-id="29143-2483">`errornumber` (variable is an object tagged as an error)</span></span>|  
  
 <span data-ttu-id="29143-2484">Caso você atinja o final do arquivo enquanto insere um item de dados, a entrada é interrompida e ocorre um erro.</span><span class="sxs-lookup"><span data-stu-id="29143-2484">If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="29143-2485">O `Input` função não está localizada.</span><span class="sxs-lookup"><span data-stu-id="29143-2485">The `Input` function is not localized.</span></span> <span data-ttu-id="29143-2486">Por exemplo, na versão em alemão, caso você insira 3,14159, ele retorna apenas 3, porque a vírgula é tratada como um separador variável, em vez de uma vírgula decimal.</span><span class="sxs-lookup"><span data-stu-id="29143-2486">For example, in the German version, if you input 3,14159, it returns only 3, because the comma is treated as a variable separator instead of as a decimal point.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="29143-2487">Leitura de um arquivo usando o `Input` função requer `Read` acessar do `FileIOPermissionAccess` enumeração.</span><span class="sxs-lookup"><span data-stu-id="29143-2487">Reading from a file by using the `Input` function requires `Read` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="29143-2488">Para obter mais informações, consulte <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="29143-2488">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29143-2489">Este exemplo usa o `Input` função para ler dados de um arquivo em duas variáveis.</span><span class="sxs-lookup"><span data-stu-id="29143-2489">This example uses the `Input` function to read data from a file into two variables.</span></span> <span data-ttu-id="29143-2490">Este exemplo pressupõe que `TestFile` seja um arquivo tendo várias linhas de dados gravadas usando a função `Write`, cada linha contendo uma cadeia de caracteres entre aspas e um número separado por uma vírgula; por exemplo: ("Hello", 234).</span><span class="sxs-lookup"><span data-stu-id="29143-2490">This example assumes that `TestFile` is a file that has several lines of data written to it using the `Write` function, each line containing a string in quotations and a number separated by a comma, for example: ("Hello", 234).</span></span>  
  
 [!code-vb[VbVbalrCatRef#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="29143-2491">O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="29143-2491">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files.md"><span data-ttu-id="29143-2492">Como gravar texto em arquivos no Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-2492">How to: Write Text to Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md"><span data-ttu-id="29143-2493">Access de arquivo com o Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-2493">File Access with Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files-with-a-streamwriter.md"><span data-ttu-id="29143-2494">Como: Gravar texto em um arquivo com um Streamwriter (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="29143-2494">How to: Write Text to a File with a Streamwriter (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public static void Input (int FileNumber, ref string Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Input(int32 FileNumber, string&amp; Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Input (FileNumber As Integer, ByRef Value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Input(int FileNumber, System::String ^ % Value);" />
      <MemberSignature Language="F#" Value="static member Input : int *  -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Input (FileNumber, Value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.String" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="29143-2495">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-2495">Required.</span></span> <span data-ttu-id="29143-2496">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="29143-2496">Any valid file number.</span></span></param>
        <param name="Value"><span data-ttu-id="29143-2497">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-2497">Required.</span></span> <span data-ttu-id="29143-2498">A variável que recebeu os valores lidos do arquivo não pode ser uma variável de matriz ou objeto.</span><span class="sxs-lookup"><span data-stu-id="29143-2498">Variable that is assigned the values read from the file - cannot be an array or object variable.</span></span></param>
        <summary><span data-ttu-id="29143-2499">Lê dados de um arquivo sequencial aberto e atribui os dados a variáveis.</span><span class="sxs-lookup"><span data-stu-id="29143-2499">Reads data from an open sequential file and assigns the data to variables.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29143-2500">O `Input` função é fornecida para compatibilidade com versões anteriores e pode afetar o desempenho.</span><span class="sxs-lookup"><span data-stu-id="29143-2500">The `Input` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="29143-2501">Para aplicativos não herdadas, o `My.Computer.FileSystem` objeto fornece um melhor desempenho.</span><span class="sxs-lookup"><span data-stu-id="29143-2501">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="29143-2502">Para obter mais informações, consulte [acesso a arquivos com o Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="29143-2502">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="29143-2503">Dados lidos com `Input` costumam ser gravados em um arquivo usando-se `Write`.</span><span class="sxs-lookup"><span data-stu-id="29143-2503">Data read with `Input` is usually written to a file by using `Write`.</span></span> <span data-ttu-id="29143-2504">Use essa função somente com arquivos abertos no `Input` ou `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="29143-2504">Use this function only with files opened in `Input` or `Binary` mode.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="29143-2505">Ao ler de arquivos, não tome decisões sobre o conteúdo do arquivo com base na extensão de nome de arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-2505">When reading from files, do not make decisions about the contents of the file based on the file name extension.</span></span> <span data-ttu-id="29143-2506">Por exemplo, um arquivo chamado Form1.vb não pode ser um arquivo fonte do Visual Basic 2005.</span><span class="sxs-lookup"><span data-stu-id="29143-2506">For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</span></span>  
  
 <span data-ttu-id="29143-2507">Quando lidos, dados numéricos ou cadeia de caracteres padrão são atribuídos a variáveis sem modificação.</span><span class="sxs-lookup"><span data-stu-id="29143-2507">When read, standard string or numeric data is assigned to variables without modification.</span></span> <span data-ttu-id="29143-2508">A tabela a seguir ilustra como outros dados de entrada são tratados.</span><span class="sxs-lookup"><span data-stu-id="29143-2508">The following table illustrates how other input data is treated.</span></span>  
  
|<span data-ttu-id="29143-2509">Dados</span><span class="sxs-lookup"><span data-stu-id="29143-2509">Data</span></span>|<span data-ttu-id="29143-2510">Valor atribuído à variável</span><span class="sxs-lookup"><span data-stu-id="29143-2510">Value assigned to variable</span></span>|  
|-|-|  
|<span data-ttu-id="29143-2511">Delimitador de vírgula ou linha em branco</span><span class="sxs-lookup"><span data-stu-id="29143-2511">Delimiting comma or blank line</span></span>|<span data-ttu-id="29143-2512">Vazio</span><span class="sxs-lookup"><span data-stu-id="29143-2512">Empty</span></span>|  
|<span data-ttu-id="29143-2513">NULL # #</span><span class="sxs-lookup"><span data-stu-id="29143-2513">#NULL#</span></span>|`DBNull`|  
|<span data-ttu-id="29143-2514"># TRUE ou FALSE de # #</span><span class="sxs-lookup"><span data-stu-id="29143-2514">#TRUE# or #FALSE#</span></span>|<span data-ttu-id="29143-2515">`True` ou `False`</span><span class="sxs-lookup"><span data-stu-id="29143-2515">`True` or `False`</span></span>|  
|#`yyyy-mm-dd hh:mm:ss`#|<span data-ttu-id="29143-2516">A data e/ou hora representada pela expressão</span><span class="sxs-lookup"><span data-stu-id="29143-2516">The date and/or time represented by the expression</span></span>|  
|<span data-ttu-id="29143-2517">#ERROR `errornumber`#</span><span class="sxs-lookup"><span data-stu-id="29143-2517">#ERROR `errornumber`#</span></span>|<span data-ttu-id="29143-2518">`errornumber` (a variável é um objeto marcado como um erro)</span><span class="sxs-lookup"><span data-stu-id="29143-2518">`errornumber` (variable is an object tagged as an error)</span></span>|  
  
 <span data-ttu-id="29143-2519">Caso você atinja o final do arquivo enquanto insere um item de dados, a entrada é interrompida e ocorre um erro.</span><span class="sxs-lookup"><span data-stu-id="29143-2519">If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="29143-2520">O `Input` função não está localizada.</span><span class="sxs-lookup"><span data-stu-id="29143-2520">The `Input` function is not localized.</span></span> <span data-ttu-id="29143-2521">Por exemplo, na versão em alemão, caso você insira 3,14159, ele retorna apenas 3, porque a vírgula é tratada como um separador variável, em vez de uma vírgula decimal.</span><span class="sxs-lookup"><span data-stu-id="29143-2521">For example, in the German version, if you input 3,14159, it returns only 3, because the comma is treated as a variable separator instead of as a decimal point.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="29143-2522">Leitura de um arquivo usando o `Input` função requer `Read` acessar do `FileIOPermissionAccess` enumeração.</span><span class="sxs-lookup"><span data-stu-id="29143-2522">Reading from a file by using the `Input` function requires `Read` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="29143-2523">Para obter mais informações, consulte <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="29143-2523">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29143-2524">Este exemplo usa o `Input` função para ler dados de um arquivo em duas variáveis.</span><span class="sxs-lookup"><span data-stu-id="29143-2524">This example uses the `Input` function to read data from a file into two variables.</span></span> <span data-ttu-id="29143-2525">Este exemplo pressupõe que `TestFile` seja um arquivo tendo várias linhas de dados gravadas usando a função `Write`, cada linha contendo uma cadeia de caracteres entre aspas e um número separado por uma vírgula; por exemplo: ("Hello", 234).</span><span class="sxs-lookup"><span data-stu-id="29143-2525">This example assumes that `TestFile` is a file that has several lines of data written to it using the `Write` function, each line containing a string in quotations and a number separated by a comma, for example: ("Hello", 234).</span></span>  
  
 [!code-vb[VbVbalrCatRef#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="29143-2526">O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="29143-2526">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files.md"><span data-ttu-id="29143-2527">Como gravar texto em arquivos no Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-2527">How to: Write Text to Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md"><span data-ttu-id="29143-2528">Access de arquivo com o Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-2528">File Access with Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files-with-a-streamwriter.md"><span data-ttu-id="29143-2529">Como: Gravar texto em um arquivo com um Streamwriter (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="29143-2529">How to: Write Text to a File with a Streamwriter (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="InputString">
      <MemberSignature Language="C#" Value="public static string InputString (int FileNumber, int CharCount);" />
      <MemberSignature Language="ILAsm" Value=".method public static string InputString(int32 FileNumber, int32 CharCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function InputString (FileNumber As Integer, CharCount As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ InputString(int FileNumber, int CharCount);" />
      <MemberSignature Language="F#" Value="static member InputString : int * int -&gt; string" Usage="Microsoft.VisualBasic.FileSystem.InputString (FileNumber, CharCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="CharCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="29143-2530">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-2530">Required.</span></span> <span data-ttu-id="29143-2531">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="29143-2531">Any valid file number.</span></span></param>
        <param name="CharCount"><span data-ttu-id="29143-2532">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-2532">Required.</span></span> <span data-ttu-id="29143-2533">Qualquer expressão numérica válida que especifica o número de caracteres a serem lidos.</span><span class="sxs-lookup"><span data-stu-id="29143-2533">Any valid numeric expression specifying the number of characters to read.</span></span></param>
        <summary><span data-ttu-id="29143-2534">Retorna o valor <see langword="String" /> que contém caracteres de um arquivo aberto no modo <see langword="Input" /> ou <see langword="Binary" />.</span><span class="sxs-lookup"><span data-stu-id="29143-2534">Returns <see langword="String" /> value that contains characters from a file opened in <see langword="Input" /> or <see langword="Binary" /> mode.</span></span> <span data-ttu-id="29143-2535">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="InputString" />.</span><span class="sxs-lookup"><span data-stu-id="29143-2535">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="InputString" />.</span></span> <span data-ttu-id="29143-2536">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="29143-2536">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <returns><span data-ttu-id="29143-2537">Uma cadeia de caracteres que contém caracteres de um arquivo aberto no modo <see langword="Input" /> ou <see langword="Binary" />.</span><span class="sxs-lookup"><span data-stu-id="29143-2537">A string that contains characters from a file opened in <see langword="Input" /> or <see langword="Binary" /> mode.</span></span> <span data-ttu-id="29143-2538">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="InputString" />.</span><span class="sxs-lookup"><span data-stu-id="29143-2538">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="InputString" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29143-2539">O `InputString` função é fornecida para compatibilidade com versões anteriores e pode afetar o desempenho.</span><span class="sxs-lookup"><span data-stu-id="29143-2539">The `InputString` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="29143-2540">Para aplicativos não herdadas, o `My.Computer.FileSystem` objeto fornece um melhor desempenho.</span><span class="sxs-lookup"><span data-stu-id="29143-2540">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="29143-2541">Para obter mais informações, consulte [acesso a arquivos com o Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="29143-2541">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="29143-2542">Dados lidos com o `InputString` função geralmente é gravada em um arquivo usando `Print` ou `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="29143-2542">Data read with the `InputString` function is usually written to a file by using `Print` or `FilePut`.</span></span> <span data-ttu-id="29143-2543">Use essa função somente com arquivos abertos no `Input` ou `Binary` modo.</span><span class="sxs-lookup"><span data-stu-id="29143-2543">Use this function only with files opened in `Input` or `Binary` mode.</span></span>  
  
 <span data-ttu-id="29143-2544">Ao contrário do `Input` função, o `InputString` função retorna todos os caracteres que ele lê.</span><span class="sxs-lookup"><span data-stu-id="29143-2544">Unlike the `Input` function, the `InputString` function returns all the characters it reads.</span></span> <span data-ttu-id="29143-2545">Isso inclui vírgulas, retornos de carro, alimentação de linha, as aspas e espaços à esquerda.</span><span class="sxs-lookup"><span data-stu-id="29143-2545">This includes commas, carriage returns, line feeds, quotation marks, and leading spaces.</span></span>  
  
 <span data-ttu-id="29143-2546">Com arquivos abertos para `Binary` acessar, uma tentativa de ler o arquivo usando o `InputString` funcionando até `EOF` retorna `True` gera um erro.</span><span class="sxs-lookup"><span data-stu-id="29143-2546">With files opened for `Binary` access, an attempt to read through the file by using the `InputString` function until `EOF` returns `True` generates an error.</span></span> <span data-ttu-id="29143-2547">Use o `LOF` e `Loc` funções em vez de `EOF` quando você ler arquivos binários usando `InputString`, ou use `FileGet` quando você usa o `EOF` função.</span><span class="sxs-lookup"><span data-stu-id="29143-2547">Use the `LOF` and `Loc` functions instead of `EOF` when you read binary files by using `InputString`, or use `FileGet` when you use the `EOF` function.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="29143-2548">Ao ler de arquivos, não tome decisões de segurança sobre o conteúdo do arquivo com base na extensão de nome de arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-2548">When reading from files, do not make security decisions about the contents of the file based on the file name extension.</span></span> <span data-ttu-id="29143-2549">Por exemplo, um arquivo chamado Form1.vb não pode ser um arquivo de origem do Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="29143-2549">For example, a file named Form1.vb may not be a Visual Basic source file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29143-2550">Este exemplo usa o `InputString` função para ler um caractere por vez de um arquivo e imprimi-lo para o `Output` janela.</span><span class="sxs-lookup"><span data-stu-id="29143-2550">This example uses the `InputString` function to read one character at a time from a file and print it to the `Output` window.</span></span> <span data-ttu-id="29143-2551">Este exemplo supõe que `MyFile` é um arquivo de texto que tenha várias linhas de dados de exemplo.</span><span class="sxs-lookup"><span data-stu-id="29143-2551">This example assumes that `MyFile` is a text file that has several lines of sample data.</span></span>  
  
 [!code-vb[VbVbalrCatRef#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="29143-2552"><paramref name="FileNumber" /> não existe.</span><span class="sxs-lookup"><span data-stu-id="29143-2552"><paramref name="FileNumber" /> does not exist.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="29143-2553"><paramref name="CharCount" /> &lt; 0 ou &gt; 214.</span><span class="sxs-lookup"><span data-stu-id="29143-2553"><paramref name="CharCount" /> &lt; 0 or &gt; 214.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Input" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md"><span data-ttu-id="29143-2554">Access de arquivo com o Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-2554">File Access with Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files-with-a-streamwriter.md"><span data-ttu-id="29143-2555">Como: Gravar texto em um arquivo com um Streamwriter (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="29143-2555">How to: Write Text to a File with a Streamwriter (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files.md"><span data-ttu-id="29143-2556">Como gravar texto em arquivos no Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-2556">How to: Write Text to Files in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Kill">
      <MemberSignature Language="C#" Value="public static void Kill (string PathName);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Kill(string PathName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Kill(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Kill (PathName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Kill(System::String ^ PathName);" />
      <MemberSignature Language="F#" Value="static member Kill : string -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Kill PathName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="PathName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="PathName"><span data-ttu-id="29143-2557">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-2557">Required.</span></span> <span data-ttu-id="29143-2558">Uma expressão de cadeia de caracteres que especifica um ou mais nomes de arquivo a serem excluídos.</span><span class="sxs-lookup"><span data-stu-id="29143-2558">A string expression that specifies one or more file names to be deleted.</span></span> <span data-ttu-id="29143-2559"><paramref name="PathName" /> pode incluir o diretório ou a pasta e a unidade.</span><span class="sxs-lookup"><span data-stu-id="29143-2559"><paramref name="PathName" /> can include the directory or folder, and the drive.</span></span></param>
        <summary><span data-ttu-id="29143-2560">Exclui arquivos de um disco.</span><span class="sxs-lookup"><span data-stu-id="29143-2560">Deletes files from a disk.</span></span> <span data-ttu-id="29143-2561">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="Kill" />.</span><span class="sxs-lookup"><span data-stu-id="29143-2561">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Kill" />.</span></span> <span data-ttu-id="29143-2562">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="29143-2562">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> .</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29143-2563">`Kill` suporta o uso de vários caracteres (`*`) e de caractere único (`?`) caracteres curinga para especificar vários arquivos.</span><span class="sxs-lookup"><span data-stu-id="29143-2563">`Kill` supports the use of multiple-character (`*`) and single-character (`?`) wildcards to specify multiple files.</span></span>  
  
 <span data-ttu-id="29143-2564">**Observação de segurança** para executar, o `Kill` função requer `Read` e `PathDiscovery` sinalizadores de <xref:System.Security.Permissions.FileIOPermission> sejam concedidas ao código em execução.</span><span class="sxs-lookup"><span data-stu-id="29143-2564">**Security Note** In order to execute, the `Kill` function requires `Read` and `PathDiscovery` flags of <xref:System.Security.Permissions.FileIOPermission> to be granted to the executing code.</span></span> <span data-ttu-id="29143-2565">Para obter mais informações, consulte <xref:System.Security.SecurityException> [permissões de acesso do código](https://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675)</span><span class="sxs-lookup"><span data-stu-id="29143-2565">For more information, see <xref:System.Security.SecurityException>[Code Access Permissions](https://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29143-2566">Este exemplo usa o `Kill` função para excluir um arquivo de um disco.</span><span class="sxs-lookup"><span data-stu-id="29143-2566">This example uses the `Kill` function to delete a file from a disk.</span></span>  
  
 [!code-vb[VbVbalrCatRef#60](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#60)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="29143-2567">Arquivos de destino abertos.</span><span class="sxs-lookup"><span data-stu-id="29143-2567">Target file(s) open.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="29143-2568">Arquivos de destino não encontrados.</span><span class="sxs-lookup"><span data-stu-id="29143-2568">Target file(s) not found.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="29143-2569">Permissão negada.</span><span class="sxs-lookup"><span data-stu-id="29143-2569">Permission denied.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.RmDir(System.String)" />
        <altmember cref="T:System.IO.IOException" />
        <altmember cref="T:System.IO.FileNotFoundException" />
      </Docs>
    </Member>
    <Member MemberName="LineInput">
      <MemberSignature Language="C#" Value="public static string LineInput (int FileNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public static string LineInput(int32 FileNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.LineInput(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function LineInput (FileNumber As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ LineInput(int FileNumber);" />
      <MemberSignature Language="F#" Value="static member LineInput : int -&gt; string" Usage="Microsoft.VisualBasic.FileSystem.LineInput FileNumber" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="29143-2570">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-2570">Required.</span></span> <span data-ttu-id="29143-2571">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="29143-2571">Any valid file number.</span></span></param>
        <summary><span data-ttu-id="29143-2572">Lê uma única linha de um arquivo sequencial aberto e a atribui a uma variável <see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="29143-2572">Reads a single line from an open sequential file and assigns it to a <see langword="String" /> variable.</span></span></summary>
        <returns><span data-ttu-id="29143-2573">Lê uma única linha de um arquivo sequencial aberto e a atribui a uma variável <see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="29143-2573">Reads a single line from an open sequential file and assigns it to a <see langword="String" /> variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29143-2574">O `LineInput` função é fornecida para compatibilidade com versões anteriores e pode afetar o desempenho.</span><span class="sxs-lookup"><span data-stu-id="29143-2574">The `LineInput` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="29143-2575">Para aplicativos não herdadas, o `My.Computer.FileSystem` objeto fornece um melhor desempenho.</span><span class="sxs-lookup"><span data-stu-id="29143-2575">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="29143-2576">Para obter mais informações, consulte [acesso a arquivos com o Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="29143-2576">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="29143-2577">Dados lidos com `LineInput` costumam ser gravados em um arquivo usando-se `Print`.</span><span class="sxs-lookup"><span data-stu-id="29143-2577">Data read with `LineInput` is usually written to a file by using `Print`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="29143-2578">Ao ler de arquivos, não tome decisões sobre o conteúdo de um arquivo com base na extensão de nome de arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-2578">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="29143-2579">Por exemplo, um arquivo chamado Form1.vb não pode ser um arquivo de origem do Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="29143-2579">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
 <span data-ttu-id="29143-2580">O `LineInput` função lê a partir de um caractere de um arquivo por vez até encontrar um retorno de carro (`Chr(13)`) ou retorno/alimentação de linha de carro (`Chr(13) + Chr(10)`) sequência.</span><span class="sxs-lookup"><span data-stu-id="29143-2580">The `LineInput` function reads from a file one character at a time until it encounters a carriage return (`Chr(13)`) or carriage return/line feed (`Chr(13) + Chr(10)`) sequence.</span></span> <span data-ttu-id="29143-2581">Sequências de feed de linha/retorno de carro são ignoradas em vez de acrescentado à cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="29143-2581">Carriage return/line feed sequences are skipped instead of appended to the character string.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="29143-2582">Leitura de um arquivo usando o `LineInput` função requer `Read` acessar do <xref:System.Security.Permissions.FileIOPermissionAccess> enumeração.</span><span class="sxs-lookup"><span data-stu-id="29143-2582">Reading from a file by using the `LineInput` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29143-2583">Este exemplo usa o `LineInput` função ler uma linha de um arquivo sequencial e atribuí-lo a uma variável.</span><span class="sxs-lookup"><span data-stu-id="29143-2583">This example uses the `LineInput` function to read a line from a sequential file and assign it to a variable.</span></span> <span data-ttu-id="29143-2584">Este exemplo supõe que `TestFile` é um arquivo de texto que tenha várias linhas de dados de exemplo.</span><span class="sxs-lookup"><span data-stu-id="29143-2584">This example assumes that `TestFile` is a text file that has several lines of sample data.</span></span>  
  
 [!code-vb[VbVbalrCatRef#19](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#19)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.EndOfStreamException"><span data-ttu-id="29143-2585">Fim do arquivo atingido.</span><span class="sxs-lookup"><span data-stu-id="29143-2585">End of file reached.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="29143-2586"><paramref name="FileNumber" /> não existe.</span><span class="sxs-lookup"><span data-stu-id="29143-2586"><paramref name="FileNumber" /> does not exist.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Input" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md"><span data-ttu-id="29143-2587">Access de arquivo com o Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-2587">File Access with Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files-with-a-streamwriter.md"><span data-ttu-id="29143-2588">Como: Gravar texto em um arquivo com um Streamwriter (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="29143-2588">How to: Write Text to a File with a Streamwriter (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files.md"><span data-ttu-id="29143-2589">Como gravar texto em arquivos no Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-2589">How to: Write Text to Files in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Loc">
      <MemberSignature Language="C#" Value="public static long Loc (int FileNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public static int64 Loc(int32 FileNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Loc(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Loc (FileNumber As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Loc(int FileNumber);" />
      <MemberSignature Language="F#" Value="static member Loc : int -&gt; int64" Usage="Microsoft.VisualBasic.FileSystem.Loc FileNumber" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="29143-2590">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-2590">Required.</span></span> <span data-ttu-id="29143-2591">Qualquer número de arquivo <see langword="Integer" /> válido.</span><span class="sxs-lookup"><span data-stu-id="29143-2591">Any valid <see langword="Integer" /> file number.</span></span></param>
        <summary><span data-ttu-id="29143-2592">Retorna um valor que especifica a posição de leitura/gravação atual em um arquivo aberto.</span><span class="sxs-lookup"><span data-stu-id="29143-2592">Returns a value that specifies the current read/write position in an open file.</span></span></summary>
        <returns><span data-ttu-id="29143-2593">A posição atual de leitura ou gravação em um arquivo aberto.</span><span class="sxs-lookup"><span data-stu-id="29143-2593">The current read/write position in an open file.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29143-2594">O `Loc` função é baseado em zero; usá-lo para recuperar o primeiro byte em um arquivo, retornará 0.</span><span class="sxs-lookup"><span data-stu-id="29143-2594">The `Loc` function is zero-based; using it to retrieve the first byte in a file will return 0.</span></span>  
  
 <span data-ttu-id="29143-2595">O `Loc` função é fornecida para compatibilidade com versões anteriores e pode afetar o desempenho.</span><span class="sxs-lookup"><span data-stu-id="29143-2595">The `Loc` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="29143-2596">Para aplicativos não herdadas, o `My.Computer.FileSystem` objeto fornece um melhor desempenho.</span><span class="sxs-lookup"><span data-stu-id="29143-2596">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="29143-2597">Para obter mais informações, consulte [acesso a arquivos com o Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="29143-2597">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="29143-2598">O exemplo a seguir descreve o valor de retorno para cada modo de acesso do arquivo:</span><span class="sxs-lookup"><span data-stu-id="29143-2598">The following describes the return value for each file access mode:</span></span>  
  
|<span data-ttu-id="29143-2599">Modo</span><span class="sxs-lookup"><span data-stu-id="29143-2599">Mode</span></span>|<span data-ttu-id="29143-2600">Valor retornado</span><span class="sxs-lookup"><span data-stu-id="29143-2600">Return value</span></span>|  
|-|-|  
|`Random`|<span data-ttu-id="29143-2601">Número do último registro lido ou gravado no arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-2601">Number of the last record read from or written to the file.</span></span>|  
|`Sequential`|<span data-ttu-id="29143-2602">Posição atual do byte no arquivo dividida por 128.</span><span class="sxs-lookup"><span data-stu-id="29143-2602">Current byte position in the file divided by 128.</span></span> <span data-ttu-id="29143-2603">No entanto, a informações retornadas pelo `Loc` para arquivos sequenciais não é usada nem necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-2603">However, information returned by `Loc` for sequential files is neither used nor required.</span></span>|  
|`Binary`|<span data-ttu-id="29143-2604">Posição do último byte lido ou gravado.</span><span class="sxs-lookup"><span data-stu-id="29143-2604">Position of the last byte read or written.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="29143-2605">Este exemplo usa o `Loc` função para retornar a posição de leitura/gravação atual em um arquivo aberto.</span><span class="sxs-lookup"><span data-stu-id="29143-2605">This example uses the `Loc` function to return the current read/write position in an open file.</span></span> <span data-ttu-id="29143-2606">Este exemplo supõe que `MyFile` é um arquivo de texto que tenha várias linhas de dados de exemplo.</span><span class="sxs-lookup"><span data-stu-id="29143-2606">This example assumes that `MyFile` is a text file that has several lines of sample data.</span></span>  
  
 [!code-vb[VbVbalrCatRef#17](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="29143-2607">O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="29143-2607">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.EOF(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.LOF(System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Lock">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="29143-2608">Controla o acesso por outros processos a todo ou à parte de um arquivo aberto usando a função <see langword="Open" />.</span><span class="sxs-lookup"><span data-stu-id="29143-2608">Controls access by other processes to all or part of a file opened by using the <see langword="Open" /> function.</span></span> <span data-ttu-id="29143-2609">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S de arquivo que <see langword="Lock" /> e <see langword="Unlock" />.</span><span class="sxs-lookup"><span data-stu-id="29143-2609">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Lock" /> and <see langword="Unlock" />.</span></span> <span data-ttu-id="29143-2610">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="29143-2610">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Lock">
      <MemberSignature Language="C#" Value="public static void Lock (int FileNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Lock(int32 FileNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Lock(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Lock (FileNumber As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Lock(int FileNumber);" />
      <MemberSignature Language="F#" Value="static member Lock : int -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Lock FileNumber" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="29143-2611">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-2611">Required.</span></span> <span data-ttu-id="29143-2612">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="29143-2612">Any valid file number.</span></span></param>
        <summary><span data-ttu-id="29143-2613">Controla o acesso por outros processos a todo ou à parte de um arquivo aberto usando a função <see langword="Open" />.</span><span class="sxs-lookup"><span data-stu-id="29143-2613">Controls access by other processes to all or part of a file opened by using the <see langword="Open" /> function.</span></span> <span data-ttu-id="29143-2614">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S de arquivo que <see langword="Lock" /> e <see langword="Unlock" />.</span><span class="sxs-lookup"><span data-stu-id="29143-2614">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Lock" /> and <see langword="Unlock" />.</span></span> <span data-ttu-id="29143-2615">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="29143-2615">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29143-2616">O `Lock` e `Unlock` funções são usadas em ambientes onde vários processos podem precisam acessar o mesmo arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-2616">The `Lock` and `Unlock` functions are used in environments where several processes might need access to the same file.</span></span>  
  
 <span data-ttu-id="29143-2617">`Lock` e `Unlock` funções sempre são usadas em pares.</span><span class="sxs-lookup"><span data-stu-id="29143-2617">`Lock` and `Unlock` functions are always used in pairs.</span></span> <span data-ttu-id="29143-2618">Os argumentos para `Lock` e `Unlock` devem ser idênticos.</span><span class="sxs-lookup"><span data-stu-id="29143-2618">The arguments to `Lock` and `Unlock` must be identical.</span></span>  
  
 <span data-ttu-id="29143-2619">Se `Record` ou `FromRecord` e `ToRecord` não for fornecido, o bloqueio será para todo o arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-2619">If `Record`, or `FromRecord` and `ToRecord` are not supplied, the lock will be for the whole file.</span></span> <span data-ttu-id="29143-2620">Se `Record` sozinho for especificado o único registro será bloqueada/desbloqueado.</span><span class="sxs-lookup"><span data-stu-id="29143-2620">If `Record` alone is specified the single record will be locked/unlocked.</span></span>  
  
 <span data-ttu-id="29143-2621">Se o arquivo foi aberto para entrada ou saída, sequencial `Lock` e `Unlock` afetam todo o arquivo, independentemente do intervalo especificado por `FromRecord` e`ToRecord`.</span><span class="sxs-lookup"><span data-stu-id="29143-2621">If the file has been opened for sequential input or output, `Lock` and `Unlock` affect the whole file, regardless of the range specified by `FromRecord` and`ToRecord`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29143-2622">Este exemplo ilustra o uso do `Lock` e `Unlock` funções.</span><span class="sxs-lookup"><span data-stu-id="29143-2622">This example illustrates the use of the `Lock` and `Unlock` functions.</span></span> <span data-ttu-id="29143-2623">Este exemplo pressupõe que `People.txt` seja um arquivo contendo registros da estrutura `Person`.</span><span class="sxs-lookup"><span data-stu-id="29143-2623">This example assumes that `People.txt` is a file that contains records of the structure `Person`.</span></span>  
  
 [!code-vb[VbVbalrCatRef#13](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="29143-2624">O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="29143-2624">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="T:System.IO.IOException" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md"><span data-ttu-id="29143-2625">Access de arquivo com o Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-2625">File Access with Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Lock">
      <MemberSignature Language="C#" Value="public static void Lock (int FileNumber, long Record);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Lock(int32 FileNumber, int64 Record) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Lock(System.Int32,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Lock (FileNumber As Integer, Record As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Lock(int FileNumber, long Record);" />
      <MemberSignature Language="F#" Value="static member Lock : int * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Lock (FileNumber, Record)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Record" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="29143-2626">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-2626">Required.</span></span> <span data-ttu-id="29143-2627">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="29143-2627">Any valid file number.</span></span></param>
        <param name="Record"><span data-ttu-id="29143-2628">Opcional.</span><span class="sxs-lookup"><span data-stu-id="29143-2628">Optional.</span></span> <span data-ttu-id="29143-2629">Número do único registro ou byte a ser bloqueado ou desbloqueado.</span><span class="sxs-lookup"><span data-stu-id="29143-2629">Number of the only record or byte to lock or unlock.</span></span></param>
        <summary><span data-ttu-id="29143-2630">Controla o acesso por outros processos a todo ou à parte de um arquivo aberto usando a função <see langword="Open" />.</span><span class="sxs-lookup"><span data-stu-id="29143-2630">Controls access by other processes to all or part of a file opened by using the <see langword="Open" /> function.</span></span> <span data-ttu-id="29143-2631">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S de arquivo que <see langword="Lock" /> e <see langword="Unlock" />.</span><span class="sxs-lookup"><span data-stu-id="29143-2631">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Lock" /> and <see langword="Unlock" />.</span></span> <span data-ttu-id="29143-2632">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="29143-2632">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29143-2633">O `Lock` e `Unlock` funções são usadas em ambientes onde vários processos podem precisam acessar o mesmo arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-2633">The `Lock` and `Unlock` functions are used in environments where several processes might need access to the same file.</span></span>  
  
 <span data-ttu-id="29143-2634">`Lock` e `Unlock` funções sempre são usadas em pares.</span><span class="sxs-lookup"><span data-stu-id="29143-2634">`Lock` and `Unlock` functions are always used in pairs.</span></span> <span data-ttu-id="29143-2635">Os argumentos para `Lock` e `Unlock` devem ser idênticos.</span><span class="sxs-lookup"><span data-stu-id="29143-2635">The arguments to `Lock` and `Unlock` must be identical.</span></span>  
  
 <span data-ttu-id="29143-2636">Se `Record` ou `FromRecord` e `ToRecord` não for fornecido, o bloqueio será para todo o arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-2636">If `Record`, or `FromRecord` and `ToRecord` are not supplied, the lock will be for the whole file.</span></span> <span data-ttu-id="29143-2637">Se `Record` sozinho for especificado o único registro será bloqueada/desbloqueado.</span><span class="sxs-lookup"><span data-stu-id="29143-2637">If `Record` alone is specified the single record will be locked/unlocked.</span></span>  
  
 <span data-ttu-id="29143-2638">Se o arquivo foi aberto para entrada ou saída, sequencial `Lock` e `Unlock` afetam todo o arquivo, independentemente do intervalo especificado por `FromRecord` e`ToRecord`.</span><span class="sxs-lookup"><span data-stu-id="29143-2638">If the file has been opened for sequential input or output, `Lock` and `Unlock` affect the whole file, regardless of the range specified by `FromRecord` and`ToRecord`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29143-2639">Este exemplo ilustra o uso do `Lock` e `Unlock` funções.</span><span class="sxs-lookup"><span data-stu-id="29143-2639">This example illustrates the use of the `Lock` and `Unlock` functions.</span></span> <span data-ttu-id="29143-2640">Este exemplo pressupõe que `People.txt` seja um arquivo contendo registros da estrutura `Person`.</span><span class="sxs-lookup"><span data-stu-id="29143-2640">This example assumes that `People.txt` is a file that contains records of the structure `Person`.</span></span>  
  
 [!code-vb[VbVbalrCatRef#13](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="29143-2641">O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="29143-2641">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="T:System.IO.IOException" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md"><span data-ttu-id="29143-2642">Access de arquivo com o Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-2642">File Access with Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Lock">
      <MemberSignature Language="C#" Value="public static void Lock (int FileNumber, long FromRecord, long ToRecord);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Lock(int32 FileNumber, int64 FromRecord, int64 ToRecord) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Lock(System.Int32,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Lock (FileNumber As Integer, FromRecord As Long, ToRecord As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Lock(int FileNumber, long FromRecord, long ToRecord);" />
      <MemberSignature Language="F#" Value="static member Lock : int * int64 * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Lock (FileNumber, FromRecord, ToRecord)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="FromRecord" Type="System.Int64" />
        <Parameter Name="ToRecord" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="29143-2643">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-2643">Required.</span></span> <span data-ttu-id="29143-2644">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="29143-2644">Any valid file number.</span></span></param>
        <param name="FromRecord"><span data-ttu-id="29143-2645">Opcional.</span><span class="sxs-lookup"><span data-stu-id="29143-2645">Optional.</span></span> <span data-ttu-id="29143-2646">Número do primeiro registro ou byte a ser bloqueado ou desbloqueado.</span><span class="sxs-lookup"><span data-stu-id="29143-2646">Number of the first record or byte to lock or unlock.</span></span></param>
        <param name="ToRecord"><span data-ttu-id="29143-2647">Opcional.</span><span class="sxs-lookup"><span data-stu-id="29143-2647">Optional.</span></span> <span data-ttu-id="29143-2648">Número do último registro ou byte a ser bloqueado ou desbloqueado.</span><span class="sxs-lookup"><span data-stu-id="29143-2648">Number of the last record or byte to lock or unlock.</span></span></param>
        <summary><span data-ttu-id="29143-2649">Controla o acesso por outros processos a todo ou à parte de um arquivo aberto usando a função <see langword="Open" />.</span><span class="sxs-lookup"><span data-stu-id="29143-2649">Controls access by other processes to all or part of a file opened by using the <see langword="Open" /> function.</span></span> <span data-ttu-id="29143-2650">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S de arquivo que <see langword="Lock" /> e <see langword="Unlock" />.</span><span class="sxs-lookup"><span data-stu-id="29143-2650">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Lock" /> and <see langword="Unlock" />.</span></span> <span data-ttu-id="29143-2651">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="29143-2651">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29143-2652">O `Lock` e `Unlock` funções são usadas em ambientes onde vários processos podem precisam acessar o mesmo arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-2652">The `Lock` and `Unlock` functions are used in environments where several processes might need access to the same file.</span></span>  
  
 <span data-ttu-id="29143-2653">`Lock` e `Unlock` funções sempre são usadas em pares.</span><span class="sxs-lookup"><span data-stu-id="29143-2653">`Lock` and `Unlock` functions are always used in pairs.</span></span> <span data-ttu-id="29143-2654">Os argumentos para `Lock` e `Unlock` devem ser idênticos.</span><span class="sxs-lookup"><span data-stu-id="29143-2654">The arguments to `Lock` and `Unlock` must be identical.</span></span>  
  
 <span data-ttu-id="29143-2655">Se `Record` ou `FromRecord` e `ToRecord` não for fornecido, o bloqueio será para todo o arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-2655">If `Record`, or `FromRecord` and `ToRecord` are not supplied, the lock will be for the whole file.</span></span> <span data-ttu-id="29143-2656">Se `Record` sozinho for especificado o único registro será bloqueada/desbloqueado.</span><span class="sxs-lookup"><span data-stu-id="29143-2656">If `Record` alone is specified the single record will be locked/unlocked.</span></span>  
  
 <span data-ttu-id="29143-2657">Se o arquivo foi aberto para entrada ou saída, sequencial `Lock` e `Unlock` afetam todo o arquivo, independentemente do intervalo especificado por `FromRecord` e`ToRecord`.</span><span class="sxs-lookup"><span data-stu-id="29143-2657">If the file has been opened for sequential input or output, `Lock` and `Unlock` affect the whole file, regardless of the range specified by `FromRecord` and`ToRecord`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29143-2658">Este exemplo ilustra o uso do `Lock` e `Unlock` funções.</span><span class="sxs-lookup"><span data-stu-id="29143-2658">This example illustrates the use of the `Lock` and `Unlock` functions.</span></span> <span data-ttu-id="29143-2659">Este exemplo pressupõe que `People.txt` seja um arquivo contendo registros da estrutura `Person`.</span><span class="sxs-lookup"><span data-stu-id="29143-2659">This example assumes that `People.txt` is a file that contains records of the structure `Person`.</span></span>  
  
 [!code-vb[VbVbalrCatRef#13](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="29143-2660">O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="29143-2660">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="T:System.IO.IOException" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md"><span data-ttu-id="29143-2661">Access de arquivo com o Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-2661">File Access with Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LOF">
      <MemberSignature Language="C#" Value="public static long LOF (int FileNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public static int64 LOF(int32 FileNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.LOF(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function LOF (FileNumber As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long LOF(int FileNumber);" />
      <MemberSignature Language="F#" Value="static member LOF : int -&gt; int64" Usage="Microsoft.VisualBasic.FileSystem.LOF FileNumber" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="29143-2662">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-2662">Required.</span></span> <span data-ttu-id="29143-2663">Um número inteiro que contém um número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="29143-2663">An integer that contains a valid file number.</span></span></param>
        <summary><span data-ttu-id="29143-2664">Retorna o tamanho, em bytes, de um arquivo aberto usando a função <see langword="FileOpen" />.</span><span class="sxs-lookup"><span data-stu-id="29143-2664">Returns the size, in bytes, of a file opened by using the <see langword="FileOpen" /> function.</span></span> <span data-ttu-id="29143-2665">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="LOF" />.</span><span class="sxs-lookup"><span data-stu-id="29143-2665">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="LOF" />.</span></span> <span data-ttu-id="29143-2666">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="29143-2666">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <returns><span data-ttu-id="29143-2667">O tamanho, em bytes, de um arquivo aberto usando a função <see langword="FileOpen" />.</span><span class="sxs-lookup"><span data-stu-id="29143-2667">The size, in bytes, of a file opened by using the <see langword="FileOpen" /> function.</span></span> <span data-ttu-id="29143-2668">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="LOF" />.</span><span class="sxs-lookup"><span data-stu-id="29143-2668">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="LOF" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29143-2669">Use o `FileLen` função para obter o comprimento de um arquivo que não está aberto.</span><span class="sxs-lookup"><span data-stu-id="29143-2669">Use the `FileLen` function to obtain the length of a file that is not open.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29143-2670">Este exemplo usa o `LOF` função para determinar o tamanho de um arquivo aberto.</span><span class="sxs-lookup"><span data-stu-id="29143-2670">This example uses the `LOF` function to determine the size of an open file.</span></span> <span data-ttu-id="29143-2671">Este exemplo supõe que `TestFile` é um arquivo de texto que contém dados de exemplo.</span><span class="sxs-lookup"><span data-stu-id="29143-2671">This example assumes that `TestFile` is a text file that contains sample data.</span></span>  
  
 [!code-vb[VbVbalrCatRef#23](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#23)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="29143-2672">O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="29143-2672">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.EOF(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileLen(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Loc(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="T:System.IO.IOException" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/reading-from-files.md"><span data-ttu-id="29143-2673">Lendo a partir de arquivos no Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-2673">Reading from Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/writing-to-files.md"><span data-ttu-id="29143-2674">Gravando em arquivos no Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-2674">Writing to Files in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MkDir">
      <MemberSignature Language="C#" Value="public static void MkDir (string Path);" />
      <MemberSignature Language="ILAsm" Value=".method public static void MkDir(string Path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.MkDir(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MkDir (Path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void MkDir(System::String ^ Path);" />
      <MemberSignature Language="F#" Value="static member MkDir : string -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.MkDir Path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Path"><span data-ttu-id="29143-2675">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-2675">Required.</span></span> <span data-ttu-id="29143-2676">Uma expressão de cadeia de caracteres que identifica o diretório a ser criado.</span><span class="sxs-lookup"><span data-stu-id="29143-2676">A string expression that identifies the directory to be created.</span></span> <span data-ttu-id="29143-2677">O <paramref name="Path" /> pode incluir a unidade.</span><span class="sxs-lookup"><span data-stu-id="29143-2677">The <paramref name="Path" /> may include the drive.</span></span> <span data-ttu-id="29143-2678">Se nenhuma unidade for especificada, <see langword="MkDir" /> criará um novo diretório na unidade atual.</span><span class="sxs-lookup"><span data-stu-id="29143-2678">If no drive is specified, <see langword="MkDir" /> creates the new directory on the current drive.</span></span></param>
        <summary><span data-ttu-id="29143-2679">Cria um novo diretório.</span><span class="sxs-lookup"><span data-stu-id="29143-2679">Creates a new directory.</span></span> <span data-ttu-id="29143-2680">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="MkDir" />.</span><span class="sxs-lookup"><span data-stu-id="29143-2680">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="MkDir" />.</span></span> <span data-ttu-id="29143-2681">Para obter mais informações, consulte <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.CreateDirectory(System.String)" />.</span><span class="sxs-lookup"><span data-stu-id="29143-2681">For more information, see <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.CreateDirectory(System.String)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29143-2682">Essa função cria um novo diretório.</span><span class="sxs-lookup"><span data-stu-id="29143-2682">This function creates a new directory.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29143-2683">Este exemplo usa o `MkDir` função para criar um diretório.</span><span class="sxs-lookup"><span data-stu-id="29143-2683">This example uses the `MkDir` function to create a directory.</span></span> <span data-ttu-id="29143-2684">Se a unidade não for especificada, o novo diretório é criado na unidade atual.</span><span class="sxs-lookup"><span data-stu-id="29143-2684">If the drive is not specified, the new directory is created on the current drive.</span></span>  
  
 [!code-vb[VbVbalrCatRef#38](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#38)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="29143-2685"><paramref name="Path" /> não foi especificado ou está vazio.</span><span class="sxs-lookup"><span data-stu-id="29143-2685"><paramref name="Path" /> is not specified or is empty.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="29143-2686">Permissão negada.</span><span class="sxs-lookup"><span data-stu-id="29143-2686">Permission denied.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="29143-2687">O diretório já existe.</span><span class="sxs-lookup"><span data-stu-id="29143-2687">Directory already exists.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.ChDir(System.String)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.CurDir" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.RmDir(System.String)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-create-a-directory.md"><span data-ttu-id="29143-2688">Como criar um diretório no Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-2688">How to: Create a Directory in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Print">
      <MemberSignature Language="C#" Value="public static void Print (int FileNumber, params object[] Output);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Print(int32 FileNumber, object[] Output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub Print (FileNumber As Integer, ParamArray Output As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Print(int FileNumber, ... cli::array &lt;System::Object ^&gt; ^ Output);" />
      <MemberSignature Language="F#" Value="static member Print : int * obj[] -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Print (FileNumber, Output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Output" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-1.1">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="29143-2689">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-2689">Required.</span></span> <span data-ttu-id="29143-2690">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="29143-2690">Any valid file number.</span></span></param>
        <param name="Output"><span data-ttu-id="29143-2691">Opcional.</span><span class="sxs-lookup"><span data-stu-id="29143-2691">Optional.</span></span> <span data-ttu-id="29143-2692">Zero ou mais expressões delimitadas por vírgula a serem gravadas em um arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-2692">Zero or more comma-delimited expressions to write to a file.</span></span>  
  
<span data-ttu-id="29143-2693">As configurações do argumento <paramref name="Output" /> são:</span><span class="sxs-lookup"><span data-stu-id="29143-2693">The <paramref name="Output" /> argument settings are:</span></span> 
 <span data-ttu-id="29143-2694"><see langword="T:System.IO.IOException" />: O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="29143-2694"><see langword="T:System.IO.IOException" />: File mode is invalid.</span></span>  
  
 <span data-ttu-id="29143-2695"><see langword="T:System.IO.IOException" />: <paramref name="FileNumber" /> não existe.</span><span class="sxs-lookup"><span data-stu-id="29143-2695"><see langword="T:System.IO.IOException" />: <paramref name="FileNumber" /> does not exist.</span></span></param>
        <summary><span data-ttu-id="29143-2696">Grava dados formatados para exibição em um arquivo sequencial.</span><span class="sxs-lookup"><span data-stu-id="29143-2696">Writes display-formatted data to a sequential file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29143-2697">O `Print` e `PrintLine` funções são fornecidas para compatibilidade com versões anteriores e pode afetar o desempenho.</span><span class="sxs-lookup"><span data-stu-id="29143-2697">The `Print` and `PrintLine` functions are provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="29143-2698">Para aplicativos não herdadas, o `My.Computer.FileSystem` objeto fornece um melhor desempenho.</span><span class="sxs-lookup"><span data-stu-id="29143-2698">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="29143-2699">Para obter mais informações, consulte [acesso a arquivos com o Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="29143-2699">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="29143-2700">`Print` não inclui uma alimentação de linha no final de uma linha; No entanto, `PrintLine` incluem uma alimentação de linha.</span><span class="sxs-lookup"><span data-stu-id="29143-2700">`Print` does not include a line feed at the end of a line; however, `PrintLine` does include a line feed.</span></span>  
  
 <span data-ttu-id="29143-2701">Dados gravados com `Print` costumam ser lidos de um arquivo usando `LineInput` ou `Input`.</span><span class="sxs-lookup"><span data-stu-id="29143-2701">Data written with `Print` is usually read from a file by using `LineInput` or `Input`.</span></span>  
  
 <span data-ttu-id="29143-2702">Se você omitir `Output` para `PrintLine`, uma linha em branco é impressa no arquivo; para `Print`, nada é de saída.</span><span class="sxs-lookup"><span data-stu-id="29143-2702">If you omit `Output` for `PrintLine`, a blank line is printed to the file; for `Print`, nothing is output.</span></span> <span data-ttu-id="29143-2703">Várias expressões separadas com uma vírgula serão alinhadas nos limites de tabulação, mas a mistura de vírgulas e `TAB` pode causar resultados inconsistentes.</span><span class="sxs-lookup"><span data-stu-id="29143-2703">Multiple expressions separated with a comma will be aligned on tab boundaries, but mixing commas and `TAB` may cause inconsistent results.</span></span>  
  
 <span data-ttu-id="29143-2704">Para `Boolean` dados, seja `True` ou `False` é impresso.</span><span class="sxs-lookup"><span data-stu-id="29143-2704">For `Boolean` data, either `True` or `False` is printed.</span></span> <span data-ttu-id="29143-2705">O `True` e `False` palavras-chave não são traduzidas, independentemente da localidade.</span><span class="sxs-lookup"><span data-stu-id="29143-2705">The `True` and `False` keywords are not translated, regardless of the locale.</span></span>  
  
 <span data-ttu-id="29143-2706">Dados de data são gravados no arquivo usando o formato de data abreviada padrão reconhecido pelo seu sistema.</span><span class="sxs-lookup"><span data-stu-id="29143-2706">Date data is written to the file by using the standard short date format recognized by your system.</span></span> <span data-ttu-id="29143-2707">Quando a data ou o componente de tempo está ausente ou zero, somente a parte fornecida é gravada no arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-2707">When either the date or the time component is missing or zero, only the part provided is written to the file.</span></span>  
  
 <span data-ttu-id="29143-2708">Nada será gravado no arquivo se `Output` dados estão vazios.</span><span class="sxs-lookup"><span data-stu-id="29143-2708">Nothing is written to the file if `Output` data is empty.</span></span> <span data-ttu-id="29143-2709">No entanto, se `Output` dados de lista estão `DBNull`, `Null` é gravada no arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-2709">However, if `Output` list data is `DBNull`, `Null` is written to the file.</span></span>  
  
 <span data-ttu-id="29143-2710">Para `Error` dados, a saída é exibida como `Error errorcode`.</span><span class="sxs-lookup"><span data-stu-id="29143-2710">For `Error` data, the output appears as `Error errorcode`.</span></span> <span data-ttu-id="29143-2711">O `Error` palavra-chave não será convertido, independentemente da localidade.</span><span class="sxs-lookup"><span data-stu-id="29143-2711">The `Error` keyword is not translated regardless of the locale.</span></span>  
  
 <span data-ttu-id="29143-2712">Todos os dados gravados no arquivo usando `Print` internacionalmente reconhece; ou seja, os dados são formatados corretamente usando o separador decimal apropriado.</span><span class="sxs-lookup"><span data-stu-id="29143-2712">All data written to the file by using `Print` is internationally aware; that is, the data is correctly formatted using the appropriate decimal separator.</span></span> <span data-ttu-id="29143-2713">Se o usuário deseja gerar a saída de dados para uso em várias localidades, `Write` deve ser usado.</span><span class="sxs-lookup"><span data-stu-id="29143-2713">If the user wishes to output data for use by multiple locales, `Write` should be used.</span></span>  
  
 <span data-ttu-id="29143-2714">Gravando em um arquivo usando o `Print` ou `PrintLine` funções requer `Write` acessar do `FileIOPermissionAccess` enumeração.</span><span class="sxs-lookup"><span data-stu-id="29143-2714">Writing to a file by using the `Print` or `PrintLine` functions requires `Write` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="29143-2715">Para obter mais informações, consulte <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="29143-2715">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess> .</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29143-2716">Este exemplo usa o `Print` e `PrintLine` funções para gravar dados em um arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-2716">This example uses the `Print` and `PrintLine` functions to write data to a file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#53](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#53)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SPC(System.Int16)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.TAB" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md"><span data-ttu-id="29143-2717">Access de arquivo com o Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-2717">File Access with Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files.md"><span data-ttu-id="29143-2718">Como gravar texto em arquivos no Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-2718">How to: Write Text to Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files-with-a-streamwriter.md"><span data-ttu-id="29143-2719">Como: Gravar texto em um arquivo com um Streamwriter (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="29143-2719">How to: Write Text to a File with a Streamwriter (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="PrintLine">
      <MemberSignature Language="C#" Value="public static void PrintLine (int FileNumber, params object[] Output);" />
      <MemberSignature Language="ILAsm" Value=".method public static void PrintLine(int32 FileNumber, object[] Output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrintLine (FileNumber As Integer, ParamArray Output As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void PrintLine(int FileNumber, ... cli::array &lt;System::Object ^&gt; ^ Output);" />
      <MemberSignature Language="F#" Value="static member PrintLine : int * obj[] -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.PrintLine (FileNumber, Output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Output" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-1.1">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="29143-2720">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-2720">Required.</span></span> <span data-ttu-id="29143-2721">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="29143-2721">Any valid file number.</span></span></param>
        <param name="Output"><span data-ttu-id="29143-2722">Opcional.</span><span class="sxs-lookup"><span data-stu-id="29143-2722">Optional.</span></span> <span data-ttu-id="29143-2723">Zero ou mais expressões delimitadas por vírgula a serem gravadas em um arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-2723">Zero or more comma-delimited expressions to write to a file.</span></span>  
  
<span data-ttu-id="29143-2724">As configurações do argumento <paramref name="Output" /> são:</span><span class="sxs-lookup"><span data-stu-id="29143-2724">The <paramref name="Output" /> argument settings are:</span></span> 
 <span data-ttu-id="29143-2725"><see langword="T:System.IO.IOException" />: O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="29143-2725"><see langword="T:System.IO.IOException" />: File mode is invalid.</span></span>  
  
 <span data-ttu-id="29143-2726"><see langword="T:System.IO.IOException" />: <paramref name="FileNumber" /> não existe.</span><span class="sxs-lookup"><span data-stu-id="29143-2726"><see langword="T:System.IO.IOException" />: <paramref name="FileNumber" /> does not exist.</span></span></param>
        <summary><span data-ttu-id="29143-2727">Grava dados formatados para exibição em um arquivo sequencial.</span><span class="sxs-lookup"><span data-stu-id="29143-2727">Writes display-formatted data to a sequential file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29143-2728">O `Print` e `PrintLine` funções são fornecidas para compatibilidade com versões anteriores e pode afetar o desempenho.</span><span class="sxs-lookup"><span data-stu-id="29143-2728">The `Print` and `PrintLine` functions are provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="29143-2729">Para aplicativos não herdadas, o `My.Computer.FileSystem` objeto fornece um melhor desempenho.</span><span class="sxs-lookup"><span data-stu-id="29143-2729">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="29143-2730">Para obter mais informações, consulte [acesso a arquivos com o Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="29143-2730">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="29143-2731">`Print` não inclui uma alimentação de linha no final de uma linha; No entanto,`PrintLine` incluem uma alimentação de linha.</span><span class="sxs-lookup"><span data-stu-id="29143-2731">`Print` does not include a line feed at the end of a line; however,`PrintLine` does include a line feed.</span></span>  
  
 <span data-ttu-id="29143-2732">Dados gravados com `Print` costumam ser lidos de um arquivo usando `LineInput` ou `Input`.</span><span class="sxs-lookup"><span data-stu-id="29143-2732">Data written with `Print` is usually read from a file by using `LineInput` or `Input`.</span></span>  
  
 <span data-ttu-id="29143-2733">Se você omitir `Output` para `PrintLine`, uma linha em branco é impressa no arquivo; para `Print`, nada é de saída.</span><span class="sxs-lookup"><span data-stu-id="29143-2733">If you omit `Output` for `PrintLine`, a blank line is printed to the file; for `Print`, nothing is output.</span></span> <span data-ttu-id="29143-2734">Várias expressões separadas com uma vírgula serão alinhadas nos limites de tabulação, mas a mistura de vírgulas e `TAB` pode causar resultados inconsistentes.</span><span class="sxs-lookup"><span data-stu-id="29143-2734">Multiple expressions separated with a comma will be aligned on tab boundaries, but mixing commas and `TAB` may cause inconsistent results.</span></span>  
  
 <span data-ttu-id="29143-2735">Para `Boolean` dados, seja `True` ou `False` é impresso.</span><span class="sxs-lookup"><span data-stu-id="29143-2735">For `Boolean` data, either `True` or `False` is printed.</span></span> <span data-ttu-id="29143-2736">O `True` e `False` palavras-chave não são traduzidas, independentemente da localidade.</span><span class="sxs-lookup"><span data-stu-id="29143-2736">The `True` and `False` keywords are not translated, regardless of the locale.</span></span>  
  
 <span data-ttu-id="29143-2737">Dados de data são gravados no arquivo usando o formato de data abreviada padrão reconhecido pelo sistema.</span><span class="sxs-lookup"><span data-stu-id="29143-2737">Date data is written to the file by using the standard short date format recognized by the system.</span></span> <span data-ttu-id="29143-2738">Quando a data ou o componente de tempo está ausente ou zero, somente a parte fornecida é gravada no arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-2738">When either the date or the time component is missing or zero, only the part provided is written to the file.</span></span>  
  
 <span data-ttu-id="29143-2739">Nada será gravado no arquivo se `Output` dados estão vazios.</span><span class="sxs-lookup"><span data-stu-id="29143-2739">Nothing is written to the file if `Output` data is empty.</span></span> <span data-ttu-id="29143-2740">No entanto, se `Output` dados de lista estão `DBNull`, `Null` é gravada no arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-2740">However, if `Output` list data is `DBNull`, `Null` is written to the file.</span></span>  
  
 <span data-ttu-id="29143-2741">Para `Error` dados, a saída é exibida como `Error errorcode`.</span><span class="sxs-lookup"><span data-stu-id="29143-2741">For `Error` data, the output appears as `Error errorcode`.</span></span> <span data-ttu-id="29143-2742">O `Error` palavra-chave não será convertido, independentemente da localidade.</span><span class="sxs-lookup"><span data-stu-id="29143-2742">The `Error` keyword is not translated regardless of the locale.</span></span>  
  
 <span data-ttu-id="29143-2743">Todos os dados gravados no arquivo usando `Print` internacionalmente reconhece; ou seja, os dados são formatados corretamente usando o separador decimal apropriado.</span><span class="sxs-lookup"><span data-stu-id="29143-2743">All data written to the file by using `Print` is internationally aware; that is, the data is correctly formatted using the appropriate decimal separator.</span></span> <span data-ttu-id="29143-2744">Se o usuário deseja gerar a saída de dados para uso em várias localidades, `Write` deve ser usado.</span><span class="sxs-lookup"><span data-stu-id="29143-2744">If the user wishes to output data for use by multiple locales, `Write` should be used.</span></span>  
  
 <span data-ttu-id="29143-2745">Gravando em um arquivo usando o `Print` ou `PrintLine` funções requer `Write` acessar do `FileIOPermissionAccess` enumeração.</span><span class="sxs-lookup"><span data-stu-id="29143-2745">Writing to a file by using the `Print` or `PrintLine` functions requires `Write` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="29143-2746">Para obter mais informações, consulte <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="29143-2746">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess> .</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29143-2747">Este exemplo usa o `Print` e `PrintLine` funções para gravar dados em um arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-2747">This example uses the `Print` and `PrintLine` functions to write data to a file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#53](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#53)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SPC(System.Int16)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.TAB" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md"><span data-ttu-id="29143-2748">Access de arquivo com o Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-2748">File Access with Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files.md"><span data-ttu-id="29143-2749">Como gravar texto em arquivos no Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-2749">How to: Write Text to Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files-with-a-streamwriter.md"><span data-ttu-id="29143-2750">Como: Gravar texto em um arquivo com um Streamwriter (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="29143-2750">How to: Write Text to a File with a Streamwriter (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Rename">
      <MemberSignature Language="C#" Value="public static void Rename (string OldPath, string NewPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Rename(string OldPath, string NewPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Rename(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Rename (OldPath As String, NewPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Rename(System::String ^ OldPath, System::String ^ NewPath);" />
      <MemberSignature Language="F#" Value="static member Rename : string * string -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Rename (OldPath, NewPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="OldPath" Type="System.String" />
        <Parameter Name="NewPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="OldPath"><span data-ttu-id="29143-2751">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-2751">Required.</span></span> <span data-ttu-id="29143-2752">Uma expressão de cadeia de caracteres que especifica o local e o nome do arquivo existente.</span><span class="sxs-lookup"><span data-stu-id="29143-2752">A string expression that specifies the existing file name and location.</span></span> <span data-ttu-id="29143-2753"><paramref name="OldPath" /> pode incluir o diretório e a unidade do arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-2753"><paramref name="OldPath" /> may include the directory, and drive, of the file.</span></span></param>
        <param name="NewPath"><span data-ttu-id="29143-2754">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-2754">Required.</span></span> <span data-ttu-id="29143-2755">Uma expressão de cadeia de caracteres que especifica o local e o nome do novo arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-2755">A string expression that specifies the new file name and location.</span></span> <span data-ttu-id="29143-2756"><paramref name="NewPath" /> pode incluir o diretório e a unidade do local de destino.</span><span class="sxs-lookup"><span data-stu-id="29143-2756"><paramref name="NewPath" /> may include directory and drive of the destination location.</span></span> <span data-ttu-id="29143-2757">O nome do arquivo especificado por <paramref name="NewPath" /> não pode já existir.</span><span class="sxs-lookup"><span data-stu-id="29143-2757">The file name specified by <paramref name="NewPath" /> cannot already exist.</span></span></param>
        <summary><span data-ttu-id="29143-2758">Renomeia um arquivo de disco ou um diretório.</span><span class="sxs-lookup"><span data-stu-id="29143-2758">Renames a disk file or directory.</span></span> <span data-ttu-id="29143-2759">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="Rename" />.</span><span class="sxs-lookup"><span data-stu-id="29143-2759">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Rename" />.</span></span> <span data-ttu-id="29143-2760">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="29143-2760">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29143-2761">O`Rename` função renomeia um arquivo e a move para um diretório diferente, se necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-2761">The`Rename` function renames a file and moves it to a different directory, if it is required.</span></span> <span data-ttu-id="29143-2762">O `Rename` função pode mover um arquivo em unidades, mas ele só pode renomear um diretório existente quando ambos `NewPath` e `OldPath` estão localizados na mesma unidade.</span><span class="sxs-lookup"><span data-stu-id="29143-2762">The `Rename` function can move a file across drives, but it can only rename an existing directory when both `NewPath` and `OldPath` are located on the same drive.</span></span> <span data-ttu-id="29143-2763">`Rename` não é possível criar um novo arquivo ou diretório.</span><span class="sxs-lookup"><span data-stu-id="29143-2763">`Rename` cannot create a new file or directory.</span></span>  
  
 <span data-ttu-id="29143-2764">Usando o `Rename` função em um arquivo aberto produz um erro.</span><span class="sxs-lookup"><span data-stu-id="29143-2764">Using the `Rename` function on an open file produces an error.</span></span> <span data-ttu-id="29143-2765">Você deve fechar um arquivo aberto antes de renomeá-lo.</span><span class="sxs-lookup"><span data-stu-id="29143-2765">You must close an open file before renaming it.</span></span> <span data-ttu-id="29143-2766">`Rename` argumentos não podem incluir caracteres curinga de caractere único (?) e de vários caracteres (\*).</span><span class="sxs-lookup"><span data-stu-id="29143-2766">`Rename` arguments cannot include multiple-character (\*) and single-character (?) wildcards.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="29143-2767">Ao usar `Rename` para copiar um arquivo de um local desprotegido para um local protegido, o arquivo manterá os direitos menos restritos.</span><span class="sxs-lookup"><span data-stu-id="29143-2767">When using `Rename` to copy a file from an unprotected location to a protected location, the file retains the less restricted rights.</span></span> <span data-ttu-id="29143-2768">Verifique se você não está apresentando um possível risco à segurança.</span><span class="sxs-lookup"><span data-stu-id="29143-2768">Check to make sure that you are not introducing a possible security risk.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29143-2769">Este exemplo usa o `Rename` função para renomear um arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-2769">This example uses the `Rename` function to rename a file.</span></span> <span data-ttu-id="29143-2770">Para fins deste exemplo, suponha que os diretórios que são especificados já existem.</span><span class="sxs-lookup"><span data-stu-id="29143-2770">For purposes of this example, assume that the directories that are specified already exist.</span></span>  
  
 [!code-vb[VbVbalrCatRef#30](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#30)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="29143-2771">Caminho inválido.</span><span class="sxs-lookup"><span data-stu-id="29143-2771">Path is invalid.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="29143-2772">O arquivo <paramref name="OldPath" /> não existe.</span><span class="sxs-lookup"><span data-stu-id="29143-2772"><paramref name="OldPath" /> file does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="29143-2773">Não é possível renomear com outro dispositivo.</span><span class="sxs-lookup"><span data-stu-id="29143-2773">Cannot rename to different device.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Kill(System.String)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.FileNotFoundException" />
        <altmember cref="T:System.IO.IOException" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-rename-a-file.md"><span data-ttu-id="29143-2774">Como renomear um arquivo no Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-2774">How to: Rename a File in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public static void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public static void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Reset();" />
      <MemberSignature Language="F#" Value="static member Reset : unit -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="29143-2775">Fecha todos os arquivos de disco abertos usando a função <see langword="FileOpen" />.</span><span class="sxs-lookup"><span data-stu-id="29143-2775">Closes all disk files opened by using the <see langword="FileOpen" /> function.</span></span> <span data-ttu-id="29143-2776">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="Reset" />.</span><span class="sxs-lookup"><span data-stu-id="29143-2776">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Reset" />.</span></span> <span data-ttu-id="29143-2777">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="29143-2777">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29143-2778">O `Reset` função fecha todos os arquivos ativos abertos pela `FileOpen` de função e tem a mesma função que `FileClose()` sem parâmetros.</span><span class="sxs-lookup"><span data-stu-id="29143-2778">The `Reset` function closes all active files opened by the `FileOpen` function and has the same function as `FileClose()` without any parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29143-2779">Este exemplo usa o `Reset` função para fechar todos os arquivos abertos e gravar o conteúdo de todos os buffers de arquivo em disco.</span><span class="sxs-lookup"><span data-stu-id="29143-2779">This example uses the `Reset` function to close all open files and write the contents of all file buffers to disk.</span></span> <span data-ttu-id="29143-2780">Observe o uso do `Object` variável `FileNumber` como uma cadeia de caracteres e um número.</span><span class="sxs-lookup"><span data-stu-id="29143-2780">Note the use of the `Object` variable `FileNumber` as both a string and a number.</span></span>  
  
 [!code-vb[VbVbalrCatRef#12](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileClose(System.Int32[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/end-statement.md"><span data-ttu-id="29143-2781">Instrução End</span><span class="sxs-lookup"><span data-stu-id="29143-2781">End Statement</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RmDir">
      <MemberSignature Language="C#" Value="public static void RmDir (string Path);" />
      <MemberSignature Language="ILAsm" Value=".method public static void RmDir(string Path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.RmDir(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RmDir (Path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RmDir(System::String ^ Path);" />
      <MemberSignature Language="F#" Value="static member RmDir : string -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.RmDir Path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Path"><span data-ttu-id="29143-2782">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-2782">Required.</span></span> <span data-ttu-id="29143-2783">Uma expressão de cadeia de caracteres que identifica o diretório ou a pasta a remover.</span><span class="sxs-lookup"><span data-stu-id="29143-2783">A string expression that identifies the directory or folder to be removed.</span></span> <span data-ttu-id="29143-2784">O <paramref name="Path" /> pode incluir a unidade.</span><span class="sxs-lookup"><span data-stu-id="29143-2784"><paramref name="Path" /> can include the drive.</span></span> <span data-ttu-id="29143-2785">Se nenhuma unidade for especificada, <see langword="RmDir" /> removerá o diretório na unidade atual.</span><span class="sxs-lookup"><span data-stu-id="29143-2785">If no drive is specified, <see langword="RmDir" /> removes the directory on the current drive.</span></span></param>
        <summary><span data-ttu-id="29143-2786">Remove um diretório existente.</span><span class="sxs-lookup"><span data-stu-id="29143-2786">Removes an existing directory.</span></span> <span data-ttu-id="29143-2787">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="RmDir" />.</span><span class="sxs-lookup"><span data-stu-id="29143-2787">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="RmDir" />.</span></span> <span data-ttu-id="29143-2788">Para obter mais informações, consulte <see cref="Overload:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory" />.</span><span class="sxs-lookup"><span data-stu-id="29143-2788">For more information, see <see cref="Overload:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29143-2789">Ocorrerá um erro se você tentar usar `RmDir` em um diretório que contém os arquivos.</span><span class="sxs-lookup"><span data-stu-id="29143-2789">An error occurs if you try to use `RmDir` on a directory that contains files.</span></span> <span data-ttu-id="29143-2790">Use o `Kill` função para excluir todos os arquivos antes de tentar remover um diretório.</span><span class="sxs-lookup"><span data-stu-id="29143-2790">Use the `Kill` function to delete all files before you try to remove a directory.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29143-2791">Este exemplo usa o `RmDir` function para remover um diretório existente.</span><span class="sxs-lookup"><span data-stu-id="29143-2791">This example uses the `RmDir` function to remove an existing directory.</span></span>  
  
 [!code-vb[VbVbalrCatRef#31](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#31)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="29143-2792"><paramref name="Path" /> não foi especificado ou está vazio.</span><span class="sxs-lookup"><span data-stu-id="29143-2792"><paramref name="Path" /> is not specified or is empty.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="29143-2793">O diretório de destino contém arquivos.</span><span class="sxs-lookup"><span data-stu-id="29143-2793">Target directory contains files.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="29143-2794">O diretório não existe.</span><span class="sxs-lookup"><span data-stu-id="29143-2794">Directory does not exist.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.ChDir(System.String)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.CurDir" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Kill(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.MkDir(System.String)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
        <altmember cref="T:System.IO.FileNotFoundException" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Seek">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="29143-2795">Retorna um <see langword="Long" /> que especifica a posição de leitura/gravação atual em um arquivo aberto usando a função <see langword="FileOpen" /> ou define a posição para a próxima operação de leitura/gravação em um arquivo aberto usando a função <see langword="FileOpen" />.</span><span class="sxs-lookup"><span data-stu-id="29143-2795">Returns a <see langword="Long" /> specifying the current read/write position in a file opened by using the <see langword="FileOpen" /> function, or sets the position for the next read/write operation in a file opened by using the <see langword="FileOpen" /> function.</span></span> <span data-ttu-id="29143-2796">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="Seek" />.</span><span class="sxs-lookup"><span data-stu-id="29143-2796">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Seek" />.</span></span> <span data-ttu-id="29143-2797">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="29143-2797">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public static long Seek (int FileNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public static int64 Seek(int32 FileNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Seek(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Seek (FileNumber As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Seek(int FileNumber);" />
      <MemberSignature Language="F#" Value="static member Seek : int -&gt; int64" Usage="Microsoft.VisualBasic.FileSystem.Seek FileNumber" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="29143-2798">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-2798">Required.</span></span> <span data-ttu-id="29143-2799">Um <see langword="Integer" /> que contém um número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="29143-2799">An <see langword="Integer" /> that contains a valid file number.</span></span></param>
        <summary><span data-ttu-id="29143-2800">Retorna um <see langword="Long" /> que especifica a posição de leitura/gravação atual em um arquivo aberto usando a função <see langword="FileOpen" /> ou define a posição para a próxima operação de leitura/gravação em um arquivo aberto usando a função <see langword="FileOpen" />.</span><span class="sxs-lookup"><span data-stu-id="29143-2800">Returns a <see langword="Long" /> specifying the current read/write position in a file opened by using the <see langword="FileOpen" /> function, or sets the position for the next read/write operation in a file opened by using the <see langword="FileOpen" /> function.</span></span> <span data-ttu-id="29143-2801">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="Seek" />.</span><span class="sxs-lookup"><span data-stu-id="29143-2801">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Seek" />.</span></span> <span data-ttu-id="29143-2802">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="29143-2802">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <returns><span data-ttu-id="29143-2803">Um <see langword="Long" /> que especifica a posição de leitura/gravação atual em um arquivo aberto usando a função <see langword="FileOpen" /> ou define a posição para a próxima operação de leitura/gravação em um arquivo aberto usando a função <see langword="FileOpen" />.</span><span class="sxs-lookup"><span data-stu-id="29143-2803">A <see langword="Long" /> specifying the current read/write position in a file opened by using the <see langword="FileOpen" /> function, or sets the position for the next read/write operation in a file opened by using the <see langword="FileOpen" /> function.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29143-2804">`Seek` Retorna um valor entre 1 e 2.147.483.647 (equivalente a 2 ^ 31 - 1), inclusive.</span><span class="sxs-lookup"><span data-stu-id="29143-2804">`Seek` returns a value between 1 and 2,147,483,647 (equivalent to 2^31 - 1), inclusive.</span></span>  
  
 <span data-ttu-id="29143-2805">O exemplo a seguir descreve os valores retornados para cada modo de acesso do arquivo:</span><span class="sxs-lookup"><span data-stu-id="29143-2805">The following describes the return values for each file access mode:</span></span>  
  
|<span data-ttu-id="29143-2806">Modo</span><span class="sxs-lookup"><span data-stu-id="29143-2806">Mode</span></span>|<span data-ttu-id="29143-2807">Valor de Retorno</span><span class="sxs-lookup"><span data-stu-id="29143-2807">Return Value</span></span>|  
|-|-|  
|`Random`|<span data-ttu-id="29143-2808">Número do próximo registro lido ou gravado</span><span class="sxs-lookup"><span data-stu-id="29143-2808">Number of the next record read or written</span></span>|  
|<span data-ttu-id="29143-2809">`Binary`, `Input`, `Output`, `Append`</span><span class="sxs-lookup"><span data-stu-id="29143-2809">`Binary`, `Input`, `Output`, `Append`</span></span>|<span data-ttu-id="29143-2810">Posição do byte em que a próxima operação ocorre.</span><span class="sxs-lookup"><span data-stu-id="29143-2810">Byte position at which the next operation occurs.</span></span> <span data-ttu-id="29143-2811">O primeiro byte em um arquivo está na posição 1, o segundo byte estiver na posição 2 e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="29143-2811">The first byte in a file is at position 1, the second byte is at position 2, and so on.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="29143-2812">Este exemplo usa o `Seek` função para retornar a posição atual do arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-2812">This example uses the `Seek` function to return the current file position.</span></span> <span data-ttu-id="29143-2813">O exemplo supõe `TestFile` é um arquivo que contém registros de uma estrutura `Record`.</span><span class="sxs-lookup"><span data-stu-id="29143-2813">The example assumes `TestFile` is a file that contains records of the structure `Record`.</span></span>  
  
 [!code-vb[VbVbalrCatRef#47](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#47)]  
  
 <span data-ttu-id="29143-2814">Para arquivos abertos no `Random` modo, `Seek` retorna o número do próximo registro.</span><span class="sxs-lookup"><span data-stu-id="29143-2814">For files opened in `Random` mode, `Seek` returns the number of next record.</span></span>  
  
 [!code-vb[VbVbalrCatRef#48](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#48)]  
  
 <span data-ttu-id="29143-2815">Para arquivos abertos em modos diferentes de `Random` modo, `Seek` retorna a posição do byte em que a próxima operação ocorre.</span><span class="sxs-lookup"><span data-stu-id="29143-2815">For files opened in modes other than `Random` mode, `Seek` returns the byte position at which the next operation occurs.</span></span> <span data-ttu-id="29143-2816">Suponha que `TestFile` seja um arquivo contendo várias linhas de texto.</span><span class="sxs-lookup"><span data-stu-id="29143-2816">Assume `TestFile` is a file that contains several lines of text.</span></span>  
  
 [!code-vb[VbVbalrCatRef#49](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#49)]  
  
 <span data-ttu-id="29143-2817">Este exemplo usa o `Seek` função para definir a posição para a próxima leitura ou gravação em um arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-2817">This example uses the `Seek` function to set the position for the next read or write in a file.</span></span>  
  
 <span data-ttu-id="29143-2818">Para arquivos abertos em modos diferentes de `Random` modo, `Seek` define a posição do byte em que a próxima operação ocorre.</span><span class="sxs-lookup"><span data-stu-id="29143-2818">For files opened in modes other than `Random` mode, `Seek` sets the byte position at which the next operation occurs.</span></span> <span data-ttu-id="29143-2819">Suponha que `TestFile` seja um arquivo contendo várias linhas de texto.</span><span class="sxs-lookup"><span data-stu-id="29143-2819">Assume `TestFile` is a file that contains several lines of text.</span></span>  
  
 [!code-vb[VbVbalrCatRef#52](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#52)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="29143-2820">O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="29143-2820">File mode is invalid.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Loc(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:System.IO.IOException" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/reading-from-files.md"><span data-ttu-id="29143-2821">Lendo a partir de arquivos no Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-2821">Reading from Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/writing-to-files.md"><span data-ttu-id="29143-2822">Gravando em arquivos no Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-2822">Writing to Files in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public static void Seek (int FileNumber, long Position);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Seek(int32 FileNumber, int64 Position) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Seek(System.Int32,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Seek (FileNumber As Integer, Position As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Seek(int FileNumber, long Position);" />
      <MemberSignature Language="F#" Value="static member Seek : int * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Seek (FileNumber, Position)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Position" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="29143-2823">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-2823">Required.</span></span> <span data-ttu-id="29143-2824">Um <see langword="Integer" /> que contém um número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="29143-2824">An <see langword="Integer" /> that contains a valid file number.</span></span></param>
        <param name="Position"><span data-ttu-id="29143-2825">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-2825">Required.</span></span> <span data-ttu-id="29143-2826">Número no intervalo de 1 a 2.147.483.647 (incluindo este número), que indica o local em que a próxima operação de leitura/gravação deverá ocorrer.</span><span class="sxs-lookup"><span data-stu-id="29143-2826">Number in the range 1-2,147,483,647, inclusive, that indicates where the next read/write operation should occur.</span></span></param>
        <summary><span data-ttu-id="29143-2827">Retorna um <see langword="Long" /> que especifica a posição de leitura/gravação atual em um arquivo aberto usando a função <see langword="FileOpen" /> ou define a posição para a próxima operação de leitura/gravação em um arquivo aberto usando a função <see langword="FileOpen" />.</span><span class="sxs-lookup"><span data-stu-id="29143-2827">Returns a <see langword="Long" /> specifying the current read/write position in a file opened by using the <see langword="FileOpen" /> function, or sets the position for the next read/write operation in a file opened by using the <see langword="FileOpen" /> function.</span></span> <span data-ttu-id="29143-2828">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="Seek" />.</span><span class="sxs-lookup"><span data-stu-id="29143-2828">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Seek" />.</span></span> <span data-ttu-id="29143-2829">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="29143-2829">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29143-2830">`Seek` Retorna um valor entre 1 e 2.147.483.647 (equivalente a 2 ^ 31 - 1), inclusive.</span><span class="sxs-lookup"><span data-stu-id="29143-2830">`Seek` returns a value between 1 and 2,147,483,647 (equivalent to 2^31 - 1), inclusive.</span></span>  
  
 <span data-ttu-id="29143-2831">O exemplo a seguir descreve os valores retornados para cada modo de acesso do arquivo:</span><span class="sxs-lookup"><span data-stu-id="29143-2831">The following describes the return values for each file access mode:</span></span>  
  
|<span data-ttu-id="29143-2832">Modo</span><span class="sxs-lookup"><span data-stu-id="29143-2832">Mode</span></span>|<span data-ttu-id="29143-2833">Valor de Retorno</span><span class="sxs-lookup"><span data-stu-id="29143-2833">Return Value</span></span>|  
|-|-|  
|`Random`|<span data-ttu-id="29143-2834">Número do próximo registro lido ou gravado</span><span class="sxs-lookup"><span data-stu-id="29143-2834">Number of the next record read or written</span></span>|  
|<span data-ttu-id="29143-2835">`Binary`, `Input`, `Output`, `Append`</span><span class="sxs-lookup"><span data-stu-id="29143-2835">`Binary`, `Input`, `Output`, `Append`</span></span>|<span data-ttu-id="29143-2836">Posição do byte em que a próxima operação ocorre.</span><span class="sxs-lookup"><span data-stu-id="29143-2836">Byte position at which the next operation occurs.</span></span> <span data-ttu-id="29143-2837">O primeiro byte em um arquivo está na posição 1, o segundo byte estiver na posição 2 e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="29143-2837">The first byte in a file is at position 1, the second byte is at position 2, and so on.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="29143-2838">Este exemplo usa o `Seek` função para retornar a posição atual do arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-2838">This example uses the `Seek` function to return the current file position.</span></span> <span data-ttu-id="29143-2839">O exemplo supõe `TestFile` é um arquivo que contém registros de uma estrutura `Record`.</span><span class="sxs-lookup"><span data-stu-id="29143-2839">The example assumes `TestFile` is a file that contains records of the structure `Record`.</span></span>  
  
 [!code-vb[VbVbalrCatRef#47](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#47)]  
  
 <span data-ttu-id="29143-2840">Para arquivos abertos no `Random` modo, `Seek` retorna o número do próximo registro.</span><span class="sxs-lookup"><span data-stu-id="29143-2840">For files opened in `Random` mode, `Seek` returns the number of next record.</span></span>  
  
 [!code-vb[VbVbalrCatRef#48](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#48)]  
  
 <span data-ttu-id="29143-2841">Para arquivos abertos em modos diferentes de `Random` modo, `Seek` retorna a posição do byte em que a próxima operação ocorre.</span><span class="sxs-lookup"><span data-stu-id="29143-2841">For files opened in modes other than `Random` mode, `Seek` returns the byte position at which the next operation occurs.</span></span> <span data-ttu-id="29143-2842">Suponha que `TestFile` seja um arquivo contendo várias linhas de texto.</span><span class="sxs-lookup"><span data-stu-id="29143-2842">Assume `TestFile` is a file that contains several lines of text.</span></span>  
  
 [!code-vb[VbVbalrCatRef#49](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#49)]  
  
 <span data-ttu-id="29143-2843">Este exemplo usa o `Seek` função para definir a posição para a próxima leitura ou gravação em um arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-2843">This example uses the `Seek` function to set the position for the next read or write in a file.</span></span>  
  
 <span data-ttu-id="29143-2844">Para arquivos abertos em modos diferentes de `Random` modo, `Seek` define a posição do byte em que a próxima operação ocorre.</span><span class="sxs-lookup"><span data-stu-id="29143-2844">For files opened in modes other than `Random` mode, `Seek` sets the byte position at which the next operation occurs.</span></span> <span data-ttu-id="29143-2845">Suponha que `TestFile` seja um arquivo contendo várias linhas de texto.</span><span class="sxs-lookup"><span data-stu-id="29143-2845">Assume `TestFile` is a file that contains several lines of text.</span></span>  
  
 [!code-vb[VbVbalrCatRef#52](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#52)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="29143-2846">O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="29143-2846">File mode is invalid.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Loc(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:System.IO.IOException" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/reading-from-files.md"><span data-ttu-id="29143-2847">Lendo a partir de arquivos no Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-2847">Reading from Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/writing-to-files.md"><span data-ttu-id="29143-2848">Gravando em arquivos no Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-2848">Writing to Files in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SetAttr">
      <MemberSignature Language="C#" Value="public static void SetAttr (string PathName, Microsoft.VisualBasic.FileAttribute Attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static void SetAttr(string PathName, valuetype Microsoft.VisualBasic.FileAttribute Attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.SetAttr(System.String,Microsoft.VisualBasic.FileAttribute)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAttr (PathName As String, Attributes As FileAttribute)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetAttr(System::String ^ PathName, Microsoft::VisualBasic::FileAttribute Attributes);" />
      <MemberSignature Language="F#" Value="static member SetAttr : string * Microsoft.VisualBasic.FileAttribute -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.SetAttr (PathName, Attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="PathName" Type="System.String" />
        <Parameter Name="Attributes" Type="Microsoft.VisualBasic.FileAttribute" />
      </Parameters>
      <Docs>
        <param name="PathName"><span data-ttu-id="29143-2849">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-2849">Required.</span></span> <span data-ttu-id="29143-2850">Uma expressão de cadeia de caracteres que especifica um nome de arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-2850">A string expression that specifies a file name.</span></span> <span data-ttu-id="29143-2851"><paramref name="PathName" /> pode incluir o diretório ou a pasta, bem como a unidade.</span><span class="sxs-lookup"><span data-stu-id="29143-2851"><paramref name="PathName" /> can include directory or folder, and drive.</span></span></param>
        <param name="Attributes"><span data-ttu-id="29143-2852">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-2852">Required.</span></span> <span data-ttu-id="29143-2853">Expressão constante ou numérica, cuja soma especifica atributos de arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-2853">Constant or numeric expression, whose sum specifies file attributes.</span></span></param>
        <summary><span data-ttu-id="29143-2854">Define as informações de atributo de um arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-2854">Sets attribute information for a file.</span></span> <span data-ttu-id="29143-2855">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S do arquivo do que <see langword="SetAttr" />.</span><span class="sxs-lookup"><span data-stu-id="29143-2855">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="SetAttr" />.</span></span> <span data-ttu-id="29143-2856">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="29143-2856">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29143-2857">Um erro de tempo de execução ocorrerá se você tentar definir os atributos de um arquivo aberto.</span><span class="sxs-lookup"><span data-stu-id="29143-2857">A run-time error occurs if you try to set the attributes of an open file.</span></span>  
  
 <span data-ttu-id="29143-2858">O `Attributes` valores de enumeração de argumento são da seguinte maneira:</span><span class="sxs-lookup"><span data-stu-id="29143-2858">The `Attributes` argument enumeration values are as follows:</span></span>  
  
|<span data-ttu-id="29143-2859">Valor</span><span class="sxs-lookup"><span data-stu-id="29143-2859">Value</span></span>|<span data-ttu-id="29143-2860">Constante</span><span class="sxs-lookup"><span data-stu-id="29143-2860">Constant</span></span>|<span data-ttu-id="29143-2861">Descrição</span><span class="sxs-lookup"><span data-stu-id="29143-2861">Description</span></span>|  
|-|-|-|  
|`Normal`|`vbNormal`|<span data-ttu-id="29143-2862">Normal (padrão).</span><span class="sxs-lookup"><span data-stu-id="29143-2862">Normal (default).</span></span>|  
|`ReadOnly`|`vbReadOnly`|<span data-ttu-id="29143-2863">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="29143-2863">Read-only.</span></span>|  
|`Hidden`|`vbHidden`|<span data-ttu-id="29143-2864">Oculto.</span><span class="sxs-lookup"><span data-stu-id="29143-2864">Hidden.</span></span>|  
|`System`|`vbSystem`|<span data-ttu-id="29143-2865">Arquivo do sistema.</span><span class="sxs-lookup"><span data-stu-id="29143-2865">System file.</span></span>|  
|`Volume`|`vbVolume`|<span data-ttu-id="29143-2866">Rótulo do volume</span><span class="sxs-lookup"><span data-stu-id="29143-2866">Volume label</span></span>|  
|`Directory`|`vbDirectory`|<span data-ttu-id="29143-2867">Diretório ou pasta.</span><span class="sxs-lookup"><span data-stu-id="29143-2867">Directory or folder.</span></span>|  
|`Archive`|`vbArchive`|<span data-ttu-id="29143-2868">O arquivo foi alterado desde o último backup.</span><span class="sxs-lookup"><span data-stu-id="29143-2868">File has changed since last backup.</span></span>|  
|`Alias`|`vbAlias`|<span data-ttu-id="29143-2869">O arquivo tem um nome diferente.</span><span class="sxs-lookup"><span data-stu-id="29143-2869">File has a different name.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="29143-2870">Essas enumerações são especificadas pela linguagem Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="29143-2870">These enumerations are specified by the Visual Basic language.</span></span> <span data-ttu-id="29143-2871">Os nomes podem ser usados em qualquer lugar no seu código em vez dos valores reais.</span><span class="sxs-lookup"><span data-stu-id="29143-2871">The names can be used anywhere in your code instead of the actual values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29143-2872">Este exemplo usa o `SetAttr` função para definir atributos para um arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-2872">This example uses the `SetAttr` function to set attributes for a file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#14](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="29143-2873">O tipo <paramref name="Attribute" /> é inválido.</span><span class="sxs-lookup"><span data-stu-id="29143-2873"><paramref name="Attribute" /> type is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileAttr(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:Microsoft.VisualBasic.FileAttribute" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />
      </Docs>
    </Member>
    <Member MemberName="SPC">
      <MemberSignature Language="C#" Value="public static Microsoft.VisualBasic.SpcInfo SPC (short Count);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype Microsoft.VisualBasic.SpcInfo SPC(int16 Count) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.SPC(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Function SPC (Count As Short) As SpcInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::VisualBasic::SpcInfo SPC(short Count);" />
      <MemberSignature Language="F#" Value="static member SPC : int16 -&gt; Microsoft.VisualBasic.SpcInfo" Usage="Microsoft.VisualBasic.FileSystem.SPC Count" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.SpcInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Count" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="Count"><span data-ttu-id="29143-2874">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-2874">Required.</span></span> <span data-ttu-id="29143-2875">O número de espaços a serem inseridos antes de exibir ou imprimir a próxima expressão em uma lista.</span><span class="sxs-lookup"><span data-stu-id="29143-2875">The number of spaces to insert before displaying or printing the next expression in a list.</span></span></param>
        <summary><span data-ttu-id="29143-2876">Usado com a função <see langword="Print" /> ou <see langword="PrintLine" /> para posicionar a saída.</span><span class="sxs-lookup"><span data-stu-id="29143-2876">Used with the <see langword="Print" /> or <see langword="PrintLine" /> function to position output.</span></span></summary>
        <returns><span data-ttu-id="29143-2877">Usado com a função <see langword="Print" /> ou <see langword="PrintLine" /> para posicionar a saída.</span><span class="sxs-lookup"><span data-stu-id="29143-2877">Used with the <see langword="Print" /> or <see langword="PrintLine" /> function to position output.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29143-2878">Se `Count` é menor do que a largura da linha de saída, a próxima posição de impressão imediatamente após o número de espaços impressos.</span><span class="sxs-lookup"><span data-stu-id="29143-2878">If `Count` is less than the output line width, the next print position immediately follows the number of spaces printed.</span></span> <span data-ttu-id="29143-2879">Se`Count` é maior que a largura da linha de saída, `SPC` calculará a próxima posição de impressa usando a fórmula:</span><span class="sxs-lookup"><span data-stu-id="29143-2879">If`Count` is greater than the output line width, `SPC` calculates the next print position using the formula:</span></span>  
  
 <span data-ttu-id="29143-2880">`currentprintposition`(+(`Count``Mod``width`))</span><span class="sxs-lookup"><span data-stu-id="29143-2880">`currentprintposition`(+(`Count``Mod``width`))</span></span>  
  
 <span data-ttu-id="29143-2881">Por exemplo, se a posição de impressão atual for 24, a largura de linha de saída for 80, e você especificar `SPC(90)`, a próxima impressão começará na posição 34 (posição de impressão atual + o resto de 90/80).</span><span class="sxs-lookup"><span data-stu-id="29143-2881">For example, if the current print position is 24, the output line width is 80, and you specify `SPC(90)`, the next print will start at position 34 (current print position + the remainder of 90/80).</span></span> <span data-ttu-id="29143-2882">Se a diferença entre a posição atual de impressão e a largura da linha de saída for menor que `Count` (ou `Count` `Mod` *largura*), o `SPC` função pula para o início da próxima linha e gera espaços iguais a `Count` -(*largura* - *currentprintposition*).</span><span class="sxs-lookup"><span data-stu-id="29143-2882">If the difference between the current print position and the output line width is less than `Count` (or `Count` `Mod` *width*), the `SPC` function skips to the start of the next line and generates spaces equal to `Count` - (*width* - *currentprintposition*).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="29143-2883">Verifique se que as colunas da tabela são suficientes permitir a amplas letras.</span><span class="sxs-lookup"><span data-stu-id="29143-2883">Make sure your tabular columns are wide enough to allow for wide letters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29143-2884">Este exemplo usa o `SPC` função para posicionar a saída em um arquivo e em de **saída** janela.</span><span class="sxs-lookup"><span data-stu-id="29143-2884">This example uses the `SPC` function to position output in a file and in the **Output** window.</span></span>  
  
 [!code-vb[VbVbalrCatRef#16](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#16)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Space(System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.TAB" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileWidth(System.Int32,System.Int32)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/mod-operator.md"><span data-ttu-id="29143-2885">Operador Mod (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="29143-2885">Mod Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="TAB">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="29143-2886">Usado com as funções <see langword="Print" /> ou <see langword="PrintLine" /> para posicionar a saída.</span><span class="sxs-lookup"><span data-stu-id="29143-2886">Used with the <see langword="Print" /> or <see langword="PrintLine" /> functions to position output.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TAB">
      <MemberSignature Language="C#" Value="public static Microsoft.VisualBasic.TabInfo TAB ();" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype Microsoft.VisualBasic.TabInfo TAB() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.TAB" />
      <MemberSignature Language="VB.NET" Value="Public Function TAB () As TabInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::VisualBasic::TabInfo TAB();" />
      <MemberSignature Language="F#" Value="static member TAB : unit -&gt; Microsoft.VisualBasic.TabInfo" Usage="Microsoft.VisualBasic.FileSystem.TAB " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.TabInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="29143-2887">Usado com as funções <see langword="Print" /> ou <see langword="PrintLine" /> para posicionar a saída.</span><span class="sxs-lookup"><span data-stu-id="29143-2887">Used with the <see langword="Print" /> or <see langword="PrintLine" /> functions to position output.</span></span></summary>
        <returns><span data-ttu-id="29143-2888">Usado com as funções <see langword="Print" /> ou <see langword="PrintLine" /> para posicionar a saída.</span><span class="sxs-lookup"><span data-stu-id="29143-2888">Used with the <see langword="Print" /> or <see langword="PrintLine" /> functions to position output.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29143-2889">Se a posição de impressão atual na linha atual é maior que `Column`, `TAB` pulará para a coluna de valor igual a `Column` na próxima linha de saída.</span><span class="sxs-lookup"><span data-stu-id="29143-2889">If the current print position on the current line is larger than `Column`, `TAB` skips to the column value equal to `Column` on the next output line.</span></span> <span data-ttu-id="29143-2890">Se `Column` é menor que 1, `TAB` move a posição de impressão para a coluna 1.</span><span class="sxs-lookup"><span data-stu-id="29143-2890">If `Column` is less than 1, `TAB` moves the print position to column 1.</span></span> <span data-ttu-id="29143-2891">Se `Column` é maior do que a largura da linha de saída, `TAB` calculará a próxima posição de impressa usando a fórmula:</span><span class="sxs-lookup"><span data-stu-id="29143-2891">If `Column` is larger than the output line width, `TAB` calculates the next print position using the formula:</span></span>  
  
 <span data-ttu-id="29143-2892">Largura da coluna Mod</span><span class="sxs-lookup"><span data-stu-id="29143-2892">Column Mod width</span></span>  
  
 <span data-ttu-id="29143-2893">Por exemplo, se *largura* é 80 e você especificar `TAB(90)`, a próxima impressão começará na coluna 10 (o resto de 90/80).</span><span class="sxs-lookup"><span data-stu-id="29143-2893">For example, if *width* is 80 and you specify `TAB(90)`, the next print will start at column 10 (the remainder of 90/80).</span></span> <span data-ttu-id="29143-2894">Se `Column` é menor que a posição atual de impressão, impressão é iniciado na próxima linha na posição de impressão calculada.</span><span class="sxs-lookup"><span data-stu-id="29143-2894">If `Column` is less than the current print position, printing starts on the next line at the calculated print position.</span></span> <span data-ttu-id="29143-2895">Se a posição de impressão calculada for maior que a posição atual de impressão, impressão começa no calculada imprimir a posição na mesma linha.</span><span class="sxs-lookup"><span data-stu-id="29143-2895">If the calculated print position is larger than the current print position, printing starts at the calculated print position on the same line.</span></span>  
  
 <span data-ttu-id="29143-2896">A posição mais à esquerda de impressão em uma linha de saída é sempre 1.</span><span class="sxs-lookup"><span data-stu-id="29143-2896">The leftmost print position on an output line is always 1.</span></span> <span data-ttu-id="29143-2897">Quando você usa o `Print` ou `PrintLine` funções para imprimir arquivos, a posição de impressão mais à direita é a largura atual do arquivo de saída, você pode definir usando o `FileWidth` função.</span><span class="sxs-lookup"><span data-stu-id="29143-2897">When you use the `Print` or `PrintLine` functions to print to files, the rightmost print position is the current width of the output file, which you can set using the `FileWidth` function.</span></span>  
  
 <span data-ttu-id="29143-2898">O `TAB` função também pode ser usada com o `WriteLine` função.</span><span class="sxs-lookup"><span data-stu-id="29143-2898">The `TAB` function can also be used with the `WriteLine` function.</span></span> <span data-ttu-id="29143-2899">Ele não pode ser usado com <xref:System.Diagnostics.Debug.WriteLine%2A?displayProperty=nameWithType> ou <xref:System.Console.WriteLine%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="29143-2899">It cannot be used with <xref:System.Diagnostics.Debug.WriteLine%2A?displayProperty=nameWithType> or <xref:System.Console.WriteLine%2A?displayProperty=nameWithType>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="29143-2900">Verifique se que as colunas da tabela são grande o suficiente para conter letras amplas.</span><span class="sxs-lookup"><span data-stu-id="29143-2900">Make sure your tabular columns are wide enough to contain wide letters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29143-2901">Este exemplo usa o `TAB` função para posicionar a saída em um arquivo e em de **saída** janela.</span><span class="sxs-lookup"><span data-stu-id="29143-2901">This example uses the `TAB` function to position output in a file and in the **Output** window.</span></span>  
  
 [!code-vb[VbVbalrCatRef#37](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#37)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Space(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SPC(System.Int16)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileWidth(System.Int32,System.Int32)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/mod-operator.md"><span data-ttu-id="29143-2902">Operador Mod (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="29143-2902">Mod Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TAB">
      <MemberSignature Language="C#" Value="public static Microsoft.VisualBasic.TabInfo TAB (short Column);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype Microsoft.VisualBasic.TabInfo TAB(int16 Column) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.TAB(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Function TAB (Column As Short) As TabInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::VisualBasic::TabInfo TAB(short Column);" />
      <MemberSignature Language="F#" Value="static member TAB : int16 -&gt; Microsoft.VisualBasic.TabInfo" Usage="Microsoft.VisualBasic.FileSystem.TAB Column" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.TabInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Column" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="Column"><span data-ttu-id="29143-2903">Opcional.</span><span class="sxs-lookup"><span data-stu-id="29143-2903">Optional.</span></span> <span data-ttu-id="29143-2904">O número de coluna movido antes de exibir ou imprimir a próxima expressão em uma lista.</span><span class="sxs-lookup"><span data-stu-id="29143-2904">The column number moved to before displaying or printing the next expression in a list.</span></span> <span data-ttu-id="29143-2905">Se omitido, <see langword="TAB" /> move o ponto de inserção para o início da próxima zona de impressão.</span><span class="sxs-lookup"><span data-stu-id="29143-2905">If omitted, <see langword="TAB" /> moves the insertion point to the start of the next print zone.</span></span></param>
        <summary><span data-ttu-id="29143-2906">Usado com as funções <see langword="Print" /> ou <see langword="PrintLine" /> para posicionar a saída.</span><span class="sxs-lookup"><span data-stu-id="29143-2906">Used with the <see langword="Print" /> or <see langword="PrintLine" /> functions to position output.</span></span></summary>
        <returns><span data-ttu-id="29143-2907">Usado com as funções <see langword="Print" /> ou <see langword="PrintLine" /> para posicionar a saída.</span><span class="sxs-lookup"><span data-stu-id="29143-2907">Used with the <see langword="Print" /> or <see langword="PrintLine" /> functions to position output.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29143-2908">Se a posição de impressão atual na linha atual for maior que `Column`, `TAB` pulará para a coluna de valor igual a `Column` na próxima linha de saída.</span><span class="sxs-lookup"><span data-stu-id="29143-2908">If the current print position on the current line is greater than `Column`, `TAB` skips to the column value equal to `Column` on the next output line.</span></span> <span data-ttu-id="29143-2909">Se `Column` é menor que 1, `TAB` move a posição de impressão para a coluna 1.</span><span class="sxs-lookup"><span data-stu-id="29143-2909">If `Column` is less than 1, `TAB` moves the print position to column 1.</span></span> <span data-ttu-id="29143-2910">Se `Column` é maior que a largura da linha de saída, `TAB` calculará a próxima posição de impressa usando a fórmula:</span><span class="sxs-lookup"><span data-stu-id="29143-2910">If `Column` is greater than the output line width, `TAB` calculates the next print position using the formula:</span></span>  
  
 <span data-ttu-id="29143-2911">Largura da coluna Mod</span><span class="sxs-lookup"><span data-stu-id="29143-2911">Column Mod width</span></span>  
  
 <span data-ttu-id="29143-2912">Por exemplo, se *largura* é 80 e você especificar `TAB(90)`, a próxima impressão começará na coluna 10 (o resto de 90/80).</span><span class="sxs-lookup"><span data-stu-id="29143-2912">For example, if *width* is 80 and you specify `TAB(90)`, the next print will start at column 10 (the remainder of 90/80).</span></span> <span data-ttu-id="29143-2913">Se `Column` é menor que a posição atual de impressão, impressão é iniciado na próxima linha na posição de impressão calculada.</span><span class="sxs-lookup"><span data-stu-id="29143-2913">If `Column` is less than the current print position, printing starts on the next line at the calculated print position.</span></span> <span data-ttu-id="29143-2914">Se a posição de impressão calculada for maior que a posição atual de impressão, impressão começa no calculada imprimir a posição na mesma linha.</span><span class="sxs-lookup"><span data-stu-id="29143-2914">If the calculated print position is greater than the current print position, printing starts at the calculated print position on the same line.</span></span>  
  
 <span data-ttu-id="29143-2915">A posição mais à esquerda de impressão em uma linha de saída é sempre 1.</span><span class="sxs-lookup"><span data-stu-id="29143-2915">The leftmost print position on an output line is always 1.</span></span> <span data-ttu-id="29143-2916">Quando você usa o `Print` ou `PrintLine` funções para imprimir arquivos, a posição de impressão mais à direita é a largura atual do arquivo de saída, você pode definir usando o `FileWidth` função.</span><span class="sxs-lookup"><span data-stu-id="29143-2916">When you use the `Print` or `PrintLine` functions to print to files, the rightmost print position is the current width of the output file, which you can set using the `FileWidth` function.</span></span>  
  
 <span data-ttu-id="29143-2917">O `TAB` função também pode ser usada com o `WriteLine` função.</span><span class="sxs-lookup"><span data-stu-id="29143-2917">The `TAB` function can also be used with the `WriteLine` function.</span></span> <span data-ttu-id="29143-2918">Ele não pode ser usado com <xref:System.Diagnostics.Debug.WriteLine%2A?displayProperty=nameWithType> ou <xref:System.Console.WriteLine%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="29143-2918">It cannot be used with <xref:System.Diagnostics.Debug.WriteLine%2A?displayProperty=nameWithType> or <xref:System.Console.WriteLine%2A?displayProperty=nameWithType>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="29143-2919">Verifique se que as colunas da tabela são grande o suficiente para conter letras amplas.</span><span class="sxs-lookup"><span data-stu-id="29143-2919">Make sure your tabular columns are wide enough to contain wide letters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29143-2920">Este exemplo usa o `TAB` função para posicionar a saída em um arquivo e em de **saída** janela.</span><span class="sxs-lookup"><span data-stu-id="29143-2920">This example uses the `TAB` function to position output in a file and in the **Output** window.</span></span>  
  
 [!code-vb[VbVbalrCatRef#37](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#37)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Space(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SPC(System.Int16)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileWidth(System.Int32,System.Int32)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/mod-operator.md"><span data-ttu-id="29143-2921">Operador Mod (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="29143-2921">Mod Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Unlock">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="29143-2922">Controla o acesso por outros processos a todo ou à parte de um arquivo aberto usando a função <see langword="Open" />.</span><span class="sxs-lookup"><span data-stu-id="29143-2922">Controls access by other processes to all or part of a file opened by using the <see langword="Open" /> function.</span></span> <span data-ttu-id="29143-2923">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S de arquivo que <see langword="Lock" /> e <see langword="Unlock" />.</span><span class="sxs-lookup"><span data-stu-id="29143-2923">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Lock" /> and <see langword="Unlock" />.</span></span> <span data-ttu-id="29143-2924">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="29143-2924">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Unlock">
      <MemberSignature Language="C#" Value="public static void Unlock (int FileNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Unlock(int32 FileNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Unlock(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unlock (FileNumber As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Unlock(int FileNumber);" />
      <MemberSignature Language="F#" Value="static member Unlock : int -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Unlock FileNumber" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="29143-2925">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-2925">Required.</span></span> <span data-ttu-id="29143-2926">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="29143-2926">Any valid file number.</span></span></param>
        <summary><span data-ttu-id="29143-2927">Controla o acesso por outros processos a todo ou à parte de um arquivo aberto usando a função <see langword="Open" />.</span><span class="sxs-lookup"><span data-stu-id="29143-2927">Controls access by other processes to all or part of a file opened by using the <see langword="Open" /> function.</span></span> <span data-ttu-id="29143-2928">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S de arquivo que <see langword="Lock" /> e <see langword="Unlock" />.</span><span class="sxs-lookup"><span data-stu-id="29143-2928">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Lock" /> and <see langword="Unlock" />.</span></span> <span data-ttu-id="29143-2929">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="29143-2929">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29143-2930">O `Lock` e `Unlock` funções são usadas em ambientes onde vários processos podem precisam acessar o mesmo arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-2930">The `Lock` and `Unlock` functions are used in environments where several processes might need access to the same file.</span></span>  
  
 <span data-ttu-id="29143-2931">`Lock` e `Unlock` funções sempre são usadas em pares.</span><span class="sxs-lookup"><span data-stu-id="29143-2931">`Lock` and `Unlock` functions are always used in pairs.</span></span> <span data-ttu-id="29143-2932">Os argumentos para `Lock` e `Unlock` devem ser idênticos.</span><span class="sxs-lookup"><span data-stu-id="29143-2932">The arguments to `Lock` and `Unlock` must be identical.</span></span>  
  
 <span data-ttu-id="29143-2933">Se `Record` ou `FromRecord` e `ToRecord` não for fornecido, o bloqueio será para todo o arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-2933">If `Record`, or `FromRecord` and `ToRecord` are not supplied, the lock will be for the whole file.</span></span> <span data-ttu-id="29143-2934">Se `Record` sozinho for especificado o único registro será bloqueada/desbloqueado.</span><span class="sxs-lookup"><span data-stu-id="29143-2934">If `Record` alone is specified the single record will be locked/unlocked.</span></span>  
  
 <span data-ttu-id="29143-2935">Se o arquivo foi aberto para entrada ou saída, sequencial `Lock` e `Unlock` afetam todo o arquivo, independentemente do intervalo especificado por `FromRecord` e`ToRecord`.</span><span class="sxs-lookup"><span data-stu-id="29143-2935">If the file has been opened for sequential input or output, `Lock` and `Unlock` affect the whole file, regardless of the range specified by `FromRecord` and`ToRecord`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29143-2936">Este exemplo ilustra o uso do `Lock` e `Unlock` funções.</span><span class="sxs-lookup"><span data-stu-id="29143-2936">This example illustrates the use of the `Lock` and `Unlock` functions.</span></span> <span data-ttu-id="29143-2937">Este exemplo pressupõe que `People.txt` seja um arquivo contendo registros da estrutura `Person`.</span><span class="sxs-lookup"><span data-stu-id="29143-2937">This example assumes that `People.txt` is a file that contains records of the structure `Person`.</span></span>  
  
 [!code-vb[VbVbalrCatRef#13](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="29143-2938">O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="29143-2938">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="T:System.IO.IOException" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md"><span data-ttu-id="29143-2939">Access de arquivo com o Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-2939">File Access with Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Unlock">
      <MemberSignature Language="C#" Value="public static void Unlock (int FileNumber, long Record);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Unlock(int32 FileNumber, int64 Record) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Unlock(System.Int32,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unlock (FileNumber As Integer, Record As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Unlock(int FileNumber, long Record);" />
      <MemberSignature Language="F#" Value="static member Unlock : int * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Unlock (FileNumber, Record)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Record" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="29143-2940">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-2940">Required.</span></span> <span data-ttu-id="29143-2941">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="29143-2941">Any valid file number.</span></span></param>
        <param name="Record"><span data-ttu-id="29143-2942">Opcional.</span><span class="sxs-lookup"><span data-stu-id="29143-2942">Optional.</span></span> <span data-ttu-id="29143-2943">Número do único registro ou byte a ser bloqueado ou desbloqueado</span><span class="sxs-lookup"><span data-stu-id="29143-2943">Number of the only record or byte to lock or unlock</span></span></param>
        <summary><span data-ttu-id="29143-2944">Controla o acesso por outros processos a todo ou à parte de um arquivo aberto usando a função <see langword="Open" />.</span><span class="sxs-lookup"><span data-stu-id="29143-2944">Controls access by other processes to all or part of a file opened by using the <see langword="Open" /> function.</span></span> <span data-ttu-id="29143-2945">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S de arquivo que <see langword="Lock" /> e <see langword="Unlock" />.</span><span class="sxs-lookup"><span data-stu-id="29143-2945">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Lock" /> and <see langword="Unlock" />.</span></span> <span data-ttu-id="29143-2946">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="29143-2946">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29143-2947">O `Lock` e `Unlock` funções são usadas em ambientes onde vários processos podem precisam acessar o mesmo arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-2947">The `Lock` and `Unlock` functions are used in environments where several processes might need access to the same file.</span></span>  
  
 <span data-ttu-id="29143-2948">`Lock` e `Unlock` funções sempre são usadas em pares.</span><span class="sxs-lookup"><span data-stu-id="29143-2948">`Lock` and `Unlock` functions are always used in pairs.</span></span> <span data-ttu-id="29143-2949">Os argumentos para `Lock` e `Unlock` devem ser idênticos.</span><span class="sxs-lookup"><span data-stu-id="29143-2949">The arguments to `Lock` and `Unlock` must be identical.</span></span>  
  
 <span data-ttu-id="29143-2950">Se `Record` ou `FromRecord` e `ToRecord` não for fornecido, o bloqueio será para todo o arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-2950">If `Record`, or `FromRecord` and `ToRecord` are not supplied, the lock will be for the whole file.</span></span> <span data-ttu-id="29143-2951">Se `Record` sozinho for especificado o único registro será bloqueada/desbloqueado.</span><span class="sxs-lookup"><span data-stu-id="29143-2951">If `Record` alone is specified the single record will be locked/unlocked.</span></span>  
  
 <span data-ttu-id="29143-2952">Se o arquivo foi aberto para entrada ou saída, sequencial `Lock` e `Unlock` afetam todo o arquivo, independentemente do intervalo especificado por `FromRecord` e`ToRecord`.</span><span class="sxs-lookup"><span data-stu-id="29143-2952">If the file has been opened for sequential input or output, `Lock` and `Unlock` affect the whole file, regardless of the range specified by `FromRecord` and`ToRecord`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29143-2953">Este exemplo ilustra o uso do `Lock` e `Unlock` funções.</span><span class="sxs-lookup"><span data-stu-id="29143-2953">This example illustrates the use of the `Lock` and `Unlock` functions.</span></span> <span data-ttu-id="29143-2954">Este exemplo pressupõe que `People.txt` seja um arquivo contendo registros da estrutura `Person`.</span><span class="sxs-lookup"><span data-stu-id="29143-2954">This example assumes that `People.txt` is a file that contains records of the structure `Person`.</span></span>  
  
 [!code-vb[VbVbalrCatRef#13](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="29143-2955">O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="29143-2955">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="T:System.IO.IOException" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md"><span data-ttu-id="29143-2956">Access de arquivo com o Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-2956">File Access with Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Unlock">
      <MemberSignature Language="C#" Value="public static void Unlock (int FileNumber, long FromRecord, long ToRecord);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Unlock(int32 FileNumber, int64 FromRecord, int64 ToRecord) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Unlock(System.Int32,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unlock (FileNumber As Integer, FromRecord As Long, ToRecord As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Unlock(int FileNumber, long FromRecord, long ToRecord);" />
      <MemberSignature Language="F#" Value="static member Unlock : int * int64 * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Unlock (FileNumber, FromRecord, ToRecord)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="FromRecord" Type="System.Int64" />
        <Parameter Name="ToRecord" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="29143-2957">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-2957">Required.</span></span> <span data-ttu-id="29143-2958">Qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="29143-2958">Any valid file number.</span></span></param>
        <param name="FromRecord"><span data-ttu-id="29143-2959">Opcional.</span><span class="sxs-lookup"><span data-stu-id="29143-2959">Optional.</span></span> <span data-ttu-id="29143-2960">Número do primeiro registro ou byte a ser bloqueado ou desbloqueado.</span><span class="sxs-lookup"><span data-stu-id="29143-2960">Number of the first record or byte to lock or unlock.</span></span></param>
        <param name="ToRecord"><span data-ttu-id="29143-2961">Opcional.</span><span class="sxs-lookup"><span data-stu-id="29143-2961">Optional.</span></span> <span data-ttu-id="29143-2962">Número do último registro ou byte a ser bloqueado ou desbloqueado.</span><span class="sxs-lookup"><span data-stu-id="29143-2962">Number of the last record or byte to lock or unlock.</span></span></param>
        <summary><span data-ttu-id="29143-2963">Controla o acesso por outros processos a todo ou à parte de um arquivo aberto usando a função <see langword="Open" />.</span><span class="sxs-lookup"><span data-stu-id="29143-2963">Controls access by other processes to all or part of a file opened by using the <see langword="Open" /> function.</span></span> <span data-ttu-id="29143-2964">O recurso <see langword="My" /> oferece melhor produtividade e desempenho em operações de E/S de arquivo que <see langword="Lock" /> e <see langword="Unlock" />.</span><span class="sxs-lookup"><span data-stu-id="29143-2964">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Lock" /> and <see langword="Unlock" />.</span></span> <span data-ttu-id="29143-2965">Para obter mais informações, consulte <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span><span class="sxs-lookup"><span data-stu-id="29143-2965">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29143-2966">O `Lock` e `Unlock` funções são usadas em ambientes onde vários processos podem precisam acessar o mesmo arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-2966">The `Lock` and `Unlock` functions are used in environments where several processes might need access to the same file.</span></span>  
  
 <span data-ttu-id="29143-2967">`Lock` e `Unlock` funções sempre são usadas em pares.</span><span class="sxs-lookup"><span data-stu-id="29143-2967">`Lock` and `Unlock` functions are always used in pairs.</span></span> <span data-ttu-id="29143-2968">Os argumentos para `Lock` e `Unlock` devem ser idênticos.</span><span class="sxs-lookup"><span data-stu-id="29143-2968">The arguments to `Lock` and `Unlock` must be identical.</span></span>  
  
 <span data-ttu-id="29143-2969">Se `Record` ou `FromRecord` e `ToRecord` não for fornecido, o bloqueio será para todo o arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-2969">If `Record`, or `FromRecord` and `ToRecord` are not supplied, the lock will be for the whole file.</span></span> <span data-ttu-id="29143-2970">Se `Record` sozinho for especificado o único registro será bloqueada/desbloqueado.</span><span class="sxs-lookup"><span data-stu-id="29143-2970">If `Record` alone is specified the single record will be locked/unlocked.</span></span>  
  
 <span data-ttu-id="29143-2971">Se o arquivo foi aberto para entrada ou saída, sequencial `Lock` e `Unlock` afetam todo o arquivo, independentemente do intervalo especificado por `FromRecord` e`ToRecord`.</span><span class="sxs-lookup"><span data-stu-id="29143-2971">If the file has been opened for sequential input or output, `Lock` and `Unlock` affect the whole file, regardless of the range specified by `FromRecord` and`ToRecord`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29143-2972">Este exemplo ilustra o uso do `Lock` e `Unlock` funções.</span><span class="sxs-lookup"><span data-stu-id="29143-2972">This example illustrates the use of the `Lock` and `Unlock` functions.</span></span> <span data-ttu-id="29143-2973">Este exemplo pressupõe que `People.txt` seja um arquivo contendo registros da estrutura `Person`.</span><span class="sxs-lookup"><span data-stu-id="29143-2973">This example assumes that `People.txt` is a file that contains records of the structure `Person`.</span></span>  
  
 [!code-vb[VbVbalrCatRef#13](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="29143-2974">O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="29143-2974">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="T:System.IO.IOException" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md"><span data-ttu-id="29143-2975">Access de arquivo com o Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-2975">File Access with Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (int FileNumber, params object[] Output);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Write(int32 FileNumber, object[] Output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (FileNumber As Integer, ParamArray Output As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(int FileNumber, ... cli::array &lt;System::Object ^&gt; ^ Output);" />
      <MemberSignature Language="F#" Value="static member Write : int * obj[] -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Write (FileNumber, Output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Output" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-1.1">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="29143-2976">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-2976">Required.</span></span> <span data-ttu-id="29143-2977">Uma expressão <see langword="Integer" /> que contém qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="29143-2977">An <see langword="Integer" /> expression that contains any valid file number.</span></span></param>
        <param name="Output"><span data-ttu-id="29143-2978">Opcional.</span><span class="sxs-lookup"><span data-stu-id="29143-2978">Optional.</span></span> <span data-ttu-id="29143-2979">Uma ou mais expressões delimitadas por vírgula para gravar em um arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-2979">One or more comma-delimited expressions to write to a file.</span></span></param>
        <summary><span data-ttu-id="29143-2980">Grava dados em um arquivo sequencial.</span><span class="sxs-lookup"><span data-stu-id="29143-2980">Writes data to a sequential file.</span></span> <span data-ttu-id="29143-2981">Dados gravados com <see langword="Write" /> costumam ser lidos a partir de um arquivo usando <see langword="Input" />.</span><span class="sxs-lookup"><span data-stu-id="29143-2981">Data written with <see langword="Write" /> is usually read from a file by using <see langword="Input" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29143-2982">O `Write` e `WriteLine` funções são fornecidas para compatibilidade com versões anteriores e pode afetar o desempenho.</span><span class="sxs-lookup"><span data-stu-id="29143-2982">The `Write` and `WriteLine` functions are provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="29143-2983">Para aplicativos não herdadas, o `My.Computer.FileSystem` objeto fornece um melhor desempenho.</span><span class="sxs-lookup"><span data-stu-id="29143-2983">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="29143-2984">Para obter mais informações, consulte [acesso a arquivos com o Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="29143-2984">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="29143-2985">Se você omitir `Output`, uma linha em branco é impresso para o arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-2985">If you omit `Output`, a blank line is printed to the file.</span></span> <span data-ttu-id="29143-2986">Várias expressões podem ser separadas por vírgula.</span><span class="sxs-lookup"><span data-stu-id="29143-2986">Multiple expressions can be separated with a comma.</span></span>  
  
 <span data-ttu-id="29143-2987">Ao contrário do `Print` função, o `Write` função insere vírgulas entre os itens e cadeias de caracteres entre aspas conforme elas são gravadas no arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-2987">Unlike the `Print` function, the `Write` function inserts commas between items and quotation marks around strings as they are written to the file.</span></span> <span data-ttu-id="29143-2988">Você não precisa colocar delimitadores explícitas na lista.</span><span class="sxs-lookup"><span data-stu-id="29143-2988">You do not have to put explicit delimiters in the list.</span></span> <span data-ttu-id="29143-2989">Quando `Write` é usado para gravar dados em um arquivo, numérico somente `Boolean`, data, null, e `Error` há suporte para formatos de dados.</span><span class="sxs-lookup"><span data-stu-id="29143-2989">When `Write` is used to write data to a file, only numeric, `Boolean`, date, null, and `Error` data formats are supported.</span></span> <span data-ttu-id="29143-2990">As seguintes suposições universais são seguidas para que os dados sempre podem ser lido e interpretado corretamente usando `Input`, independentemente da localidade:</span><span class="sxs-lookup"><span data-stu-id="29143-2990">The following universal assumptions are followed so the data can always be read and correctly interpreted using `Input`, regardless of locale:</span></span>  
  
-   <span data-ttu-id="29143-2991">Dados numéricos são sempre gravados usando o ponto como separador decimal.</span><span class="sxs-lookup"><span data-stu-id="29143-2991">Numeric data is always written using the period as the decimal separator.</span></span>  
  
-   <span data-ttu-id="29143-2992">Para `Boolean` dados, seja `#TRUE#` ou `#FALSE#` é impresso.</span><span class="sxs-lookup"><span data-stu-id="29143-2992">For `Boolean` data, either `#TRUE#` or `#FALSE#` is printed.</span></span> <span data-ttu-id="29143-2993">O `True` e `False` palavras-chave não são traduzidas, independente da localidade.</span><span class="sxs-lookup"><span data-stu-id="29143-2993">The `True` and `False` keywords are not translated, regardless of locale.</span></span>  
  
-   <span data-ttu-id="29143-2994">Dados de data são gravados no arquivo usando o formato de data universal.</span><span class="sxs-lookup"><span data-stu-id="29143-2994">Date data is written to the file using the universal date format.</span></span> <span data-ttu-id="29143-2995">Quando a data ou o componente de tempo está ausente ou zero, somente a parte fornecida é gravada no arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-2995">When either the date or the time component is missing or zero, only the part provided is written to the file.</span></span>  
  
-   <span data-ttu-id="29143-2996">Nada será gravado no arquivo se `Output` dados estão vazios.</span><span class="sxs-lookup"><span data-stu-id="29143-2996">Nothing is written to the file if `Output` data is empty.</span></span> <span data-ttu-id="29143-2997">No entanto, para dados nulos, `#NULL#` é gravado.</span><span class="sxs-lookup"><span data-stu-id="29143-2997">However, for null data, `#NULL#` is written.</span></span>  
  
-   <span data-ttu-id="29143-2998">Para `Error` dados, a saída é exibida como `#ERROR errorcode#`.</span><span class="sxs-lookup"><span data-stu-id="29143-2998">For `Error` data, the output appears as `#ERROR errorcode#`.</span></span> <span data-ttu-id="29143-2999">O `Error` palavra-chave não será convertido, independente da localidade.</span><span class="sxs-lookup"><span data-stu-id="29143-2999">The `Error` keyword is not translated, regardless of locale.</span></span>  
  
 <span data-ttu-id="29143-3000">`WriteLine` Insere um caractere de nova linha (ou seja, um retorno de carro/linha de alimentação, ou `Chr(13) + Chr(10)`), depois de escrever o caractere final `Output` para o arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-3000">`WriteLine` inserts a newline character (that is, a carriage return/line feed, or `Chr(13) + Chr(10)`), after it has written the final character in `Output` to the file.</span></span>  
  
 <span data-ttu-id="29143-3001">Você pode inserir aspas em uma cadeia de caracteres usando aspas duplas, ou "".</span><span class="sxs-lookup"><span data-stu-id="29143-3001">You can embed quotation marks in a string by using double quotation marks, or "".</span></span> <span data-ttu-id="29143-3002">Por exemplo,</span><span class="sxs-lookup"><span data-stu-id="29143-3002">For example,</span></span>  
  
 [!code-vb[VbVbalrCatRef#63](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#63)]  
  
 <span data-ttu-id="29143-3003">Retorna uma cadeia de caracteres com o valor de `Double quotation marks aren't "difficult" to handle`.</span><span class="sxs-lookup"><span data-stu-id="29143-3003">returns a string with the value of `Double quotation marks aren't "difficult" to handle`.</span></span>  
  
 <span data-ttu-id="29143-3004">Gravando em um arquivo usando o `Write` ou `WriteLine` funções requer `Append` acessar do `FileIOPermissionAccess` enumeração.</span><span class="sxs-lookup"><span data-stu-id="29143-3004">Writing to a file by using the `Write` or `WriteLine` functions requires `Append` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="29143-3005">Para obter mais informações, consulte <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="29143-3005">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess> .</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29143-3006">Este exemplo usa o `Write` função para gravar dados brutos em um arquivo sequencial.</span><span class="sxs-lookup"><span data-stu-id="29143-3006">This example uses the `Write` function to write raw data to a sequential file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#64](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#64)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="29143-3007">O modo de arquivo é inválido.</span><span class="sxs-lookup"><span data-stu-id="29143-3007">File mode is invalid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Input" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md"><span data-ttu-id="29143-3008">Access de arquivo com o Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-3008">File Access with Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files.md"><span data-ttu-id="29143-3009">Como gravar texto em arquivos no Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-3009">How to: Write Text to Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files-with-a-streamwriter.md"><span data-ttu-id="29143-3010">Como: Gravar texto em um arquivo com um Streamwriter (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="29143-3010">How to: Write Text to a File with a Streamwriter (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (int FileNumber, params object[] Output);" />
      <MemberSignature Language="ILAsm" Value=".method public static void WriteLine(int32 FileNumber, object[] Output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteLine (FileNumber As Integer, ParamArray Output As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(int FileNumber, ... cli::array &lt;System::Object ^&gt; ^ Output);" />
      <MemberSignature Language="F#" Value="static member WriteLine : int * obj[] -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.WriteLine (FileNumber, Output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Output" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-1.1">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="FileNumber"><span data-ttu-id="29143-3011">Necessário.</span><span class="sxs-lookup"><span data-stu-id="29143-3011">Required.</span></span> <span data-ttu-id="29143-3012">Uma expressão <see langword="Integer" /> que contém qualquer número de arquivo válido.</span><span class="sxs-lookup"><span data-stu-id="29143-3012">An <see langword="Integer" /> expression that contains any valid file number.</span></span></param>
        <param name="Output"><span data-ttu-id="29143-3013">Opcional.</span><span class="sxs-lookup"><span data-stu-id="29143-3013">Optional.</span></span> <span data-ttu-id="29143-3014">Uma ou mais expressões delimitadas por vírgula para gravar em um arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-3014">One or more comma-delimited expressions to write to a file.</span></span></param>
        <summary><span data-ttu-id="29143-3015">Grava dados em um arquivo sequencial.</span><span class="sxs-lookup"><span data-stu-id="29143-3015">Writes data to a sequential file.</span></span> <span data-ttu-id="29143-3016">Dados gravados com <see langword="Write" /> costumam ser lidos a partir de um arquivo usando <see langword="Input" />.</span><span class="sxs-lookup"><span data-stu-id="29143-3016">Data written with <see langword="Write" /> is usually read from a file by using <see langword="Input" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29143-3017">O `Write` e `WriteLine` funções são fornecidas para compatibilidade com versões anteriores e pode afetar o desempenho.</span><span class="sxs-lookup"><span data-stu-id="29143-3017">The `Write` and `WriteLine` functions are provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="29143-3018">Para aplicativos não herdadas, o `My.Computer.FileSystem` objeto fornece um melhor desempenho.</span><span class="sxs-lookup"><span data-stu-id="29143-3018">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="29143-3019">Para obter mais informações, consulte [acesso a arquivos com o Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span><span class="sxs-lookup"><span data-stu-id="29143-3019">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="29143-3020">Se você omitir `Output`, uma linha em branco é impresso para o arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-3020">If you omit `Output`, a blank line is printed to the file.</span></span> <span data-ttu-id="29143-3021">Várias expressões podem ser separadas por vírgula.</span><span class="sxs-lookup"><span data-stu-id="29143-3021">Multiple expressions can be separated with a comma.</span></span>  
  
 <span data-ttu-id="29143-3022">Ao contrário do `Print` função, o `Write` função insere vírgulas entre os itens e cadeias de caracteres entre aspas conforme elas são gravadas no arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-3022">Unlike the `Print` function, the `Write` function inserts commas between items and quotation marks around strings as they are written to the file.</span></span> <span data-ttu-id="29143-3023">Você não precisa colocar delimitadores explícitas na lista.</span><span class="sxs-lookup"><span data-stu-id="29143-3023">You do not have to put explicit delimiters in the list.</span></span> <span data-ttu-id="29143-3024">Quando `Write` é usado para gravar dados em um arquivo, numérico somente `Boolean`, data, null, e `Error` há suporte para formatos de dados.</span><span class="sxs-lookup"><span data-stu-id="29143-3024">When `Write` is used to write data to a file, only numeric, `Boolean`, date, null, and `Error` data formats are supported.</span></span> <span data-ttu-id="29143-3025">As seguintes suposições universais são seguidas para que os dados sempre podem ser lido e interpretado corretamente usando `Input`, independentemente da localidade:</span><span class="sxs-lookup"><span data-stu-id="29143-3025">The following universal assumptions are followed so the data can always be read and correctly interpreted using `Input`, regardless of locale:</span></span>  
  
-   <span data-ttu-id="29143-3026">Dados numéricos são sempre gravados usando o ponto como separador decimal.</span><span class="sxs-lookup"><span data-stu-id="29143-3026">Numeric data is always written using the period as the decimal separator.</span></span>  
  
-   <span data-ttu-id="29143-3027">Para `Boolean` dados, seja `#TRUE#` ou `#FALSE#` é impresso.</span><span class="sxs-lookup"><span data-stu-id="29143-3027">For `Boolean` data, either `#TRUE#` or `#FALSE#` is printed.</span></span> <span data-ttu-id="29143-3028">O `True` e `False` palavras-chave não são traduzidas, independente da localidade.</span><span class="sxs-lookup"><span data-stu-id="29143-3028">The `True` and `False` keywords are not translated, regardless of locale.</span></span>  
  
-   <span data-ttu-id="29143-3029">Dados de data são gravados no arquivo usando o formato de data universal.</span><span class="sxs-lookup"><span data-stu-id="29143-3029">Date data is written to the file using the universal date format.</span></span> <span data-ttu-id="29143-3030">Quando a data ou o componente de tempo está ausente ou zero, somente a parte fornecida é gravada no arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-3030">When either the date or the time component is missing or zero, only the part provided is written to the file.</span></span>  
  
-   <span data-ttu-id="29143-3031">Nada será gravado no arquivo se `Output` dados estão vazios.</span><span class="sxs-lookup"><span data-stu-id="29143-3031">Nothing is written to the file if `Output` data is empty.</span></span> <span data-ttu-id="29143-3032">No entanto, para dados nulos, `#NULL#` é gravado.</span><span class="sxs-lookup"><span data-stu-id="29143-3032">However, for null data, `#NULL#` is written.</span></span>  
  
-   <span data-ttu-id="29143-3033">Para `Error` dados, a saída é exibida como `#ERROR errorcode#`.</span><span class="sxs-lookup"><span data-stu-id="29143-3033">For `Error` data, the output appears as `#ERROR errorcode#`.</span></span> <span data-ttu-id="29143-3034">O `Error` palavra-chave não será convertido, independente da localidade.</span><span class="sxs-lookup"><span data-stu-id="29143-3034">The `Error` keyword is not translated, regardless of locale.</span></span>  
  
 <span data-ttu-id="29143-3035">`WriteLine` Insere um caractere de nova linha (ou seja, um retorno de carro/linha de alimentação, ou `Chr(13) + Chr(10)`), depois de escrever o caractere final `Output` para o arquivo.</span><span class="sxs-lookup"><span data-stu-id="29143-3035">`WriteLine` inserts a newline character (that is, a carriage return/line feed, or `Chr(13) + Chr(10)`), after it has written the final character in `Output` to the file.</span></span>  
  
 <span data-ttu-id="29143-3036">Você pode inserir aspas em uma cadeia de caracteres usando aspas duplas, ou "".</span><span class="sxs-lookup"><span data-stu-id="29143-3036">You can embed quotation marks in a string by using double quotation marks, or "".</span></span> <span data-ttu-id="29143-3037">Por exemplo,</span><span class="sxs-lookup"><span data-stu-id="29143-3037">For example,</span></span>  
  
 [!code-vb[VbVbalrCatRef#63](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#63)]  
  
 <span data-ttu-id="29143-3038">Retorna uma cadeia de caracteres com o valor de `Double quotation marks aren't "difficult" to handle`.</span><span class="sxs-lookup"><span data-stu-id="29143-3038">returns a string with the value of `Double quotation marks aren't "difficult" to handle`.</span></span>  
  
 <span data-ttu-id="29143-3039">Gravando em um arquivo usando o `Write` ou `WriteLine` funções requer `Append` acessar do `FileIOPermissionAccess` enumeração.</span><span class="sxs-lookup"><span data-stu-id="29143-3039">Writing to a file by using the `Write` or `WriteLine` functions requires `Append` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="29143-3040">Para obter mais informações, consulte <xref:System.Security.Permissions.FileIOPermissionAccess>.</span><span class="sxs-lookup"><span data-stu-id="29143-3040">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess> .</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29143-3041">Este exemplo usa o `Write` função para gravar dados brutos em um arquivo sequencial.</span><span class="sxs-lookup"><span data-stu-id="29143-3041">This example uses the `Write` function to write raw data to a sequential file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#64](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#64)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Input" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md"><span data-ttu-id="29143-3042">Access de arquivo com o Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-3042">File Access with Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files.md"><span data-ttu-id="29143-3043">Como gravar texto em arquivos no Visual Basic</span><span class="sxs-lookup"><span data-stu-id="29143-3043">How to: Write Text to Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files-with-a-streamwriter.md"><span data-ttu-id="29143-3044">Como: Gravar texto em um arquivo com um Streamwriter (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="29143-3044">How to: Write Text to a File with a Streamwriter (Visual Basic)</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>