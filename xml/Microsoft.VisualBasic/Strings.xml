<Type Name="Strings" FullName="Microsoft.VisualBasic.Strings">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6f80a22eca24fd7816ce2bd5da52f56f7f5f8c97" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39835423" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class Strings" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Strings extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Strings" />
  <TypeSignature Language="VB.NET" Value="Public Module Strings" />
  <TypeSignature Language="C++ CLI" Value="public ref class Strings sealed" />
  <TypeSignature Language="F#" Value="type Strings = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>Microsoft.VisualBasic.CompilerServices.StandardModule</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="a9d68-101">O módulo <see langword="Strings" /> contém procedimentos usados para executar operações de cadeia de caracteres.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a9d68-101">The <see langword="Strings" /> module contains procedures used to perform string operations.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9d68-102">Este módulo oferece suporte a palavras-chave de linguagem Visual Basic e membros da biblioteca de tempo de execução que manipulam cadeias de caracteres.</span><span class="sxs-lookup"><span data-stu-id="a9d68-102">This module supports the Visual Basic language keywords and run-time library members that manipulate strings.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a9d68-103">O exemplo a seguir demonstra como dividir uma cadeia de caracteres em seus espaços.</span><span class="sxs-lookup"><span data-stu-id="a9d68-103">The following example demonstrates how to split a string at its spaces.</span></span>  
  
 [!code-vb[VbVbalrStrings#13](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#13)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="Asc">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a9d68-104">Retorna um valor de <see langword="Integer" /> que representa o código de caractere correspondente a um caractere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-104">Returns an <see langword="Integer" /> value representing the character code corresponding to a character.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Asc">
      <MemberSignature Language="C#" Value="public static int Asc (char String);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Asc(char String) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Asc(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function Asc (String As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Asc(char String);" />
      <MemberSignature Language="F#" Value="static member Asc : char -&gt; int" Usage="Microsoft.VisualBasic.Strings.Asc String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="String" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="String">
          <span data-ttu-id="a9d68-105">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-105">Required.</span>
          </span>
          <span data-ttu-id="a9d68-106">Qualquer expressão <see langword="Char" /> ou <see langword="String" /> válida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-106">Any valid <see langword="Char" /> or <see langword="String" /> expression.</span>
          </span>
          <span data-ttu-id="a9d68-107">Se <c>String</c> for uma expressão <see langword="String" />, somente o primeiro caractere da cadeia de caracteres será usado para a entrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-107">If <c>String</c> is a <see langword="String" /> expression, only the first character of the string is used for input.</span>
          </span>
          <span data-ttu-id="a9d68-108">Se <c>String</c> for <see langword="Nothing" /> ou não contiver caracteres, ocorrerá um erro <see cref="T:System.ArgumentException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-108">If <c>String</c> is <see langword="Nothing" /> or contains no characters, an <see cref="T:System.ArgumentException" /> error occurs.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9d68-109">Retorna um valor de <see langword="Integer" /> que representa o código de caractere correspondente a um caractere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-109">Returns an <see langword="Integer" /> value representing the character code corresponding to a character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a9d68-110">Retorna um valor de <see langword="Integer" /> que representa o código de caractere correspondente a um caractere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-110">Returns an <see langword="Integer" /> value representing the character code corresponding to a character.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9d68-111">`Asc` Retorna o *ponto de código*, ou código de caractere, para o caractere de entrada.</span><span class="sxs-lookup"><span data-stu-id="a9d68-111">`Asc` returns the *code point*, or character code, for the input character.</span></span> <span data-ttu-id="a9d68-112">Isso pode ser de 0 a 255 para valores do caractere de byte único SBCS (conjunto) e -32768 a 32767 para valores DBCS (conjunto) de caracteres de byte duplo.</span><span class="sxs-lookup"><span data-stu-id="a9d68-112">This can be 0 through 255 for single-byte character set (SBCS) values and -32768 through 32767 for double-byte character set (DBCS) values.</span></span>  
  
 <span data-ttu-id="a9d68-113">`AscW` Retorna o ponto de código Unicode para o caractere de entrada.</span><span class="sxs-lookup"><span data-stu-id="a9d68-113">`AscW` returns the Unicode code point for the input character.</span></span> <span data-ttu-id="a9d68-114">Ele pode ser de 0 a 65535.</span><span class="sxs-lookup"><span data-stu-id="a9d68-114">This can be 0 through 65535.</span></span> <span data-ttu-id="a9d68-115">O valor retornado independe das configurações de cultura e da página de código para o thread atual.</span><span class="sxs-lookup"><span data-stu-id="a9d68-115">The returned value is independent of the culture and code page settings for the current thread.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a9d68-116">A função `AscB` de versões anteriores do Visual Basic retorna um código para um byte, em vez de um caractere.</span><span class="sxs-lookup"><span data-stu-id="a9d68-116">The `AscB` function of earlier versions of Visual Basic returns a code for a byte, rather than a character.</span></span> <span data-ttu-id="a9d68-117">Ele é usado principalmente para converter cadeias de caracteres em caracteres de byte duplo (DBCS) conjunto de aplicativos.</span><span class="sxs-lookup"><span data-stu-id="a9d68-117">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="a9d68-118">Todas as cadeias de caracteres do Visual Basic 2005 estão em Unicode, e `AscB` não é mais suportada.</span><span class="sxs-lookup"><span data-stu-id="a9d68-118">All Visual Basic 2005 strings are in Unicode, and `AscB` is no longer supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a9d68-119">O exemplo a seguir usa o `Asc` função retornar `Integer` correspondente para a primeira letra de cada cadeia de caracteres de códigos de caracteres.</span><span class="sxs-lookup"><span data-stu-id="a9d68-119">The following example uses the `Asc` function to return `Integer` character codes corresponding to the first letter in each string.</span></span>  
  
 [!code-vb[VbVbalrFunctions#19](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#19)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)" />
        <altmember cref="N:System.Globalization" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="P:System.Globalization.TextInfo.ANSICodePage" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="Asc">
      <MemberSignature Language="C#" Value="public static int Asc (string String);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Asc(string String) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Asc(System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Asc(System::String ^ String);" />
      <MemberSignature Language="F#" Value="static member Asc : string -&gt; int" Usage="Microsoft.VisualBasic.Strings.Asc String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="String" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="String">
          <span data-ttu-id="a9d68-120">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-120">Required.</span>
          </span>
          <span data-ttu-id="a9d68-121">Qualquer expressão <see langword="Char" /> ou <see langword="String" /> válida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-121">Any valid <see langword="Char" /> or <see langword="String" /> expression.</span>
          </span>
          <span data-ttu-id="a9d68-122">Se <c>String</c> for uma expressão <see langword="String" />, somente o primeiro caractere da cadeia de caracteres será usado para a entrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-122">If <c>String</c> is a <see langword="String" /> expression, only the first character of the string is used for input.</span>
          </span>
          <span data-ttu-id="a9d68-123">Se <c>String</c> for <see langword="Nothing" /> ou não contiver caracteres, ocorrerá um erro <see cref="T:System.ArgumentException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-123">If <c>String</c> is <see langword="Nothing" /> or contains no characters, an <see cref="T:System.ArgumentException" /> error occurs.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9d68-124">Retorna um valor de <see langword="Integer" /> que representa o código de caractere correspondente a um caractere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-124">Returns an <see langword="Integer" /> value representing the character code corresponding to a character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a9d68-125">Retorna um valor de <see langword="Integer" /> que representa o código de caractere correspondente a um caractere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-125">Returns an <see langword="Integer" /> value representing the character code corresponding to a character.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9d68-126">`Asc` Retorna o *ponto de código*, ou código de caractere, para o caractere de entrada.</span><span class="sxs-lookup"><span data-stu-id="a9d68-126">`Asc` returns the *code point*, or character code, for the input character.</span></span> <span data-ttu-id="a9d68-127">Isso pode ser de 0 a 255 para valores do caractere de byte único SBCS (conjunto) e -32768 a 32767 para valores DBCS (conjunto) de caracteres de byte duplo.</span><span class="sxs-lookup"><span data-stu-id="a9d68-127">This can be 0 through 255 for single-byte character set (SBCS) values and -32768 through 32767 for double-byte character set (DBCS) values.</span></span>  
  
 <span data-ttu-id="a9d68-128">`AscW` Retorna o ponto de código Unicode para o caractere de entrada.</span><span class="sxs-lookup"><span data-stu-id="a9d68-128">`AscW` returns the Unicode code point for the input character.</span></span> <span data-ttu-id="a9d68-129">Ele pode ser de 0 a 65535.</span><span class="sxs-lookup"><span data-stu-id="a9d68-129">This can be 0 through 65535.</span></span> <span data-ttu-id="a9d68-130">O valor retornado independe das configurações de cultura e da página de código para o thread atual.</span><span class="sxs-lookup"><span data-stu-id="a9d68-130">The returned value is independent of the culture and code page settings for the current thread.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a9d68-131">A função `AscB` de versões anteriores do Visual Basic retorna um código para um byte, em vez de um caractere.</span><span class="sxs-lookup"><span data-stu-id="a9d68-131">The `AscB` function of earlier versions of Visual Basic returns a code for a byte, rather than a character.</span></span> <span data-ttu-id="a9d68-132">Ele é usado principalmente para converter cadeias de caracteres em caracteres de byte duplo (DBCS) conjunto de aplicativos.</span><span class="sxs-lookup"><span data-stu-id="a9d68-132">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="a9d68-133">Todas as cadeias de caracteres do Visual Basic 2005 estão em Unicode, e `AscB` não é mais suportada.</span><span class="sxs-lookup"><span data-stu-id="a9d68-133">All Visual Basic 2005 strings are in Unicode, and `AscB` is no longer supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a9d68-134">O exemplo a seguir usa o `Asc` função retornar `Integer` correspondente para a primeira letra de cada cadeia de caracteres de códigos de caracteres.</span><span class="sxs-lookup"><span data-stu-id="a9d68-134">The following example uses the `Asc` function to return `Integer` character codes corresponding to the first letter in each string.</span></span>  
  
 [!code-vb[VbVbalrFunctions#19](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#19)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)" />
        <altmember cref="N:System.Globalization" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="P:System.Globalization.TextInfo.ANSICodePage" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AscW">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a9d68-135">Retorna um valor de <see langword="Integer" /> que representa o código de caractere correspondente a um caractere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-135">Returns an <see langword="Integer" /> value representing the character code corresponding to a character.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AscW">
      <MemberSignature Language="C#" Value="public static int AscW (char String);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 AscW(char String) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.AscW(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function AscW (String As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int AscW(char String);" />
      <MemberSignature Language="F#" Value="static member AscW : char -&gt; int" Usage="Microsoft.VisualBasic.Strings.AscW String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="String" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="String">
          <span data-ttu-id="a9d68-136">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-136">Required.</span>
          </span>
          <span data-ttu-id="a9d68-137">Qualquer expressão <see langword="Char" /> ou <see langword="String" /> válida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-137">Any valid <see langword="Char" /> or <see langword="String" /> expression.</span>
          </span>
          <span data-ttu-id="a9d68-138">Se <c>String</c> for uma expressão <see langword="String" />, somente o primeiro caractere da cadeia de caracteres será usado para a entrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-138">If <c>String</c> is a <see langword="String" /> expression, only the first character of the string is used for input.</span>
          </span>
          <span data-ttu-id="a9d68-139">Se <c>String</c> for <see langword="Nothing" /> ou não contiver caracteres, ocorrerá um erro <see cref="T:System.ArgumentException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-139">If <c>String</c> is <see langword="Nothing" /> or contains no characters, an <see cref="T:System.ArgumentException" /> error occurs.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9d68-140">Retorna um valor de <see langword="Integer" /> que representa o código de caractere correspondente a um caractere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-140">Returns an <see langword="Integer" /> value representing the character code corresponding to a character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a9d68-141">Retorna um valor de <see langword="Integer" /> que representa o código de caractere correspondente a um caractere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-141">Returns an <see langword="Integer" /> value representing the character code corresponding to a character.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9d68-142">`Asc` Retorna o *ponto de código*, ou código de caractere, para o caractere de entrada.</span><span class="sxs-lookup"><span data-stu-id="a9d68-142">`Asc` returns the *code point*, or character code, for the input character.</span></span> <span data-ttu-id="a9d68-143">Isso pode ser de 0 a 255 para valores do caractere de byte único SBCS (conjunto) e -32768 a 32767 para valores DBCS (conjunto) de caracteres de byte duplo.</span><span class="sxs-lookup"><span data-stu-id="a9d68-143">This can be 0 through 255 for single-byte character set (SBCS) values and -32768 through 32767 for double-byte character set (DBCS) values.</span></span>  
  
 <span data-ttu-id="a9d68-144">`AscW` Retorna o ponto de código Unicode para o caractere de entrada.</span><span class="sxs-lookup"><span data-stu-id="a9d68-144">`AscW` returns the Unicode code point for the input character.</span></span> <span data-ttu-id="a9d68-145">Ele pode ser de 0 a 65535.</span><span class="sxs-lookup"><span data-stu-id="a9d68-145">This can be 0 through 65535.</span></span> <span data-ttu-id="a9d68-146">O valor retornado independe das configurações de cultura e da página de código para o thread atual.</span><span class="sxs-lookup"><span data-stu-id="a9d68-146">The returned value is independent of the culture and code page settings for the current thread.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a9d68-147">A função `AscB` de versões anteriores do Visual Basic retorna um código para um byte, em vez de um caractere.</span><span class="sxs-lookup"><span data-stu-id="a9d68-147">The `AscB` function of earlier versions of Visual Basic returns a code for a byte, rather than a character.</span></span> <span data-ttu-id="a9d68-148">Ele é usado principalmente para converter cadeias de caracteres em caracteres de byte duplo (DBCS) conjunto de aplicativos.</span><span class="sxs-lookup"><span data-stu-id="a9d68-148">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="a9d68-149">Todas as cadeias de caracteres do Visual Basic 2005 estão em Unicode, e `AscB` não é mais suportada.</span><span class="sxs-lookup"><span data-stu-id="a9d68-149">All Visual Basic 2005 strings are in Unicode, and `AscB` is no longer supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a9d68-150">O exemplo a seguir usa o `Asc` função retornar `Integer` correspondente para a primeira letra de cada cadeia de caracteres de códigos de caracteres.</span><span class="sxs-lookup"><span data-stu-id="a9d68-150">The following example uses the `Asc` function to return `Integer` character codes corresponding to the first letter in each string.</span></span>  
  
 [!code-vb[VbVbalrFunctions#19](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#19)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)" />
        <altmember cref="N:System.Globalization" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="P:System.Globalization.TextInfo.ANSICodePage" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="AscW">
      <MemberSignature Language="C#" Value="public static int AscW (string String);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 AscW(string String) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.AscW(System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int AscW(System::String ^ String);" />
      <MemberSignature Language="F#" Value="static member AscW : string -&gt; int" Usage="Microsoft.VisualBasic.Strings.AscW String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="String" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="String">
          <span data-ttu-id="a9d68-151">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-151">Required.</span>
          </span>
          <span data-ttu-id="a9d68-152">Qualquer expressão <see langword="Char" /> ou <see langword="String" /> válida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-152">Any valid <see langword="Char" /> or <see langword="String" /> expression.</span>
          </span>
          <span data-ttu-id="a9d68-153">Se <c>String</c> for uma expressão <see langword="String" />, somente o primeiro caractere da cadeia de caracteres será usado para a entrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-153">If <c>String</c> is a <see langword="String" /> expression, only the first character of the string is used for input.</span>
          </span>
          <span data-ttu-id="a9d68-154">Se <c>String</c> for <see langword="Nothing" /> ou não contiver caracteres, ocorrerá um erro <see cref="T:System.ArgumentException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-154">If <c>String</c> is <see langword="Nothing" /> or contains no characters, an <see cref="T:System.ArgumentException" /> error occurs.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9d68-155">Retorna um valor de <see langword="Integer" /> que representa o código de caractere correspondente a um caractere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-155">Returns an <see langword="Integer" /> value representing the character code corresponding to a character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a9d68-156">Retorna um valor de <see langword="Integer" /> que representa o código de caractere correspondente a um caractere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-156">Returns an <see langword="Integer" /> value representing the character code corresponding to a character.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9d68-157">`Asc` Retorna o *ponto de código*, ou código de caractere, para o caractere de entrada.</span><span class="sxs-lookup"><span data-stu-id="a9d68-157">`Asc` returns the *code point*, or character code, for the input character.</span></span> <span data-ttu-id="a9d68-158">Isso pode ser de 0 a 255 para valores do caractere de byte único SBCS (conjunto) e -32768 a 32767 para valores DBCS (conjunto) de caracteres de byte duplo.</span><span class="sxs-lookup"><span data-stu-id="a9d68-158">This can be 0 through 255 for single-byte character set (SBCS) values and -32768 through 32767 for double-byte character set (DBCS) values.</span></span>  
  
 <span data-ttu-id="a9d68-159">`AscW` Retorna o ponto de código Unicode para o caractere de entrada.</span><span class="sxs-lookup"><span data-stu-id="a9d68-159">`AscW` returns the Unicode code point for the input character.</span></span> <span data-ttu-id="a9d68-160">Ele pode ser de 0 a 65535.</span><span class="sxs-lookup"><span data-stu-id="a9d68-160">This can be 0 through 65535.</span></span> <span data-ttu-id="a9d68-161">O valor retornado independe das configurações de cultura e da página de código para o thread atual.</span><span class="sxs-lookup"><span data-stu-id="a9d68-161">The returned value is independent of the culture and code page settings for the current thread.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a9d68-162">A função `AscB` de versões anteriores do Visual Basic retorna um código para um byte, em vez de um caractere.</span><span class="sxs-lookup"><span data-stu-id="a9d68-162">The `AscB` function of earlier versions of Visual Basic returns a code for a byte, rather than a character.</span></span> <span data-ttu-id="a9d68-163">Ele é usado principalmente para converter cadeias de caracteres em caracteres de byte duplo (DBCS) conjunto de aplicativos.</span><span class="sxs-lookup"><span data-stu-id="a9d68-163">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="a9d68-164">Todas as cadeias de caracteres do Visual Basic 2005 estão em Unicode, e `AscB` não é mais suportada.</span><span class="sxs-lookup"><span data-stu-id="a9d68-164">All Visual Basic 2005 strings are in Unicode, and `AscB` is no longer supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a9d68-165">O exemplo a seguir usa o `Asc` função retornar `Integer` correspondente para a primeira letra de cada cadeia de caracteres de códigos de caracteres.</span><span class="sxs-lookup"><span data-stu-id="a9d68-165">The following example uses the `Asc` function to return `Integer` character codes corresponding to the first letter in each string.</span></span>  
  
 [!code-vb[VbVbalrFunctions#19](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#19)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)" />
        <altmember cref="N:System.Globalization" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="P:System.Globalization.TextInfo.ANSICodePage" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="Chr">
      <MemberSignature Language="C#" Value="public static char Chr (int CharCode);" />
      <MemberSignature Language="ILAsm" Value=".method public static char Chr(int32 CharCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Chr (CharCode As Integer) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char Chr(int CharCode);" />
      <MemberSignature Language="F#" Value="static member Chr : int -&gt; char" Usage="Microsoft.VisualBasic.Strings.Chr CharCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="CharCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="CharCode">
          <span data-ttu-id="a9d68-166">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-166">Required.</span>
          </span>
          <span data-ttu-id="a9d68-167">Uma expressão <see langword="Integer" /> que representa o <c>ponto de código</c> ou código de caractere, do caractere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-167">An <see langword="Integer" /> expression representing the <c>code point</c>, or character code, for the character.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9d68-168">Retorna o caractere associado ao código de caractere especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-168">Returns the character associated with the specified character code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a9d68-169">Retorna o caractere associado ao código de caractere especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-169">Returns the character associated with the specified character code.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9d68-170">O intervalo assimétrico aceito por `CharCode` compensa as diferenças de armazenamento entre o `Short` e o `Integer`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-170">The asymmetric range accepted for `CharCode` compensates for the storage differences between the `Short` and the `Integer`.</span></span> <span data-ttu-id="a9d68-171">Por exemplo, -29183 é um `Short` mas + 36353 é um `Integer`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-171">For example, -29183 is a `Short` but +36353 is an `Integer`.</span></span> <span data-ttu-id="a9d68-172">Isso também facilita a compatibilidade com o Visual Basic 6.0.</span><span class="sxs-lookup"><span data-stu-id="a9d68-172">This also facilitates compatibility with Visual Basic 6.0.</span></span>  
  
 <span data-ttu-id="a9d68-173">`Chr` usa o <xref:System.Text.Encoding> classe o <xref:System.Text?displayProperty=nameWithType> definido de namespace para determinar se o thread atual está usando um conjunto de caracteres de byte único (SBCS) ou um caractere de byte duplo (DBCS).</span><span class="sxs-lookup"><span data-stu-id="a9d68-173">`Chr` uses the <xref:System.Text.Encoding> class in the <xref:System.Text?displayProperty=nameWithType> namespace to determine if the current thread is using a single-byte character set (SBCS) or a double-byte character set (DBCS).</span></span> <span data-ttu-id="a9d68-174">Ele considera `CharCode` como um código de pontos no conjunto apropriado.</span><span class="sxs-lookup"><span data-stu-id="a9d68-174">It then takes `CharCode` as a code point in the appropriate set.</span></span> <span data-ttu-id="a9d68-175">O intervalo pode ser de 0 a 255 caracteres de SBCS e -32768 a 65535 para caracteres DBCS.</span><span class="sxs-lookup"><span data-stu-id="a9d68-175">The range can be 0 through 255 for SBCS characters and -32768 through 65535 for DBCS characters.</span></span>  
  
 <span data-ttu-id="a9d68-176">O valor retornado depende da página de código para o thread atual, que está contida na <xref:System.Globalization.TextInfo.ANSICodePage%2A> propriedade do <xref:System.Globalization.TextInfo> classe o <xref:System.Globalization> namespace.</span><span class="sxs-lookup"><span data-stu-id="a9d68-176">The returned value depends on the code page for the current thread, which is contained in the <xref:System.Globalization.TextInfo.ANSICodePage%2A> property of the <xref:System.Globalization.TextInfo> class in the <xref:System.Globalization> namespace.</span></span> <span data-ttu-id="a9d68-177">Você pode obter <xref:System.Globalization.TextInfo.ANSICodePage%2A> especificando `System.Globalization.CultureInfo.CurrentCulture.TextInfo.ANSICodePage`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-177">You can obtain <xref:System.Globalization.TextInfo.ANSICodePage%2A> by specifying `System.Globalization.CultureInfo.CurrentCulture.TextInfo.ANSICodePage`.</span></span>  
  
 <span data-ttu-id="a9d68-178">`ChrW` leva `CharCode` ponto de código como Unicode.</span><span class="sxs-lookup"><span data-stu-id="a9d68-178">`ChrW` takes `CharCode` as a Unicode code point.</span></span> <span data-ttu-id="a9d68-179">O intervalo é independente das configurações de página da cultura e o código para o thread atual.</span><span class="sxs-lookup"><span data-stu-id="a9d68-179">The range is independent of the culture and code page settings for the current thread.</span></span> <span data-ttu-id="a9d68-180">Valores de -32768 a-1 são tratadas como valores no intervalo + 32768 a + 65535.</span><span class="sxs-lookup"><span data-stu-id="a9d68-180">Values from -32768 through -1 are treated the same as values in the range +32768 through +65535.</span></span>  
  
 <span data-ttu-id="a9d68-181">Números de 0 a 31 são o mesmo que os códigos ASCII não imprimíveis padrão.</span><span class="sxs-lookup"><span data-stu-id="a9d68-181">Numbers from 0 through 31 are the same as standard nonprintable ASCII codes.</span></span> <span data-ttu-id="a9d68-182">Por exemplo, `Chr(10)` retorna o caractere de alimentação de uma linha.</span><span class="sxs-lookup"><span data-stu-id="a9d68-182">For example, `Chr(10)` returns a line feed character.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a9d68-183">O `ChrB` função em versões anteriores do Visual Basic retorna um único byte.</span><span class="sxs-lookup"><span data-stu-id="a9d68-183">The `ChrB` function in earlier versions of Visual Basic returns a single byte.</span></span> <span data-ttu-id="a9d68-184">Ele é usado principalmente para converter cadeias de caracteres em caracteres de byte duplo (DBCS) conjunto de aplicativos.</span><span class="sxs-lookup"><span data-stu-id="a9d68-184">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="a9d68-185">Todas as cadeias de caracteres no Visual Basic e o .NET Framework estão em Unicode, e `ChrB` não é mais suportada.</span><span class="sxs-lookup"><span data-stu-id="a9d68-185">All strings in Visual Basic and the .NET Framework are in Unicode, and `ChrB` is no longer supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a9d68-186">O exemplo a seguir usa o `Chr` função para retornar o caractere associado ao código de caractere especificado.</span><span class="sxs-lookup"><span data-stu-id="a9d68-186">The following example uses the `Chr` function to return the character associated with the specified character code.</span></span>  
  
 [!code-vb[VbVbalrStrings#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a9d68-187">
            <paramref name="CharCode" /> &lt; 0 ou &gt; 255 para <see langword="Chr" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-187">
              <paramref name="CharCode" /> &lt; 0 or &gt; 255 for <see langword="Chr" />.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Asc" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.AscW" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.Str(System.Object)" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="ChrW">
      <MemberSignature Language="C#" Value="public static char ChrW (int CharCode);" />
      <MemberSignature Language="ILAsm" Value=".method public static char ChrW(int32 CharCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ChrW (CharCode As Integer) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ChrW(int CharCode);" />
      <MemberSignature Language="F#" Value="static member ChrW : int -&gt; char" Usage="Microsoft.VisualBasic.Strings.ChrW CharCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="CharCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="CharCode">
          <span data-ttu-id="a9d68-188">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-188">Required.</span>
          </span>
          <span data-ttu-id="a9d68-189">Uma expressão <see langword="Integer" /> que representa o <c>ponto de código</c> ou código de caractere, do caractere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-189">An <see langword="Integer" /> expression representing the <c>code point</c>, or character code, for the character.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9d68-190">Retorna o caractere associado ao código de caractere especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-190">Returns the character associated with the specified character code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a9d68-191">Retorna o caractere associado ao código de caractere especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-191">Returns the character associated with the specified character code.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9d68-192">O intervalo assimétrico aceito por `CharCode` compensa as diferenças de armazenamento entre o `Short` e o `Integer`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-192">The asymmetric range accepted for `CharCode` compensates for the storage differences between the `Short` and the `Integer`.</span></span> <span data-ttu-id="a9d68-193">Por exemplo, -29183 é um `Short` mas + 36353 é um `Integer`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-193">For example, -29183 is a `Short` but +36353 is an `Integer`.</span></span> <span data-ttu-id="a9d68-194">Isso também facilita a compatibilidade com o Visual Basic 6.0.</span><span class="sxs-lookup"><span data-stu-id="a9d68-194">This also facilitates compatibility with Visual Basic 6.0.</span></span>  
  
 <span data-ttu-id="a9d68-195">`Chr` usa o <xref:System.Text.Encoding> classe o <xref:System.Text?displayProperty=nameWithType> definido de namespace para determinar se o thread atual está usando um conjunto de caracteres de byte único (SBCS) ou um caractere de byte duplo (DBCS).</span><span class="sxs-lookup"><span data-stu-id="a9d68-195">`Chr` uses the <xref:System.Text.Encoding> class in the <xref:System.Text?displayProperty=nameWithType> namespace to determine if the current thread is using a single-byte character set (SBCS) or a double-byte character set (DBCS).</span></span> <span data-ttu-id="a9d68-196">Ele considera `CharCode` como um código de pontos no conjunto apropriado.</span><span class="sxs-lookup"><span data-stu-id="a9d68-196">It then takes `CharCode` as a code point in the appropriate set.</span></span> <span data-ttu-id="a9d68-197">O intervalo pode ser de 0 a 255 caracteres de SBCS e -32768 a 65535 para caracteres DBCS.</span><span class="sxs-lookup"><span data-stu-id="a9d68-197">The range can be 0 through 255 for SBCS characters and -32768 through 65535 for DBCS characters.</span></span>  
  
 <span data-ttu-id="a9d68-198">O valor retornado depende da página de código para o thread atual, que está contida na <xref:System.Globalization.TextInfo.ANSICodePage%2A> propriedade do <xref:System.Globalization.TextInfo> classe o <xref:System.Globalization> namespace.</span><span class="sxs-lookup"><span data-stu-id="a9d68-198">The returned value depends on the code page for the current thread, which is contained in the <xref:System.Globalization.TextInfo.ANSICodePage%2A> property of the <xref:System.Globalization.TextInfo> class in the <xref:System.Globalization> namespace.</span></span> <span data-ttu-id="a9d68-199">Você pode obter <xref:System.Globalization.TextInfo.ANSICodePage%2A> especificando `System.Globalization.CultureInfo.CurrentCulture.TextInfo.ANSICodePage`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-199">You can obtain <xref:System.Globalization.TextInfo.ANSICodePage%2A> by specifying `System.Globalization.CultureInfo.CurrentCulture.TextInfo.ANSICodePage`.</span></span>  
  
 <span data-ttu-id="a9d68-200">`ChrW` leva `CharCode` ponto de código como Unicode.</span><span class="sxs-lookup"><span data-stu-id="a9d68-200">`ChrW` takes `CharCode` as a Unicode code point.</span></span> <span data-ttu-id="a9d68-201">O intervalo é independente das configurações de página da cultura e o código para o thread atual.</span><span class="sxs-lookup"><span data-stu-id="a9d68-201">The range is independent of the culture and code page settings for the current thread.</span></span> <span data-ttu-id="a9d68-202">Valores de -32768 a-1 são tratadas como valores no intervalo + 32768 a + 65535.</span><span class="sxs-lookup"><span data-stu-id="a9d68-202">Values from -32768 through -1 are treated the same as values in the range +32768 through +65535.</span></span>  
  
 <span data-ttu-id="a9d68-203">Números de 0 a 31 são o mesmo que os códigos ASCII não imprimíveis padrão.</span><span class="sxs-lookup"><span data-stu-id="a9d68-203">Numbers from 0 through 31 are the same as standard nonprintable ASCII codes.</span></span> <span data-ttu-id="a9d68-204">Por exemplo, `Chr(10)` retorna o caractere de alimentação de uma linha.</span><span class="sxs-lookup"><span data-stu-id="a9d68-204">For example, `Chr(10)` returns a line feed character.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a9d68-205">O `ChrB` função em versões anteriores do Visual Basic retorna um único byte.</span><span class="sxs-lookup"><span data-stu-id="a9d68-205">The `ChrB` function in earlier versions of Visual Basic returns a single byte.</span></span> <span data-ttu-id="a9d68-206">Ele é usado principalmente para converter cadeias de caracteres em caracteres de byte duplo (DBCS) conjunto de aplicativos.</span><span class="sxs-lookup"><span data-stu-id="a9d68-206">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="a9d68-207">Todas as cadeias de caracteres no Visual Basic e o .NET Framework estão em Unicode, e `ChrB` não é mais suportada.</span><span class="sxs-lookup"><span data-stu-id="a9d68-207">All strings in Visual Basic and the .NET Framework are in Unicode, and `ChrB` is no longer supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a9d68-208">O exemplo a seguir usa o `Chr` função para retornar o caractere associado ao código de caractere especificado.</span><span class="sxs-lookup"><span data-stu-id="a9d68-208">The following example uses the `Chr` function to return the character associated with the specified character code.</span></span>  
  
 [!code-vb[VbVbalrStrings#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a9d68-209">
            <paramref name="CharCode" /> &lt; -32768 ou &gt; 65535 para <see langword="ChrW" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-209">
              <paramref name="CharCode" /> &lt; -32768 or &gt; 65535 for <see langword="ChrW" />.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Asc" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.AscW" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.Str(System.Object)" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Filter">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a9d68-210">Retorna uma matriz baseada em zero contendo um subconjunto de uma matriz <see langword="String" /> com base em critérios de filtro especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-210">Returns a zero-based array containing a subset of a <see langword="String" /> array based on specified filter criteria.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public static string[] Filter (object[] Source, string Match, bool Include = true, Microsoft.VisualBasic.CompareMethod Compare = Microsoft.VisualBasic.CompareMethod.Binary);" />
      <MemberSignature Language="ILAsm" Value=".method public static string[] Filter(object[] Source, string Match, bool Include, valuetype Microsoft.VisualBasic.CompareMethod Compare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Filter(System.Object[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Function Filter (Source As Object(), Match As String, Optional Include As Boolean = true, Optional Compare As CompareMethod = Microsoft.VisualBasic.CompareMethod.Binary) As String()" />
      <MemberSignature Language="F#" Value="static member Filter : obj[] * string * bool * Microsoft.VisualBasic.CompareMethod -&gt; string[]" Usage="Microsoft.VisualBasic.Strings.Filter (Source, Match, Include, Compare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Source" Type="System.Object[]" />
        <Parameter Name="Match" Type="System.String" />
        <Parameter Name="Include" Type="System.Boolean" />
        <Parameter Name="Compare" Type="Microsoft.VisualBasic.CompareMethod">
          <Attributes>
            <Attribute>
              <AttributeName>Microsoft.VisualBasic.CompilerServices.OptionCompare</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="Source">
          <span data-ttu-id="a9d68-211">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-211">Required.</span>
          </span>
          <span data-ttu-id="a9d68-212">Matriz unidimensional de cadeias de caracteres a ser pesquisada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-212">One-dimensional array of strings to be searched.</span>
          </span>
        </param>
        <param name="Match">
          <span data-ttu-id="a9d68-213">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-213">Required.</span>
          </span>
          <span data-ttu-id="a9d68-214">Cadeia de caracteres a ser pesquisada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-214">String to search for.</span>
          </span>
        </param>
        <param name="Include">
          <span data-ttu-id="a9d68-215">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-215">Optional.</span>
          </span>
          <span data-ttu-id="a9d68-216">Valor <see langword="Boolean" /> que indica se as subcadeias de caracteres que incluem ou excluem <c>Match</c> devem ser retornadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-216">
              <see langword="Boolean" /> value indicating whether to return substrings that include or exclude <c>Match</c>.</span>
          </span>
          <span data-ttu-id="a9d68-217">Se <c>Include</c> for <see langword="True" />, a função <see langword="Filter" /> retornará o subconjunto da matriz que contém <c>Match</c> como uma subcadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-217">If <c>Include</c> is <see langword="True" />, the <see langword="Filter" /> function returns the subset of the array that contains <c>Match</c> as a substring.</span>
          </span>
          <span data-ttu-id="a9d68-218">Se <c>Include</c> for <see langword="False" />, a função <see langword="Filter" /> retornará o subconjunto da matriz que não contém <c>Match</c> como uma subcadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-218">If <c>Include</c> is <see langword="False" />, the <see langword="Filter" /> function returns the subset of the array that does not contain <c>Match</c> as a substring.</span>
          </span>
        </param>
        <param name="Compare">
          <span data-ttu-id="a9d68-219">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-219">Optional.</span>
          </span>
          <span data-ttu-id="a9d68-220">Valor numérico que indica o tipo de comparação de cadeia de caracteres a ser usado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-220">Numeric value indicating the kind of string comparison to use.</span>
          </span>
          <span data-ttu-id="a9d68-221">Consulte “Configurações” para obter os valores.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-221">See "Settings" for values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9d68-222">Retorna uma matriz baseada em zero contendo um subconjunto de uma matriz <see langword="String" /> com base em critérios de filtro especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-222">Returns a zero-based array containing a subset of a <see langword="String" /> array based on specified filter criteria.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a9d68-223">Retorna uma matriz baseada em zero contendo um subconjunto de uma matriz <see langword="String" /> com base em critérios de filtro especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-223">Returns a zero-based array containing a subset of a <see langword="String" /> array based on specified filter criteria.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9d68-224">Se nenhuma correspondência de `Match` encontram `Source`, o `Filter` função retorna uma matriz vazia.</span><span class="sxs-lookup"><span data-stu-id="a9d68-224">If no matches of `Match` are found within `Source`, the `Filter` function returns an empty array.</span></span> <span data-ttu-id="a9d68-225">Ocorrerá um erro se `Source` é definido como `Nothing` ou não é uma matriz unidimensional.</span><span class="sxs-lookup"><span data-stu-id="a9d68-225">An error occurs if `Source` is set to `Nothing` or is not a one-dimensional array.</span></span>  
  
 <span data-ttu-id="a9d68-226">A matriz retornada pelo `Filter` função contém apenas elementos suficientes para conter o número de itens correspondentes.</span><span class="sxs-lookup"><span data-stu-id="a9d68-226">The array returned by the `Filter` function contains only enough elements to contain the number of matched items.</span></span>  
  
 <span data-ttu-id="a9d68-227">O `Compare` argumento pode ter os seguintes valores.</span><span class="sxs-lookup"><span data-stu-id="a9d68-227">The `Compare` argument can have the following values.</span></span>  
  
|<span data-ttu-id="a9d68-228">Constante</span><span class="sxs-lookup"><span data-stu-id="a9d68-228">Constant</span></span>|<span data-ttu-id="a9d68-229">Descrição</span><span class="sxs-lookup"><span data-stu-id="a9d68-229">Description</span></span>|  
|-|-|  
|<span data-ttu-id="a9d68-230">Constante</span><span class="sxs-lookup"><span data-stu-id="a9d68-230">Constant</span></span>|<span data-ttu-id="a9d68-231">Descrição</span><span class="sxs-lookup"><span data-stu-id="a9d68-231">Description</span></span>|  
|`CompareMethod.Binary`|<span data-ttu-id="a9d68-232">Executa uma comparação binária</span><span class="sxs-lookup"><span data-stu-id="a9d68-232">Performs a binary comparison</span></span>|  
|`CompareMethod.Text`|<span data-ttu-id="a9d68-233">Executa uma comparação textual</span><span class="sxs-lookup"><span data-stu-id="a9d68-233">Performs a textual comparison</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="a9d68-234">Este exemplo demonstra o uso do `Filter` função.</span><span class="sxs-lookup"><span data-stu-id="a9d68-234">This example demonstrates the use of the `Filter` function.</span></span>  
  
 [!code-vb[VbVbalrStrings#24](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#24)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a9d68-235">
            <paramref name="Source" /> é <see langword="Nothing" /> ou não é uma matriz unidimensional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-235">
              <paramref name="Source" /> is <see langword="Nothing" /> or is not a one-dimensional array.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public static string[] Filter (string[] Source, string Match, bool Include = true, Microsoft.VisualBasic.CompareMethod Compare = Microsoft.VisualBasic.CompareMethod.Binary);" />
      <MemberSignature Language="ILAsm" Value=".method public static string[] Filter(string[] Source, string Match, bool Include, valuetype Microsoft.VisualBasic.CompareMethod Compare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Filter(System.String[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Function Filter (Source As String(), Match As String, Optional Include As Boolean = true, Optional Compare As CompareMethod = Microsoft.VisualBasic.CompareMethod.Binary) As String()" />
      <MemberSignature Language="F#" Value="static member Filter : string[] * string * bool * Microsoft.VisualBasic.CompareMethod -&gt; string[]" Usage="Microsoft.VisualBasic.Strings.Filter (Source, Match, Include, Compare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Source" Type="System.String[]" />
        <Parameter Name="Match" Type="System.String" />
        <Parameter Name="Include" Type="System.Boolean" />
        <Parameter Name="Compare" Type="Microsoft.VisualBasic.CompareMethod">
          <Attributes>
            <Attribute>
              <AttributeName>Microsoft.VisualBasic.CompilerServices.OptionCompare</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="Source">
          <span data-ttu-id="a9d68-236">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-236">Required.</span>
          </span>
          <span data-ttu-id="a9d68-237">Matriz unidimensional de cadeias de caracteres a ser pesquisada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-237">One-dimensional array of strings to be searched.</span>
          </span>
        </param>
        <param name="Match">
          <span data-ttu-id="a9d68-238">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-238">Required.</span>
          </span>
          <span data-ttu-id="a9d68-239">Cadeia de caracteres a ser pesquisada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-239">String to search for.</span>
          </span>
        </param>
        <param name="Include">
          <span data-ttu-id="a9d68-240">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-240">Optional.</span>
          </span>
          <span data-ttu-id="a9d68-241">Valor <see langword="Boolean" /> que indica se as subcadeias de caracteres que incluem ou excluem <c>Match</c> devem ser retornadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-241">
              <see langword="Boolean" /> value indicating whether to return substrings that include or exclude <c>Match</c>.</span>
          </span>
          <span data-ttu-id="a9d68-242">Se <c>Include</c> for <see langword="True" />, a função <see langword="Filter" /> retornará o subconjunto da matriz que contém <c>Match</c> como uma subcadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-242">If <c>Include</c> is <see langword="True" />, the <see langword="Filter" /> function returns the subset of the array that contains <c>Match</c> as a substring.</span>
          </span>
          <span data-ttu-id="a9d68-243">Se <c>Include</c> for <see langword="False" />, a função <see langword="Filter" /> retornará o subconjunto da matriz que não contém <c>Match</c> como uma subcadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-243">If <c>Include</c> is <see langword="False" />, the <see langword="Filter" /> function returns the subset of the array that does not contain <c>Match</c> as a substring.</span>
          </span>
        </param>
        <param name="Compare">
          <span data-ttu-id="a9d68-244">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-244">Optional.</span>
          </span>
          <span data-ttu-id="a9d68-245">Valor numérico que indica o tipo de comparação de cadeia de caracteres a ser usado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-245">Numeric value indicating the kind of string comparison to use.</span>
          </span>
          <span data-ttu-id="a9d68-246">Consulte “Configurações” para obter os valores.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-246">See "Settings" for values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9d68-247">Retorna uma matriz baseada em zero contendo um subconjunto de uma matriz <see langword="String" /> com base em critérios de filtro especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-247">Returns a zero-based array containing a subset of a <see langword="String" /> array based on specified filter criteria.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a9d68-248">Retorna uma matriz baseada em zero contendo um subconjunto de uma matriz <see langword="String" /> com base em critérios de filtro especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-248">Returns a zero-based array containing a subset of a <see langword="String" /> array based on specified filter criteria.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9d68-249">Se nenhuma correspondência de `Match` encontram `Source`, o `Filter` função retorna uma matriz vazia.</span><span class="sxs-lookup"><span data-stu-id="a9d68-249">If no matches of `Match` are found within `Source`, the `Filter` function returns an empty array.</span></span> <span data-ttu-id="a9d68-250">Ocorrerá um erro se `Source` é definido como `Nothing` ou não é uma matriz unidimensional.</span><span class="sxs-lookup"><span data-stu-id="a9d68-250">An error occurs if `Source` is set to `Nothing` or is not a one-dimensional array.</span></span>  
  
 <span data-ttu-id="a9d68-251">A matriz retornada pelo `Filter` função contém apenas elementos suficientes para conter o número de itens correspondentes.</span><span class="sxs-lookup"><span data-stu-id="a9d68-251">The array returned by the `Filter` function contains only enough elements to contain the number of matched items.</span></span>  
  
 <span data-ttu-id="a9d68-252">O `Compare` argumento pode ter os seguintes valores.</span><span class="sxs-lookup"><span data-stu-id="a9d68-252">The `Compare` argument can have the following values.</span></span>  
  
|<span data-ttu-id="a9d68-253">Constante</span><span class="sxs-lookup"><span data-stu-id="a9d68-253">Constant</span></span>|<span data-ttu-id="a9d68-254">Descrição</span><span class="sxs-lookup"><span data-stu-id="a9d68-254">Description</span></span>|  
|-|-|  
|`CompareMethod.Binary`|<span data-ttu-id="a9d68-255">Executa uma comparação binária</span><span class="sxs-lookup"><span data-stu-id="a9d68-255">Performs a binary comparison</span></span>|  
|`CompareMethod.Text`|<span data-ttu-id="a9d68-256">Executa uma comparação textual</span><span class="sxs-lookup"><span data-stu-id="a9d68-256">Performs a textual comparison</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="a9d68-257">Este exemplo demonstra o uso do `Filter` função.</span><span class="sxs-lookup"><span data-stu-id="a9d68-257">This example demonstrates the use of the `Filter` function.</span></span>  
  
 [!code-vb[VbVbalrStrings#24](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#24)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a9d68-258">
            <paramref name="Source" /> é <see langword="Nothing" /> ou não é uma matriz unidimensional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-258">
              <paramref name="Source" /> is <see langword="Nothing" /> or is not a one-dimensional array.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public static string Format (object Expression, string Style = &quot;&quot;);" />
      <MemberSignature Language="ILAsm" Value=".method public static string Format(object Expression, string Style) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Format (Expression As Object, Optional Style As String = &quot;&quot;) As String" />
      <MemberSignature Language="F#" Value="static member Format : obj * string -&gt; string" Usage="Microsoft.VisualBasic.Strings.Format (Expression, Style)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" />
        <Parameter Name="Style" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Expression">
          <span data-ttu-id="a9d68-259">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-259">Required.</span>
          </span>
          <span data-ttu-id="a9d68-260">Qualquer expressão válida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-260">Any valid expression.</span>
          </span>
        </param>
        <param name="Style">
          <span data-ttu-id="a9d68-261">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-261">Optional.</span>
          </span>
          <span data-ttu-id="a9d68-262">Uma expressão válida <see langword="String" /> de formato nomeada ou definida pelo usuário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-262">A valid named or user-defined format <see langword="String" /> expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9d68-263">Retorna uma cadeia de caracteres formatada de acordo com as instruções contidas em uma expressão <see langword="String" /> de formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-263">Returns a string formatted according to instructions contained in a format <see langword="String" /> expression.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a9d68-264">Retorna uma cadeia de caracteres formatada de acordo com as instruções contidas em uma expressão <see langword="String" /> de formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-264">Returns a string formatted according to instructions contained in a format <see langword="String" /> expression.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9d68-265">O <xref:System.String.Format%2A?displayProperty=nameWithType> método também fornece funcionalidade semelhante.</span><span class="sxs-lookup"><span data-stu-id="a9d68-265">The <xref:System.String.Format%2A?displayProperty=nameWithType> method also provides similar functionality.</span></span>  
  
 <span data-ttu-id="a9d68-266">Se você estiver formatando uma cadeia de caracteres numérica não localizada, você deve usar um formato numérico definido pelo usuário para garantir que você obtenha a aparência desejada.</span><span class="sxs-lookup"><span data-stu-id="a9d68-266">If you are formatting a nonlocalized numeric string, you should use a user-defined numeric format to ensure that you get the look you want.</span></span>  
  
 <span data-ttu-id="a9d68-267">Se você tentar formatar um número sem especificar `Style`, o `Format` função fornece uma funcionalidade semelhante para o `Str` funcionar, embora seja internacionalizada.</span><span class="sxs-lookup"><span data-stu-id="a9d68-267">If you try to format a number without specifying `Style`, the `Format` function provides functionality similar to the `Str` function, although it is internationally aware.</span></span> <span data-ttu-id="a9d68-268">No entanto, os números positivos são formatadas como cadeias de caracteres usando o `Format` função não inclua um espaço à esquerda reservado para o sinal do valor; aqueles convertido usando o `Str` função manter o espaço à esquerda.</span><span class="sxs-lookup"><span data-stu-id="a9d68-268">However, positive numbers formatted as strings using the `Format` function don't include a leading space reserved for the sign of the value; those converted using the `Str` function retain the leading space.</span></span>  
  
## <a name="different-formats-for-different-numeric-values"></a><span data-ttu-id="a9d68-269">Formatos diferentes para valores numéricos diferentes</span><span class="sxs-lookup"><span data-stu-id="a9d68-269">Different Formats for Different Numeric Values</span></span>  
 <span data-ttu-id="a9d68-270">Uma expressão de formato definido pelo usuário para números pode ter de uma a três seções separadas por ponto e vírgula.</span><span class="sxs-lookup"><span data-stu-id="a9d68-270">A user-defined format expression for numbers can have from one to three sections separated by semicolons.</span></span> <span data-ttu-id="a9d68-271">Se o `Style` argumento do `Format` função contém um dos formatos numéricos predefinidos, somente uma seção será permitida.</span><span class="sxs-lookup"><span data-stu-id="a9d68-271">If the `Style` argument of the `Format` function contains one of the predefined numeric formats, only one section is allowed.</span></span>  
  
|<span data-ttu-id="a9d68-272">Se você usar</span><span class="sxs-lookup"><span data-stu-id="a9d68-272">If you use</span></span>|<span data-ttu-id="a9d68-273">Esse é o resultado</span><span class="sxs-lookup"><span data-stu-id="a9d68-273">This is the result</span></span>|  
|-|-|  
|<span data-ttu-id="a9d68-274">Somente uma seção</span><span class="sxs-lookup"><span data-stu-id="a9d68-274">One section only</span></span>|<span data-ttu-id="a9d68-275">A expressão de formato se aplica a todos os valores.</span><span class="sxs-lookup"><span data-stu-id="a9d68-275">The format expression applies to all values.</span></span>|  
|<span data-ttu-id="a9d68-276">Duas seções</span><span class="sxs-lookup"><span data-stu-id="a9d68-276">Two sections</span></span>|<span data-ttu-id="a9d68-277">A primeira seção aplica-se a valores positivos e zeros; a segunda se aplica a valores negativos.</span><span class="sxs-lookup"><span data-stu-id="a9d68-277">The first section applies to positive values and zeros; the second applies to negative values.</span></span>|  
|<span data-ttu-id="a9d68-278">Trê seções</span><span class="sxs-lookup"><span data-stu-id="a9d68-278">Three sections</span></span>|<span data-ttu-id="a9d68-279">A primeira seção aplica-se a valores positivos, a segunda se aplica a valores negativos e se aplica a terceira a zeros.</span><span class="sxs-lookup"><span data-stu-id="a9d68-279">The first section applies to positive values, the second applies to negative values, and the third applies to zeros.</span></span>|  
  
 <span data-ttu-id="a9d68-280">O exemplo a seguir tem duas seções: a primeira define o formato para valores positivos e zeros; a segunda seção define o formato para valores negativos.</span><span class="sxs-lookup"><span data-stu-id="a9d68-280">The following example has two sections: the first defines the format for positive values and zeros; the second section defines the format for negative values.</span></span> <span data-ttu-id="a9d68-281">Uma vez que o `Style` argumento do `Format` função usa uma cadeia de caracteres, ele é colocado entre aspas.</span><span class="sxs-lookup"><span data-stu-id="a9d68-281">Since the `Style` argument of the `Format` function takes a string, it is enclosed by quotation marks.</span></span>  
  
 [!code-vb[VbVbalrStrings#18](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#18)]  
  
 <span data-ttu-id="a9d68-282">Se você incluir ponto e vírgula sem nada entre eles, a seção faltando é impressa usando o formato do valor positivo.</span><span class="sxs-lookup"><span data-stu-id="a9d68-282">If you include semicolons with nothing between them, the missing section is printed using the format of the positive value.</span></span> <span data-ttu-id="a9d68-283">Por exemplo, o formato a seguir exibe positivo e negativo valores usando o formato na primeira seção e exibe `Zero` se o valor for zero.</span><span class="sxs-lookup"><span data-stu-id="a9d68-283">For example, the following format displays positive and negative values using the format in the first section and displays `Zero` if the value is zero.</span></span>  
  
 [!code-vb[VbVbalrStrings#19](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#19)]  
  
## <a name="predefined-numeric-formats"></a><span data-ttu-id="a9d68-284">Formatos numéricos predefinidos</span><span class="sxs-lookup"><span data-stu-id="a9d68-284">Predefined Numeric Formats</span></span>  
 <span data-ttu-id="a9d68-285">A tabela a seguir identifica os nomes de formatos numéricos predefinidos.</span><span class="sxs-lookup"><span data-stu-id="a9d68-285">The following table identifies the predefined numeric format names.</span></span> <span data-ttu-id="a9d68-286">Esses podem ser usados por nome como o `Style` argumento para o `Format` função:</span><span class="sxs-lookup"><span data-stu-id="a9d68-286">These may be used by name as the `Style` argument for the `Format` function:</span></span>  
  
|<span data-ttu-id="a9d68-287">Nome do formato</span><span class="sxs-lookup"><span data-stu-id="a9d68-287">Format name</span></span>|<span data-ttu-id="a9d68-288">Descrição</span><span class="sxs-lookup"><span data-stu-id="a9d68-288">Description</span></span>|  
|-|-|  
|<span data-ttu-id="a9d68-289">`General Number`, `G` ou `g`</span><span class="sxs-lookup"><span data-stu-id="a9d68-289">`General Number`, `G`, or `g`</span></span>|<span data-ttu-id="a9d68-290">Exibe o número com Nenhum separador de milhar.</span><span class="sxs-lookup"><span data-stu-id="a9d68-290">Displays number with no thousand separator.</span></span><br /><br /> <span data-ttu-id="a9d68-291">Por exemplo, `Format(&H3FA, "g")` retorna `1018`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-291">For example, `Format(&H3FA, "g")` returns `1018`.</span></span>|  
|<span data-ttu-id="a9d68-292">`Currency`, `C` ou `c`</span><span class="sxs-lookup"><span data-stu-id="a9d68-292">`Currency`, `C`, or `c`</span></span>|<span data-ttu-id="a9d68-293">Exibe o número com separador de milhar, se apropriado; exibe dois dígitos à direita do separador decimal.</span><span class="sxs-lookup"><span data-stu-id="a9d68-293">Displays number with thousand separator, if appropriate; displays two digits to the right of the decimal separator.</span></span> <span data-ttu-id="a9d68-294">Saída é baseada nas configurações de localidade do sistema.</span><span class="sxs-lookup"><span data-stu-id="a9d68-294">Output is based on system locale settings.</span></span><br /><br /> <span data-ttu-id="a9d68-295">Por exemplo, `Format(1234567, "c")` retorna `$1,234,567.00`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-295">For example, `Format(1234567, "c")` returns `$1,234,567.00`.</span></span>|  
|<span data-ttu-id="a9d68-296">`Fixed`, `F` ou `f`</span><span class="sxs-lookup"><span data-stu-id="a9d68-296">`Fixed`, `F`, or `f`</span></span>|<span data-ttu-id="a9d68-297">Exibe pelo menos um dígito à esquerda e dois dígitos à direita do separador decimal.</span><span class="sxs-lookup"><span data-stu-id="a9d68-297">Displays at least one digit to the left and two digits to the right of the decimal separator.</span></span><br /><br /> <span data-ttu-id="a9d68-298">Por exemplo, `Format(1234567, "f")` retorna `1234567.00`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-298">For example, `Format(1234567, "f")` returns `1234567.00`.</span></span>|  
|<span data-ttu-id="a9d68-299">`Standard`, `N` ou `n`</span><span class="sxs-lookup"><span data-stu-id="a9d68-299">`Standard`, `N`, or `n`</span></span>|<span data-ttu-id="a9d68-300">Exibe o número com separador de milhar, pelo menos um dígito à esquerda e dois dígitos à direita do separador decimal.</span><span class="sxs-lookup"><span data-stu-id="a9d68-300">Displays number with thousand separator, at least one digit to the left and two digits to the right of the decimal separator.</span></span><br /><br /> <span data-ttu-id="a9d68-301">Por exemplo, `Format(1234567, "n")` retorna `1,234,567.00`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-301">For example, `Format(1234567, "n")` returns `1,234,567.00`.</span></span>|  
|`Percent`|<span data-ttu-id="a9d68-302">Exibe o número multiplicado por 100 com um sinal de porcentagem (%) anexado à direita; sempre exibe dois dígitos à direita do separador decimal.</span><span class="sxs-lookup"><span data-stu-id="a9d68-302">Displays number multiplied by 100 with a percent sign (%) appended immediately to the right; always displays two digits to the right of the decimal separator.</span></span><br /><br /> <span data-ttu-id="a9d68-303">Por exemplo, `Format(0.4744, "Percent")` retorna `47.44%`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-303">For example, `Format(0.4744, "Percent")` returns `47.44%`.</span></span>|  
|<span data-ttu-id="a9d68-304">`P`, ou `p`</span><span class="sxs-lookup"><span data-stu-id="a9d68-304">`P`, or `p`</span></span>|<span data-ttu-id="a9d68-305">Exibe o número com separador de milhar multiplicado por 100 com um sinal de porcentagem (%) anexado à direita e separado por um único espaço; sempre exibe dois dígitos à direita do separador decimal.</span><span class="sxs-lookup"><span data-stu-id="a9d68-305">Displays number with thousandths separator multiplied by 100 with a percent sign (%) appended to the right and separated by a single space; always displays two digits to the right of the decimal separator.</span></span><br /><br /> <span data-ttu-id="a9d68-306">Por exemplo, `Format(0.80345, "p")` retorna `80.35 %`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-306">For example, `Format(0.80345, "p")` returns `80.35 %`.</span></span>|  
|`Scientific`|<span data-ttu-id="a9d68-307">Usa notação científica padrão, fornecendo dois dígitos significativos.</span><span class="sxs-lookup"><span data-stu-id="a9d68-307">Uses standard scientific notation, providing two significant digits.</span></span><br /><br /> <span data-ttu-id="a9d68-308">Por exemplo, `Format(1234567, "Scientific")` retorna `1.23E+06`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-308">For example, `Format(1234567, "Scientific")` returns `1.23E+06`.</span></span>|  
|<span data-ttu-id="a9d68-309">`E`, ou `e`</span><span class="sxs-lookup"><span data-stu-id="a9d68-309">`E`, or `e`</span></span>|<span data-ttu-id="a9d68-310">Usa notação científica padrão, fornecendo seis dígitos significativos.</span><span class="sxs-lookup"><span data-stu-id="a9d68-310">Uses standard scientific notation, providing six significant digits.</span></span><br /><br /> <span data-ttu-id="a9d68-311">Por exemplo, `Format(1234567, "e")` retorna `1.234567e+006`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-311">For example, `Format(1234567, "e")` returns `1.234567e+006`.</span></span>|  
|<span data-ttu-id="a9d68-312">`D`, ou `d`</span><span class="sxs-lookup"><span data-stu-id="a9d68-312">`D`, or `d`</span></span>|<span data-ttu-id="a9d68-313">Exibe o número como uma cadeia de caracteres que contém o valor do número em formato Decimal (base 10).</span><span class="sxs-lookup"><span data-stu-id="a9d68-313">Displays number as a string that contains the value of the number in Decimal (base 10) format.</span></span> <span data-ttu-id="a9d68-314">Essa opção tem suporte para tipos integrais (`Byte`, `Short`, `Integer`, `Long`) apenas.</span><span class="sxs-lookup"><span data-stu-id="a9d68-314">This option is supported for integral types (`Byte`, `Short`, `Integer`, `Long`) only.</span></span><br /><br /> <span data-ttu-id="a9d68-315">Por exemplo, `Format(&H7F, "d")` retorna `127`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-315">For example, `Format(&H7F, "d")` returns `127`.</span></span>|  
|<span data-ttu-id="a9d68-316">`X`, ou `x`</span><span class="sxs-lookup"><span data-stu-id="a9d68-316">`X`, or `x`</span></span>|<span data-ttu-id="a9d68-317">Exibe o número como uma cadeia de caracteres que contém o valor do número em formato Hexadecimal (base 16).</span><span class="sxs-lookup"><span data-stu-id="a9d68-317">Displays number as a string that contains the value of the number in Hexadecimal (base 16) format.</span></span> <span data-ttu-id="a9d68-318">Essa opção tem suporte para tipos integrais (`Byte`, `Short`, `Integer`, `Long`) apenas.</span><span class="sxs-lookup"><span data-stu-id="a9d68-318">This option is supported for integral types (`Byte`, `Short`, `Integer`, `Long`) only.</span></span><br /><br /> <span data-ttu-id="a9d68-319">Por exemplo, `Format(127, "x")` retorna `7f`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-319">For example, `Format(127, "x")` returns `7f`.</span></span>|  
|`Yes/No`|<span data-ttu-id="a9d68-320">Exibe `No` se o número for 0; caso contrário, exibe `Yes`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-320">Displays `No` if number is 0; otherwise, displays `Yes`.</span></span><br /><br /> <span data-ttu-id="a9d68-321">Por exemplo, `Format(0, "Yes/No")` retorna `No`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-321">For example, `Format(0, "Yes/No")` returns `No`.</span></span>|  
|`True/False`|<span data-ttu-id="a9d68-322">Exibe `False` se o número for 0; caso contrário, exibe `True`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-322">Displays `False` if number is 0; otherwise, displays `True`.</span></span><br /><br /> <span data-ttu-id="a9d68-323">Por exemplo, `Format(1, "True/False")` retorna `True`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-323">For example, `Format(1, "True/False")` returns `True`.</span></span>|  
|`On/Off`|<span data-ttu-id="a9d68-324">Exibe `Off` se o número for 0; caso contrário, exibe `On`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-324">Displays `Off` if number is 0; otherwise, displays `On`.</span></span><br /><br /> <span data-ttu-id="a9d68-325">Por exemplo, `Format(1, "On/Off")` retorna `On`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-325">For example, `Format(1, "On/Off")` returns `On`.</span></span>|  
  
### <a name="smart-device-developer-notes"></a><span data-ttu-id="a9d68-326">Notas do desenvolvedor de dispositivo inteligente</span><span class="sxs-lookup"><span data-stu-id="a9d68-326">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="a9d68-327">O `Yes/No`, `True/False`, e `On/Off` formatos não têm suporte.</span><span class="sxs-lookup"><span data-stu-id="a9d68-327">The `Yes/No`, `True/False`, and `On/Off` formats are not supported.</span></span>  
  
## <a name="user-defined-numeric-formats"></a><span data-ttu-id="a9d68-328">Formatos numéricos definidos pelo usuário</span><span class="sxs-lookup"><span data-stu-id="a9d68-328">User-Defined Numeric Formats</span></span>  
 <span data-ttu-id="a9d68-329">A tabela a seguir identifica caracteres que você pode usar para criar formatos numéricos definidos pelo usuário.</span><span class="sxs-lookup"><span data-stu-id="a9d68-329">The following table identifies characters you can use to create user-defined number formats.</span></span> <span data-ttu-id="a9d68-330">Esses podem ser usados para construir o `Style` argumento para o `Format` função:</span><span class="sxs-lookup"><span data-stu-id="a9d68-330">These may be used to build the `Style` argument for the `Format` function:</span></span>  
  
|<span data-ttu-id="a9d68-331">Caractere</span><span class="sxs-lookup"><span data-stu-id="a9d68-331">Character</span></span>|<span data-ttu-id="a9d68-332">Descrição</span><span class="sxs-lookup"><span data-stu-id="a9d68-332">Description</span></span>|  
|-|-|  
|<span data-ttu-id="a9d68-333">Nenhum</span><span class="sxs-lookup"><span data-stu-id="a9d68-333">None</span></span>|<span data-ttu-id="a9d68-334">Exibe o número sem formatação.</span><span class="sxs-lookup"><span data-stu-id="a9d68-334">Displays the number with no formatting.</span></span>|  
|<span data-ttu-id="a9d68-335">(`0`)</span><span class="sxs-lookup"><span data-stu-id="a9d68-335">(`0`)</span></span>|<span data-ttu-id="a9d68-336">Espaço reservado de dígito.</span><span class="sxs-lookup"><span data-stu-id="a9d68-336">Digit placeholder.</span></span> <span data-ttu-id="a9d68-337">Exibe um dígito ou um zero.</span><span class="sxs-lookup"><span data-stu-id="a9d68-337">Displays a digit or a zero.</span></span> <span data-ttu-id="a9d68-338">Se a expressão tiver um dígito na posição onde o zero aparece na cadeia de caracteres de formato, exibi-la; Caso contrário, exibirá um zero nessa posição.</span><span class="sxs-lookup"><span data-stu-id="a9d68-338">If the expression has a digit in the position where the zero appears in the format string, display it; otherwise, displays a zero in that position.</span></span><br /><br /> <span data-ttu-id="a9d68-339">Se o número tiver menos dígitos que são os zeros (em ambos os lados da casa decimal) na expressão de formato, exibirá zeros à esquerda e.</span><span class="sxs-lookup"><span data-stu-id="a9d68-339">If the number has fewer digits than there are zeros (on either side of the decimal) in the format expression, displays leading or trailing zeros.</span></span> <span data-ttu-id="a9d68-340">Se o número tiver mais dígitos à direita do separador decimal que há zeros à direita do separador decimal na expressão de formato, Arredonda as casas decimais números para o mesmo número como zeros.</span><span class="sxs-lookup"><span data-stu-id="a9d68-340">If the number has more digits to the right of the decimal separator than there are zeros to the right of the decimal separator in the format expression, rounds the number to as many decimal places as there are zeros.</span></span> <span data-ttu-id="a9d68-341">Se o número tiver mais dígitos à esquerda do separador decimal que há zeros à esquerda do separador decimal na expressão de formato, exibirá os dígitos extras sem modificação.</span><span class="sxs-lookup"><span data-stu-id="a9d68-341">If the number has more digits to the left of the decimal separator than there are zeros to the left of the decimal separator in the format expression, displays the extra digits without modification.</span></span>|  
|<span data-ttu-id="a9d68-342">(`#`)</span><span class="sxs-lookup"><span data-stu-id="a9d68-342">(`#`)</span></span>|<span data-ttu-id="a9d68-343">Espaço reservado de dígito.</span><span class="sxs-lookup"><span data-stu-id="a9d68-343">Digit placeholder.</span></span> <span data-ttu-id="a9d68-344">Exibe um dígito ou nada.</span><span class="sxs-lookup"><span data-stu-id="a9d68-344">Displays a digit or nothing.</span></span> <span data-ttu-id="a9d68-345">Se a expressão tiver um dígito na posição onde o `#` caractere aparece na cadeia de caracteres de formato, o exibe; caso contrário, não exibirá nada nessa posição.</span><span class="sxs-lookup"><span data-stu-id="a9d68-345">If the expression has a digit in the position where the `#` character appears in the format string, displays it; otherwise, displays nothing in that position.</span></span><br /><br /> <span data-ttu-id="a9d68-346">Este símbolo funciona como o `0` espaço reservado de dígito, exceto pelo fato que zeros à esquerda e não são exibidos se o número tiver menos dígitos do que há `#` caracteres nos dois lados do separador decimal na expressão de formato.</span><span class="sxs-lookup"><span data-stu-id="a9d68-346">This symbol works like the `0` digit placeholder, except that leading and trailing zeros aren't displayed if the number has fewer digits than there are `#` characters on either side of the decimal separator in the format expression.</span></span>|  
|<span data-ttu-id="a9d68-347">(`.`)</span><span class="sxs-lookup"><span data-stu-id="a9d68-347">(`.`)</span></span>|<span data-ttu-id="a9d68-348">Espaço reservado para decimal.</span><span class="sxs-lookup"><span data-stu-id="a9d68-348">Decimal placeholder.</span></span> <span data-ttu-id="a9d68-349">O espaço reservado para decimal determina quantos dígitos serão exibidos à esquerda e à direita do separador decimal.</span><span class="sxs-lookup"><span data-stu-id="a9d68-349">The decimal placeholder determines how many digits are displayed to the left and right of the decimal separator.</span></span> <span data-ttu-id="a9d68-350">Se a expressão de formato contiver apenas `#` caracteres à esquerda desse símbolo; números menores que 1 começam com um separador decimal.</span><span class="sxs-lookup"><span data-stu-id="a9d68-350">If the format expression contains only `#` characters to the left of this symbol; numbers smaller than 1 begin with a decimal separator.</span></span> <span data-ttu-id="a9d68-351">Para exibir um zero à esquerda no caso de números fracionais, use zero como o primeiro espaço reservado para dígito à esquerda do separador decimal.</span><span class="sxs-lookup"><span data-stu-id="a9d68-351">To display a leading zero displayed with fractional numbers, use zero as the first digit placeholder to the left of the decimal separator.</span></span> <span data-ttu-id="a9d68-352">Em algumas localidades, uma vírgula é usada como separador decimal.</span><span class="sxs-lookup"><span data-stu-id="a9d68-352">In some locales, a comma is used as the decimal separator.</span></span> <span data-ttu-id="a9d68-353">O caractere real usado como um espaço reservado decimal na saída formatada depende do formato numérico reconhecido pelo seu sistema.</span><span class="sxs-lookup"><span data-stu-id="a9d68-353">The actual character used as a decimal placeholder in the formatted output depends on the number format recognized by your system.</span></span> <span data-ttu-id="a9d68-354">Assim, você deve usar o período como o espaço reservado para decimal nos formatos, mesmo se você estiver em uma localidade que utilize uma vírgula como um espaço reservado para decimal.</span><span class="sxs-lookup"><span data-stu-id="a9d68-354">Thus, you should use the period as the decimal placeholder in your formats even if you are in a locale that uses a comma as a decimal placeholder.</span></span> <span data-ttu-id="a9d68-355">A cadeia de caracteres formatada aparecerá no formato correto para a localidade.</span><span class="sxs-lookup"><span data-stu-id="a9d68-355">The formatted string will appear in the format correct for the locale.</span></span>|  
|<span data-ttu-id="a9d68-356">(`%`)</span><span class="sxs-lookup"><span data-stu-id="a9d68-356">(`%`)</span></span>|<span data-ttu-id="a9d68-357">Espaço reservado para porcentagem.</span><span class="sxs-lookup"><span data-stu-id="a9d68-357">Percent placeholder.</span></span> <span data-ttu-id="a9d68-358">Multiplica a expressão 100.</span><span class="sxs-lookup"><span data-stu-id="a9d68-358">Multiplies the expression by 100.</span></span> <span data-ttu-id="a9d68-359">O caractere de porcentagem (`%`) é inserido na posição onde aparece na cadeia de caracteres de formato.</span><span class="sxs-lookup"><span data-stu-id="a9d68-359">The percent character (`%`) is inserted in the position where it appears in the format string.</span></span>|  
|<span data-ttu-id="a9d68-360">(`,`)</span><span class="sxs-lookup"><span data-stu-id="a9d68-360">(`,`)</span></span>|<span data-ttu-id="a9d68-361">Separador de milhar.</span><span class="sxs-lookup"><span data-stu-id="a9d68-361">Thousand separator.</span></span> <span data-ttu-id="a9d68-362">O separador de milhar separa os milhares das centenas em um número com quatro ou mais casas à esquerda do separador decimal.</span><span class="sxs-lookup"><span data-stu-id="a9d68-362">The thousand separator separates thousands from hundreds within a number that has four or more places to the left of the decimal separator.</span></span> <span data-ttu-id="a9d68-363">O uso padrão do separador de milhar será especificado se o formato contiver um separador de milhar cercado por espaços reservados para dígitos (`0` ou `#`).</span><span class="sxs-lookup"><span data-stu-id="a9d68-363">Standard use of the thousand separator is specified if the format contains a thousand separator surrounded by digit placeholders (`0` or `#`).</span></span><br /><br /> <span data-ttu-id="a9d68-364">Um separador de milhar imediatamente à esquerda do separador decimal (ou não um decimal é especificado) ou como mais à direita do caractere na cadeia de caracteres significa "escalar o número dividindo-o por 1.000, arredondando se necessário."</span><span class="sxs-lookup"><span data-stu-id="a9d68-364">A thousand separator immediately to the left of the decimal separator (whether or not a decimal is specified) or as the rightmost character in the string means "scale the number by dividing it by 1,000, rounding as needed."</span></span> <span data-ttu-id="a9d68-365">Números menores do que 1.000, mas maior ou iguais a 500 são exibidos como `1`e números menores do que 500 são exibidos como `0`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-365">Numbers smaller than 1,000 but greater or equal to 500 are displayed as `1`, and numbers smaller than 500 are displayed as `0`.</span></span> <span data-ttu-id="a9d68-366">Dois separadores de milhar adjacentes nessa posição dimensionar por um fator de 1 milhão e um fator adicional de 1.000 para cada separador adicional.</span><span class="sxs-lookup"><span data-stu-id="a9d68-366">Two adjacent thousand separators in this position scale by a factor of 1 million, and an additional factor of 1,000 for each additional separator.</span></span><br /><br /> <span data-ttu-id="a9d68-367">Vários separadores em qualquer posição que não seja imediatamente à esquerda do separador decimal ou a posição mais à direita na cadeia de caracteres são tratados simplesmente como especificando o uso de um separador de milhar.</span><span class="sxs-lookup"><span data-stu-id="a9d68-367">Multiple separators in any position other than immediately to the left of the decimal separator or the rightmost position in the string are treated simply as specifying the use of a thousand separator.</span></span> <span data-ttu-id="a9d68-368">Em algumas localidades, um ponto é usado como separador de milhar.</span><span class="sxs-lookup"><span data-stu-id="a9d68-368">In some locales, a period is used as a thousand separator.</span></span> <span data-ttu-id="a9d68-369">O caractere real usado como separador de milhar na saída formatada depende do formato numérico reconhecido pelo seu sistema.</span><span class="sxs-lookup"><span data-stu-id="a9d68-369">The actual character used as the thousand separator in the formatted output depends on the Number Format recognized by your system.</span></span> <span data-ttu-id="a9d68-370">Assim, você deve usar a vírgula como separador de milhar nos seus formatos, mesmo se você estiver em uma localidade que utilize um ponto como separador de milhar.</span><span class="sxs-lookup"><span data-stu-id="a9d68-370">Thus, you should use the comma as the thousand separator in your formats even if you are in a locale that uses a period as a thousand separator.</span></span> <span data-ttu-id="a9d68-371">A cadeia de caracteres formatada aparecerá no formato correto para a localidade.</span><span class="sxs-lookup"><span data-stu-id="a9d68-371">The formatted string will appear in the format correct for the locale.</span></span><br /><br /> <span data-ttu-id="a9d68-372">Por exemplo, considere as três cadeias de caracteres de formato seguintes:</span><span class="sxs-lookup"><span data-stu-id="a9d68-372">For example, consider the three following format strings:</span></span><br /><br /> <span data-ttu-id="a9d68-373">-   `"#,0."`, que usa o separador de milhar para formatar o número 100 milhões como a cadeia de caracteres "100,000,000".</span><span class="sxs-lookup"><span data-stu-id="a9d68-373">-   `"#,0."`, which uses the thousands separator to format the number 100 million as the string "100,000,000".</span></span><br /><span data-ttu-id="a9d68-374">-   `"#0,."`, que usa a escala por um fator de mil para formatar o número 100 milhões como a cadeia de caracteres "100000".</span><span class="sxs-lookup"><span data-stu-id="a9d68-374">-   `"#0,."`, which uses scaling by a factor of one thousand to format the number 100 million as the string "100000".</span></span><br /><span data-ttu-id="a9d68-375">-   `"#,0,."`, que usa o separador de milhar e escala por mil para formatar o número 100 milhões como a cadeia de caracteres "100,000".</span><span class="sxs-lookup"><span data-stu-id="a9d68-375">-   `"#,0,."`, which uses the thousands separator and scaling by one thousand to format the number 100 million as the string "100,000".</span></span>|  
|<span data-ttu-id="a9d68-376">(`:`)</span><span class="sxs-lookup"><span data-stu-id="a9d68-376">(`:`)</span></span>|<span data-ttu-id="a9d68-377">Separador de hora.</span><span class="sxs-lookup"><span data-stu-id="a9d68-377">Time separator.</span></span> <span data-ttu-id="a9d68-378">Em algumas localidades, outros caracteres podem ser usados para representar o separador de hora.</span><span class="sxs-lookup"><span data-stu-id="a9d68-378">In some locales, other characters may be used to represent the time separator.</span></span> <span data-ttu-id="a9d68-379">O separador de hora separa horas, minutos e segundos quando valores de tempo são formatados.</span><span class="sxs-lookup"><span data-stu-id="a9d68-379">The time separator separates hours, minutes, and seconds when time values are formatted.</span></span> <span data-ttu-id="a9d68-380">O caractere real usado como separador de hora na saída formatada é determinado pelas configurações de sistema.</span><span class="sxs-lookup"><span data-stu-id="a9d68-380">The actual character used as the time separator in formatted output is determined by your system settings.</span></span>|  
|<span data-ttu-id="a9d68-381">(`/`)</span><span class="sxs-lookup"><span data-stu-id="a9d68-381">(`/`)</span></span>|<span data-ttu-id="a9d68-382">Separador de data.</span><span class="sxs-lookup"><span data-stu-id="a9d68-382">Date separator.</span></span> <span data-ttu-id="a9d68-383">Em algumas localidades, outros caracteres podem ser usados para representar o separador de data.</span><span class="sxs-lookup"><span data-stu-id="a9d68-383">In some locales, other characters may be used to represent the date separator.</span></span> <span data-ttu-id="a9d68-384">O separador de data separa dia, mês e ano quando valores de data são formatados.</span><span class="sxs-lookup"><span data-stu-id="a9d68-384">The date separator separates the day, month, and year when date values are formatted.</span></span> <span data-ttu-id="a9d68-385">O caractere real usado como separador de data na saída formatada é determinado pelas configurações de sistema.</span><span class="sxs-lookup"><span data-stu-id="a9d68-385">The actual character used as the date separator in formatted output is determined by your system settings.</span></span>|  
|<span data-ttu-id="a9d68-386">(`E-``E+``e-``e+`)</span><span class="sxs-lookup"><span data-stu-id="a9d68-386">(`E-``E+``e-``e+`)</span></span>|<span data-ttu-id="a9d68-387">Formato científico.</span><span class="sxs-lookup"><span data-stu-id="a9d68-387">Scientific format.</span></span> <span data-ttu-id="a9d68-388">Se a expressão de formato contiver pelo menos um espaço reservado para dígito (`0` ou `#`) à esquerda da `E-`, `E+`, `e-`, ou `e+`, o número é exibido em formato científico e `E` ou `e` é inserido entre o número e seu exponente.</span><span class="sxs-lookup"><span data-stu-id="a9d68-388">If the format expression contains at least one digit placeholder (`0` or `#`) to the left of `E-`, `E+`, `e-`, or `e+`, the number is displayed in scientific format and `E` or `e` is inserted between the number and its exponent.</span></span> <span data-ttu-id="a9d68-389">O número de espaços reservados de dígito à esquerda determina o número de dígitos no expoente.</span><span class="sxs-lookup"><span data-stu-id="a9d68-389">The number of digit placeholders to the left determines the number of digits in the exponent.</span></span> <span data-ttu-id="a9d68-390">Use `E-` ou `e-` para colocar um sinal de subtração ao lado de expoentes negativos.</span><span class="sxs-lookup"><span data-stu-id="a9d68-390">Use `E-` or `e-` to place a minus sign next to negative exponents.</span></span> <span data-ttu-id="a9d68-391">Use `E+` ou `e+` para colocar um sinal de subtração ao lado de expoentes negativos e um sinal de adição ao lado de expoentes positivos.</span><span class="sxs-lookup"><span data-stu-id="a9d68-391">Use `E+` or `e+` to place a minus sign next to negative exponents and a plus sign next to positive exponents.</span></span> <span data-ttu-id="a9d68-392">Você também deve incluir espaços reservados de dígitos à direita desse símbolo para obter a formatação correta.</span><span class="sxs-lookup"><span data-stu-id="a9d68-392">You must also include digit placeholders to the right of this symbol to get correct formatting.</span></span>|  
|<span data-ttu-id="a9d68-393">`-` `+` `$` ( )</span><span class="sxs-lookup"><span data-stu-id="a9d68-393">`-` `+` `$` ( )</span></span>|<span data-ttu-id="a9d68-394">Caracteres literais.</span><span class="sxs-lookup"><span data-stu-id="a9d68-394">Literal characters.</span></span> <span data-ttu-id="a9d68-395">Esses caracteres são exibidos exatamente conforme digitados na cadeia de caracteres de formato.</span><span class="sxs-lookup"><span data-stu-id="a9d68-395">These characters are displayed exactly as typed in the format string.</span></span> <span data-ttu-id="a9d68-396">Para exibir um caractere que não seja um dos listados, preceda-o com uma barra invertida (`\`) ou coloque-o entre aspas duplas ("").</span><span class="sxs-lookup"><span data-stu-id="a9d68-396">To display a character other than one of those listed, precede it with a backslash (`\`) or enclose it in double quotation marks (" ").</span></span>|  
|<span data-ttu-id="a9d68-397">(`\`)</span><span class="sxs-lookup"><span data-stu-id="a9d68-397">(`\`)</span></span>|<span data-ttu-id="a9d68-398">Exibe o próximo caractere na cadeia de caracteres de formato.</span><span class="sxs-lookup"><span data-stu-id="a9d68-398">Displays the next character in the format string.</span></span> <span data-ttu-id="a9d68-399">Para exibir um caractere que tem um significado especial como um caractere literal, preceda-o com uma barra invertida (`\`).</span><span class="sxs-lookup"><span data-stu-id="a9d68-399">To display a character that has special meaning as a literal character, precede it with a backslash (`\`).</span></span> <span data-ttu-id="a9d68-400">A barra invertida não é exibida.</span><span class="sxs-lookup"><span data-stu-id="a9d68-400">The backslash itself isn't displayed.</span></span> <span data-ttu-id="a9d68-401">Usando uma barra invertida é o mesmo que colocar o próximo caractere entre aspas duplas.</span><span class="sxs-lookup"><span data-stu-id="a9d68-401">Using a backslash is the same as enclosing the next character in double quotation marks.</span></span> <span data-ttu-id="a9d68-402">Para exibir uma barra invertida, use duas barras invertidas (`\\`).</span><span class="sxs-lookup"><span data-stu-id="a9d68-402">To display a backslash, use two backslashes (`\\`).</span></span><br /><br /> <span data-ttu-id="a9d68-403">Exemplos de caracteres que não podem ser exibidos como caracteres literais são os caracteres de formatação de data e a formatação de hora (`a`, `c`, `d`, `h`, `m`, `n`, `p`, `q`, `s`, `t`, `w`, `y`, `/`, e `:`), os caracteres de formatação numérica (`#`, `0`, `%`, `E`, `e`, vírgulas e ponto) e os caracteres de formatação de cadeia de caracteres (`@`, `&`, `<`, `>`, e `!`).</span><span class="sxs-lookup"><span data-stu-id="a9d68-403">Examples of characters that can't be displayed as literal characters are the date-formatting and time-formatting characters (`a`, `c`, `d`, `h`, `m`, `n`, `p`, `q`, `s`, `t`, `w`, `y`, `/`, and `:`), the numeric-formatting characters (`#`, `0`, `%`, `E`, `e`, comma, and period), and the string-formatting characters (`@`, `&`, `<`, `>`, and `!`).</span></span>|  
|<span data-ttu-id="a9d68-404">(`"``ABC``"`)</span><span class="sxs-lookup"><span data-stu-id="a9d68-404">(`"``ABC``"`)</span></span>|<span data-ttu-id="a9d68-405">Exibe a cadeia de caracteres entre aspas duplas ("").</span><span class="sxs-lookup"><span data-stu-id="a9d68-405">Displays the string inside the double quotation marks (" ").</span></span> <span data-ttu-id="a9d68-406">Para incluir uma cadeia de caracteres no argumento de estilo de dentro do código, você deve usar `Chr(34)` para incluir o texto (`34` é o código de caractere para aspas (")).</span><span class="sxs-lookup"><span data-stu-id="a9d68-406">To include a string in the style argument from within code, you must use `Chr(34)` to enclose the text (`34` is the character code for a quotation mark (")).</span></span>|  
  
### <a name="legacy-code-example"></a><span data-ttu-id="a9d68-407">Exemplo de código herdado</span><span class="sxs-lookup"><span data-stu-id="a9d68-407">Legacy Code Example</span></span>  
 <span data-ttu-id="a9d68-408">A tabela a seguir contém algumas expressões de formato de exemplo para números.</span><span class="sxs-lookup"><span data-stu-id="a9d68-408">The following table contains some sample format expressions for numbers.</span></span> <span data-ttu-id="a9d68-409">(Estes exemplos presumem que a configuração de localidade do sistema seja inglês-EUA) A primeira coluna contém as cadeias de caracteres de formato para o `Style` argumento do `Format` função; as outras colunas contêm a saída resultante se os dados formatados tiverem o valor atribuído nos cabeçalhos da coluna.</span><span class="sxs-lookup"><span data-stu-id="a9d68-409">(These examples all assume that your system's locale setting is English-U.S.) The first column contains the format strings for the `Style` argument of the `Format` function; the other columns contain the resulting output if the formatted data has the value given in the column headings.</span></span>  
  
|<span data-ttu-id="a9d68-410">Formato (`Style`)</span><span class="sxs-lookup"><span data-stu-id="a9d68-410">Format (`Style`)</span></span>|<span data-ttu-id="a9d68-411">"5" formatado como</span><span class="sxs-lookup"><span data-stu-id="a9d68-411">"5" formatted as</span></span>|<span data-ttu-id="a9d68-412">"-5" formatado como</span><span class="sxs-lookup"><span data-stu-id="a9d68-412">"-5" formatted as</span></span>|<span data-ttu-id="a9d68-413">"0.5" formatado como</span><span class="sxs-lookup"><span data-stu-id="a9d68-413">"0.5" formatted as</span></span>|  
|-|-|-|-|  
|`Zero-length string ("")`|`5`|`-5`|`0.5`|  
|`0`|`5`|`-5`|`1`|  
|`0.00`|`5.00`|`-5.00`|`0.50`|  
|`#,##0`|`5`|`-5`|`1`|  
|`$#,##0;($#,##0)`|`$5`|`($5)`|`$1`|  
|`$#,##0.00;($#,##0.00)`|`$5.00`|`($5.00)`|`$0.50`|  
|`0%`|`500%`|`-500%`|`50%`|  
|`0.00%`|`500.00%`|`-500.00%`|`50.00%`|  
|`0.00E+00`|`5.00E+00`|`-5.00E+00`|`5.00E-01`|  
|`0.00E-00`|`5.00E00`|`-5.00E00`|`5.00E-01`|  
  
## <a name="predefined-datetime-formats"></a><span data-ttu-id="a9d68-414">Formatos de data/hora predefinidos</span><span class="sxs-lookup"><span data-stu-id="a9d68-414">Predefined Date/Time Formats</span></span>  
 <span data-ttu-id="a9d68-415">A tabela a seguir identifica a data predefinida e nomes de formato de hora.</span><span class="sxs-lookup"><span data-stu-id="a9d68-415">The following table identifies the predefined date and time format names.</span></span> <span data-ttu-id="a9d68-416">Estes podem ser usados por nome como o argumento de estilo para o `Format` função:</span><span class="sxs-lookup"><span data-stu-id="a9d68-416">These may be used by name as the style argument for the `Format` function:</span></span>  
  
|<span data-ttu-id="a9d68-417">Nome do formato</span><span class="sxs-lookup"><span data-stu-id="a9d68-417">Format Name</span></span>|<span data-ttu-id="a9d68-418">Descrição</span><span class="sxs-lookup"><span data-stu-id="a9d68-418">Description</span></span>|  
|-|-|  
|<span data-ttu-id="a9d68-419">`General Date`, ou `G`</span><span class="sxs-lookup"><span data-stu-id="a9d68-419">`General Date`, or `G`</span></span>|<span data-ttu-id="a9d68-420">Exibe uma data / hora.</span><span class="sxs-lookup"><span data-stu-id="a9d68-420">Displays a date and/or time.</span></span> <span data-ttu-id="a9d68-421">Por exemplo, `3/12/2008 11:07:31 AM`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-421">For example, `3/12/2008 11:07:31 AM`.</span></span> <span data-ttu-id="a9d68-422">Exibição de data é determinada pelo valor de cultura atual do seu aplicativo.</span><span class="sxs-lookup"><span data-stu-id="a9d68-422">Date display is determined by your application's current culture value.</span></span>|  
|<span data-ttu-id="a9d68-423">`Long Date`, `Medium Date` ou `D`</span><span class="sxs-lookup"><span data-stu-id="a9d68-423">`Long Date`, `Medium Date`, or `D`</span></span>|<span data-ttu-id="a9d68-424">Exibe uma data de acordo com o formato de data por extenso da sua cultura atual.</span><span class="sxs-lookup"><span data-stu-id="a9d68-424">Displays a date according to your current culture's long date format.</span></span> <span data-ttu-id="a9d68-425">Por exemplo, `Wednesday, March 12, 2008`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-425">For example, `Wednesday, March 12, 2008`.</span></span>|  
|<span data-ttu-id="a9d68-426">`Short Date`, ou `d`</span><span class="sxs-lookup"><span data-stu-id="a9d68-426">`Short Date`, or `d`</span></span>|<span data-ttu-id="a9d68-427">Exibe uma data usando o formato de data abreviada da sua cultura atual.</span><span class="sxs-lookup"><span data-stu-id="a9d68-427">Displays a date using your current culture's short date format.</span></span> <span data-ttu-id="a9d68-428">Por exemplo, `3/12/2008`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-428">For example, `3/12/2008`.</span></span><br /><br /> <span data-ttu-id="a9d68-429">O `d` caractere exibe o dia em um formato de data definido pelo usuário.</span><span class="sxs-lookup"><span data-stu-id="a9d68-429">The `d` character displays the day in a user-defined date format.</span></span>|  
|<span data-ttu-id="a9d68-430">`Long Time`, `Medium Time` ou `T`</span><span class="sxs-lookup"><span data-stu-id="a9d68-430">`Long Time`, `Medium Time`, or `T`</span></span>|<span data-ttu-id="a9d68-431">Exibe uma hora usando o formato de hora completa da sua cultura atual; geralmente inclui horas, minutos e segundos.</span><span class="sxs-lookup"><span data-stu-id="a9d68-431">Displays a time using your current culture's long time format; typically includes hours, minutes, seconds.</span></span> <span data-ttu-id="a9d68-432">Por exemplo, `11:07:31 AM`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-432">For example, `11:07:31 AM`.</span></span>|  
|<span data-ttu-id="a9d68-433">`Short Time` ou `t`</span><span class="sxs-lookup"><span data-stu-id="a9d68-433">`Short Time` or `t`</span></span>|<span data-ttu-id="a9d68-434">Exibe uma hora usando o formato de hora abreviada da sua cultura atual.</span><span class="sxs-lookup"><span data-stu-id="a9d68-434">Displays a time using your current culture's short time format.</span></span> <span data-ttu-id="a9d68-435">Por exemplo, `11:07 AM`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-435">For example, `11:07 AM`.</span></span><br /><br /> <span data-ttu-id="a9d68-436">O `t` caractere exibe `AM` ou `PM` valores para localidades que usam um relógio de 12 horas em um formato de hora definido pelo usuário.</span><span class="sxs-lookup"><span data-stu-id="a9d68-436">The `t` character displays `AM` or `PM` values for locales that use a 12-hour clock in a user-defined time format.</span></span>|  
|`f`|<span data-ttu-id="a9d68-437">Exibe a data por extenso e hora abreviada acordo com o formato da sua cultura atual.</span><span class="sxs-lookup"><span data-stu-id="a9d68-437">Displays the long date and short time according to your current culture's format.</span></span> <span data-ttu-id="a9d68-438">Por exemplo, `Wednesday, March 12, 2008 11:07 AM`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-438">For example, `Wednesday, March 12, 2008 11:07 AM`.</span></span>|  
|`F`|<span data-ttu-id="a9d68-439">Exibe a data por extenso e muito tempo de acordo com o formato da sua cultura atual.</span><span class="sxs-lookup"><span data-stu-id="a9d68-439">Displays the long date and long time according to your current culture's format.</span></span> <span data-ttu-id="a9d68-440">Por exemplo, `Wednesday, March 12, 2008 11:07:31 AM`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-440">For example, `Wednesday, March 12, 2008 11:07:31 AM`.</span></span>|  
|`g`|<span data-ttu-id="a9d68-441">Exibe a data abreviada e um curto período de acordo com o formato da sua cultura atual.</span><span class="sxs-lookup"><span data-stu-id="a9d68-441">Displays the short date and short time according to your current culture's format.</span></span> <span data-ttu-id="a9d68-442">Por exemplo, `3/12/2008 11:07 AM`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-442">For example, `3/12/2008 11:07 AM`.</span></span>|  
|<span data-ttu-id="a9d68-443">`M`, `m`</span><span class="sxs-lookup"><span data-stu-id="a9d68-443">`M`, `m`</span></span>|<span data-ttu-id="a9d68-444">Exibe o mês e dia de uma data.</span><span class="sxs-lookup"><span data-stu-id="a9d68-444">Displays the month and the day of a date.</span></span> <span data-ttu-id="a9d68-445">Por exemplo, `March 12`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-445">For example, `March 12`.</span></span><br /><br /> <span data-ttu-id="a9d68-446">O `M` caractere exibe o mês em um formato de data definido pelo usuário.</span><span class="sxs-lookup"><span data-stu-id="a9d68-446">The `M` character displays the month in a user-defined date format.</span></span> <span data-ttu-id="a9d68-447">O `m` caractere exibe os minutos em um formato de hora definido pelo usuário.</span><span class="sxs-lookup"><span data-stu-id="a9d68-447">The `m` character displays the minutes in a user-defined time format.</span></span>|  
|<span data-ttu-id="a9d68-448">`R`, `r`</span><span class="sxs-lookup"><span data-stu-id="a9d68-448">`R`, `r`</span></span>|<span data-ttu-id="a9d68-449">Formata a data de acordo com o <xref:System.Globalization.DateTimeFormatInfo.RFC1123Pattern%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="a9d68-449">Formats the date according to the <xref:System.Globalization.DateTimeFormatInfo.RFC1123Pattern%2A> property.</span></span> <span data-ttu-id="a9d68-450">Por exemplo, `Wed, 12 Mar 2008 11:07:31 GMT`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-450">For example, `Wed, 12 Mar 2008 11:07:31 GMT`.</span></span> <span data-ttu-id="a9d68-451">A data formatada não ajusta o valor de data e hora.</span><span class="sxs-lookup"><span data-stu-id="a9d68-451">The formatted date does not adjust the value of the date and time.</span></span> <span data-ttu-id="a9d68-452">Você deve ajustar o valor de data/hora para GMT antes de chamar o `Format` função.</span><span class="sxs-lookup"><span data-stu-id="a9d68-452">You must adjust the Date/Time value to GMT before calling the `Format` function.</span></span>|  
|`s`|<span data-ttu-id="a9d68-453">Formata a data e hora como um índice classificável.</span><span class="sxs-lookup"><span data-stu-id="a9d68-453">Formats the date and time as a sortable index.</span></span> <span data-ttu-id="a9d68-454">Por exemplo, `2008-03-12T11:07:31`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-454">For example, `2008-03-12T11:07:31`.</span></span><br /><br /> <span data-ttu-id="a9d68-455">O `s` caractere exibe os segundos em um formato de hora definido pelo usuário.</span><span class="sxs-lookup"><span data-stu-id="a9d68-455">The `s` character displays the seconds in a user-defined time format.</span></span>|  
|`u`|<span data-ttu-id="a9d68-456">Formata a data e hora como um índice GMT classificável.</span><span class="sxs-lookup"><span data-stu-id="a9d68-456">Formats the date and time as a GMT sortable index.</span></span> <span data-ttu-id="a9d68-457">Por exemplo, `2008-03-12 11:07:31Z`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-457">For example, `2008-03-12 11:07:31Z`.</span></span>|  
|`U`|<span data-ttu-id="a9d68-458">Formata a data e hora com a data por extenso e hora longa como GMT.</span><span class="sxs-lookup"><span data-stu-id="a9d68-458">Formats the date and time with the long date and long time as GMT.</span></span> <span data-ttu-id="a9d68-459">Por exemplo, `Wednesday, March 12, 2008 6:07:31 PM`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-459">For example, `Wednesday, March 12, 2008 6:07:31 PM`.</span></span>|  
|<span data-ttu-id="a9d68-460">`Y`, `y`</span><span class="sxs-lookup"><span data-stu-id="a9d68-460">`Y`, `y`</span></span>|<span data-ttu-id="a9d68-461">Formata a data como ano e mês.</span><span class="sxs-lookup"><span data-stu-id="a9d68-461">Formats the date as the year and month.</span></span> <span data-ttu-id="a9d68-462">Por exemplo, `March, 2008`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-462">For example, `March, 2008`.</span></span><br /><br /> <span data-ttu-id="a9d68-463">O `Y` e `y` caracteres exibem o ano em um formato de data definido pelo usuário.</span><span class="sxs-lookup"><span data-stu-id="a9d68-463">The `Y` and `y` characters display the year in a user-defined date format.</span></span>|  
  
 <span data-ttu-id="a9d68-464">Para obter mais informações sobre informações de cultura atual do aplicativo, consulte [como cultura afeta cadeias de caracteres no Visual Basic](~/docs/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings.md).</span><span class="sxs-lookup"><span data-stu-id="a9d68-464">For more information about the application's current culture information, see [How Culture Affects Strings in Visual Basic](~/docs/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings.md).</span></span>  
  
## <a name="user-defined-datetime-formats"></a><span data-ttu-id="a9d68-465">Formatos de data/hora definidos pelo usuário</span><span class="sxs-lookup"><span data-stu-id="a9d68-465">User-Defined Date/Time Formats</span></span>  
 <span data-ttu-id="a9d68-466">A tabela a seguir mostra caracteres que você pode usar para criar formatos de data/hora definidos pelo usuário.</span><span class="sxs-lookup"><span data-stu-id="a9d68-466">The following table shows characters you can use to create user-defined date/time formats.</span></span> <span data-ttu-id="a9d68-467">Ao contrário em versões anteriores do Visual Basic, esses caracteres de formato diferenciam maiusculas de minúsculas.</span><span class="sxs-lookup"><span data-stu-id="a9d68-467">Unlike in earlier versions of Visual Basic, these format characters are case-sensitive.</span></span>  
  
|<span data-ttu-id="a9d68-468">Caractere</span><span class="sxs-lookup"><span data-stu-id="a9d68-468">Character</span></span>|<span data-ttu-id="a9d68-469">Descrição</span><span class="sxs-lookup"><span data-stu-id="a9d68-469">Description</span></span>|  
|-|-|  
|<span data-ttu-id="a9d68-470">(`:`)</span><span class="sxs-lookup"><span data-stu-id="a9d68-470">(`:`)</span></span>|<span data-ttu-id="a9d68-471">Separador de hora.</span><span class="sxs-lookup"><span data-stu-id="a9d68-471">Time separator.</span></span> <span data-ttu-id="a9d68-472">Em algumas localidades, outros caracteres podem ser usados para representar o separador de hora.</span><span class="sxs-lookup"><span data-stu-id="a9d68-472">In some locales, other characters may be used to represent the time separator.</span></span> <span data-ttu-id="a9d68-473">O separador de hora separa horas, minutos e segundos quando valores de tempo são formatados.</span><span class="sxs-lookup"><span data-stu-id="a9d68-473">The time separator separates hours, minutes, and seconds when time values are formatted.</span></span> <span data-ttu-id="a9d68-474">O caractere real usado como o separador de hora na saída formatada é determinado pelo valor de cultura atual do seu aplicativo.</span><span class="sxs-lookup"><span data-stu-id="a9d68-474">The actual character that is used as the time separator in formatted output is determined by your application's current culture value.</span></span>|  
|<span data-ttu-id="a9d68-475">(`/`)</span><span class="sxs-lookup"><span data-stu-id="a9d68-475">(`/`)</span></span>|<span data-ttu-id="a9d68-476">Separador de data.</span><span class="sxs-lookup"><span data-stu-id="a9d68-476">Date separator.</span></span> <span data-ttu-id="a9d68-477">Em algumas localidades, outros caracteres podem ser usados para representar o separador de data.</span><span class="sxs-lookup"><span data-stu-id="a9d68-477">In some locales, other characters may be used to represent the date separator.</span></span> <span data-ttu-id="a9d68-478">O separador de data separa dia, mês e ano quando valores de data são formatados.</span><span class="sxs-lookup"><span data-stu-id="a9d68-478">The date separator separates the day, month, and year when date values are formatted.</span></span> <span data-ttu-id="a9d68-479">O caractere real usado como separador de data na saída formatada é determinado pela cultura atual do seu aplicativo.</span><span class="sxs-lookup"><span data-stu-id="a9d68-479">The actual character that is used as the date separator in formatted output is determined by your application's current culture.</span></span>|  
|<span data-ttu-id="a9d68-480">(`%`)</span><span class="sxs-lookup"><span data-stu-id="a9d68-480">(`%`)</span></span>|<span data-ttu-id="a9d68-481">Usado para indicar que o seguinte caractere deve ser lido como um formato de letra sem considerar nenhuma letra à direita.</span><span class="sxs-lookup"><span data-stu-id="a9d68-481">Used to indicate that the following character should be read as a single-letter format without regard to any trailing letters.</span></span> <span data-ttu-id="a9d68-482">Também é usado para indicar que o formato de uma única letra é lido como um formato definido pelo usuário.</span><span class="sxs-lookup"><span data-stu-id="a9d68-482">Also used to indicate that a single-letter format is read as a user-defined format.</span></span> <span data-ttu-id="a9d68-483">Veja a seguir para obter mais detalhes.</span><span class="sxs-lookup"><span data-stu-id="a9d68-483">See what follows for additional details.</span></span>|  
|`d`|<span data-ttu-id="a9d68-484">Exibe o dia como um número sem um zero à esquerda (por exemplo, `1`).</span><span class="sxs-lookup"><span data-stu-id="a9d68-484">Displays the day as a number without a leading zero (for example, `1`).</span></span> <span data-ttu-id="a9d68-485">Use `%d` se esse for o único caractere no seu formato numérico definido pelo usuário.</span><span class="sxs-lookup"><span data-stu-id="a9d68-485">Use `%d` if this is the only character in your user-defined numeric format.</span></span>|  
|`dd`|<span data-ttu-id="a9d68-486">Exibe o dia como um número com um zero à esquerda (por exemplo, `01`).</span><span class="sxs-lookup"><span data-stu-id="a9d68-486">Displays the day as a number with a leading zero (for example, `01`).</span></span>|  
|`ddd`|<span data-ttu-id="a9d68-487">Exibe o dia como uma abreviação (por exemplo, `Sun`).</span><span class="sxs-lookup"><span data-stu-id="a9d68-487">Displays the day as an abbreviation (for example, `Sun`).</span></span>|  
|`dddd`|<span data-ttu-id="a9d68-488">Exibe o dia como um nome completo (por exemplo, `Sunday`).</span><span class="sxs-lookup"><span data-stu-id="a9d68-488">Displays the day as a full name (for example, `Sunday`).</span></span>|  
|`M`|<span data-ttu-id="a9d68-489">Exibe o mês como um número sem um zero à esquerda (por exemplo, janeiro é representado como `1`).</span><span class="sxs-lookup"><span data-stu-id="a9d68-489">Displays the month as a number without a leading zero (for example, January is represented as `1`).</span></span> <span data-ttu-id="a9d68-490">Use `%M` se esse for o único caractere no seu formato numérico definido pelo usuário.</span><span class="sxs-lookup"><span data-stu-id="a9d68-490">Use `%M` if this is the only character in your user-defined numeric format.</span></span>|  
|`MM`|<span data-ttu-id="a9d68-491">Exibe o mês como um número com um zero à esquerda (por exemplo, `01/12/01`).</span><span class="sxs-lookup"><span data-stu-id="a9d68-491">Displays the month as a number with a leading zero (for example, `01/12/01`).</span></span>|  
|`MMM`|<span data-ttu-id="a9d68-492">Exibe o mês como uma abreviação (por exemplo, `Jan`).</span><span class="sxs-lookup"><span data-stu-id="a9d68-492">Displays the month as an abbreviation (for example, `Jan`).</span></span>|  
|`MMMM`|<span data-ttu-id="a9d68-493">Exibe o mês como um nome completo do mês (por exemplo, `January`).</span><span class="sxs-lookup"><span data-stu-id="a9d68-493">Displays the month as a full month name (for example, `January`).</span></span>|  
|`gg`|<span data-ttu-id="a9d68-494">Exibe a cadeia de caracteres de período/era (por exemplo, `A.D.`).</span><span class="sxs-lookup"><span data-stu-id="a9d68-494">Displays the period/era string (for example, `A.D.`).</span></span>|  
|`h`|<span data-ttu-id="a9d68-495">Exibe a hora como um número sem zeros à esquerda usando o relógio de 12 horas (por exemplo, `1:15:15 PM`).</span><span class="sxs-lookup"><span data-stu-id="a9d68-495">Displays the hour as a number without leading zeros using the 12-hour clock (for example, `1:15:15 PM`).</span></span> <span data-ttu-id="a9d68-496">Use `%h` se esse for o único caractere no seu formato numérico definido pelo usuário.</span><span class="sxs-lookup"><span data-stu-id="a9d68-496">Use `%h` if this is the only character in your user-defined numeric format.</span></span>|  
|`hh`|<span data-ttu-id="a9d68-497">Exibe a hora como um número com zeros à esquerda usando o relógio de 12 horas (por exemplo, `01:15:15 PM`).</span><span class="sxs-lookup"><span data-stu-id="a9d68-497">Displays the hour as a number with leading zeros using the 12-hour clock (for example, `01:15:15 PM`).</span></span>|  
|`H`|<span data-ttu-id="a9d68-498">Exibe a hora como um número sem zeros à esquerda usando o relógio de 24 horas (por exemplo, `1:15:15`).</span><span class="sxs-lookup"><span data-stu-id="a9d68-498">Displays the hour as a number without leading zeros using the 24-hour clock (for example, `1:15:15`).</span></span> <span data-ttu-id="a9d68-499">Use `%H` se esse for o único caractere no seu formato numérico definido pelo usuário.</span><span class="sxs-lookup"><span data-stu-id="a9d68-499">Use `%H` if this is the only character in your user-defined numeric format.</span></span>|  
|`HH`|<span data-ttu-id="a9d68-500">Exibe a hora como um número com zeros à esquerda usando o relógio de 24 horas (por exemplo, `01:15:15`).</span><span class="sxs-lookup"><span data-stu-id="a9d68-500">Displays the hour as a number with leading zeros using the 24-hour clock (for example, `01:15:15`).</span></span>|  
|`m`|<span data-ttu-id="a9d68-501">Exibe o minuto como um número sem zeros à esquerda (por exemplo, `12:1:15`).</span><span class="sxs-lookup"><span data-stu-id="a9d68-501">Displays the minute as a number without leading zeros (for example, `12:1:15`).</span></span> <span data-ttu-id="a9d68-502">Use `%m` se esse for o único caractere no seu formato numérico definido pelo usuário.</span><span class="sxs-lookup"><span data-stu-id="a9d68-502">Use `%m` if this is the only character in your user-defined numeric format.</span></span>|  
|`mm`|<span data-ttu-id="a9d68-503">Exibe o minuto como um número com zeros à esquerda (por exemplo, `12:01:15`).</span><span class="sxs-lookup"><span data-stu-id="a9d68-503">Displays the minute as a number with leading zeros (for example, `12:01:15`).</span></span>|  
|`s`|<span data-ttu-id="a9d68-504">Exibe o segundo como um número sem zeros à esquerda (por exemplo, `12:15:5`).</span><span class="sxs-lookup"><span data-stu-id="a9d68-504">Displays the second as a number without leading zeros (for example, `12:15:5`).</span></span> <span data-ttu-id="a9d68-505">Use `%s` se esse for o único caractere no seu formato numérico definido pelo usuário.</span><span class="sxs-lookup"><span data-stu-id="a9d68-505">Use `%s` if this is the only character in your user-defined numeric format.</span></span>|  
|`ss`|<span data-ttu-id="a9d68-506">Exibe o segundo como um número com zeros à esquerda (por exemplo, `12:15:05`).</span><span class="sxs-lookup"><span data-stu-id="a9d68-506">Displays the second as a number with leading zeros (for example, `12:15:05`).</span></span>|  
|`f`|<span data-ttu-id="a9d68-507">Exibe frações de segundos.</span><span class="sxs-lookup"><span data-stu-id="a9d68-507">Displays fractions of seconds.</span></span> <span data-ttu-id="a9d68-508">Por exemplo `ff` exibe centésimos de segundos, enquanto `ffff` exibe décimos de milésimos de segundos.</span><span class="sxs-lookup"><span data-stu-id="a9d68-508">For example `ff` displays hundredths of seconds, whereas `ffff` displays ten-thousandths of seconds.</span></span> <span data-ttu-id="a9d68-509">Você pode usar até sete `f` símbolos em seu formato definido pelo usuário.</span><span class="sxs-lookup"><span data-stu-id="a9d68-509">You may use up to seven `f` symbols in your user-defined format.</span></span> <span data-ttu-id="a9d68-510">Use `%f` se esse for o único caractere no seu formato numérico definido pelo usuário.</span><span class="sxs-lookup"><span data-stu-id="a9d68-510">Use `%f` if this is the only character in your user-defined numeric format.</span></span>|  
|`t`|<span data-ttu-id="a9d68-511">Usa o relógio de 12 horas e exibe uma letra maiuscula `A` para qualquer hora antes do meio-dia; exibe uma letra maiuscula `P` para qualquer hora entre meio-dia e 11:59 PM.</span><span class="sxs-lookup"><span data-stu-id="a9d68-511">Uses the 12-hour clock and displays an uppercase `A` for any hour before noon; displays an uppercase `P` for any hour between noon and 11:59 P.M.</span></span> <span data-ttu-id="a9d68-512">Use `%t` se esse for o único caractere no seu formato numérico definido pelo usuário.</span><span class="sxs-lookup"><span data-stu-id="a9d68-512">Use `%t` if this is the only character in your user-defined numeric format.</span></span>|  
|`tt`|<span data-ttu-id="a9d68-513">Para localidades que usam um relógio de 12 horas, exibe uma letra maiuscula `AM` com qualquer hora antes do meio-dia; exibe uma letra maiuscula `PM` com qualquer hora entre meio-dia e 11:59 PM.</span><span class="sxs-lookup"><span data-stu-id="a9d68-513">For locales that use a 12-hour clock, displays an uppercase `AM` with any hour before noon; displays an uppercase `PM` with any hour between noon and 11:59 P.M.</span></span><br /><br /> <span data-ttu-id="a9d68-514">Para localidades que usam um relógio de 24 horas, não exibirá nada.</span><span class="sxs-lookup"><span data-stu-id="a9d68-514">For locales that use a 24-hour clock, displays nothing.</span></span>|  
|`y`|<span data-ttu-id="a9d68-515">Exibe o número do ano (0-9) sem zeros à esquerda.</span><span class="sxs-lookup"><span data-stu-id="a9d68-515">Displays the year number (0-9) without leading zeros.</span></span> <span data-ttu-id="a9d68-516">Use `%y` se esse for o único caractere no seu formato numérico definido pelo usuário.</span><span class="sxs-lookup"><span data-stu-id="a9d68-516">Use `%y` if this is the only character in your user-defined numeric format.</span></span>|  
|`yy`|<span data-ttu-id="a9d68-517">Exibe o ano no formato numérico de dois dígitos com um zero à esquerda, se aplicável.</span><span class="sxs-lookup"><span data-stu-id="a9d68-517">Displays the year in two-digit numeric format with a leading zero, if applicable.</span></span>|  
|`yyy`|<span data-ttu-id="a9d68-518">Exibe o ano no formato de quatro dígitos numérico.</span><span class="sxs-lookup"><span data-stu-id="a9d68-518">Displays the year in four-digit numeric format.</span></span>|  
|`yyyy`|<span data-ttu-id="a9d68-519">Exibe o ano no formato de quatro dígitos numérico.</span><span class="sxs-lookup"><span data-stu-id="a9d68-519">Displays the year in four-digit numeric format.</span></span>|  
|`z`|<span data-ttu-id="a9d68-520">Exibe o deslocamento de fuso horário sem um zero à esquerda (por exemplo, `-8`).</span><span class="sxs-lookup"><span data-stu-id="a9d68-520">Displays the timezone offset without a leading zero (for example, `-8`).</span></span> <span data-ttu-id="a9d68-521">Use `%z` se esse for o único caractere no seu formato numérico definido pelo usuário.</span><span class="sxs-lookup"><span data-stu-id="a9d68-521">Use `%z` if this is the only character in your user-defined numeric format.</span></span>|  
|`zz`|<span data-ttu-id="a9d68-522">Exibe o deslocamento de fuso horário com um zero à esquerda (por exemplo, `-08`)</span><span class="sxs-lookup"><span data-stu-id="a9d68-522">Displays the timezone offset with a leading zero (for example, `-08`)</span></span>|  
|`zzz`|<span data-ttu-id="a9d68-523">Exibe o deslocamento de fuso horário completo (por exemplo, `-08:00`)</span><span class="sxs-lookup"><span data-stu-id="a9d68-523">Displays the full timezone offset (for example, `-08:00`)</span></span>|  
  
### <a name="legacy-code-example"></a><span data-ttu-id="a9d68-524">Exemplo de código herdado</span><span class="sxs-lookup"><span data-stu-id="a9d68-524">Legacy Code Example</span></span>  
 <span data-ttu-id="a9d68-525">Estes são exemplos de data definido pelo usuário e formatos de hora para `December 7, 1958, 8:50 PM, 35 seconds`:</span><span class="sxs-lookup"><span data-stu-id="a9d68-525">The following are examples of user-defined date and time formats for `December 7, 1958, 8:50 PM, 35 seconds`:</span></span>  
  
|<span data-ttu-id="a9d68-526">Formatar</span><span class="sxs-lookup"><span data-stu-id="a9d68-526">Format</span></span>|<span data-ttu-id="a9d68-527">Telas</span><span class="sxs-lookup"><span data-stu-id="a9d68-527">Displays</span></span>|  
|-|-|  
|`M/d/yy`|`12/7/58`|  
|`d-MMM`|`7-Dec`|  
|`d-MMMM-yy`|`7-December-58`|  
|`d MMMM`|`7 December`|  
|`MMMM yy`|`December 58`|  
|`hh:mm tt`|`08:50 PM`|  
|`h:mm:ss t`|`8:50:35 P`|  
|`H:mm`|`20:50`|  
|`H:mm:ss`|`20:50:35`|  
|`M/d/yyyy H:mm`|`12/7/1958 20:50`|  
  
### <a name="smart-device-developer-notes"></a><span data-ttu-id="a9d68-528">Notas do desenvolvedor de dispositivo inteligente</span><span class="sxs-lookup"><span data-stu-id="a9d68-528">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="a9d68-529">A resolução de tempo mínimo para um dispositivo é determinada pelo fabricante do dispositivo.</span><span class="sxs-lookup"><span data-stu-id="a9d68-529">The minimum time resolution for a device is determined by the manufacturer of the device.</span></span> <span data-ttu-id="a9d68-530">Se o tempo de resolução para o dispositivo for grande o suficiente, o `f` caractere de formato retorna 0 quando executado no dispositivo.</span><span class="sxs-lookup"><span data-stu-id="a9d68-530">If the time resolution for the device is coarse enough, the `f` format character returns 0 when run on that device.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a9d68-531">Este exemplo mostra vários usos da função `Format` para formatar valores usando os formatos `String` e os formatos definidos pelo usuário.</span><span class="sxs-lookup"><span data-stu-id="a9d68-531">This example shows various uses of the `Format` function to format values using both `String` formats and user-defined formats.</span></span> <span data-ttu-id="a9d68-532">Para o separador de data (`/`), separador de hora (`:`) e indicadores AM/PM (`t` e `tt`), a saída formatada real exibida pelo seu sistema depende das configurações de localidade que o código está usando.</span><span class="sxs-lookup"><span data-stu-id="a9d68-532">For the date separator (`/`), time separator (`:`), and the AM/PM indicators (`t` and `tt`), the actual formatted output displayed by your system depends on the locale settings the code is using.</span></span> <span data-ttu-id="a9d68-533">Quando horas e datas são exibidas no ambiente de desenvolvimento, o formato abreviado de tempo e o formato abreviado de data do local do código são usados.</span><span class="sxs-lookup"><span data-stu-id="a9d68-533">When times and dates are displayed in the development environment, the short time format and short date format of the code locale are used.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a9d68-534">Para localidades que usam um relógio de 24 horas, os indicadores AM/PM (`t` e `tt`) não exibem nada.</span><span class="sxs-lookup"><span data-stu-id="a9d68-534">For locales that use a 24-hour clock, the AM/PM indicators (`t` and `tt`) display nothing.</span></span>  
  
 [!code-vb[VbVbalrStrings#27](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#27)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.String.Format(System.String,System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.Str(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="FormatCurrency">
      <MemberSignature Language="C#" Value="public static string FormatCurrency (object Expression, int NumDigitsAfterDecimal = -1, Microsoft.VisualBasic.TriState IncludeLeadingDigit = Microsoft.VisualBasic.TriState.UseDefault, Microsoft.VisualBasic.TriState UseParensForNegativeNumbers = Microsoft.VisualBasic.TriState.UseDefault, Microsoft.VisualBasic.TriState GroupDigits = Microsoft.VisualBasic.TriState.UseDefault);" />
      <MemberSignature Language="ILAsm" Value=".method public static string FormatCurrency(object Expression, int32 NumDigitsAfterDecimal, valuetype Microsoft.VisualBasic.TriState IncludeLeadingDigit, valuetype Microsoft.VisualBasic.TriState UseParensForNegativeNumbers, valuetype Microsoft.VisualBasic.TriState GroupDigits) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
      <MemberSignature Language="VB.NET" Value="Public Function FormatCurrency (Expression As Object, Optional NumDigitsAfterDecimal As Integer = -1, Optional IncludeLeadingDigit As TriState = Microsoft.VisualBasic.TriState.UseDefault, Optional UseParensForNegativeNumbers As TriState = Microsoft.VisualBasic.TriState.UseDefault, Optional GroupDigits As TriState = Microsoft.VisualBasic.TriState.UseDefault) As String" />
      <MemberSignature Language="F#" Value="static member FormatCurrency : obj * int * Microsoft.VisualBasic.TriState * Microsoft.VisualBasic.TriState * Microsoft.VisualBasic.TriState -&gt; string" Usage="Microsoft.VisualBasic.Strings.FormatCurrency (Expression, NumDigitsAfterDecimal, IncludeLeadingDigit, UseParensForNegativeNumbers, GroupDigits)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" />
        <Parameter Name="NumDigitsAfterDecimal" Type="System.Int32" />
        <Parameter Name="IncludeLeadingDigit" Type="Microsoft.VisualBasic.TriState" />
        <Parameter Name="UseParensForNegativeNumbers" Type="Microsoft.VisualBasic.TriState" />
        <Parameter Name="GroupDigits" Type="Microsoft.VisualBasic.TriState" />
      </Parameters>
      <Docs>
        <param name="Expression">
          <span data-ttu-id="a9d68-535">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-535">Required.</span>
          </span>
          <span data-ttu-id="a9d68-536">Expressão a ser formatada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-536">Expression to be formatted.</span>
          </span>
        </param>
        <param name="NumDigitsAfterDecimal">
          <span data-ttu-id="a9d68-537">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-537">Optional.</span>
          </span>
          <span data-ttu-id="a9d68-538">Valor numérico indicando quantas casas são exibidas à direita do decimal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-538">Numeric value indicating how many places are displayed to the right of the decimal.</span>
          </span>
          <span data-ttu-id="a9d68-539">O valor padrão é -1, que indica que as configurações regionais do computador são usadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-539">Default value is –1, which indicates that the computer's regional settings are used.</span>
          </span>
        </param>
        <param name="IncludeLeadingDigit">
          <span data-ttu-id="a9d68-540">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-540">Optional.</span>
          </span>
          <span data-ttu-id="a9d68-541">A enumeração <see cref="T:Microsoft.VisualBasic.TriState" /> que indica se um zero à esquerda é exibido ou não para valores fracionários.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-541">
              <see cref="T:Microsoft.VisualBasic.TriState" /> enumeration that indicates whether or not a leading zero is displayed for fractional values.</span>
          </span>
          <span data-ttu-id="a9d68-542">Consulte "Comentários" para obter os valores.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-542">See "Remarks" for values.</span>
          </span>
        </param>
        <param name="UseParensForNegativeNumbers">
          <span data-ttu-id="a9d68-543">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-543">Optional.</span>
          </span>
          <span data-ttu-id="a9d68-544">A enumeração <see cref="T:Microsoft.VisualBasic.TriState" /> que indica se é necessário ou não colocar valores negativos entre parênteses.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-544">
              <see cref="T:Microsoft.VisualBasic.TriState" /> enumeration that indicates whether or not to place negative values within parentheses.</span>
          </span>
          <span data-ttu-id="a9d68-545">Consulte "Comentários" para obter os valores.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-545">See "Remarks" for values.</span>
          </span>
        </param>
        <param name="GroupDigits">
          <span data-ttu-id="a9d68-546">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-546">Optional.</span>
          </span>
          <span data-ttu-id="a9d68-547">A enumeração <see cref="T:Microsoft.VisualBasic.TriState" /> que indica se os números são agrupados ou não usando o delimitador de grupo especificado nas configurações regionais do computador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-547">
              <see cref="T:Microsoft.VisualBasic.TriState" /> enumeration that indicates whether or not numbers are grouped using the group delimiter specified in the computer's regional settings.</span>
          </span>
          <span data-ttu-id="a9d68-548">Consulte "Comentários" para obter os valores.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-548">See "Remarks" for values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9d68-549">Retorna uma expressão formatada como um valor de moeda usando o símbolo da moeda definido no painel de controle do sistema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-549">Returns an expression formatted as a currency value using the currency symbol defined in the system control panel.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a9d68-550">Retorna uma expressão formatada como um valor de moeda usando o símbolo da moeda definido no painel de controle do sistema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-550">Returns an expression formatted as a currency value using the currency symbol defined in the system control panel.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9d68-551">Quando um ou mais argumentos opcionais são omitidos, os valores correspondentes de configurações regionais do computador são usadas em vez disso.</span><span class="sxs-lookup"><span data-stu-id="a9d68-551">When one or more optional arguments are omitted, the computer's matching regional-settings values are used instead.</span></span>  
  
 <span data-ttu-id="a9d68-552">A posição do símbolo da moeda em relação ao valor de moeda é determinada por configurações regionais do sistema.</span><span class="sxs-lookup"><span data-stu-id="a9d68-552">The position of the currency symbol relative to the currency value is determined by the system's regional settings.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a9d68-553">Todas as informações de configurações vêm da localidade do aplicativo.</span><span class="sxs-lookup"><span data-stu-id="a9d68-553">All settings information comes from the locale of the application.</span></span> <span data-ttu-id="a9d68-554">Por padrão, que será a localidade definida no painel de controle.</span><span class="sxs-lookup"><span data-stu-id="a9d68-554">By default, that will be the locale set in the control panel.</span></span> <span data-ttu-id="a9d68-555">No entanto, ele pode ser alterado por meio de programação usando o .NET Framework, exceto zero à esquerda, que é proveniente de `Number` guia.</span><span class="sxs-lookup"><span data-stu-id="a9d68-555">However, it may be changed programmatically by using the .NET Framework, except leading zero, which comes from the `Number` tab.</span></span>  
  
 <span data-ttu-id="a9d68-556">O `IncludeLeadingDigit`, `UseParensForNegativeNumbers`, e `GroupDigits` argumentos usar os seguintes valores de enumeração de três estados.</span><span class="sxs-lookup"><span data-stu-id="a9d68-556">The `IncludeLeadingDigit`, `UseParensForNegativeNumbers`, and `GroupDigits` arguments take the following TriState enumeration values.</span></span>  
  
|<span data-ttu-id="a9d68-557">Valor</span><span class="sxs-lookup"><span data-stu-id="a9d68-557">Value</span></span>|<span data-ttu-id="a9d68-558">Descrição</span><span class="sxs-lookup"><span data-stu-id="a9d68-558">Description</span></span>|  
|-|-|  
|`TriState.True`|<span data-ttu-id="a9d68-559">verdadeiro</span><span class="sxs-lookup"><span data-stu-id="a9d68-559">True</span></span>|  
|`TriState.False`|<span data-ttu-id="a9d68-560">False</span><span class="sxs-lookup"><span data-stu-id="a9d68-560">False</span></span>|  
|`TriState.UseDefault`|<span data-ttu-id="a9d68-561">Configurações regionais do computador</span><span class="sxs-lookup"><span data-stu-id="a9d68-561">The computer's regional settings</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="a9d68-562">O exemplo a seguir ilustra o uso da função `FormatCurrency`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-562">The following example illustrates the use of the `FormatCurrency` function.</span></span>  
  
 [!code-vb[VbVbalrStrings#32](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#32)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a9d68-563">O número de dígitos após o ponto decimal é maior que 99.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-563">Number of digits after decimal point is greater than 99.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="a9d68-564">O tipo não é numérico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-564">Type is not numeric.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="T:Microsoft.VisualBasic.TriState" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.InvalidCastException" />
      </Docs>
    </Member>
    <Member MemberName="FormatDateTime">
      <MemberSignature Language="C#" Value="public static string FormatDateTime (DateTime Expression, Microsoft.VisualBasic.DateFormat NamedFormat = Microsoft.VisualBasic.DateFormat.GeneralDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static string FormatDateTime(valuetype System.DateTime Expression, valuetype Microsoft.VisualBasic.DateFormat NamedFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Function FormatDateTime (Expression As DateTime, Optional NamedFormat As DateFormat = Microsoft.VisualBasic.DateFormat.GeneralDate) As String" />
      <MemberSignature Language="F#" Value="static member FormatDateTime : DateTime * Microsoft.VisualBasic.DateFormat -&gt; string" Usage="Microsoft.VisualBasic.Strings.FormatDateTime (Expression, NamedFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.DateTime" />
        <Parameter Name="NamedFormat" Type="Microsoft.VisualBasic.DateFormat" />
      </Parameters>
      <Docs>
        <param name="Expression">
          <span data-ttu-id="a9d68-565">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-565">Required.</span>
          </span>
          <span data-ttu-id="a9d68-566">Expressão <see langword="Date" /> a ser formatada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-566">
              <see langword="Date" /> expression to be formatted.</span>
          </span>
        </param>
        <param name="NamedFormat">
          <span data-ttu-id="a9d68-567">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-567">Optional.</span>
          </span>
          <span data-ttu-id="a9d68-568">Valor numérico que indica o formato de data/hora usado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-568">Numeric value that indicates the date/time format used.</span>
          </span>
          <span data-ttu-id="a9d68-569">Se omitido, <see langword="DateFormat.GeneralDate" /> será usado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-569">If omitted, <see langword="DateFormat.GeneralDate" /> is used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9d68-570">Retorna uma expressão de cadeia de caracteres que representa um valor de data/hora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-570">Returns a string expression representing a date/time value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a9d68-571">Retorna uma expressão de cadeia de caracteres que representa um valor de data/hora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-571">Returns a string expression representing a date/time value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9d68-572">O `Date` tipo de dados sempre contém informações de data e hora.</span><span class="sxs-lookup"><span data-stu-id="a9d68-572">The `Date` data type always contains both date and time information.</span></span> <span data-ttu-id="a9d68-573">Para fins de conversão de tipo, o Visual Basic considera 1/1/1 (1 de janeiro do ano 1) como um valor neutro para a data e 00:00:00 (meia-noite) ser um valor neutro para a hora.</span><span class="sxs-lookup"><span data-stu-id="a9d68-573">For purposes of type conversion, Visual Basic considers 1/1/1 (January 1 of the year 1) to be a neutral value for the date, and 00:00:00 (midnight) to be a neutral value for the time.</span></span> <span data-ttu-id="a9d68-574">Se você formatar uma `Date` valor como uma cadeia de caracteres de data/hora, `FormatDateTime` não inclui valores neutros na cadeia de caracteres resultante.</span><span class="sxs-lookup"><span data-stu-id="a9d68-574">If you format a `Date` value as a date/time string, `FormatDateTime` does not include neutral values in the resulting string.</span></span> <span data-ttu-id="a9d68-575">Por exemplo, se você converter # 1/1/0001 9:30:00 # em uma cadeia de caracteres, o resultado é "9:30:00 AM"; as informações de data são suprimidas.</span><span class="sxs-lookup"><span data-stu-id="a9d68-575">For example, if you convert #1/1/0001 9:30:00# to a string, the result is "9:30:00 AM"; the date information is suppressed.</span></span> <span data-ttu-id="a9d68-576">No entanto, as informações de data ainda estão presentes no original `Date` de valor e pode ser recuperada com funções como `DatePart`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-576">However, the date information is still present in the original `Date` value and can be recovered with functions such as `DatePart`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a9d68-577">Se você passar o `Expression` argumento como uma `String` literal `FormatDateTime` interpreta isso de acordo com o <xref:System.Globalization.CultureInfo.CurrentCulture%2A> configuração do seu aplicativo.</span><span class="sxs-lookup"><span data-stu-id="a9d68-577">If you pass the `Expression` argument as a `String` literal, `FormatDateTime` interprets it according to the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> setting of your application.</span></span> <span data-ttu-id="a9d68-578">No entanto, se você passá-lo como um `Date` literal, use o formato #mm/dd/aaaa #, porque `FormatDateTime` sempre interpreta um `Date` literal de acordo com a cultura do inglês (EUA).</span><span class="sxs-lookup"><span data-stu-id="a9d68-578">However, if you pass it as a `Date` literal, use the format #mm/dd/yyyy#, because `FormatDateTime` always interprets a `Date` literal according to the English (US) culture.</span></span> <span data-ttu-id="a9d68-579">Isso é necessário porque, se um aplicativo é desenvolvido e codificado usando `Date` literais de uma cultura, mas, em seguida, é executado em uma plataforma com uma cultura diferente, o `Date` literais podem ser interpretados incorretamente.</span><span class="sxs-lookup"><span data-stu-id="a9d68-579">This is necessary because, if an application is developed and coded using `Date` literals from one culture, but is then executed on a platform with a different culture, the `Date` literals could be parsed incorrectly.</span></span>  
  
 <span data-ttu-id="a9d68-580">O `NamedFormat` argumento tem as seguintes configurações.</span><span class="sxs-lookup"><span data-stu-id="a9d68-580">The `NamedFormat` argument has the following settings.</span></span>  
  
|<span data-ttu-id="a9d68-581">Constante</span><span class="sxs-lookup"><span data-stu-id="a9d68-581">Constant</span></span>|<span data-ttu-id="a9d68-582">Descrição</span><span class="sxs-lookup"><span data-stu-id="a9d68-582">Description</span></span>|  
|-|-|  
|`DateFormat.GeneralDate`|<span data-ttu-id="a9d68-583">Exiba uma data / hora.</span><span class="sxs-lookup"><span data-stu-id="a9d68-583">Display a date and/or time.</span></span> <span data-ttu-id="a9d68-584">Exiba uma parte de data como uma data abreviada.</span><span class="sxs-lookup"><span data-stu-id="a9d68-584">Display a date part as a short date.</span></span> <span data-ttu-id="a9d68-585">Se houver uma parte de hora, exibi-lo como um longo tempo.</span><span class="sxs-lookup"><span data-stu-id="a9d68-585">If there is a time part, display it as a long time.</span></span> <span data-ttu-id="a9d68-586">Se estiver presente, exibir as duas partes.</span><span class="sxs-lookup"><span data-stu-id="a9d68-586">If present, both parts display.</span></span>|  
|`DateFormat.LongDate`|<span data-ttu-id="a9d68-587">Exibe uma data usando o formato de data completa especificado nas configurações regionais do computador.</span><span class="sxs-lookup"><span data-stu-id="a9d68-587">Display a date using the long date format specified in your computer's regional settings.</span></span>|  
|`DateFormat.ShortDate`|<span data-ttu-id="a9d68-588">Exibe uma data usando o formato de data abreviada especificado nas configurações regionais do computador.</span><span class="sxs-lookup"><span data-stu-id="a9d68-588">Display a date using the short date format specified in your computer's regional settings.</span></span>|  
|`DateFormat.LongTime`|<span data-ttu-id="a9d68-589">Exibe uma hora usando o formato de hora especificado nas configurações regionais do computador.</span><span class="sxs-lookup"><span data-stu-id="a9d68-589">Display a time using the time format specified in your computer's regional settings.</span></span>|  
|`DateFormat.ShortTime`|<span data-ttu-id="a9d68-590">Exibe uma hora usando o formato de 24 horas (hh: mm).</span><span class="sxs-lookup"><span data-stu-id="a9d68-590">Display a time using the 24-hour format (hh:mm).</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="a9d68-591">Este exemplo demonstra o uso do `FormatDateTime` função.</span><span class="sxs-lookup"><span data-stu-id="a9d68-591">This example demonstrates the use of the `FormatDateTime` function.</span></span>  
  
 [!code-vb[VbVbalrStrings#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a9d68-592">A configuração <paramref name="NamedFormat" /> não é válida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-592">
              <paramref name="NamedFormat" /> setting is not valid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DatePart(Microsoft.VisualBasic.DateInterval,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
      </Docs>
    </Member>
    <Member MemberName="FormatNumber">
      <MemberSignature Language="C#" Value="public static string FormatNumber (object Expression, int NumDigitsAfterDecimal = -1, Microsoft.VisualBasic.TriState IncludeLeadingDigit = Microsoft.VisualBasic.TriState.UseDefault, Microsoft.VisualBasic.TriState UseParensForNegativeNumbers = Microsoft.VisualBasic.TriState.UseDefault, Microsoft.VisualBasic.TriState GroupDigits = Microsoft.VisualBasic.TriState.UseDefault);" />
      <MemberSignature Language="ILAsm" Value=".method public static string FormatNumber(object Expression, int32 NumDigitsAfterDecimal, valuetype Microsoft.VisualBasic.TriState IncludeLeadingDigit, valuetype Microsoft.VisualBasic.TriState UseParensForNegativeNumbers, valuetype Microsoft.VisualBasic.TriState GroupDigits) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
      <MemberSignature Language="VB.NET" Value="Public Function FormatNumber (Expression As Object, Optional NumDigitsAfterDecimal As Integer = -1, Optional IncludeLeadingDigit As TriState = Microsoft.VisualBasic.TriState.UseDefault, Optional UseParensForNegativeNumbers As TriState = Microsoft.VisualBasic.TriState.UseDefault, Optional GroupDigits As TriState = Microsoft.VisualBasic.TriState.UseDefault) As String" />
      <MemberSignature Language="F#" Value="static member FormatNumber : obj * int * Microsoft.VisualBasic.TriState * Microsoft.VisualBasic.TriState * Microsoft.VisualBasic.TriState -&gt; string" Usage="Microsoft.VisualBasic.Strings.FormatNumber (Expression, NumDigitsAfterDecimal, IncludeLeadingDigit, UseParensForNegativeNumbers, GroupDigits)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" />
        <Parameter Name="NumDigitsAfterDecimal" Type="System.Int32" />
        <Parameter Name="IncludeLeadingDigit" Type="Microsoft.VisualBasic.TriState" />
        <Parameter Name="UseParensForNegativeNumbers" Type="Microsoft.VisualBasic.TriState" />
        <Parameter Name="GroupDigits" Type="Microsoft.VisualBasic.TriState" />
      </Parameters>
      <Docs>
        <param name="Expression">
          <span data-ttu-id="a9d68-593">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-593">Required.</span>
          </span>
          <span data-ttu-id="a9d68-594">Expressão a ser formatada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-594">Expression to be formatted.</span>
          </span>
        </param>
        <param name="NumDigitsAfterDecimal">
          <span data-ttu-id="a9d68-595">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-595">Optional.</span>
          </span>
          <span data-ttu-id="a9d68-596">Valor numérico indicando quantas casas são exibidas à direita do decimal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-596">Numeric value indicating how many places are displayed to the right of the decimal.</span>
          </span>
          <span data-ttu-id="a9d68-597">O valor padrão é -1, que indica que as configurações regionais do computador são usadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-597">The default value is –1, which indicates that the computer's regional settings are used.</span>
          </span>
        </param>
        <param name="IncludeLeadingDigit">
          <span data-ttu-id="a9d68-598">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-598">Optional.</span>
          </span>
          <span data-ttu-id="a9d68-599">A constante <see cref="T:Microsoft.VisualBasic.TriState" /> que indica se um 0 à esquerda é exibido para valores fracionários.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-599">
              <see cref="T:Microsoft.VisualBasic.TriState" /> constant that indicates whether a leading 0 is displayed for fractional values.</span>
          </span>
          <span data-ttu-id="a9d68-600">Consulte “Configurações” para obter os valores.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-600">See "Settings" for values.</span>
          </span>
        </param>
        <param name="UseParensForNegativeNumbers">
          <span data-ttu-id="a9d68-601">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-601">Optional.</span>
          </span>
          <span data-ttu-id="a9d68-602">A constante <see cref="T:Microsoft.VisualBasic.TriState" /> que indica se é necessário colocar valores negativos entre parênteses.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-602">
              <see cref="T:Microsoft.VisualBasic.TriState" /> constant that indicates whether to place negative values within parentheses.</span>
          </span>
          <span data-ttu-id="a9d68-603">Consulte “Configurações” para obter os valores.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-603">See "Settings" for values.</span>
          </span>
        </param>
        <param name="GroupDigits">
          <span data-ttu-id="a9d68-604">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-604">Optional.</span>
          </span>
          <span data-ttu-id="a9d68-605">A constante <see cref="T:Microsoft.VisualBasic.TriState" /> que indica se os números são agrupados usando o delimitador de grupo especificado nas configurações de localidade ou não.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-605">
              <see cref="T:Microsoft.VisualBasic.TriState" /> constant that indicates whether or not numbers are grouped using the group delimiter specified in the locale settings.</span>
          </span>
          <span data-ttu-id="a9d68-606">Consulte “Configurações” para obter os valores.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-606">See "Settings" for values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9d68-607">Retorna uma expressão formatada como um número.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-607">Returns an expression formatted as a number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a9d68-608">Retorna uma expressão formatada como um número.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-608">Returns an expression formatted as a number.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9d68-609">Quando um ou mais argumentos opcionais são omitidos os valores para os argumentos omitidos são fornecidos pelas configurações de localidade.</span><span class="sxs-lookup"><span data-stu-id="a9d68-609">When one or more optional arguments are omitted the values for omitted arguments are provided by the locale settings.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a9d68-610">Todas as informações de configurações vêm da localidade do aplicativo.</span><span class="sxs-lookup"><span data-stu-id="a9d68-610">All settings information comes from the locale of the application.</span></span> <span data-ttu-id="a9d68-611">Por padrão, que será a localidade definida no painel de controle.</span><span class="sxs-lookup"><span data-stu-id="a9d68-611">By default, that will be the locale set in the control panel.</span></span> <span data-ttu-id="a9d68-612">No entanto, ele pode ser alterado programaticamente usando o .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="a9d68-612">However, it may be changed programmatically by using the .NET Framework.</span></span>  
  
 <span data-ttu-id="a9d68-613">O `IncludeLeadingDigit`, `UseParensForNegativeNumbers`, e `GroupDigits` argumentos têm as seguintes configurações.</span><span class="sxs-lookup"><span data-stu-id="a9d68-613">The `IncludeLeadingDigit`, `UseParensForNegativeNumbers`, and `GroupDigits` arguments have the following settings.</span></span>  
  
|<span data-ttu-id="a9d68-614">Constante</span><span class="sxs-lookup"><span data-stu-id="a9d68-614">Constant</span></span>|<span data-ttu-id="a9d68-615">Descrição</span><span class="sxs-lookup"><span data-stu-id="a9d68-615">Description</span></span>|  
|-|-|  
|`TriState.True`|<span data-ttu-id="a9d68-616">verdadeiro</span><span class="sxs-lookup"><span data-stu-id="a9d68-616">True</span></span>|  
|`TriState.False`|<span data-ttu-id="a9d68-617">False</span><span class="sxs-lookup"><span data-stu-id="a9d68-617">False</span></span>|  
|`TriState.UseDefault`|<span data-ttu-id="a9d68-618">Configurações regionais do computador</span><span class="sxs-lookup"><span data-stu-id="a9d68-618">The computer's regional settings</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="a9d68-619">Este exemplo demonstra o `FormatNumber` função.</span><span class="sxs-lookup"><span data-stu-id="a9d68-619">This example demonstrates the `FormatNumber` function.</span></span>  
  
 [!code-vb[VbVbalrStrings#15](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="a9d68-620">O tipo não é numérico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-620">Type is not numeric.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="T:Microsoft.VisualBasic.TriState" />
        <altmember cref="T:System.InvalidCastException" />
      </Docs>
    </Member>
    <Member MemberName="FormatPercent">
      <MemberSignature Language="C#" Value="public static string FormatPercent (object Expression, int NumDigitsAfterDecimal = -1, Microsoft.VisualBasic.TriState IncludeLeadingDigit = Microsoft.VisualBasic.TriState.UseDefault, Microsoft.VisualBasic.TriState UseParensForNegativeNumbers = Microsoft.VisualBasic.TriState.UseDefault, Microsoft.VisualBasic.TriState GroupDigits = Microsoft.VisualBasic.TriState.UseDefault);" />
      <MemberSignature Language="ILAsm" Value=".method public static string FormatPercent(object Expression, int32 NumDigitsAfterDecimal, valuetype Microsoft.VisualBasic.TriState IncludeLeadingDigit, valuetype Microsoft.VisualBasic.TriState UseParensForNegativeNumbers, valuetype Microsoft.VisualBasic.TriState GroupDigits) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
      <MemberSignature Language="VB.NET" Value="Public Function FormatPercent (Expression As Object, Optional NumDigitsAfterDecimal As Integer = -1, Optional IncludeLeadingDigit As TriState = Microsoft.VisualBasic.TriState.UseDefault, Optional UseParensForNegativeNumbers As TriState = Microsoft.VisualBasic.TriState.UseDefault, Optional GroupDigits As TriState = Microsoft.VisualBasic.TriState.UseDefault) As String" />
      <MemberSignature Language="F#" Value="static member FormatPercent : obj * int * Microsoft.VisualBasic.TriState * Microsoft.VisualBasic.TriState * Microsoft.VisualBasic.TriState -&gt; string" Usage="Microsoft.VisualBasic.Strings.FormatPercent (Expression, NumDigitsAfterDecimal, IncludeLeadingDigit, UseParensForNegativeNumbers, GroupDigits)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" />
        <Parameter Name="NumDigitsAfterDecimal" Type="System.Int32" />
        <Parameter Name="IncludeLeadingDigit" Type="Microsoft.VisualBasic.TriState" />
        <Parameter Name="UseParensForNegativeNumbers" Type="Microsoft.VisualBasic.TriState" />
        <Parameter Name="GroupDigits" Type="Microsoft.VisualBasic.TriState" />
      </Parameters>
      <Docs>
        <param name="Expression">
          <span data-ttu-id="a9d68-621">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-621">Required.</span>
          </span>
          <span data-ttu-id="a9d68-622">Expressão a ser formatada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-622">Expression to be formatted.</span>
          </span>
        </param>
        <param name="NumDigitsAfterDecimal">
          <span data-ttu-id="a9d68-623">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-623">Optional.</span>
          </span>
          <span data-ttu-id="a9d68-624">Valor numérico indicando quantas casas são exibidas à direita do decimal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-624">Numeric value indicating how many places to the right of the decimal are displayed.</span>
          </span>
          <span data-ttu-id="a9d68-625">O valor padrão é -1, que indica que as configurações de localidade são usadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-625">Default value is –1, which indicates that the locale settings are used.</span>
          </span>
        </param>
        <param name="IncludeLeadingDigit">
          <span data-ttu-id="a9d68-626">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-626">Optional.</span>
          </span>
          <span data-ttu-id="a9d68-627">A constante <see cref="T:Microsoft.VisualBasic.TriState" /> que indica se um zero à esquerda é exibido ou não para valores fracionários.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-627">
              <see cref="T:Microsoft.VisualBasic.TriState" /> constant that indicates whether or not a leading zero displays for fractional values.</span>
          </span>
          <span data-ttu-id="a9d68-628">Consulte “Configurações” para obter os valores.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-628">See "Settings" for values.</span>
          </span>
        </param>
        <param name="UseParensForNegativeNumbers">
          <span data-ttu-id="a9d68-629">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-629">Optional.</span>
          </span>
          <span data-ttu-id="a9d68-630">A constante <see cref="T:Microsoft.VisualBasic.TriState" /> que indica se é necessário ou não colocar valores negativos entre parênteses.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-630">
              <see cref="T:Microsoft.VisualBasic.TriState" /> constant that indicates whether or not to place negative values within parentheses.</span>
          </span>
          <span data-ttu-id="a9d68-631">Consulte “Configurações” para obter os valores.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-631">See "Settings" for values.</span>
          </span>
        </param>
        <param name="GroupDigits">
          <span data-ttu-id="a9d68-632">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-632">Optional.</span>
          </span>
          <span data-ttu-id="a9d68-633">A constante <see cref="T:Microsoft.VisualBasic.TriState" /> que indica se os números são agrupados usando o delimitador de grupo especificado nas configurações de localidade ou não.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-633">
              <see cref="T:Microsoft.VisualBasic.TriState" /> constant that indicates whether or not numbers are grouped using the group delimiter specified in the locale settings.</span>
          </span>
          <span data-ttu-id="a9d68-634">Consulte “Configurações” para obter os valores.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-634">See "Settings" for values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9d68-635">Retorna uma expressão formatada como um percentual (isto é, multiplicada por 100) com um caractere % à direita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-635">Returns an expression formatted as a percentage (that is, multiplied by 100) with a trailing % character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a9d68-636">Retorna uma expressão formatada como um percentual (isto é, multiplicada por 100) com um caractere % à direita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-636">Returns an expression formatted as a percentage (that is, multiplied by 100) with a trailing % character.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9d68-637">Quando um ou mais argumentos opcionais são omitidos, os valores para os argumentos omitidos são fornecidos pelas configurações de localidade.</span><span class="sxs-lookup"><span data-stu-id="a9d68-637">When one or more optional arguments are omitted, the values for omitted arguments are provided by the locale settings.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a9d68-638">Todas as informações de configurações vêm da localidade do aplicativo.</span><span class="sxs-lookup"><span data-stu-id="a9d68-638">All settings information comes from the locale of the application.</span></span> <span data-ttu-id="a9d68-639">Por padrão, que será a localidade definida no painel de controle.</span><span class="sxs-lookup"><span data-stu-id="a9d68-639">By default, that will be the locale set in the control panel.</span></span> <span data-ttu-id="a9d68-640">No entanto, ele pode ser alterado programaticamente usando o .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="a9d68-640">However, it may be changed programmatically by using the .NET Framework.</span></span>  
  
 <span data-ttu-id="a9d68-641">O `IncludeLeadingDigit`, `UseParensForNegativeNumbers`, e `GroupDigits` argumentos têm as seguintes configurações.</span><span class="sxs-lookup"><span data-stu-id="a9d68-641">The `IncludeLeadingDigit`, `UseParensForNegativeNumbers`, and `GroupDigits` arguments have the following settings.</span></span>  
  
|<span data-ttu-id="a9d68-642">Constante</span><span class="sxs-lookup"><span data-stu-id="a9d68-642">Constant</span></span>|<span data-ttu-id="a9d68-643">Descrição</span><span class="sxs-lookup"><span data-stu-id="a9d68-643">Description</span></span>|  
|-|-|  
|`TriState.True`|<span data-ttu-id="a9d68-644">verdadeiro</span><span class="sxs-lookup"><span data-stu-id="a9d68-644">True</span></span>|  
|`TriState.False`|<span data-ttu-id="a9d68-645">False</span><span class="sxs-lookup"><span data-stu-id="a9d68-645">False</span></span>|  
|`TriState.Default`|<span data-ttu-id="a9d68-646">Configurações regionais do computador</span><span class="sxs-lookup"><span data-stu-id="a9d68-646">The computer's regional settings</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="a9d68-647">Este exemplo ilustra o uso do `FormatPercent` função.</span><span class="sxs-lookup"><span data-stu-id="a9d68-647">This example illustrates the use of the `FormatPercent` function.</span></span>  
  
 [!code-vb[VbVbalrStrings#28](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#28)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="a9d68-648">O tipo não é numérico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-648">Type is not numeric.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="T:Microsoft.VisualBasic.TriState" />
        <altmember cref="T:System.InvalidCastException" />
      </Docs>
    </Member>
    <Member MemberName="GetChar">
      <MemberSignature Language="C#" Value="public static char GetChar (string str, int Index);" />
      <MemberSignature Language="ILAsm" Value=".method public static char GetChar(string str, int32 Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.GetChar(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChar (str As String, Index As Integer) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char GetChar(System::String ^ str, int Index);" />
      <MemberSignature Language="F#" Value="static member GetChar : string * int -&gt; char" Usage="Microsoft.VisualBasic.Strings.GetChar (str, Index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="Index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="str">
          <span data-ttu-id="a9d68-649">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-649">Required.</span>
          </span>
          <span data-ttu-id="a9d68-650">Qualquer expressão <see langword="String" /> válida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-650">Any valid <see langword="String" /> expression.</span>
          </span>
        </param>
        <param name="Index">
          <span data-ttu-id="a9d68-651">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-651">Required.</span>
          </span>
          <span data-ttu-id="a9d68-652">Expressão <see langword="Integer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-652">
              <see langword="Integer" /> expression.</span>
          </span>
          <span data-ttu-id="a9d68-653">O índice do caractere (baseado em 1) no <c>str</c> a ser retornado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-653">The (1-based) index of the character in <c>str</c> to be returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9d68-654">Retorna um valor <see langword="Char" /> que representa o caractere de índice especificado na cadeia de caracteres fornecida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-654">Returns a <see langword="Char" /> value representing the character from the specified index in the supplied string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a9d68-655">O valor <see langword="Char" /> que representa o caractere de índice especificado na cadeia de caracteres fornecida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-655">
              <see langword="Char" /> value representing the character from the specified index in the supplied string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9d68-656">Se `Index` é menor que 1 ou maior que o índice do último caractere no `str`, um `ArgumentException` é gerada.</span><span class="sxs-lookup"><span data-stu-id="a9d68-656">If `Index` is less than 1 or greater than the index of the last character in `str`, an `ArgumentException` is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a9d68-657">Este exemplo mostra como usar o `GetChar` função retornar um caractere de um índice especificado em um `String`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-657">This example shows how to use the `GetChar` function to return a character from a specified index in a `String`.</span></span>  
  
 [!code-vb[VbVbalrStrings#23](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#23)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a9d68-658">
            <paramref name="str" /> é <see langword="Nothing" />, <paramref name="Index" /> &lt; 1 ou <paramref name="Index" /> é maior que o índice do último caractere de <paramref name="str" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-658">
              <paramref name="str" /> is <see langword="Nothing" />, <paramref name="Index" /> &lt; 1, or <paramref name="Index" /> is greater than index of last character of <paramref name="str" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Mid" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <MemberGroup MemberName="InStr">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a9d68-659">Retorna um inteiro que especifica a posição inicial da primeira ocorrência de uma cadeia de caracteres dentro de outra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-659">Returns an integer specifying the start position of the first occurrence of one string within another.</span>
          </span>
          <span data-ttu-id="a9d68-660">O inteiro é um índice baseado em um se uma correspondência é encontrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-660">The integer is a one-based index if a match is found.</span>
          </span>
          <span data-ttu-id="a9d68-661">Se nenhuma correspondência for encontrada, a função retornará zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-661">If no match is found, the function returns zero.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="InStr">
      <MemberSignature Language="C#" Value="public static int InStr (string String1, string String2, Microsoft.VisualBasic.CompareMethod Compare = Microsoft.VisualBasic.CompareMethod.Binary);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 InStr(string String1, string String2, valuetype Microsoft.VisualBasic.CompareMethod Compare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Function InStr (String1 As String, String2 As String, Optional Compare As CompareMethod = Microsoft.VisualBasic.CompareMethod.Binary) As Integer" />
      <MemberSignature Language="F#" Value="static member InStr : string * string * Microsoft.VisualBasic.CompareMethod -&gt; int" Usage="Microsoft.VisualBasic.Strings.InStr (String1, String2, Compare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="String1" Type="System.String" />
        <Parameter Name="String2" Type="System.String" />
        <Parameter Name="Compare" Type="Microsoft.VisualBasic.CompareMethod">
          <Attributes>
            <Attribute>
              <AttributeName>Microsoft.VisualBasic.CompilerServices.OptionCompare</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="String1">
          <span data-ttu-id="a9d68-662">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-662">Required.</span>
          </span>
          <span data-ttu-id="a9d68-663">Expressão <see langword="String" /> pesquisada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-663">
              <see langword="String" /> expression being searched.</span>
          </span>
        </param>
        <param name="String2">
          <span data-ttu-id="a9d68-664">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-664">Required.</span>
          </span>
          <span data-ttu-id="a9d68-665">Expressão <see langword="String" /> solicitada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-665">
              <see langword="String" /> expression sought.</span>
          </span>
        </param>
        <param name="Compare">
          <span data-ttu-id="a9d68-666">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-666">Optional.</span>
          </span>
          <span data-ttu-id="a9d68-667">Especifica o tipo de comparação de cadeias de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-667">Specifies the type of string comparison.</span>
          </span>
          <span data-ttu-id="a9d68-668">Se <c>Compare</c> for omitido, a configuração <see langword="Option Compare" /> determinará o tipo de comparação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-668">If <c>Compare</c> is omitted, the <see langword="Option Compare" /> setting determines the type of comparison.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9d68-669">Retorna um inteiro que especifica a posição inicial da primeira ocorrência de uma cadeia de caracteres dentro de outra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-669">Returns an integer specifying the start position of the first occurrence of one string within another.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a9d68-670">
            <list type="table">
              <item>
                <term> Se </term>
                <description> InStr retorna </description>
              </item>
              <item>
                <term>
                  <paramref name="String1" /> tem comprimento zero ou <see langword="Nothing" /></term>
                <description> 0  </description>
              </item>
              <item>
                <term>
                  <paramref name="String2" /> tem comprimento zero ou <see langword="Nothing" /></term>
                <description> A posição inicial da pesquisa, cujo padrão é a posição do primeiro caractere.  </description>
              </item>
              <item>
                <term>
                  <paramref name="String2" /> não é encontrado </term>
                <description> 0  </description>
              </item>
              <item>
                <term>
                  <paramref name="String2" /> é encontrado dentro de <paramref name="String1" /></term>
                <description> Posição em que a correspondência começa  </description>
              </item>
              <item>
                <term></term>
                <description></description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-670">
              <list type="table">
                <item>
                  <term> If  </term>
                  <description> InStr returns  </description>
                </item>
                <item>
                  <term>
                    <paramref name="String1" /> is zero length or <see langword="Nothing" /></term>
                  <description> 0  </description>
                </item>
                <item>
                  <term>
                    <paramref name="String2" /> is zero length or <see langword="Nothing" /></term>
                  <description> The starting position for the search, which defaults to the first character position.  </description>
                </item>
                <item>
                  <term>
                    <paramref name="String2" /> is not found  </term>
                  <description> 0  </description>
                </item>
                <item>
                  <term>
                    <paramref name="String2" /> is found within <paramref name="String1" /></term>
                  <description> Position where match begins  </description>
                </item>
                <item>
                  <term></term>
                  <description></description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9d68-671">Normalmente, o `InStr` função é usada durante a análise de cadeias de caracteres.</span><span class="sxs-lookup"><span data-stu-id="a9d68-671">Typically, the `InStr` function is used when parsing strings.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a9d68-672">O `InStrB` função nas versões anteriores do Visual Basic retorna um número de bytes em vez de uma posição de caractere.</span><span class="sxs-lookup"><span data-stu-id="a9d68-672">The `InStrB` function in previous versions of Visual Basic returns a number of bytes rather than a character position.</span></span> <span data-ttu-id="a9d68-673">Ele é usado principalmente para converter cadeias de caracteres em caracteres de byte duplo (DBCS) conjunto de aplicativos.</span><span class="sxs-lookup"><span data-stu-id="a9d68-673">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="a9d68-674">Todas as cadeias de caracteres do Visual Basic 2005 estão em Unicode, e `InStrB` não é mais suportada.</span><span class="sxs-lookup"><span data-stu-id="a9d68-674">All Visual Basic 2005 strings are in Unicode, and `InStrB` is no longer supported.</span></span>  
  
 <span data-ttu-id="a9d68-675">As configurações do argumento `Compare` são:</span><span class="sxs-lookup"><span data-stu-id="a9d68-675">The `Compare` argument settings are:</span></span>  
  
|<span data-ttu-id="a9d68-676">Constante</span><span class="sxs-lookup"><span data-stu-id="a9d68-676">Constant</span></span>|<span data-ttu-id="a9d68-677">Valor</span><span class="sxs-lookup"><span data-stu-id="a9d68-677">Value</span></span>|<span data-ttu-id="a9d68-678">Descrição</span><span class="sxs-lookup"><span data-stu-id="a9d68-678">Description</span></span>|  
|-|-|-|  
|`Binary`|<span data-ttu-id="a9d68-679">0</span><span class="sxs-lookup"><span data-stu-id="a9d68-679">0</span></span>|<span data-ttu-id="a9d68-680">Executa uma comparação binária</span><span class="sxs-lookup"><span data-stu-id="a9d68-680">Performs a binary comparison</span></span>|  
|`Text`|<span data-ttu-id="a9d68-681">1</span><span class="sxs-lookup"><span data-stu-id="a9d68-681">1</span></span>|<span data-ttu-id="a9d68-682">Executa uma comparação de texto</span><span class="sxs-lookup"><span data-stu-id="a9d68-682">Performs a text comparison</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="a9d68-683">Este exemplo usa a função `InStr` para retornar a posição da primeira ocorrência de uma cadeia de caracteres dentro da outra.</span><span class="sxs-lookup"><span data-stu-id="a9d68-683">This example uses the `InStr` function to return the position of the first occurrence of one string within another.</span></span>  
  
 [!code-vb[VbVbalrStrings#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="InStr">
      <MemberSignature Language="C#" Value="public static int InStr (int Start, string String1, string String2, Microsoft.VisualBasic.CompareMethod Compare = Microsoft.VisualBasic.CompareMethod.Binary);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 InStr(int32 Start, string String1, string String2, valuetype Microsoft.VisualBasic.CompareMethod Compare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Function InStr (Start As Integer, String1 As String, String2 As String, Optional Compare As CompareMethod = Microsoft.VisualBasic.CompareMethod.Binary) As Integer" />
      <MemberSignature Language="F#" Value="static member InStr : int * string * string * Microsoft.VisualBasic.CompareMethod -&gt; int" Usage="Microsoft.VisualBasic.Strings.InStr (Start, String1, String2, Compare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Start" Type="System.Int32" />
        <Parameter Name="String1" Type="System.String" />
        <Parameter Name="String2" Type="System.String" />
        <Parameter Name="Compare" Type="Microsoft.VisualBasic.CompareMethod">
          <Attributes>
            <Attribute>
              <AttributeName>Microsoft.VisualBasic.CompilerServices.OptionCompare</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="Start">
          <span data-ttu-id="a9d68-684">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-684">Optional.</span>
          </span>
          <span data-ttu-id="a9d68-685">Expressão numérica que define a posição inicial de cada pesquisa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-685">Numeric expression that sets the starting position for each search.</span>
          </span>
          <span data-ttu-id="a9d68-686">Se omitida, a pesquisa começa na posição do primeiro caractere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-686">If omitted, search begins at the first character position.</span>
          </span>
          <span data-ttu-id="a9d68-687">O índice inicial é de base 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-687">The start index is 1-based.</span>
          </span>
        </param>
        <param name="String1">
          <span data-ttu-id="a9d68-688">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-688">Required.</span>
          </span>
          <span data-ttu-id="a9d68-689">Expressão <see langword="String" /> pesquisada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-689">
              <see langword="String" /> expression being searched.</span>
          </span>
        </param>
        <param name="String2">
          <span data-ttu-id="a9d68-690">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-690">Required.</span>
          </span>
          <span data-ttu-id="a9d68-691">Expressão <see langword="String" /> solicitada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-691">
              <see langword="String" /> expression sought.</span>
          </span>
        </param>
        <param name="Compare">
          <span data-ttu-id="a9d68-692">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-692">Optional.</span>
          </span>
          <span data-ttu-id="a9d68-693">Especifica o tipo de comparação de cadeias de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-693">Specifies the type of string comparison.</span>
          </span>
          <span data-ttu-id="a9d68-694">Se <c>Compare</c> for omitido, a configuração <see langword="Option Compare" /> determinará o tipo de comparação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-694">If <c>Compare</c> is omitted, the <see langword="Option Compare" /> setting determines the type of comparison.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9d68-695">Retorna um inteiro que especifica a posição inicial da primeira ocorrência de uma cadeia de caracteres dentro de outra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-695">Returns an integer specifying the start position of the first occurrence of one string within another.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a9d68-696">
            <list type="table">
              <item>
                <term> Se </term>
                <description> InStr retorna </description>
              </item>
              <item>
                <term>
                  <paramref name="String1" /> tem comprimento zero ou <see langword="Nothing" /></term>
                <description> 0 </description>
              </item>
              <item>
                <term>
                  <paramref name="String2" /> tem comprimento zero ou <see langword="Nothing" /></term>
                <description>
                  <paramref name="start" />
                </description>
              </item>
              <item>
                <term>
                  <paramref name="String2" /> não é encontrado </term>
                <description> 0  </description>
              </item>
              <item>
                <term>
                  <paramref name="String2" /> é encontrado em <paramref name="String1" /></term>
                <description> Posição em que a correspondência começa </description>
              </item>
              <item>
                <term>
                  <paramref name="Start" /> &gt; comprimento de <paramref name="String1" /></term>
                <description> 0  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-696">
              <list type="table">
                <item>
                  <term> If  </term>
                  <description> InStr returns  </description>
                </item>
                <item>
                  <term>
                    <paramref name="String1" /> is zero length or <see langword="Nothing" /></term>
                  <description> 0  </description>
                </item>
                <item>
                  <term>
                    <paramref name="String2" /> is zero length or <see langword="Nothing" /></term>
                  <description>
                    <paramref name="start" />
                  </description>
                </item>
                <item>
                  <term>
                    <paramref name="String2" /> is not found  </term>
                  <description> 0  </description>
                </item>
                <item>
                  <term>
                    <paramref name="String2" /> is found within <paramref name="String1" /></term>
                  <description> Position where match begins  </description>
                </item>
                <item>
                  <term>
                    <paramref name="Start" /> &gt; length of <paramref name="String1" /></term>
                  <description> 0  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9d68-697">Normalmente, o `InStr` função é usada durante a análise de cadeias de caracteres.</span><span class="sxs-lookup"><span data-stu-id="a9d68-697">Typically, the `InStr` function is used when parsing strings.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a9d68-698">O `InStrB` função nas versões anteriores do Visual Basic retorna um número de bytes em vez de uma posição de caractere.</span><span class="sxs-lookup"><span data-stu-id="a9d68-698">The `InStrB` function in previous versions of Visual Basic returns a number of bytes rather than a character position.</span></span> <span data-ttu-id="a9d68-699">Ele é usado principalmente para converter cadeias de caracteres em caracteres de byte duplo (DBCS) conjunto de aplicativos.</span><span class="sxs-lookup"><span data-stu-id="a9d68-699">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="a9d68-700">Todas as cadeias de caracteres do Visual Basic 2005 estão em Unicode, e `InStrB` não é mais suportada.</span><span class="sxs-lookup"><span data-stu-id="a9d68-700">All Visual Basic 2005 strings are in Unicode, and `InStrB` is no longer supported.</span></span>  
  
 <span data-ttu-id="a9d68-701">As configurações do argumento `Compare` são:</span><span class="sxs-lookup"><span data-stu-id="a9d68-701">The `Compare` argument settings are:</span></span>  
  
|<span data-ttu-id="a9d68-702">Constante</span><span class="sxs-lookup"><span data-stu-id="a9d68-702">Constant</span></span>|<span data-ttu-id="a9d68-703">Valor</span><span class="sxs-lookup"><span data-stu-id="a9d68-703">Value</span></span>|<span data-ttu-id="a9d68-704">Descrição</span><span class="sxs-lookup"><span data-stu-id="a9d68-704">Description</span></span>|  
|-|-|-|  
|`Binary`|<span data-ttu-id="a9d68-705">0</span><span class="sxs-lookup"><span data-stu-id="a9d68-705">0</span></span>|<span data-ttu-id="a9d68-706">Executa uma comparação binária</span><span class="sxs-lookup"><span data-stu-id="a9d68-706">Performs a binary comparison</span></span>|  
|`Text`|<span data-ttu-id="a9d68-707">1</span><span class="sxs-lookup"><span data-stu-id="a9d68-707">1</span></span>|<span data-ttu-id="a9d68-708">Executa uma comparação de texto</span><span class="sxs-lookup"><span data-stu-id="a9d68-708">Performs a text comparison</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="a9d68-709">Este exemplo usa a função `InStr` para retornar a posição da primeira ocorrência de uma cadeia de caracteres dentro da outra.</span><span class="sxs-lookup"><span data-stu-id="a9d68-709">This example uses the `InStr` function to return the position of the first occurrence of one string within another.</span></span>  
  
 [!code-vb[VbVbalrStrings#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a9d68-710">
            <paramref name="Start" /> &lt; 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-710">
              <paramref name="Start" /> &lt; 1.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="InStrRev">
      <MemberSignature Language="C#" Value="public static int InStrRev (string StringCheck, string StringMatch, int Start = -1, Microsoft.VisualBasic.CompareMethod Compare = Microsoft.VisualBasic.CompareMethod.Binary);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 InStrRev(string StringCheck, string StringMatch, int32 Start, valuetype Microsoft.VisualBasic.CompareMethod Compare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Function InStrRev (StringCheck As String, StringMatch As String, Optional Start As Integer = -1, Optional Compare As CompareMethod = Microsoft.VisualBasic.CompareMethod.Binary) As Integer" />
      <MemberSignature Language="F#" Value="static member InStrRev : string * string * int * Microsoft.VisualBasic.CompareMethod -&gt; int" Usage="Microsoft.VisualBasic.Strings.InStrRev (StringCheck, StringMatch, Start, Compare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="StringCheck" Type="System.String" />
        <Parameter Name="StringMatch" Type="System.String" />
        <Parameter Name="Start" Type="System.Int32" />
        <Parameter Name="Compare" Type="Microsoft.VisualBasic.CompareMethod">
          <Attributes>
            <Attribute>
              <AttributeName>Microsoft.VisualBasic.CompilerServices.OptionCompare</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="StringCheck">
          <span data-ttu-id="a9d68-711">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-711">Required.</span>
          </span>
          <span data-ttu-id="a9d68-712">Expressão de cadeia de caracteres pesquisada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-712">String expression being searched.</span>
          </span>
        </param>
        <param name="StringMatch">
          <span data-ttu-id="a9d68-713">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-713">Required.</span>
          </span>
          <span data-ttu-id="a9d68-714">Expressão de cadeia de caracteres pesquisada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-714">String expression being searched for.</span>
          </span>
        </param>
        <param name="Start">
          <span data-ttu-id="a9d68-715">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-715">Optional.</span>
          </span>
          <span data-ttu-id="a9d68-716">Expressão numérica que define a posição inicial baseada em um de cada pesquisa, começando do lado esquerdo da cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-716">Numeric expression setting the one-based starting position for each search, starting from the left side of the string.</span>
          </span>
          <span data-ttu-id="a9d68-717">Se <c>Start</c> for omitido, -1 será usado, o que significa que a pesquisa será iniciada na posição do último caractere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-717">If <c>Start</c> is omitted then –1 is used, meaning the search begins at the last character position.</span>
          </span>
          <span data-ttu-id="a9d68-718">Pesquisa e continua da direita para a esquerda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-718">Search then proceeds from right to left.</span>
          </span>
        </param>
        <param name="Compare">
          <span data-ttu-id="a9d68-719">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-719">Optional.</span>
          </span>
          <span data-ttu-id="a9d68-720">Valor numérico que indica o tipo de comparação a ser usado ao avaliar subcadeias de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-720">Numeric value indicating the kind of comparison to use when evaluating substrings.</span>
          </span>
          <span data-ttu-id="a9d68-721">Se for omitido, será executada uma comparação binária.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-721">If omitted, a binary comparison is performed.</span>
          </span>
          <span data-ttu-id="a9d68-722">Consulte Configurações para obter os valores.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-722">See Settings for values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9d68-723">Retorna a posição da primeira ocorrência de uma cadeia de caracteres em outra, começando do lado direito da cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-723">Returns the position of the first occurrence of one string within another, starting from the right side of the string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a9d68-724">
            <list type="table">
              <item>
                <term> Se </term>
                <description> InstrRev retorna </description>
              </item>
              <item>
                <term>
                  <paramref name="StringCheck" /> tem comprimento zero </term>
                <description> 0 </description>
              </item>
              <item>
                <term>
                  <paramref name="StringMatch" /> tem comprimento zero </term>
                <description>
                  <paramref name="Start" />
                </description>
              </item>
              <item>
                <term>
                  <paramref name="StringMatch" /> não é encontrado  </term>
                <description> 0  </description>
              </item>
              <item>
                <term>
                  <paramref name="StringMatch" /> é encontrada em <paramref name="StringCheck" /></term>
                <description> Posição na qual a primeira correspondência é encontrada, começando com o lado direito da cadeia de caracteres.  </description>
              </item>
              <item>
                <term>
                  <paramref name="Start" /> é maior que o comprimento de <paramref name="StringMatch" /></term>
                <description> 0  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-724">
              <list type="table">
                <item>
                  <term> If  </term>
                  <description> InStrRev returns  </description>
                </item>
                <item>
                  <term>
                    <paramref name="StringCheck" /> is zero-length  </term>
                  <description> 0  </description>
                </item>
                <item>
                  <term>
                    <paramref name="StringMatch" /> is zero-length  </term>
                  <description>
                    <paramref name="Start" />
                  </description>
                </item>
                <item>
                  <term>
                    <paramref name="StringMatch" /> is not found  </term>
                  <description> 0  </description>
                </item>
                <item>
                  <term>
                    <paramref name="StringMatch" /> is found within <paramref name="StringCheck" /></term>
                  <description> Position at which the first match is found, starting with the right side of the string.  </description>
                </item>
                <item>
                  <term>
                    <paramref name="Start" /> is greater than length of <paramref name="StringMatch" /></term>
                  <description> 0  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9d68-725">Observe que a sintaxe para o `InStrRev` função não é o mesmo que a sintaxe para o `InStr` função.</span><span class="sxs-lookup"><span data-stu-id="a9d68-725">Note that the syntax for the `InStrRev` function is not the same as the syntax for the `InStr` function.</span></span>  
  
 <span data-ttu-id="a9d68-726">O `Compare` argumento pode ter os seguintes valores.</span><span class="sxs-lookup"><span data-stu-id="a9d68-726">The `Compare` argument can have the following values.</span></span>  
  
|<span data-ttu-id="a9d68-727">Constante</span><span class="sxs-lookup"><span data-stu-id="a9d68-727">Constant</span></span>|<span data-ttu-id="a9d68-728">Descrição</span><span class="sxs-lookup"><span data-stu-id="a9d68-728">Description</span></span>|  
|-|-|  
|`Binary`|<span data-ttu-id="a9d68-729">Executa uma comparação binária.</span><span class="sxs-lookup"><span data-stu-id="a9d68-729">Performs a binary comparison.</span></span>|  
|`Text`|<span data-ttu-id="a9d68-730">Executa uma comparação textual.</span><span class="sxs-lookup"><span data-stu-id="a9d68-730">Performs a textual comparison.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="a9d68-731">Este exemplo demonstra o uso do `InStrRev` função.</span><span class="sxs-lookup"><span data-stu-id="a9d68-731">This example demonstrates the use of the `InStrRev` function.</span></span>  
  
 [!code-vb[VbVbalrStrings#26](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#26)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a9d68-732">
            <paramref name="Start" /> = 0 ou <paramref name="Start" /> &lt; -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-732">
              <paramref name="Start" /> = 0 or <paramref name="Start" /> &lt; -1.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.InStr" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Join">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a9d68-733">Retorna uma cadeia de caracteres criada unindo um número de subcadeias contidas em uma matriz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-733">Returns a string created by joining a number of substrings contained in an array.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Join">
      <MemberSignature Language="C#" Value="public static string Join (object[] SourceArray, string Delimiter = &quot; &quot;);" />
      <MemberSignature Language="ILAsm" Value=".method public static string Join(object[] SourceArray, string Delimiter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Join(System.Object[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Join (SourceArray As Object(), Optional Delimiter As String = &quot; &quot;) As String" />
      <MemberSignature Language="F#" Value="static member Join : obj[] * string -&gt; string" Usage="Microsoft.VisualBasic.Strings.Join (SourceArray, Delimiter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SourceArray" Type="System.Object[]" />
        <Parameter Name="Delimiter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="SourceArray">
          <span data-ttu-id="a9d68-734">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-734">Required.</span>
          </span>
          <span data-ttu-id="a9d68-735">Matriz unidimensional que contém subcadeias a serem unidas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-735">One-dimensional array containing substrings to be joined.</span>
          </span>
        </param>
        <param name="Delimiter">
          <span data-ttu-id="a9d68-736">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-736">Optional.</span>
          </span>
          <span data-ttu-id="a9d68-737">Qualquer cadeia de caracteres, usada para separar as subcadeias na cadeia de caracteres retornada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-737">Any string, used to separate the substrings in the returned string.</span>
          </span>
          <span data-ttu-id="a9d68-738">Se omitido, o caractere de espaço (" ") será usado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-738">If omitted, the space character (" ") is used.</span>
          </span>
          <span data-ttu-id="a9d68-739">Se <c>Delimiter</c> for uma cadeia de comprimento zero ("") ou <see langword="Nothing" />, todos os itens na lista serão concatenados sem delimitadores.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-739">If <c>Delimiter</c> is a zero-length string ("") or <see langword="Nothing" />, all items in the list are concatenated with no delimiters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9d68-740">Retorna uma cadeia de caracteres criada unindo um número de subcadeias contidas em uma matriz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-740">Returns a string created by joining a number of substrings contained in an array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a9d68-741">Retorna uma cadeia de caracteres criada unindo um número de subcadeias contidas em uma matriz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-741">Returns a string created by joining a number of substrings contained in an array.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9d68-742">Há uma paridade entre o `Join` e `Split` funções.</span><span class="sxs-lookup"><span data-stu-id="a9d68-742">There is a parity between the `Join` and `Split` functions.</span></span> <span data-ttu-id="a9d68-743">O `Join` função pega uma matriz de cadeias de caracteres e une-as usando uma cadeia de caracteres do delimitador, para retornar uma única cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="a9d68-743">The `Join` function takes an array of strings and joins them using a delimiter string, to return a single string.</span></span> <span data-ttu-id="a9d68-744">O `Split` função usa uma cadeia de caracteres e separa no delimitador, para retornar uma matriz de cadeias de caracteres.</span><span class="sxs-lookup"><span data-stu-id="a9d68-744">The `Split` function takes a string and separates it at the delimiter, to return an array of strings.</span></span> <span data-ttu-id="a9d68-745">No entanto, uma diferença importante é que `Join` pode concatenar cadeias de caracteres com qualquer cadeia de caracteres do delimitador, `Split` só pode separar cadeias de caracteres usando um único caractere delimitador.</span><span class="sxs-lookup"><span data-stu-id="a9d68-745">However, a key difference is that `Join` can concatenate strings with any delimiter string, `Split` can only separate strings using a single character delimiter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a9d68-746">O exemplo a seguir demonstra como usar o `Join` função para criar uma lista de várias cadeias de caracteres.</span><span class="sxs-lookup"><span data-stu-id="a9d68-746">The following example demonstrates how to use the `Join` function to create a list from several strings.</span></span>  
  
 [!code-vb[VbVbalrStrings#10](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a9d68-747">
            <paramref name="SourceArray" /> não é unidimensional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-747">
              <paramref name="SourceArray" /> is not one dimensional.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="Join">
      <MemberSignature Language="C#" Value="public static string Join (string[] SourceArray, string Delimiter = &quot; &quot;);" />
      <MemberSignature Language="ILAsm" Value=".method public static string Join(string[] SourceArray, string Delimiter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Join(System.String[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Join (SourceArray As String(), Optional Delimiter As String = &quot; &quot;) As String" />
      <MemberSignature Language="F#" Value="static member Join : string[] * string -&gt; string" Usage="Microsoft.VisualBasic.Strings.Join (SourceArray, Delimiter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SourceArray" Type="System.String[]" />
        <Parameter Name="Delimiter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="SourceArray">
          <span data-ttu-id="a9d68-748">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-748">Required.</span>
          </span>
          <span data-ttu-id="a9d68-749">Matriz unidimensional que contém subcadeias a serem unidas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-749">One-dimensional array containing substrings to be joined.</span>
          </span>
        </param>
        <param name="Delimiter">
          <span data-ttu-id="a9d68-750">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-750">Optional.</span>
          </span>
          <span data-ttu-id="a9d68-751">Qualquer cadeia de caracteres, usada para separar as subcadeias na cadeia de caracteres retornada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-751">Any string, used to separate the substrings in the returned string.</span>
          </span>
          <span data-ttu-id="a9d68-752">Se omitido, o caractere de espaço (" ") será usado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-752">If omitted, the space character (" ") is used.</span>
          </span>
          <span data-ttu-id="a9d68-753">Se <c>Delimiter</c> for uma cadeia de comprimento zero ("") ou <see langword="Nothing" />, todos os itens na lista serão concatenados sem delimitadores.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-753">If <c>Delimiter</c> is a zero-length string ("") or <see langword="Nothing" />, all items in the list are concatenated with no delimiters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9d68-754">Retorna uma cadeia de caracteres criada unindo um número de subcadeias contidas em uma matriz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-754">Returns a string created by joining a number of substrings contained in an array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a9d68-755">Retorna uma cadeia de caracteres criada unindo um número de subcadeias contidas em uma matriz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-755">Returns a string created by joining a number of substrings contained in an array.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9d68-756">Há uma paridade entre o `Join` e `Split` funções.</span><span class="sxs-lookup"><span data-stu-id="a9d68-756">There is a parity between the `Join` and `Split` functions.</span></span> <span data-ttu-id="a9d68-757">O `Join` função pega uma matriz de cadeias de caracteres e une-as usando uma cadeia de caracteres do delimitador, para retornar uma única cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="a9d68-757">The `Join` function takes an array of strings and joins them using a delimiter string, to return a single string.</span></span> <span data-ttu-id="a9d68-758">O `Split` função usa uma cadeia de caracteres e separa no delimitador, para retornar uma matriz de cadeias de caracteres.</span><span class="sxs-lookup"><span data-stu-id="a9d68-758">The `Split` function takes a string and separates it at the delimiter, to return an array of strings.</span></span> <span data-ttu-id="a9d68-759">No entanto, uma diferença importante é que `Join` pode concatenar cadeias de caracteres com qualquer cadeia de caracteres do delimitador, `Split` só pode separar cadeias de caracteres usando um único caractere delimitador.</span><span class="sxs-lookup"><span data-stu-id="a9d68-759">However, a key difference is that `Join` can concatenate strings with any delimiter string, `Split` can only separate strings using a single character delimiter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a9d68-760">O exemplo a seguir demonstra como usar o `Join` função para criar uma lista de várias cadeias de caracteres.</span><span class="sxs-lookup"><span data-stu-id="a9d68-760">The following example demonstrates how to use the `Join` function to create a list from several strings.</span></span>  
  
 [!code-vb[VbVbalrStrings#10](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a9d68-761">
            <paramref name="SourceArray" /> não é unidimensional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-761">
              <paramref name="SourceArray" /> is not one dimensional.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <MemberGroup MemberName="LCase">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a9d68-762">Retorna uma cadeia de caracteres ou um caractere convertido em minúsculas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-762">Returns a string or character converted to lowercase.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LCase">
      <MemberSignature Language="C#" Value="public static char LCase (char Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static char LCase(char Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.LCase(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function LCase (Value As Char) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char LCase(char Value);" />
      <MemberSignature Language="F#" Value="static member LCase : char -&gt; char" Usage="Microsoft.VisualBasic.Strings.LCase Value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="Value">
          <span data-ttu-id="a9d68-763">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-763">Required.</span>
          </span>
          <span data-ttu-id="a9d68-764">Qualquer expressão <see langword="String" /> ou <see langword="Char" /> válida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-764">Any valid <see langword="String" /> or <see langword="Char" /> expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9d68-765">Retorna uma cadeia de caracteres ou um caractere convertido em minúsculas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-765">Returns a string or character converted to lowercase.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a9d68-766">Retorna uma cadeia de caracteres ou um caractere convertido em minúsculas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-766">Returns a string or character converted to lowercase.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9d68-767">Somente as letras maiusculas são convertidas em minúsculas; todas as letras minúsculas e caracteres que não sejam letras permanecem inalterados.</span><span class="sxs-lookup"><span data-stu-id="a9d68-767">Only uppercase letters are converted to lowercase; all lowercase letters and nonletter characters remain unchanged.</span></span>  
  
 <span data-ttu-id="a9d68-768">Essa função usa informações de cultura do aplicativo ao manipular a cadeia de caracteres para que as alterações sejam apropriadas para a localidade na qual o aplicativo está sendo usado.</span><span class="sxs-lookup"><span data-stu-id="a9d68-768">This function uses the application's culture information when manipulating the string so that the case changes are appropriate for the locale in which the application is being used.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="a9d68-769">Se seu aplicativo toma decisões de segurança com base no resultado de uma comparação ou operação de alteração de caso e, em seguida, a operação deve usar o <xref:System.String.Compare%2A?displayProperty=nameWithType> método e passar <xref:System.StringComparison.Ordinal> ou <xref:System.StringComparison.OrdinalIgnoreCase> para o `comparisonType` argumento.</span><span class="sxs-lookup"><span data-stu-id="a9d68-769">If your application makes security decisions based on the result of a comparison or case-change operation, then the operation should use the <xref:System.String.Compare%2A?displayProperty=nameWithType> method, and pass <xref:System.StringComparison.Ordinal> or <xref:System.StringComparison.OrdinalIgnoreCase> for the `comparisonType` argument.</span></span> <span data-ttu-id="a9d68-770">Para obter mais informações, consulte [como cultura afeta cadeias de caracteres no Visual Basic](~/docs/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings.md).</span><span class="sxs-lookup"><span data-stu-id="a9d68-770">For more information, see [How Culture Affects Strings in Visual Basic](~/docs/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a9d68-771">Este exemplo usa o `LCase` função para retornar uma versão em minúsculas de uma cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="a9d68-771">This example uses the `LCase` function to return a lowercase version of a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#12](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.UCase" />
      </Docs>
    </Member>
    <Member MemberName="LCase">
      <MemberSignature Language="C#" Value="public static string LCase (string Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static string LCase(string Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.LCase(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function LCase (Value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ LCase(System::String ^ Value);" />
      <MemberSignature Language="F#" Value="static member LCase : string -&gt; string" Usage="Microsoft.VisualBasic.Strings.LCase Value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Value">
          <span data-ttu-id="a9d68-772">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-772">Required.</span>
          </span>
          <span data-ttu-id="a9d68-773">Qualquer expressão <see langword="String" /> ou <see langword="Char" /> válida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-773">Any valid <see langword="String" /> or <see langword="Char" /> expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9d68-774">Retorna uma cadeia de caracteres ou um caractere convertido em minúsculas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-774">Returns a string or character converted to lowercase.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a9d68-775">Retorna uma cadeia de caracteres ou um caractere convertido em minúsculas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-775">Returns a string or character converted to lowercase.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9d68-776">Somente as letras maiusculas são convertidas em minúsculas; todas as letras minúsculas e caracteres que não sejam letras permanecem inalterados.</span><span class="sxs-lookup"><span data-stu-id="a9d68-776">Only uppercase letters are converted to lowercase; all lowercase letters and nonletter characters remain unchanged.</span></span>  
  
 <span data-ttu-id="a9d68-777">Essa função usa informações de cultura do aplicativo ao manipular a cadeia de caracteres para que as alterações sejam apropriadas para a localidade na qual o aplicativo está sendo usado.</span><span class="sxs-lookup"><span data-stu-id="a9d68-777">This function uses the application's culture information when manipulating the string so that the case changes are appropriate for the locale in which the application is being used.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="a9d68-778">Se seu aplicativo toma decisões de segurança com base no resultado de uma comparação ou operação de alteração de caso e, em seguida, a operação deve usar o <xref:System.String.Compare%2A?displayProperty=nameWithType> método e passar <xref:System.StringComparison.Ordinal> ou <xref:System.StringComparison.OrdinalIgnoreCase> para o `comparisonType` argumento.</span><span class="sxs-lookup"><span data-stu-id="a9d68-778">If your application makes security decisions based on the result of a comparison or case-change operation, then the operation should use the <xref:System.String.Compare%2A?displayProperty=nameWithType> method, and pass <xref:System.StringComparison.Ordinal> or <xref:System.StringComparison.OrdinalIgnoreCase> for the `comparisonType` argument.</span></span> <span data-ttu-id="a9d68-779">Para obter mais informações, consulte [como cultura afeta cadeias de caracteres no Visual Basic](~/docs/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings.md).</span><span class="sxs-lookup"><span data-stu-id="a9d68-779">For more information, see [How Culture Affects Strings in Visual Basic](~/docs/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a9d68-780">Este exemplo usa o `LCase` função para retornar uma versão em minúsculas de uma cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="a9d68-780">This example uses the `LCase` function to return a lowercase version of a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#12](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.UCase" />
      </Docs>
    </Member>
    <Member MemberName="Left">
      <MemberSignature Language="C#" Value="public static string Left (string str, int Length);" />
      <MemberSignature Language="ILAsm" Value=".method public static string Left(string str, int32 Length) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Left (str As String, Length As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Left(System::String ^ str, int Length);" />
      <MemberSignature Language="F#" Value="static member Left : string * int -&gt; string" Usage="Microsoft.VisualBasic.Strings.Left (str, Length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="Length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="str">
          <span data-ttu-id="a9d68-781">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-781">Required.</span>
          </span>
          <span data-ttu-id="a9d68-782">Expressão <see langword="String" /> da qual os caracteres mais à esquerda são retornados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-782">
              <see langword="String" /> expression from which the leftmost characters are returned.</span>
          </span>
        </param>
        <param name="Length">
          <span data-ttu-id="a9d68-783">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-783">Required.</span>
          </span>
          <span data-ttu-id="a9d68-784">Expressão <see langword="Integer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-784">
              <see langword="Integer" /> expression.</span>
          </span>
          <span data-ttu-id="a9d68-785">Expressão numérica que indica quantos caracteres serão retornados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-785">Numeric expression indicating how many characters to return.</span>
          </span>
          <span data-ttu-id="a9d68-786">Se for 0, uma cadeia de caracteres de tamanho zero ("") será retornada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-786">If 0, a zero-length string ("") is returned.</span>
          </span>
          <span data-ttu-id="a9d68-787">Se for maior ou igual ao número de caracteres em <c>str</c>, a cadeia de caracteres inteira será retornada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-787">If greater than or equal to the number of characters in <c>str</c>, the entire string is returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9d68-788">Retorna uma cadeia de caracteres que contém um número especificado de caracteres do lado esquerdo de uma cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-788">Returns a string containing a specified number of characters from the left side of a string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a9d68-789">Retorna uma cadeia de caracteres que contém um número especificado de caracteres do lado esquerdo de uma cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-789">Returns a string containing a specified number of characters from the left side of a string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9d68-790">Para determinar o número de caracteres em `str`, use o `Len` função.</span><span class="sxs-lookup"><span data-stu-id="a9d68-790">To determine the number of characters in `str`, use the `Len` function.</span></span> <span data-ttu-id="a9d68-791">Se usado em um aplicativo do Windows Forms ou qualquer outra classe que tem um `Left` propriedade, você deve qualificar totalmente a função com `Microsoft.VisualBasic.Left`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-791">If used in a Windows Forms application, or any other class that has a `Left` property, you must fully qualify the function with `Microsoft.VisualBasic.Left`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a9d68-792">O `LeftB` função nas versões anteriores do Visual Basic retorna uma cadeia de caracteres em bytes em vez de caracteres.</span><span class="sxs-lookup"><span data-stu-id="a9d68-792">The `LeftB` function in previous versions of Visual Basic returns a string in bytes rather than characters.</span></span> <span data-ttu-id="a9d68-793">Ele é usado principalmente para converter cadeias de caracteres em caracteres de byte duplo (DBCS) conjunto de aplicativos.</span><span class="sxs-lookup"><span data-stu-id="a9d68-793">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="a9d68-794">Todas as cadeias de caracteres atuais do Visual Basic estão em Unicode, e `LeftB` não é mais suportada.</span><span class="sxs-lookup"><span data-stu-id="a9d68-794">All current Visual Basic strings are in Unicode, and `LeftB` is no longer supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a9d68-795">Este exemplo demonstra o uso do `Left` função para retornar uma subcadeia de caracteres de um determinado `String`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-795">This example demonstrates the use of the `Left` function to return a substring of a given `String`.</span></span> <span data-ttu-id="a9d68-796">Em uma classe que tem um `Left` propriedade, talvez seja necessário qualificar totalmente o `Left` função.</span><span class="sxs-lookup"><span data-stu-id="a9d68-796">In a class that has a `Left` property, it may be necessary to fully qualify the `Left` function.</span></span>  
  
 [!code-vb[VbVbalrStrings#20](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a9d68-797">
            <paramref name="Length" /> &lt; 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-797">
              <paramref name="Length" /> &lt; 0.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Mid" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Len">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a9d68-798">Retorna um inteiro contendo o número de caracteres em uma cadeia de caracteres ou o número nominal de bytes necessários para armazenar uma variável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-798">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (bool Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(bool Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(bool Expression);" />
      <MemberSignature Language="F#" Value="static member Len : bool -&gt; int" Usage="Microsoft.VisualBasic.Strings.Len Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Expression">
          <span data-ttu-id="a9d68-799">Qualquer expressão <see langword="String" /> válida ou nome variável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-799">Any valid <see langword="String" /> expression or variable name.</span>
          </span>
          <span data-ttu-id="a9d68-800">Caso <c>Expression</c> seja do tipo <see langword="Object" />, a função <see langword="Len" /> retornará o tamanho porque ele será gravado no arquivo pela função <see langword="FilePut" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-800">If <c>Expression</c> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9d68-801">Retorna um inteiro contendo o número de caracteres em uma cadeia de caracteres ou o número nominal de bytes necessários para armazenar uma variável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-801">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a9d68-802">Retorna um inteiro contendo o número de caracteres em uma cadeia de caracteres ou o número nominal de bytes necessários para armazenar uma variável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-802">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9d68-803">Com tipos definidos pelo usuário e variáveis `Object`, a função `Len` retorna o tamanho porque ela será gravada no arquivo pela função `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-803">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="a9d68-804">Se `Object` contiver um `String`, ele retornará o tamanho da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="a9d68-804">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="a9d68-805">Se `Object` contiver qualquer outro tipo, ele retornará o tamanho do objeto porque será gravado no arquivo pela função `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-805">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="a9d68-806">O atributo `VBFixedString` pode ser aplicado a campos de cadeia de caracteres para indicar o tamanho da cadeia de caracteres, em bytes, quando gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="a9d68-806">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="a9d68-807">A função `Len` usa o atributo `VBFixedString`, se disponível, ao determinar o tamanho das variáveis `Object`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-807">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a9d68-808">A função `Len` não consegue determinar o número real de bytes de armazenamento necessários quando usada com cadeias de caracteres de tamanho variável em tipos de dados definidos pelo usuário.</span><span class="sxs-lookup"><span data-stu-id="a9d68-808">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a9d68-809">A função `LenB` em versões anteriores do Visual Basic retorna o número de bytes em uma cadeia de caracteres em vez de caracteres.</span><span class="sxs-lookup"><span data-stu-id="a9d68-809">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="a9d68-810">Ele é usado principalmente para converter cadeias de caracteres em caracteres de byte duplo (DBCS) conjunto de aplicativos.</span><span class="sxs-lookup"><span data-stu-id="a9d68-810">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="a9d68-811">Todas as cadeias de caracteres atuais do Visual Basic estão em Unicode, e `LenB` não é mais suportada.</span><span class="sxs-lookup"><span data-stu-id="a9d68-811">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="a9d68-812">Notas do desenvolvedor de dispositivo inteligente</span><span class="sxs-lookup"><span data-stu-id="a9d68-812">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="a9d68-813">A função `Len` aceita apenas variáveis `String` e `Object` como parâmetros.</span><span class="sxs-lookup"><span data-stu-id="a9d68-813">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="a9d68-814">Se `Object` contiver um `String`, ele retornará o tamanho do `String`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-814">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="a9d68-815">Caso um parâmetro seja uma referência `Object` NULA, a função retorna zero.</span><span class="sxs-lookup"><span data-stu-id="a9d68-815">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="a9d68-816">Caso um `Object` contenha qualquer outro tipo, uma exceção é lançada.</span><span class="sxs-lookup"><span data-stu-id="a9d68-816">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a9d68-817">Este exemplo usa `Len` para retornar o número especificado de caracteres em uma cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="a9d68-817">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (byte Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(unsigned int8 Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As Byte) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(System::Byte Expression);" />
      <MemberSignature Language="F#" Value="static member Len : byte -&gt; int" Usage="Microsoft.VisualBasic.Strings.Len Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="Expression">
          <span data-ttu-id="a9d68-818">Qualquer expressão <see langword="String" /> válida ou nome variável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-818">Any valid <see langword="String" /> expression or variable name.</span>
          </span>
          <span data-ttu-id="a9d68-819">Caso <c>Expression</c> seja do tipo <see langword="Object" />, a função <see langword="Len" /> retornará o tamanho porque ele será gravado no arquivo pela função <see langword="FilePut" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-819">If <c>Expression</c> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9d68-820">Retorna um inteiro contendo o número de caracteres em uma cadeia de caracteres ou o número nominal de bytes necessários para armazenar uma variável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-820">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a9d68-821">Retorna um inteiro contendo o número de caracteres em uma cadeia de caracteres ou o número nominal de bytes necessários para armazenar uma variável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-821">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9d68-822">Com tipos definidos pelo usuário e variáveis `Object`, a função `Len` retorna o tamanho porque ela será gravada no arquivo pela função `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-822">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="a9d68-823">Se `Object` contiver um `String`, ele retornará o tamanho da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="a9d68-823">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="a9d68-824">Se `Object` contiver qualquer outro tipo, ele retornará o tamanho do objeto porque será gravado no arquivo pela função `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-824">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="a9d68-825">O atributo `VBFixedString` pode ser aplicado a campos de cadeia de caracteres para indicar o tamanho da cadeia de caracteres, em bytes, quando gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="a9d68-825">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="a9d68-826">A função `Len` usa o atributo `VBFixedString`, se disponível, ao determinar o tamanho das variáveis `Object`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-826">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a9d68-827">A função `Len` não consegue determinar o número real de bytes de armazenamento necessários quando usada com cadeias de caracteres de tamanho variável em tipos de dados definidos pelo usuário.</span><span class="sxs-lookup"><span data-stu-id="a9d68-827">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a9d68-828">A função `LenB` em versões anteriores do Visual Basic retorna o número de bytes em uma cadeia de caracteres em vez de caracteres.</span><span class="sxs-lookup"><span data-stu-id="a9d68-828">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="a9d68-829">Ele é usado principalmente para converter cadeias de caracteres em caracteres de byte duplo (DBCS) conjunto de aplicativos.</span><span class="sxs-lookup"><span data-stu-id="a9d68-829">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="a9d68-830">Todas as cadeias de caracteres atuais do Visual Basic estão em Unicode, e `LenB` não é mais suportada.</span><span class="sxs-lookup"><span data-stu-id="a9d68-830">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="a9d68-831">Notas do desenvolvedor de dispositivo inteligente</span><span class="sxs-lookup"><span data-stu-id="a9d68-831">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="a9d68-832">A função `Len` aceita apenas variáveis `String` e `Object` como parâmetros.</span><span class="sxs-lookup"><span data-stu-id="a9d68-832">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="a9d68-833">Se `Object` contiver um `String`, ele retornará o tamanho do `String`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-833">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="a9d68-834">Caso um parâmetro seja uma referência `Object` NULA, a função retorna zero.</span><span class="sxs-lookup"><span data-stu-id="a9d68-834">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="a9d68-835">Caso um `Object` contenha qualquer outro tipo, uma exceção é lançada.</span><span class="sxs-lookup"><span data-stu-id="a9d68-835">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a9d68-836">Este exemplo usa `Len` para retornar o número especificado de caracteres em uma cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="a9d68-836">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (char Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(char Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(char Expression);" />
      <MemberSignature Language="F#" Value="static member Len : char -&gt; int" Usage="Microsoft.VisualBasic.Strings.Len Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="Expression">
          <span data-ttu-id="a9d68-837">Qualquer expressão <see langword="String" /> válida ou nome variável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-837">Any valid <see langword="String" /> expression or variable name.</span>
          </span>
          <span data-ttu-id="a9d68-838">Caso <c>Expression</c> seja do tipo <see langword="Object" />, a função <see langword="Len" /> retornará o tamanho porque ele será gravado no arquivo pela função <see langword="FilePut" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-838">If <c>Expression</c> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9d68-839">Retorna um inteiro contendo o número de caracteres em uma cadeia de caracteres ou o número nominal de bytes necessários para armazenar uma variável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-839">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a9d68-840">Retorna um inteiro contendo o número de caracteres em uma cadeia de caracteres ou o número nominal de bytes necessários para armazenar uma variável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-840">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9d68-841">Com tipos definidos pelo usuário e variáveis `Object`, a função `Len` retorna o tamanho porque ela será gravada no arquivo pela função `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-841">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="a9d68-842">Se `Object` contiver um `String`, ele retornará o tamanho da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="a9d68-842">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="a9d68-843">Se `Object` contiver qualquer outro tipo, ele retornará o tamanho do objeto porque será gravado no arquivo pela função `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-843">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="a9d68-844">O atributo `VBFixedString` pode ser aplicado a campos de cadeia de caracteres para indicar o tamanho da cadeia de caracteres, em bytes, quando gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="a9d68-844">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="a9d68-845">A função `Len` usa o atributo `VBFixedString`, se disponível, ao determinar o tamanho das variáveis `Object`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-845">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a9d68-846">A função `Len` não consegue determinar o número real de bytes de armazenamento necessários quando usada com cadeias de caracteres de tamanho variável em tipos de dados definidos pelo usuário.</span><span class="sxs-lookup"><span data-stu-id="a9d68-846">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a9d68-847">A função `LenB` em versões anteriores do Visual Basic retorna o número de bytes em uma cadeia de caracteres em vez de caracteres.</span><span class="sxs-lookup"><span data-stu-id="a9d68-847">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="a9d68-848">Ele é usado principalmente para converter cadeias de caracteres em caracteres de byte duplo (DBCS) conjunto de aplicativos.</span><span class="sxs-lookup"><span data-stu-id="a9d68-848">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="a9d68-849">Todas as cadeias de caracteres atuais do Visual Basic estão em Unicode, e `LenB` não é mais suportada.</span><span class="sxs-lookup"><span data-stu-id="a9d68-849">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="a9d68-850">Notas do desenvolvedor de dispositivo inteligente</span><span class="sxs-lookup"><span data-stu-id="a9d68-850">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="a9d68-851">A função `Len` aceita apenas variáveis `String` e `Object` como parâmetros.</span><span class="sxs-lookup"><span data-stu-id="a9d68-851">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="a9d68-852">Se `Object` contiver um `String`, ele retornará o tamanho do `String`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-852">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="a9d68-853">Caso um parâmetro seja uma referência `Object` NULA, a função retorna zero.</span><span class="sxs-lookup"><span data-stu-id="a9d68-853">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="a9d68-854">Caso um `Object` contenha qualquer outro tipo, uma exceção é lançada.</span><span class="sxs-lookup"><span data-stu-id="a9d68-854">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a9d68-855">Este exemplo usa `Len` para retornar o número especificado de caracteres em uma cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="a9d68-855">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (DateTime Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(valuetype System.DateTime Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(DateTime Expression);" />
      <MemberSignature Language="F#" Value="static member Len : DateTime -&gt; int" Usage="Microsoft.VisualBasic.Strings.Len Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="Expression">
          <span data-ttu-id="a9d68-856">Qualquer expressão <see langword="String" /> válida ou nome variável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-856">Any valid <see langword="String" /> expression or variable name.</span>
          </span>
          <span data-ttu-id="a9d68-857">Caso <c>Expression</c> seja do tipo <see langword="Object" />, a função <see langword="Len" /> retornará o tamanho porque ele será gravado no arquivo pela função <see langword="FilePut" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-857">If <c>Expression</c> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9d68-858">Retorna um inteiro contendo o número de caracteres em uma cadeia de caracteres ou o número nominal de bytes necessários para armazenar uma variável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-858">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a9d68-859">Retorna um inteiro contendo o número de caracteres em uma cadeia de caracteres ou o número nominal de bytes necessários para armazenar uma variável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-859">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9d68-860">Com tipos definidos pelo usuário e variáveis `Object`, a função `Len` retorna o tamanho porque ela será gravada no arquivo pela função `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-860">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="a9d68-861">Se `Object` contiver um `String`, ele retornará o tamanho da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="a9d68-861">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="a9d68-862">Se `Object` contiver qualquer outro tipo, ele retornará o tamanho do objeto porque será gravado no arquivo pela função `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-862">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="a9d68-863">O atributo `VBFixedString` pode ser aplicado a campos de cadeia de caracteres para indicar o tamanho da cadeia de caracteres, em bytes, quando gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="a9d68-863">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="a9d68-864">A função `Len` usa o atributo `VBFixedString`, se disponível, ao determinar o tamanho das variáveis `Object`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-864">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a9d68-865">A função `Len` não consegue determinar o número real de bytes de armazenamento necessários quando usada com cadeias de caracteres de tamanho variável em tipos de dados definidos pelo usuário.</span><span class="sxs-lookup"><span data-stu-id="a9d68-865">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a9d68-866">A função `LenB` em versões anteriores do Visual Basic retorna o número de bytes em uma cadeia de caracteres em vez de caracteres.</span><span class="sxs-lookup"><span data-stu-id="a9d68-866">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="a9d68-867">Ele é usado principalmente para converter cadeias de caracteres em caracteres de byte duplo (DBCS) conjunto de aplicativos.</span><span class="sxs-lookup"><span data-stu-id="a9d68-867">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="a9d68-868">Todas as cadeias de caracteres atuais do Visual Basic estão em Unicode, e `LenB` não é mais suportada.</span><span class="sxs-lookup"><span data-stu-id="a9d68-868">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="a9d68-869">Notas do desenvolvedor de dispositivo inteligente</span><span class="sxs-lookup"><span data-stu-id="a9d68-869">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="a9d68-870">A função `Len` aceita apenas variáveis `String` e `Object` como parâmetros.</span><span class="sxs-lookup"><span data-stu-id="a9d68-870">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="a9d68-871">Se `Object` contiver um `String`, ele retornará o tamanho do `String`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-871">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="a9d68-872">Caso um parâmetro seja uma referência `Object` NULA, a função retorna zero.</span><span class="sxs-lookup"><span data-stu-id="a9d68-872">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="a9d68-873">Caso um `Object` contenha qualquer outro tipo, uma exceção é lançada.</span><span class="sxs-lookup"><span data-stu-id="a9d68-873">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a9d68-874">Este exemplo usa `Len` para retornar o número especificado de caracteres em uma cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="a9d68-874">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (decimal Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(valuetype System.Decimal Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As Decimal) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(System::Decimal Expression);" />
      <MemberSignature Language="F#" Value="static member Len : decimal -&gt; int" Usage="Microsoft.VisualBasic.Strings.Len Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="Expression">
          <span data-ttu-id="a9d68-875">Qualquer expressão <see langword="String" /> válida ou nome variável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-875">Any valid <see langword="String" /> expression or variable name.</span>
          </span>
          <span data-ttu-id="a9d68-876">Caso <c>Expression</c> seja do tipo <see langword="Object" />, a função <see langword="Len" /> retornará o tamanho porque ele será gravado no arquivo pela função <see langword="FilePut" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-876">If <c>Expression</c> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9d68-877">Retorna um inteiro contendo o número de caracteres em uma cadeia de caracteres ou o número nominal de bytes necessários para armazenar uma variável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-877">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a9d68-878">Retorna um inteiro contendo o número de caracteres em uma cadeia de caracteres ou o número nominal de bytes necessários para armazenar uma variável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-878">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9d68-879">Com tipos definidos pelo usuário e variáveis `Object`, a função `Len` retorna o tamanho porque ela será gravada no arquivo pela função `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-879">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="a9d68-880">Se `Object` contiver um `String`, ele retornará o tamanho da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="a9d68-880">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="a9d68-881">Se `Object` contiver qualquer outro tipo, ele retornará o tamanho do objeto porque será gravado no arquivo pela função `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-881">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="a9d68-882">O atributo `VBFixedString` pode ser aplicado a campos de cadeia de caracteres para indicar o tamanho da cadeia de caracteres, em bytes, quando gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="a9d68-882">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="a9d68-883">A função `Len` usa o atributo `VBFixedString`, se disponível, ao determinar o tamanho das variáveis `Object`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-883">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a9d68-884">A função `Len` não consegue determinar o número real de bytes de armazenamento necessários quando usada com cadeias de caracteres de tamanho variável em tipos de dados definidos pelo usuário.</span><span class="sxs-lookup"><span data-stu-id="a9d68-884">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a9d68-885">A função `LenB` em versões anteriores do Visual Basic retorna o número de bytes em uma cadeia de caracteres em vez de caracteres.</span><span class="sxs-lookup"><span data-stu-id="a9d68-885">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="a9d68-886">Ele é usado principalmente para converter cadeias de caracteres em caracteres de byte duplo (DBCS) conjunto de aplicativos.</span><span class="sxs-lookup"><span data-stu-id="a9d68-886">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="a9d68-887">Todas as cadeias de caracteres atuais do Visual Basic estão em Unicode, e `LenB` não é mais suportada.</span><span class="sxs-lookup"><span data-stu-id="a9d68-887">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="a9d68-888">Notas do desenvolvedor de dispositivo inteligente</span><span class="sxs-lookup"><span data-stu-id="a9d68-888">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="a9d68-889">A função `Len` aceita apenas variáveis `String` e `Object` como parâmetros.</span><span class="sxs-lookup"><span data-stu-id="a9d68-889">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="a9d68-890">Se `Object` contiver um `String`, ele retornará o tamanho do `String`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-890">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="a9d68-891">Caso um parâmetro seja uma referência `Object` NULA, a função retorna zero.</span><span class="sxs-lookup"><span data-stu-id="a9d68-891">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="a9d68-892">Caso um `Object` contenha qualquer outro tipo, uma exceção é lançada.</span><span class="sxs-lookup"><span data-stu-id="a9d68-892">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a9d68-893">Este exemplo usa `Len` para retornar o número especificado de caracteres em uma cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="a9d68-893">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (double Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(float64 Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As Double) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(double Expression);" />
      <MemberSignature Language="F#" Value="static member Len : double -&gt; int" Usage="Microsoft.VisualBasic.Strings.Len Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Expression">
          <span data-ttu-id="a9d68-894">Qualquer expressão <see langword="String" /> válida ou nome variável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-894">Any valid <see langword="String" /> expression or variable name.</span>
          </span>
          <span data-ttu-id="a9d68-895">Caso <c>Expression</c> seja do tipo <see langword="Object" />, a função <see langword="Len" /> retornará o tamanho porque ele será gravado no arquivo pela função <see langword="FilePut" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-895">If <c>Expression</c> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9d68-896">Retorna um inteiro contendo o número de caracteres em uma cadeia de caracteres ou o número nominal de bytes necessários para armazenar uma variável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-896">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a9d68-897">Retorna um inteiro contendo o número de caracteres em uma cadeia de caracteres ou o número nominal de bytes necessários para armazenar uma variável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-897">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9d68-898">Com tipos definidos pelo usuário e variáveis `Object`, a função `Len` retorna o tamanho porque ela será gravada no arquivo pela função `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-898">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="a9d68-899">Se `Object` contiver um `String`, ele retornará o tamanho da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="a9d68-899">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="a9d68-900">Se `Object` contiver qualquer outro tipo, ele retornará o tamanho do objeto porque será gravado no arquivo pela função `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-900">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="a9d68-901">O atributo `VBFixedString` pode ser aplicado a campos de cadeia de caracteres para indicar o tamanho da cadeia de caracteres, em bytes, quando gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="a9d68-901">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="a9d68-902">A função `Len` usa o atributo `VBFixedString`, se disponível, ao determinar o tamanho das variáveis `Object`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-902">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a9d68-903">A função `Len` não consegue determinar o número real de bytes de armazenamento necessários quando usada com cadeias de caracteres de tamanho variável em tipos de dados definidos pelo usuário.</span><span class="sxs-lookup"><span data-stu-id="a9d68-903">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a9d68-904">A função `LenB` em versões anteriores do Visual Basic retorna o número de bytes em uma cadeia de caracteres em vez de caracteres.</span><span class="sxs-lookup"><span data-stu-id="a9d68-904">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="a9d68-905">Ele é usado principalmente para converter cadeias de caracteres em caracteres de byte duplo (DBCS) conjunto de aplicativos.</span><span class="sxs-lookup"><span data-stu-id="a9d68-905">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="a9d68-906">Todas as cadeias de caracteres atuais do Visual Basic estão em Unicode, e `LenB` não é mais suportada.</span><span class="sxs-lookup"><span data-stu-id="a9d68-906">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="a9d68-907">Notas do desenvolvedor de dispositivo inteligente</span><span class="sxs-lookup"><span data-stu-id="a9d68-907">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="a9d68-908">A função `Len` aceita apenas variáveis `String` e `Object` como parâmetros.</span><span class="sxs-lookup"><span data-stu-id="a9d68-908">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="a9d68-909">Se `Object` contiver um `String`, ele retornará o tamanho do `String`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-909">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="a9d68-910">Caso um parâmetro seja uma referência `Object` NULA, a função retorna zero.</span><span class="sxs-lookup"><span data-stu-id="a9d68-910">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="a9d68-911">Caso um `Object` contenha qualquer outro tipo, uma exceção é lançada.</span><span class="sxs-lookup"><span data-stu-id="a9d68-911">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a9d68-912">Este exemplo usa `Len` para retornar o número especificado de caracteres em uma cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="a9d68-912">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (short Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(int16 Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As Short) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(short Expression);" />
      <MemberSignature Language="F#" Value="static member Len : int16 -&gt; int" Usage="Microsoft.VisualBasic.Strings.Len Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="Expression">
          <span data-ttu-id="a9d68-913">Qualquer expressão <see langword="String" /> válida ou nome variável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-913">Any valid <see langword="String" /> expression or variable name.</span>
          </span>
          <span data-ttu-id="a9d68-914">Caso <c>Expression</c> seja do tipo <see langword="Object" />, a função <see langword="Len" /> retornará o tamanho porque ele será gravado no arquivo pela função <see langword="FilePut" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-914">If <c>Expression</c> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9d68-915">Retorna um inteiro contendo o número de caracteres em uma cadeia de caracteres ou o número nominal de bytes necessários para armazenar uma variável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-915">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a9d68-916">Retorna um inteiro contendo o número de caracteres em uma cadeia de caracteres ou o número nominal de bytes necessários para armazenar uma variável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-916">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9d68-917">Com tipos definidos pelo usuário e variáveis `Object`, a função `Len` retorna o tamanho porque ela será gravada no arquivo pela função `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-917">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="a9d68-918">Se `Object` contiver um `String`, ele retornará o tamanho da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="a9d68-918">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="a9d68-919">Se `Object` contiver qualquer outro tipo, ele retornará o tamanho do objeto porque será gravado no arquivo pela função `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-919">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="a9d68-920">O atributo `VBFixedString` pode ser aplicado a campos de cadeia de caracteres para indicar o tamanho da cadeia de caracteres, em bytes, quando gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="a9d68-920">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="a9d68-921">A função `Len` usa o atributo `VBFixedString`, se disponível, ao determinar o tamanho das variáveis `Object`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-921">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a9d68-922">A função `Len` não consegue determinar o número real de bytes de armazenamento necessários quando usada com cadeias de caracteres de tamanho variável em tipos de dados definidos pelo usuário.</span><span class="sxs-lookup"><span data-stu-id="a9d68-922">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a9d68-923">A função `LenB` em versões anteriores do Visual Basic retorna o número de bytes em uma cadeia de caracteres em vez de caracteres.</span><span class="sxs-lookup"><span data-stu-id="a9d68-923">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="a9d68-924">Ele é usado principalmente para converter cadeias de caracteres em caracteres de byte duplo (DBCS) conjunto de aplicativos.</span><span class="sxs-lookup"><span data-stu-id="a9d68-924">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="a9d68-925">Todas as cadeias de caracteres atuais do Visual Basic estão em Unicode, e `LenB` não é mais suportada.</span><span class="sxs-lookup"><span data-stu-id="a9d68-925">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="a9d68-926">Notas do desenvolvedor de dispositivo inteligente</span><span class="sxs-lookup"><span data-stu-id="a9d68-926">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="a9d68-927">A função `Len` aceita apenas variáveis `String` e `Object` como parâmetros.</span><span class="sxs-lookup"><span data-stu-id="a9d68-927">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="a9d68-928">Se `Object` contiver um `String`, ele retornará o tamanho do `String`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-928">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="a9d68-929">Caso um parâmetro seja uma referência `Object` NULA, a função retorna zero.</span><span class="sxs-lookup"><span data-stu-id="a9d68-929">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="a9d68-930">Caso um `Object` contenha qualquer outro tipo, uma exceção é lançada.</span><span class="sxs-lookup"><span data-stu-id="a9d68-930">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a9d68-931">Este exemplo usa `Len` para retornar o número especificado de caracteres em uma cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="a9d68-931">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (int Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(int32 Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(int Expression);" />
      <MemberSignature Language="F#" Value="static member Len : int -&gt; int" Usage="Microsoft.VisualBasic.Strings.Len Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Expression">
          <span data-ttu-id="a9d68-932">Qualquer expressão <see langword="String" /> válida ou nome variável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-932">Any valid <see langword="String" /> expression or variable name.</span>
          </span>
          <span data-ttu-id="a9d68-933">Caso <c>Expression</c> seja do tipo <see langword="Object" />, a função <see langword="Len" /> retornará o tamanho porque ele será gravado no arquivo pela função <see langword="FilePut" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-933">If <c>Expression</c> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9d68-934">Retorna um inteiro contendo o número de caracteres em uma cadeia de caracteres ou o número nominal de bytes necessários para armazenar uma variável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-934">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a9d68-935">Retorna um inteiro contendo o número de caracteres em uma cadeia de caracteres ou o número nominal de bytes necessários para armazenar uma variável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-935">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9d68-936">Com tipos definidos pelo usuário e variáveis `Object`, a função `Len` retorna o tamanho porque ela será gravada no arquivo pela função `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-936">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="a9d68-937">Se `Object` contiver um `String`, ele retornará o tamanho da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="a9d68-937">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="a9d68-938">Se `Object` contiver qualquer outro tipo, ele retornará o tamanho do objeto porque será gravado no arquivo pela função `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-938">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="a9d68-939">O atributo `VBFixedString` pode ser aplicado a campos de cadeia de caracteres para indicar o tamanho da cadeia de caracteres, em bytes, quando gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="a9d68-939">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="a9d68-940">A função `Len` usa o atributo `VBFixedString`, se disponível, ao determinar o tamanho das variáveis `Object`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-940">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a9d68-941">A função `Len` não consegue determinar o número real de bytes de armazenamento necessários quando usada com cadeias de caracteres de tamanho variável em tipos de dados definidos pelo usuário.</span><span class="sxs-lookup"><span data-stu-id="a9d68-941">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a9d68-942">A função `LenB` em versões anteriores do Visual Basic retorna o número de bytes em uma cadeia de caracteres em vez de caracteres.</span><span class="sxs-lookup"><span data-stu-id="a9d68-942">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="a9d68-943">Ele é usado principalmente para converter cadeias de caracteres em caracteres de byte duplo (DBCS) conjunto de aplicativos.</span><span class="sxs-lookup"><span data-stu-id="a9d68-943">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="a9d68-944">Todas as cadeias de caracteres atuais do Visual Basic estão em Unicode, e `LenB` não é mais suportada.</span><span class="sxs-lookup"><span data-stu-id="a9d68-944">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="a9d68-945">Notas do desenvolvedor de dispositivo inteligente</span><span class="sxs-lookup"><span data-stu-id="a9d68-945">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="a9d68-946">A função `Len` aceita apenas variáveis `String` e `Object` como parâmetros.</span><span class="sxs-lookup"><span data-stu-id="a9d68-946">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="a9d68-947">Se `Object` contiver um `String`, ele retornará o tamanho do `String`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-947">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="a9d68-948">Caso um parâmetro seja uma referência `Object` NULA, a função retorna zero.</span><span class="sxs-lookup"><span data-stu-id="a9d68-948">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="a9d68-949">Caso um `Object` contenha qualquer outro tipo, uma exceção é lançada.</span><span class="sxs-lookup"><span data-stu-id="a9d68-949">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a9d68-950">Este exemplo usa `Len` para retornar o número especificado de caracteres em uma cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="a9d68-950">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (long Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(int64 Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As Long) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(long Expression);" />
      <MemberSignature Language="F#" Value="static member Len : int64 -&gt; int" Usage="Microsoft.VisualBasic.Strings.Len Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="Expression">
          <span data-ttu-id="a9d68-951">Qualquer expressão <see langword="String" /> válida ou nome variável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-951">Any valid <see langword="String" /> expression or variable name.</span>
          </span>
          <span data-ttu-id="a9d68-952">Caso <c>Expression</c> seja do tipo <see langword="Object" />, a função <see langword="Len" /> retornará o tamanho porque ele será gravado no arquivo pela função <see langword="FilePut" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-952">If <c>Expression</c> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9d68-953">Retorna um inteiro contendo o número de caracteres em uma cadeia de caracteres ou o número nominal de bytes necessários para armazenar uma variável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-953">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a9d68-954">Retorna um inteiro contendo o número de caracteres em uma cadeia de caracteres ou o número nominal de bytes necessários para armazenar uma variável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-954">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9d68-955">Com tipos definidos pelo usuário e variáveis `Object`, a função `Len` retorna o tamanho porque ela será gravada no arquivo pela função `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-955">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="a9d68-956">Se `Object` contiver um `String`, ele retornará o tamanho da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="a9d68-956">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="a9d68-957">Se `Object` contiver qualquer outro tipo, ele retornará o tamanho do objeto porque será gravado no arquivo pela função `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-957">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="a9d68-958">O atributo `VBFixedString` pode ser aplicado a campos de cadeia de caracteres para indicar o tamanho da cadeia de caracteres, em bytes, quando gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="a9d68-958">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="a9d68-959">A função `Len` usa o atributo `VBFixedString`, se disponível, ao determinar o tamanho das variáveis `Object`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-959">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a9d68-960">A função `Len` não consegue determinar o número real de bytes de armazenamento necessários quando usada com cadeias de caracteres de tamanho variável em tipos de dados definidos pelo usuário.</span><span class="sxs-lookup"><span data-stu-id="a9d68-960">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a9d68-961">A função `LenB` em versões anteriores do Visual Basic retorna o número de bytes em uma cadeia de caracteres em vez de caracteres.</span><span class="sxs-lookup"><span data-stu-id="a9d68-961">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="a9d68-962">Ele é usado principalmente para converter cadeias de caracteres em caracteres de byte duplo (DBCS) conjunto de aplicativos.</span><span class="sxs-lookup"><span data-stu-id="a9d68-962">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="a9d68-963">Todas as cadeias de caracteres atuais do Visual Basic estão em Unicode, e `LenB` não é mais suportada.</span><span class="sxs-lookup"><span data-stu-id="a9d68-963">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="a9d68-964">Notas do desenvolvedor de dispositivo inteligente</span><span class="sxs-lookup"><span data-stu-id="a9d68-964">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="a9d68-965">A função `Len` aceita apenas variáveis `String` e `Object` como parâmetros.</span><span class="sxs-lookup"><span data-stu-id="a9d68-965">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="a9d68-966">Se `Object` contiver um `String`, ele retornará o tamanho do `String`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-966">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="a9d68-967">Caso um parâmetro seja uma referência `Object` NULA, a função retorna zero.</span><span class="sxs-lookup"><span data-stu-id="a9d68-967">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="a9d68-968">Caso um `Object` contenha qualquer outro tipo, uma exceção é lançada.</span><span class="sxs-lookup"><span data-stu-id="a9d68-968">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a9d68-969">Este exemplo usa `Len` para retornar o número especificado de caracteres em uma cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="a9d68-969">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (object Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(object Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(System::Object ^ Expression);" />
      <MemberSignature Language="F#" Value="static member Len : obj -&gt; int" Usage="Microsoft.VisualBasic.Strings.Len Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Expression">
          <span data-ttu-id="a9d68-970">Qualquer expressão <see langword="String" /> válida ou nome variável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-970">Any valid <see langword="String" /> expression or variable name.</span>
          </span>
          <span data-ttu-id="a9d68-971">Caso <c>Expression</c> seja do tipo <see langword="Object" />, a função <see langword="Len" /> retornará o tamanho porque ele será gravado no arquivo pela função <see langword="FilePut" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-971">If <c>Expression</c> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9d68-972">Retorna um inteiro contendo o número de caracteres em uma cadeia de caracteres ou o número nominal de bytes necessários para armazenar uma variável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-972">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a9d68-973">Retorna um inteiro contendo o número de caracteres em uma cadeia de caracteres ou o número nominal de bytes necessários para armazenar uma variável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-973">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9d68-974">Com tipos definidos pelo usuário e variáveis `Object`, a função `Len` retorna o tamanho porque ela será gravada no arquivo pela função `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-974">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="a9d68-975">Se `Object` contiver um `String`, ele retornará o tamanho da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="a9d68-975">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="a9d68-976">Se `Object` contiver qualquer outro tipo, ele retornará o tamanho do objeto porque será gravado no arquivo pela função `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-976">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="a9d68-977">O atributo `VBFixedString` pode ser aplicado a campos de cadeia de caracteres para indicar o tamanho da cadeia de caracteres, em bytes, quando gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="a9d68-977">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="a9d68-978">A função `Len` usa o atributo `VBFixedString`, se disponível, ao determinar o tamanho das variáveis `Object`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-978">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a9d68-979">A função `Len` não consegue determinar o número real de bytes de armazenamento necessários quando usada com cadeias de caracteres de tamanho variável em tipos de dados definidos pelo usuário.</span><span class="sxs-lookup"><span data-stu-id="a9d68-979">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a9d68-980">A função `LenB` em versões anteriores do Visual Basic retorna o número de bytes em uma cadeia de caracteres em vez de caracteres.</span><span class="sxs-lookup"><span data-stu-id="a9d68-980">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="a9d68-981">Ele é usado principalmente para converter cadeias de caracteres em caracteres de byte duplo (DBCS) conjunto de aplicativos.</span><span class="sxs-lookup"><span data-stu-id="a9d68-981">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="a9d68-982">Todas as cadeias de caracteres atuais do Visual Basic estão em Unicode, e `LenB` não é mais suportada.</span><span class="sxs-lookup"><span data-stu-id="a9d68-982">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="a9d68-983">Notas do desenvolvedor de dispositivo inteligente</span><span class="sxs-lookup"><span data-stu-id="a9d68-983">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="a9d68-984">A função `Len` aceita apenas variáveis `String` e `Object` como parâmetros.</span><span class="sxs-lookup"><span data-stu-id="a9d68-984">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="a9d68-985">Se `Object` contiver um `String`, ele retornará o tamanho do `String`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-985">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="a9d68-986">Caso um parâmetro seja uma referência `Object` NULA, a função retorna zero.</span><span class="sxs-lookup"><span data-stu-id="a9d68-986">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="a9d68-987">Caso um `Object` contenha qualquer outro tipo, uma exceção é lançada.</span><span class="sxs-lookup"><span data-stu-id="a9d68-987">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a9d68-988">Este exemplo usa `Len` para retornar o número especificado de caracteres em uma cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="a9d68-988">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (sbyte Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(int8 Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As SByte) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(System::SByte Expression);" />
      <MemberSignature Language="F#" Value="static member Len : sbyte -&gt; int" Usage="Microsoft.VisualBasic.Strings.Len Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="Expression">
          <span data-ttu-id="a9d68-989">Qualquer expressão <see langword="String" /> válida ou nome variável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-989">Any valid <see langword="String" /> expression or variable name.</span>
          </span>
          <span data-ttu-id="a9d68-990">Caso <c>Expression</c> seja do tipo <see langword="Object" />, a função <see langword="Len" /> retornará o tamanho porque ele será gravado no arquivo pela função <see langword="FilePut" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-990">If <c>Expression</c> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9d68-991">Retorna um inteiro contendo o número de caracteres em uma cadeia de caracteres ou o número nominal de bytes necessários para armazenar uma variável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-991">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a9d68-992">Retorna um inteiro contendo o número de caracteres em uma cadeia de caracteres ou o número nominal de bytes necessários para armazenar uma variável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-992">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9d68-993">Com tipos definidos pelo usuário e variáveis `Object`, a função `Len` retorna o tamanho porque ela será gravada no arquivo pela função `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-993">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="a9d68-994">Se `Object` contiver um `String`, ele retornará o tamanho da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="a9d68-994">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="a9d68-995">Se `Object` contiver qualquer outro tipo, ele retornará o tamanho do objeto porque será gravado no arquivo pela função `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-995">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="a9d68-996">O atributo `VBFixedString` pode ser aplicado a campos de cadeia de caracteres para indicar o tamanho da cadeia de caracteres, em bytes, quando gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="a9d68-996">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="a9d68-997">A função `Len` usa o atributo `VBFixedString`, se disponível, ao determinar o tamanho das variáveis `Object`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-997">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a9d68-998">A função `Len` não consegue determinar o número real de bytes de armazenamento necessários quando usada com cadeias de caracteres de tamanho variável em tipos de dados definidos pelo usuário.</span><span class="sxs-lookup"><span data-stu-id="a9d68-998">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a9d68-999">A função `LenB` em versões anteriores do Visual Basic retorna o número de bytes em uma cadeia de caracteres em vez de caracteres.</span><span class="sxs-lookup"><span data-stu-id="a9d68-999">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="a9d68-1000">Ele é usado principalmente para converter cadeias de caracteres em caracteres de byte duplo (DBCS) conjunto de aplicativos.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1000">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="a9d68-1001">Todas as cadeias de caracteres atuais do Visual Basic estão em Unicode, e `LenB` não é mais suportada.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1001">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="a9d68-1002">Notas do desenvolvedor de dispositivo inteligente</span><span class="sxs-lookup"><span data-stu-id="a9d68-1002">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="a9d68-1003">A função `Len` aceita apenas variáveis `String` e `Object` como parâmetros.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1003">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="a9d68-1004">Se `Object` contiver um `String`, ele retornará o tamanho do `String`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1004">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="a9d68-1005">Caso um parâmetro seja uma referência `Object` NULA, a função retorna zero.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1005">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="a9d68-1006">Caso um `Object` contenha qualquer outro tipo, uma exceção é lançada.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1006">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a9d68-1007">Este exemplo usa `Len` para retornar o número especificado de caracteres em uma cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1007">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:Microsoft.VisualBasic.Strings.Len(System.Byte)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (float Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(float32 Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As Single) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(float Expression);" />
      <MemberSignature Language="F#" Value="static member Len : single -&gt; int" Usage="Microsoft.VisualBasic.Strings.Len Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="Expression">
          <span data-ttu-id="a9d68-1008">Qualquer expressão <see langword="String" /> válida ou nome variável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1008">Any valid <see langword="String" /> expression or variable name.</span>
          </span>
          <span data-ttu-id="a9d68-1009">Caso <c>Expression</c> seja do tipo <see langword="Object" />, a função <see langword="Len" /> retornará o tamanho porque ele será gravado no arquivo pela função <see langword="FilePut" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1009">If <c>Expression</c> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9d68-1010">Retorna um inteiro contendo o número de caracteres em uma cadeia de caracteres ou o número nominal de bytes necessários para armazenar uma variável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1010">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a9d68-1011">Retorna um inteiro contendo o número de caracteres em uma cadeia de caracteres ou o número nominal de bytes necessários para armazenar uma variável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1011">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9d68-1012">Com tipos definidos pelo usuário e variáveis `Object`, a função `Len` retorna o tamanho porque ela será gravada no arquivo pela função `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1012">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="a9d68-1013">Se `Object` contiver um `String`, ele retornará o tamanho da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1013">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="a9d68-1014">Se `Object` contiver qualquer outro tipo, ele retornará o tamanho do objeto porque será gravado no arquivo pela função `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1014">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="a9d68-1015">O atributo `VBFixedString` pode ser aplicado a campos de cadeia de caracteres para indicar o tamanho da cadeia de caracteres, em bytes, quando gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1015">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="a9d68-1016">A função `Len` usa o atributo `VBFixedString`, se disponível, ao determinar o tamanho das variáveis `Object`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1016">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a9d68-1017">A função `Len` não consegue determinar o número real de bytes de armazenamento necessários quando usada com cadeias de caracteres de tamanho variável em tipos de dados definidos pelo usuário.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1017">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a9d68-1018">A função `LenB` em versões anteriores do Visual Basic retorna o número de bytes em uma cadeia de caracteres em vez de caracteres.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1018">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="a9d68-1019">Ele é usado principalmente para converter cadeias de caracteres em caracteres de byte duplo (DBCS) conjunto de aplicativos.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1019">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="a9d68-1020">Todas as cadeias de caracteres atuais do Visual Basic estão em Unicode, e `LenB` não é mais suportada.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1020">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="a9d68-1021">Notas do desenvolvedor de dispositivo inteligente</span><span class="sxs-lookup"><span data-stu-id="a9d68-1021">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="a9d68-1022">A função `Len` aceita apenas variáveis `String` e `Object` como parâmetros.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1022">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="a9d68-1023">Se `Object` contiver um `String`, ele retornará o tamanho do `String`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1023">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="a9d68-1024">Caso um parâmetro seja uma referência `Object` NULA, a função retorna zero.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1024">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="a9d68-1025">Caso um `Object` contenha qualquer outro tipo, uma exceção é lançada.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1025">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a9d68-1026">Este exemplo usa `Len` para retornar o número especificado de caracteres em uma cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1026">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (string Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(string Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(System::String ^ Expression);" />
      <MemberSignature Language="F#" Value="static member Len : string -&gt; int" Usage="Microsoft.VisualBasic.Strings.Len Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Expression">
          <span data-ttu-id="a9d68-1027">Qualquer expressão <see langword="String" /> válida ou nome variável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1027">Any valid <see langword="String" /> expression or variable name.</span>
          </span>
          <span data-ttu-id="a9d68-1028">Caso <c>Expression</c> seja do tipo <see langword="Object" />, a função <see langword="Len" /> retornará o tamanho porque ele será gravado no arquivo pela função <see langword="FilePut" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1028">If <c>Expression</c> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9d68-1029">Retorna um inteiro contendo o número de caracteres em uma cadeia de caracteres ou o número nominal de bytes necessários para armazenar uma variável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1029">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a9d68-1030">Retorna um inteiro contendo o número de caracteres em uma cadeia de caracteres ou o número nominal de bytes necessários para armazenar uma variável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1030">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9d68-1031">Com tipos definidos pelo usuário e variáveis `Object`, a função `Len` retorna o tamanho porque ela será gravada no arquivo pela função `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1031">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="a9d68-1032">Se `Object` contiver um `String`, ele retornará o tamanho da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1032">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="a9d68-1033">Se `Object` contiver qualquer outro tipo, ele retornará o tamanho do objeto porque será gravado no arquivo pela função `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1033">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="a9d68-1034">O atributo `VBFixedString` pode ser aplicado a campos de cadeia de caracteres para indicar o tamanho da cadeia de caracteres, em bytes, quando gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1034">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="a9d68-1035">A função `Len` usa o atributo `VBFixedString`, se disponível, ao determinar o tamanho das variáveis `Object`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1035">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a9d68-1036">A função `Len` não consegue determinar o número real de bytes de armazenamento necessários quando usada com cadeias de caracteres de tamanho variável em tipos de dados definidos pelo usuário.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1036">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a9d68-1037">A função `LenB` em versões anteriores do Visual Basic retorna o número de bytes em uma cadeia de caracteres em vez de caracteres.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1037">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="a9d68-1038">Ele é usado principalmente para converter cadeias de caracteres em caracteres de byte duplo (DBCS) conjunto de aplicativos.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1038">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="a9d68-1039">Todas as cadeias de caracteres atuais do Visual Basic estão em Unicode, e `LenB` não é mais suportada.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1039">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="a9d68-1040">Notas do desenvolvedor de dispositivo inteligente</span><span class="sxs-lookup"><span data-stu-id="a9d68-1040">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="a9d68-1041">A função `Len` aceita apenas variáveis `String` e `Object` como parâmetros.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1041">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="a9d68-1042">Se `Object` contiver um `String`, ele retornará o tamanho do `String`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1042">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="a9d68-1043">Caso um parâmetro seja uma referência `Object` NULA, a função retorna zero.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1043">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="a9d68-1044">Caso um `Object` contenha qualquer outro tipo, uma exceção é lançada.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1044">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a9d68-1045">Este exemplo usa `Len` para retornar o número especificado de caracteres em uma cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1045">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (ushort Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(unsigned int16 Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As UShort) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(System::UInt16 Expression);" />
      <MemberSignature Language="F#" Value="static member Len : uint16 -&gt; int" Usage="Microsoft.VisualBasic.Strings.Len Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="Expression">
          <span data-ttu-id="a9d68-1046">Qualquer expressão <see langword="String" /> válida ou nome variável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1046">Any valid <see langword="String" /> expression or variable name.</span>
          </span>
          <span data-ttu-id="a9d68-1047">Caso <c>Expression</c> seja do tipo <see langword="Object" />, a função <see langword="Len" /> retornará o tamanho porque ele será gravado no arquivo pela função <see langword="FilePut" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1047">If <c>Expression</c> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9d68-1048">Retorna um inteiro contendo o número de caracteres em uma cadeia de caracteres ou o número nominal de bytes necessários para armazenar uma variável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1048">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a9d68-1049">Retorna um inteiro contendo o número de caracteres em uma cadeia de caracteres ou o número nominal de bytes necessários para armazenar uma variável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1049">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9d68-1050">Com tipos definidos pelo usuário e variáveis `Object`, a função `Len` retorna o tamanho porque ela será gravada no arquivo pela função `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1050">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="a9d68-1051">Se `Object` contiver um `String`, ele retornará o tamanho da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1051">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="a9d68-1052">Se `Object` contiver qualquer outro tipo, ele retornará o tamanho do objeto porque será gravado no arquivo pela função `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1052">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="a9d68-1053">O atributo `VBFixedString` pode ser aplicado a campos de cadeia de caracteres para indicar o tamanho da cadeia de caracteres, em bytes, quando gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1053">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="a9d68-1054">A função `Len` usa o atributo `VBFixedString`, se disponível, ao determinar o tamanho das variáveis `Object`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1054">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a9d68-1055">A função `Len` não consegue determinar o número real de bytes de armazenamento necessários quando usada com cadeias de caracteres de tamanho variável em tipos de dados definidos pelo usuário.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1055">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a9d68-1056">A função `LenB` em versões anteriores do Visual Basic retorna o número de bytes em uma cadeia de caracteres em vez de caracteres.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1056">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="a9d68-1057">Ele é usado principalmente para converter cadeias de caracteres em caracteres de byte duplo (DBCS) conjunto de aplicativos.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1057">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="a9d68-1058">Todas as cadeias de caracteres atuais do Visual Basic estão em Unicode, e `LenB` não é mais suportada.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1058">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="a9d68-1059">Notas do desenvolvedor de dispositivo inteligente</span><span class="sxs-lookup"><span data-stu-id="a9d68-1059">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="a9d68-1060">A função `Len` aceita apenas variáveis `String` e `Object` como parâmetros.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1060">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="a9d68-1061">Se `Object` contiver um `String`, ele retornará o tamanho do `String`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1061">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="a9d68-1062">Caso um parâmetro seja uma referência `Object` NULA, a função retorna zero.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1062">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="a9d68-1063">Caso um `Object` contenha qualquer outro tipo, uma exceção é lançada.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1063">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a9d68-1064">Este exemplo usa `Len` para retornar o número especificado de caracteres em uma cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1064">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:Microsoft.VisualBasic.Strings.Len(System.Int16)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (uint Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(unsigned int32 Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As UInteger) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(System::UInt32 Expression);" />
      <MemberSignature Language="F#" Value="static member Len : uint32 -&gt; int" Usage="Microsoft.VisualBasic.Strings.Len Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="Expression">
          <span data-ttu-id="a9d68-1065">Qualquer expressão <see langword="String" /> válida ou nome variável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1065">Any valid <see langword="String" /> expression or variable name.</span>
          </span>
          <span data-ttu-id="a9d68-1066">Caso <c>Expression</c> seja do tipo <see langword="Object" />, a função <see langword="Len" /> retornará o tamanho porque ele será gravado no arquivo pela função <see langword="FilePut" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1066">If <c>Expression</c> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9d68-1067">Retorna um inteiro contendo o número de caracteres em uma cadeia de caracteres ou o número nominal de bytes necessários para armazenar uma variável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1067">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a9d68-1068">Retorna um inteiro contendo o número de caracteres em uma cadeia de caracteres ou o número nominal de bytes necessários para armazenar uma variável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1068">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9d68-1069">Com tipos definidos pelo usuário e variáveis `Object`, a função `Len` retorna o tamanho porque ela será gravada no arquivo pela função `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1069">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="a9d68-1070">Se `Object` contiver um `String`, ele retornará o tamanho da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1070">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="a9d68-1071">Se `Object` contiver qualquer outro tipo, ele retornará o tamanho do objeto porque será gravado no arquivo pela função `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1071">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="a9d68-1072">O atributo `VBFixedString` pode ser aplicado a campos de cadeia de caracteres para indicar o tamanho da cadeia de caracteres, em bytes, quando gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1072">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="a9d68-1073">A função `Len` usa o atributo `VBFixedString`, se disponível, ao determinar o tamanho das variáveis `Object`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1073">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a9d68-1074">A função `Len` não consegue determinar o número real de bytes de armazenamento necessários quando usada com cadeias de caracteres de tamanho variável em tipos de dados definidos pelo usuário.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1074">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a9d68-1075">A função `LenB` em versões anteriores do Visual Basic retorna o número de bytes em uma cadeia de caracteres em vez de caracteres.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1075">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="a9d68-1076">Ele é usado principalmente para converter cadeias de caracteres em caracteres de byte duplo (DBCS) conjunto de aplicativos.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1076">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="a9d68-1077">Todas as cadeias de caracteres atuais do Visual Basic estão em Unicode, e `LenB` não é mais suportada.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1077">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="a9d68-1078">Notas do desenvolvedor de dispositivo inteligente</span><span class="sxs-lookup"><span data-stu-id="a9d68-1078">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="a9d68-1079">A função `Len` aceita apenas variáveis `String` e `Object` como parâmetros.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1079">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="a9d68-1080">Se `Object` contiver um `String`, ele retornará o tamanho do `String`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1080">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="a9d68-1081">Caso um parâmetro seja uma referência `Object` NULA, a função retorna zero.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1081">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="a9d68-1082">Caso um `Object` contenha qualquer outro tipo, uma exceção é lançada.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1082">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a9d68-1083">Este exemplo usa `Len` para retornar o número especificado de caracteres em uma cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1083">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:Microsoft.VisualBasic.Strings.Len(System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (ulong Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(unsigned int64 Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As ULong) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(System::UInt64 Expression);" />
      <MemberSignature Language="F#" Value="static member Len : uint64 -&gt; int" Usage="Microsoft.VisualBasic.Strings.Len Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="Expression">
          <span data-ttu-id="a9d68-1084">Qualquer expressão <see langword="String" /> válida ou nome variável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1084">Any valid <see langword="String" /> expression or variable name.</span>
          </span>
          <span data-ttu-id="a9d68-1085">Caso <c>Expression</c> seja do tipo <see langword="Object" />, a função <see langword="Len" /> retornará o tamanho porque ele será gravado no arquivo pela função <see langword="FilePut" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1085">If <c>Expression</c> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9d68-1086">Retorna um inteiro contendo o número de caracteres em uma cadeia de caracteres ou o número nominal de bytes necessários para armazenar uma variável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1086">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a9d68-1087">Retorna um inteiro contendo o número de caracteres em uma cadeia de caracteres ou o número nominal de bytes necessários para armazenar uma variável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1087">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9d68-1088">Com tipos definidos pelo usuário e variáveis `Object`, a função `Len` retorna o tamanho porque ela será gravada no arquivo pela função `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1088">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="a9d68-1089">Se `Object` contiver um `String`, ele retornará o tamanho da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1089">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="a9d68-1090">Se `Object` contiver qualquer outro tipo, ele retornará o tamanho do objeto porque será gravado no arquivo pela função `FilePut`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1090">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="a9d68-1091">O atributo `VBFixedString` pode ser aplicado a campos de cadeia de caracteres para indicar o tamanho da cadeia de caracteres, em bytes, quando gravados em disco.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1091">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="a9d68-1092">A função `Len` usa o atributo `VBFixedString`, se disponível, ao determinar o tamanho das variáveis `Object`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1092">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a9d68-1093">A função `Len` não consegue determinar o número real de bytes de armazenamento necessários quando usada com cadeias de caracteres de tamanho variável em tipos de dados definidos pelo usuário.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1093">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a9d68-1094">A função `LenB` em versões anteriores do Visual Basic retorna o número de bytes em uma cadeia de caracteres em vez de caracteres.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1094">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="a9d68-1095">Ele é usado principalmente para converter cadeias de caracteres em caracteres de byte duplo (DBCS) conjunto de aplicativos.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1095">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="a9d68-1096">Todas as cadeias de caracteres atuais do Visual Basic estão em Unicode, e `LenB` não é mais suportada.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1096">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="a9d68-1097">Notas do desenvolvedor de dispositivo inteligente</span><span class="sxs-lookup"><span data-stu-id="a9d68-1097">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="a9d68-1098">A função `Len` aceita apenas variáveis `String` e `Object` como parâmetros.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1098">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="a9d68-1099">Se `Object` contiver um `String`, ele retornará o tamanho do `String`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1099">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="a9d68-1100">Caso um parâmetro seja uma referência `Object` NULA, a função retorna zero.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1100">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="a9d68-1101">Caso um `Object` contenha qualquer outro tipo, uma exceção é lançada.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1101">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a9d68-1102">Este exemplo usa `Len` para retornar o número especificado de caracteres em uma cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1102">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:Microsoft.VisualBasic.Strings.Len(System.Int64)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
      </Docs>
    </Member>
    <Member MemberName="LSet">
      <MemberSignature Language="C#" Value="public static string LSet (string Source, int Length);" />
      <MemberSignature Language="ILAsm" Value=".method public static string LSet(string Source, int32 Length) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.LSet(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function LSet (Source As String, Length As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ LSet(System::String ^ Source, int Length);" />
      <MemberSignature Language="F#" Value="static member LSet : string * int -&gt; string" Usage="Microsoft.VisualBasic.Strings.LSet (Source, Length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Source" Type="System.String" />
        <Parameter Name="Length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Source">
          <span data-ttu-id="a9d68-1103">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1103">Required.</span>
          </span>
          <span data-ttu-id="a9d68-1104">Expressão <see langword="String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1104">
              <see langword="String" /> expression.</span>
          </span>
          <span data-ttu-id="a9d68-1105">Nome da variável de cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1105">Name of string variable.</span>
          </span>
        </param>
        <param name="Length">
          <span data-ttu-id="a9d68-1106">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1106">Required.</span>
          </span>
          <span data-ttu-id="a9d68-1107">Expressão <see langword="Integer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1107">
              <see langword="Integer" /> expression.</span>
          </span>
          <span data-ttu-id="a9d68-1108">Tamanho da cadeia de caracteres retornada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1108">Length of returned string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9d68-1109">Retorna uma cadeia de caracteres alinhada à esquerda que contém a cadeia especificada ajustada no tamanho especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1109">Returns a left-aligned string containing the specified string adjusted to the specified length.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a9d68-1110">Retorna uma cadeia de caracteres alinhada à esquerda que contém a cadeia especificada ajustada no tamanho especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1110">Returns a left-aligned string containing the specified string adjusted to the specified length.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9d68-1111">Se a cadeia de caracteres especificada for maior que o comprimento especificado, a cadeia de caracteres retornada é reduzida para o comprimento especificado.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1111">If the specified string is longer than the specified length, the returned string is shortened to the specified length.</span></span> <span data-ttu-id="a9d68-1112">Se a cadeia de caracteres especificada é menor que o comprimento especificado, serão adicionados espaços à extremidade direita da cadeia de caracteres retornada para produzir o tamanho apropriado.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1112">If the specified string is shorter than the specified length, spaces are added to the right end of the returned string to produce the appropriate length.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a9d68-1113">Este exemplo demonstra o uso do `LSet` função.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1113">This example demonstrates the use of the `LSet` function.</span></span>  
  
 [!code-vb[VbVbalrStrings#11](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Strings.RSet(System.String,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="LTrim">
      <MemberSignature Language="C#" Value="public static string LTrim (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static string LTrim(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.LTrim(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function LTrim (str As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ LTrim(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member LTrim : string -&gt; string" Usage="Microsoft.VisualBasic.Strings.LTrim str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">
          <span data-ttu-id="a9d68-1114">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1114">Required.</span>
          </span>
          <span data-ttu-id="a9d68-1115">Qualquer expressão <see langword="String" /> válida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1115">Any valid <see langword="String" /> expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9d68-1116">Retorna uma cadeia de caracteres contendo uma cópia de uma cadeia de caracteres especificada sem espaços à esquerda (<see langword="LTrim" />), sem espaços à direita (<see langword="RTrim" />) ou sem espaços à esquerda ou à direita (<see langword="Trim" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1116">Returns a string containing a copy of a specified string with no leading spaces (<see langword="LTrim" />), no trailing spaces (<see langword="RTrim" />), or no leading or trailing spaces (<see langword="Trim" />).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a9d68-1117">Retorna uma cadeia de caracteres contendo uma cópia de uma cadeia de caracteres especificada sem espaços à esquerda (<see langword="LTrim" />), sem espaços à direita (<see langword="RTrim" />) ou sem espaços à esquerda ou à direita (<see langword="Trim" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1117">Returns a string containing a copy of a specified string with no leading spaces (<see langword="LTrim" />), no trailing spaces (<see langword="RTrim" />), or no leading or trailing spaces (<see langword="Trim" />).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9d68-1118">O `LTrim`, `RTrim`, e `Trim` funções remover espaços de extremidades de cadeias de caracteres.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1118">The `LTrim`, `RTrim`, and `Trim` functions remove spaces from the ends of strings.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a9d68-1119">Este exemplo usa a função `LTrim` para retirar espaços à esquerda e a função `RTrim` para retirar espaços à direita de um variável de cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1119">This example uses the `LTrim` function to strip leading spaces and the `RTrim` function to strip trailing spaces from a string variable.</span></span> <span data-ttu-id="a9d68-1120">Usa a função de `Trim` para retirar ambos os tipos de espaços.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1120">It uses the `Trim` function to strip both types of spaces.</span></span>  
  
 [!code-vb[VbVbalrStrings#25](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#25)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Trim(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.RTrim(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Space(System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Mid">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a9d68-1121">Retorna uma cadeia de caracteres que contém caracteres de uma cadeia de caracteres especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1121">Returns a string that contains characters from a specified string.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Mid">
      <MemberSignature Language="C#" Value="public static string Mid (string str, int Start);" />
      <MemberSignature Language="ILAsm" Value=".method public static string Mid(string str, int32 Start) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Mid (str As String, Start As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Mid(System::String ^ str, int Start);" />
      <MemberSignature Language="F#" Value="static member Mid : string * int -&gt; string" Usage="Microsoft.VisualBasic.Strings.Mid (str, Start)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="Start" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="str">
          <span data-ttu-id="a9d68-1122">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1122">Required.</span>
          </span>
          <span data-ttu-id="a9d68-1123">Expressão <see langword="String" /> da qual os caracteres são retornados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1123">
              <see langword="String" /> expression from which characters are returned.</span>
          </span>
        </param>
        <param name="Start">
          <span data-ttu-id="a9d68-1124">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1124">Required.</span>
          </span>
          <span data-ttu-id="a9d68-1125">Expressão <see langword="Integer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1125">
              <see langword="Integer" /> expression.</span>
          </span>
          <span data-ttu-id="a9d68-1126">Posição inicial dos caracteres a serem retornados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1126">Starting position of the characters to return.</span>
          </span>
          <span data-ttu-id="a9d68-1127">Se <c>Start</c> for maior que o número de caracteres em <c>str</c>, a função <see langword="Mid" /> retornará uma cadeia de comprimento zero ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1127">If <c>Start</c> is greater than the number of characters in <c>str</c>, the <see langword="Mid" /> function returns a zero-length string ("").</span>
          </span>
          <span data-ttu-id="a9d68-1128">
            <c>Start</c> é baseado em unidade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1128">
              <c>Start</c> is one-based.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9d68-1129">Retorna uma cadeia de caracteres que consiste em todos os caracteres de uma posição especificada na cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1129">Returns a string that contains all the characters starting from a specified position in a string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a9d68-1130">Uma cadeia de caracteres que consiste em todos os caracteres da posição especificada na cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1130">A string that consists of all the characters starting from the specified position in the string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9d68-1131">Para determinar o número de caracteres em `str`, use o `Len` função.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1131">To determine the number of characters in `str`, use the `Len` function.</span></span>  
  
 <span data-ttu-id="a9d68-1132">O Visual Basic possui um `Mid` função e um `Mid` instrução.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1132">Visual Basic has a `Mid` function and a `Mid` statement.</span></span> <span data-ttu-id="a9d68-1133">Os dois elementos operam em um número especificado de caracteres em uma cadeia de caracteres, mas o `Mid` função retorna os caracteres enquanto o `Mid` instrução substitui os caracteres.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1133">These elements both operate on a specified number of characters in a string, but the `Mid` function returns the characters while the `Mid` statement replaces the characters.</span></span> <span data-ttu-id="a9d68-1134">Para obter mais informações, consulte [instrução Mid](~/docs/visual-basic/language-reference/statements/mid-statement.md).</span><span class="sxs-lookup"><span data-stu-id="a9d68-1134">For more information, see [Mid Statement](~/docs/visual-basic/language-reference/statements/mid-statement.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a9d68-1135">O `MidB` função nas versões anteriores do Visual Basic retorna uma cadeia de caracteres em bytes em vez de caracteres.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1135">The `MidB` function in previous versions of Visual Basic returns a string in bytes rather than characters.</span></span> <span data-ttu-id="a9d68-1136">Ele é usado principalmente para converter cadeias de caracteres em caracteres de byte duplo (DBCS) conjunto de aplicativos.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1136">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="a9d68-1137">Todas as cadeias de caracteres do Visual Basic estão em Unicode, e `MidB` não é mais suportada.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1137">All Visual Basic strings are in Unicode, and `MidB` is no longer supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a9d68-1138">A última linha neste exemplo usa essa sobrecarga da `Mid` função para retornar o quintas e o subsequentes caracteres de uma cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1138">The last line in this example uses this overload of the `Mid` function to return the fifth and subsequent characters from a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#17](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a9d68-1139">
            <paramref name="Start" /> &lt;= 0 ou <paramref name="Length" /> &lt; 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1139">
              <paramref name="Start" /> &lt;= 0 or <paramref name="Length" /> &lt; 0.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Trim(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.LTrim(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.RTrim(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="Mid">
      <MemberSignature Language="C#" Value="public static string Mid (string str, int Start, int Length);" />
      <MemberSignature Language="ILAsm" Value=".method public static string Mid(string str, int32 Start, int32 Length) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Mid (str As String, Start As Integer, Length As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Mid(System::String ^ str, int Start, int Length);" />
      <MemberSignature Language="F#" Value="static member Mid : string * int * int -&gt; string" Usage="Microsoft.VisualBasic.Strings.Mid (str, Start, Length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="Start" Type="System.Int32" />
        <Parameter Name="Length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="str">
          <span data-ttu-id="a9d68-1140">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1140">Required.</span>
          </span>
          <span data-ttu-id="a9d68-1141">Expressão <see langword="String" /> da qual os caracteres são retornados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1141">
              <see langword="String" /> expression from which characters are returned.</span>
          </span>
        </param>
        <param name="Start">
          <span data-ttu-id="a9d68-1142">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1142">Required.</span>
          </span>
          <span data-ttu-id="a9d68-1143">Expressão <see langword="Integer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1143">
              <see langword="Integer" /> expression.</span>
          </span>
          <span data-ttu-id="a9d68-1144">Posição inicial dos caracteres a serem retornados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1144">Starting position of the characters to return.</span>
          </span>
          <span data-ttu-id="a9d68-1145">Se <c>Start</c> for maior que o número de caracteres em <c>str</c>, a função <see langword="Mid" /> retornará uma cadeia de comprimento zero ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1145">If <c>Start</c> is greater than the number of characters in <c>str</c>, the <see langword="Mid" /> function returns a zero-length string ("").</span>
          </span>
          <span data-ttu-id="a9d68-1146">
            <c>Start</c> é baseado em unidade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1146">
              <c>Start</c> is one based.</span>
          </span>
        </param>
        <param name="Length">
          <span data-ttu-id="a9d68-1147">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1147">Optional.</span>
          </span>
          <span data-ttu-id="a9d68-1148">Expressão <see langword="Integer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1148">
              <see langword="Integer" /> expression.</span>
          </span>
          <span data-ttu-id="a9d68-1149">O número de caracteres a serem retornados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1149">Number of characters to return.</span>
          </span>
          <span data-ttu-id="a9d68-1150">Se for omitido ou se houver menos de <c>Length</c> caracteres no texto (incluindo o caractere na posição <c>Start</c>), todos os caracteres da posição inicial até o final da cadeia de caracteres serão retornados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1150">If omitted or if there are fewer than <c>Length</c> characters in the text (including the character at position <c>Start</c>), all characters from the start position to the end of the string are returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9d68-1151">Retorna uma cadeia de caracteres que contém um número especificado de caracteres a partir de uma posição especificada em uma cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1151">Returns a string that contains a specified number of characters starting from a specified position in a string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a9d68-1152">Uma cadeia de caracteres que consiste no número especificado de caracteres a partir da posição especificada na cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1152">A string that consists of the specified number of characters starting from the specified position in the string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9d68-1153">Para determinar o número de caracteres em `str`, use o `Len` função.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1153">To determine the number of characters in `str`, use the `Len` function.</span></span>  
  
 <span data-ttu-id="a9d68-1154">O Visual Basic possui um `Mid` função e um `Mid` instrução.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1154">Visual Basic has a `Mid` function and a `Mid` statement.</span></span> <span data-ttu-id="a9d68-1155">Os dois elementos operam em um número especificado de caracteres em uma cadeia de caracteres, mas o `Mid` função retorna os caracteres enquanto o `Mid` instrução substitui os caracteres.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1155">These elements both operate on a specified number of characters in a string, but the `Mid` function returns the characters while the `Mid` statement replaces the characters.</span></span> <span data-ttu-id="a9d68-1156">Para obter mais informações, consulte [instrução Mid](~/docs/visual-basic/language-reference/statements/mid-statement.md).</span><span class="sxs-lookup"><span data-stu-id="a9d68-1156">For more information, see [Mid Statement](~/docs/visual-basic/language-reference/statements/mid-statement.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a9d68-1157">O `MidB` função nas versões anteriores do Visual Basic retorna uma cadeia de caracteres em bytes em vez de caracteres.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1157">The `MidB` function in previous versions of Visual Basic returns a string in bytes rather than characters.</span></span> <span data-ttu-id="a9d68-1158">Ele é usado principalmente para converter cadeias de caracteres em caracteres de byte duplo (DBCS) conjunto de aplicativos.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1158">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="a9d68-1159">Todas as cadeias de caracteres do Visual Basic estão em Unicode, e `MidB` não é mais suportada.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1159">All Visual Basic strings are in Unicode, and `MidB` is no longer supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a9d68-1160">As duas primeiras `Mid` funções neste exemplo retornam o número especificado de caracteres de uma cadeia de caracteres, desde as posições de determinado.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1160">The first two `Mid` functions in this example return the specified number of characters from a string, starting from the given positions.</span></span> <span data-ttu-id="a9d68-1161">(A última função ilustra o <xref:Microsoft.VisualBasic.Strings.Mid%28System.String%2CSystem.Int32%29> de sobrecarga e só especifica o ponto de partida para a extração de cadeia de caracteres.)</span><span class="sxs-lookup"><span data-stu-id="a9d68-1161">(The last function illustrates the <xref:Microsoft.VisualBasic.Strings.Mid%28System.String%2CSystem.Int32%29> overload and only specifies the starting point for the string extraction.)</span></span>  
  
 [!code-vb[VbVbalrStrings#17](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a9d68-1162">
            <paramref name="Start" /> &lt;= 0 ou <paramref name="Length" /> &lt; 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1162">
              <paramref name="Start" /> &lt;= 0 or <paramref name="Length" /> &lt; 0.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Trim(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.LTrim(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.RTrim(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public static string Replace (string Expression, string Find, string Replacement, int Start = 1, int Count = -1, Microsoft.VisualBasic.CompareMethod Compare = Microsoft.VisualBasic.CompareMethod.Binary);" />
      <MemberSignature Language="ILAsm" Value=".method public static string Replace(string Expression, string Find, string Replacement, int32 Start, int32 Count, valuetype Microsoft.VisualBasic.CompareMethod Compare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (Expression As String, Find As String, Replacement As String, Optional Start As Integer = 1, Optional Count As Integer = -1, Optional Compare As CompareMethod = Microsoft.VisualBasic.CompareMethod.Binary) As String" />
      <MemberSignature Language="F#" Value="static member Replace : string * string * string * int * int * Microsoft.VisualBasic.CompareMethod -&gt; string" Usage="Microsoft.VisualBasic.Strings.Replace (Expression, Find, Replacement, Start, Count, Compare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.String" />
        <Parameter Name="Find" Type="System.String" />
        <Parameter Name="Replacement" Type="System.String" />
        <Parameter Name="Start" Type="System.Int32" />
        <Parameter Name="Count" Type="System.Int32" />
        <Parameter Name="Compare" Type="Microsoft.VisualBasic.CompareMethod">
          <Attributes>
            <Attribute>
              <AttributeName>Microsoft.VisualBasic.CompilerServices.OptionCompare</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="Expression">
          <span data-ttu-id="a9d68-1163">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1163">Required.</span>
          </span>
          <span data-ttu-id="a9d68-1164">A expressão de cadeia de caracteres que contém a subcadeia de caracteres a ser substituída.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1164">String expression containing substring to replace.</span>
          </span>
        </param>
        <param name="Find">
          <span data-ttu-id="a9d68-1165">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1165">Required.</span>
          </span>
          <span data-ttu-id="a9d68-1166">A subcadeia de caracteres que está sendo pesquisada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1166">Substring being searched for.</span>
          </span>
        </param>
        <param name="Replacement">
          <span data-ttu-id="a9d68-1167">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1167">Required.</span>
          </span>
          <span data-ttu-id="a9d68-1168">Subcadeia de caracteres de substituição.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1168">Replacement substring.</span>
          </span>
        </param>
        <param name="Start">
          <span data-ttu-id="a9d68-1169">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1169">Optional.</span>
          </span>
          <span data-ttu-id="a9d68-1170">Posição dentro da <c>Expression</c> que inicia uma subcadeia de caracteres usada para substituição.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1170">Position within <c>Expression</c> that starts a substring used for replacement.</span>
          </span>
          <span data-ttu-id="a9d68-1171">O valor retornado de <see langword="Replace" /> é uma cadeia de caracteres que começa em <c>Start</c>, com as substituições apropriadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1171">The return value of <see langword="Replace" /> is a string that begins at <c>Start</c>, with appropriate substitutions.</span>
          </span>
          <span data-ttu-id="a9d68-1172">Caso omitido, 1 é pressuposto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1172">If omitted, 1 is assumed.</span>
          </span>
        </param>
        <param name="Count">
          <span data-ttu-id="a9d68-1173">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1173">Optional.</span>
          </span>
          <span data-ttu-id="a9d68-1174">Número de substituições de subcadeias de caracteres a ser executado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1174">Number of substring substitutions to perform.</span>
          </span>
          <span data-ttu-id="a9d68-1175">Caso omitido, o valor padrão é -1, que significa "realizar todas as substituições possíveis."</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1175">If omitted, the default value is –1, which means "make all possible substitutions."</span>
          </span>
        </param>
        <param name="Compare">
          <span data-ttu-id="a9d68-1176">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1176">Optional.</span>
          </span>
          <span data-ttu-id="a9d68-1177">Valor numérico que indica o tipo de comparação a ser usado ao avaliar subcadeias de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1177">Numeric value indicating the kind of comparison to use when evaluating substrings.</span>
          </span>
          <span data-ttu-id="a9d68-1178">Consulte Configurações para obter os valores.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1178">See Settings for values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9d68-1179">Retorna uma cadeia de caracteres na qual uma subcadeia de caracteres especificada foi substituída por outra subcadeia de caracteres um número especificado de vezes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1179">Returns a string in which a specified substring has been replaced with another substring a specified number of times.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a9d68-1180">
            <see langword="Replace" /> retorna os seguintes valores.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1180">
              <see langword="Replace" /> returns the following values.</span>
          </span>
          <span data-ttu-id="a9d68-1181">
            <list type="table">
              <item>
                <term> Se  </term>
                <description> Replace retorna  </description>
              </item>
              <item>
                <term>
                  <paramref name="Find" /> tem comprimento zero ou <see langword="Nothing" /></term>
                <description> Cópia de <paramref name="Expression" /></description>
              </item>
              <item>
                <term>
                  <paramref name="Replace" /> tem comprimento zero  </term>
                <description> Cópia de <paramref name="Expression" /> sem ocorrências de <paramref name="Find" /></description>
              </item>
              <item>
                <term>
                  <paramref name="Expression" /> tem comprimento zero ou <see langword="Nothing" />, ou <paramref name="Start" /> é maior que o comprimento de <paramref name="Expression" /></term>
                <description>
                  <see langword="Nothing" />
                </description>
              </item>
              <item>
                <term>
                  <paramref name="Count" /> é 0  </term>
                <description> Cópia de <paramref name="Expression" /></description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1181">
              <list type="table">
                <item>
                  <term> If  </term>
                  <description> Replace returns  </description>
                </item>
                <item>
                  <term>
                    <paramref name="Find" /> is zero-length or <see langword="Nothing" /></term>
                  <description> Copy of <paramref name="Expression" /></description>
                </item>
                <item>
                  <term>
                    <paramref name="Replace" /> is zero-length  </term>
                  <description> Copy of <paramref name="Expression" /> with no occurrences of <paramref name="Find" /></description>
                </item>
                <item>
                  <term>
                    <paramref name="Expression" /> is zero-length or <see langword="Nothing" />, or <paramref name="Start" /> is greater than length of <paramref name="Expression" /></term>
                  <description>
                    <see langword="Nothing" />
                  </description>
                </item>
                <item>
                  <term>
                    <paramref name="Count" /> is 0  </term>
                  <description> Copy of <paramref name="Expression" /></description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9d68-1182">O valor de retorno de `Replace` função é uma cadeia de caracteres que começa na posição especificada por `Start` e termina no final da `Expression` cadeia de caracteres, com as substituições feitas conforme especificado pela `Find` e `Replace` valores.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1182">The return value of the `Replace` function is a string that begins at the position specified by `Start` and concludes at the end of the `Expression` string, with the substitutions made as specified by the `Find` and `Replace` values.</span></span>  
  
 <span data-ttu-id="a9d68-1183">O `Compare` argumento pode ter os seguintes valores.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1183">The `Compare` argument can have the following values.</span></span>  
  
|<span data-ttu-id="a9d68-1184">Constante</span><span class="sxs-lookup"><span data-stu-id="a9d68-1184">Constant</span></span>|<span data-ttu-id="a9d68-1185">Descrição</span><span class="sxs-lookup"><span data-stu-id="a9d68-1185">Description</span></span>|  
|-|-|  
|`Binary`|<span data-ttu-id="a9d68-1186">Executa uma comparação binária</span><span class="sxs-lookup"><span data-stu-id="a9d68-1186">Performs a binary comparison</span></span>|  
|`Text`|<span data-ttu-id="a9d68-1187">Executa uma comparação textual</span><span class="sxs-lookup"><span data-stu-id="a9d68-1187">Performs a textual comparison</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="a9d68-1188">Este exemplo demonstra o `Replace` função.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1188">This example demonstrates the `Replace` function.</span></span>  
  
```vb  
Dim TestString As String = "Shopping List"  
' Returns "Shipping List".  
Dim aString As String = Replace(TestString, "o", "i")  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a9d68-1189">
            <paramref name="Count" /> &lt; -1 ou <paramref name="Start" /> &lt;= 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1189">
              <paramref name="Count" /> &lt; -1 or <paramref name="Start" /> &lt;= 0.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Filter" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="Right">
      <MemberSignature Language="C#" Value="public static string Right (string str, int Length);" />
      <MemberSignature Language="ILAsm" Value=".method public static string Right(string str, int32 Length) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Right (str As String, Length As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Right(System::String ^ str, int Length);" />
      <MemberSignature Language="F#" Value="static member Right : string * int -&gt; string" Usage="Microsoft.VisualBasic.Strings.Right (str, Length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="Length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="str">
          <span data-ttu-id="a9d68-1190">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1190">Required.</span>
          </span>
          <span data-ttu-id="a9d68-1191">Expressão <see langword="String" /> da qual os caracteres mais à direita são retornados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1191">
              <see langword="String" /> expression from which the rightmost characters are returned.</span>
          </span>
        </param>
        <param name="Length">
          <span data-ttu-id="a9d68-1192">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1192">Required.</span>
          </span>
          <span data-ttu-id="a9d68-1193">
            <see langword="Integer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1193">
              <see langword="Integer" />.</span>
          </span>
          <span data-ttu-id="a9d68-1194">Expressão numérica que indica quantos caracteres serão retornados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1194">Numeric expression indicating how many characters to return.</span>
          </span>
          <span data-ttu-id="a9d68-1195">Se for 0, uma cadeia de caracteres de tamanho zero ("") será retornada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1195">If 0, a zero-length string ("") is returned.</span>
          </span>
          <span data-ttu-id="a9d68-1196">Se for maior ou igual ao número de caracteres em <c>str</c>, a cadeia de caracteres inteira será retornada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1196">If greater than or equal to the number of characters in <c>str</c>, the entire string is returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9d68-1197">Retorna uma cadeia de caracteres que contém um número especificado de caracteres do lado direito de uma cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1197">Returns a string containing a specified number of characters from the right side of a string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a9d68-1198">Retorna uma cadeia de caracteres que contém um número especificado de caracteres do lado direito de uma cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1198">Returns a string containing a specified number of characters from the right side of a string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9d68-1199">Para determinar o número de caracteres em `str`, use o `Len` função.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1199">To determine the number of characters in `str`, use the `Len` function.</span></span> <span data-ttu-id="a9d68-1200">Se usado em um formulário do Windows ou qualquer outra classe que tem um `Right` propriedade, você deve qualificar totalmente a função com `Microsoft.VisualBasic.Strings.Right`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1200">If used in a Windows Form, or any other class that has a `Right` property, you must fully qualify the function with `Microsoft.VisualBasic.Strings.Right`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a9d68-1201">O `RightB` função em versões anteriores do Visual Basic retorna uma cadeia de caracteres em bytes, em vez de caracteres.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1201">The `RightB` function in earlier versions of Visual Basic returns a string in bytes, rather than characters.</span></span> <span data-ttu-id="a9d68-1202">Ele é usado principalmente para converter cadeias de caracteres em caracteres de byte duplo (DBCS) conjunto de aplicativos.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1202">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="a9d68-1203">Todas as cadeias de caracteres atuais do Visual Basic estão em Unicode, e `RightB` não é mais suportada.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1203">All current Visual Basic strings are in Unicode, and `RightB` is no longer supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a9d68-1204">Este exemplo demonstra o uso do `Right` função para retornar uma subcadeia de caracteres de um determinado `String`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1204">This example demonstrates the use of the `Right` function to return a substring of a given `String`.</span></span> <span data-ttu-id="a9d68-1205">Em uma classe que tem um `Right` propriedade, talvez seja necessário qualificar totalmente o `Right` função.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1205">In a class that has a `Right` property, it may be necessary to fully qualify the `Right` function.</span></span>  
  
 [!code-vb[VbVbalrStrings#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#21)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a9d68-1206">
            <paramref name="Length" /> &lt; 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1206">
              <paramref name="Length" /> &lt; 0.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Mid" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="RSet">
      <MemberSignature Language="C#" Value="public static string RSet (string Source, int Length);" />
      <MemberSignature Language="ILAsm" Value=".method public static string RSet(string Source, int32 Length) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.RSet(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function RSet (Source As String, Length As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ RSet(System::String ^ Source, int Length);" />
      <MemberSignature Language="F#" Value="static member RSet : string * int -&gt; string" Usage="Microsoft.VisualBasic.Strings.RSet (Source, Length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Source" Type="System.String" />
        <Parameter Name="Length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Source">
          <span data-ttu-id="a9d68-1207">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1207">Required.</span>
          </span>
          <span data-ttu-id="a9d68-1208">Expressão <see langword="String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1208">
              <see langword="String" /> expression.</span>
          </span>
          <span data-ttu-id="a9d68-1209">Nome da variável de cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1209">Name of string variable.</span>
          </span>
        </param>
        <param name="Length">
          <span data-ttu-id="a9d68-1210">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1210">Required.</span>
          </span>
          <span data-ttu-id="a9d68-1211">Expressão <see langword="Integer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1211">
              <see langword="Integer" /> expression.</span>
          </span>
          <span data-ttu-id="a9d68-1212">Tamanho da cadeia de caracteres retornada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1212">Length of returned string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9d68-1213">Retorna uma cadeia de caracteres alinhada à direita que contém a cadeia especificada ajustada no tamanho especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1213">Returns a right-aligned string containing the specified string adjusted to the specified length.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a9d68-1214">Retorna uma cadeia de caracteres alinhada à direita que contém a cadeia especificada ajustada no tamanho especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1214">Returns a right-aligned string containing the specified string adjusted to the specified length.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9d68-1215">Se `Source` é maior que `Length`, `RSet` coloca apenas os caracteres mais à esquerda, até o comprimento de `Source`, na cadeia de caracteres retornada.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1215">If `Source` is longer than `Length`, `RSet` places only the leftmost characters, up to the length of `Source`, in the returned string.</span></span> <span data-ttu-id="a9d68-1216">Se a cadeia de caracteres especificada é menor que o comprimento especificado, serão adicionados espaços à esquerda final da cadeia de caracteres para produzir o tamanho apropriado.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1216">If the specified string is shorter than the specified length, spaces are added to the left end of the string to produce the appropriate length.</span></span> <span data-ttu-id="a9d68-1217">Se a cadeia de caracteres especificada for maior que o comprimento especificado, ele é reduzido para o comprimento especificado.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1217">If the specified string is longer than the specified length, it is shortened to the specified length.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a9d68-1218">Este exemplo demonstra o uso do `RSet` função.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1218">This example demonstrates the use of the `RSet` function.</span></span>  
  
 [!code-vb[VbVbalrStrings#9](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Strings.LSet(System.String,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="RTrim">
      <MemberSignature Language="C#" Value="public static string RTrim (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static string RTrim(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.RTrim(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function RTrim (str As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ RTrim(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member RTrim : string -&gt; string" Usage="Microsoft.VisualBasic.Strings.RTrim str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">
          <span data-ttu-id="a9d68-1219">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1219">Required.</span>
          </span>
          <span data-ttu-id="a9d68-1220">Qualquer expressão <see langword="String" /> válida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1220">Any valid <see langword="String" /> expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9d68-1221">Retorna uma cadeia de caracteres contendo uma cópia de uma cadeia de caracteres especificada sem espaços à esquerda (<see langword="LTrim" />), sem espaços à direita (<see langword="RTrim" />) ou sem espaços à esquerda ou à direita (<see langword="Trim" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1221">Returns a string containing a copy of a specified string with no leading spaces (<see langword="LTrim" />), no trailing spaces (<see langword="RTrim" />), or no leading or trailing spaces (<see langword="Trim" />).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a9d68-1222">Retorna uma cadeia de caracteres contendo uma cópia de uma cadeia de caracteres especificada sem espaços à esquerda (<see langword="LTrim" />), sem espaços à direita (<see langword="RTrim" />) ou sem espaços à esquerda ou à direita (<see langword="Trim" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1222">Returns a string containing a copy of a specified string with no leading spaces (<see langword="LTrim" />), no trailing spaces (<see langword="RTrim" />), or no leading or trailing spaces (<see langword="Trim" />).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9d68-1223">O `LTrim`, `RTrim`, e `Trim` funções remover espaços de extremidades de cadeias de caracteres.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1223">The `LTrim`, `RTrim`, and `Trim` functions remove spaces from the ends of strings.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a9d68-1224">Este exemplo usa a função `LTrim` para retirar espaços à esquerda e a função `RTrim` para retirar espaços à direita de um variável de cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1224">This example uses the `LTrim` function to strip leading spaces and the `RTrim` function to strip trailing spaces from a string variable.</span></span> <span data-ttu-id="a9d68-1225">Usa a função de `Trim` para retirar ambos os tipos de espaços.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1225">It uses the `Trim` function to strip both types of spaces.</span></span>  
  
 [!code-vb[VbVbalrStrings#25](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#25)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Trim(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.LTrim(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Space(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Space">
      <MemberSignature Language="C#" Value="public static string Space (int Number);" />
      <MemberSignature Language="ILAsm" Value=".method public static string Space(int32 Number) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Space(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Space (Number As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Space(int Number);" />
      <MemberSignature Language="F#" Value="static member Space : int -&gt; string" Usage="Microsoft.VisualBasic.Strings.Space Number" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Number">
          <span data-ttu-id="a9d68-1226">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1226">Required.</span>
          </span>
          <span data-ttu-id="a9d68-1227">Expressão <see langword="Integer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1227">
              <see langword="Integer" /> expression.</span>
          </span>
          <span data-ttu-id="a9d68-1228">O número de espaços desejado na cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1228">The number of spaces you want in the string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9d68-1229">Retorna uma cadeia de caracteres que consiste no número especificado de espaços.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1229">Returns a string consisting of the specified number of spaces.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a9d68-1230">Retorna uma cadeia de caracteres que consiste no número especificado de espaços.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1230">Returns a string consisting of the specified number of spaces.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9d68-1231">O `Space` função é útil para formatação de saída e limpeza de dados em cadeias de caracteres de comprimento fixo.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1231">The `Space` function is useful for formatting output and clearing data in fixed-length strings.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a9d68-1232">Este exemplo usa o `Space` função para retornar uma cadeia de caracteres que consiste em um número especificado de espaços.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1232">This example uses the `Space` function to return a string consisting of a specified number of spaces.</span></span>  
  
 [!code-vb[VbVbalrStrings#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a9d68-1233">
            <paramref name="Number" /> &lt; 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1233">
              <paramref name="Number" /> &lt; 0.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SPC(System.Int16)" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="Split">
      <MemberSignature Language="C#" Value="public static string[] Split (string Expression, string Delimiter = &quot; &quot;, int Limit = -1, Microsoft.VisualBasic.CompareMethod Compare = Microsoft.VisualBasic.CompareMethod.Binary);" />
      <MemberSignature Language="ILAsm" Value=".method public static string[] Split(string Expression, string Delimiter, int32 Limit, valuetype Microsoft.VisualBasic.CompareMethod Compare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Function Split (Expression As String, Optional Delimiter As String = &quot; &quot;, Optional Limit As Integer = -1, Optional Compare As CompareMethod = Microsoft.VisualBasic.CompareMethod.Binary) As String()" />
      <MemberSignature Language="F#" Value="static member Split : string * string * int * Microsoft.VisualBasic.CompareMethod -&gt; string[]" Usage="Microsoft.VisualBasic.Strings.Split (Expression, Delimiter, Limit, Compare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.String" />
        <Parameter Name="Delimiter" Type="System.String" />
        <Parameter Name="Limit" Type="System.Int32" />
        <Parameter Name="Compare" Type="Microsoft.VisualBasic.CompareMethod">
          <Attributes>
            <Attribute>
              <AttributeName>Microsoft.VisualBasic.CompilerServices.OptionCompare</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="Expression">
          <span data-ttu-id="a9d68-1234">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1234">Required.</span>
          </span>
          <span data-ttu-id="a9d68-1235">Expressão <see langword="String" /> que contém subcadeias de caracteres e delimitadores.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1235">
              <see langword="String" /> expression containing substrings and delimiters.</span>
          </span>
        </param>
        <param name="Delimiter">
          <span data-ttu-id="a9d68-1236">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1236">Optional.</span>
          </span>
          <span data-ttu-id="a9d68-1237">Qualquer caractere único usado para identificar limites de subcadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1237">Any single character used to identify substring limits.</span>
          </span>
          <span data-ttu-id="a9d68-1238">Se <c>Delimiter</c> for omitido, o caractere de espaço (" ") será considerado o delimitador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1238">If <c>Delimiter</c> is omitted, the space character (" ") is assumed to be the delimiter.</span>
          </span>
        </param>
        <param name="Limit">
          <span data-ttu-id="a9d68-1239">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1239">Optional.</span>
          </span>
          <span data-ttu-id="a9d68-1240">Número máximo de subcadeias de caracteres no qual a cadeia de caracteres de entrada deve ser dividida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1240">Maximum number of substrings into which the input string should be split.</span>
          </span>
          <span data-ttu-id="a9d68-1241">O padrão, -1, indica que a cadeia de caracteres de entrada deve ser dividida em cada ocorrência da cadeia de caracteres <c>Delimiter</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1241">The default, –1, indicates that the input string should be split at every occurrence of the <c>Delimiter</c> string.</span>
          </span>
        </param>
        <param name="Compare">
          <span data-ttu-id="a9d68-1242">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1242">Optional.</span>
          </span>
          <span data-ttu-id="a9d68-1243">Valor numérico que indica a comparação a ser usada ao avaliar subcadeias de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1243">Numeric value indicating the comparison to use when evaluating substrings.</span>
          </span>
          <span data-ttu-id="a9d68-1244">Consulte “Configurações” para obter os valores.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1244">See "Settings" for values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9d68-1245">Retorna uma matriz unidimensional baseada em zero que contém um número especificado de subcadeias de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1245">Returns a zero-based, one-dimensional array containing a specified number of substrings.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a9d68-1246">Matriz <see langword="String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1246">
              <see langword="String" /> array.</span>
          </span>
          <span data-ttu-id="a9d68-1247">Se <paramref name="Expression" /> for uma cadeia de caracteres de tamanho zero (""), <see langword="Split" /> retornará uma matriz de elemento único que contém uma cadeia de caracteres de tamanho zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1247">If <paramref name="Expression" /> is a zero-length string (""), <see langword="Split" /> returns a single-element array containing a zero-length string.</span>
          </span>
          <span data-ttu-id="a9d68-1248">Se <paramref name="Delimiter" /> for uma cadeia de caracteres de tamanho zero ou se ela não for exibida em nenhum lugar em <paramref name="Expression" />, <see langword="Split" /> retornará uma matriz de elemento único que contém toda a cadeia de caracteres <paramref name="Expression" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1248">If <paramref name="Delimiter" /> is a zero-length string, or if it does not appear anywhere in <paramref name="Expression" />, <see langword="Split" /> returns a single-element array containing the entire <paramref name="Expression" /> string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9d68-1249">Por padrão, ou quando `Limit` é igual a -1, o `Split` função divide a cadeia de caracteres de entrada em cada ocorrência da cadeia de caracteres do delimitador e retorna as subcadeias de caracteres em uma matriz.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1249">By default, or when `Limit` equals -1, the `Split` function splits the input string at every occurrence of the delimiter string, and returns the substrings in an array.</span></span> <span data-ttu-id="a9d68-1250">Quando o `Limit` parâmetro é maior que zero, o `Split` função divide a cadeia de caracteres no primeiro `Limit`ocorrências de-1 do delimitador e retorna uma matriz com as subcadeias de caracteres resultantes.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1250">When the `Limit` parameter is greater than zero, the `Split` function splits the string at the first `Limit`-1 occurrences of the delimiter, and returns an array with the resulting substrings.</span></span> <span data-ttu-id="a9d68-1251">Por exemplo, `Split("a:b:c", ":")` retorna a matriz `{"a", "b", "c"}`, enquanto `Split("a:b:c", ":", 2)` retorna a matriz `{"a", "b:c"}`.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1251">For example, `Split("a:b:c", ":")` returns the array `{"a", "b", "c"}`, while `Split("a:b:c", ":", 2)` returns the array `{"a", "b:c"}`.</span></span>  
  
 <span data-ttu-id="a9d68-1252">Quando o `Split` função encontra dois delimitadores em uma linha ou um delimitador no início ou no final da cadeia de caracteres, ele interpreta como envolvem uma cadeia de caracteres vazia ("").</span><span class="sxs-lookup"><span data-stu-id="a9d68-1252">When the `Split` function encounters two delimiters in a row, or a delimiter at the beginning or end of the string, it interprets them as surrounding an empty string ("").</span></span> <span data-ttu-id="a9d68-1253">Por exemplo, `Split("xx", "x")` retorna a matriz que contém três cadeias de caracteres vazias: uma entre o início da cadeia de caracteres e o primeiro "x", uma entre as duas "cadeias de caracteres x" e outra entre o último "x" e o fim da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1253">For example, `Split("xx", "x")` returns the array containing three empty strings: one from between the beginning of the string and the first "x", one from between the two "x" strings, and one from between the last "x" and the end of the string.</span></span>  
  
 <span data-ttu-id="a9d68-1254">Esta tabela mostra como opcional `Delimiter`, `Limit`, e `Compare` parâmetros podem alterar o comportamento do `Split` função.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1254">This table demonstrates how the optional `Delimiter`, `Limit`, and `Compare` parameters can change the behavior of the `Split` function.</span></span>  
  
|<span data-ttu-id="a9d68-1255">Chamada de divisão</span><span class="sxs-lookup"><span data-stu-id="a9d68-1255">Split Call</span></span>|<span data-ttu-id="a9d68-1256">Valor de Retorno</span><span class="sxs-lookup"><span data-stu-id="a9d68-1256">Return Value</span></span>|  
|-|-|  
|`Split("42, 12, 19")`|<span data-ttu-id="a9d68-1257">{"42," , "12," , "19"}</span><span class="sxs-lookup"><span data-stu-id="a9d68-1257">{"42," , "12," , "19"}</span></span>|  
|`Split("42, 12, 19", ", ")`|<span data-ttu-id="a9d68-1258">{"42", "12", "19"}</span><span class="sxs-lookup"><span data-stu-id="a9d68-1258">{"42", "12", "19"}</span></span>|  
|`Split("42, 12, 19", ", ", 2)`|<span data-ttu-id="a9d68-1259">{"42", "12, 19"}</span><span class="sxs-lookup"><span data-stu-id="a9d68-1259">{"42", "12, 19"}</span></span>|  
|`Split("192.168.0.1", ".")`|<span data-ttu-id="a9d68-1260">{"192", "168", "0", "1"}</span><span class="sxs-lookup"><span data-stu-id="a9d68-1260">{"192", "168", "0", "1"}</span></span>|  
|`Split("Alice and Bob", " AND ")`|<span data-ttu-id="a9d68-1261">{"Alice e Bob"}</span><span class="sxs-lookup"><span data-stu-id="a9d68-1261">{"Alice and Bob"}</span></span>|  
|`Split("Alice and Bob", " AND ", ,CompareMethod.Text)`|<span data-ttu-id="a9d68-1262">{"Alice", "Bob"}</span><span class="sxs-lookup"><span data-stu-id="a9d68-1262">{"Alice", "Bob"}</span></span>|  
|`Split("someone@example.com", "@",1)`|<span data-ttu-id="a9d68-1263">{"someone@example.com"}</span><span class="sxs-lookup"><span data-stu-id="a9d68-1263">{"someone@example.com"}</span></span>|  
|`Split("someone@example.com", "@",2)`|<span data-ttu-id="a9d68-1264">{"alguém", "example.com"}</span><span class="sxs-lookup"><span data-stu-id="a9d68-1264">{"someone", "example.com"}</span></span>|  
  
 <span data-ttu-id="a9d68-1265">O `Compare` argumento pode ter os seguintes valores.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1265">The `Compare` argument can have the following values.</span></span>  
  
|<span data-ttu-id="a9d68-1266">Constante</span><span class="sxs-lookup"><span data-stu-id="a9d68-1266">Constant</span></span>|<span data-ttu-id="a9d68-1267">Descrição</span><span class="sxs-lookup"><span data-stu-id="a9d68-1267">Description</span></span>|<span data-ttu-id="a9d68-1268">Valor</span><span class="sxs-lookup"><span data-stu-id="a9d68-1268">Value</span></span>|  
|-|-|-|  
|`CompareMethod.Binary`|<span data-ttu-id="a9d68-1269">Executa uma comparação binária</span><span class="sxs-lookup"><span data-stu-id="a9d68-1269">Performs a binary comparison</span></span>|<span data-ttu-id="a9d68-1270">0</span><span class="sxs-lookup"><span data-stu-id="a9d68-1270">0</span></span>|  
|`CompareMethod.Text`|<span data-ttu-id="a9d68-1271">Executa uma comparação textual</span><span class="sxs-lookup"><span data-stu-id="a9d68-1271">Performs a textual comparison</span></span>|<span data-ttu-id="a9d68-1272">1</span><span class="sxs-lookup"><span data-stu-id="a9d68-1272">1</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="a9d68-1273">O exemplo a seguir demonstra como dividir uma cadeia de caracteres em seus espaços.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1273">The following example demonstrates how to split a string at its spaces.</span></span>  
  
 [!code-vb[VbVbalrStrings#13](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#13)]  
  
 <span data-ttu-id="a9d68-1274">O exemplo a seguir demonstra como dividir cadeias de caracteres com vários delimitadores em uma linha e filtrar as cadeias de caracteres vazias.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1274">The following example demonstrates how to split strings with multiple delimiters in a row and filter out the empty strings.</span></span>  
  
 [!code-vb[VbVbalrStrings#14](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#14)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Join" />
        <altmember cref="T:Microsoft.VisualBasic.CompareMethod" />
      </Docs>
    </Member>
    <Member MemberName="StrComp">
      <MemberSignature Language="C#" Value="public static int StrComp (string String1, string String2, Microsoft.VisualBasic.CompareMethod Compare = Microsoft.VisualBasic.CompareMethod.Binary);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 StrComp(string String1, string String2, valuetype Microsoft.VisualBasic.CompareMethod Compare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Function StrComp (String1 As String, String2 As String, Optional Compare As CompareMethod = Microsoft.VisualBasic.CompareMethod.Binary) As Integer" />
      <MemberSignature Language="F#" Value="static member StrComp : string * string * Microsoft.VisualBasic.CompareMethod -&gt; int" Usage="Microsoft.VisualBasic.Strings.StrComp (String1, String2, Compare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="String1" Type="System.String" />
        <Parameter Name="String2" Type="System.String" />
        <Parameter Name="Compare" Type="Microsoft.VisualBasic.CompareMethod">
          <Attributes>
            <Attribute>
              <AttributeName>Microsoft.VisualBasic.CompilerServices.OptionCompare</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="String1">
          <span data-ttu-id="a9d68-1275">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1275">Required.</span>
          </span>
          <span data-ttu-id="a9d68-1276">Qualquer expressão <see langword="String" /> válida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1276">Any valid <see langword="String" /> expression.</span>
          </span>
        </param>
        <param name="String2">
          <span data-ttu-id="a9d68-1277">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1277">Required.</span>
          </span>
          <span data-ttu-id="a9d68-1278">Qualquer expressão <see langword="String" /> válida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1278">Any valid <see langword="String" /> expression.</span>
          </span>
        </param>
        <param name="Compare">
          <span data-ttu-id="a9d68-1279">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1279">Optional.</span>
          </span>
          <span data-ttu-id="a9d68-1280">Especifica o tipo de comparação de cadeias de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1280">Specifies the type of string comparison.</span>
          </span>
          <span data-ttu-id="a9d68-1281">Se <c>Compare</c> for omitido, a configuração <see langword="Option Compare" /> determinará o tipo de comparação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1281">If <c>Compare</c> is omitted, the <see langword="Option Compare" /> setting determines the type of comparison.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9d68-1282">Retorna -1, 0 ou 1, com base no resultado de uma comparação de cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1282">Returns -1, 0, or 1, based on the result of a string comparison.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a9d68-1283">A função <see langword="StrComp" /> tem os seguintes valores.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1283">The <see langword="StrComp" /> function has the following return values.</span>
          </span>
          <span data-ttu-id="a9d68-1284">
            <list type="table">
              <item>
                <term> Se  </term>
                <description> StrComp retorna  </description>
              </item>
              <item>
                <term>
                  <paramref name="String1" /> classifica à frente de <paramref name="String2" /></term>
                <description> -1  </description>
              </item>
              <item>
                <term>
                  <paramref name="String1" /> é igual a <paramref name="String2" /></term>
                <description> 0  </description>
              </item>
              <item>
                <term>
                  <paramref name="String1" /> classifica após <paramref name="String2" /></term>
                <description> 1  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1284">
              <list type="table">
                <item>
                  <term> If  </term>
                  <description> StrComp returns  </description>
                </item>
                <item>
                  <term>
                    <paramref name="String1" /> sorts ahead of <paramref name="String2" /></term>
                  <description> -1  </description>
                </item>
                <item>
                  <term>
                    <paramref name="String1" /> is equal to <paramref name="String2" /></term>
                  <description> 0  </description>
                </item>
                <item>
                  <term>
                    <paramref name="String1" /> sorts after <paramref name="String2" /></term>
                  <description> 1  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9d68-1285">As cadeias de caracteres são comparadas por valores de classificação alfanumérica começando com o primeiro caractere.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1285">The strings are compared by alphanumeric sort values beginning with the first character.</span></span> <span data-ttu-id="a9d68-1286">Para obter mais informações sobre comparações binárias, comparações textuais e ordem de classificação, consulte [instrução opção comparar](~/docs/visual-basic/language-reference/statements/option-compare-statement.md).</span><span class="sxs-lookup"><span data-stu-id="a9d68-1286">For further information on binary comparisons, textual comparisons, and sort order, see [Option Compare Statement](~/docs/visual-basic/language-reference/statements/option-compare-statement.md).</span></span>  
  
 <span data-ttu-id="a9d68-1287">As configurações do argumento `Compare` são:</span><span class="sxs-lookup"><span data-stu-id="a9d68-1287">The `Compare` argument settings are:</span></span>  
  
|<span data-ttu-id="a9d68-1288">Constante</span><span class="sxs-lookup"><span data-stu-id="a9d68-1288">Constant</span></span>|<span data-ttu-id="a9d68-1289">Descrição</span><span class="sxs-lookup"><span data-stu-id="a9d68-1289">Description</span></span>|  
|-|-|  
|`Binary`|<span data-ttu-id="a9d68-1290">Executa uma comparação binária, com base em uma ordem de classificação derivada de representações binárias internas dos caracteres.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1290">Performs a binary comparison, based on a sort order derived from the internal binary representations of the characters.</span></span>|  
|`Text`|<span data-ttu-id="a9d68-1291">Executa uma comparação de texto, com base em uma ordem de classificação de texto diferencia maiusculas de minúsculas determinada pelo seu sistema `LocaleID` valor.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1291">Performs a text comparison, based on a case-insensitive text sort order determined by your system's `LocaleID` value.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="a9d68-1292">Este exemplo usa o `StrComp` função para retornar os resultados de uma comparação de cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1292">This example uses the `StrComp` function to return the results of a string comparison.</span></span>  
  
 [!code-vb[VbVbalrStrings#22](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#22)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a9d68-1293">O valor <paramref name="Compare" /> não é válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1293">
              <paramref name="Compare" /> value is not valid.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.InStr" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="StrConv">
      <MemberSignature Language="C#" Value="public static string StrConv (string str, Microsoft.VisualBasic.VbStrConv Conversion, int LocaleID = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public static string StrConv(string str, valuetype Microsoft.VisualBasic.VbStrConv Conversion, int32 LocaleID) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function StrConv (str As String, Conversion As VbStrConv, Optional LocaleID As Integer = 0) As String" />
      <MemberSignature Language="F#" Value="static member StrConv : string * Microsoft.VisualBasic.VbStrConv * int -&gt; string" Usage="Microsoft.VisualBasic.Strings.StrConv (str, Conversion, LocaleID)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="Conversion" Type="Microsoft.VisualBasic.VbStrConv" />
        <Parameter Name="LocaleID" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="str">
          <span data-ttu-id="a9d68-1294">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1294">Required.</span>
          </span>
          <span data-ttu-id="a9d68-1295">Expressão <see langword="String" /> a ser convertida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1295">
              <see langword="String" /> expression to be converted.</span>
          </span>
        </param>
        <param name="Conversion">
          <span data-ttu-id="a9d68-1296">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1296">Required.</span>
          </span>
          <span data-ttu-id="a9d68-1297">Membro de <see cref="T:Microsoft.VisualBasic.VbStrConv" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1297">
              <see cref="T:Microsoft.VisualBasic.VbStrConv" /> member.</span>
          </span>
          <span data-ttu-id="a9d68-1298">O valor de enumeração que especifica o tipo de conversão a ser executado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1298">The enumeration value specifying the type of conversion to perform.</span>
          </span>
        </param>
        <param name="LocaleID">
          <span data-ttu-id="a9d68-1299">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1299">Optional.</span>
          </span>
          <span data-ttu-id="a9d68-1300">O valor <see langword="LocaleID" />, se for diferente do valor <see langword="LocaleID" /> do sistema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1300">The <see langword="LocaleID" /> value, if different from the system <see langword="LocaleID" /> value.</span>
          </span>
          <span data-ttu-id="a9d68-1301">(O valor <see langword="LocaleID" /> do sistema é o padrão.)</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1301">(The system <see langword="LocaleID" /> value is the default.)</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9d68-1302">Retorna uma cadeia de caracteres convertida, conforme especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1302">Returns a string converted as specified.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a9d68-1303">Retorna uma cadeia de caracteres convertida, conforme especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1303">Returns a string converted as specified.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9d68-1304">As constantes `VbStrConv.Wide`, `VbStrConv.Narrow`, `VbStrConv.SimplifiedChinese`, `VbStrConv.TraditionalChinese`, `VbStrConv.Katakana`, e `VbStrConv.Hiragana` podem causar erros de tempo de execução quando usadas em localidades em que eles não se aplicam, mas nem sempre: as constantes `VbStrConv.Katakana` e `VbStrConv.Hiragana`pode ser usado em um sistema não-japonês com o pacote de idiomas japonês instalado.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1304">The constants `VbStrConv.Wide`, `VbStrConv.Narrow`, `VbStrConv.SimplifiedChinese`, `VbStrConv.TraditionalChinese`, `VbStrConv.Katakana`, and `VbStrConv.Hiragana` can cause run-time errors when used in locales where they do not apply, but not always: the constants `VbStrConv.Katakana` and `VbStrConv.Hiragana` can be used in a non-Japanese system with the Japanese Language Pack installed.</span></span> <span data-ttu-id="a9d68-1305">Além disso, o uso das constantes `VbStrConv.Wide` e `VbStrConv.Narrow` é compatível com qualquer sistema com um idioma do Leste Asiático instalado.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1305">In addition, use of the constants `VbStrConv.Wide` and `VbStrConv.Narrow` is supported on any system with an East Asian language installed.</span></span>  
  
 <span data-ttu-id="a9d68-1306">Essa função usa informações de cultura do aplicativo ao manipular a cadeia de caracteres para que as alterações sejam apropriadas para a localidade na qual o aplicativo está sendo usado.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1306">This function uses the application's culture information when manipulating the string so that the case changes are appropriate for the locale in which the application is being used.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="a9d68-1307">Se seu aplicativo toma decisões de segurança com base no resultado de uma comparação ou operação de alteração de caso e, em seguida, a operação deve usar o <xref:System.String.Compare%2A?displayProperty=nameWithType> método e passar <xref:System.StringComparison.Ordinal> ou <xref:System.StringComparison.OrdinalIgnoreCase> para o `comparisonType` argumento.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1307">If your application makes security decisions based on the result of a comparison or case-change operation, then the operation should use the <xref:System.String.Compare%2A?displayProperty=nameWithType> method, and pass <xref:System.StringComparison.Ordinal> or <xref:System.StringComparison.OrdinalIgnoreCase> for the `comparisonType` argument.</span></span> <span data-ttu-id="a9d68-1308">Para obter mais informações, consulte [como cultura afeta cadeias de caracteres no Visual Basic](~/docs/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings.md).</span><span class="sxs-lookup"><span data-stu-id="a9d68-1308">For more information, see [How Culture Affects Strings in Visual Basic](~/docs/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings.md).</span></span>  
  
 <span data-ttu-id="a9d68-1309">As configurações do argumento `Conversion` são:</span><span class="sxs-lookup"><span data-stu-id="a9d68-1309">The `Conversion` argument settings are:</span></span>  
  
|<span data-ttu-id="a9d68-1310">Membro de enumeração</span><span class="sxs-lookup"><span data-stu-id="a9d68-1310">Enumeration member</span></span>|<span data-ttu-id="a9d68-1311">Descrição</span><span class="sxs-lookup"><span data-stu-id="a9d68-1311">Description</span></span>|  
|-|-|  
|`VbStrConv.None`|<span data-ttu-id="a9d68-1312">Não executa nenhuma conversão</span><span class="sxs-lookup"><span data-stu-id="a9d68-1312">Performs no conversion</span></span>|  
|`VbStrConv.LinguisticCasing`|<span data-ttu-id="a9d68-1313">Usa regras linguísticas para maiusculas e minúsculas, em vez de sistema de arquivos (padrão).</span><span class="sxs-lookup"><span data-stu-id="a9d68-1313">Uses linguistic rules for casing, rather than File System (default).</span></span> <span data-ttu-id="a9d68-1314">Válido com `VbStrConv.UpperCase` e `VbStrConv.LowerCase` apenas.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1314">Valid with `VbStrConv.UpperCase` and `VbStrConv.LowerCase` only.</span></span>|  
|`VbStrConv.UpperCase`|<span data-ttu-id="a9d68-1315">Converte a cadeia de caracteres em caracteres maiúsculos.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1315">Converts the string to uppercase characters.</span></span>|  
|`VbStrConv.LowerCase`|<span data-ttu-id="a9d68-1316">Converte a cadeia de caracteres em caracteres minúsculos.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1316">Converts the string to lowercase characters.</span></span>|  
|`VbStrConv.ProperCase`|<span data-ttu-id="a9d68-1317">Converte a primeira letra de cada palavra na cadeia de caracteres em maiusculas.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1317">Converts the first letter of every word in string to uppercase.</span></span>|  
|<span data-ttu-id="a9d68-1318">`VbStrConv.Wide` <sup>\*</sup></span><span class="sxs-lookup"><span data-stu-id="a9d68-1318">`VbStrConv.Wide` <sup>\*</sup></span></span>|<span data-ttu-id="a9d68-1319">Converte estreitos (meia largura) caracteres na cadeia de caracteres para caracteres largos (largura inteira).</span><span class="sxs-lookup"><span data-stu-id="a9d68-1319">Converts narrow (half-width) characters in the string to wide (full-width) characters.</span></span> [!INCLUDE[vbstrconv-wide](~/includes/vbstrconv-wide-md.md)]|  
|<span data-ttu-id="a9d68-1320">`VbStrConv.Narrow` <sup>\*</sup></span><span class="sxs-lookup"><span data-stu-id="a9d68-1320">`VbStrConv.Narrow` <sup>\*</sup></span></span>|<span data-ttu-id="a9d68-1321">Converte caracteres de toda a (largura inteira) na cadeia de caracteres para caracteres (meia largura).</span><span class="sxs-lookup"><span data-stu-id="a9d68-1321">Converts wide (full-width) characters in the string to narrow (half-width) characters.</span></span>|  
|<span data-ttu-id="a9d68-1322">`VbStrConv.Katakana` <sup>\*\*</sup></span><span class="sxs-lookup"><span data-stu-id="a9d68-1322">`VbStrConv.Katakana` <sup>\*\*</sup></span></span>|<span data-ttu-id="a9d68-1323">Converte os caracteres Hiragana da cadeira de caracteres em caracteres Katakana.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1323">Converts Hiragana characters in the string to Katakana characters.</span></span>|  
|<span data-ttu-id="a9d68-1324">`VbStrConv.Hiragana` <sup>\*\*</sup></span><span class="sxs-lookup"><span data-stu-id="a9d68-1324">`VbStrConv.Hiragana` <sup>\*\*</sup></span></span>|<span data-ttu-id="a9d68-1325">Converte os caracteres Katakana da cadeira de caracteres em caracteres Hiragana.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1325">Converts Katakana characters in the string to Hiragana characters.</span></span>|  
|<span data-ttu-id="a9d68-1326">`VbStrConv.SimplifiedChinese` <sup>\*</sup></span><span class="sxs-lookup"><span data-stu-id="a9d68-1326">`VbStrConv.SimplifiedChinese` <sup>\*</sup></span></span>|<span data-ttu-id="a9d68-1327">Converte caracteres do chinês tradicional para chinês simplificado.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1327">Converts Traditional Chinese characters to Simplified Chinese.</span></span>|  
|<span data-ttu-id="a9d68-1328">`VbStrConv.TraditionalChinese` <sup>\*</sup></span><span class="sxs-lookup"><span data-stu-id="a9d68-1328">`VbStrConv.TraditionalChinese` <sup>\*</sup></span></span>|<span data-ttu-id="a9d68-1329">Converte caracteres do chinês simplificado para chinês tradicional.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1329">Converts Simplified Chinese characters to Traditional Chinese.</span></span>|  
  
 <span data-ttu-id="a9d68-1330"><sup>\*</sup> Aplica-se a localidades asiáticas.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1330"><sup>\*</sup> Applies to Asian locales.</span></span>  
  
 <span data-ttu-id="a9d68-1331"><sup>\*\*</sup> Aplica-se para o Japão apenas.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1331"><sup>\*\*</sup> Applies to Japan only.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a9d68-1332">Essas constantes são especificadas no common language runtime do .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1332">These constants are specified in the .NET Framework common language runtime.</span></span> <span data-ttu-id="a9d68-1333">Como resultado, eles podem ser usados em qualquer lugar em seu código no lugar dos valores reais.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1333">As a result, they can be used anywhere in your code in place of the actual values.</span></span> <span data-ttu-id="a9d68-1334">A maioria pode ser combinada (por exemplo, `UpperCase + Wide`), exceto quando eles são mutuamente exclusivos (por exemplo, `VbStrConv.Wide + VbStrConv.Narrow`).</span><span class="sxs-lookup"><span data-stu-id="a9d68-1334">Most can be combined (for example, `UpperCase + Wide`), except when they are mutually exclusive (for example, `VbStrConv.Wide + VbStrConv.Narrow`).</span></span>  
  
 <span data-ttu-id="a9d68-1335">Estes são os separadores de palavras válidos para capitalização apropriada: nulo (`Chr$(0)`), tabulação horizontal (`Chr$(9)`), alimentação de linha (`Chr$(10)`), tabulação vertical (`Chr$(11)`), alimentação de formulário (`Chr$(12)`), retorno de carro (`Chr$(13)`), espaço ( conjunto de caracteres de byte único) (`Chr$(32)`).</span><span class="sxs-lookup"><span data-stu-id="a9d68-1335">The following are valid word separators for proper casing: Null (`Chr$(0)`), horizontal tab (`Chr$(9)`), line feed (`Chr$(10)`), vertical tab (`Chr$(11)`), form feed (`Chr$(12)`), carriage return (`Chr$(13)`), space (single-byte character set) (`Chr$(32)`).</span></span> <span data-ttu-id="a9d68-1336">O valor real para um espaço, que pode ser total ou meia largura, varia por país/região para culturas do Leste Asiático.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1336">The actual value for a space, which can be full or half width, varies by country/region for East Asian cultures.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a9d68-1337">Este exemplo converte o texto em todas as letras minúsculas.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1337">This example converts text into all lowercase letters.</span></span>  
  
 [!code-vb[VbVbalrStrings#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a9d68-1338">
            <paramref name="LocaleID" />, <paramref name="Conversion" /> &lt; 0 ou &gt; 2048 sem suporte ou conversão sem suporte para a localidade especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1338">Unsupported <paramref name="LocaleID" />, <paramref name="Conversion" /> &lt; 0 or &gt; 2048, or unsupported conversion for specified locale.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)" />
        <altmember cref="T:System.String" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <MemberGroup MemberName="StrDup">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a9d68-1339">Retorna uma cadeia de caracteres ou um objeto que consiste no caractere especificado repetido no número de vezes especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1339">Returns a string or object consisting of the specified character repeated the specified number of times.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="StrDup">
      <MemberSignature Language="C#" Value="public static string StrDup (int Number, char Character);" />
      <MemberSignature Language="ILAsm" Value=".method public static string StrDup(int32 Number, char Character) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function StrDup (Number As Integer, Character As Char) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ StrDup(int Number, char Character);" />
      <MemberSignature Language="F#" Value="static member StrDup : int * char -&gt; string" Usage="Microsoft.VisualBasic.Strings.StrDup (Number, Character)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Int32" />
        <Parameter Name="Character" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="Number">
          <span data-ttu-id="a9d68-1340">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1340">Required.</span>
          </span>
          <span data-ttu-id="a9d68-1341">Expressão <see langword="Integer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1341">
              <see langword="Integer" /> expression.</span>
          </span>
          <span data-ttu-id="a9d68-1342">O tamanho da cadeia de caracteres a ser retornado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1342">The length to the string to be returned.</span>
          </span>
        </param>
        <param name="Character">
          <span data-ttu-id="a9d68-1343">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1343">Required.</span>
          </span>
          <span data-ttu-id="a9d68-1344">Qualquer expressão <see langword="Char" />, <see langword="String" /> ou <see langword="Object" /> válida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1344">Any valid <see langword="Char" />, <see langword="String" />, or <see langword="Object" /> expression.</span>
          </span>
          <span data-ttu-id="a9d68-1345">Somente o primeiro caractere da expressão será usado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1345">Only the first character of the expression will be used.</span>
          </span>
          <span data-ttu-id="a9d68-1346">Se Character for do tipo <see langword="Object" />, ele deverá conter um valor <see langword="Char" /> ou <see langword="String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1346">If Character is of type <see langword="Object" />, it must contain either a <see langword="Char" /> or a <see langword="String" /> value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9d68-1347">Retorna uma cadeia de caracteres ou um objeto que consiste no caractere especificado repetido no número de vezes especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1347">Returns a string or object consisting of the specified character repeated the specified number of times.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a9d68-1348">Retorna uma cadeia de caracteres ou um objeto que consiste no caractere especificado repetido no número de vezes especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1348">Returns a string or object consisting of the specified character repeated the specified number of times.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9d68-1349">Essa função retorna um `String` composto por caracteres repetidos.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1349">This function returns a `String` made up of repeated characters.</span></span> <span data-ttu-id="a9d68-1350">O caractere que compõe a cadeia de caracteres é o primeiro caractere na `Character` argumento e ele está duplicado `Number` vezes.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1350">The character that makes up the string is the first character in the `Character` argument, and it is duplicated `Number` number of times.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a9d68-1351">Este exemplo usa o `StrDup` duplicado de função para retornar uma cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1351">This example uses the `StrDup` function to return a string of duplicated characters.</span></span>  
  
 [!code-vb[VbVbalrStrings#34](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#34)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a9d68-1352">
            <paramref name="Number" /> é menor que 0 ou o tipo <paramref name="Character" /> não é válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1352">
              <paramref name="Number" /> is less than 0 or <paramref name="Character" /> type is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a9d68-1353">
            <paramref name="Character" /> é <see langword="Nothing" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1353">
              <paramref name="Character" /> is <see langword="Nothing" />.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SPC(System.Int16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.ArgumentNullException" />
      </Docs>
    </Member>
    <Member MemberName="StrDup">
      <MemberSignature Language="C#" Value="public static object StrDup (int Number, object Character);" />
      <MemberSignature Language="ILAsm" Value=".method public static object StrDup(int32 Number, object Character) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function StrDup (Number As Integer, Character As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ StrDup(int Number, System::Object ^ Character);" />
      <MemberSignature Language="F#" Value="static member StrDup : int * obj -&gt; obj" Usage="Microsoft.VisualBasic.Strings.StrDup (Number, Character)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Int32" />
        <Parameter Name="Character" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Number">
          <span data-ttu-id="a9d68-1354">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1354">Required.</span>
          </span>
          <span data-ttu-id="a9d68-1355">Expressão <see langword="Integer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1355">
              <see langword="Integer" /> expression.</span>
          </span>
          <span data-ttu-id="a9d68-1356">O tamanho da cadeia de caracteres a ser retornado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1356">The length to the string to be returned.</span>
          </span>
        </param>
        <param name="Character">
          <span data-ttu-id="a9d68-1357">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1357">Required.</span>
          </span>
          <span data-ttu-id="a9d68-1358">Qualquer expressão <see langword="Char" />, <see langword="String" /> ou <see langword="Object" /> válida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1358">Any valid <see langword="Char" />, <see langword="String" />, or <see langword="Object" /> expression.</span>
          </span>
          <span data-ttu-id="a9d68-1359">Somente o primeiro caractere da expressão será usado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1359">Only the first character of the expression will be used.</span>
          </span>
          <span data-ttu-id="a9d68-1360">Se Character for do tipo <see langword="Object" />, ele deverá conter um valor <see langword="Char" /> ou <see langword="String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1360">If Character is of type <see langword="Object" />, it must contain either a <see langword="Char" /> or a <see langword="String" /> value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9d68-1361">Retorna uma cadeia de caracteres ou um objeto que consiste no caractere especificado repetido no número de vezes especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1361">Returns a string or object consisting of the specified character repeated the specified number of times.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a9d68-1362">Retorna uma cadeia de caracteres ou um objeto que consiste no caractere especificado repetido no número de vezes especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1362">Returns a string or object consisting of the specified character repeated the specified number of times.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9d68-1363">Essa função retorna um `String` composto por caracteres repetidos.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1363">This function returns a `String` made up of repeated characters.</span></span> <span data-ttu-id="a9d68-1364">O caractere que compõe a cadeia de caracteres é o primeiro caractere na `Character` argumento e ele está duplicado `Number` vezes.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1364">The character that makes up the string is the first character in the `Character` argument, and it is duplicated `Number` number of times.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a9d68-1365">Este exemplo usa o `StrDup` duplicado de função para retornar uma cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1365">This example uses the `StrDup` function to return a string of duplicated characters.</span></span>  
  
 [!code-vb[VbVbalrStrings#34](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#34)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a9d68-1366">
            <paramref name="Number" /> é menor que 0 ou o tipo <paramref name="Character" /> não é válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1366">
              <paramref name="Number" /> is less than 0 or <paramref name="Character" /> type is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a9d68-1367">
            <paramref name="Character" /> é <see langword="Nothing" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1367">
              <paramref name="Character" /> is <see langword="Nothing" />.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SPC(System.Int16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.ArgumentNullException" />
      </Docs>
    </Member>
    <Member MemberName="StrDup">
      <MemberSignature Language="C#" Value="public static string StrDup (int Number, string Character);" />
      <MemberSignature Language="ILAsm" Value=".method public static string StrDup(int32 Number, string Character) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function StrDup (Number As Integer, Character As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ StrDup(int Number, System::String ^ Character);" />
      <MemberSignature Language="F#" Value="static member StrDup : int * string -&gt; string" Usage="Microsoft.VisualBasic.Strings.StrDup (Number, Character)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Int32" />
        <Parameter Name="Character" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Number">
          <span data-ttu-id="a9d68-1368">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1368">Required.</span>
          </span>
          <span data-ttu-id="a9d68-1369">Expressão <see langword="Integer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1369">
              <see langword="Integer" /> expression.</span>
          </span>
          <span data-ttu-id="a9d68-1370">O tamanho da cadeia de caracteres a ser retornado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1370">The length to the string to be returned.</span>
          </span>
        </param>
        <param name="Character">
          <span data-ttu-id="a9d68-1371">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1371">Required.</span>
          </span>
          <span data-ttu-id="a9d68-1372">Qualquer expressão <see langword="Char" />, <see langword="String" /> ou <see langword="Object" /> válida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1372">Any valid <see langword="Char" />, <see langword="String" />, or <see langword="Object" /> expression.</span>
          </span>
          <span data-ttu-id="a9d68-1373">Somente o primeiro caractere da expressão será usado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1373">Only the first character of the expression will be used.</span>
          </span>
          <span data-ttu-id="a9d68-1374">Se Character for do tipo <see langword="Object" />, ele deverá conter um valor <see langword="Char" /> ou <see langword="String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1374">If Character is of type <see langword="Object" />, it must contain either a <see langword="Char" /> or a <see langword="String" /> value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9d68-1375">Retorna uma cadeia de caracteres ou um objeto que consiste no caractere especificado repetido no número de vezes especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1375">Returns a string or object consisting of the specified character repeated the specified number of times.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a9d68-1376">Retorna uma cadeia de caracteres ou um objeto que consiste no caractere especificado repetido no número de vezes especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1376">Returns a string or object consisting of the specified character repeated the specified number of times.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9d68-1377">Essa função retorna um `String` composto por caracteres repetidos.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1377">This function returns a `String` made up of repeated characters.</span></span> <span data-ttu-id="a9d68-1378">O caractere que compõe a cadeia de caracteres é o primeiro caractere na `Character` argumento e ele está duplicado `Number` vezes.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1378">The character that makes up the string is the first character in the `Character` argument, and it is duplicated `Number` number of times.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a9d68-1379">Este exemplo usa o `StrDup` duplicado de função para retornar uma cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1379">This example uses the `StrDup` function to return a string of duplicated characters.</span></span>  
  
 [!code-vb[VbVbalrStrings#34](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#34)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a9d68-1380">
            <paramref name="Number" /> é menor que 0 ou o tipo <paramref name="Character" /> não é válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1380">
              <paramref name="Number" /> is less than 0 or <paramref name="Character" /> type is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a9d68-1381">
            <paramref name="Character" /> é <see langword="Nothing" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1381">
              <paramref name="Character" /> is <see langword="Nothing" />.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SPC(System.Int16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.ArgumentNullException" />
      </Docs>
    </Member>
    <Member MemberName="StrReverse">
      <MemberSignature Language="C#" Value="public static string StrReverse (string Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static string StrReverse(string Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.StrReverse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function StrReverse (Expression As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ StrReverse(System::String ^ Expression);" />
      <MemberSignature Language="F#" Value="static member StrReverse : string -&gt; string" Usage="Microsoft.VisualBasic.Strings.StrReverse Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Expression">
          <span data-ttu-id="a9d68-1382">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1382">Required.</span>
          </span>
          <span data-ttu-id="a9d68-1383">Expressão de cadeia de caracteres cujos caracteres serão invertidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1383">String expression whose characters are to be reversed.</span>
          </span>
          <span data-ttu-id="a9d68-1384">Se <c>Expression</c> for uma cadeia de comprimento zero (""), uma cadeia de comprimento zero será retornada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1384">If <c>Expression</c> is a zero-length string (""), a zero-length string is returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9d68-1385">Retorna uma cadeia de caracteres na qual a ordem dos caracteres de uma cadeia de caracteres especificada é invertida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1385">Returns a string in which the character order of a specified string is reversed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a9d68-1386">Retorna uma cadeia de caracteres na qual a ordem dos caracteres de uma cadeia de caracteres especificada é invertida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1386">Returns a string in which the character order of a specified string is reversed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9d68-1387">O `StrReverse` função retorna uma cadeia de caracteres que contém os mesmos caracteres que `Expression`, mas na ordem oposta.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1387">The `StrReverse` function returns a string that contains the same characters as `Expression`, but in the opposite order.</span></span>  
  
   
  
## Examples  
 [!code-vb[VbVbalrStrings#29](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#29)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
      </Docs>
    </Member>
    <Member MemberName="Trim">
      <MemberSignature Language="C#" Value="public static string Trim (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static string Trim(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Trim(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Trim (str As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Trim(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member Trim : string -&gt; string" Usage="Microsoft.VisualBasic.Strings.Trim str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">
          <span data-ttu-id="a9d68-1388">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1388">Required.</span>
          </span>
          <span data-ttu-id="a9d68-1389">Qualquer expressão <see langword="String" /> válida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1389">Any valid <see langword="String" /> expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9d68-1390">Retorna uma cadeia de caracteres contendo uma cópia de uma cadeia de caracteres especificada sem espaços à esquerda (<see langword="LTrim" />), sem espaços à direita (<see langword="RTrim" />) ou sem espaços à esquerda ou à direita (<see langword="Trim" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1390">Returns a string containing a copy of a specified string with no leading spaces (<see langword="LTrim" />), no trailing spaces (<see langword="RTrim" />), or no leading or trailing spaces (<see langword="Trim" />).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a9d68-1391">Retorna uma cadeia de caracteres contendo uma cópia de uma cadeia de caracteres especificada sem espaços à esquerda (<see langword="LTrim" />), sem espaços à direita (<see langword="RTrim" />) ou sem espaços à esquerda ou à direita (<see langword="Trim" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1391">Returns a string containing a copy of a specified string with no leading spaces (<see langword="LTrim" />), no trailing spaces (<see langword="RTrim" />), or no leading or trailing spaces (<see langword="Trim" />).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9d68-1392">O `LTrim`, `RTrim`, e `Trim` funções remover espaços de extremidades de cadeias de caracteres.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1392">The `LTrim`, `RTrim`, and `Trim` functions remove spaces from the ends of strings.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a9d68-1393">Este exemplo usa a função `LTrim` para retirar espaços à esquerda e a função `RTrim` para retirar espaços à direita de um variável de cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1393">This example uses the `LTrim` function to strip leading spaces and the `RTrim` function to strip trailing spaces from a string variable.</span></span> <span data-ttu-id="a9d68-1394">Usa a função de `Trim` para retirar ambos os tipos de espaços.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1394">It uses the `Trim` function to strip both types of spaces.</span></span>  
  
 [!code-vb[VbVbalrStrings#25](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#25)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Strings.RTrim(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.LTrim(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Space(System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="UCase">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a9d68-1395">Retorna uma cadeia de caracteres ou um caractere que contém a cadeia de caracteres especificada, convertida em maiúsculas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1395">Returns a string or character containing the specified string converted to uppercase.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UCase">
      <MemberSignature Language="C#" Value="public static char UCase (char Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static char UCase(char Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.UCase(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function UCase (Value As Char) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char UCase(char Value);" />
      <MemberSignature Language="F#" Value="static member UCase : char -&gt; char" Usage="Microsoft.VisualBasic.Strings.UCase Value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="Value">
          <span data-ttu-id="a9d68-1396">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1396">Required.</span>
          </span>
          <span data-ttu-id="a9d68-1397">Qualquer expressão <see langword="String" /> ou <see langword="Char" /> válida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1397">Any valid <see langword="String" /> or <see langword="Char" /> expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9d68-1398">Retorna uma cadeia de caracteres ou um caractere que contém a cadeia de caracteres especificada, convertida em maiúsculas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1398">Returns a string or character containing the specified string converted to uppercase.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a9d68-1399">Retorna uma cadeia de caracteres ou um caractere que contém a cadeia de caracteres especificada, convertida em maiúsculas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1399">Returns a string or character containing the specified string converted to uppercase.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9d68-1400">Apenas letras minúsculas são convertidas em maiusculas; todas as letras maiusculas e caracteres que não sejam letras permanecem inalterados.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1400">Only lowercase letters are converted to uppercase; all uppercase letters and nonletter characters remain unchanged.</span></span>  
  
 <span data-ttu-id="a9d68-1401">Essa função usa informações de cultura do aplicativo ao manipular a cadeia de caracteres para que as alterações sejam apropriadas para a localidade na qual o aplicativo está sendo usado.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1401">This function uses the application's culture information when manipulating the string so that the case changes are appropriate for the locale in which the application is being used.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="a9d68-1402">Se seu aplicativo toma decisões de segurança com base no resultado de uma comparação ou operação de alteração de caso e, em seguida, a operação deve usar o <xref:System.String.Compare%2A?displayProperty=nameWithType> método e passar <xref:System.StringComparison.Ordinal> ou <xref:System.StringComparison.OrdinalIgnoreCase> para o `comparisonType` argumento.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1402">If your application makes security decisions based on the result of a comparison or case-change operation, then the operation should use the <xref:System.String.Compare%2A?displayProperty=nameWithType> method, and pass <xref:System.StringComparison.Ordinal> or <xref:System.StringComparison.OrdinalIgnoreCase> for the `comparisonType` argument.</span></span> <span data-ttu-id="a9d68-1403">Para obter mais informações, consulte [como cultura afeta cadeias de caracteres no Visual Basic](~/docs/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings.md).</span><span class="sxs-lookup"><span data-stu-id="a9d68-1403">For more information, see [How Culture Affects Strings in Visual Basic](~/docs/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a9d68-1404">Este exemplo usa a função `UCase` para retornar uma versão de uma cadeia de caracteres em letras minúsculas.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1404">This example uses the `UCase` function to return an uppercase version of a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#31](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#31)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.LCase" />
      </Docs>
    </Member>
    <Member MemberName="UCase">
      <MemberSignature Language="C#" Value="public static string UCase (string Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static string UCase(string Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.UCase(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UCase (Value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UCase(System::String ^ Value);" />
      <MemberSignature Language="F#" Value="static member UCase : string -&gt; string" Usage="Microsoft.VisualBasic.Strings.UCase Value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Value">
          <span data-ttu-id="a9d68-1405">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1405">Required.</span>
          </span>
          <span data-ttu-id="a9d68-1406">Qualquer expressão <see langword="String" /> ou <see langword="Char" /> válida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1406">Any valid <see langword="String" /> or <see langword="Char" /> expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9d68-1407">Retorna uma cadeia de caracteres ou um caractere que contém a cadeia de caracteres especificada, convertida em maiúsculas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1407">Returns a string or character containing the specified string converted to uppercase.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a9d68-1408">Retorna uma cadeia de caracteres ou um caractere que contém a cadeia de caracteres especificada, convertida em maiúsculas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d68-1408">Returns a string or character containing the specified string converted to uppercase.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9d68-1409">Apenas letras minúsculas são convertidas em maiusculas; todas as letras maiusculas e caracteres que não sejam letras permanecem inalterados.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1409">Only lowercase letters are converted to uppercase; all uppercase letters and nonletter characters remain unchanged.</span></span>  
  
 <span data-ttu-id="a9d68-1410">Essa função usa informações de cultura do aplicativo ao manipular a cadeia de caracteres para que as alterações sejam apropriadas para a localidade na qual o aplicativo está sendo usado.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1410">This function uses the application's culture information when manipulating the string so that the case changes are appropriate for the locale in which the application is being used.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="a9d68-1411">Se seu aplicativo toma decisões de segurança com base no resultado de uma comparação ou operação de alteração de caso e, em seguida, a operação deve usar o <xref:System.String.Compare%2A?displayProperty=nameWithType> método e passar <xref:System.StringComparison.Ordinal> ou <xref:System.StringComparison.OrdinalIgnoreCase> para o `comparisonType` argumento.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1411">If your application makes security decisions based on the result of a comparison or case-change operation, then the operation should use the <xref:System.String.Compare%2A?displayProperty=nameWithType> method, and pass <xref:System.StringComparison.Ordinal> or <xref:System.StringComparison.OrdinalIgnoreCase> for the `comparisonType` argument.</span></span> <span data-ttu-id="a9d68-1412">Para obter mais informações, consulte [como cultura afeta cadeias de caracteres no Visual Basic](~/docs/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings.md).</span><span class="sxs-lookup"><span data-stu-id="a9d68-1412">For more information, see [How Culture Affects Strings in Visual Basic](~/docs/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a9d68-1413">Este exemplo usa a função `UCase` para retornar uma versão de uma cadeia de caracteres em letras minúsculas.</span><span class="sxs-lookup"><span data-stu-id="a9d68-1413">This example uses the `UCase` function to return an uppercase version of a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#31](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#31)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.LCase" />
      </Docs>
    </Member>
  </Members>
</Type>