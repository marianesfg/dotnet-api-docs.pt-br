<Type Name="ConfigurationElementInterceptor" FullName="System.IdentityModel.Configuration.ConfigurationElementInterceptor">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fb606125809c9d79f11ab37a24ffe7a804e650dd" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ConfigurationElementInterceptor : System.Configuration.ConfigurationElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ConfigurationElementInterceptor extends System.Configuration.ConfigurationElement" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Configuration.ConfigurationElementInterceptor" />
  <TypeSignature Language="VB.NET" Value="Public Class ConfigurationElementInterceptor&#xA;Inherits ConfigurationElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConfigurationElementInterceptor : System::Configuration::ConfigurationElement" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="183e1-101">Há partes do esquema de configuração WIF (Windows Identity Foundation) nas quais os usuários podem especificar elementos e atributos arbitrários; por exemplo, ao especificar um manipulador de token personalizado.</span>
      <span class="sxs-lookup">
        <span data-stu-id="183e1-101">There are parts of the Windows Identity Foundation (WIF) configuration schema in which users can specify arbitrary elements and attributes; for example, when specifying a custom token handler.</span>
      </span>
      <span data-ttu-id="183e1-102">A classe <see cref="T:System.IdentityModel.Configuration.ConfigurationElementInterceptor" /> é implementada para lidar com esses casos.</span>
      <span class="sxs-lookup">
        <span data-stu-id="183e1-102">The <see cref="T:System.IdentityModel.Configuration.ConfigurationElementInterceptor" /> class is implemented to handle these cases.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConfigurationElementInterceptor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Configuration.ConfigurationElementInterceptor.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConfigurationElementInterceptor();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="183e1-103">Inicializa uma nova instância da classe <see cref="T:System.IdentityModel.Configuration.ConfigurationElementInterceptor" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="183e1-103">Initializes a new instance of the <see cref="T:System.IdentityModel.Configuration.ConfigurationElementInterceptor" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChildNodes">
      <MemberSignature Language="C#" Value="public System.Xml.XmlNodeList ChildNodes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNodeList ChildNodes" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Configuration.ConfigurationElementInterceptor.ChildNodes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChildNodes As XmlNodeList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlNodeList ^ ChildNodes { System::Xml::XmlNodeList ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="183e1-104">Obtém os nós filho deste elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="183e1-104">Gets the child nodes of this element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="183e1-105">A coleção de nós filho.</span>
          <span class="sxs-lookup">
            <span data-stu-id="183e1-105">The collection of child nodes.</span>
          </span>
          <span data-ttu-id="183e1-106">
            <see langword="null" /> Se esse elemento não tem nós filhos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="183e1-106">
              <see langword="null" /> if this element has no child nodes.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeserializeElement">
      <MemberSignature Language="C#" Value="protected override void DeserializeElement (System.Xml.XmlReader reader, bool serializeCollectionKey);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void DeserializeElement(class System.Xml.XmlReader reader, bool serializeCollectionKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Configuration.ConfigurationElementInterceptor.DeserializeElement(System.Xml.XmlReader,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub DeserializeElement (reader As XmlReader, serializeCollectionKey As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void DeserializeElement(System::Xml::XmlReader ^ reader, bool serializeCollectionKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="serializeCollectionKey" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="183e1-107">O <see cref="T:System.Xml.XmlReader" /> que lê do arquivo de configuração.</span>
          <span class="sxs-lookup">
            <span data-stu-id="183e1-107">The <see cref="T:System.Xml.XmlReader" /> that reads from the configuration file.</span>
          </span>
        </param>
        <param name="serializeCollectionKey">
          <span data-ttu-id="183e1-108">
            <see langword="true" /> para serializar apenas as propriedades de chave da coleção; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="183e1-108">
              <see langword="true" /> to serialize only the collection key properties; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="183e1-109">Lê o XML do arquivo de configuração.</span>
          <span class="sxs-lookup">
            <span data-stu-id="183e1-109">Reads XML from the configuration file.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ElementAsXml">
      <MemberSignature Language="C#" Value="public System.Xml.XmlElement ElementAsXml { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlElement ElementAsXml" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Configuration.ConfigurationElementInterceptor.ElementAsXml" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ElementAsXml As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlElement ^ ElementAsXml { System::Xml::XmlElement ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="183e1-110">Obtém o elemento XML representado por esta instância.</span>
          <span class="sxs-lookup">
            <span data-stu-id="183e1-110">Gets the XML element represented by this instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="183e1-111">O elemento XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="183e1-111">The XML element.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDeserializeUnrecognizedAttribute">
      <MemberSignature Language="C#" Value="protected override bool OnDeserializeUnrecognizedAttribute (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnDeserializeUnrecognizedAttribute(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Configuration.ConfigurationElementInterceptor.OnDeserializeUnrecognizedAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnDeserializeUnrecognizedAttribute (name As String, value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool OnDeserializeUnrecognizedAttribute(System::String ^ name, System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="183e1-112">O nome do atributo não reconhecido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="183e1-112">The name of the unrecognized attribute.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="183e1-113">O valor do atributo não reconhecido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="183e1-113">The value of the unrecognized attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="183e1-114">Obtém um valor que indica se um atributo desconhecido é encontrado durante a desserialização.</span>
          <span class="sxs-lookup">
            <span data-stu-id="183e1-114">Gets a value that indicates whether an unknown attribute is encountered during deserialization.</span>
          </span>
          <span data-ttu-id="183e1-115">Sempre retorna <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="183e1-115">Always returns <see langword="true" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="183e1-116">Sempre retorna <see langword="true" />, que indica que um atributo não reconhecido foi encontrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="183e1-116">Always returns <see langword="true" />, which indicates that an unrecognized attribute has been encountered.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="183e1-117">O <xref:System.IdentityModel.Configuration.ConfigurationElementInterceptor> classe é implementada especificamente para lidar com os elementos e atributos arbitrários, definidas pelo usuário.</span><span class="sxs-lookup"><span data-stu-id="183e1-117">The <xref:System.IdentityModel.Configuration.ConfigurationElementInterceptor> class is specifically implemented to handle arbitrary, user-defined attributes and elements.</span></span> <span data-ttu-id="183e1-118">Por esse motivo, esse método retorna `true` quando o .NET Framework detecta um elemento não reconhecido ou atributo para manter o analisador em execução.</span><span class="sxs-lookup"><span data-stu-id="183e1-118">For this reason, this method returns `true` when the .NET Framework detects an unrecognized element or attribute to keep the parser running.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDeserializeUnrecognizedElement">
      <MemberSignature Language="C#" Value="protected override bool OnDeserializeUnrecognizedElement (string elementName, System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnDeserializeUnrecognizedElement(string elementName, class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Configuration.ConfigurationElementInterceptor.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnDeserializeUnrecognizedElement (elementName As String, reader As XmlReader) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool OnDeserializeUnrecognizedElement(System::String ^ elementName, System::Xml::XmlReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="elementName">
          <span data-ttu-id="183e1-119">O nome do subelemento desconhecido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="183e1-119">The name of the unknown subelement.</span>
          </span>
        </param>
        <param name="reader">
          <span data-ttu-id="183e1-120">O leitor de XML que está sendo usado para desserialização.</span>
          <span class="sxs-lookup">
            <span data-stu-id="183e1-120">The XML reader that is being used for deserialization.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="183e1-121">Obtém um valor que indica se um elemento desconhecido é encontrado durante a desserialização.</span>
          <span class="sxs-lookup">
            <span data-stu-id="183e1-121">Gets a value that indicates whether an unknown element is encountered during deserialization.</span>
          </span>
          <span data-ttu-id="183e1-122">Sempre retorna <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="183e1-122">Always returns <see langword="true" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="183e1-123">Sempre retorna <see langword="true" />, que indica que um elemento não reconhecido foi encontrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="183e1-123">Always returns <see langword="true" />, which indicates that an unrecognized element has been encountered.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="183e1-124">O <xref:System.IdentityModel.Configuration.ConfigurationElementInterceptor> classe é implementada especificamente para lidar com os elementos e atributos arbitrários, definidas pelo usuário.</span><span class="sxs-lookup"><span data-stu-id="183e1-124">The <xref:System.IdentityModel.Configuration.ConfigurationElementInterceptor> class is specifically implemented to handle arbitrary, user-defined attributes and elements.</span></span> <span data-ttu-id="183e1-125">Por esse motivo, esse método retorna `true` quando o .NET Framework detecta um elemento não reconhecido ou atributo para manter o analisador em execução.</span><span class="sxs-lookup"><span data-stu-id="183e1-125">For this reason, this method returns `true` when the .NET Framework detects an unrecognized element or attribute to keep the parser running.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="protected override void Reset (System.Configuration.ConfigurationElement parentElement);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Reset(class System.Configuration.ConfigurationElement parentElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Configuration.ConfigurationElementInterceptor.Reset(System.Configuration.ConfigurationElement)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Reset (parentElement As ConfigurationElement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Reset(System::Configuration::ConfigurationElement ^ parentElement);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentElement" Type="System.Configuration.ConfigurationElement" />
      </Parameters>
      <Docs>
        <param name="parentElement">
          <span data-ttu-id="183e1-126">O nó pai do elemento de configuração.</span>
          <span class="sxs-lookup">
            <span data-stu-id="183e1-126">The parent node of the configuration element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="183e1-127">Redefine o estado interno do objeto <see cref="T:System.IdentityModel.Configuration.ConfigurationElementInterceptor" />, incluindo os bloqueios e as coleções de propriedades.</span>
          <span class="sxs-lookup">
            <span data-stu-id="183e1-127">Resets the internal state of the <see cref="T:System.IdentityModel.Configuration.ConfigurationElementInterceptor" /> object, including the locks and the properties collections.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>