<Type Name="XPathNavigator" FullName="System.Xml.XPath.XPathNavigator">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5efdfc24edd0acae4bf66123522ee746ccbebdd3" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52208575" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class XPathNavigator : System.Xml.XPath.XPathItem, ICloneable, System.Xml.IXmlNamespaceResolver, System.Xml.XPath.IXPathNavigable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit XPathNavigator extends System.Xml.XPath.XPathItem implements class System.ICloneable, class System.Xml.IXmlNamespaceResolver, class System.Xml.XPath.IXPathNavigable" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XPath.XPathNavigator" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class XPathNavigator&#xA;Inherits XPathItem&#xA;Implements ICloneable, IXmlNamespaceResolver, IXPathNavigable" />
  <TypeSignature Language="C++ CLI" Value="public ref class XPathNavigator abstract : System::Xml::XPath::XPathItem, ICloneable, System::Xml::IXmlNamespaceResolver, System::Xml::XPath::IXPathNavigable" />
  <TypeSignature Language="F#" Value="type XPathNavigator = class&#xA;    inherit XPathItem&#xA;    interface ICloneable&#xA;    interface IXPathNavigable&#xA;    interface IXmlNamespaceResolver" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XPath</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.XPath.XPathItem</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-1.1">System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Xml.IXmlNamespaceResolver</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Xml.XPath.IXPathNavigable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerDisplay("{debuggerDisplayProxy}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Fornece um modelo de cursor para navegar e editar dados XML.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Xml.XPath.XPathNavigator> classe o <xref:System.Xml.XPath?displayProperty=nameWithType> namespace é uma classe abstrata que define um modelo de cursor para navegar e editar itens de informações XML como instâncias do XQuery 1.0 e XPath 2.0 Data Model.  
  
 Uma <xref:System.Xml.XPath.XPathNavigator> objeto é criado a partir de uma classe que implementa o <xref:System.Xml.XPath.IXPathNavigable> interface, como o <xref:System.Xml.XPath.XPathDocument> e <xref:System.Xml.XmlDocument> classes. <xref:System.Xml.XPath.XPathNavigator> objetos criados pelo <xref:System.Xml.XPath.XPathDocument> objetos são somente leitura enquanto <xref:System.Xml.XPath.XPathNavigator> objetos criados pelo <xref:System.Xml.XmlDocument> objetos podem ser editados. Uma <xref:System.Xml.XPath.XPathNavigator> status de editáveis ou somente leitura do objeto é determinado usando o <xref:System.Xml.XPath.XPathNavigator.CanEdit%2A> propriedade do <xref:System.Xml.XPath.XPathNavigator> classe.  
  
 Para obter mais informações sobre como processar dados XML usando o modelo de dados XPath, consulte a [processar dados XML usando o modelo de dados XPath](~/docs/standard/data/xml/process-xml-data-using-the-xpath-data-model.md) tópico.  
  
> [!IMPORTANT]
>  As exceções geradas como resultado do uso de <xref:System.Xml.XPath.XPathNavigator> classe, como o <xref:System.Xml.XPath.XPathException> de classe, podem conter informações confidenciais não devem ser expostas em cenários não confiáveis. As exceções devem ser manipuladas corretamente para que essas informações confidenciais não são expostas em cenários não confiáveis.  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Quando você herda o <see cref="T:System.Xml.XPath.XPathNavigator" /> classe, você deve substituir os seguintes membros: 
-   <see cref="P:System.Xml.XPath.XPathNavigator.NameTable" />  
  
-   <see cref="M:System.Xml.XPath.XPathNavigator.Clone" />  
  
-   <see cref="P:System.Xml.XPath.XPathNavigator.NodeType" />  
  
-   <see cref="P:System.Xml.XPath.XPathNavigator.LocalName" />  
  
-   <see cref="P:System.Xml.XPath.XPathNavigator.Name" />  
  
-   <see cref="P:System.Xml.XPath.XPathNavigator.NamespaceURI" />  
  
-   <see cref="P:System.Xml.XPath.XPathNavigator.Prefix" />  
  
-   <see cref="P:System.Xml.XPath.XPathNavigator.BaseURI" />  
  
-   <see cref="P:System.Xml.XPath.XPathNavigator.IsEmptyElement" />  
  
-   <see cref="M:System.Xml.XPath.XPathNavigator.MoveToFirstAttribute" />  
  
-   <see cref="M:System.Xml.XPath.XPathNavigator.MoveToNextAttribute" />  
  
-   <see cref="M:System.Xml.XPath.XPathNavigator.MoveToFirstNamespace(System.Xml.XPath.XPathNamespaceScope)" />  
  
-   <see cref="M:System.Xml.XPath.XPathNavigator.MoveToNextNamespace(System.Xml.XPath.XPathNamespaceScope)" />  
  
-   <see cref="M:System.Xml.XPath.XPathNavigator.MoveToNext" />  
  
-   <see cref="M:System.Xml.XPath.XPathNavigator.MoveToPrevious" />  
  
-   <see cref="M:System.Xml.XPath.XPathNavigator.MoveToFirstChild" />  
  
-   <see cref="M:System.Xml.XPath.XPathNavigator.MoveToParent" />  
  
-   <see cref="M:System.Xml.XPath.XPathNavigator.MoveTo(System.Xml.XPath.XPathNavigator)" />  
  
-   <see cref="M:System.Xml.XPath.XPathNavigator.MoveToId(System.String)" />  
  
-   <see cref="M:System.Xml.XPath.XPathNavigator.IsSamePosition(System.Xml.XPath.XPathNavigator)" />  
  
-   <see cref="P:System.Xml.XPath.XPathItem.Value" /></para>
    </block>
    <altmember cref="T:System.Xml.XPath.IXPathNavigable" />
    <altmember cref="T:System.Xml.XPath.XPathDocument" />
    <altmember cref="T:System.Xml.XmlDocument" />
    <altmember cref="T:System.Xml.XmlNode" />
    <related type="Article" href="https://msdn.microsoft.com/library/536c6fce-1453-4654-9c72-bca54d47e081">Processar dados XML usando o modelo de dados XPath</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XPathNavigator ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XPathNavigator();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse construtor é chamado por construtores de classe derivada para inicializar o estado nesse tipo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AppendChild">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Cria um novo nó filho ao final da lista de nós filho do nó atual.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AppendChild">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlWriter AppendChild ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlWriter AppendChild() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.AppendChild" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AppendChild () As XmlWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlWriter ^ AppendChild();" />
      <MemberSignature Language="F#" Value="abstract member AppendChild : unit -&gt; System.Xml.XmlWriter&#xA;override this.AppendChild : unit -&gt; System.Xml.XmlWriter" Usage="xPathNavigator.AppendChild " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retorna um objeto <see cref="T:System.Xml.XmlWriter" /> usado para criar um ou mais novos nós filhos no final da lista de nós filhos do nó atual.</summary>
        <returns>Um objeto <see cref="T:System.Xml.XmlWriter" /> usado para criar novos nós filhos no final da lista de nós filhos do nó atual.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Acrescentar nós filho adiciona novos nós ao final da lista de nós filho do nó atual. Por exemplo, quando existem três nós filho de um elemento, o primeiro nó acrescentado se torna o quarto nó filho. Se não existirem nós filho, um novo nó filho é criado.  
  
 As seguintes são notas importantes a considerar ao usar o <xref:System.Xml.XPath.XPathNavigator.AppendChild%2A> método.  
  
-   O novo nó filho não é inserido até que o <xref:System.Xml.XmlWriter.Close%2A> método da <xref:System.Xml.XmlWriter> objeto é chamado.  
  
-   O <xref:System.Xml.XPath.XPathNavigator.AppendChild%2A> método é válido somente quando o <xref:System.Xml.XPath.XPathNavigator> é posicionado no nó raiz ou um nó de elemento.  
  
-   O <xref:System.Xml.XPath.XPathNavigator.AppendChild%2A> método não afeta a posição do <xref:System.Xml.XPath.XPathNavigator>.  
  
 Você pode gravar mais de um nó no gravador. Todos os nós são acrescentados ao final da lista de nós filho do nó atual.  
  
   
  
## Examples  
 No exemplo a seguir, um novo `pages` elemento filho é acrescentado à lista de elementos filho do primeiro `book` elemento no `contosoBooks.xml` de arquivos usando o <xref:System.Xml.XmlWriter> objeto retornado do <xref:System.Xml.XPath.XPathNavigator.AppendChild%2A> método.  
  
 [!code-cpp[XPathNavigatorMethods#1](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#1)]
 [!code-csharp[XPathNavigatorMethods#1](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#1)]
 [!code-vb[XPathNavigatorMethods#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#1)]  
  
 O exemplo usa o arquivo `contosoBooks.xml` como entrada.  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>  
<bookstore xmlns="http://www.contoso.com/books">  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">O nó atual no qual <see cref="T:System.Xml.XPath.XPathNavigator" /> está posicionado não é o nó raiz nem um nó de elemento.</exception>
        <exception cref="T:System.NotSupportedException">O <see cref="T:System.Xml.XPath.XPathNavigator" /> não dá suporte à edição.</exception>
      </Docs>
    </Member>
    <Member MemberName="AppendChild">
      <MemberSignature Language="C#" Value="public virtual void AppendChild (string newChild);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AppendChild(string newChild) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.AppendChild(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AppendChild (newChild As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AppendChild(System::String ^ newChild);" />
      <MemberSignature Language="F#" Value="abstract member AppendChild : string -&gt; unit&#xA;override this.AppendChild : string -&gt; unit" Usage="xPathNavigator.AppendChild newChild" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newChild" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="newChild">A cadeia de dados XML do novo nó filho.</param>
        <summary>Cria um novo nó filho ao final da lista de nós filho do nó atual usando a cadeia de caracteres de dados XML especificada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Acrescentar um nó filho adiciona o novo nó ao final da lista de nós filho do nó atual. Por exemplo, quando existem três nós filho de um elemento, o nó acrescentado se torna o quarto nó filho. Se não existirem nós filho, um novo nó filho é criado.  
  
 Para criar um novo nó de elemento, inclua toda a sintaxe XML no parâmetro de cadeia de caracteres de XML. A cadeia de caracteres para um novo `book` nó é `AppendChild("<book/>")`. A cadeia de caracteres para acrescentar o texto "livro" para o nó de texto do nó atual é `AppendChild("book")`. Se a cadeia de caracteres XML contiver vários nós, todos os nós são adicionados.  
  
 As seguintes são notas importantes a considerar ao usar o <xref:System.Xml.XPath.XPathNavigator.AppendChild%2A> método.  
  
-   O <xref:System.Xml.XPath.XPathNavigator.AppendChild%2A> método é válido somente quando o <xref:System.Xml.XPath.XPathNavigator> é posicionado no nó raiz ou um nó de elemento.  
  
-   O <xref:System.Xml.XPath.XPathNavigator.AppendChild%2A> método não afeta a posição do <xref:System.Xml.XPath.XPathNavigator>.  
  
   
  
## Examples  
 No exemplo a seguir, um novo elemento filho de `pages` é acrescentado à lista de elementos filho do primeiro elemento de `book` no arquivo de `contosoBooks.xml` .  
  
 [!code-cpp[XPathNavigatorMethods#2](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#2)]
 [!code-csharp[XPathNavigatorMethods#2](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#2)]
 [!code-vb[XPathNavigatorMethods#2](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#2)]  
  
 O exemplo usa o arquivo `contosoBooks.xml` como entrada.  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>  
<bookstore xmlns="http://www.contoso.com/books">  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">O parâmetro de cadeia de caracteres de dados XML é <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">O nó atual no qual <see cref="T:System.Xml.XPath.XPathNavigator" /> está posicionado não é o nó raiz nem um nó de elemento.</exception>
        <exception cref="T:System.NotSupportedException">O <see cref="T:System.Xml.XPath.XPathNavigator" /> não dá suporte à edição.</exception>
        <exception cref="T:System.Xml.XmlException">O parâmetro de cadeia de caracteres de dados XML não está bem formado.</exception>
      </Docs>
    </Member>
    <Member MemberName="AppendChild">
      <MemberSignature Language="C#" Value="public virtual void AppendChild (System.Xml.XmlReader newChild);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AppendChild(class System.Xml.XmlReader newChild) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.AppendChild(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AppendChild (newChild As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AppendChild(System::Xml::XmlReader ^ newChild);" />
      <MemberSignature Language="F#" Value="abstract member AppendChild : System.Xml.XmlReader -&gt; unit&#xA;override this.AppendChild : System.Xml.XmlReader -&gt; unit" Usage="xPathNavigator.AppendChild newChild" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newChild" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="newChild">Um objeto <see cref="T:System.Xml.XmlReader" /> posicionado nos dados XML para o novo nó filho.</param>
        <summary>Cria um novo nó filho ao final da lista de nós filho do nó atual usando o conteúdo XML do objeto <see cref="T:System.Xml.XmlReader" /> especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Acrescentar um nó filho adiciona o novo nó ao final da lista de nós filho do nó atual. Por exemplo, quando existem três nós filho de um elemento, o nó acrescentado se torna o quarto nó filho. Se não existirem nós filho, um novo nó filho é criado.  
  
 As seguintes são notas importantes a considerar ao usar o <xref:System.Xml.XPath.XPathNavigator.AppendChild%2A> método.  
  
-   Se o <xref:System.Xml.XmlReader> objeto está posicionado em uma sequência de nós XML, todos os nós na sequência são adicionados.  
  
-   O <xref:System.Xml.XPath.XPathNavigator.AppendChild%2A> método é válido somente quando o <xref:System.Xml.XPath.XPathNavigator> é posicionado no nó raiz ou um nó de elemento.  
  
-   O <xref:System.Xml.XPath.XPathNavigator.AppendChild%2A> método não afeta a posição do <xref:System.Xml.XPath.XPathNavigator>.  
  
   
  
## Examples  
 No exemplo a seguir, uma nova `pages` elemento filho é acrescentado à lista de elementos filho do primeiro `book` elemento na `contosoBooks.xml` de arquivos usando o <xref:System.Xml.XmlReader> objeto especificado. O `http://www.contoso.com/books` namespace for especificado, de modo que o novo elemento filho é anexado, usando o mesmo namespace do documento XML.  
  
 [!code-cpp[XPathNavigatorMethods#3](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#3)]
 [!code-csharp[XPathNavigatorMethods#3](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#3)]
 [!code-vb[XPathNavigatorMethods#3](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#3)]  
  
 O exemplo usa o arquivo `contosoBooks.xml` como entrada.  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>  
<bookstore xmlns="http://www.contoso.com/books">  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">O objeto <see cref="T:System.Xml.XmlReader" /> está em um estado de erro ou fechado.</exception>
        <exception cref="T:System.ArgumentNullException">O parâmetro do objeto <see cref="T:System.Xml.XmlReader" /> é <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">O nó atual no qual <see cref="T:System.Xml.XPath.XPathNavigator" /> está posicionado não é o nó raiz nem um nó de elemento.</exception>
        <exception cref="T:System.NotSupportedException">O <see cref="T:System.Xml.XPath.XPathNavigator" /> não dá suporte à edição.</exception>
        <exception cref="T:System.Xml.XmlException">O conteúdo XML do parâmetro de objeto <see cref="T:System.Xml.XmlReader" /> não está bem formado.</exception>
      </Docs>
    </Member>
    <Member MemberName="AppendChild">
      <MemberSignature Language="C#" Value="public virtual void AppendChild (System.Xml.XPath.XPathNavigator newChild);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AppendChild(class System.Xml.XPath.XPathNavigator newChild) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.AppendChild(System.Xml.XPath.XPathNavigator)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AppendChild (newChild As XPathNavigator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AppendChild(System::Xml::XPath::XPathNavigator ^ newChild);" />
      <MemberSignature Language="F#" Value="abstract member AppendChild : System.Xml.XPath.XPathNavigator -&gt; unit&#xA;override this.AppendChild : System.Xml.XPath.XPathNavigator -&gt; unit" Usage="xPathNavigator.AppendChild newChild" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newChild" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <param name="newChild">Um objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> posicionado no nó a ser adicionado como o novo nó filho.</param>
        <summary>Cria um novo nó filho ao final da lista de nós filho do nó atual usando os nós no <see cref="T:System.Xml.XPath.XPathNavigator" /> especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Acrescentar um nó filho adiciona o novo nó ao final da lista de nós filho do nó atual. Por exemplo, quando existem três nós filho de um elemento, o nó acrescentado se torna o quarto nó filho. Se não existirem nós filho, um novo nó filho é criado.  
  
 As seguintes são notas importantes a considerar ao usar o <xref:System.Xml.XPath.XPathNavigator.AppendChild%2A> método.  
  
-   Se o <xref:System.Xml.XPath.XPathNavigator> objeto está posicionado em uma sequência de nós XML, todos os nós na sequência são adicionados.  
  
-   O <xref:System.Xml.XPath.XPathNavigator.AppendChild%2A> método é válido somente quando o <xref:System.Xml.XPath.XPathNavigator> é posicionado no nó raiz ou um nó de elemento.  
  
-   O <xref:System.Xml.XPath.XPathNavigator.AppendChild%2A> método não afeta a posição do <xref:System.Xml.XPath.XPathNavigator>.  
  
   
  
## Examples  
 No exemplo a seguir, uma nova `pages` elemento filho é acrescentado à lista de elementos filho do primeiro `book` elemento na `contosoBooks.xml` de arquivos usando o nó contido no <xref:System.Xml.XPath.XPathNavigator> especificado. O `http://www.contoso.com/books` namespace for especificado, de modo que o novo elemento filho é anexado, usando o mesmo namespace do documento XML.  
  
 [!code-cpp[XPathNavigatorMethods#4](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#4)]
 [!code-csharp[XPathNavigatorMethods#4](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#4)]
 [!code-vb[XPathNavigatorMethods#4](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#4)]  
  
 O exemplo usa o arquivo `contosoBooks.xml` como entrada.  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>  
<bookstore xmlns="http://www.contoso.com/books">  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">O parâmetro do objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> é <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">O nó atual no qual <see cref="T:System.Xml.XPath.XPathNavigator" /> está posicionado não é o nó raiz nem um nó de elemento.</exception>
        <exception cref="T:System.NotSupportedException">O <see cref="T:System.Xml.XPath.XPathNavigator" /> não dá suporte à edição.</exception>
      </Docs>
    </Member>
    <Member MemberName="AppendChildElement">
      <MemberSignature Language="C#" Value="public virtual void AppendChildElement (string prefix, string localName, string namespaceURI, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AppendChildElement(string prefix, string localName, string namespaceURI, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.AppendChildElement(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AppendChildElement (prefix As String, localName As String, namespaceURI As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AppendChildElement(System::String ^ prefix, System::String ^ localName, System::String ^ namespaceURI, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member AppendChildElement : string * string * string * string -&gt; unit&#xA;override this.AppendChildElement : string * string * string * string -&gt; unit" Usage="xPathNavigator.AppendChildElement (prefix, localName, namespaceURI, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">O prefixo de namespace do novo nó do elemento filho (se houver).</param>
        <param name="localName">O nome local do novo nó do elemento filho (se houver).</param>
        <param name="namespaceURI">O URI do namespace do novo nó do elemento filho (se houver). <see cref="F:System.String.Empty" /> e <see langword="null" /> são equivalentes.</param>
        <param name="value">O valor do novo nó do elemento filho. Se <see cref="F:System.String.Empty" /> ou <see langword="null" /> for passado, um elemento vazio será criado.</param>
        <summary>Cria um novo nó de elemento filho no final da lista de nós filho do nó atual, usando o prefixo do namespace, o nome local e o URI do namespace especificado, com o valor especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Acrescentar um nó filho adiciona o novo nó ao final da lista de nós filho do nó atual. Por exemplo, quando existem três nós filho para um nó de elemento, o nó acrescentado se torna o quarto nó filho. Se não existirem nós filho, um novo nó filho é criado.  
  
 Prefixo de Namespace e os valores URI podem ser obtidas usando o <xref:System.Xml.XPath.XPathNavigator.LookupPrefix%2A> método ou o <xref:System.Xml.XPath.XPathNavigator.LookupNamespace%2A> método. Por exemplo, a sintaxe a seguir acrescenta um elemento filho usando o namespace no escopo `xmlns:bk=http://www.contoso.com/books`:  
  
```csharp  
navigator.AppendChildElement(navigator.Prefix, "pages", LookupNamespaceURI(navigator.Prefix), String.Empty)  
```  
  
 Isso cria o novo filho `<bk:pages/>` elemento.  
  
 As seguintes são notas importantes a considerar ao usar o <xref:System.Xml.XPath.XPathNavigator.AppendChildElement%2A> método.  
  
-   Se o prefixo de namespace especificado estiver `null` ou <xref:System.String.Empty?displayProperty=nameWithType>, em seguida, o prefixo do namespace URI do novo elemento é obtido de namespaces em-escopo atual. Se não houver nenhum prefixo de namespace atribuído ao URI no escopo atual de namespace especificado, um prefixo de namespace é gerado automaticamente.  
  
-   O <xref:System.Xml.XPath.XPathNavigator.AppendChildElement%2A> método é válido somente quando o <xref:System.Xml.XPath.XPathNavigator> é posicionado no nó raiz ou um nó de elemento.  
  
-   O <xref:System.Xml.XPath.XPathNavigator.AppendChildElement%2A> método não afeta a posição do <xref:System.Xml.XPath.XPathNavigator>.  
  
   
  
## Examples  
 No exemplo a seguir, um novo elemento filho de `pages` é acrescentado à lista de elementos filho do primeiro elemento de `book` no arquivo de `contosoBooks.xml` .  
  
 [!code-cpp[XPathNavigatorMethods#5](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#5)]
 [!code-csharp[XPathNavigatorMethods#5](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#5)]
 [!code-vb[XPathNavigatorMethods#5](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#5)]  
  
 O exemplo usa o arquivo `contosoBooks.xml` como entrada.  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>  
<bookstore xmlns="http://www.contoso.com/books">  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">O nó atual no qual <see cref="T:System.Xml.XPath.XPathNavigator" /> está posicionado não é o nó raiz nem um nó de elemento.</exception>
        <exception cref="T:System.NotSupportedException">O <see cref="T:System.Xml.XPath.XPathNavigator" /> não dá suporte à edição.</exception>
      </Docs>
    </Member>
    <Member MemberName="BaseURI">
      <MemberSignature Language="C#" Value="public abstract string BaseURI { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BaseURI" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XPath.XPathNavigator.BaseURI" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property BaseURI As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ BaseURI { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseURI : string" Usage="System.Xml.XPath.XPathNavigator.BaseURI" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Quando substituído em uma classe derivada, obtém o URI de base para o nó atual.</summary>
        <value>O local do qual o nó foi carregado, ou <see cref="F:System.String.Empty" /> se não houver nenhum valor.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um documento XML em rede é composto por blocos de dados, agregados usando vários mecanismos de inclusão padrão W3C e, portanto, contém nós que vêm de diferentes locais. Entidades de DTD são um exemplo desses dados agregados, mas ele não está limitado para DTDs. O <xref:System.Xml.XPath.XPathNavigator.BaseURI%2A> propriedade informa onde originam esses nós.  
  
 Por exemplo, se os dados XML são carregados a partir http://server/mydata.xml, o <xref:System.Xml.XPath.XPathNavigator.BaseURI%2A> propriedade retorna http://server/mydata.xml.  
  
> [!NOTE]
>  Nós criados usando o <xref:System.Xml.XPath.XPathNavigator> classe têm o mesmo <xref:System.Xml.XPath.XPathNavigator.BaseURI%2A> como o documento XML a <xref:System.Xml.XPath.XPathNavigator> foi criado a partir.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanEdit">
      <MemberSignature Language="C#" Value="public virtual bool CanEdit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanEdit" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XPath.XPathNavigator.CanEdit" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanEdit As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanEdit { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanEdit : bool" Usage="System.Xml.XPath.XPathNavigator.CanEdit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um valor que indica se o <see cref="T:System.Xml.XPath.XPathNavigator" /> pode editar os dados XML subjacentes.</summary>
        <value>
          <see langword="true" /> Se o <see cref="T:System.Xml.XPath.XPathNavigator" /> pode editar os dados XML subjacentes; caso contrário <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Xml.XPath.XPathNavigator.CanEdit%2A> propriedade tem valores diferentes com base em três implementações diferentes da <xref:System.Xml.XPath.IXPathNavigable> interface no .NET Framework. O <xref:System.Xml.XPath.XPathNavigator.CanEdit%2A> os valores para <xref:System.Xml.XPath.XPathNavigator> objetos criados por cada implementação são listados na tabela a seguir.  
  
|Implementação de <xref:System.Xml.XPath.IXPathNavigable>|Valor <xref:System.Xml.XPath.XPathNavigator.CanEdit%2A>|  
|--------------------------------------------------------------------------------------------------------------------------------------------------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------|  
|<xref:System.Xml.XPath.XPathDocument>|`false`|  
|<xref:System.Xml.XmlDocument>|`true`|  
  
   
  
## Examples  
 O exemplo a seguir usa o <xref:System.Xml.XPath.XPathNavigator.CanEdit%2A> propriedade para exibir o <xref:System.Xml.XPath.XPathNavigator.CanEdit%2A> valores da <xref:System.Xml.XPath.XPathDocument> e <xref:System.Xml.XmlDocument> classes.  
  
 [!code-cpp[XPathNavigatorProperties#1](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorProperties/CPP/xpathnavigatorproperties.cpp#1)]
 [!code-csharp[XPathNavigatorProperties#1](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorProperties/CS/xpathnavigatorproperties.cs#1)]
 [!code-vb[XPathNavigatorProperties#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorProperties/VB/xpathnavigatorproperties.vb#1)]  
  
 O exemplo usa o arquivo `books.xml` como entrada.  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>   
<bookstore>  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckValidity">
      <MemberSignature Language="C#" Value="public virtual bool CheckValidity (System.Xml.Schema.XmlSchemaSet schemas, System.Xml.Schema.ValidationEventHandler validationEventHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CheckValidity(class System.Xml.Schema.XmlSchemaSet schemas, class System.Xml.Schema.ValidationEventHandler validationEventHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.CheckValidity(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CheckValidity(System::Xml::Schema::XmlSchemaSet ^ schemas, System::Xml::Schema::ValidationEventHandler ^ validationEventHandler);" />
      <MemberSignature Language="F#" Value="abstract member CheckValidity : System.Xml.Schema.XmlSchemaSet * System.Xml.Schema.ValidationEventHandler -&gt; bool&#xA;override this.CheckValidity : System.Xml.Schema.XmlSchemaSet * System.Xml.Schema.ValidationEventHandler -&gt; bool" Usage="xPathNavigator.CheckValidity (schemas, validationEventHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schemas" Type="System.Xml.Schema.XmlSchemaSet" />
        <Parameter Name="validationEventHandler" Type="System.Xml.Schema.ValidationEventHandler" />
      </Parameters>
      <Docs>
        <param name="schemas">O <see cref="T:System.Xml.Schema.XmlSchemaSet" /> que contém os esquemas usados para validar os dados XML contidos no <see cref="T:System.Xml.XPath.XPathNavigator" />.</param>
        <param name="validationEventHandler">O <see cref="T:System.Xml.Schema.ValidationEventHandler" /> que recebe informações sobre erros e avisos de validação de esquema.</param>
        <summary>Verifica se os dados XML no <see cref="T:System.Xml.XPath.XPathNavigator" /> estão em conformidade com o XSD (linguagem de definição de esquema XML) fornecido.</summary>
        <returns>
          <see langword="true" /> se não ocorreu nenhum erro de validação de esquema; caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
-   O <xref:System.Xml.XPath.XPathNavigator.CheckValidity%2A> método confirma que os dados XML continham na <xref:System.Xml.XPath.XPathNavigator> está de acordo com um tipo global ou uma declaração no esquema ou esquemas fornecidas no <xref:System.Xml.Schema.XmlSchemaSet>.  
  
-   O <xref:System.Xml.XPath.XPathNavigator.CheckValidity%2A> método não executa o aumento da capacidade de infoset. Isso significa que os padrões de esquema não são aplicados, valores de texto não são convertidos em valores atômicos e nenhuma nova informação de tipo está associada com itens de informações.  
  
-   Esquema `xsi:schemaLocation` ou `xsi:noNamespaceSchemaLocation` dicas nos dados de XML são ignoradas.  
  
-   Se o <xref:System.Xml.XPath.XPathNavigator> está posicionado em um nó de documento, o processo de validação inclui a verificação de restrições de exclusividade e a referência de (`xs:ID`, `xs:IDREF`, `xs:key`, `xs:keyref`, e `xs:unique`). Caso contrário, essas verificações são omitidas.  
  
-   Se o <xref:System.Xml.Schema.XmlSchemaSet> passado como um parâmetro é `null` e o <xref:System.Xml.XPath.XPathNavigator> estiver posicionado em um nó de elemento, as informações de tipo expostos pelo <xref:System.Xml.XPath.XPathNavigator.SchemaInfo%2A> da propriedade <xref:System.Xml.Schema.IXmlSchemaInfo.SchemaType%2A> propriedade é usada para verificar a validade do nó. Se o <xref:System.Xml.Schema.XmlSchemaSet> passado como um parâmetro é `null` e o <xref:System.Xml.XPath.XPathNavigator> é posicionado no nó raiz, o <xref:System.Xml.XPath.XPathNavigator.SchemaInfo%2A> propriedade do elemento de documento (ou seja, o filho do elemento do nó raiz) é usada. Em ambos os casos se o <xref:System.Xml.Schema.IXmlSchemaInfo.SchemaType%2A> propriedade do elemento <xref:System.Xml.XPath.XPathNavigator.SchemaInfo%2A> é de propriedade `null` e o <xref:System.Xml.Schema.XmlSchemaSet> passado como um parâmetro é `null`, um <xref:System.InvalidOperationException> é gerada porque não há nenhuma informação de tipo para usar para executar validação.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Ocorreu um erro de validação de esquema e nenhum <see cref="T:System.Xml.Schema.ValidationEventHandler" /> foi especificado para lidar com erros de validação.</exception>
        <exception cref="T:System.InvalidOperationException">O <see cref="T:System.Xml.XPath.XPathNavigator" /> é posicionado em um nó que não é um elemento, atributo nem um nó raiz ou em que não há informações de tipo para executar a validação.</exception>
        <exception cref="T:System.ArgumentException">O método <see cref="M:System.Xml.XPath.XPathNavigator.CheckValidity(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)" /> foi chamado com um parâmetro <see cref="T:System.Xml.Schema.XmlSchemaSet" /> quando o <see cref="T:System.Xml.XPath.XPathNavigator" /> não foi posicionado no nó raiz dos dados XML.</exception>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public abstract System.Xml.XPath.XPathNavigator Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XPath.XPathNavigator Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.Clone" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Clone () As XPathNavigator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Xml::XPath::XPathNavigator ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; System.Xml.XPath.XPathNavigator" Usage="xPathNavigator.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNavigator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Quando substituído em uma classe derivada, cria um novo <see cref="T:System.Xml.XPath.XPathNavigator" /> posicionado no mesmo nó que este <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
        <returns>Um novo <see cref="T:System.Xml.XPath.XPathNavigator" /> posicionado no mesmo nó que este <see cref="T:System.Xml.XPath.XPathNavigator" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Xml.XPath.XPathNavigator.Clone%2A> método é particularmente útil em conjunto com o <xref:System.Xml.XPath.XPathNodeIterator>. Uma <xref:System.Xml.XPath.XPathNodeIterator> é usado para iterar sobre um conjunto de nó selecionado e contém uma <xref:System.Xml.XPath.XPathNodeIterator.Current%2A> propriedade que retorna um <xref:System.Xml.XPath.XPathNavigator> posicionado no nó de contexto a <xref:System.Xml.XPath.XPathNodeIterator>. No entanto, o <xref:System.Xml.XPath.XPathNavigator> retornado pelo <xref:System.Xml.XPath.XPathNodeIterator.Current%2A> propriedade não pode ser usada para mover para longe de conjunto de nós. Em vez disso, você clona retornado <xref:System.Xml.XPath.XPathNavigator> e usar o navegador clonado para fazer qualquer movimentação adicional.  
  
 Clonado <xref:System.Xml.XPath.XPathNavigator> não é afetado por alterações subsequentes ao original <xref:System.Xml.XPath.XPathNavigator>.  
  
   
  
## Examples  
 O exemplo a seguir obtém todos os títulos de livro escritos por Herman Melville.  
  
 [!code-cpp[XPathNavigatorMethods#6](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#6)]
 [!code-csharp[XPathNavigatorMethods#6](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#6)]
 [!code-vb[XPathNavigatorMethods#6](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#6)]  
  
 O exemplo usa o arquivo `books.xml` como entrada.  
  
```xml  
<?xml version="1.0" encoding="utf-8" ?>   
<bookstore>  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ComparePosition">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNodeOrder ComparePosition (System.Xml.XPath.XPathNavigator nav);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Xml.XmlNodeOrder ComparePosition(class System.Xml.XPath.XPathNavigator nav) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.ComparePosition(System.Xml.XPath.XPathNavigator)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ComparePosition (nav As XPathNavigator) As XmlNodeOrder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNodeOrder ComparePosition(System::Xml::XPath::XPathNavigator ^ nav);" />
      <MemberSignature Language="F#" Value="abstract member ComparePosition : System.Xml.XPath.XPathNavigator -&gt; System.Xml.XmlNodeOrder&#xA;override this.ComparePosition : System.Xml.XPath.XPathNavigator -&gt; System.Xml.XmlNodeOrder" Usage="xPathNavigator.ComparePosition nav" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeOrder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nav" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <param name="nav">O <see cref="T:System.Xml.XPath.XPathNavigator" /> com o qual comparar.</param>
        <summary>Compara a posição do <see cref="T:System.Xml.XPath.XPathNavigator" /> atual com a posição do <see cref="T:System.Xml.XPath.XPathNavigator" /> especificado.</summary>
        <returns>Um valor <see cref="T:System.Xml.XmlNodeOrder" /> que representa a posição de comparação dos dois objetos <see cref="T:System.Xml.XPath.XPathNavigator" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A tabela a seguir descreve o <xref:System.Xml.XmlNodeOrder> enumeração.  
  
|XmlNodeOrder|Descrição|  
|------------------|-----------------|  
|<xref:System.Xml.XmlNodeOrder.Before>|O nó atual deste <xref:System.Xml.XPath.XPathNavigator> é antes do nó atual de fornecido <xref:System.Xml.XPath.XPathNavigator>.|  
|<xref:System.Xml.XmlNodeOrder.After>|O nó atual deste <xref:System.Xml.XPath.XPathNavigator> após o nó atual fornecido <xref:System.Xml.XPath.XPathNavigator>.|  
|<xref:System.Xml.XmlNodeOrder.Same>|Os dois <xref:System.Xml.XPath.XPathNavigator> objetos são posicionados no mesmo nó.|  
|<xref:System.Xml.XmlNodeOrder.Unknown>|As posições de nó não podem ser determinadas relativos uns aos outros na ordem do documento, ou `null` é especificado como o <xref:System.Xml.XPath.XPathNavigator> parâmetro. Isso poderá ocorrer se os dois nós residirem em árvores diferentes.|  
  
 O <xref:System.Xml.XPath.XPathNavigator.ComparePosition%2A> comportamento do método é dependente do <xref:System.Xml.XPath.XPathNodeType> o <xref:System.Xml.XPath.XPathNavigator> está posicionado no momento. Ao comparar nós no documento XML, as seguintes regras se aplicam:  
  
-   <xref:System.Xml.XPath.XPathNodeType.Element> nós: esses nós são retornados na ordem do documento do documento de origem.  
  
-   <xref:System.Xml.XPath.XPathNodeType.Namespace> nós: esses nós podem ser retornados na ordem do documento e são sempre antes do <xref:System.Xml.XPath.XPathNodeType.Attribute> nós do elemento pai.  
  
-   <xref:System.Xml.XPath.XPathNodeType.Attribute> nós: esses nós podem ser retornados na ordem do documento. Eles sempre vir após o <xref:System.Xml.XPath.XPathNodeType.Namespace> nós e antes de nós filho do nó pai.  
  
> [!NOTE]
>  Para obter mais informações sobre o modelo de dados XPath e detalhes sobre cada um dos tipos de nó, consulte a seção 5 da recomendação W3C XML Path Language (XPath) localizado em http://www.w3.org/TR/xpath#data-model.  
  
 Esse método não tem nenhum efeito sobre o estado do <xref:System.Xml.XPath.XPathNavigator>.  
  
> [!NOTE]
>  Use o <xref:System.Xml.XPath.XPathNavigator.IsSamePosition%2A> método em vez de <xref:System.Xml.XPath.XPathNavigator.ComparePosition%2A> método quando possível.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XPath.XPathNavigator.IsSamePosition(System.Xml.XPath.XPathNavigator)" />
      </Docs>
    </Member>
    <Member MemberName="Compile">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XPath.XPathExpression Compile (string xpath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XPath.XPathExpression Compile(string xpath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.Compile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Compile (xpath As String) As XPathExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XPath::XPathExpression ^ Compile(System::String ^ xpath);" />
      <MemberSignature Language="F#" Value="abstract member Compile : string -&gt; System.Xml.XPath.XPathExpression&#xA;override this.Compile : string -&gt; System.Xml.XPath.XPathExpression" Usage="xPathNavigator.Compile xpath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xpath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xpath">Uma cadeia de caracteres que representa uma expressão XPath.</param>
        <summary>Compila uma cadeia de caracteres que representa uma expressão XPath e retorna um objeto <see cref="T:System.Xml.XPath.XPathExpression" />.</summary>
        <returns>Um objeto <see cref="T:System.Xml.XPath.XPathExpression" /> que representa a expressão XPath.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Uma expressão XPath é avaliada para produzir um dos seguintes tipos de retorno:  
  
-   Conjunto de nós: uma coleção não ordenada de nós sem duplicatas  
  
-   Booliano: `true` ou `false`  
  
-   Número: um número de ponto flutuante  
  
-   Cadeia de caracteres: uma sequência de caracteres de UCS  
  
 Expressões que retornam um conjunto de nós podem ser usadas na <xref:System.Xml.XPath.XPathNavigator.Select%2A> e <xref:System.Xml.XPath.XPathNavigator.Evaluate%2A> métodos. Expressões que retornam um valor booliano, número ou cadeia de caracteres podem ser usadas no <xref:System.Xml.XPath.XPathNavigator.Evaluate%2A> método. As regras em expressões válidas para o <xref:System.Xml.XPath.XPathNavigator.Matches%2A> método são específicas para esse método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">O parâmetro <paramref name="xpath" /> contém uma expressão XPath que não é válida.</exception>
        <exception cref="T:System.Xml.XPath.XPathException">A expressão XPath não é válida.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateAttribute">
      <MemberSignature Language="C#" Value="public virtual void CreateAttribute (string prefix, string localName, string namespaceURI, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CreateAttribute(string prefix, string localName, string namespaceURI, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.CreateAttribute(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CreateAttribute (prefix As String, localName As String, namespaceURI As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CreateAttribute(System::String ^ prefix, System::String ^ localName, System::String ^ namespaceURI, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member CreateAttribute : string * string * string * string -&gt; unit&#xA;override this.CreateAttribute : string * string * string * string -&gt; unit" Usage="xPathNavigator.CreateAttribute (prefix, localName, namespaceURI, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">O prefixo de namespace do novo nó de atributo (se houver).</param>
        <param name="localName">O nome local do novo nó de atributo que não pode ser <see cref="F:System.String.Empty" /> nem <see langword="null" />.</param>
        <param name="namespaceURI">O URI de namespace do novo nó de atributo (se houver).</param>
        <param name="value">O valor do novo nó de atributo. Se <see cref="F:System.String.Empty" /> ou <see langword="null" /> for passado, um nó de atributo vazio será criado.</param>
        <summary>Cria um nó de atributo no nó do elemento atual usando o prefixo de namespace, o nome local e o URI de namespace especificado com o valor especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Prefixo de Namespace e os valores URI podem ser obtidas usando o <xref:System.Xml.XPath.XPathNavigator.LookupPrefix%2A> ou <xref:System.Xml.XPath.XPathNavigator.LookupNamespace%2A> método. Por exemplo, a sintaxe a seguir cria um atributo usando o namespace no escopo `xmlns:bk="http://www.contoso.com/books"`:  
  
```csharp  
editor.CreateAttribute(navigator.Prefix, "attributeName", LookupNamespace(navigator.Prefix), "text")  
```  
  
 Isso cria o novo atributo `<bk:element attributeName="text"/>` no elemento atual.  
  
 As seguintes são notas importantes a considerar ao usar o <xref:System.Xml.XPath.XPathNavigator.CreateAttribute%2A> método.  
  
-   Se o prefixo de namespace especificado estiver <xref:System.String.Empty?displayProperty=nameWithType> ou `null`, o prefixo do namespace URI do novo atributo é obtido de namespaces em-escopo atual. Se não houver nenhum prefixo de namespace atribuído ao URI no escopo atual de namespace especificado, um prefixo de namespace é gerado automaticamente. Por exemplo, para criar um novo atributo em um elemento no namespace padrão do `contosoBooks.xml` arquivo, (`xmlns="http://www.contoso.com/books"`), você especificar `null` ou <xref:System.String.Empty?displayProperty=nameWithType> para o prefixo de namespace e os parâmetros URI de namespace. Especificando `http://www.contoso.com/books` como o URI de namespace parâmetro fará com que o <xref:System.Xml.XPath.XPathNavigator.CreateAttribute%2A> método automaticamente gerar um prefixo de namespace para o novo atributo.  
  
-   Se o novo atributo criado for um nó de namespace que está em conflito com uma declaração de namespace no elemento, seja porque o prefixo de namespace escolhido é usado por outra declaração de namespace no mesmo escopo, ou porque o prefixo escolhido é o mesmo que o elemento, mas é associado a um URI de namespace diferente, uma exceção será lançada.  
  
-   O <xref:System.Xml.XPath.XPathNavigator.CreateAttribute%2A> método não afeta a posição do <xref:System.Xml.XPath.XPathNavigator>.  
  
   
  
## Examples  
 No exemplo a seguir, uma nova `discount` atributo é criado na `price` elemento filho do primeiro `book` elemento no `contosoBooks.xml` arquivo.  
  
 [!code-cpp[XPathNavigatorMethods#7](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#7)]
 [!code-csharp[XPathNavigatorMethods#7](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#7)]
 [!code-vb[XPathNavigatorMethods#7](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#7)]  
  
 O exemplo usa o arquivo `contosoBooks.xml` como entrada.  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>  
<bookstore xmlns="http://www.contoso.com/books">  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">O <see cref="T:System.Xml.XPath.XPathNavigator" /> não está posicionado em um nó do elemento.</exception>
        <exception cref="T:System.NotSupportedException">O <see cref="T:System.Xml.XPath.XPathNavigator" /> não dá suporte à edição.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateAttributes">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlWriter CreateAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlWriter CreateAttributes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.CreateAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateAttributes () As XmlWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlWriter ^ CreateAttributes();" />
      <MemberSignature Language="F#" Value="abstract member CreateAttributes : unit -&gt; System.Xml.XmlWriter&#xA;override this.CreateAttributes : unit -&gt; System.Xml.XmlWriter" Usage="xPathNavigator.CreateAttributes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retorna um objeto <see cref="T:System.Xml.XmlWriter" /> usado para criar novos atributos no elemento atual.</summary>
        <returns>Um objeto <see cref="T:System.Xml.XmlWriter" /> usado para criar novos atributos no elemento atual.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 As seguintes são notas importantes a considerar ao usar o <xref:System.Xml.XPath.XPathNavigator.CreateAttributes%2A> método.  
  
-   Quando o <xref:System.Xml.XPath.XPathNavigator> está posicionado em um elemento, os novos atributos criados pelo <xref:System.Xml.XPath.XPathNavigator> método são colocados no final da lista de atributos do elemento atual.  
  
-   Os novos atributos não são inseridos até que o <xref:System.Xml.XmlWriter.Close%2A> método da <xref:System.Xml.XmlWriter> objeto é chamado.  
  
-   Se o prefixo de namespace especificado estiver <xref:System.String.Empty?displayProperty=nameWithType> ou `null`, o prefixo do namespace URI do novo atributo é obtido de namespaces em-escopo atual. Se não houver nenhum prefixo de namespace atribuído ao URI no escopo atual de namespace especificado, um prefixo de namespace é gerado automaticamente. Por exemplo, para criar um novo atributo em um elemento no namespace padrão do `contosoBooks.xml` arquivo, (`xmlns="http://www.contoso.com/books"`), você especificar `null` ou <xref:System.String.Empty?displayProperty=nameWithType> para o prefixo de namespace e os parâmetros URI de namespace. Especificando `http://www.contoso.com/books` como o URI de namespace parâmetro fará com que o <xref:System.Xml.XPath.XPathNavigator.CreateAttribute%2A> método automaticamente gerar um prefixo de namespace para o novo atributo.  
  
-   Se o novo atributo criado for um nó de namespace que está em conflito com uma declaração de namespace no elemento, seja porque o prefixo de namespace escolhido é usado por outra declaração de namespace no mesmo escopo, ou porque o prefixo escolhido é o mesmo que o elemento, mas é associado a um URI de namespace diferente, uma exceção será lançada.  
  
-   O <xref:System.Xml.XmlWriter> objeto retornado só pode ser usado para criar atributos. Chamar outro <xref:System.Xml.XmlWriter> métodos de objeto que não criam atributos gera uma exceção.  
  
-   O <xref:System.Xml.XPath.XPathNavigator.CreateAttributes%2A> método não afeta a posição do <xref:System.Xml.XPath.XPathNavigator>.  
  
   
  
## Examples  
 No exemplo a seguir, um novo `discount` e atributos de `currency` são criados no elemento filho de `price` do primeiro elemento de `book` no arquivo de `contosoBooks.xml` usando o objeto de <xref:System.Xml.XmlWriter> retornado pelo método de <xref:System.Xml.XPath.XPathNavigator.CreateAttributes%2A> .  
  
 [!code-cpp[XPathNavigatorMethods#8](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#8)]
 [!code-csharp[XPathNavigatorMethods#8](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#8)]
 [!code-vb[XPathNavigatorMethods#8](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#8)]  
  
 O exemplo usa o arquivo `contosoBooks.xml` como entrada.  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>  
<bookstore xmlns="http://www.contoso.com/books">  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">O <see cref="T:System.Xml.XPath.XPathNavigator" /> não está posicionado em um nó do elemento.</exception>
        <exception cref="T:System.NotSupportedException">O <see cref="T:System.Xml.XPath.XPathNavigator" /> não dá suporte à edição.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateNavigator">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XPath.XPathNavigator CreateNavigator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XPath.XPathNavigator CreateNavigator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.CreateNavigator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateNavigator () As XPathNavigator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XPath::XPathNavigator ^ CreateNavigator();" />
      <MemberSignature Language="F#" Value="abstract member CreateNavigator : unit -&gt; System.Xml.XPath.XPathNavigator&#xA;override this.CreateNavigator : unit -&gt; System.Xml.XPath.XPathNavigator" Usage="xPathNavigator.CreateNavigator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.XPath.IXPathNavigable.CreateNavigator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNavigator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retorna uma cópia do <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
        <returns>Uma cópia <see cref="T:System.Xml.XPath.XPathNavigator" /> deste <see cref="T:System.Xml.XPath.XPathNavigator" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método é equivalente a <xref:System.Xml.XPath.XPathNavigator.Clone%2A> método.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteRange">
      <MemberSignature Language="C#" Value="public virtual void DeleteRange (System.Xml.XPath.XPathNavigator lastSiblingToDelete);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteRange(class System.Xml.XPath.XPathNavigator lastSiblingToDelete) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.DeleteRange(System.Xml.XPath.XPathNavigator)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DeleteRange (lastSiblingToDelete As XPathNavigator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DeleteRange(System::Xml::XPath::XPathNavigator ^ lastSiblingToDelete);" />
      <MemberSignature Language="F#" Value="abstract member DeleteRange : System.Xml.XPath.XPathNavigator -&gt; unit&#xA;override this.DeleteRange : System.Xml.XPath.XPathNavigator -&gt; unit" Usage="xPathNavigator.DeleteRange lastSiblingToDelete" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lastSiblingToDelete" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <param name="lastSiblingToDelete">Um <see cref="T:System.Xml.XPath.XPathNavigator" /> posicionado no último nó irmão no intervalo a ser excluído.</param>
        <summary>Exclui um intervalo de nós irmãos do nó atual para o nó especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Xml.XPath.XPathNavigator.DeleteRange%2A> método exclui um intervalo de nós irmãos do nó atual de <xref:System.Xml.XPath.XPathNavigator> está posicionado em (inclusivo) para o nó especificado pelo <xref:System.Xml.XPath.XPathNavigator> parâmetro (inclusivo). O <xref:System.Xml.XPath.XPathNavigator> , em seguida, é posicionado no nó pai.  
  
   
  
## Examples  
 No exemplo a seguir, o primeiro e segundo `book` elementos do `contosoBooks.xml` arquivo são excluídas usando o <xref:System.Xml.XPath.XPathNavigator.DeleteRange%2A> método.  
  
 [!code-cpp[XPathNavigatorMethods#52](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#52)]
 [!code-csharp[XPathNavigatorMethods#52](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#52)]
 [!code-vb[XPathNavigatorMethods#52](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#52)]  
  
 O exemplo usa o arquivo `contosoBooks.xml` como entrada.  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>  
<bookstore xmlns="http://www.contoso.com/books">  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">O <see cref="T:System.Xml.XPath.XPathNavigator" /> especificado é <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">O <see cref="T:System.Xml.XPath.XPathNavigator" /> não dá suporte à edição.</exception>
        <exception cref="T:System.InvalidOperationException">O último nó a excluir especificado não é um nó irmão válido do nó atual.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteSelf">
      <MemberSignature Language="C#" Value="public virtual void DeleteSelf ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteSelf() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.DeleteSelf" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DeleteSelf ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DeleteSelf();" />
      <MemberSignature Language="F#" Value="abstract member DeleteSelf : unit -&gt; unit&#xA;override this.DeleteSelf : unit -&gt; unit" Usage="xPathNavigator.DeleteSelf " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Exclui o nó atual e seus nós filho.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
-   O <xref:System.Xml.XPath.XPathNavigator> é posicionado no nó do pai do nó excluído na exclusão com êxito.  
  
-   Se o nó excluído for um nó de texto que é o conteúdo do elemento tipado simples, o elemento perde as informações de tipo. Isso significa que, quando posicionado no elemento de <xref:System.Xml.XPath.XPathNavigator.XmlType%2A>, <xref:System.Xml.XPath.XPathNavigator.ValueType%2A> e <xref:System.Xml.XPath.XPathNavigator.TypedValue%2A> propriedades têm valores `null`, <xref:System.String> e <xref:System.String.Empty> , respectivamente.  
  
-   Nós excluídos ainda são acessíveis para <xref:System.Xml.XPath.XPathNavigator> posicionados sobre eles antes da exclusão de objetos. No entanto, os métodos que tentam mover da subárvore excluída falharem. Por exemplo, o <xref:System.Xml.XPath.XPathNavigator.MoveToParent%2A> e <xref:System.Xml.XPath.XPathNavigator.MoveToPrevious%2A> métodos sempre falhará quando o <xref:System.Xml.XPath.XPathNavigator> é posicionado sobre o nó excluído mais superior. Isso ocorre porque o nó excluído não está mais conectado para o documento XML. Da mesma forma a <xref:System.Xml.XPath.XPathNavigator.MoveToNext%2A> método sempre falhará se o <xref:System.Xml.XPath.XPathNavigator> é posicionado no nó excluído mais baixas.  
  
   
  
## Examples  
 No exemplo a seguir a `price` elemento da primeira `book` elemento da `contosoBooks.xml` arquivo for excluído usando o <xref:System.Xml.XPath.XPathNavigator.DeleteSelf%2A> método. A posição do objeto de <xref:System.Xml.XPath.XPathNavigator> após o elemento de `price` é excluída está no elemento pai de `book` .  
  
 [!code-cpp[XPathNavigatorMethods#9](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#9)]
 [!code-csharp[XPathNavigatorMethods#9](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#9)]
 [!code-vb[XPathNavigatorMethods#9](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#9)]  
  
 O exemplo usa o arquivo `contosoBooks.xml` como entrada.  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>  
<bookstore xmlns="http://www.contoso.com/books">  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">O <see cref="T:System.Xml.XPath.XPathNavigator" /> é posicionado em um nó que não pode ser excluído, como o nó raiz ou um nó de namespace.</exception>
        <exception cref="T:System.NotSupportedException">O <see cref="T:System.Xml.XPath.XPathNavigator" /> não dá suporte à edição.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Evaluate">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Avalia a expressão XPath especificada e retorna o resultado tipado.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C#" Value="public virtual object Evaluate (string xpath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Evaluate(string xpath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.Evaluate(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Evaluate (xpath As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Evaluate(System::String ^ xpath);" />
      <MemberSignature Language="F#" Value="abstract member Evaluate : string -&gt; obj&#xA;override this.Evaluate : string -&gt; obj" Usage="xPathNavigator.Evaluate xpath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xpath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xpath">Uma cadeia de caracteres que representa uma expressão XPath que pode ser avaliada.</param>
        <summary>Avalia a expressão XPath especificada e retorna o resultado tipado.</summary>
        <returns>O resultado da expressão (booliano, número, cadeia de caracteres ou conjunto de nós). Ele é mapeado para os objetos <see cref="T:System.Boolean" />, <see cref="T:System.Double" />, <see cref="T:System.String" /> ou <see cref="T:System.Xml.XPath.XPathNodeIterator" />, respectivamente.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O código c# a seguir converte o `Price/text()` nó a um número, multiplica por 10 e retorna o valor resultante.  
  
```csharp 
nav.Evaluate("Price/text()*10");  
```  
  
> [!NOTE]
>  As funções XPath Position () e Last (), a menos que usado como um predicado em uma etapa de local, exigem uma referência a um nó definida para ser avaliado. Nesse caso, você deve usar a sobrecarga que utiliza um <xref:System.Xml.XPath.XPathNodeIterator> como um argumento; caso contrário, Position () e Last () retornam 0.  
  
 Esse método não tem nenhum efeito sobre o estado do <xref:System.Xml.XPath.XPathNavigator>.  
  
   
  
## Examples  
 O exemplo a seguir avalia uma expressão XPath e retorna um <xref:System.Double>.  
  
 [!code-cpp[XPathNavigatorMethods#10](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#10)]
 [!code-csharp[XPathNavigatorMethods#10](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#10)]
 [!code-vb[XPathNavigatorMethods#10](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#10)]  
  
 O exemplo usa o arquivo `books.xml` como entrada.  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>   
<bookstore>  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">O tipo de retorno da expressão XPath é um conjunto de nós.</exception>
        <exception cref="T:System.Xml.XPath.XPathException">A expressão XPath não é válida.</exception>
        <altmember cref="M:System.Xml.XPath.XPathNavigator.Compile(System.String)" />
        <altmember cref="T:System.Xml.XPath.XPathExpression" />
        <altmember cref="P:System.Xml.XPath.XPathExpression.ReturnType" />
      </Docs>
    </Member>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C#" Value="public virtual object Evaluate (System.Xml.XPath.XPathExpression expr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Evaluate(class System.Xml.XPath.XPathExpression expr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.Evaluate(System.Xml.XPath.XPathExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Evaluate (expr As XPathExpression) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Evaluate(System::Xml::XPath::XPathExpression ^ expr);" />
      <MemberSignature Language="F#" Value="abstract member Evaluate : System.Xml.XPath.XPathExpression -&gt; obj&#xA;override this.Evaluate : System.Xml.XPath.XPathExpression -&gt; obj" Usage="xPathNavigator.Evaluate expr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expr" Type="System.Xml.XPath.XPathExpression" />
      </Parameters>
      <Docs>
        <param name="expr">Um <see cref="T:System.Xml.XPath.XPathExpression" /> que pode ser avaliado.</param>
        <summary>Avalia <see cref="T:System.Xml.XPath.XPathExpression" /> e retorna o resultado de tipo.</summary>
        <returns>O resultado da expressão (booliano, número, cadeia de caracteres ou conjunto de nós). Ele é mapeado para os objetos <see cref="T:System.Boolean" />, <see cref="T:System.Double" />, <see cref="T:System.String" /> ou <see cref="T:System.Xml.XPath.XPathNodeIterator" />, respectivamente.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O código c# a seguir retorna um número após converter a `Price/text()` nó em um número e multiplicação do valor por 10.  
  
```csharp  
XPathExpression expr = nav.Compile("Price/text()*10");  
nav.Evaluate(expr);  
```  
  
> [!NOTE]
>  As funções XPath Position () e Last (), a menos que usado como um predicado em uma etapa de local, exigem uma referência a um nó definida para ser avaliado. Nesse caso, você deve usar a sobrecarga que utiliza um <xref:System.Xml.XPath.XPathNodeIterator> como um argumento; caso contrário, Position () e Last () retornam 0.  
  
 Esse método não tem nenhum efeito sobre o estado do <xref:System.Xml.XPath.XPathNavigator>.  
  
   
  
## Examples  
 O exemplo a seguir avalia um <xref:System.Xml.XPath.XPathExpression> e retorna um <xref:System.Double>.  
  
 [!code-cpp[XPathNavigatorMethods#11](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#11)]
 [!code-csharp[XPathNavigatorMethods#11](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#11)]
 [!code-vb[XPathNavigatorMethods#11](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#11)]  
  
 O exemplo usa o arquivo `books.xml` como entrada.  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>   
<bookstore>  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">O tipo de retorno da expressão XPath é um conjunto de nós.</exception>
        <exception cref="T:System.Xml.XPath.XPathException">A expressão XPath não é válida.</exception>
        <altmember cref="M:System.Xml.XPath.XPathNavigator.Compile(System.String)" />
        <altmember cref="P:System.Xml.XPath.XPathExpression.ReturnType" />
      </Docs>
    </Member>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C#" Value="public virtual object Evaluate (string xpath, System.Xml.IXmlNamespaceResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Evaluate(string xpath, class System.Xml.IXmlNamespaceResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.Evaluate(System.String,System.Xml.IXmlNamespaceResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Evaluate (xpath As String, resolver As IXmlNamespaceResolver) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Evaluate(System::String ^ xpath, System::Xml::IXmlNamespaceResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="abstract member Evaluate : string * System.Xml.IXmlNamespaceResolver -&gt; obj&#xA;override this.Evaluate : string * System.Xml.IXmlNamespaceResolver -&gt; obj" Usage="xPathNavigator.Evaluate (xpath, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xpath" Type="System.String" />
        <Parameter Name="resolver" Type="System.Xml.IXmlNamespaceResolver" />
      </Parameters>
      <Docs>
        <param name="xpath">Uma cadeia de caracteres que representa uma expressão XPath que pode ser avaliada.</param>
        <param name="resolver">O objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> usado para resolver os prefixos de namespace na expressão XPath.</param>
        <summary>Avalia a expressão XPath especificada e retorna o resultado tipado, usando o objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> especificado para resolver prefixos de namespace na expressão XPath.</summary>
        <returns>O resultado da expressão (booliano, número, cadeia de caracteres ou conjunto de nós). Ele é mapeado para os objetos <see cref="T:System.Boolean" />, <see cref="T:System.Double" />, <see cref="T:System.String" /> ou <see cref="T:System.Xml.XPath.XPathNodeIterator" />, respectivamente.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O código c# a seguir retorna um número após converter a `Price/text()` nó em um número e multiplicação do valor por 10.  
  
```csharp  
XPathExpression expr = nav.Compile("Price/text()*10");  
nav.Evaluate(expr);  
```  
  
> [!NOTE]
>  As funções XPath Position () e Last (), a menos que usado como um predicado em uma etapa de local, exigem uma referência a um nó definida para ser avaliado. Nesse caso, você deve usar a sobrecarga que utiliza um <xref:System.Xml.XPath.XPathNodeIterator> como um argumento; caso contrário, Position () e Last () retornam 0.  
  
 Esse método não tem nenhum efeito sobre o estado do <xref:System.Xml.XPath.XPathNavigator>.  
  
   
  
## Examples  
 O exemplo a seguir avalia uma expressão XPath e retorna um <xref:System.Double> usando o <xref:System.Xml.XmlNamespaceManager> objeto especificado para resolver os prefixos de namespace na expressão XPath.  
  
 [!code-cpp[XPathNavigatorMethods#12](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#12)]
 [!code-csharp[XPathNavigatorMethods#12](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#12)]
 [!code-vb[XPathNavigatorMethods#12](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#12)]  
  
 O exemplo usa o arquivo `contosoBooks.xml` como entrada.  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>  
<bookstore xmlns="http://www.contoso.com/books">  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">O tipo de retorno da expressão XPath é um conjunto de nós.</exception>
        <exception cref="T:System.Xml.XPath.XPathException">A expressão XPath não é válida.</exception>
      </Docs>
    </Member>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C#" Value="public virtual object Evaluate (System.Xml.XPath.XPathExpression expr, System.Xml.XPath.XPathNodeIterator context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Evaluate(class System.Xml.XPath.XPathExpression expr, class System.Xml.XPath.XPathNodeIterator context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.Evaluate(System.Xml.XPath.XPathExpression,System.Xml.XPath.XPathNodeIterator)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Evaluate (expr As XPathExpression, context As XPathNodeIterator) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Evaluate(System::Xml::XPath::XPathExpression ^ expr, System::Xml::XPath::XPathNodeIterator ^ context);" />
      <MemberSignature Language="F#" Value="abstract member Evaluate : System.Xml.XPath.XPathExpression * System.Xml.XPath.XPathNodeIterator -&gt; obj&#xA;override this.Evaluate : System.Xml.XPath.XPathExpression * System.Xml.XPath.XPathNodeIterator -&gt; obj" Usage="xPathNavigator.Evaluate (expr, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expr" Type="System.Xml.XPath.XPathExpression" />
        <Parameter Name="context" Type="System.Xml.XPath.XPathNodeIterator" />
      </Parameters>
      <Docs>
        <param name="expr">Um <see cref="T:System.Xml.XPath.XPathExpression" /> que pode ser avaliado.</param>
        <param name="context">Um <see cref="T:System.Xml.XPath.XPathNodeIterator" /> que aponta para o conjunto de nós selecionado em que a avaliação deve ser executada.</param>
        <summary>Usa o contexto fornecido para avaliar o <see cref="T:System.Xml.XPath.XPathExpression" /> e retorna o resultado com tipo.</summary>
        <returns>O resultado da expressão (booliano, número, cadeia de caracteres ou conjunto de nós). Ele é mapeado para os objetos <see cref="T:System.Boolean" />, <see cref="T:System.Double" />, <see cref="T:System.String" /> ou <see cref="T:System.Xml.XPath.XPathNodeIterator" />, respectivamente.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A expressão é avaliada usando o <xref:System.Xml.XPath.XPathNodeIterator.Current%2A> nó do <xref:System.Xml.XPath.XPathNodeIterator> como o nó de contexto. Se `context` está `null`, o nó no qual o <xref:System.Xml.XPath.XPathNavigator> está posicionado no momento é usado como o nó de contexto.  
  
 As funções position () e Last (), a menos que usado como um predicado em uma etapa de local, sempre retornam 0 nas seguintes condições:  
  
-   O argumento `context` é `null`.  
  
-   <xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A> não foi chamado no <xref:System.Xml.XPath.XPathNodeIterator>.  
  
 Como as funções position () e Last () funcionam no nó atual, você não deve usar o <xref:System.Xml.XPath.XPathNodeIterator.Current%2A> propriedade mova para fora do conjunto de nós selecionado. Isso poderia invalidar o estado do <xref:System.Xml.XPath.XPathNavigator>.  
  
 Esse método não tem nenhum efeito sobre o estado do <xref:System.Xml.XPath.XPathNavigator>.  
  
   
  
## Examples  
 O exemplo a seguir avalia um <xref:System.Xml.XPath.XPathExpression> e retorna um <xref:System.Double> usando o <xref:System.Xml.XPath.XPathNodeIterator.Current%2A> nó do <xref:System.Xml.XPath.XPathNodeIterator> como o nó de contexto.  
  
 [!code-cpp[XPathNavigatorMethods#13](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#13)]
 [!code-csharp[XPathNavigatorMethods#13](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#13)]
 [!code-vb[XPathNavigatorMethods#13](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#13)]  
  
 O exemplo usa o arquivo `books.xml` como entrada.  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>   
<bookstore>  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">O tipo de retorno da expressão XPath é um conjunto de nós.</exception>
        <exception cref="T:System.Xml.XPath.XPathException">A expressão XPath não é válida.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetAttribute">
      <MemberSignature Language="C#" Value="public virtual string GetAttribute (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetAttribute(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.GetAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAttribute (localName As String, namespaceURI As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetAttribute(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="abstract member GetAttribute : string * string -&gt; string&#xA;override this.GetAttribute : string * string -&gt; string" Usage="xPathNavigator.GetAttribute (localName, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">O nome local do atributo. <paramref name="localName" /> diferencia maiúsculas de minúsculas.</param>
        <param name="namespaceURI">O URI do namespace do atributo.</param>
        <summary>Obtém o valor do atributo com o nome do local e o URI de namespace especificados.</summary>
        <returns>Um <see cref="T:System.String" /> que contém o valor do atributo especificado; <see cref="F:System.String.Empty" /> se um atributo correspondente não for encontrado ou se o <see cref="T:System.Xml.XPath.XPathNavigator" /> não estiver posicionado em um nó de elemento.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Xml.XPath.XPathNavigator> deve ser posicionado em um nó de elemento antes de chamar o <xref:System.Xml.XPath.XPathNavigator.GetAttribute%2A> método.  
  
 Esse método não tem nenhum efeito sobre o estado do <xref:System.Xml.XPath.XPathNavigator>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XPath.XPathNavigator.MoveToAttribute(System.String,System.String)" />
        <altmember cref="M:System.Xml.XPath.XPathNavigator.MoveToFirstAttribute" />
        <altmember cref="M:System.Xml.XPath.XPathNavigator.MoveToNextAttribute" />
        <altmember cref="P:System.Xml.XPath.XPathNavigator.HasAttributes" />
      </Docs>
    </Member>
    <Member MemberName="GetNamespace">
      <MemberSignature Language="C#" Value="public virtual string GetNamespace (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetNamespace(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.GetNamespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNamespace (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetNamespace(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetNamespace : string -&gt; string&#xA;override this.GetNamespace : string -&gt; string" Usage="xPathNavigator.GetNamespace name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">O nome local do nó de namespace.</param>
        <summary>Retorna o valor do nó de namespace que corresponde ao nome local especificado.</summary>
        <returns>Um <see cref="T:System.String" /> que contém o valor do nó de namespace; <see cref="F:System.String.Empty" /> se um nó de namespace correspondente não for encontrado ou se o <see cref="T:System.Xml.XPath.XPathNavigator" /> não estiver posicionado em um nó de elemento.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Namespaces `xml` e `xmlns` sempre retornam um valor. Se <xref:System.String.Empty?displayProperty=nameWithType> é especificado como o `name` parâmetro, o <xref:System.Xml.XPath.XPathNavigator.GetNamespace%2A> método retorna o padrão `xmlns` namespace.  
  
 Para obter uma definição de nós de namespace, consulte a seção 5.4 da recomendação W3C XML Path Language (XPath) localizado em http://www.w3.org/TR/xpath#data-model.  
  
 Esse método não afeta o estado do <xref:System.Xml.XPath.XPathNavigator>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XPath.XPathNavigator.MoveToNamespace(System.String)" />
        <altmember cref="M:System.Xml.XPath.XPathNavigator.MoveToFirstNamespace" />
        <altmember cref="M:System.Xml.XPath.XPathNavigator.MoveToNextNamespace" />
      </Docs>
    </Member>
    <Member MemberName="GetNamespacesInScope">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IDictionary&lt;string,string&gt; GetNamespacesInScope (System.Xml.XmlNamespaceScope scope);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; GetNamespacesInScope(valuetype System.Xml.XmlNamespaceScope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.GetNamespacesInScope(System.Xml.XmlNamespaceScope)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNamespacesInScope (scope As XmlNamespaceScope) As IDictionary(Of String, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ GetNamespacesInScope(System::Xml::XmlNamespaceScope scope);" />
      <MemberSignature Language="F#" Value="abstract member GetNamespacesInScope : System.Xml.XmlNamespaceScope -&gt; System.Collections.Generic.IDictionary&lt;string, string&gt;&#xA;override this.GetNamespacesInScope : System.Xml.XmlNamespaceScope -&gt; System.Collections.Generic.IDictionary&lt;string, string&gt;" Usage="xPathNavigator.GetNamespacesInScope scope" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="System.Xml.XmlNamespaceScope" />
      </Parameters>
      <Docs>
        <param name="scope">Um valor <see cref="T:System.Xml.XmlNamespaceScope" /> que especifica os namespaces a serem retornados.</param>
        <summary>Retorna os namespaces no escopo do nó atual.</summary>
        <returns>Uma coleção <see cref="T:System.Collections.Generic.IDictionary`2" /> de nomes de namespace organizada por prefixo.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Os espaços para nome retornado depende do <xref:System.Xml.XmlNamespaceScope> valor especificado.  
  
|Valor de XmlNamespaceScope|Namespaces retornados|  
|-----------------------------|-------------------------|  
|<xref:System.Xml.XmlNamespaceScope.All>|Todos os namespaces definidos no escopo do nó atual. Isso inclui o `xmlns:xml` namespace, que sempre é declarado implicitamente. A ordem dos namespaces retornados não está definida.|  
|<xref:System.Xml.XmlNamespaceScope.ExcludeXml>|Todos os namespaces definidos no escopo do nó atual, excluindo o `xmlns:xml` namespace, que sempre é declarado implicitamente. A ordem dos namespaces retornados não está definida.|  
|<xref:System.Xml.XmlNamespaceScope.Local>|Todos os namespaces definidos localmente no nó atual.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasAttributes">
      <MemberSignature Language="C#" Value="public virtual bool HasAttributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XPath.XPathNavigator.HasAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasAttributes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasAttributes { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasAttributes : bool" Usage="System.Xml.XPath.XPathNavigator.HasAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um valor que indica se o nó atual tem atributos.</summary>
        <value>Retorna <see langword="true" /> se o nó atual tiver atributos; retorna <see langword="false" /> se o nó atual não tem atributos, ou se o <see cref="T:System.Xml.XPath.XPathNavigator" /> não está posicionado em um nó de elemento.</value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Xml.XPath.XPathNavigator.MoveToNextAttribute" />
        <altmember cref="M:System.Xml.XPath.XPathNavigator.MoveToFirstAttribute" />
        <altmember cref="M:System.Xml.XPath.XPathNavigator.MoveToAttribute(System.String,System.String)" />
        <altmember cref="M:System.Xml.XPath.XPathNavigator.GetAttribute(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="HasChildren">
      <MemberSignature Language="C#" Value="public virtual bool HasChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasChildren" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XPath.XPathNavigator.HasChildren" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasChildren As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasChildren { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasChildren : bool" Usage="System.Xml.XPath.XPathNavigator.HasChildren" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um valor que indica se o nó atual tem nós filho.</summary>
        <value>
          <see langword="true" /> Se o nó atual tem nós filho. Caso contrário, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se o <xref:System.Xml.XPath.XPathNavigator> está posicionado em um nó que não pode ter nós filho, o <xref:System.Xml.XPath.XPathNavigator.HasChildren%2A> propriedade sempre retorna `false`.  
  
 A tabela a seguir lista o nó filho <xref:System.Xml.XPath.XPathNodeType> nós permitidos para cada <xref:System.Xml.XPath.XPathNodeType> nó.  
  
|Nó XPathNodeType|Nós de XPathNodeType filho|  
|------------------------|-------------------------------|  
|<xref:System.Xml.XPath.XPathNodeType.Root>|<xref:System.Xml.XPath.XPathNodeType.Element>, <xref:System.Xml.XPath.XPathNodeType.Comment>, ou <xref:System.Xml.XPath.XPathNodeType.ProcessingInstruction> nós. **Observação:** <xref:System.Xml.XmlNodeType.DocumentFragment> é equivalente a <xref:System.Xml.XPath.XPathNodeType.Root> ao usar o <xref:System.Xml.XmlDocument> de classe e pode ter os mesmos filhos como um elemento.|  
|<xref:System.Xml.XPath.XPathNodeType.Element>|<xref:System.Xml.XPath.XPathNodeType.Element>, <xref:System.Xml.XPath.XPathNodeType.Text>, <xref:System.Xml.XPath.XPathNodeType.Comment>, <xref:System.Xml.XPath.XPathNodeType.ProcessingInstruction>, <xref:System.Xml.XPath.XPathNodeType.Whitespace> ou <xref:System.Xml.XPath.XPathNodeType.SignificantWhitespace> nós.|  
|Todos os outros <xref:System.Xml.XPath.XPathNodeType> nós|Não pode ter nós filho.|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XPath.XPathNavigator.MoveToFirstChild" />
        <altmember cref="M:System.Xml.XPath.XPathNavigator.MoveToParent" />
        <altmember cref="M:System.Xml.XPath.XPathNavigator.MoveToNext" />
      </Docs>
    </Member>
    <Member MemberName="InnerXml">
      <MemberSignature Language="C#" Value="public virtual string InnerXml { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InnerXml" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XPath.XPathNavigator.InnerXml" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property InnerXml As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InnerXml { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InnerXml : string with get, set" Usage="System.Xml.XPath.XPathNavigator.InnerXml" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a marcação que representa os nós filho do nó atual.</summary>
        <value>Um <see cref="T:System.String" /> que contém a marcação de nós filho do nó atual.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  O <xref:System.Xml.XPath.XPathNavigator.InnerXml%2A> e <xref:System.Xml.XPath.XPathNavigator.OuterXml%2A> propriedades não são muito eficientes. Se o desempenho for uma prioridade, é mais eficiente para usar os métodos de navegação do nó do <xref:System.Xml.XPath.XPathNavigator> para obter valores de nós filho.  
  
   
  
## Examples  
 O exemplo a seguir usa o <xref:System.Xml.XPath.XPathNavigator.InnerXml%2A> propriedade para exibir o conteúdo do primeiro `book` elemento na `contosoBooks.xml` de arquivo e seus nós filho no <xref:System.Xml.XPath.XPathNavigator>.  
  
 [!code-cpp[XPathNavigatorProperties#2](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorProperties/CPP/xpathnavigatorproperties.cpp#2)]
 [!code-csharp[XPathNavigatorProperties#2](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorProperties/CS/xpathnavigatorproperties.cs#2)]
 [!code-vb[XPathNavigatorProperties#2](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorProperties/VB/xpathnavigatorproperties.vb#2)]  
  
 O exemplo usa o arquivo `contosoBooks.xml` como entrada.  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>  
<bookstore xmlns="http://www.contoso.com/books">  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">A propriedade <see cref="P:System.Xml.XPath.XPathNavigator.InnerXml" /> não pode ser definida.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="InsertAfter">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Cria um novo nó irmão após o nó atualmente selecionado.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="InsertAfter">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlWriter InsertAfter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlWriter InsertAfter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.InsertAfter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function InsertAfter () As XmlWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlWriter ^ InsertAfter();" />
      <MemberSignature Language="F#" Value="abstract member InsertAfter : unit -&gt; System.Xml.XmlWriter&#xA;override this.InsertAfter : unit -&gt; System.Xml.XmlWriter" Usage="xPathNavigator.InsertAfter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retorna um objeto <see cref="T:System.Xml.XmlWriter" /> usado para criar um novo nó irmão após o nó atualmente selecionado.</summary>
        <returns>Um objeto <see cref="T:System.Xml.XmlWriter" /> usado para criar um novo nó irmão após o nó atualmente selecionado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 As seguintes são notas importantes a considerar ao usar o <xref:System.Xml.XPath.XPathNavigator.InsertAfter%2A> método.  
  
-   O novo nó irmão não é inserido até que o <xref:System.Xml.XmlWriter.Close%2A> método da <xref:System.Xml.XmlWriter> objeto é chamado.  
  
-   O <xref:System.Xml.XPath.XPathNavigator.InsertAfter%2A> método é válido somente quando o <xref:System.Xml.XPath.XPathNavigator> está posicionado em um elemento, texto, instrução de processamento ou nó de comentário.  
  
-   O <xref:System.Xml.XPath.XPathNavigator.InsertAfter%2A> método não afeta a posição do <xref:System.Xml.XPath.XPathNavigator>.  
  
   
  
## Examples  
 No exemplo a seguir, uma nova `pages` elemento é inserido após o `price` elemento filho do primeiro `book` elemento no `contosoBooks.xml` de arquivos usando o a <xref:System.Xml.XmlWriter> objeto retornado pelo <xref:System.Xml.XPath.XPathNavigator.InsertAfter%2A> método.  
  
 [!code-cpp[XPathNavigatorMethods#14](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#14)]
 [!code-csharp[XPathNavigatorMethods#14](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#14)]
 [!code-vb[XPathNavigatorMethods#14](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#14)]  
  
 O exemplo usa o arquivo `contosoBooks.xml` como entrada.  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>  
<bookstore xmlns="http://www.contoso.com/books">  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">A posição do <see cref="T:System.Xml.XPath.XPathNavigator" /> não permite que um novo nó irmão seja inserido após o nó atual.</exception>
        <exception cref="T:System.NotSupportedException">O <see cref="T:System.Xml.XPath.XPathNavigator" /> não dá suporte à edição.</exception>
      </Docs>
    </Member>
    <Member MemberName="InsertAfter">
      <MemberSignature Language="C#" Value="public virtual void InsertAfter (string newSibling);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertAfter(string newSibling) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.InsertAfter(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub InsertAfter (newSibling As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InsertAfter(System::String ^ newSibling);" />
      <MemberSignature Language="F#" Value="abstract member InsertAfter : string -&gt; unit&#xA;override this.InsertAfter : string -&gt; unit" Usage="xPathNavigator.InsertAfter newSibling" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newSibling" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="newSibling">A cadeia de dados XML para o novo nó irmão.</param>
        <summary>Cria um novo nó irmão após o nó atualmente selecionado, usando a cadeia de caracteres XML especificada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para criar um novo nó de elemento, inclua toda a sintaxe XML no parâmetro de cadeia de caracteres de XML. A cadeia de caracteres para um novo `book` nó é `InsertAfter("<book/>")`. A cadeia de caracteres para inserir o texto "livro" depois que o nó de texto do nó atual for `InsertAfter("book")`. Se a cadeia de caracteres XML contiver vários nós, todos os nós são adicionados.  
  
 As seguintes são notas importantes a considerar ao usar o <xref:System.Xml.XPath.XPathNavigator.InsertAfter%2A> método.  
  
-   O <xref:System.Xml.XPath.XPathNavigator.InsertAfter%2A> método é válido somente quando o <xref:System.Xml.XPath.XPathNavigator> está posicionado em um elemento, texto, instrução de processamento ou nó de comentário.  
  
-   O <xref:System.Xml.XPath.XPathNavigator.InsertAfter%2A> método não afeta a posição do <xref:System.Xml.XPath.XPathNavigator>.  
  
   
  
## Examples  
 No exemplo a seguir, uma nova `pages` elemento é inserido após o `price` elemento filho do primeiro `book` elemento no `contosoBooks.xml` arquivo.  
  
 [!code-cpp[XPathNavigatorMethods#15](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#15)]
 [!code-csharp[XPathNavigatorMethods#15](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#15)]
 [!code-vb[XPathNavigatorMethods#15](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#15)]  
  
 O exemplo usa o arquivo `contosoBooks.xml` como entrada.  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>  
<bookstore xmlns="http://www.contoso.com/books">  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">O parâmetro da cadeia de caracteres XML é <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">A posição do <see cref="T:System.Xml.XPath.XPathNavigator" /> não permite que um novo nó irmão seja inserido após o nó atual.</exception>
        <exception cref="T:System.NotSupportedException">O <see cref="T:System.Xml.XPath.XPathNavigator" /> não dá suporte à edição.</exception>
        <exception cref="T:System.Xml.XmlException">O parâmetro da cadeia de caracteres XML não está bem formado.</exception>
      </Docs>
    </Member>
    <Member MemberName="InsertAfter">
      <MemberSignature Language="C#" Value="public virtual void InsertAfter (System.Xml.XmlReader newSibling);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertAfter(class System.Xml.XmlReader newSibling) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.InsertAfter(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub InsertAfter (newSibling As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InsertAfter(System::Xml::XmlReader ^ newSibling);" />
      <MemberSignature Language="F#" Value="abstract member InsertAfter : System.Xml.XmlReader -&gt; unit&#xA;override this.InsertAfter : System.Xml.XmlReader -&gt; unit" Usage="xPathNavigator.InsertAfter newSibling" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newSibling" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="newSibling">Um objeto <see cref="T:System.Xml.XmlReader" /> posicionado nos dados XML para o novo nó irmão.</param>
        <summary>Cria um novo nó irmão após o nó atualmente selecionado, usando o conteúdo XML do objeto <see cref="T:System.Xml.XmlReader" /> especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 As seguintes são notas importantes a considerar ao usar o <xref:System.Xml.XPath.XPathNavigator.InsertAfter%2A> método.  
  
-   Se o <xref:System.Xml.XmlReader> objeto está posicionado em uma sequência de nós XML, todos os nós na sequência são adicionados.  
  
-   O <xref:System.Xml.XPath.XPathNavigator.InsertAfter%2A> método é válido somente quando o <xref:System.Xml.XPath.XPathNavigator> está posicionado em um elemento, texto, instrução de processamento ou nó de comentário.  
  
-   O <xref:System.Xml.XPath.XPathNavigator.InsertAfter%2A> método não afeta a posição do <xref:System.Xml.XPath.XPathNavigator>.  
  
   
  
## Examples  
 No exemplo a seguir, um novo `pages` elemento é inserido após o `price` elemento filho do primeiro `book` elemento no `contosoBooks.xml` arquivo usando o <xref:System.Xml.XmlReader> objeto especificado. O `http://www.contoso.com/books` namespace for especificado para que o novo elemento irmão é inserido usando o mesmo namespace do documento XML.  
  
 [!code-cpp[XPathNavigatorMethods#16](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#16)]
 [!code-csharp[XPathNavigatorMethods#16](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#16)]
 [!code-vb[XPathNavigatorMethods#16](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#16)]  
  
 O exemplo usa o arquivo `contosoBooks.xml` como entrada.  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>  
<bookstore xmlns="http://www.contoso.com/books">  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">O objeto <see cref="T:System.Xml.XmlReader" /> está em um estado de erro ou fechado.</exception>
        <exception cref="T:System.ArgumentNullException">O parâmetro do objeto <see cref="T:System.Xml.XmlReader" /> é <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">A posição do <see cref="T:System.Xml.XPath.XPathNavigator" /> não permite que um novo nó irmão seja inserido após o nó atual.</exception>
        <exception cref="T:System.NotSupportedException">O <see cref="T:System.Xml.XPath.XPathNavigator" /> não dá suporte à edição.</exception>
        <exception cref="T:System.Xml.XmlException">O conteúdo XML do parâmetro de objeto <see cref="T:System.Xml.XmlReader" /> não está bem formado.</exception>
      </Docs>
    </Member>
    <Member MemberName="InsertAfter">
      <MemberSignature Language="C#" Value="public virtual void InsertAfter (System.Xml.XPath.XPathNavigator newSibling);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertAfter(class System.Xml.XPath.XPathNavigator newSibling) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.InsertAfter(System.Xml.XPath.XPathNavigator)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub InsertAfter (newSibling As XPathNavigator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InsertAfter(System::Xml::XPath::XPathNavigator ^ newSibling);" />
      <MemberSignature Language="F#" Value="abstract member InsertAfter : System.Xml.XPath.XPathNavigator -&gt; unit&#xA;override this.InsertAfter : System.Xml.XPath.XPathNavigator -&gt; unit" Usage="xPathNavigator.InsertAfter newSibling" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newSibling" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <param name="newSibling">Um objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> posicionado no nó a ser adicionado como o novo nó irmão.</param>
        <summary>Cria um novo nó irmão após o nó atualmente selecionado usando os nós do objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 As seguintes são notas importantes a considerar ao usar o <xref:System.Xml.XPath.XPathNavigator.InsertAfter%2A> método.  
  
-   Se o <xref:System.Xml.XmlReader> objeto está posicionado em uma sequência de nós XML, todos os nós na sequência são adicionados.  
  
-   O <xref:System.Xml.XPath.XPathNavigator.InsertAfter%2A> método é válido somente quando o <xref:System.Xml.XPath.XPathNavigator> está posicionado em um elemento, texto, instrução de processamento ou nó de comentário.  
  
-   O <xref:System.Xml.XPath.XPathNavigator.InsertAfter%2A> método não afeta a posição do <xref:System.Xml.XPath.XPathNavigator>.  
  
   
  
## Examples  
 No exemplo a seguir, uma nova `pages` elemento é inserido após o `price` elemento filho do primeiro `book` elemento no `contosoBooks.xml` de arquivos usando o nó contido no <xref:System.Xml.XPath.XPathNavigator> objeto especificado. O `http://www.contoso.com/books` namespace for especificado para que o novo elemento irmão é inserido usando o mesmo namespace do documento XML.  
  
 [!code-cpp[XPathNavigatorMethods#17](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#17)]
 [!code-csharp[XPathNavigatorMethods#17](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#17)]
 [!code-vb[XPathNavigatorMethods#17](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#17)]  
  
 O exemplo usa o arquivo `contosoBooks.xml` como entrada.  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>  
<bookstore xmlns="http://www.contoso.com/books">  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">O parâmetro do objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> é <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">A posição do <see cref="T:System.Xml.XPath.XPathNavigator" /> não permite que um novo nó irmão seja inserido após o nó atual.</exception>
        <exception cref="T:System.NotSupportedException">O <see cref="T:System.Xml.XPath.XPathNavigator" /> não dá suporte à edição.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="InsertBefore">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Cria um novo nó irmão antes do nó atualmente selecionado.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="InsertBefore">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlWriter InsertBefore ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlWriter InsertBefore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.InsertBefore" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function InsertBefore () As XmlWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlWriter ^ InsertBefore();" />
      <MemberSignature Language="F#" Value="abstract member InsertBefore : unit -&gt; System.Xml.XmlWriter&#xA;override this.InsertBefore : unit -&gt; System.Xml.XmlWriter" Usage="xPathNavigator.InsertBefore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retorna um objeto <see cref="T:System.Xml.XmlWriter" /> usado para criar um novo nó irmão antes do nó atualmente selecionado.</summary>
        <returns>Um objeto <see cref="T:System.Xml.XmlWriter" /> usado para criar um novo nó irmão antes do nó atualmente selecionado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 As seguintes são notas importantes a considerar ao usar o <xref:System.Xml.XPath.XPathNavigator.InsertBefore%2A> método.  
  
-   O novo nó irmão não é inserido até que o <xref:System.Xml.XmlWriter.Close%2A> método da <xref:System.Xml.XmlWriter> objeto é chamado.  
  
-   O <xref:System.Xml.XPath.XPathNavigator.InsertBefore%2A> método é válido somente quando o <xref:System.Xml.XPath.XPathNavigator> está posicionado em um elemento, texto, instrução de processamento ou nó de comentário.  
  
-   O <xref:System.Xml.XPath.XPathNavigator.InsertBefore%2A> método não afeta a posição do <xref:System.Xml.XPath.XPathNavigator>.  
  
   
  
## Examples  
 No exemplo a seguir, uma nova `pages` elemento é inserido antes do `price` elemento filho do primeiro `book` elemento no `contosoBooks.xml` de arquivos usando o a <xref:System.Xml.XmlWriter> objeto retornado pelo <xref:System.Xml.XPath.XPathNavigator.InsertBefore%2A> método.  
  
 [!code-cpp[XPathNavigatorMethods#18](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#18)]
 [!code-csharp[XPathNavigatorMethods#18](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#18)]
 [!code-vb[XPathNavigatorMethods#18](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#18)]  
  
 O exemplo usa o arquivo `contosoBooks.xml` como entrada.  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>  
<bookstore xmlns="http://www.contoso.com/books">  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">A posição do <see cref="T:System.Xml.XPath.XPathNavigator" /> não permite que um novo nó irmão seja inserido antes do nó atual.</exception>
        <exception cref="T:System.NotSupportedException">O <see cref="T:System.Xml.XPath.XPathNavigator" /> não dá suporte à edição.</exception>
      </Docs>
    </Member>
    <Member MemberName="InsertBefore">
      <MemberSignature Language="C#" Value="public virtual void InsertBefore (string newSibling);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertBefore(string newSibling) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.InsertBefore(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub InsertBefore (newSibling As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InsertBefore(System::String ^ newSibling);" />
      <MemberSignature Language="F#" Value="abstract member InsertBefore : string -&gt; unit&#xA;override this.InsertBefore : string -&gt; unit" Usage="xPathNavigator.InsertBefore newSibling" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newSibling" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="newSibling">A cadeia de dados XML para o novo nó irmão.</param>
        <summary>Cria um novo nó irmão antes do nó atualmente selecionado, usando a cadeia de caracteres XML especificada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para criar um novo nó de elemento, inclua toda a sintaxe XML no parâmetro de cadeia de caracteres de XML. A cadeia de caracteres para um novo `book` nó é `InsertBefore("<book/>")`. A cadeia de caracteres para inserir o livro"texto" antes do nó de texto do nó atual é `InsertBefore("book")`. Se a cadeia de caracteres XML contiver vários nós, todos os nós são adicionados.  
  
 As seguintes são notas importantes a considerar ao usar o <xref:System.Xml.XPath.XPathNavigator.InsertBefore%2A> método.  
  
-   O <xref:System.Xml.XPath.XPathNavigator.InsertBefore%2A> método é válido somente quando o <xref:System.Xml.XPath.XPathNavigator> está posicionado em um elemento, texto, instrução de processamento ou nó de comentário.  
  
-   O <xref:System.Xml.XPath.XPathNavigator.InsertBefore%2A> método não afeta a posição do <xref:System.Xml.XPath.XPathNavigator>.  
  
   
  
## Examples  
 No exemplo a seguir um novo elemento de `pages` é inserido antes que o elemento filho de `price` do primeiro elemento de `book` no arquivo de `contosoBooks.xml` .  
  
 [!code-cpp[XPathNavigatorMethods#19](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#19)]
 [!code-csharp[XPathNavigatorMethods#19](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#19)]
 [!code-vb[XPathNavigatorMethods#19](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#19)]  
  
 O exemplo usa o arquivo `contosoBooks.xml` como entrada.  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>  
<bookstore xmlns="http://www.contoso.com/books">  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">O parâmetro da cadeia de caracteres XML é <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">A posição do <see cref="T:System.Xml.XPath.XPathNavigator" /> não permite que um novo nó irmão seja inserido antes do nó atual.</exception>
        <exception cref="T:System.NotSupportedException">O <see cref="T:System.Xml.XPath.XPathNavigator" /> não dá suporte à edição.</exception>
        <exception cref="T:System.Xml.XmlException">O parâmetro da cadeia de caracteres XML não está bem formado.</exception>
      </Docs>
    </Member>
    <Member MemberName="InsertBefore">
      <MemberSignature Language="C#" Value="public virtual void InsertBefore (System.Xml.XmlReader newSibling);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertBefore(class System.Xml.XmlReader newSibling) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.InsertBefore(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub InsertBefore (newSibling As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InsertBefore(System::Xml::XmlReader ^ newSibling);" />
      <MemberSignature Language="F#" Value="abstract member InsertBefore : System.Xml.XmlReader -&gt; unit&#xA;override this.InsertBefore : System.Xml.XmlReader -&gt; unit" Usage="xPathNavigator.InsertBefore newSibling" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newSibling" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="newSibling">Um objeto <see cref="T:System.Xml.XmlReader" /> posicionado nos dados XML para o novo nó irmão.</param>
        <summary>Cria um novo nó irmão antes do nó atualmente selecionado, usando o conteúdo XML do objeto <see cref="T:System.Xml.XmlReader" /> especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 As seguintes são notas importantes a considerar ao usar o <xref:System.Xml.XPath.XPathNavigator.InsertBefore%2A> método.  
  
-   Se o <xref:System.Xml.XmlReader> objeto está posicionado em uma sequência de nós XML, todos os nós na sequência são adicionados.  
  
-   O <xref:System.Xml.XPath.XPathNavigator.InsertBefore%2A> método é válido somente quando o <xref:System.Xml.XPath.XPathNavigator> está posicionado em um elemento, texto, instrução de processamento ou nó de comentário.  
  
-   O <xref:System.Xml.XPath.XPathNavigator.InsertBefore%2A> método não afeta a posição do <xref:System.Xml.XPath.XPathNavigator>.  
  
   
  
## Examples  
 No exemplo a seguir, um novo `pages` elemento é inserido antes do `price` elemento filho do primeiro `book` elemento no `contosoBooks.xml` arquivo usando o <xref:System.Xml.XmlReader> objeto especificado. O `http://www.contoso.com/books` namespace for especificado para que o novo elemento irmão é inserido usando o mesmo namespace do documento XML.  
  
 [!code-cpp[XPathNavigatorMethods#20](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#20)]
 [!code-csharp[XPathNavigatorMethods#20](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#20)]
 [!code-vb[XPathNavigatorMethods#20](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#20)]  
  
 O exemplo usa o arquivo `contosoBooks.xml` como entrada.  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>  
<bookstore xmlns="http://www.contoso.com/books">  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">O objeto <see cref="T:System.Xml.XmlReader" /> está em um estado de erro ou fechado.</exception>
        <exception cref="T:System.ArgumentNullException">O parâmetro do objeto <see cref="T:System.Xml.XmlReader" /> é <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">A posição do <see cref="T:System.Xml.XPath.XPathNavigator" /> não permite que um novo nó irmão seja inserido antes do nó atual.</exception>
        <exception cref="T:System.NotSupportedException">O <see cref="T:System.Xml.XPath.XPathNavigator" /> não dá suporte à edição.</exception>
        <exception cref="T:System.Xml.XmlException">O conteúdo XML do parâmetro de objeto <see cref="T:System.Xml.XmlReader" /> não está bem formado.</exception>
      </Docs>
    </Member>
    <Member MemberName="InsertBefore">
      <MemberSignature Language="C#" Value="public virtual void InsertBefore (System.Xml.XPath.XPathNavigator newSibling);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertBefore(class System.Xml.XPath.XPathNavigator newSibling) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.InsertBefore(System.Xml.XPath.XPathNavigator)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub InsertBefore (newSibling As XPathNavigator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InsertBefore(System::Xml::XPath::XPathNavigator ^ newSibling);" />
      <MemberSignature Language="F#" Value="abstract member InsertBefore : System.Xml.XPath.XPathNavigator -&gt; unit&#xA;override this.InsertBefore : System.Xml.XPath.XPathNavigator -&gt; unit" Usage="xPathNavigator.InsertBefore newSibling" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newSibling" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <param name="newSibling">Um objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> posicionado no nó a ser adicionado como o novo nó irmão.</param>
        <summary>Cria um novo nó irmão antes do nó atualmente selecionado, usando os nós no <see cref="T:System.Xml.XPath.XPathNavigator" /> especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 As seguintes são notas importantes a considerar ao usar o <xref:System.Xml.XPath.XPathNavigator.InsertBefore%2A> método.  
  
-   Se o <xref:System.Xml.XPath.XPathNavigator> objeto está posicionado em uma sequência de nós XML, todos os nós na sequência são adicionados.  
  
-   O <xref:System.Xml.XPath.XPathNavigator.InsertBefore%2A> método é válido somente quando o <xref:System.Xml.XPath.XPathNavigator> está posicionado em um elemento, texto, instrução de processamento ou nó de comentário.  
  
-   O <xref:System.Xml.XPath.XPathNavigator.InsertBefore%2A> método não afeta a posição do <xref:System.Xml.XPath.XPathNavigator>.  
  
   
  
## Examples  
 No exemplo a seguir, uma nova `pages` elemento é inserido antes do `price` elemento filho do primeiro `book` elemento no `contosoBooks.xml` de arquivos usando o nó contido no <xref:System.Xml.XPath.XPathNavigator> objeto especificado. O `http://www.contoso.com/books` namespace for especificado para que o novo elemento irmão é inserido usando o mesmo namespace do documento XML.  
  
 [!code-cpp[XPathNavigatorMethods#21](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#21)]
 [!code-csharp[XPathNavigatorMethods#21](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#21)]
 [!code-vb[XPathNavigatorMethods#21](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#21)]  
  
 O exemplo usa o arquivo `contosoBooks.xml` como entrada.  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>  
<bookstore xmlns="http://www.contoso.com/books">  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">O parâmetro do objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> é <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">A posição do <see cref="T:System.Xml.XPath.XPathNavigator" /> não permite que um novo nó irmão seja inserido antes do nó atual.</exception>
        <exception cref="T:System.NotSupportedException">O <see cref="T:System.Xml.XPath.XPathNavigator" /> não dá suporte à edição.</exception>
      </Docs>
    </Member>
    <Member MemberName="InsertElementAfter">
      <MemberSignature Language="C#" Value="public virtual void InsertElementAfter (string prefix, string localName, string namespaceURI, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertElementAfter(string prefix, string localName, string namespaceURI, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.InsertElementAfter(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub InsertElementAfter (prefix As String, localName As String, namespaceURI As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InsertElementAfter(System::String ^ prefix, System::String ^ localName, System::String ^ namespaceURI, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member InsertElementAfter : string * string * string * string -&gt; unit&#xA;override this.InsertElementAfter : string * string * string * string -&gt; unit" Usage="xPathNavigator.InsertElementAfter (prefix, localName, namespaceURI, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">O prefixo de namespace do novo elemento filho (se houver).</param>
        <param name="localName">O nome local do novo elemento filho (se houver).</param>
        <param name="namespaceURI">O URI de namespace do novo elemento filho (se houver). <see cref="F:System.String.Empty" /> e <see langword="null" /> são equivalentes.</param>
        <param name="value">O valor do novo elemento filho. Se <see cref="F:System.String.Empty" /> ou <see langword="null" /> for passado, um elemento vazio será criado.</param>
        <summary>Cria um novo elemento irmão após o nó atual usando o prefixo de namespace, o nome local e o URI de namespace especificado, com o valor especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Prefixo de Namespace e os valores URI podem ser obtidas usando o <xref:System.Xml.XPath.XPathNavigator.LookupPrefix%2A> ou <xref:System.Xml.XPath.XPathNavigator.LookupNamespace%2A> método. Por exemplo, a sintaxe a seguir insere um elemento irmão usando o namespace no escopo `xmlns:bk="http://www.contoso.com/books"`:  
  
```csharp  
navigator.InsertElementAfter(navigator.Prefix, "pages", LookupNamespaceURI(navigator.Prefix), String.Empty)  
```  
  
 Isso cria o novo irmão `<bk:pages/>` elemento.  
  
 As seguintes são notas importantes a considerar ao usar o <xref:System.Xml.XPath.XPathNavigator.InsertElementAfter%2A> método.  
  
-   Se o prefixo de namespace especificado estiver `null` ou <xref:System.String.Empty?displayProperty=nameWithType>, em seguida, o prefixo do namespace URI do novo elemento é obtido de namespaces em-escopo atual. Se não houver nenhum prefixo de namespace atribuído ao URI no escopo atual de namespace especificado, um prefixo de namespace é gerado automaticamente.  
  
-   O <xref:System.Xml.XPath.XPathNavigator.InsertElementAfter%2A> método é válido somente quando o <xref:System.Xml.XPath.XPathNavigator> está posicionado em um elemento, texto, instrução de processamento ou nó de comentário.  
  
-   O <xref:System.Xml.XPath.XPathNavigator.InsertElementAfter%2A> método não afeta a posição do <xref:System.Xml.XPath.XPathNavigator>.  
  
   
  
## Examples  
 No exemplo a seguir, uma nova `pages` elemento é inserido após o `price` elemento filho do primeiro `book` elemento no `contosoBooks.xml` arquivo.  
  
 [!code-cpp[XPathNavigatorMethods#22](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#22)]
 [!code-csharp[XPathNavigatorMethods#22](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#22)]
 [!code-vb[XPathNavigatorMethods#22](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#22)]  
  
 O exemplo usa o arquivo `contosoBooks.xml` como entrada.  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>  
<bookstore xmlns="http://www.contoso.com/books">  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">A posição do <see cref="T:System.Xml.XPath.XPathNavigator" /> não permite que um novo nó irmão seja inserido após o nó atual.</exception>
        <exception cref="T:System.NotSupportedException">O <see cref="T:System.Xml.XPath.XPathNavigator" /> não dá suporte à edição.</exception>
      </Docs>
    </Member>
    <Member MemberName="InsertElementBefore">
      <MemberSignature Language="C#" Value="public virtual void InsertElementBefore (string prefix, string localName, string namespaceURI, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertElementBefore(string prefix, string localName, string namespaceURI, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.InsertElementBefore(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub InsertElementBefore (prefix As String, localName As String, namespaceURI As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InsertElementBefore(System::String ^ prefix, System::String ^ localName, System::String ^ namespaceURI, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member InsertElementBefore : string * string * string * string -&gt; unit&#xA;override this.InsertElementBefore : string * string * string * string -&gt; unit" Usage="xPathNavigator.InsertElementBefore (prefix, localName, namespaceURI, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">O prefixo de namespace do novo elemento filho (se houver).</param>
        <param name="localName">O nome local do novo elemento filho (se houver).</param>
        <param name="namespaceURI">O URI de namespace do novo elemento filho (se houver). <see cref="F:System.String.Empty" /> e <see langword="null" /> são equivalentes.</param>
        <param name="value">O valor do novo elemento filho. Se <see cref="F:System.String.Empty" /> ou <see langword="null" /> for passado, um elemento vazio será criado.</param>
        <summary>Cria um novo elemento irmão antes do nó atual usando o prefixo de namespace, o nome local e o URI de namespace especificado, com o valor especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Prefixo de Namespace e os valores URI podem ser obtidas usando o <xref:System.Xml.XPath.XPathNavigator.LookupPrefix%2A> ou <xref:System.Xml.XPath.XPathNavigator.LookupNamespace%2A> método. Por exemplo, a sintaxe a seguir insere um elemento irmão usando o namespace no escopo `xmlns:bk="http://www.contoso.com/books"`:  
  
```csharp  
navigator.InsertElementBefore(navigator.Prefix, "pages", LookupNamespaceURI(navigator.Prefix), String.Empty)  
```  
  
 Isso cria o novo irmão `<bk:pages/>` elemento.  
  
 As seguintes são notas importantes a considerar ao usar o <xref:System.Xml.XPath.XPathNavigator.InsertElementBefore%2A> método.  
  
-   Se o prefixo de namespace especificado estiver `null` ou <xref:System.String.Empty?displayProperty=nameWithType>, em seguida, o prefixo do namespace URI do novo elemento é obtido de namespaces em-escopo atual. Se não houver nenhum prefixo de namespace atribuído ao URI no escopo atual de namespace especificado, um prefixo de namespace é gerado automaticamente.  
  
-   O <xref:System.Xml.XPath.XPathNavigator.InsertElementBefore%2A> método é válido somente quando o <xref:System.Xml.XPath.XPathNavigator> está posicionado em um elemento, texto, instrução de processamento ou nó de comentário.  
  
-   O <xref:System.Xml.XPath.XPathNavigator.InsertElementBefore%2A> método não afeta a posição do <xref:System.Xml.XPath.XPathNavigator>.  
  
   
  
## Examples  
 No exemplo a seguir um novo elemento de `pages` é inserido antes que o elemento filho de `price` do primeiro elemento de `book` no arquivo de `contosoBooks.xml` .  
  
 [!code-cpp[XPathNavigatorMethods#23](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#23)]
 [!code-csharp[XPathNavigatorMethods#23](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#23)]
 [!code-vb[XPathNavigatorMethods#23](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#23)]  
  
 O exemplo usa o arquivo `contosoBooks.xml` como entrada.  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>  
<bookstore xmlns="http://www.contoso.com/books">  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">A posição do <see cref="T:System.Xml.XPath.XPathNavigator" /> não permite que um novo nó irmão seja inserido antes do nó atual.</exception>
        <exception cref="T:System.NotSupportedException">O <see cref="T:System.Xml.XPath.XPathNavigator" /> não dá suporte à edição.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsDescendant">
      <MemberSignature Language="C#" Value="public virtual bool IsDescendant (System.Xml.XPath.XPathNavigator nav);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsDescendant(class System.Xml.XPath.XPathNavigator nav) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.IsDescendant(System.Xml.XPath.XPathNavigator)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsDescendant (nav As XPathNavigator) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsDescendant(System::Xml::XPath::XPathNavigator ^ nav);" />
      <MemberSignature Language="F#" Value="abstract member IsDescendant : System.Xml.XPath.XPathNavigator -&gt; bool&#xA;override this.IsDescendant : System.Xml.XPath.XPathNavigator -&gt; bool" Usage="xPathNavigator.IsDescendant nav" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nav" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <param name="nav">O <see cref="T:System.Xml.XPath.XPathNavigator" /> para comparar com esse <see cref="T:System.Xml.XPath.XPathNavigator" />.</param>
        <summary>Determina se o <see cref="T:System.Xml.XPath.XPathNavigator" /> especificado é um descendente do <see cref="T:System.Xml.XPath.XPathNavigator" /> atual.</summary>
        <returns>
          <see langword="true" /> se o <see cref="T:System.Xml.XPath.XPathNavigator" /> especificado é um descendente do <see cref="T:System.Xml.XPath.XPathNavigator" /> atual; caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Uma <xref:System.Xml.XPath.XPathNavigator> é um descendente do atual <xref:System.Xml.XPath.XPathNavigator> se ele está posicionado em um nó descendente do atual <xref:System.Xml.XPath.XPathNavigator>. Veja, por exemplo, a seguinte cadeia de caracteres XML:  
  
 `<item><name>widget</name></item>`  
  
 Se atual <xref:System.Xml.XPath.XPathNavigator> é posicionado na `item` nó e o <xref:System.Xml.XPath.XPathNavigator> especificado está posicionado no `name` nó, <xref:System.Xml.XPath.XPathNavigator.IsDescendant%2A> retorna `true`.  
  
 Esse método sempre retorna `false` sob as seguintes condições:  
  
-   O <xref:System.Xml.XPath.XPathNavigator> compartilhamentos especificados, a mesma implementação, mas pontos em um documento diferente da instância que o navegador atual.  
  
-   O <xref:System.Xml.XPath.XPathNavigator> especificado tem uma implementação diferente do navegador atual.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEmptyElement">
      <MemberSignature Language="C#" Value="public abstract bool IsEmptyElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmptyElement" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XPath.XPathNavigator.IsEmptyElement" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsEmptyElement As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsEmptyElement { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEmptyElement : bool" Usage="System.Xml.XPath.XPathNavigator.IsEmptyElement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Quando substituído em uma classe derivada, obtém um valor que indica se o nó atual é um elemento vazio sem uma marca de elemento final.</summary>
        <value>
          <see langword="true" /> Se o nó atual é um elemento vazio; Caso contrário, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propriedade permite determinar a diferença entre os diferentes elementos a seguir.  
  
|Elemento|Valor de IsEmptyElement|  
|-------------|--------------------------|  
|`<item num="123"/>`|`true`|  
|`<item num="123">test</item>`|`false`|  
|`<item num="123"></item>`|`false`|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNode">
      <MemberSignature Language="C#" Value="public override sealed bool IsNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNode" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XPath.XPathNavigator.IsNode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable ReadOnly Property IsNode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNode { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNode : bool" Usage="System.Xml.XPath.XPathNavigator.IsNode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um valor que indica se o nó atual representa um nó de XPath.</summary>
        <value>Sempre retorna <see langword="true" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSamePosition">
      <MemberSignature Language="C#" Value="public abstract bool IsSamePosition (System.Xml.XPath.XPathNavigator other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSamePosition(class System.Xml.XPath.XPathNavigator other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.IsSamePosition(System.Xml.XPath.XPathNavigator)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function IsSamePosition (other As XPathNavigator) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool IsSamePosition(System::Xml::XPath::XPathNavigator ^ other);" />
      <MemberSignature Language="F#" Value="abstract member IsSamePosition : System.Xml.XPath.XPathNavigator -&gt; bool" Usage="xPathNavigator.IsSamePosition other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <param name="other">O <see cref="T:System.Xml.XPath.XPathNavigator" /> para comparar com esse <see cref="T:System.Xml.XPath.XPathNavigator" />.</param>
        <summary>Quando substituído em uma classe derivada, determina se o <see cref="T:System.Xml.XPath.XPathNavigator" /> atual está na mesma posição que o <see cref="T:System.Xml.XPath.XPathNavigator" /> especificado.</summary>
        <returns>
          <see langword="true" /> se dois objetos <see cref="T:System.Xml.XPath.XPathNavigator" /> tiverem a mesma posição; caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Xml.XPath.XPathNavigator.IsSamePosition%2A> método pressupõe que o <xref:System.Xml.XPath.XPathNavigator> especificado compartilha a mesma implementação e é pontos na mesma instância de documento atual <xref:System.Xml.XPath.XPathNavigator>.  
  
 Esse método sempre retorna `false` sob as seguintes condições:  
  
-   O <xref:System.Xml.XPath.XPathNavigator> compartilhamentos especificados, a mesma implementação, mas pontos em um documento diferente da instância que atual <xref:System.Xml.XPath.XPathNavigator>.  
  
-   O <xref:System.Xml.XPath.XPathNavigator> tem uma implementação diferente do atual <xref:System.Xml.XPath.XPathNavigator>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XPath.XPathNavigator.ComparePosition(System.Xml.XPath.XPathNavigator)" />
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public abstract string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XPath.XPathNavigator.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property LocalName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ LocalName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LocalName : string" Usage="System.Xml.XPath.XPathNavigator.LocalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Quando substituído em uma classe derivada, obtém o <see cref="P:System.Xml.XPath.XPathNavigator.Name" /> do nó atual sem nenhum prefixo de namespace.</summary>
        <value>Um <see cref="T:System.String" /> que contém o nome local do nó atual, ou <see cref="F:System.String.Empty" /> se o nó atual não tem um nome (por exemplo, nós de texto ou comentário).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O nome local retornado depende do <xref:System.Xml.XPath.XPathNodeType> do nó atual. Por exemplo, o nome local para o `<bk:book>` elemento é `book`.  
  
 A tabela a seguir lista o valor retornado pela <xref:System.Xml.XPath.XPathNavigator.LocalName%2A> propriedade, com base no <xref:System.Xml.XPath.XPathNodeType> do nó atual.  
  
|XPathNodeType|Valor de propriedade|  
|-------------------|--------------------|  
|<xref:System.Xml.XPath.XPathNodeType.Element>|O nome local do elemento.|  
|<xref:System.Xml.XPath.XPathNodeType.Attribute>|O nome local do atributo.|  
|<xref:System.Xml.XPath.XPathNodeType.Namespace>|O prefixo associado com o URI de namespace.|  
|<xref:System.Xml.XPath.XPathNodeType.ProcessingInstruction>|O destino da instrução de processamento.|  
|Todos os outros <xref:System.Xml.XPath.XPathNodeType> nós|<xref:System.String.Empty?displayProperty=nameWithType>.|  
  
   
  
## Examples  
 O exemplo a seguir itera em recursivamente o nó de árvore e exibe informações sobre <xref:System.Xml.XPath.XPathNodeType.Element> e <xref:System.Xml.XPath.XPathNodeType.Text> nós.  
  
 [!code-cpp[XPathNavigatorMethods#29](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#29)]
 [!code-csharp[XPathNavigatorMethods#29](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#29)]
 [!code-vb[XPathNavigatorMethods#29](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#29)]  
  
 O exemplo usa o arquivo `books.xml` como entrada.  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>   
<bookstore>  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.XPath.XPathNavigator.Name" />
        <altmember cref="P:System.Xml.XPath.XPathNavigator.Prefix" />
      </Docs>
    </Member>
    <Member MemberName="LookupNamespace">
      <MemberSignature Language="C#" Value="public virtual string LookupNamespace (string prefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string LookupNamespace(string prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.LookupNamespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LookupNamespace (prefix As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ LookupNamespace(System::String ^ prefix);" />
      <MemberSignature Language="F#" Value="abstract member LookupNamespace : string -&gt; string&#xA;override this.LookupNamespace : string -&gt; string" Usage="xPathNavigator.LookupNamespace prefix" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">O prefixo cujo URI de namespace você deseja resolver. Para corresponder o namespace padrão, passe <see cref="F:System.String.Empty" />.</param>
        <summary>Obtém o URI do namespace do prefixo especificado.</summary>
        <returns>Um <see cref="T:System.String" /> que contém o URI de namespace atribuído ao prefixo de namespace especificado; <see langword="null" /> se nenhum URI de namespace for atribuído ao prefixo especificado. A <see cref="T:System.String" /> retornada é atomizada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se <xref:System.String.Empty?displayProperty=nameWithType> é especificado como o `prefix` parâmetro, o namespace padrão atualmente atribuído URI é retornado. Se nenhum namespace padrão URI for explicitamente atribuída, e <xref:System.String.Empty?displayProperty=nameWithType> é especificado como o `prefix` parâmetro, o prefixo em branco é associado aos elementos que não estão em qualquer namespace, e <xref:System.String.Empty?displayProperty=nameWithType> é retornado.  
  
> [!NOTE]
>  O prefixo para mapeamentos de URI de namespace pode alterar de nó para nó em um documento XML. Como resultado, o valor da <xref:System.Xml.XPath.XPathNavigator.LookupNamespace%2A> método pode não ser consistente de um nó para o próximo.  
  
   
  
## Examples  
 Para obter um exemplo de <xref:System.Xml.XPath.XPathNavigator.LookupNamespace%2A> método, consulte a <xref:System.Xml.XPath.XPathNavigator.InsertElementAfter%2A> ou <xref:System.Xml.XPath.XPathNavigator.InsertElementBefore%2A> métodos.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupPrefix">
      <MemberSignature Language="C#" Value="public virtual string LookupPrefix (string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string LookupPrefix(string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.LookupPrefix(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LookupPrefix (namespaceURI As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ LookupPrefix(System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="abstract member LookupPrefix : string -&gt; string&#xA;override this.LookupPrefix : string -&gt; string" Usage="xPathNavigator.LookupPrefix namespaceURI" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="namespaceURI">O URI de namespace a ser resolvido para o prefixo.</param>
        <summary>Obtém o prefixo declarado para o URI de namespace especificado.</summary>
        <returns>Um <see cref="T:System.String" /> que contém o prefixo de namespace atribuído ao URI de namespace especificado; caso contrário, <see cref="F:System.String.Empty" /> se nenhum prefixo for atribuído ao URI de namespace especificado. A <see cref="T:System.String" /> retornada é atomizada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Xml.XPath.XPathNavigator.LookupPrefix%2A> método retorna o primeiro prefixo que corresponda ao URI de namespace especificado. Vários prefixos referindo-se ao mesmo namespace URI não são ordenados de alguma maneira específica, portanto, um prefixo específico não pode ser retornado sempre quando mais de um é atribuído.  
  
> [!NOTE]
>  URI de Namespace para mapeamentos de prefixo pode alterar de nó para nó em um documento XML. Como resultado, o valor da <xref:System.Xml.XPath.XPathNavigator.LookupPrefix%2A> método pode não ser consistente de um nó para o próximo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Matches">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Determina se o nó atual corresponde à expressão <see cref="N:System.Xml.XPath" /> especificada.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Matches">
      <MemberSignature Language="C#" Value="public virtual bool Matches (string xpath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Matches(string xpath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.Matches(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Matches (xpath As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Matches(System::String ^ xpath);" />
      <MemberSignature Language="F#" Value="abstract member Matches : string -&gt; bool&#xA;override this.Matches : string -&gt; bool" Usage="xPathNavigator.Matches xpath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xpath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xpath">A expressão XPath.</param>
        <summary>Determina se o nó atual corresponde à expressão XPath especificada.</summary>
        <returns>
          <see langword="true" /> se o nó atual corresponde à expressão XPath especificada; caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método não tem nenhum efeito sobre o estado do <xref:System.Xml.XPath.XPathNavigator>.  
  
   
  
## Examples  
 Para obter um exemplo de <xref:System.Xml.XPath.XPathNavigator.Matches%2A> método, consulte o <xref:System.Xml.XPath.XPathNavigator.Matches%2A?displayProperty=nameWithType> método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">A expressão XPath não pode ser avaliada.</exception>
        <exception cref="T:System.Xml.XPath.XPathException">A expressão XPath não é válida.</exception>
      </Docs>
    </Member>
    <Member MemberName="Matches">
      <MemberSignature Language="C#" Value="public virtual bool Matches (System.Xml.XPath.XPathExpression expr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Matches(class System.Xml.XPath.XPathExpression expr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.Matches(System.Xml.XPath.XPathExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Matches (expr As XPathExpression) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Matches(System::Xml::XPath::XPathExpression ^ expr);" />
      <MemberSignature Language="F#" Value="abstract member Matches : System.Xml.XPath.XPathExpression -&gt; bool&#xA;override this.Matches : System.Xml.XPath.XPathExpression -&gt; bool" Usage="xPathNavigator.Matches expr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expr" Type="System.Xml.XPath.XPathExpression" />
      </Parameters>
      <Docs>
        <param name="expr">Um objeto <see cref="T:System.Xml.XPath.XPathExpression" /> que contém a expressão XPath compilada.</param>
        <summary>Determina se o nó atual corresponde ao <see cref="T:System.Xml.XPath.XPathExpression" /> especificado.</summary>
        <returns>
          <see langword="true" /> se o nó atual corresponder à <see cref="T:System.Xml.XPath.XPathExpression" />; caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método não tem nenhum efeito sobre o estado do <xref:System.Xml.XPath.XPathNavigator>. Esse método é idêntico do <xref:System.Xml.XPath.XPathNavigator.Matches%2A?displayProperty=nameWithType> método, exceto que um <xref:System.Xml.XPath.XPathExpression> do objeto que contém a expressão XPath compilada é especificado, em vez de uma expressão XPath <xref:System.String>.  
  
   
  
## Examples  
 O exemplo a seguir exibe os títulos de todos os romances.  
  
 [!code-cpp[XPathNavigatorMethods#24](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#24)]
 [!code-csharp[XPathNavigatorMethods#24](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#24)]
 [!code-vb[XPathNavigatorMethods#24](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#24)]  
  
 O exemplo usa o arquivo `books.xml`, como entrada.  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>   
<bookstore>  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">A expressão XPath não pode ser avaliada.</exception>
        <exception cref="T:System.Xml.XPath.XPathException">A expressão XPath não é válida.</exception>
      </Docs>
    </Member>
    <Member MemberName="MoveTo">
      <MemberSignature Language="C#" Value="public abstract bool MoveTo (System.Xml.XPath.XPathNavigator other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveTo(class System.Xml.XPath.XPathNavigator other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.MoveTo(System.Xml.XPath.XPathNavigator)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function MoveTo (other As XPathNavigator) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool MoveTo(System::Xml::XPath::XPathNavigator ^ other);" />
      <MemberSignature Language="F#" Value="abstract member MoveTo : System.Xml.XPath.XPathNavigator -&gt; bool" Usage="xPathNavigator.MoveTo other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <param name="other">O <see cref="T:System.Xml.XPath.XPathNavigator" /> posicionado no nó para o qual você deseja mover.</param>
        <summary>Quando substituído em uma classe derivada, move o <see cref="T:System.Xml.XPath.XPathNavigator" /> para a mesma posição que o <see cref="T:System.Xml.XPath.XPathNavigator" /> especificado.</summary>
        <returns>Retorna <see langword="true" /> se o <see cref="T:System.Xml.XPath.XPathNavigator" /> for bem-sucedido na movimentação para a mesma posição que o <see cref="T:System.Xml.XPath.XPathNavigator" /> especificado, caso contrário, <see langword="false" />. Se for <see langword="false" />, a posição do <see cref="T:System.Xml.XPath.XPathNavigator" /> permanecerá inalterada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método sempre retorna `true` se o <xref:System.Xml.XPath.XPathNavigator> especificado é um <xref:System.Xml.XPath.XPathNavigator> que compartilha os mesmos pontos na mesma instância de documento atual e implementação <xref:System.Xml.XPath.XPathNavigator>.  
  
 Esse método sempre retorna `false` se o <xref:System.Xml.XPath.XPathNavigator> especificado é um <xref:System.Xml.XPath.XPathNavigator> que tem uma implementação diferente do atual <xref:System.Xml.XPath.XPathNavigator>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveToAttribute">
      <MemberSignature Language="C#" Value="public virtual bool MoveToAttribute (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveToAttribute(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.MoveToAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MoveToAttribute (localName As String, namespaceURI As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MoveToAttribute(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="abstract member MoveToAttribute : string * string -&gt; bool&#xA;override this.MoveToAttribute : string * string -&gt; bool" Usage="xPathNavigator.MoveToAttribute (localName, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">O nome local do atributo.</param>
        <param name="namespaceURI">O URI de namespace do atributo, <see langword="null" /> para um namespace vazio.</param>
        <summary>Move o <see cref="T:System.Xml.XPath.XPathNavigator" /> para o atributo com o URI do namespace e o nome local correspondentes.</summary>
        <returns>Retorna <see langword="true" /> se <see cref="T:System.Xml.XPath.XPathNavigator" /> tiver êxito na movimentação para o atributo, caso contrário, <see langword="false" />. Se for <see langword="false" />, a posição do <see cref="T:System.Xml.XPath.XPathNavigator" /> permanecerá inalterada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se o <xref:System.Xml.XPath.XPathNavigator> não estiver atualmente posicionado em um elemento, esse método retornará `false`.  
  
 Após uma chamada bem-sucedida para <xref:System.Xml.XPath.XPathNavigator.MoveToAttribute%2A>, o <xref:System.Xml.XPath.XPathNavigator.LocalName%2A>, <xref:System.Xml.XPath.XPathNavigator.NamespaceURI%2A> e <xref:System.Xml.XPath.XPathNavigator.Prefix%2A> propriedades refletem os valores do atributo. Quando o <xref:System.Xml.XPath.XPathNavigator> está posicionado em um atributo, os métodos <xref:System.Xml.XPath.XPathNavigator.MoveToNext%2A>, <xref:System.Xml.XPath.XPathNavigator.MoveToPrevious%2A>, e <xref:System.Xml.XPath.XPathNavigator.MoveToFirst%2A> não são aplicáveis. Esses métodos sempre retornam `false` e não alterar a posição do navegador. Em vez disso, você pode chamar <xref:System.Xml.XPath.XPathNavigator.MoveToNextAttribute%2A> para mover para o próximo nó de atributo.  
  
 Quando posicionado em um atributo, você pode chamar <xref:System.Xml.XPath.XPathNavigator.MoveToParent%2A> para mover para o elemento do proprietário.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XPath.XPathNavigator.MoveToFirstAttribute" />
        <altmember cref="M:System.Xml.XPath.XPathNavigator.MoveToNextAttribute" />
        <altmember cref="M:System.Xml.XPath.XPathNavigator.GetAttribute(System.String,System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="MoveToChild">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Move o <see cref="T:System.Xml.XPath.XPathNavigator" /> para o nó filho especificado.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MoveToChild">
      <MemberSignature Language="C#" Value="public virtual bool MoveToChild (System.Xml.XPath.XPathNodeType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveToChild(valuetype System.Xml.XPath.XPathNodeType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.MoveToChild(System.Xml.XPath.XPathNodeType)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MoveToChild (type As XPathNodeType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MoveToChild(System::Xml::XPath::XPathNodeType type);" />
      <MemberSignature Language="F#" Value="abstract member MoveToChild : System.Xml.XPath.XPathNodeType -&gt; bool&#xA;override this.MoveToChild : System.Xml.XPath.XPathNodeType -&gt; bool" Usage="xPathNavigator.MoveToChild type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Xml.XPath.XPathNodeType" />
      </Parameters>
      <Docs>
        <param name="type">O <see cref="T:System.Xml.XPath.XPathNodeType" /> do nó filho para o qual mover.</param>
        <summary>Move o <see cref="T:System.Xml.XPath.XPathNavigator" /> para o nó filho do <see cref="T:System.Xml.XPath.XPathNodeType" /> especificado.</summary>
        <returns>Retorna <see langword="true" /> se <see cref="T:System.Xml.XPath.XPathNavigator" /> tiver êxito na movimentação para o nó filho; caso contrário, <see langword="false" />. Se for <see langword="false" />, a posição do <see cref="T:System.Xml.XPath.XPathNavigator" /> permanecerá inalterada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O valor de retorno a <xref:System.Xml.XPath.XPathNavigator.MoveToChild%2A> depende do método de <xref:System.Xml.XPath.XPathNodeType> do nó atual e o <xref:System.Xml.XPath.XPathNodeType> do nó filho para mover para.  
  
 A tabela a seguir mostra os diferentes <xref:System.Xml.XPath.XPathNodeType> nós e os nós filho podem mover para.  
  
|XPathNodeType do nó atual|XPathNodeType filho do nó|  
|----------------------------------|--------------------------------|  
|<xref:System.Xml.XPath.XPathNodeType.Root>|<xref:System.Xml.XPath.XPathNodeType.Element>, <xref:System.Xml.XPath.XPathNodeType.ProcessingInstruction>, <xref:System.Xml.XPath.XPathNodeType.Comment> ou <xref:System.Xml.XPath.XPathNodeType.Text>.|  
|<xref:System.Xml.XPath.XPathNodeType.Element>|<xref:System.Xml.XPath.XPathNodeType.Element>, <xref:System.Xml.XPath.XPathNodeType.ProcessingInstruction>, <xref:System.Xml.XPath.XPathNodeType.Comment> ou <xref:System.Xml.XPath.XPathNodeType.Text>.|  
|Todos os outros <xref:System.Xml.XPath.XPathNodeType> valores|nenhuma.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveToChild">
      <MemberSignature Language="C#" Value="public virtual bool MoveToChild (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveToChild(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.MoveToChild(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MoveToChild (localName As String, namespaceURI As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MoveToChild(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="abstract member MoveToChild : string * string -&gt; bool&#xA;override this.MoveToChild : string * string -&gt; bool" Usage="xPathNavigator.MoveToChild (localName, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">O nome local do nó filho para o qual mover.</param>
        <param name="namespaceURI">O URI do namespace do nó filho para o qual mover.</param>
        <summary>Move o <see cref="T:System.Xml.XPath.XPathNavigator" /> para o nó filho com o nome local e o URI do namespace especificado.</summary>
        <returns>Retorna <see langword="true" /> se <see cref="T:System.Xml.XPath.XPathNavigator" /> tiver êxito na movimentação para o nó filho; caso contrário, <see langword="false" />. Se for <see langword="false" />, a posição do <see cref="T:System.Xml.XPath.XPathNavigator" /> permanecerá inalterada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Para obter um exemplo de <xref:System.Xml.XPath.XPathNavigator.MoveToChild%2A> método, consulte o <xref:System.Xml.XPath.XPathNavigator.AppendChild%2A> método.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveToFirst">
      <MemberSignature Language="C#" Value="public virtual bool MoveToFirst ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveToFirst() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.MoveToFirst" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MoveToFirst () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MoveToFirst();" />
      <MemberSignature Language="F#" Value="abstract member MoveToFirst : unit -&gt; bool&#xA;override this.MoveToFirst : unit -&gt; bool" Usage="xPathNavigator.MoveToFirst " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Move <see cref="T:System.Xml.XPath.XPathNavigator" /> ao primeiro nó irmãos do nó atual.</summary>
        <returns>Retorna <see langword="true" /> se o <see cref="T:System.Xml.XPath.XPathNavigator" /> tiver êxito na movimentação para o primeiro nó irmão do nó atual; <see langword="false" /> se não houver primeiro irmão ou se o <see cref="T:System.Xml.XPath.XPathNavigator" /> estiver atualmente posicionado em um nó de atributo. Se o <see cref="T:System.Xml.XPath.XPathNavigator" /> já estiver posicionado no primeiro irmão, <see cref="T:System.Xml.XPath.XPathNavigator" /> retornará <see langword="true" /> e não moverá sua posição.  
  
Se <see cref="M:System.Xml.XPath.XPathNavigator.MoveToFirst" /> retornar <see langword="false" /> porque não há primeiro irmão ou se <see cref="T:System.Xml.XPath.XPathNavigator" /> estiver atualmente posicionado em um atributo, a posição do <see cref="T:System.Xml.XPath.XPathNavigator" /> permanecerá inalterada.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Xml.XPath.XPathNavigator.MoveToNext" />
        <altmember cref="M:System.Xml.XPath.XPathNavigator.MoveToPrevious" />
      </Docs>
    </Member>
    <Member MemberName="MoveToFirstAttribute">
      <MemberSignature Language="C#" Value="public abstract bool MoveToFirstAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveToFirstAttribute() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.MoveToFirstAttribute" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function MoveToFirstAttribute () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool MoveToFirstAttribute();" />
      <MemberSignature Language="F#" Value="abstract member MoveToFirstAttribute : unit -&gt; bool" Usage="xPathNavigator.MoveToFirstAttribute " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Quando substituído em uma classe derivada, move o <see cref="T:System.Xml.XPath.XPathNavigator" /> para o primeiro atributo do nó atual.</summary>
        <returns>Retorna <see langword="true" /> se o <see cref="T:System.Xml.XPath.XPathNavigator" /> tiver êxito na movimentação para o primeiro atributo do nó atual; caso contrário, <see langword="false" />. Se for <see langword="false" />, a posição do <see cref="T:System.Xml.XPath.XPathNavigator" /> permanecerá inalterada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se o <xref:System.Xml.XPath.XPathNavigator> não estiver atualmente posicionado em um elemento, esse método retornará `false` e a posição do <xref:System.Xml.XPath.XPathNavigator> não é alterado.  
  
 Após uma chamada bem-sucedida para <xref:System.Xml.XPath.XPathNavigator.MoveToFirstAttribute%2A>, o <xref:System.Xml.XPath.XPathNavigator.LocalName%2A>, <xref:System.Xml.XPath.XPathNavigator.NamespaceURI%2A> e <xref:System.Xml.XPath.XPathNavigator.Prefix%2A> propriedades refletem os valores do atributo. Quando o <xref:System.Xml.XPath.XPathNavigator> está posicionado em um atributo, os métodos <xref:System.Xml.XPath.XPathNavigator.MoveToNext%2A>, <xref:System.Xml.XPath.XPathNavigator.MoveToPrevious%2A>, e <xref:System.Xml.XPath.XPathNavigator.MoveToFirst%2A> não são aplicáveis. Esses métodos sempre retornam `false` e não alterar a posição do <xref:System.Xml.XPath.XPathNavigator>. Em vez disso, você pode chamar <xref:System.Xml.XPath.XPathNavigator.MoveToNextAttribute%2A> para mover para o próximo nó de atributo.  
  
 Após o <xref:System.Xml.XPath.XPathNavigator> está posicionado em um atributo, você pode chamar <xref:System.Xml.XPath.XPathNavigator.MoveToParent%2A> para mover para o elemento do proprietário.  
  
   
  
## Examples  
 O exemplo a seguir usa o <xref:System.Xml.XPath.XPathNavigator.MoveToFirstAttribute%2A> e <xref:System.Xml.XPath.XPathNavigator.MoveToNextAttribute%2A> métodos para exibir todos os atributos para cada livro `books.xml` arquivo.  
  
 [!code-cpp[XPathNavigatorMethods#49](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#49)]
 [!code-csharp[XPathNavigatorMethods#49](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#49)]
 [!code-vb[XPathNavigatorMethods#49](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#49)]  
  
 O exemplo usa o arquivo `books.xml` como entrada.  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>   
<bookstore>  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XPath.XPathNavigator.MoveToAttribute(System.String,System.String)" />
        <altmember cref="M:System.Xml.XPath.XPathNavigator.MoveToNextAttribute" />
        <altmember cref="M:System.Xml.XPath.XPathNavigator.GetAttribute(System.String,System.String)" />
        <altmember cref="P:System.Xml.XPath.XPathNavigator.HasAttributes" />
      </Docs>
    </Member>
    <Member MemberName="MoveToFirstChild">
      <MemberSignature Language="C#" Value="public abstract bool MoveToFirstChild ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveToFirstChild() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.MoveToFirstChild" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function MoveToFirstChild () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool MoveToFirstChild();" />
      <MemberSignature Language="F#" Value="abstract member MoveToFirstChild : unit -&gt; bool" Usage="xPathNavigator.MoveToFirstChild " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Quando substituído em uma classe derivada, move o <see cref="T:System.Xml.XPath.XPathNavigator" /> para o primeiro nó filho do nó atual.</summary>
        <returns>Retorna <see langword="true" /> se o <see cref="T:System.Xml.XPath.XPathNavigator" /> tiver êxito na movimentação para o primeiro nó filho do nó atual; caso contrário, <see langword="false" />. Se for <see langword="false" />, a posição do <see cref="T:System.Xml.XPath.XPathNavigator" /> permanecerá inalterada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.XPath.XPathNodeType.Root> e <xref:System.Xml.XPath.XPathNodeType.Element> são os únicos dois <xref:System.Xml.XPath.XPathNodeType> valores que podem ter filhos. Essa propriedade sempre retorna `false` para todos os outros <xref:System.Xml.XPath.XPathNodeType> tipos de nó.  
  
   
  
## Examples  
 Para obter um exemplo de <xref:System.Xml.XPath.XPathNavigator.MoveToFirstChild%2A> método, consulte o <xref:System.Xml.XPath.XPathNavigator.Clone%2A> método.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XPath.XPathNodeType" />
        <altmember cref="M:System.Xml.XPath.XPathNavigator.MoveToNext" />
        <altmember cref="M:System.Xml.XPath.XPathNavigator.MoveToParent" />
        <altmember cref="P:System.Xml.XPath.XPathNavigator.HasChildren" />
      </Docs>
    </Member>
    <MemberGroup MemberName="MoveToFirstNamespace">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Move o <see cref="T:System.Xml.XPath.XPathNavigator" /> para o primeiro nó de namespace do nó atual.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MoveToFirstNamespace">
      <MemberSignature Language="C#" Value="public bool MoveToFirstNamespace ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool MoveToFirstNamespace() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.MoveToFirstNamespace" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveToFirstNamespace () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool MoveToFirstNamespace();" />
      <MemberSignature Language="F#" Value="member this.MoveToFirstNamespace : unit -&gt; bool" Usage="xPathNavigator.MoveToFirstNamespace " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Move o <see cref="T:System.Xml.XPath.XPathNavigator" /> para o primeiro nó de namespace do nó atual.</summary>
        <returns>Retorna <see langword="true" /> se o <see cref="T:System.Xml.XPath.XPathNavigator" /> tiver êxito na movimentação para o primeiro nó de namespace; caso contrário, <see langword="false" />. Se for <see langword="false" />, a posição do <see cref="T:System.Xml.XPath.XPathNavigator" /> permanecerá inalterada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Os nós de namespace de retornos de classe de <xref:System.Xml.XPath.XPathNavigator> na ordem inversa do documento. Portanto, <xref:System.Xml.XPath.XPathNavigator.MoveToFirstNamespace%2A> move essencialmente ao último nó do namespace no escopo atual.  
  
 Após o <xref:System.Xml.XPath.XPathNavigator> foi movido para o nó de namespace, o <xref:System.Xml.XPath.XPathNavigator.Name%2A> propriedade reflete o nome do namespace.  
  
 Quando o <xref:System.Xml.XPath.XPathNavigator> está posicionado em um nó de namespace, os métodos <xref:System.Xml.XPath.XPathNavigator.MoveToNext%2A>, <xref:System.Xml.XPath.XPathNavigator.MoveToPrevious%2A>, e <xref:System.Xml.XPath.XPathNavigator.MoveToFirst%2A> não são aplicáveis. Esses métodos sempre retornam `false` e não alterar a posição do <xref:System.Xml.XPath.XPathNavigator>. Em vez disso, você pode chamar <xref:System.Xml.XPath.XPathNavigator.MoveToNextNamespace%2A> para mover para o próximo nó de namespace.  
  
 Após o <xref:System.Xml.XPath.XPathNavigator> está posicionado em um nó de namespace, chamada <xref:System.Xml.XPath.XPathNavigator.MoveToParent%2A> para mover de volta ao nó de elemento.  
  
 Para obter uma definição de nós de namespace, consulte a seção 5.4 da recomendação W3C XML Path Language (XPath) localizado em http://www.w3.org/TR/xpath#data-model.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XPath.XPathNavigator.MoveToNextNamespace" />
        <altmember cref="M:System.Xml.XPath.XPathNavigator.GetNamespace(System.String)" />
        <altmember cref="M:System.Xml.XPath.XPathNavigator.MoveToNamespace(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="MoveToFirstNamespace">
      <MemberSignature Language="C#" Value="public abstract bool MoveToFirstNamespace (System.Xml.XPath.XPathNamespaceScope namespaceScope);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveToFirstNamespace(valuetype System.Xml.XPath.XPathNamespaceScope namespaceScope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.MoveToFirstNamespace(System.Xml.XPath.XPathNamespaceScope)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function MoveToFirstNamespace (namespaceScope As XPathNamespaceScope) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool MoveToFirstNamespace(System::Xml::XPath::XPathNamespaceScope namespaceScope);" />
      <MemberSignature Language="F#" Value="abstract member MoveToFirstNamespace : System.Xml.XPath.XPathNamespaceScope -&gt; bool" Usage="xPathNavigator.MoveToFirstNamespace namespaceScope" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="namespaceScope" Type="System.Xml.XPath.XPathNamespaceScope" />
      </Parameters>
      <Docs>
        <param name="namespaceScope">Um valor <see cref="T:System.Xml.XPath.XPathNamespaceScope" /> que descreve o escopo do namespace.</param>
        <summary>Quando substituído em uma classe derivada, move o <see cref="T:System.Xml.XPath.XPathNavigator" /> para o primeiro nó de namespace que corresponde ao <see cref="T:System.Xml.XPath.XPathNamespaceScope" /> especificado.</summary>
        <returns>Retorna <see langword="true" /> se o <see cref="T:System.Xml.XPath.XPathNavigator" /> tiver êxito na movimentação para o primeiro nó de namespace; caso contrário, <see langword="false" />. Se for <see langword="false" />, a posição do <see cref="T:System.Xml.XPath.XPathNavigator" /> permanecerá inalterada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Os nós de namespace de retornos de classe de <xref:System.Xml.XPath.XPathNavigator> na ordem inversa do documento. Portanto, <xref:System.Xml.XPath.XPathNavigator.MoveToFirstNamespace%2A> move essencialmente ao último nó do namespace no escopo atual.  
  
 Usando o seguinte fragmento XML como um exemplo, se o <xref:System.Xml.XPath.XPathNavigator> é posicionado sobre a `data` nó, <xref:System.Xml.XPath.XPathNavigator.MoveToFirstNamespace%2A> se comporta da seguinte maneira.  
  
-   `MoveToFirstNamespace(XPathNamespaceScope.All)` Move para um dos seguintes nós de namespace: `xmlns:c='C'`, `xmlns:a='A2'`, `xmlns=''`, `xmlns:b='B'`, ou `xmlns:xml='http://www.w3.org/XML/1998/namespace'`.  
  
-   `MoveToFirstNamespace(XPathNamespaceScope.ExcludeXml)` Move para um dos seguintes nós de namespace: `xmlns:c='C'`, `xmlns:a='A2'`, `xmlns=''`, ou `xmlns:b='B'`.  
  
-   `MoveToFirstNamespace(XPathNamespaceScope.Local)` Move para o `xmlns:c='C'` nó.  
  
```xml  
<root xmlns='urn:default' xmlns:a='A1' xmlns:b='B'>  
    <item xmlns='' xmlns:a='A2'>  
        <data xmlns:c='C' />  
    </item>  
</root>  
```  
  
 Se o <xref:System.Xml.XPath.XPathNavigator> não estiver atualmente posicionado em um elemento, esse método retornará `false` e a posição do <xref:System.Xml.XPath.XPathNavigator> não é alterado. Após o <xref:System.Xml.XPath.XPathNavigator> foi movido para o nó de namespace, o <xref:System.Xml.XPath.XPathNavigator.Name%2A> propriedade reflete o nome do namespace.  
  
 Quando o <xref:System.Xml.XPath.XPathNavigator> está posicionado em um nó de namespace, os métodos <xref:System.Xml.XPath.XPathNavigator.MoveToNext%2A>, <xref:System.Xml.XPath.XPathNavigator.MoveToPrevious%2A>, e <xref:System.Xml.XPath.XPathNavigator.MoveToFirst%2A> não são aplicáveis. Esses métodos sempre retornam `false` e não alterar a posição do <xref:System.Xml.XPath.XPathNavigator>. Em vez disso, você pode chamar <xref:System.Xml.XPath.XPathNavigator.MoveToNextNamespace%2A> para mover para o próximo nó de namespace.  
  
 Após o <xref:System.Xml.XPath.XPathNavigator> está posicionado em um nó de namespace, chamada <xref:System.Xml.XPath.XPathNavigator.MoveToParent%2A> para mover de volta ao nó de elemento.  
  
 Para obter uma definição de nós de namespace, consulte a seção 5.4 da recomendação W3C XML Path Language (XPath) localizado em http://www.w3.org/TR/xpath#data-model.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XPath.XPathNavigator.MoveToNextNamespace" />
        <altmember cref="M:System.Xml.XPath.XPathNavigator.GetNamespace(System.String)" />
        <altmember cref="M:System.Xml.XPath.XPathNavigator.MoveToNamespace(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="MoveToFollowing">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Move <see cref="T:System.Xml.XPath.XPathNavigator" /> ao elemento especificado na ordem de documento.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MoveToFollowing">
      <MemberSignature Language="C#" Value="public virtual bool MoveToFollowing (System.Xml.XPath.XPathNodeType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveToFollowing(valuetype System.Xml.XPath.XPathNodeType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.MoveToFollowing(System.Xml.XPath.XPathNodeType)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MoveToFollowing (type As XPathNodeType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MoveToFollowing(System::Xml::XPath::XPathNodeType type);" />
      <MemberSignature Language="F#" Value="abstract member MoveToFollowing : System.Xml.XPath.XPathNodeType -&gt; bool&#xA;override this.MoveToFollowing : System.Xml.XPath.XPathNodeType -&gt; bool" Usage="xPathNavigator.MoveToFollowing type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Xml.XPath.XPathNodeType" />
      </Parameters>
      <Docs>
        <param name="type">O <see cref="T:System.Xml.XPath.XPathNodeType" /> do elemento. O <see cref="T:System.Xml.XPath.XPathNodeType" /> não pode ser <see cref="F:System.Xml.XPath.XPathNodeType.Attribute" /> ou <see cref="F:System.Xml.XPath.XPathNodeType.Namespace" />.</param>
        <summary>Move o <see cref="T:System.Xml.XPath.XPathNavigator" /> para o próximo elemento do <see cref="T:System.Xml.XPath.XPathNodeType" /> especificado na ordem do documento.</summary>
        <returns>
          <see langword="true" /> se o <see cref="T:System.Xml.XPath.XPathNavigator" /> foi movido com êxito; caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
-   O <xref:System.Xml.XPath.XPathNavigator.MoveToFollowing%2A> método não move para nós de atributo ou de namespace. Se o <xref:System.Xml.XPath.XPathNodeType> é o valor do parâmetro <xref:System.Xml.XPath.XPathNodeType.Attribute> ou <xref:System.Xml.XPath.XPathNodeType.Namespace>, o <xref:System.Xml.XPath.XPathNavigator.MoveToFollowing%2A> retorno do método `false` e a posição do <xref:System.Xml.XPath.XPathNavigator> é alterado.  
  
-   Se o <xref:System.Xml.XPath.XPathNavigator.MoveToFollowing%2A> retorn `false`, a posição do <xref:System.Xml.XPath.XPathNavigator> é alterado.  
  
   
  
## Examples  
 No exemplo a seguir, o <xref:System.Xml.XPath.XPathNavigator> é movido da raiz do `contosoBooks.xml` arquivo para o seguinte `bookstore` elemento.  
  
 [!code-cpp[XPathNavigatorMethods#25](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#25)]
 [!code-csharp[XPathNavigatorMethods#25](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#25)]
 [!code-vb[XPathNavigatorMethods#25](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#25)]  
  
 O exemplo usa o arquivo `contosoBooks.xml` como entrada.  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>  
<bookstore xmlns="http://www.contoso.com/books">  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveToFollowing">
      <MemberSignature Language="C#" Value="public virtual bool MoveToFollowing (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveToFollowing(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.MoveToFollowing(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MoveToFollowing (localName As String, namespaceURI As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MoveToFollowing(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="abstract member MoveToFollowing : string * string -&gt; bool&#xA;override this.MoveToFollowing : string * string -&gt; bool" Usage="xPathNavigator.MoveToFollowing (localName, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">O nome local do elemento.</param>
        <param name="namespaceURI">O URI do namespace do elemento.</param>
        <summary>Move o <see cref="T:System.Xml.XPath.XPathNavigator" /> para o elemento com o nome local e o URI do namespace especificado na ordem do documento.</summary>
        <returns>
          <see langword="true" /> se o <see cref="T:System.Xml.XPath.XPathNavigator" /> foi movido com êxito; caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se o <xref:System.Xml.XPath.XPathNavigator.MoveToFollowing%2A> retorn `false`, a posição do <xref:System.Xml.XPath.XPathNavigator> é alterado.  
  
   
  
## Examples  
 No exemplo a seguir, o <xref:System.Xml.XPath.XPathNavigator> é movido da raiz do `contosoBooks.xml` arquivo para o primeiro `price` elemento.  
  
 [!code-cpp[XPathNavigatorMethods#26](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#26)]
 [!code-csharp[XPathNavigatorMethods#26](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#26)]
 [!code-vb[XPathNavigatorMethods#26](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#26)]  
  
 O exemplo usa o arquivo `contosoBooks.xml` como entrada.  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>  
<bookstore xmlns="http://www.contoso.com/books">  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveToFollowing">
      <MemberSignature Language="C#" Value="public virtual bool MoveToFollowing (System.Xml.XPath.XPathNodeType type, System.Xml.XPath.XPathNavigator end);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveToFollowing(valuetype System.Xml.XPath.XPathNodeType type, class System.Xml.XPath.XPathNavigator end) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.MoveToFollowing(System.Xml.XPath.XPathNodeType,System.Xml.XPath.XPathNavigator)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MoveToFollowing (type As XPathNodeType, end As XPathNavigator) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MoveToFollowing(System::Xml::XPath::XPathNodeType type, System::Xml::XPath::XPathNavigator ^ end);" />
      <MemberSignature Language="F#" Value="abstract member MoveToFollowing : System.Xml.XPath.XPathNodeType * System.Xml.XPath.XPathNavigator -&gt; bool&#xA;override this.MoveToFollowing : System.Xml.XPath.XPathNodeType * System.Xml.XPath.XPathNavigator -&gt; bool" Usage="xPathNavigator.MoveToFollowing (type, end)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Xml.XPath.XPathNodeType" />
        <Parameter Name="end" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <param name="type">O <see cref="T:System.Xml.XPath.XPathNodeType" /> do elemento. O <see cref="T:System.Xml.XPath.XPathNodeType" /> não pode ser <see cref="F:System.Xml.XPath.XPathNodeType.Attribute" /> ou <see cref="F:System.Xml.XPath.XPathNodeType.Namespace" />.</param>
        <param name="end">O objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> posicionado no limite do elemento além do qual o <see cref="T:System.Xml.XPath.XPathNavigator" /> atual não passará ao procurar o elemento seguinte.</param>
        <summary>Move o <see cref="T:System.Xml.XPath.XPathNavigator" /> para o próximo elemento do <see cref="T:System.Xml.XPath.XPathNodeType" /> especificado, até o limite especificado, na ordem do documento.</summary>
        <returns>
          <see langword="true" /> se o <see cref="T:System.Xml.XPath.XPathNavigator" /> foi movido com êxito; caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
-   O <xref:System.Xml.XPath.XPathNavigator.MoveToFollowing%2A> método não move para nós de atributo ou de namespace. Se o <xref:System.Xml.XPath.XPathNodeType> é o valor do parâmetro <xref:System.Xml.XPath.XPathNodeType.Attribute> ou <xref:System.Xml.XPath.XPathNodeType.Namespace>, o <xref:System.Xml.XPath.XPathNavigator.MoveToFollowing%2A> retorno do método `false` e a posição do <xref:System.Xml.XPath.XPathNavigator> é alterado.  
  
-   Se o <xref:System.Xml.XPath.XPathNavigator> passado como um parâmetro de limite não está posicionado após a posição atual <xref:System.Xml.XPath.XPathNavigator> é ignorado.  
  
-   Se <xref:System.Xml.XPath.XPathNavigator> é passado como um parâmetro de limite `null` o próximo nó especificado <xref:System.Xml.XPath.XPathNodeType> está localizada na ordem do documento.  
  
-   O <xref:System.Xml.XPath.XPathNavigator.MoveToFollowing%2A> métodos não podem ser usados para mover a nós de atributo ou de namespace. Se o <xref:System.Xml.XPath.XPathNavigator> limite passado como um parâmetro é posicionado sobre um nó de atributo ou de namespace, ele é equivalente ao <xref:System.Xml.XPath.XPathNavigator> parâmetro de limite ter sido posicionado no primeiro nó filho do seu elemento pai. Isso garante que o elemento pai do nó de atributo ou de namespace que o <xref:System.Xml.XPath.XPathNavigator> parâmetro de limite é posicionado no podem ser correspondidos por esse método.  
  
-   Se o <xref:System.Xml.XPath.XPathNavigator.MoveToFollowing%2A> retorn `false`, a posição do <xref:System.Xml.XPath.XPathNavigator> é alterado.  
  
   
  
## Examples  
 No exemplo a seguir, o <xref:System.Xml.XPath.XPathNavigator> é movido da raiz do `contosoBooks.xml` arquivo para o seguinte `price` elemento. Um clone do <xref:System.Xml.XPath.XPathNavigator> objeto é feito usando o <xref:System.Xml.XPath.XPathNavigator.Clone%2A> método. Clonado <xref:System.Xml.XPath.XPathNavigator>, posicionado no `price` elemento, será usado como um limite. Alterações na posição do clonado <xref:System.Xml.XPath.XPathNavigator> não afetará o original <xref:System.Xml.XPath.XPathNavigator>. Original <xref:System.Xml.XPath.XPathNavigator> é movido de volta para a raiz do `contosoBooks.xml` de arquivos usando o <xref:System.Xml.XPath.XPathNavigator.MoveToRoot%2A> método. O título e o nome e sobrenome do autor são recuperados usando o <xref:System.Xml.XPath.XPathNavigator.MoveToFollowing%2A> método e uma <xref:System.Xml.XPath.XPathNodeType> de <xref:System.Xml.XPath.XPathNodeType.Text>. O <xref:System.Xml.XPath.XPathNavigator.MoveToFollowing%2A> método retornará true até o `price` limites do elemento é atingido.  
  
 [!code-cpp[XPathNavigatorMethods#27](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#27)]
 [!code-csharp[XPathNavigatorMethods#27](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#27)]
 [!code-vb[XPathNavigatorMethods#27](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#27)]  
  
 O exemplo usa o arquivo `contosoBooks.xml` como entrada.  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>  
<bookstore xmlns="http://www.contoso.com/books">  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveToFollowing">
      <MemberSignature Language="C#" Value="public virtual bool MoveToFollowing (string localName, string namespaceURI, System.Xml.XPath.XPathNavigator end);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveToFollowing(string localName, string namespaceURI, class System.Xml.XPath.XPathNavigator end) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.MoveToFollowing(System.String,System.String,System.Xml.XPath.XPathNavigator)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MoveToFollowing (localName As String, namespaceURI As String, end As XPathNavigator) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MoveToFollowing(System::String ^ localName, System::String ^ namespaceURI, System::Xml::XPath::XPathNavigator ^ end);" />
      <MemberSignature Language="F#" Value="abstract member MoveToFollowing : string * string * System.Xml.XPath.XPathNavigator -&gt; bool&#xA;override this.MoveToFollowing : string * string * System.Xml.XPath.XPathNavigator -&gt; bool" Usage="xPathNavigator.MoveToFollowing (localName, namespaceURI, end)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
        <Parameter Name="end" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <param name="localName">O nome local do elemento.</param>
        <param name="namespaceURI">O URI do namespace do elemento.</param>
        <param name="end">O objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> posicionado no limite do elemento além do qual o <see cref="T:System.Xml.XPath.XPathNavigator" /> atual não passará ao procurar o elemento seguinte.</param>
        <summary>Move o <see cref="T:System.Xml.XPath.XPathNavigator" /> para o elemento com o nome local e o URI do namespace especificado, até o limite especificado, na ordem do documento.</summary>
        <returns>
          <see langword="true" /> se o <see cref="T:System.Xml.XPath.XPathNavigator" /> foi movido com êxito; caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
-   Se o <xref:System.Xml.XPath.XPathNavigator> passado como um parâmetro de limite não está posicionado após a posição atual <xref:System.Xml.XPath.XPathNavigator> é ignorado.  
  
-   Se o <xref:System.Xml.XPath.XPathNavigator> parâmetro de limite é `null`, o seguinte elemento com o nome local e o URI do namespace especificado está localizado na ordem do documento.  
  
-   O <xref:System.Xml.XPath.XPathNavigator.MoveToFollowing%2A> métodos não podem ser usados para mover a nós de atributo ou de namespace. Se o <xref:System.Xml.XPath.XPathNavigator> limite passado como um parâmetro é posicionado sobre um nó de atributo ou de namespace, ele é equivalente ao <xref:System.Xml.XPath.XPathNavigator> parâmetro de limite ter sido posicionado no primeiro nó filho do seu elemento pai. Isso garante que o elemento pai do nó de atributo ou de namespace que o <xref:System.Xml.XPath.XPathNavigator> parâmetro de limite é posicionado no podem ser correspondidos por esse método.  
  
-   Se o <xref:System.Xml.XPath.XPathNavigator.MoveToFollowing%2A> retorn `false`, a posição do <xref:System.Xml.XPath.XPathNavigator> é alterado.  
  
   
  
## Examples  
 No exemplo a seguir, o <xref:System.Xml.XPath.XPathNavigator> é movido da raiz do `contosoBooks.xml` arquivo para o seguinte `book` elemento. Um clone do <xref:System.Xml.XPath.XPathNavigator> objeto é feito usando o <xref:System.Xml.XPath.XPathNavigator.Clone%2A> método e é movido do `book` elemento para o seguinte `first-name` elemento. Clonado <xref:System.Xml.XPath.XPathNavigator>, posicionado no `first-name` elemento, será usado como um limite. Alterações na posição do clonado <xref:System.Xml.XPath.XPathNavigator> não afetará o original <xref:System.Xml.XPath.XPathNavigator>. O original <xref:System.Xml.XPath.XPathNavigator> , em seguida, tenta mover para o seguinte `price` elemento usando o <xref:System.Xml.XPath.XPathNavigator.MoveToFollowing%2A> método com o limite é passado como um parâmetro. Essa movimentação falhará porque o seguinte `price` elemento está além do limite. O original <xref:System.Xml.XPath.XPathNavigator> , em seguida, tenta mover para o seguinte `title` elemento que é antes do limite usando o mesmo método e é bem-sucedida.  
  
 [!code-cpp[XPathNavigatorMethods#28](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#28)]
 [!code-csharp[XPathNavigatorMethods#28](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#28)]
 [!code-vb[XPathNavigatorMethods#28](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#28)]  
  
 O exemplo usa o arquivo `contosoBooks.xml` como entrada.  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>  
<bookstore xmlns="http://www.contoso.com/books">  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveToId">
      <MemberSignature Language="C#" Value="public abstract bool MoveToId (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveToId(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.MoveToId(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function MoveToId (id As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool MoveToId(System::String ^ id);" />
      <MemberSignature Language="F#" Value="abstract member MoveToId : string -&gt; bool" Usage="xPathNavigator.MoveToId id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">Um <see cref="T:System.String" /> que representa o valor da <c>ID</c> do nó ao qual você deseja mover.</param>
        <summary>Quando substituído em uma classe derivada, move para o nó que tem um atributo do tipo <c>ID</c> cujo valor corresponde ao <see cref="T:System.String" /> especificado.</summary>
        <returns>
          <see langword="true" /> se o <see cref="T:System.Xml.XPath.XPathNavigator" /> tiver êxito na movimentação; caso contrário, <see langword="false" />. Se for <see langword="false" />, a posição do navegador permanecerá inalterada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método pode ser usado para identificar nós por exclusivo `ID` desde que o documento de origem declara explicitamente os atributos do tipo `ID` usando uma DTD.  
  
 Por exemplo, suponha que os seguintes dados XML, `<data><x a="a1"/></data>`, foi carregada usando uma DTD que incluiu o seguinte: `<!ATTLIST x a ID #REQUIRED>`.  
  
 Se o <xref:System.Xml.XPath.XPathNavigator> foi posicionado em algum lugar nos dados XML, chamando `MoveToId("a1")` posições a <xref:System.Xml.XPath.XPathNavigator> no nó do elemento `x`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveToNamespace">
      <MemberSignature Language="C#" Value="public virtual bool MoveToNamespace (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveToNamespace(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.MoveToNamespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MoveToNamespace (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MoveToNamespace(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member MoveToNamespace : string -&gt; bool&#xA;override this.MoveToNamespace : string -&gt; bool" Usage="xPathNavigator.MoveToNamespace name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">O prefixo do namespace do nó de namespace.</param>
        <summary>Move o <see cref="T:System.Xml.XPath.XPathNavigator" /> para o nó de namespace com o prefixo de namespace especificado.</summary>
        <returns>
          <see langword="true" /> se o <see cref="T:System.Xml.XPath.XPathNavigator" /> tiver êxito na movimentação para o namespace especificado; <see langword="false" /> se um nó de namespace correspondente não for encontrado ou se o <see cref="T:System.Xml.XPath.XPathNavigator" /> não estiver posicionado em um nó de elemento. Se for <see langword="false" />, a posição do <see cref="T:System.Xml.XPath.XPathNavigator" /> permanecerá inalterada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Após o <xref:System.Xml.XPath.XPathNavigator> foi movido para o nó de namespace, o <xref:System.Xml.XPath.XPathNavigator.Name%2A> propriedade reflete o nome do namespace.  
  
 Quando o <xref:System.Xml.XPath.XPathNavigator> está posicionado em um nó de namespace, os métodos <xref:System.Xml.XPath.XPathNavigator.MoveToNext%2A>, <xref:System.Xml.XPath.XPathNavigator.MoveToPrevious%2A>, e <xref:System.Xml.XPath.XPathNavigator.MoveToFirst%2A> não são aplicáveis. Esses métodos sempre retornam `false` e não alterar a posição do <xref:System.Xml.XPath.XPathNavigator>. Em vez disso, você pode chamar <xref:System.Xml.XPath.XPathNavigator.MoveToNextNamespace%2A> para mover para o próximo nó de namespace.  
  
 Após o <xref:System.Xml.XPath.XPathNavigator> está posicionado em um nó de namespace, você pode chamar <xref:System.Xml.XPath.XPathNavigator.MoveToParent%2A> para mover de volta ao nó de elemento.  
  
 Para obter uma definição de nós de namespace, consulte a seção 5.4 da recomendação W3C XML Path Language (XPath) localizado em http://www.w3.org/TR/xpath#data-model.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XPath.XPathNavigator.MoveToNextNamespace" />
        <altmember cref="M:System.Xml.XPath.XPathNavigator.MoveToFirstNamespace" />
        <altmember cref="M:System.Xml.XPath.XPathNavigator.GetNamespace(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="MoveToNext">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Move <see cref="T:System.Xml.XPath.XPathNavigator" /> o nó seguir irmãos do nó atual.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MoveToNext">
      <MemberSignature Language="C#" Value="public abstract bool MoveToNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveToNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.MoveToNext" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function MoveToNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool MoveToNext();" />
      <MemberSignature Language="F#" Value="abstract member MoveToNext : unit -&gt; bool" Usage="xPathNavigator.MoveToNext " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Quando substituído em uma classe derivada, move o <see cref="T:System.Xml.XPath.XPathNavigator" /> para o próximo nó irmão do nó atual.</summary>
        <returns>
          <see langword="true" /> se o <see cref="T:System.Xml.XPath.XPathNavigator" /> tiver êxito na movimentação para o próximo nó irmão; caso contrário, <see langword="false" /> se não houver mais nenhum irmão ou se o <see cref="T:System.Xml.XPath.XPathNavigator" /> estiver atualmente posicionado em um nó de atributo. Se for <see langword="false" />, a posição do <see cref="T:System.Xml.XPath.XPathNavigator" /> permanecerá inalterada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir itera em recursivamente o nó de árvore e exibe informações sobre o elemento e nós de texto.  
  
 [!code-cpp[XPathNavigatorMethods#29](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#29)]
 [!code-csharp[XPathNavigatorMethods#29](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#29)]
 [!code-vb[XPathNavigatorMethods#29](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#29)]  
  
 O exemplo usa o arquivo `books.xml` como entrada.  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>   
<bookstore>  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XPath.XPathNavigator.MoveToPrevious" />
        <altmember cref="M:System.Xml.XPath.XPathNavigator.MoveToFirst" />
      </Docs>
    </Member>
    <Member MemberName="MoveToNext">
      <MemberSignature Language="C#" Value="public virtual bool MoveToNext (System.Xml.XPath.XPathNodeType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveToNext(valuetype System.Xml.XPath.XPathNodeType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.MoveToNext(System.Xml.XPath.XPathNodeType)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MoveToNext (type As XPathNodeType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MoveToNext(System::Xml::XPath::XPathNodeType type);" />
      <MemberSignature Language="F#" Value="abstract member MoveToNext : System.Xml.XPath.XPathNodeType -&gt; bool&#xA;override this.MoveToNext : System.Xml.XPath.XPathNodeType -&gt; bool" Usage="xPathNavigator.MoveToNext type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Xml.XPath.XPathNodeType" />
      </Parameters>
      <Docs>
        <param name="type">O <see cref="T:System.Xml.XPath.XPathNodeType" /> do nó irmão para movimentação.</param>
        <summary>Move o <see cref="T:System.Xml.XPath.XPathNavigator" /> para o próximo nó irmão do nó atual que corresponde ao <see cref="T:System.Xml.XPath.XPathNodeType" /> especificado.</summary>
        <returns>
          <see langword="true" /> se o <see cref="T:System.Xml.XPath.XPathNavigator" /> tiver êxito na movimentação para o próximo nó irmão; caso contrário, <see langword="false" /> se não houver mais nenhum irmão ou se o <see cref="T:System.Xml.XPath.XPathNavigator" /> estiver atualmente posicionado em um nó de atributo. Se for <see langword="false" />, a posição do <see cref="T:System.Xml.XPath.XPathNavigator" /> permanecerá inalterada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O valor de retorno a <xref:System.Xml.XPath.XPathNavigator.MoveToNext%2A> depende do método de <xref:System.Xml.XPath.XPathNodeType> do nó atual e o <xref:System.Xml.XPath.XPathNodeType> do próximo nó irmão para mover para.  
  
 A tabela a seguir mostra os diferentes <xref:System.Xml.XPath.XPathNodeType> nós e os nós irmãos podem mover para.  
  
|XPathNodeType do nó atual|XPathNodeType irmão do nó|  
|----------------------------------|----------------------------------|  
|<xref:System.Xml.XPath.XPathNodeType.Element>|<xref:System.Xml.XPath.XPathNodeType.Element>, <xref:System.Xml.XPath.XPathNodeType.ProcessingInstruction>, <xref:System.Xml.XPath.XPathNodeType.Comment> ou <xref:System.Xml.XPath.XPathNodeType.Text>.|  
|<xref:System.Xml.XPath.XPathNodeType.Text>|<xref:System.Xml.XPath.XPathNodeType.Element>, <xref:System.Xml.XPath.XPathNodeType.ProcessingInstruction>, <xref:System.Xml.XPath.XPathNodeType.Comment> ou <xref:System.Xml.XPath.XPathNodeType.Text>.|  
|<xref:System.Xml.XPath.XPathNodeType.ProcessingInstruction>|<xref:System.Xml.XPath.XPathNodeType.Element>, <xref:System.Xml.XPath.XPathNodeType.ProcessingInstruction>, <xref:System.Xml.XPath.XPathNodeType.Comment> ou <xref:System.Xml.XPath.XPathNodeType.Text>.|  
|<xref:System.Xml.XPath.XPathNodeType.Comment>|<xref:System.Xml.XPath.XPathNodeType.Element>, <xref:System.Xml.XPath.XPathNodeType.ProcessingInstruction>, <xref:System.Xml.XPath.XPathNodeType.Comment> ou <xref:System.Xml.XPath.XPathNodeType.Text>.|  
|Todos os outros <xref:System.Xml.XPath.XPathNodeType> valores|nenhuma.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveToNext">
      <MemberSignature Language="C#" Value="public virtual bool MoveToNext (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveToNext(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.MoveToNext(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MoveToNext (localName As String, namespaceURI As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MoveToNext(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="abstract member MoveToNext : string * string -&gt; bool&#xA;override this.MoveToNext : string * string -&gt; bool" Usage="xPathNavigator.MoveToNext (localName, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">O nome local do próximo nó irmão para o qual mover.</param>
        <param name="namespaceURI">O URI do namespace do próximo nó irmão para o qual mover.</param>
        <summary>Move o <see cref="T:System.Xml.XPath.XPathNavigator" /> para o próximo nó irmão com o nome local e o URI do namespace especificado.</summary>
        <returns>Retorna <see langword="true" /> se o <see cref="T:System.Xml.XPath.XPathNavigator" /> tiver êxito na movimentação para o próximo nó irmão; <see langword="false" /> se não houver mais nenhum irmão ou se o <see cref="T:System.Xml.XPath.XPathNavigator" /> estiver atualmente posicionado em um nó de atributo. Se for <see langword="false" />, a posição do <see cref="T:System.Xml.XPath.XPathNavigator" /> permanecerá inalterada.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveToNextAttribute">
      <MemberSignature Language="C#" Value="public abstract bool MoveToNextAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveToNextAttribute() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.MoveToNextAttribute" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function MoveToNextAttribute () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool MoveToNextAttribute();" />
      <MemberSignature Language="F#" Value="abstract member MoveToNextAttribute : unit -&gt; bool" Usage="xPathNavigator.MoveToNextAttribute " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Quando substituído em uma classe derivada, move o <see cref="T:System.Xml.XPath.XPathNavigator" /> para o atributo seguinte.</summary>
        <returns>Retorna <see langword="true" /> se o <see cref="T:System.Xml.XPath.XPathNavigator" /> tiver êxito na movimentação para o próximo atributo; <see langword="false" /> se não houver mais nenhum atributo. Se for <see langword="false" />, a posição do <see cref="T:System.Xml.XPath.XPathNavigator" /> permanecerá inalterada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se o <xref:System.Xml.XPath.XPathNavigator> não estiver atualmente posicionado em um atributo, este método retorna `false` e a posição do <xref:System.Xml.XPath.XPathNavigator> não é alterado.  
  
 Quando o <xref:System.Xml.XPath.XPathNavigator> está posicionado em um atributo, os métodos <xref:System.Xml.XPath.XPathNavigator.MoveToNext%2A>, <xref:System.Xml.XPath.XPathNavigator.MoveToPrevious%2A>, e <xref:System.Xml.XPath.XPathNavigator.MoveToFirst%2A> métodos não são aplicáveis. Esses métodos sempre retornam `false` e não alterar a posição do <xref:System.Xml.XPath.XPathNavigator>.  
  
 Após o <xref:System.Xml.XPath.XPathNavigator> está posicionado em um atributo, você pode chamar <xref:System.Xml.XPath.XPathNavigator.MoveToParent%2A> para mover para o elemento do proprietário.  
  
   
  
## Examples  
 O exemplo a seguir usa o <xref:System.Xml.XPath.XPathNavigator.MoveToFirstAttribute%2A> e <xref:System.Xml.XPath.XPathNavigator.MoveToNextAttribute%2A> métodos para exibir todos os atributos para cada livro `books.xml` arquivo.  
  
 [!code-cpp[XPathNavigatorMethods#49](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#49)]
 [!code-csharp[XPathNavigatorMethods#49](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#49)]
 [!code-vb[XPathNavigatorMethods#49](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#49)]  
  
 O exemplo usa o arquivo `books.xml` como entrada.  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>   
<bookstore>  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XPath.XPathNavigator.MoveToFirstAttribute" />
        <altmember cref="M:System.Xml.XPath.XPathNavigator.MoveToAttribute(System.String,System.String)" />
        <altmember cref="M:System.Xml.XPath.XPathNavigator.GetAttribute(System.String,System.String)" />
        <altmember cref="P:System.Xml.XPath.XPathNavigator.HasAttributes" />
      </Docs>
    </Member>
    <MemberGroup MemberName="MoveToNextNamespace">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Move o <see cref="T:System.Xml.XPath.XPathNavigator" /> para o próximo nó de namespace.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MoveToNextNamespace">
      <MemberSignature Language="C#" Value="public bool MoveToNextNamespace ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool MoveToNextNamespace() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.MoveToNextNamespace" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveToNextNamespace () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool MoveToNextNamespace();" />
      <MemberSignature Language="F#" Value="member this.MoveToNextNamespace : unit -&gt; bool" Usage="xPathNavigator.MoveToNextNamespace " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Move o <see cref="T:System.Xml.XPath.XPathNavigator" /> para o próximo nó de namespace.</summary>
        <returns>Retorna <see langword="true" /> se o <see cref="T:System.Xml.XPath.XPathNavigator" /> tiver êxito na movimentação para o próximo nó de namespace; caso contrário, <see langword="false" />. Se for <see langword="false" />, a posição do <see cref="T:System.Xml.XPath.XPathNavigator" /> permanecerá inalterada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Os nós de namespace de retornos de classe de <xref:System.Xml.XPath.XPathNavigator> na ordem inversa do documento. Portanto, <xref:System.Xml.XPath.XPathNavigator.MoveToNextNamespace%2A> essencialmente move para o nó de namespace acima do escopo atual.  
  
 Se o <xref:System.Xml.XPath.XPathNavigator> não estiver atualmente posicionado em um nó de namespace, esse método retornará `false` e a posição do <xref:System.Xml.XPath.XPathNavigator> não é alterado.  
  
 Quando o <xref:System.Xml.XPath.XPathNavigator> está posicionado em um nó de namespace, os métodos <xref:System.Xml.XPath.XPathNavigator.MoveToNext%2A>, <xref:System.Xml.XPath.XPathNavigator.MoveToPrevious%2A>, e <xref:System.Xml.XPath.XPathNavigator.MoveToFirst%2A> não são aplicáveis. Esses métodos sempre retornam `false` e não alterar a posição do <xref:System.Xml.XPath.XPathNavigator>.  
  
 Após o <xref:System.Xml.XPath.XPathNavigator> está posicionado em um nó de namespace, chamada <xref:System.Xml.XPath.XPathNavigator.MoveToParent%2A> para mover de volta ao nó de elemento.  
  
 Para obter uma definição de nós de namespace, consulte a seção 5.4 da recomendação W3C XML Path Language (XPath) localizado em http://www.w3.org/TR/xpath#data-model.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XPath.XPathNavigator.MoveToFirstNamespace" />
        <altmember cref="M:System.Xml.XPath.XPathNavigator.GetNamespace(System.String)" />
        <altmember cref="M:System.Xml.XPath.XPathNavigator.MoveToNamespace(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="MoveToNextNamespace">
      <MemberSignature Language="C#" Value="public abstract bool MoveToNextNamespace (System.Xml.XPath.XPathNamespaceScope namespaceScope);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveToNextNamespace(valuetype System.Xml.XPath.XPathNamespaceScope namespaceScope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.MoveToNextNamespace(System.Xml.XPath.XPathNamespaceScope)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function MoveToNextNamespace (namespaceScope As XPathNamespaceScope) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool MoveToNextNamespace(System::Xml::XPath::XPathNamespaceScope namespaceScope);" />
      <MemberSignature Language="F#" Value="abstract member MoveToNextNamespace : System.Xml.XPath.XPathNamespaceScope -&gt; bool" Usage="xPathNavigator.MoveToNextNamespace namespaceScope" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="namespaceScope" Type="System.Xml.XPath.XPathNamespaceScope" />
      </Parameters>
      <Docs>
        <param name="namespaceScope">Um valor <see cref="T:System.Xml.XPath.XPathNamespaceScope" /> que descreve o escopo do namespace.</param>
        <summary>Quando substituído em uma classe derivada, move o <see cref="T:System.Xml.XPath.XPathNavigator" /> para o próximo nó de namespace que corresponde ao <see cref="T:System.Xml.XPath.XPathNamespaceScope" /> especificado.</summary>
        <returns>Retorna <see langword="true" /> se o <see cref="T:System.Xml.XPath.XPathNavigator" /> tiver êxito na movimentação para o próximo nó de namespace; caso contrário, <see langword="false" />. Se for <see langword="false" />, a posição do <see cref="T:System.Xml.XPath.XPathNavigator" /> permanecerá inalterada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Os nós de namespace de retornos de classe de <xref:System.Xml.XPath.XPathNavigator> na ordem inversa do documento.  
  
 Se o <xref:System.Xml.XPath.XPathNavigator> não estiver atualmente posicionado em um nó de namespace, esse método retornará `false` e a posição do <xref:System.Xml.XPath.XPathNavigator> não é alterado.  
  
 Quando o <xref:System.Xml.XPath.XPathNavigator> está posicionado em um nó de namespace, os métodos <xref:System.Xml.XPath.XPathNavigator.MoveToNext%2A>, <xref:System.Xml.XPath.XPathNavigator.MoveToPrevious%2A>, e <xref:System.Xml.XPath.XPathNavigator.MoveToFirst%2A> não são aplicáveis. Esses métodos sempre retornam `false` e não alterar a posição do <xref:System.Xml.XPath.XPathNavigator>.  
  
 Após o <xref:System.Xml.XPath.XPathNavigator> está posicionado em um nó de namespace, chamada <xref:System.Xml.XPath.XPathNavigator.MoveToParent%2A> para mover de volta ao nó de elemento.  
  
 Para obter uma definição de nós de namespace, consulte a seção 5.4 da recomendação W3C XML Path Language (XPath) localizado em http://www.w3.org/TR/xpath#data-model.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XPath.XPathNavigator.MoveToFirstNamespace" />
        <altmember cref="M:System.Xml.XPath.XPathNavigator.GetNamespace(System.String)" />
        <altmember cref="M:System.Xml.XPath.XPathNavigator.MoveToNamespace(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="MoveToParent">
      <MemberSignature Language="C#" Value="public abstract bool MoveToParent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveToParent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.MoveToParent" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function MoveToParent () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool MoveToParent();" />
      <MemberSignature Language="F#" Value="abstract member MoveToParent : unit -&gt; bool" Usage="xPathNavigator.MoveToParent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Quando substituído em uma classe derivada, move o <see cref="T:System.Xml.XPath.XPathNavigator" /> para o nó pai do nó atual.</summary>
        <returns>Retornará <see langword="true" /> se o <see cref="T:System.Xml.XPath.XPathNavigator" /> for bem-sucedido ao mover para o nó pai do nó atual; caso contrário, <see langword="false" />. Se for <see langword="false" />, a posição do <see cref="T:System.Xml.XPath.XPathNavigator" /> permanecerá inalterada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O valor de retorno a <xref:System.Xml.XPath.XPathNavigator.MoveToParent%2A> depende do método de <xref:System.Xml.XPath.XPathNodeType> do nó atual e o <xref:System.Xml.XPath.XPathNodeType> do nó pai para mover para.  
  
 A tabela a seguir mostra os diferentes <xref:System.Xml.XPath.XPathNodeType> nós e os nós pai podem mover para.  
  
|XPathNodeType|Nó pai|  
|-------------------|-----------------|  
|<xref:System.Xml.XPath.XPathNodeType.Root>|<xref:System.Xml.XPath.XPathNodeType.Root> nós não têm pais.|  
|<xref:System.Xml.XPath.XPathNodeType.Element>|<xref:System.Xml.XPath.XPathNodeType.Element> ou <xref:System.Xml.XPath.XPathNodeType.Root> nó.|  
|<xref:System.Xml.XPath.XPathNodeType.Attribute>|<xref:System.Xml.XPath.XPathNodeType.Element> nó.|  
|<xref:System.Xml.XPath.XPathNodeType.Text>|<xref:System.Xml.XPath.XPathNodeType.Element> nó.|  
|<xref:System.Xml.XPath.XPathNodeType.Namespace>|<xref:System.Xml.XPath.XPathNodeType.Element> nó.|  
|<xref:System.Xml.XPath.XPathNodeType.ProcessingInstruction>|<xref:System.Xml.XPath.XPathNodeType.Element> ou <xref:System.Xml.XPath.XPathNodeType.Root> nó.|  
|<xref:System.Xml.XPath.XPathNodeType.Comment>|<xref:System.Xml.XPath.XPathNodeType.Element> ou <xref:System.Xml.XPath.XPathNodeType.Root> nó.|  
|<xref:System.Xml.XPath.XPathNodeType.Whitespace>|<xref:System.Xml.XPath.XPathNodeType.Element> ou <xref:System.Xml.XPath.XPathNodeType.Root> nó.|  
|<xref:System.Xml.XPath.XPathNodeType.SignificantWhitespace>|<xref:System.Xml.XPath.XPathNodeType.Element> ou <xref:System.Xml.XPath.XPathNodeType.Root> nó.|  
  
   
  
## Examples  
 Para obter um exemplo de <xref:System.Xml.XPath.XPathNavigator.MoveToParent%2A> método, consulte o <xref:System.Xml.XPath.XPathNavigator.CreateAttribute%2A> método.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveToPrevious">
      <MemberSignature Language="C#" Value="public abstract bool MoveToPrevious ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveToPrevious() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.MoveToPrevious" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function MoveToPrevious () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool MoveToPrevious();" />
      <MemberSignature Language="F#" Value="abstract member MoveToPrevious : unit -&gt; bool" Usage="xPathNavigator.MoveToPrevious " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Quando substituído em uma classe derivada, move o <see cref="T:System.Xml.XPath.XPathNavigator" /> para o nó irmão anterior ao nó atual.</summary>
        <returns>Retorna <see langword="true" /> se o <see cref="T:System.Xml.XPath.XPathNavigator" /> tiver êxito na movimentação para o nó irmão anterior; caso contrário, <see langword="false" /> se não houver nó irmão anterior ou se o <see cref="T:System.Xml.XPath.XPathNavigator" /> estiver atualmente posicionado em um nó de atributo. Se for <see langword="false" />, a posição do <see cref="T:System.Xml.XPath.XPathNavigator" /> permanecerá inalterada.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Xml.XPath.XPathNavigator.MoveToNext" />
        <altmember cref="M:System.Xml.XPath.XPathNavigator.MoveToFirst" />
      </Docs>
    </Member>
    <Member MemberName="MoveToRoot">
      <MemberSignature Language="C#" Value="public virtual void MoveToRoot ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MoveToRoot() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.MoveToRoot" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub MoveToRoot ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void MoveToRoot();" />
      <MemberSignature Language="F#" Value="abstract member MoveToRoot : unit -&gt; unit&#xA;override this.MoveToRoot : unit -&gt; unit" Usage="xPathNavigator.MoveToRoot " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Move o <see cref="T:System.Xml.XPath.XPathNavigator" /> para o nó raiz ao qual o nó atual pertence.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Todos os nós pertencem a apenas um documento. Portanto, esse método sempre é bem-sucedida.  
  
   
  
## Examples  
 Para obter um exemplo de <xref:System.Xml.XPath.XPathNavigator.MoveToRoot%2A> método, consulte o <xref:System.Xml.XPath.XPathNavigator.MoveToFollowing%2A> método.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public abstract string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XPath.XPathNavigator.Name" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Xml.XPath.XPathNavigator.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Quando é substituído em uma classe derivada, obtém o nome qualificado do nó atual.</summary>
        <value>A <see cref="T:System.String" /> que contém o <see cref="P:System.Xml.XPath.XPathNavigator.Name" /> qualificado do nó atual ou <see cref="F:System.String.Empty" /> se o nó atual não tem um nome (por exemplo, nós de texto ou comentário).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Xml.XPath.XPathNavigator.Name%2A> retornado depende do <xref:System.Xml.XPath.XPathNodeType> do nó atual. Por exemplo, o nome para o `<bk:book>` elemento é `bk:book`.  
  
 A tabela a seguir lista o valor retornado pela <xref:System.Xml.XPath.XPathNavigator.Name%2A> propriedade, com base no <xref:System.Xml.XPath.XPathNodeType> do nó atual.  
  
|XPathNodeType|Valor de propriedade|  
|-------------------|--------------------|  
|<xref:System.Xml.XPath.XPathNodeType.Element>|O nome qualificado do <xref:System.Xml.XPath.XPathNodeType.Element>. No exemplo a seguir `<bk:book>`, o nome do nó do elemento é `bk:book`.|  
|<xref:System.Xml.XPath.XPathNodeType.Attribute>|O nome qualificado do <xref:System.Xml.XPath.XPathNodeType.Attribute>. No exemplo a seguir `<book bk:genre='novel'>`, o nome da <xref:System.Xml.XPath.XPathNodeType.Attribute> nó é `bk:genre`.|  
|<xref:System.Xml.XPath.XPathNodeType.Namespace>|O prefixo associado com o URI de namespace. Na declaração de namespace a seguir `xmlns:bk='urn:samples'`, o <xref:System.Xml.XPath.XPathNavigator.Name%2A> propriedade retorna `bk`.|  
|<xref:System.Xml.XPath.XPathNodeType.ProcessingInstruction>|O destino do <xref:System.Xml.XPath.XPathNodeType.ProcessingInstruction>. No exemplo a seguir `<?xml-stylesheet type='text/xsl' href= 'books.xsl'?>`, o <xref:System.Xml.XPath.XPathNavigator.Name%2A> propriedade retorna `xml-stylesheet`.|  
|Todos os outros <xref:System.Xml.XPath.XPathNodeType> nós|<xref:System.String.Empty?displayProperty=nameWithType>.|  
  
   
  
## Examples  
 O exemplo a seguir itera em recursivamente o nó de árvore e exibe informações sobre <xref:System.Xml.XPath.XPathNodeType.Element> e <xref:System.Xml.XPath.XPathNodeType.Text> nós.  
  
 [!code-cpp[XPathNavigatorMethods#29](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#29)]
 [!code-csharp[XPathNavigatorMethods#29](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#29)]
 [!code-vb[XPathNavigatorMethods#29](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#29)]  
  
 O exemplo usa o arquivo `books.xml` como entrada.  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>   
<bookstore>  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.XPath.XPathNavigator.LocalName" />
        <altmember cref="P:System.Xml.XPath.XPathNavigator.Prefix" />
      </Docs>
    </Member>
    <Member MemberName="NamespaceURI">
      <MemberSignature Language="C#" Value="public abstract string NamespaceURI { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NamespaceURI" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XPath.XPathNavigator.NamespaceURI" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property NamespaceURI As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ NamespaceURI { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NamespaceURI : string" Usage="System.Xml.XPath.XPathNavigator.NamespaceURI" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Quando substituído em uma classe derivada, obtém o URI de namespace do nó atual.</summary>
        <value>Um <see cref="T:System.String" /> que contém o URI do namespace do nó atual, ou <see cref="F:System.String.Empty" /> se o nó atual não tem namespace URI.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O namespace URI retornado depende do <xref:System.Xml.XPath.XPathNodeType> do nó atual.  
  
 O <xref:System.Xml.XPath.XPathNavigator.NamespaceURI%2A> propriedade retorna `urn:samples` para o nó `<bk:book xmlns:bk='urn:samples'>`.  
  
 Somente <xref:System.Xml.XPath.XPathNodeType.Element> e <xref:System.Xml.XPath.XPathNodeType.Attribute> <xref:System.Xml.XPath.XPathNodeType> nós podem ter um URI de namespace.  
  
   
  
## Examples  
 O exemplo a seguir itera em recursivamente o nó de árvore e exibe informações sobre <xref:System.Xml.XPath.XPathNodeType.Element> e <xref:System.Xml.XPath.XPathNodeType.Text> nós.  
  
 [!code-cpp[XPathNavigatorMethods#29](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#29)]
 [!code-csharp[XPathNavigatorMethods#29](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#29)]
 [!code-vb[XPathNavigatorMethods#29](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#29)]  
  
 O exemplo usa o arquivo `books.xml` como entrada.  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>   
<bookstore>  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XPath.XPathNodeType" />
        <altmember cref="P:System.Xml.XPath.XPathNavigator.Prefix" />
      </Docs>
    </Member>
    <Member MemberName="NameTable">
      <MemberSignature Language="C#" Value="public abstract System.Xml.XmlNameTable NameTable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNameTable NameTable" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XPath.XPathNavigator.NameTable" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property NameTable As XmlNameTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Xml::XmlNameTable ^ NameTable { System::Xml::XmlNameTable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NameTable : System.Xml.XmlNameTable" Usage="System.Xml.XPath.XPathNavigator.NameTable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNameTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Quando substituído em uma classe derivada, obtém o <see cref="T:System.Xml.XmlNameTable" /> do <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
        <value>Uma <see cref="T:System.Xml.XmlNameTable" /> objeto, permitindo que você obtenha a versão atomizada de uma <see cref="T:System.String" /> dentro do documento XML.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Xml.XmlNameTable> armazena cadeias de caracteres atomizadas de qualquer nome local, URI de namespace e prefixo usado pela <xref:System.Xml.XPath.XPathNavigator>. Isso significa que, quando o mesmo <xref:System.Xml.XPath.XPathNavigator.Name%2A> será retornado várias vezes (como "catálogo"), o mesmo <xref:System.String> objeto é retornado para que <xref:System.Xml.XPath.XPathNavigator.Name%2A>. Isso torna possível escrever código eficiente que o objeto comparações nessas cadeias de caracteres, em vez de comparações de cadeia de caracteres caro.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlNameTable" />
      </Docs>
    </Member>
    <Member MemberName="NavigatorComparer">
      <MemberSignature Language="C#" Value="public static System.Collections.IEqualityComparer NavigatorComparer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.IEqualityComparer NavigatorComparer" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XPath.XPathNavigator.NavigatorComparer" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property NavigatorComparer As IEqualityComparer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::IEqualityComparer ^ NavigatorComparer { System::Collections::IEqualityComparer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NavigatorComparer : System.Collections.IEqualityComparer" Usage="System.Xml.XPath.XPathNavigator.NavigatorComparer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEqualityComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um <see cref="T:System.Collections.IEqualityComparer" /> usado para a comparação de igualdade de objetos <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
        <value>Uma <see cref="T:System.Collections.IEqualityComparer" /> usado para comparação de igualdade de <see cref="T:System.Xml.XPath.XPathNavigator" /> objetos.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Xml.XPath.XPathNavigator.NavigatorComparer%2A> propriedade permite <xref:System.Xml.XPath.XPathNavigator> objetos a serem comparados com base na posição em vez de referência ao objeto. O <xref:System.Xml.XPath.XPathNavigator.ComparePosition%2A> e <xref:System.Object.Equals%2A> métodos implementados por essa classe baseiam-se na posição do <xref:System.Xml.XPath.XPathNavigator> objetos passados como parâmetros. O <xref:System.Object.GetHashCode%2A> método implementado por essa classe usa as propriedades do nó como seu nome local e o URI de namespace para criar um código hash para o nó.  
  
   
  
## Examples  
 O exemplo a seguir ilustra o uso do <xref:System.Xml.XPath.XPathNavigator.NavigatorComparer%2A> propriedade.  
  
 [!code-cpp[XPathNavigatorProperties#3](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorProperties/CPP/xpathnavigatorproperties.cpp#3)]
 [!code-csharp[XPathNavigatorProperties#3](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorProperties/CS/xpathnavigatorproperties.cs#3)]
 [!code-vb[XPathNavigatorProperties#3](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorProperties/VB/xpathnavigatorproperties.vb#3)]  
  
 O exemplo usa o arquivo `books.xml` como entrada.  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>   
<bookstore>  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NodeType">
      <MemberSignature Language="C#" Value="public abstract System.Xml.XPath.XPathNodeType NodeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XPath.XPathNodeType NodeType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XPath.XPathNavigator.NodeType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property NodeType As XPathNodeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Xml::XPath::XPathNodeType NodeType { System::Xml::XPath::XPathNodeType get(); };" />
      <MemberSignature Language="F#" Value="member this.NodeType : System.Xml.XPath.XPathNodeType" Usage="System.Xml.XPath.XPathNavigator.NodeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNodeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Quando substituído em uma classe derivada, obtém o <see cref="T:System.Xml.XPath.XPathNodeType" /> do nó atual.</summary>
        <value>Um dos valores <see cref="T:System.Xml.XPath.XPathNodeType" /> que representa o nó atual.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir itera em recursivamente o nó de árvore e exibe informações sobre <xref:System.Xml.XPath.XPathNodeType.Element> e <xref:System.Xml.XPath.XPathNodeType.Text> nós.  
  
 [!code-cpp[XPathNavigatorMethods#29](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#29)]
 [!code-csharp[XPathNavigatorMethods#29](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#29)]
 [!code-vb[XPathNavigatorMethods#29](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#29)]  
  
 O exemplo usa o arquivo `books.xml` como entrada.  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>   
<bookstore>  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OuterXml">
      <MemberSignature Language="C#" Value="public virtual string OuterXml { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OuterXml" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XPath.XPathNavigator.OuterXml" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property OuterXml As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ OuterXml { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OuterXml : string with get, set" Usage="System.Xml.XPath.XPathNavigator.OuterXml" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a marcação que representa as marcas de abertura e fechamento do nó atual e de seus nós filho.</summary>
        <value>Um <see cref="T:System.String" /> que contém a marcação que representa as marcas de abertura e fechamento do nó atual e seus nós filho.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  O <xref:System.Xml.XPath.XPathNavigator.InnerXml%2A> e <xref:System.Xml.XPath.XPathNavigator.OuterXml%2A> propriedades não são muito eficientes. Se o desempenho for uma prioridade, é mais eficiente para usar os métodos de navegação do nó do <xref:System.Xml.XPath.XPathNavigator> para obter valores de nós filho.  
  
   
  
## Examples  
 O exemplo a seguir usa o <xref:System.Xml.XPath.XPathNavigator.OuterXml%2A> propriedade para exibir o conteúdo do primeiro `book` elemento na `contosoBooks.xml` arquivo, seus nós filho e suas marcas abertura e fechamento <xref:System.Xml.XPath.XPathNavigator>.  
  
 [!code-cpp[XPathNavigatorProperties#4](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorProperties/CPP/xpathnavigatorproperties.cpp#4)]
 [!code-csharp[XPathNavigatorProperties#4](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorProperties/CS/xpathnavigatorproperties.cs#4)]
 [!code-vb[XPathNavigatorProperties#4](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorProperties/VB/xpathnavigatorproperties.vb#4)]  
  
 O exemplo usa o arquivo `contosoBooks.xml` como entrada.  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>  
<bookstore xmlns="http://www.contoso.com/books">  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Prefix">
      <MemberSignature Language="C#" Value="public abstract string Prefix { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Prefix" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XPath.XPathNavigator.Prefix" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Prefix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Prefix { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Prefix : string" Usage="System.Xml.XPath.XPathNavigator.Prefix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Quando substituído em uma classe derivada, obtém o prefixo de namespace associado com o nó atual.</summary>
        <value>Um <see cref="T:System.String" /> que contém o prefixo de namespace associado com o nó atual.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Xml.XPath.XPathNavigator.Prefix%2A> propriedade obtém o prefixo de namespace associado com o nó atual. Por exemplo, o <xref:System.Xml.XPath.XPathNavigator.Prefix%2A> propriedade retorna `bk` para o `<bk:book>` elemento. Se não existir um prefixo, ou o <xref:System.Xml.XPath.XPathNodeType> do nó atual não é <xref:System.Xml.XPath.XPathNodeType.Element> ou <xref:System.Xml.XPath.XPathNodeType.Attribute>, o <xref:System.Xml.XPath.XPathNavigator.Prefix%2A> propriedade retorna <xref:System.String.Empty?displayProperty=nameWithType>.  
  
   
  
## Examples  
 O exemplo a seguir itera em recursivamente o nó de árvore e exibe informações sobre <xref:System.Xml.XPath.XPathNodeType.Element> e <xref:System.Xml.XPath.XPathNodeType.Text> nós.  
  
 [!code-cpp[XPathNavigatorMethods#29](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#29)]
 [!code-csharp[XPathNavigatorMethods#29](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#29)]
 [!code-vb[XPathNavigatorMethods#29](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#29)]  
  
 O exemplo usa o arquivo `books.xml` como entrada.  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>   
<bookstore>  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="PrependChild">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Cria um novo nó filho no início da lista de nós filho do nó atual.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="PrependChild">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlWriter PrependChild ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlWriter PrependChild() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.PrependChild" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PrependChild () As XmlWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlWriter ^ PrependChild();" />
      <MemberSignature Language="F#" Value="abstract member PrependChild : unit -&gt; System.Xml.XmlWriter&#xA;override this.PrependChild : unit -&gt; System.Xml.XmlWriter" Usage="xPathNavigator.PrependChild " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retorna um objeto <see cref="T:System.Xml.XmlWriter" /> usado para criar um novo nó filho no início da lista de nós filho do nó atual.</summary>
        <returns>Um objeto <see cref="T:System.Xml.XmlWriter" /> usado para criar um novo nó filho no início da lista de nós filho do nó atual.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Acrescentando um nó filho adiciona o novo nó para o início da lista de nós filho do nó atual. Por exemplo, quando existem três nós filho de um elemento, o nó antecedendo se torna o primeiro nó filho. Se não existirem nós filho, um novo nó filho é criado.  
  
 As seguintes são notas importantes a considerar ao usar o <xref:System.Xml.XPath.XPathNavigator.PrependChild%2A> método.  
  
-   O novo nó filho não é inserido até que o <xref:System.Xml.XmlWriter.Close%2A> método da <xref:System.Xml.XmlWriter> objeto é chamado.  
  
-   O <xref:System.Xml.XPath.XPathNavigator.PrependChild%2A> método é válido somente quando o <xref:System.Xml.XPath.XPathNavigator> está posicionado em um nó de elemento.  
  
-   O <xref:System.Xml.XPath.XPathNavigator.PrependChild%2A> método não afeta a posição do <xref:System.Xml.XPath.XPathNavigator>.  
  
   
  
## Examples  
 No exemplo a seguir, um novo `pages` elemento filho é anexado ao início da lista de elementos filho do primeiro `book` elemento no `contosoBooks.xml` de arquivos usando o <xref:System.Xml.XmlWriter> objeto retornado do <xref:System.Xml.XPath.XPathNavigator.PrependChild%2A> método.  
  
 [!code-cpp[XPathNavigatorMethods#30](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#30)]
 [!code-csharp[XPathNavigatorMethods#30](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#30)]
 [!code-vb[XPathNavigatorMethods#30](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#30)]  
  
 O exemplo usa o arquivo `contosoBooks.xml` como entrada.  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>  
<bookstore xmlns="http://www.contoso.com/books">  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">O nó atual no qual o <see cref="T:System.Xml.XPath.XPathNavigator" /> está posicionado não permite que um novo nó filho seja anexado.</exception>
        <exception cref="T:System.NotSupportedException">O <see cref="T:System.Xml.XPath.XPathNavigator" /> não dá suporte à edição.</exception>
      </Docs>
    </Member>
    <Member MemberName="PrependChild">
      <MemberSignature Language="C#" Value="public virtual void PrependChild (string newChild);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrependChild(string newChild) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.PrependChild(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub PrependChild (newChild As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void PrependChild(System::String ^ newChild);" />
      <MemberSignature Language="F#" Value="abstract member PrependChild : string -&gt; unit&#xA;override this.PrependChild : string -&gt; unit" Usage="xPathNavigator.PrependChild newChild" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newChild" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="newChild">A cadeia de dados XML do novo nó filho.</param>
        <summary>Cria um novo nó filho no início da lista de nós filho do nó atual usando a cadeia de caracteres XML especificada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Acrescentando um nó filho adiciona o novo nó para o início da lista de nós filho do nó atual. Por exemplo, quando existem três nós filho de um elemento, o nó antecedendo se torna o primeiro nó filho. Se não existirem nós filho, um novo nó filho é criado.  
  
 Para criar um novo nó de elemento, inclua toda a sintaxe XML no parâmetro de cadeia de caracteres de XML. A cadeia de caracteres para um novo `book` nó é `PrependChild("<book/>")`. A cadeia de caracteres para acrescentar o texto "livro" para o nó de texto do nó atual é `PrependChild("book")`. Se a cadeia de caracteres XML contiver vários nós, todos os nós são adicionados.  
  
 As seguintes são notas importantes a considerar ao usar o <xref:System.Xml.XPath.XPathNavigator.PrependChild%2A> método.  
  
-   O <xref:System.Xml.XPath.XPathNavigator.PrependChild%2A> método é válido somente quando o <xref:System.Xml.XPath.XPathNavigator> está posicionado em um nó de elemento.  
  
-   O <xref:System.Xml.XPath.XPathNavigator.PrependChild%2A> método não afeta a posição do <xref:System.Xml.XPath.XPathNavigator>.  
  
   
  
## Examples  
 No exemplo a seguir, uma nova `pages` elemento filho é anexado ao início da lista de elementos filho do primeiro `book` elemento o `contosoBooks.xml` arquivo.  
  
 [!code-cpp[XPathNavigatorMethods#31](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#31)]
 [!code-csharp[XPathNavigatorMethods#31](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#31)]
 [!code-vb[XPathNavigatorMethods#31](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#31)]  
  
 O exemplo usa o arquivo `contosoBooks.xml` como entrada.  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>  
<bookstore xmlns="http://www.contoso.com/books">  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">O parâmetro da cadeia de caracteres XML é <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">O nó atual no qual o <see cref="T:System.Xml.XPath.XPathNavigator" /> está posicionado não permite que um novo nó filho seja anexado.</exception>
        <exception cref="T:System.NotSupportedException">O <see cref="T:System.Xml.XPath.XPathNavigator" /> não dá suporte à edição.</exception>
        <exception cref="T:System.Xml.XmlException">O parâmetro da cadeia de caracteres XML não está bem formado.</exception>
      </Docs>
    </Member>
    <Member MemberName="PrependChild">
      <MemberSignature Language="C#" Value="public virtual void PrependChild (System.Xml.XmlReader newChild);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrependChild(class System.Xml.XmlReader newChild) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.PrependChild(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub PrependChild (newChild As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void PrependChild(System::Xml::XmlReader ^ newChild);" />
      <MemberSignature Language="F#" Value="abstract member PrependChild : System.Xml.XmlReader -&gt; unit&#xA;override this.PrependChild : System.Xml.XmlReader -&gt; unit" Usage="xPathNavigator.PrependChild newChild" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newChild" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="newChild">Um objeto <see cref="T:System.Xml.XmlReader" /> posicionado nos dados XML para o novo nó filho.</param>
        <summary>Cria um novo nó filho no início da lista de nós filho do nó atual usando o conteúdo XML do objeto <see cref="T:System.Xml.XmlReader" /> especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Acrescentando um nó filho adiciona o novo nó para o início da lista de nós filho do nó atual. Por exemplo, quando existem três nós filho de um elemento, o nó antecedendo se torna o primeiro nó filho. Se não existirem nós filho, um novo nó filho é criado.  
  
 As seguintes são notas importantes a considerar ao usar o <xref:System.Xml.XPath.XPathNavigator.PrependChild%2A> método.  
  
-   Se o <xref:System.Xml.XmlReader> objeto está posicionado em uma sequência de nós XML, todos os nós na sequência são adicionados.  
  
-   O <xref:System.Xml.XPath.XPathNavigator.PrependChild%2A> método é válido somente quando o <xref:System.Xml.XPath.XPathNavigator> está posicionado em um nó de elemento.  
  
-   O <xref:System.Xml.XPath.XPathNavigator.PrependChild%2A> método não afeta a posição do <xref:System.Xml.XPath.XPathNavigator>.  
  
   
  
## Examples  
 No exemplo a seguir, uma nova `pages` elemento filho é anexado ao início da lista de elementos filho do primeiro `book` elemento na `contosoBooks.xml` de arquivos usando o <xref:System.Xml.XmlReader> objeto especificado. O `http://www.contoso.com/books` namespace for especificado, de modo que o novo elemento filho é anexado, usando o mesmo namespace do documento XML.  
  
 [!code-cpp[XPathNavigatorMethods#32](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#32)]
 [!code-csharp[XPathNavigatorMethods#32](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#32)]
 [!code-vb[XPathNavigatorMethods#32](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#32)]  
  
 O exemplo usa o arquivo `contosoBooks.xml` como entrada.  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>  
<bookstore xmlns="http://www.contoso.com/books">  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">O objeto <see cref="T:System.Xml.XmlReader" /> está em um estado de erro ou fechado.</exception>
        <exception cref="T:System.ArgumentNullException">O parâmetro do objeto <see cref="T:System.Xml.XmlReader" /> é <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">O nó atual no qual o <see cref="T:System.Xml.XPath.XPathNavigator" /> está posicionado não permite que um novo nó filho seja anexado.</exception>
        <exception cref="T:System.NotSupportedException">O <see cref="T:System.Xml.XPath.XPathNavigator" /> não dá suporte à edição.</exception>
        <exception cref="T:System.Xml.XmlException">O conteúdo XML do parâmetro de objeto <see cref="T:System.Xml.XmlReader" /> não está bem formado.</exception>
      </Docs>
    </Member>
    <Member MemberName="PrependChild">
      <MemberSignature Language="C#" Value="public virtual void PrependChild (System.Xml.XPath.XPathNavigator newChild);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrependChild(class System.Xml.XPath.XPathNavigator newChild) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.PrependChild(System.Xml.XPath.XPathNavigator)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub PrependChild (newChild As XPathNavigator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void PrependChild(System::Xml::XPath::XPathNavigator ^ newChild);" />
      <MemberSignature Language="F#" Value="abstract member PrependChild : System.Xml.XPath.XPathNavigator -&gt; unit&#xA;override this.PrependChild : System.Xml.XPath.XPathNavigator -&gt; unit" Usage="xPathNavigator.PrependChild newChild" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newChild" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <param name="newChild">Um objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> posicionado no nó a ser adicionado como o novo nó filho.</param>
        <summary>Cria um novo nó filho no início da lista de nós filho do nó atual usando os nós no objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Acrescentando um nó filho adiciona o novo nó para o início da lista de nós filho do nó atual. Por exemplo, quando existem três nós filho de um elemento, o nó antecedendo se torna o primeiro nó filho. Se não existirem nós filho, um novo nó filho é criado.  
  
 As seguintes são notas importantes a considerar ao usar o <xref:System.Xml.XPath.XPathNavigator.PrependChild%2A> método.  
  
-   Se o <xref:System.Xml.XPath.XPathNavigator> objeto está posicionado em uma sequência de nós XML, todos os nós na sequência são adicionados.  
  
-   O <xref:System.Xml.XPath.XPathNavigator.PrependChild%2A> método é válido somente quando o <xref:System.Xml.XPath.XPathNavigator> está posicionado em um nó de elemento.  
  
-   O <xref:System.Xml.XPath.XPathNavigator.PrependChild%2A> método não afeta a posição do <xref:System.Xml.XPath.XPathNavigator>.  
  
   
  
## Examples  
 No exemplo a seguir, uma nova `pages` elemento filho é anexado ao início da lista de elementos filho do primeiro `book` elemento o `contosoBooks.xml` de arquivos usando o nó contido no <xref:System.Xml.XPath.XPathNavigator> objeto especificado. O `http://www.contoso.com/books` namespace for especificado, de modo que o novo elemento filho é anexado, usando o mesmo namespace do documento XML.  
  
 [!code-cpp[XPathNavigatorMethods#33](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#33)]
 [!code-csharp[XPathNavigatorMethods#33](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#33)]
 [!code-vb[XPathNavigatorMethods#33](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#33)]  
  
 O exemplo usa o arquivo `contosoBooks.xml` como entrada.  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>  
<bookstore xmlns="http://www.contoso.com/books">  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">O parâmetro do objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> é <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">O nó atual no qual o <see cref="T:System.Xml.XPath.XPathNavigator" /> está posicionado não permite que um novo nó filho seja anexado.</exception>
        <exception cref="T:System.NotSupportedException">O <see cref="T:System.Xml.XPath.XPathNavigator" /> não dá suporte à edição.</exception>
      </Docs>
    </Member>
    <Member MemberName="PrependChildElement">
      <MemberSignature Language="C#" Value="public virtual void PrependChildElement (string prefix, string localName, string namespaceURI, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrependChildElement(string prefix, string localName, string namespaceURI, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.PrependChildElement(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub PrependChildElement (prefix As String, localName As String, namespaceURI As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void PrependChildElement(System::String ^ prefix, System::String ^ localName, System::String ^ namespaceURI, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member PrependChildElement : string * string * string * string -&gt; unit&#xA;override this.PrependChildElement : string * string * string * string -&gt; unit" Usage="xPathNavigator.PrependChildElement (prefix, localName, namespaceURI, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">O prefixo de namespace do novo elemento filho (se houver).</param>
        <param name="localName">O nome local do novo elemento filho (se houver).</param>
        <param name="namespaceURI">O URI de namespace do novo elemento filho (se houver). <see cref="F:System.String.Empty" /> e <see langword="null" /> são equivalentes.</param>
        <param name="value">O valor do novo elemento filho. Se <see cref="F:System.String.Empty" /> ou <see langword="null" /> for passado, um elemento vazio será criado.</param>
        <summary>Cria um novo elemento filho no início da lista de nós filho do nó atual, usando o prefixo do namespace, o nome local e o URI do namespace especificado, com o valor especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Acrescentando um nó filho adiciona o novo nó para o início da lista de nós filho do nó atual. Por exemplo, quando existem três nós filho de um elemento, o nó antecedendo se torna o primeiro nó filho. Se não existirem nós filho, um novo nó filho é criado.  
  
 Prefixo de Namespace e os valores URI podem ser obtidas usando o <xref:System.Xml.XPath.XPathNavigator.LookupPrefix%2A> ou <xref:System.Xml.XPath.XPathNavigator.LookupNamespace%2A> método. Por exemplo, a sintaxe a seguir anexa um elemento filho usando o namespace no escopo `xmlns:bk="http://www.contoso.com/books"`:  
  
```csharp  
navigator.PrependChildElement(navigator.Prefix, "pages", LookupNamespaceURI(navigator.Prefix), String.Empty)  
```  
  
 Isso cria o novo filho `<bk:pages/>` elemento.  
  
 As seguintes são notas importantes a considerar ao usar o <xref:System.Xml.XPath.XPathNavigator.PrependChildElement%2A> método.  
  
-   Se o prefixo de namespace especificado estiver `null` ou <xref:System.String.Empty?displayProperty=nameWithType>, em seguida, o prefixo do namespace URI do novo elemento é obtido de namespaces em-escopo atual. Se não houver nenhum prefixo de namespace atribuído ao URI no escopo atual de namespace especificado, um prefixo de namespace é gerado automaticamente.  
  
-   O <xref:System.Xml.XPath.XPathNavigator.PrependChildElement%2A> método é válido somente quando o <xref:System.Xml.XPath.XPathNavigator> está posicionado em um nó de elemento.  
  
-   O <xref:System.Xml.XPath.XPathNavigator.PrependChildElement%2A> método não afeta a posição do <xref:System.Xml.XPath.XPathNavigator>.  
  
   
  
## Examples  
 No exemplo a seguir, uma nova `pages` elemento filho é anexado ao início da lista de elementos filho do primeiro `book` elemento o `contosoBooks.xml` arquivo.  
  
 [!code-cpp[XPathNavigatorMethods#34](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#34)]
 [!code-csharp[XPathNavigatorMethods#34](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#34)]
 [!code-vb[XPathNavigatorMethods#34](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#34)]  
  
 O exemplo usa o arquivo `contosoBooks.xml` como entrada.  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>  
<bookstore xmlns="http://www.contoso.com/books">  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">O nó atual no qual o <see cref="T:System.Xml.XPath.XPathNavigator" /> está posicionado não permite que um novo nó filho seja anexado.</exception>
        <exception cref="T:System.NotSupportedException">O <see cref="T:System.Xml.XPath.XPathNavigator" /> não dá suporte à edição.</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadSubtree">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlReader ReadSubtree ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlReader ReadSubtree() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.ReadSubtree" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadSubtree () As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlReader ^ ReadSubtree();" />
      <MemberSignature Language="F#" Value="abstract member ReadSubtree : unit -&gt; System.Xml.XmlReader&#xA;override this.ReadSubtree : unit -&gt; System.Xml.XmlReader" Usage="xPathNavigator.ReadSubtree " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retorna um objeto <see cref="T:System.Xml.XmlReader" /> que contém o nó atual e seus nós filho.</summary>
        <returns>Um objeto <see cref="T:System.Xml.XmlReader" /> que contém o nó atual e seus nós filho.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando o objeto <xref:System.Xml.XmlReader> é criado com o nó atual e seus nós filho, a propriedade <xref:System.Xml.XmlReader> do objeto <xref:System.Xml.XmlReader.ReadState%2A> é definida como <xref:System.Xml.ReadState.Initial>. Quando o método <xref:System.Xml.XmlReader> do objeto <xref:System.Xml.XmlReader.Read%2A> é chamado pela primeira vez, o <xref:System.Xml.XmlReader> é movido para o nó atual <xref:System.Xml.XPath.XPathNavigator>. O novo objeto <xref:System.Xml.XmlReader> continua a leitura até o final da árvore XML. Neste ponto, o método <xref:System.Xml.XmlReader.Read%2A> retorna `false` e a propriedade <xref:System.Xml.XmlReader> do objeto <xref:System.Xml.XmlReader.ReadState%2A> é definida como <xref:System.Xml.ReadState.EndOfFile>.  
  
> [!NOTE]
>  Alterar a posição do <xref:System.Xml.XmlReader> objeto não afeta a posição do <xref:System.Xml.XPath.XPathNavigator>.  
  
 Declarações de Namespace para os namespaces no escopo do nó atual não são inseridas no fluxo XML fornecido para o <xref:System.Xml.XmlReader> objeto.  
  
> [!NOTE]
>  Esse comportamento difere do <xref:System.Xml.XPath.XPathNavigator.WriteSubtree%2A> método.  
  
 Esse método cria o <xref:System.Xml.XmlReader> objeto com configurações específicas do leitor e o módulo que usa esse método não tem controle sobre essas configurações. Por exemplo, o leitor retornado por esse método proíbe a definições de tipo de dados (DTDs) de processamento. Se o leitor tenta ler um arquivo que usa um DTD, ele gerará um erro, <xref:System.Xml.XmlException>. A mensagem para a exceção será `Unexpected DTD declaration`.  
  
 Você pode alterar esse comportamento implementando um personalizado <xref:System.Xml.XmlResolver> que retorna um <xref:System.Xml.XmlReader> com os detalhes desejados <xref:System.Xml.XmlReaderSettings>.  
  
   
  
## Examples  
 O exemplo a seguir ilustra o uso de <xref:System.Xml.XPath.XPathNavigator.ReadSubtree%2A> método no primeiro `book` elemento do `contosoBooks.xml` arquivo.  
  
 [!code-cpp[XPathNavigatorMethods#35](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#35)]
 [!code-csharp[XPathNavigatorMethods#35](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#35)]
 [!code-vb[XPathNavigatorMethods#35](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#35)]  
  
 O exemplo usa o arquivo `contosoBooks.xml` como entrada.  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>  
<bookstore xmlns="http://www.contoso.com/books">  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">O <see cref="T:System.Xml.XPath.XPathNavigator" /> não está posicionado em um nó de elemento ou no nó raiz.</exception>
      </Docs>
    </Member>
    <Member MemberName="ReplaceRange">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlWriter ReplaceRange (System.Xml.XPath.XPathNavigator lastSiblingToReplace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlWriter ReplaceRange(class System.Xml.XPath.XPathNavigator lastSiblingToReplace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.ReplaceRange(System.Xml.XPath.XPathNavigator)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReplaceRange (lastSiblingToReplace As XPathNavigator) As XmlWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlWriter ^ ReplaceRange(System::Xml::XPath::XPathNavigator ^ lastSiblingToReplace);" />
      <MemberSignature Language="F#" Value="abstract member ReplaceRange : System.Xml.XPath.XPathNavigator -&gt; System.Xml.XmlWriter&#xA;override this.ReplaceRange : System.Xml.XPath.XPathNavigator -&gt; System.Xml.XmlWriter" Usage="xPathNavigator.ReplaceRange lastSiblingToReplace" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lastSiblingToReplace" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <param name="lastSiblingToReplace">Um <see cref="T:System.Xml.XPath.XPathNavigator" /> posicionado no último nó irmão no intervalo a ser substituído.</param>
        <summary>Substitui um intervalo de nós irmão, do nó atual ao nó especificado.</summary>
        <returns>Um objeto <see cref="T:System.Xml.XmlWriter" /> usado para especificar o intervalo de substituição.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Xml.XPath.XPathNavigator.ReplaceRange%2A> método substitui um intervalo de nós irmãos do nó atual de <xref:System.Xml.XPath.XPathNavigator> está posicionado em (inclusivo) para o nó especificado pelo <xref:System.Xml.XPath.XPathNavigator> parâmetro (inclusivo).  
  
> [!NOTE]
>  O intervalo de substituição não é inserido até que o <xref:System.Xml.XmlWriter.Close%2A> método da <xref:System.Xml.XmlWriter> objeto é chamado.  
  
   
  
## Examples  
 No exemplo a seguir, o primeiro e segundo `book` elementos do `contosoBooks.xml` arquivo são substituídos por um novo vazio `book` elemento usando o <xref:System.Xml.XPath.XPathNavigator.ReplaceRange%2A> método.  
  
 [!code-cpp[XPathNavigatorMethods#53](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#53)]
 [!code-csharp[XPathNavigatorMethods#53](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#53)]
 [!code-vb[XPathNavigatorMethods#53](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#53)]  
  
 O exemplo usa o arquivo `contosoBooks.xml` como entrada.  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>  
<bookstore xmlns="http://www.contoso.com/books">  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">O <see cref="T:System.Xml.XPath.XPathNavigator" /> especificado é <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">O <see cref="T:System.Xml.XPath.XPathNavigator" /> não dá suporte à edição.</exception>
        <exception cref="T:System.InvalidOperationException">O último nó especificado a ser substituído não é um nó irmão válido do nó atual.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReplaceSelf">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Substitui o nó atual com o conteúdo especificado.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReplaceSelf">
      <MemberSignature Language="C#" Value="public virtual void ReplaceSelf (string newNode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReplaceSelf(string newNode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.ReplaceSelf(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ReplaceSelf (newNode As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReplaceSelf(System::String ^ newNode);" />
      <MemberSignature Language="F#" Value="abstract member ReplaceSelf : string -&gt; unit&#xA;override this.ReplaceSelf : string -&gt; unit" Usage="xPathNavigator.ReplaceSelf newNode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newNode" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="newNode">A cadeia de dados XML para o novo nó.</param>
        <summary>Substitui o nó atual com o conteúdo da cadeia de caracteres especificada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Xml.XPath.XPathNavigator> é posicionado no novo nó após a conclusão do <xref:System.Xml.XPath.XPathNavigator.ReplaceSelf%2A> método e retorna `true`. O <xref:System.Xml.XPath.XPathNavigator> não está posicionado no novo nó após a conclusão do <xref:System.Xml.XPath.XPathNavigator.ReplaceSelf%2A> método quando o XML de entrada está <xref:System.String.Empty> nesse caso, o <xref:System.Xml.XPath.XPathNavigator> é seja posicionada no próximo nó irmão ou o nó pai se não houver nenhum próximo nó irmão para o nó substituído e o <xref:System.Xml.XPath.XPathNavigator.ReplaceSelf%2A> retorna `false`.  
  
-   O <xref:System.Xml.XPath.XPathNavigator.ReplaceSelf%2A> método é válido somente quando o <xref:System.Xml.XPath.XPathNavigator> está posicionado em um elemento, texto, instrução de processamento ou nó de comentário.  
  
-   Se a cadeia de caracteres de dados XML não está bem formada que uma exceção é lançada e o resultado desse método é equivalente a chamar <xref:System.Xml.XPath.XPathNavigator.DeleteSelf%2A> no nó atual.  
  
-   Se a cadeia de caracteres XML contiver vários nós, todos os nós são adicionados e o <xref:System.Xml.XPath.XPathNavigator> é posicionado no primeiro nó da série de nós.  
  
-   O <xref:System.Xml.XPath.XPathNavigator.ReplaceSelf%2A> método não é equivalente de <xref:System.Xml.XPath.XPathNavigator.DeleteSelf%2A> método.  
  
   
  
## Examples  
 No exemplo a seguir a `price` elemento na `contosoBooks.xml` arquivo é substituído por um novo `pages` elemento.  
  
 [!code-cpp[XPathNavigatorMethods#36](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#36)]
 [!code-csharp[XPathNavigatorMethods#36](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#36)]
 [!code-vb[XPathNavigatorMethods#36](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#36)]  
  
 O exemplo usa o arquivo `contosoBooks.xml` como entrada.  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>  
<bookstore xmlns="http://www.contoso.com/books">  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">O parâmetro da cadeia de caracteres XML é <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">O <see cref="T:System.Xml.XPath.XPathNavigator" /> não está posicionado em um elemento, um texto, uma instrução de processamento ou em um nó de comentário.</exception>
        <exception cref="T:System.NotSupportedException">O <see cref="T:System.Xml.XPath.XPathNavigator" /> não dá suporte à edição.</exception>
        <exception cref="T:System.Xml.XmlException">O parâmetro da cadeia de caracteres XML não está bem formado.</exception>
      </Docs>
    </Member>
    <Member MemberName="ReplaceSelf">
      <MemberSignature Language="C#" Value="public virtual void ReplaceSelf (System.Xml.XmlReader newNode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReplaceSelf(class System.Xml.XmlReader newNode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.ReplaceSelf(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ReplaceSelf (newNode As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReplaceSelf(System::Xml::XmlReader ^ newNode);" />
      <MemberSignature Language="F#" Value="abstract member ReplaceSelf : System.Xml.XmlReader -&gt; unit&#xA;override this.ReplaceSelf : System.Xml.XmlReader -&gt; unit" Usage="xPathNavigator.ReplaceSelf newNode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newNode" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="newNode">Um objeto <see cref="T:System.Xml.XmlReader" /> posicionado nos dados XML para o novo nó.</param>
        <summary>Substitui o nó atual com o conteúdo do objeto <see cref="T:System.Xml.XmlReader" /> especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Xml.XPath.XPathNavigator> é posicionado no novo nó após a conclusão do <xref:System.Xml.XPath.XPathNavigator.ReplaceSelf%2A> método e retorna `true`. O <xref:System.Xml.XPath.XPathNavigator> não está posicionado no novo nó após a conclusão do <xref:System.Xml.XPath.XPathNavigator.ReplaceSelf%2A> método quando o XML de entrada está <xref:System.String.Empty> nesse caso, o <xref:System.Xml.XPath.XPathNavigator> é seja posicionada no próximo nó irmão ou o nó pai se não houver nenhum próximo nó irmão para o nó substituído e o <xref:System.Xml.XPath.XPathNavigator.ReplaceSelf%2A> retorna `false`.  
  
-   O <xref:System.Xml.XPath.XPathNavigator.ReplaceSelf%2A> método é válido somente quando o <xref:System.Xml.XPath.XPathNavigator> está posicionado em um elemento, texto, instrução de processamento ou nó de comentário.  
  
-   Se a cadeia de caracteres de dados XML não está bem formada que uma exceção é lançada e o resultado desse método é equivalente a chamar <xref:System.Xml.XPath.XPathNavigator.DeleteSelf%2A> no nó atual.  
  
-   Se a cadeia de caracteres XML contiver vários nós, todos os nós são adicionados e o <xref:System.Xml.XPath.XPathNavigator> é posicionado no primeiro nó da série de nós.  
  
-   O <xref:System.Xml.XPath.XPathNavigator.ReplaceSelf%2A> método não é equivalente de <xref:System.Xml.XPath.XPathNavigator.DeleteSelf%2A> método.  
  
   
  
## Examples  
 No exemplo a seguir a `price` elemento na `contosoBooks.xml` arquivo é substituído por um novo `pages` elemento.  
  
 [!code-cpp[XPathNavigatorMethods#37](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#37)]
 [!code-csharp[XPathNavigatorMethods#37](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#37)]
 [!code-vb[XPathNavigatorMethods#37](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#37)]  
  
 O exemplo usa o arquivo `contosoBooks.xml` como entrada.  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>  
<bookstore xmlns="http://www.contoso.com/books">  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">O objeto <see cref="T:System.Xml.XmlReader" /> está em um estado de erro ou fechado.</exception>
        <exception cref="T:System.ArgumentNullException">O parâmetro do objeto <see cref="T:System.Xml.XmlReader" /> é <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">O <see cref="T:System.Xml.XPath.XPathNavigator" /> não está posicionado em um elemento, um texto, uma instrução de processamento ou em um nó de comentário.</exception>
        <exception cref="T:System.NotSupportedException">O <see cref="T:System.Xml.XPath.XPathNavigator" /> não dá suporte à edição.</exception>
        <exception cref="T:System.Xml.XmlException">O conteúdo XML do parâmetro de objeto <see cref="T:System.Xml.XmlReader" /> não está bem formado.</exception>
      </Docs>
    </Member>
    <Member MemberName="ReplaceSelf">
      <MemberSignature Language="C#" Value="public virtual void ReplaceSelf (System.Xml.XPath.XPathNavigator newNode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReplaceSelf(class System.Xml.XPath.XPathNavigator newNode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.ReplaceSelf(System.Xml.XPath.XPathNavigator)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ReplaceSelf (newNode As XPathNavigator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReplaceSelf(System::Xml::XPath::XPathNavigator ^ newNode);" />
      <MemberSignature Language="F#" Value="abstract member ReplaceSelf : System.Xml.XPath.XPathNavigator -&gt; unit&#xA;override this.ReplaceSelf : System.Xml.XPath.XPathNavigator -&gt; unit" Usage="xPathNavigator.ReplaceSelf newNode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newNode" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <param name="newNode">Um objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> posicionado no novo nó.</param>
        <summary>Substitui o nó atual com o conteúdo do objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Xml.XPath.XPathNavigator> é posicionado no novo nó após a conclusão do <xref:System.Xml.XPath.XPathNavigator.ReplaceSelf%2A> método e retorna `true`. O <xref:System.Xml.XPath.XPathNavigator> não está posicionado no novo nó após a conclusão do <xref:System.Xml.XPath.XPathNavigator.ReplaceSelf%2A> método quando o XML de entrada está <xref:System.String.Empty> nesse caso, o <xref:System.Xml.XPath.XPathNavigator> é seja posicionada no próximo nó irmão ou o nó pai se não houver nenhum próximo nó irmão para o nó substituído e o <xref:System.Xml.XPath.XPathNavigator.ReplaceSelf%2A> retorna `false`.  
  
-   O <xref:System.Xml.XPath.XPathNavigator.ReplaceSelf%2A> método é válido somente quando o <xref:System.Xml.XPath.XPathNavigator> está posicionado em um elemento, texto, instrução de processamento ou nó de comentário.  
  
-   Se a cadeia de caracteres de dados XML não está bem formada que uma exceção é lançada e o resultado desse método é equivalente a chamar <xref:System.Xml.XPath.XPathNavigator.DeleteSelf%2A> no nó atual.  
  
-   Se a cadeia de caracteres XML contiver vários nós, todos os nós são adicionados e o <xref:System.Xml.XPath.XPathNavigator> é posicionado no primeiro nó da série de nós.  
  
-   O <xref:System.Xml.XPath.XPathNavigator.ReplaceSelf%2A> método não é equivalente de <xref:System.Xml.XPath.XPathNavigator.DeleteSelf%2A> método.  
  
   
  
## Examples  
 No exemplo a seguir a `price` elemento na `contosoBooks.xml` arquivo é substituído por um novo `pages` elemento.  
  
 [!code-cpp[XPathNavigatorMethods#38](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#38)]
 [!code-csharp[XPathNavigatorMethods#38](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#38)]
 [!code-vb[XPathNavigatorMethods#38](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#38)]  
  
 O exemplo usa o arquivo `contosoBooks.xml` como entrada.  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>  
<bookstore xmlns="http://www.contoso.com/books">  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">O parâmetro do objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> é <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">O <see cref="T:System.Xml.XPath.XPathNavigator" /> não está posicionado em um elemento, um texto, uma instrução de processamento ou em um nó de comentário.</exception>
        <exception cref="T:System.NotSupportedException">O <see cref="T:System.Xml.XPath.XPathNavigator" /> não dá suporte à edição.</exception>
        <exception cref="T:System.Xml.XmlException">O conteúdo XML do parâmetro de objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> não está bem formado.</exception>
      </Docs>
    </Member>
    <Member MemberName="SchemaInfo">
      <MemberSignature Language="C#" Value="public virtual System.Xml.Schema.IXmlSchemaInfo SchemaInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.IXmlSchemaInfo SchemaInfo" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XPath.XPathNavigator.SchemaInfo" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SchemaInfo As IXmlSchemaInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::Schema::IXmlSchemaInfo ^ SchemaInfo { System::Xml::Schema::IXmlSchemaInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SchemaInfo : System.Xml.Schema.IXmlSchemaInfo" Usage="System.Xml.XPath.XPathNavigator.SchemaInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.IXmlSchemaInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém as informações de esquema que foram atribuídas ao nó atual como resultado da validação de esquema.</summary>
        <value>Um <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> objeto que contém as informações de esquema para o nó atual.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Informações de esquema podem ser definidas em <xref:System.Xml.XPath.XPathNodeType.Element>, <xref:System.Xml.XPath.XPathNodeType.Attribute>, ou na <xref:System.Xml.XPath.XPathNodeType.Text> nós com um não -`null`<xref:System.Xml.XPath.XPathNavigator.ValueType%2A>. Se o nó atual não é um dos tipos de nó acima ou se o <xref:System.Xml.XPath.XPathNavigator> instância não relata informações de esquema, o <xref:System.Xml.XPath.XPathNavigator.SchemaInfo%2A> propriedade retorna `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Select">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Seleciona um nó definido usando a expressão XPath especificada.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XPath.XPathNodeIterator Select (string xpath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XPath.XPathNodeIterator Select(string xpath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.Select(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Select (xpath As String) As XPathNodeIterator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XPath::XPathNodeIterator ^ Select(System::String ^ xpath);" />
      <MemberSignature Language="F#" Value="abstract member Select : string -&gt; System.Xml.XPath.XPathNodeIterator&#xA;override this.Select : string -&gt; System.Xml.XPath.XPathNodeIterator" Usage="xPathNavigator.Select xpath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNodeIterator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xpath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xpath">Um <see cref="T:System.String" /> que representa uma expressão XPath.</param>
        <summary>Seleciona um nó definido usando a expressão XPath especificada.</summary>
        <returns>Um <see cref="T:System.Xml.XPath.XPathNodeIterator" /> que aponta para o conjunto de nós selecionado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O contexto para a seleção é a posição do <xref:System.Xml.XPath.XPathNavigator> quando este método é chamado. Depois de chamar esse método, o <xref:System.Xml.XPath.XPathNodeIterator> retornado representa o conjunto de nós selecionados. Use <xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A> método da <xref:System.Xml.XPath.XPathNodeIterator> para iterar sobre o conjunto de nós selecionado.  
  
 O código c# a seguir itera em conjunto de nós selecionado.  
  
```csharp  
XPathNodeIterator iterator = nav.Select("/bookstore/book");  
while (iterator.MoveNext())  
{  
    Console.WriteLine(Iterator.Current.Name);  
}  
```  
  
 As seguintes são notas importantes a considerar ao usar o <xref:System.Xml.XPath.XPathNavigator.Select%2A> método.  
  
-   Você ainda pode usar qualquer uma da <xref:System.Xml.XPath.XPathNavigator> métodos de navegação do objeto para movimentação dentro de <xref:System.Xml.XPath.XPathNavigator>. O <xref:System.Xml.XPath.XPathNavigator> métodos de navegação são independentes de nós selecionados no <xref:System.Xml.XPath.XPathNodeIterator>.  
  
-   Futuras chamadas para o <xref:System.Xml.XPath.XPathNavigator.Select%2A> método retorna um novo <xref:System.Xml.XPath.XPathNodeIterator> que aponta para o conjunto selecionado de nós que corresponde ao novo objeto <xref:System.Xml.XPath.XPathNavigator.Select%2A> chamar. Os dois <xref:System.Xml.XPath.XPathNodeIterator> objetos são completamente independentes uns dos outros.  
  
-   Se a expressão XPath requer que a resolução de namespace, use o <xref:System.Xml.XPath.XPathNavigator.Select%2A> sobrecarga que utiliza um <xref:System.Xml.XPath.XPathExpression> como seu argumento.  
  
-   Esse método não tem nenhum efeito sobre o estado do <xref:System.Xml.XPath.XPathNavigator>.  
  
   
  
## Examples  
 O exemplo a seguir usa o <xref:System.Xml.XPath.XPathNavigator.Select%2A> método para selecionar um conjunto de nós.  
  
 [!code-cpp[XPathNavigatorMethods#39](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#39)]
 [!code-csharp[XPathNavigatorMethods#39](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#39)]
 [!code-vb[XPathNavigatorMethods#39](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#39)]  
  
 O exemplo usa o arquivo `books.xml` como entrada.  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>   
<bookstore>  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">A expressão XPath contém um erro ou seu tipo de retorno não é um conjunto de nós.</exception>
        <exception cref="T:System.Xml.XPath.XPathException">A expressão XPath não é válida.</exception>
        <altmember cref="M:System.Xml.XmlNode.SelectNodes(System.String)" />
        <altmember cref="M:System.Xml.XmlNode.SelectSingleNode(System.String)" />
        <altmember cref="M:System.Xml.XPath.XPathNavigator.SelectDescendants(System.Xml.XPath.XPathNodeType,System.Boolean)" />
        <altmember cref="M:System.Xml.XPath.XPathNavigator.SelectChildren(System.Xml.XPath.XPathNodeType)" />
        <altmember cref="M:System.Xml.XPath.XPathNavigator.SelectAncestors(System.Xml.XPath.XPathNodeType,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XPath.XPathNodeIterator Select (System.Xml.XPath.XPathExpression expr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XPath.XPathNodeIterator Select(class System.Xml.XPath.XPathExpression expr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.Select(System.Xml.XPath.XPathExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Select (expr As XPathExpression) As XPathNodeIterator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XPath::XPathNodeIterator ^ Select(System::Xml::XPath::XPathExpression ^ expr);" />
      <MemberSignature Language="F#" Value="abstract member Select : System.Xml.XPath.XPathExpression -&gt; System.Xml.XPath.XPathNodeIterator&#xA;override this.Select : System.Xml.XPath.XPathExpression -&gt; System.Xml.XPath.XPathNodeIterator" Usage="xPathNavigator.Select expr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNodeIterator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expr" Type="System.Xml.XPath.XPathExpression" />
      </Parameters>
      <Docs>
        <param name="expr">Um objeto <see cref="T:System.Xml.XPath.XPathExpression" /> que contém a consulta XPath compilada.</param>
        <summary>Seleciona um nó definido usando o <see cref="T:System.Xml.XPath.XPathExpression" /> especificado.</summary>
        <returns>Um <see cref="T:System.Xml.XPath.XPathNodeIterator" /> que aponta para o conjunto de nó selecionado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O contexto para a seleção é a posição do <xref:System.Xml.XPath.XPathNavigator> quando esse método é chamado. Depois de chamar esse método, o <xref:System.Xml.XPath.XPathNodeIterator> retornado representa o conjunto de nós selecionados. Use <xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A> sobre o <xref:System.Xml.XPath.XPathNodeIterator> para iterar sobre o conjunto de nós selecionado.  
  
 O código c# a seguir itera em conjunto de nós selecionado.  
  
```csharp  
XPathNodeIterator ni = nav.Select(expr);  
while (ni.MoveNext())  
{  
    Console.WriteLine(ni.Current.Name);  
}  
```  
  
 As seguintes são notas importantes a considerar ao usar o <xref:System.Xml.XPath.XPathNavigator.Select%2A> método.  
  
-   Você ainda pode usar qualquer uma da <xref:System.Xml.XPath.XPathNavigator> métodos de navegação do objeto para movimentação dentro de <xref:System.Xml.XPath.XPathNavigator>. O <xref:System.Xml.XPath.XPathNavigator> métodos de navegação são independentes de nós selecionados no <xref:System.Xml.XPath.XPathNodeIterator>.  
  
-   Futuras chamadas para o <xref:System.Xml.XPath.XPathNavigator.Select%2A> método retorna um novo <xref:System.Xml.XPath.XPathNodeIterator> que aponta para o conjunto selecionado de nós que corresponde ao novo objeto <xref:System.Xml.XPath.XPathNavigator.Select%2A> chamar. Os dois <xref:System.Xml.XPath.XPathNodeIterator> objetos são completamente independentes uns dos outros.  
  
-   Se o <xref:System.Xml.XPath.XPathExpression> requer o par URI de resolução, o prefixo e namespace do namespace deve ser adicionado a um <xref:System.Xml.XmlNamespaceManager>e o <xref:System.Xml.XPath.XPathExpression.SetContext%2A> método deve ser chamado para especificar o <xref:System.Xml.XmlNamespaceManager> a ser usado para resolução de namespace.  
  
 Por exemplo, suponha que o documento contém os seguintes nós XML.  
  
```xml  
<bookstore xmlns:bk='urn:samples'>  
    <book bk:ISBN='1-325-0980'>  
        <title>Pride And Prejudice</title>  
    </book>  
</bookstore>  
```  
  
 Nesse caso, o código c# a seguir seleciona o `bk:ISBN` nó.  
  
```csharp  
XPathExpression expr = nav.Compile("book/@bk:ISBN");  
XmlNamespaceManager mngr = new XmlNamespaceManager(new NameTable());  
mngr.AddNamespace("bk","urn:samples");  
expr.SetContext(mngr);  
XPathNodeIterator ni = nav.Select(expr);  
```  
  
> [!NOTE]
>  Se o <xref:System.Xml.XPath.XPathExpression> não incluir um prefixo, presume-se que o URI de namespace é o namespace vazio. Se o XML inclui um namespace padrão, você ainda deve usar o <xref:System.Xml.XPath.XPathExpression.SetContext%2A> método e fornecer um <xref:System.Xml.XmlNamespaceManager> que contém um prefixo de namespace URI para lidar com o namespace padrão.  
  
 Por exemplo, suponha que você tem o seguinte XML.  
  
```xml  
<bookstore xmlns="http://www.lucernepublishing.com">  
    <book>  
        <title>Pride And Prejudice</title>  
    </book>  
</bookstore>  
```  
  
 Nesse caso, o código c# a seguir seleciona todos os nós de catálogo:  
  
```csharp  
XmlNamespaceManager nsmgr = new XmlNamespaceManager(nav.NameTable);  
nsmgr.AddNamespace("ab", "http://www.lucernepublishing.com");  
XPathExpression expr;  
expr = nav.Compile("//ab:book");  
expr.SetContext(nsmgr);  
XPathNodeIterator ni = nav.Select(expr);  
```  
  
 Esse método não tem nenhum efeito sobre o estado do <xref:System.Xml.XPath.XPathNavigator>.  
  
   
  
## Examples  
 O exemplo a seguir usa o <xref:System.Xml.XPath.XPathNavigator.Select%2A> método para selecionar um conjunto de nós.  
  
 [!code-cpp[XPathNavigatorMethods#40](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#40)]
 [!code-csharp[XPathNavigatorMethods#40](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#40)]
 [!code-vb[XPathNavigatorMethods#40](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#40)]  
  
 O exemplo usa o arquivo `books.xml` como entrada.  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>   
<bookstore>  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">A expressão XPath contém um erro ou seu tipo de retorno não é um conjunto de nós.</exception>
        <exception cref="T:System.Xml.XPath.XPathException">A expressão XPath não é válida.</exception>
        <altmember cref="M:System.Xml.XmlNode.SelectNodes(System.String)" />
        <altmember cref="M:System.Xml.XmlNode.SelectSingleNode(System.String)" />
        <altmember cref="M:System.Xml.XPath.XPathNavigator.SelectDescendants(System.Xml.XPath.XPathNodeType,System.Boolean)" />
        <altmember cref="M:System.Xml.XPath.XPathNavigator.SelectChildren(System.Xml.XPath.XPathNodeType)" />
        <altmember cref="M:System.Xml.XPath.XPathNavigator.SelectAncestors(System.Xml.XPath.XPathNodeType,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XPath.XPathNodeIterator Select (string xpath, System.Xml.IXmlNamespaceResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XPath.XPathNodeIterator Select(string xpath, class System.Xml.IXmlNamespaceResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.Select(System.String,System.Xml.IXmlNamespaceResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Select (xpath As String, resolver As IXmlNamespaceResolver) As XPathNodeIterator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XPath::XPathNodeIterator ^ Select(System::String ^ xpath, System::Xml::IXmlNamespaceResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="abstract member Select : string * System.Xml.IXmlNamespaceResolver -&gt; System.Xml.XPath.XPathNodeIterator&#xA;override this.Select : string * System.Xml.IXmlNamespaceResolver -&gt; System.Xml.XPath.XPathNodeIterator" Usage="xPathNavigator.Select (xpath, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNodeIterator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xpath" Type="System.String" />
        <Parameter Name="resolver" Type="System.Xml.IXmlNamespaceResolver" />
      </Parameters>
      <Docs>
        <param name="xpath">Um <see cref="T:System.String" /> que representa uma expressão XPath.</param>
        <param name="resolver">O objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> usado para resolver prefixos de namespace.</param>
        <summary>Seleciona um nó definido usando a expressão XPath especificada com o objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> especificado para resolver os prefixos de namespace.</summary>
        <returns>Um <see cref="T:System.Xml.XPath.XPathNodeIterator" /> que aponta para o conjunto de nó selecionado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir ilustra a seleção de um nó definido usando o <xref:System.Xml.XPath.XPathNavigator.Select%2A> método com o <xref:System.Xml.XmlNamespaceManager> objeto especificado para resolver os prefixos de namespace na expressão XPath.  
  
 [!code-cpp[XPathNavigatorMethods#41](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#41)]
 [!code-csharp[XPathNavigatorMethods#41](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#41)]
 [!code-vb[XPathNavigatorMethods#41](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#41)]  
  
 O exemplo usa o arquivo `contosoBooks.xml` como entrada.  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>  
<bookstore xmlns="http://www.contoso.com/books">  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">A expressão XPath contém um erro ou seu tipo de retorno não é um conjunto de nós.</exception>
        <exception cref="T:System.Xml.XPath.XPathException">A expressão XPath não é válida.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SelectAncestors">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Seleciona todos os nós ancestrais do nó atual que correspondem aos critérios de seleção.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SelectAncestors">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XPath.XPathNodeIterator SelectAncestors (System.Xml.XPath.XPathNodeType type, bool matchSelf);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XPath.XPathNodeIterator SelectAncestors(valuetype System.Xml.XPath.XPathNodeType type, bool matchSelf) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.SelectAncestors(System.Xml.XPath.XPathNodeType,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SelectAncestors (type As XPathNodeType, matchSelf As Boolean) As XPathNodeIterator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XPath::XPathNodeIterator ^ SelectAncestors(System::Xml::XPath::XPathNodeType type, bool matchSelf);" />
      <MemberSignature Language="F#" Value="abstract member SelectAncestors : System.Xml.XPath.XPathNodeType * bool -&gt; System.Xml.XPath.XPathNodeIterator&#xA;override this.SelectAncestors : System.Xml.XPath.XPathNodeType * bool -&gt; System.Xml.XPath.XPathNodeIterator" Usage="xPathNavigator.SelectAncestors (type, matchSelf)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNodeIterator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Xml.XPath.XPathNodeType" />
        <Parameter Name="matchSelf" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type">O <see cref="T:System.Xml.XPath.XPathNodeType" /> dos nós ancestrais.</param>
        <param name="matchSelf">Para incluir o nó de contexto na seleção, <see langword="true" />; caso contrário, <see langword="false" />.</param>
        <summary>Seleciona todos os nós ancestrais do nó atual que têm um <see cref="T:System.Xml.XPath.XPathNodeType" /> correspondente.</summary>
        <returns>Um <see cref="T:System.Xml.XPath.XPathNodeIterator" /> que contém os nós selecionados. Os nós retornados estão na ordem inversa do documento.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Xml.XPath.XPathNavigator.SelectAncestors%2A> método não tem nenhum efeito sobre o estado do <xref:System.Xml.XPath.XPathNavigator>.  
  
   
  
## Examples  
 Para obter um exemplo de selecionar nós ancestrais, consulte <xref:System.Xml.XPath.XPathNavigator.SelectAncestors%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XPath.XPathNavigator.SelectChildren(System.Xml.XPath.XPathNodeType)" />
        <altmember cref="M:System.Xml.XPath.XPathNavigator.SelectDescendants(System.Xml.XPath.XPathNodeType,System.Boolean)" />
        <altmember cref="M:System.Xml.XPath.XPathNavigator.Select(System.Xml.XPath.XPathExpression)" />
      </Docs>
    </Member>
    <Member MemberName="SelectAncestors">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XPath.XPathNodeIterator SelectAncestors (string name, string namespaceURI, bool matchSelf);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XPath.XPathNodeIterator SelectAncestors(string name, string namespaceURI, bool matchSelf) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.SelectAncestors(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SelectAncestors (name As String, namespaceURI As String, matchSelf As Boolean) As XPathNodeIterator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XPath::XPathNodeIterator ^ SelectAncestors(System::String ^ name, System::String ^ namespaceURI, bool matchSelf);" />
      <MemberSignature Language="F#" Value="abstract member SelectAncestors : string * string * bool -&gt; System.Xml.XPath.XPathNodeIterator&#xA;override this.SelectAncestors : string * string * bool -&gt; System.Xml.XPath.XPathNodeIterator" Usage="xPathNavigator.SelectAncestors (name, namespaceURI, matchSelf)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNodeIterator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
        <Parameter Name="matchSelf" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">O nome local dos nós ancestrais.</param>
        <param name="namespaceURI">O URI de namespace dos nós ancestrais.</param>
        <param name="matchSelf">Para incluir o nó de contexto na seleção, <see langword="true" />; caso contrário, <see langword="false" />.</param>
        <summary>Seleciona todos os nós ancestrais do nó atual que têm o nome local e o URI do namespace especificados.</summary>
        <returns>Um <see cref="T:System.Xml.XPath.XPathNodeIterator" /> que contém os nós selecionados. Os nós retornados estão na ordem inversa do documento.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se <xref:System.String.Empty?displayProperty=nameWithType> é especificado como o `name` parâmetro, todos os nós ancestrais que pertencem ao namespace especificado URI são selecionados. Se <xref:System.String.Empty?displayProperty=nameWithType> é especificado como o `namespaceURI` parâmetro, o ancestral de todos os nós com o nome local especificado que pertencem a nenhum namespace são selecionados. Se <xref:System.String.Empty?displayProperty=nameWithType> for especificado como o nome local e o URI de namespace, todos os nós ancestrais que pertencem a nenhum namespace são selecionados.  
  
 O <xref:System.Xml.XPath.XPathNavigator.SelectAncestors%2A> método não tem nenhum efeito sobre o estado do <xref:System.Xml.XPath.XPathNavigator>.  
  
   
  
## Examples  
 O exemplo a seguir ilustra os ancestrais, filho e descendente selecionando nós.  
  
 [!code-cpp[XPathNavigatorMethods#42](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#42)]
 [!code-csharp[XPathNavigatorMethods#42](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#42)]
 [!code-vb[XPathNavigatorMethods#42](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#42)]  
  
 O exemplo usa o arquivo `contosoBooks.xml` como entrada.  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>  
<bookstore xmlns="http://www.contoso.com/books">  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <see langword="null" /> não pode ser passado como um parâmetro.</exception>
        <altmember cref="M:System.Xml.XPath.XPathNavigator.SelectChildren(System.Xml.XPath.XPathNodeType)" />
        <altmember cref="M:System.Xml.XPath.XPathNavigator.SelectDescendants(System.Xml.XPath.XPathNodeType,System.Boolean)" />
        <altmember cref="M:System.Xml.XPath.XPathNavigator.Select(System.Xml.XPath.XPathExpression)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SelectChildren">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Seleciona todos os nós filho do nó atual que correspondem aos critérios de seleção.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SelectChildren">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XPath.XPathNodeIterator SelectChildren (System.Xml.XPath.XPathNodeType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XPath.XPathNodeIterator SelectChildren(valuetype System.Xml.XPath.XPathNodeType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.SelectChildren(System.Xml.XPath.XPathNodeType)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SelectChildren (type As XPathNodeType) As XPathNodeIterator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XPath::XPathNodeIterator ^ SelectChildren(System::Xml::XPath::XPathNodeType type);" />
      <MemberSignature Language="F#" Value="abstract member SelectChildren : System.Xml.XPath.XPathNodeType -&gt; System.Xml.XPath.XPathNodeIterator&#xA;override this.SelectChildren : System.Xml.XPath.XPathNodeType -&gt; System.Xml.XPath.XPathNodeIterator" Usage="xPathNavigator.SelectChildren type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNodeIterator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Xml.XPath.XPathNodeType" />
      </Parameters>
      <Docs>
        <param name="type">O <see cref="T:System.Xml.XPath.XPathNodeType" /> dos nós filho.</param>
        <summary>Seleciona todos os nós filho do nó atual que têm a correspondência <see cref="T:System.Xml.XPath.XPathNodeType" />.</summary>
        <returns>Um <see cref="T:System.Xml.XPath.XPathNodeIterator" /> que contém os nós selecionados.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Xml.XPath.XPathNavigator.SelectChildren%2A> método não tem nenhum efeito sobre o estado do <xref:System.Xml.XPath.XPathNavigator>.  
  
   
  
## Examples  
 Para obter um exemplo de selecionar nós ancestrais, filho e descendentes, consulte <xref:System.Xml.XPath.XPathNavigator.SelectAncestors%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XPath.XPathNavigator.SelectAncestors(System.Xml.XPath.XPathNodeType,System.Boolean)" />
        <altmember cref="M:System.Xml.XPath.XPathNavigator.SelectDescendants(System.Xml.XPath.XPathNodeType,System.Boolean)" />
        <altmember cref="M:System.Xml.XPath.XPathNavigator.Select(System.Xml.XPath.XPathExpression)" />
      </Docs>
    </Member>
    <Member MemberName="SelectChildren">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XPath.XPathNodeIterator SelectChildren (string name, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XPath.XPathNodeIterator SelectChildren(string name, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.SelectChildren(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SelectChildren (name As String, namespaceURI As String) As XPathNodeIterator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XPath::XPathNodeIterator ^ SelectChildren(System::String ^ name, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="abstract member SelectChildren : string * string -&gt; System.Xml.XPath.XPathNodeIterator&#xA;override this.SelectChildren : string * string -&gt; System.Xml.XPath.XPathNodeIterator" Usage="xPathNavigator.SelectChildren (name, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNodeIterator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">O nome local dos nós filhos.</param>
        <param name="namespaceURI">O URI de namespace dos nós filho.</param>
        <summary>Seleciona todos os nós filhos do nó atual que têm o nome local e o URI do namespace especificado.</summary>
        <returns>Um <see cref="T:System.Xml.XPath.XPathNodeIterator" /> que contém os nós selecionados.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se <xref:System.String.Empty?displayProperty=nameWithType> é especificado como o `name` parâmetro, todos os nós filhos que pertencem ao namespace especificado URI são selecionados. Se <xref:System.String.Empty?displayProperty=nameWithType> é especificado como o `namespaceURI` parâmetro, o filho de todos os nós com o nome local especificado que pertencem a nenhum namespace são selecionados. Se os dois os nome e o namespace URI parâmetros local são <xref:System.String.Empty?displayProperty=nameWithType>, todos os nós filhos que pertencem a nenhum namespace são selecionados.  
  
 O <xref:System.Xml.XPath.XPathNavigator.SelectChildren%2A> método não tem nenhum efeito sobre o estado do <xref:System.Xml.XPath.XPathNavigator>.  
  
   
  
## Examples  
 Para obter um exemplo de selecionar nós ancestrais, filho e descendentes, consulte <xref:System.Xml.XPath.XPathNavigator.SelectAncestors%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <see langword="null" /> não pode ser passado como um parâmetro.</exception>
        <altmember cref="M:System.Xml.XPath.XPathNavigator.SelectAncestors(System.Xml.XPath.XPathNodeType,System.Boolean)" />
        <altmember cref="M:System.Xml.XPath.XPathNavigator.SelectDescendants(System.Xml.XPath.XPathNodeType,System.Boolean)" />
        <altmember cref="M:System.Xml.XPath.XPathNavigator.Select(System.Xml.XPath.XPathExpression)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SelectDescendants">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Seleciona todos os nós descendentes do nó atual que correspondem aos critérios de seleção.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SelectDescendants">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XPath.XPathNodeIterator SelectDescendants (System.Xml.XPath.XPathNodeType type, bool matchSelf);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XPath.XPathNodeIterator SelectDescendants(valuetype System.Xml.XPath.XPathNodeType type, bool matchSelf) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.SelectDescendants(System.Xml.XPath.XPathNodeType,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SelectDescendants (type As XPathNodeType, matchSelf As Boolean) As XPathNodeIterator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XPath::XPathNodeIterator ^ SelectDescendants(System::Xml::XPath::XPathNodeType type, bool matchSelf);" />
      <MemberSignature Language="F#" Value="abstract member SelectDescendants : System.Xml.XPath.XPathNodeType * bool -&gt; System.Xml.XPath.XPathNodeIterator&#xA;override this.SelectDescendants : System.Xml.XPath.XPathNodeType * bool -&gt; System.Xml.XPath.XPathNodeIterator" Usage="xPathNavigator.SelectDescendants (type, matchSelf)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNodeIterator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Xml.XPath.XPathNodeType" />
        <Parameter Name="matchSelf" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type">O <see cref="T:System.Xml.XPath.XPathNodeType" /> dos nós descendentes.</param>
        <param name="matchSelf">
          <see langword="true" /> para incluir o nó de contexto na seleção; caso contrário, <see langword="false" />.</param>
        <summary>Seleciona todos os nós descendentes do nó atual que têm um <see cref="T:System.Xml.XPath.XPathNodeType" /> correspondente.</summary>
        <returns>Um <see cref="T:System.Xml.XPath.XPathNodeIterator" /> que contém os nós selecionados.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Xml.XPath.XPathNavigator.SelectDescendants%2A> método não tem nenhum efeito sobre o estado do <xref:System.Xml.XPath.XPathNavigator>.  
  
   
  
## Examples  
 Para obter um exemplo de selecionar nós ancestrais, filho e descendentes, consulte <xref:System.Xml.XPath.XPathNavigator.SelectAncestors%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XPath.XPathNavigator.SelectAncestors(System.Xml.XPath.XPathNodeType,System.Boolean)" />
        <altmember cref="M:System.Xml.XPath.XPathNavigator.SelectChildren(System.Xml.XPath.XPathNodeType)" />
        <altmember cref="M:System.Xml.XPath.XPathNavigator.Select(System.Xml.XPath.XPathExpression)" />
      </Docs>
    </Member>
    <Member MemberName="SelectDescendants">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XPath.XPathNodeIterator SelectDescendants (string name, string namespaceURI, bool matchSelf);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XPath.XPathNodeIterator SelectDescendants(string name, string namespaceURI, bool matchSelf) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.SelectDescendants(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SelectDescendants (name As String, namespaceURI As String, matchSelf As Boolean) As XPathNodeIterator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XPath::XPathNodeIterator ^ SelectDescendants(System::String ^ name, System::String ^ namespaceURI, bool matchSelf);" />
      <MemberSignature Language="F#" Value="abstract member SelectDescendants : string * string * bool -&gt; System.Xml.XPath.XPathNodeIterator&#xA;override this.SelectDescendants : string * string * bool -&gt; System.Xml.XPath.XPathNodeIterator" Usage="xPathNavigator.SelectDescendants (name, namespaceURI, matchSelf)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNodeIterator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
        <Parameter Name="matchSelf" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">O nome local dos nós descendentes.</param>
        <param name="namespaceURI">O URI de namespace dos nós descendentes.</param>
        <param name="matchSelf">
          <see langword="true" /> para incluir o nó de contexto na seleção; caso contrário, <see langword="false" />.</param>
        <summary>Seleciona todos os nós descendentes do nó atual com o nome local e o URI do namespace especificado.</summary>
        <returns>Um <see cref="T:System.Xml.XPath.XPathNodeIterator" /> que contém os nós selecionados.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se <xref:System.String.Empty?displayProperty=nameWithType> é especificado como o `name` parâmetro, todos os nós descendentes que pertencem ao namespace especificado URI são selecionados. Se <xref:System.String.Empty?displayProperty=nameWithType> é especificado como o `namespaceURI` parâmetro, todos os nós descendentes com o nome local especificado que pertencem a nenhum namespace são selecionados. Se os dois os nome e o namespace URI parâmetros local são <xref:System.String.Empty?displayProperty=nameWithType>, todos os nós descendentes que pertencem a nenhum namespace são selecionados.  
  
 Um descendente é um filho ou um filho de um filho e assim por diante; Assim, os nós selecionados nunca conterá nós de atributo ou de namespace.  
  
 O <xref:System.Xml.XPath.XPathNavigator.SelectDescendants%2A> método não tem nenhum efeito sobre o estado do <xref:System.Xml.XPath.XPathNavigator>.  
  
   
  
## Examples  
 Para obter um exemplo de seleção de ancestrais, filho e nós descendentes, consulte <xref:System.Xml.XPath.XPathNavigator.SelectAncestors%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <see langword="null" /> não pode ser passado como um parâmetro.</exception>
        <altmember cref="M:System.Xml.XPath.XPathNavigator.SelectAncestors(System.Xml.XPath.XPathNodeType,System.Boolean)" />
        <altmember cref="M:System.Xml.XPath.XPathNavigator.SelectChildren(System.Xml.XPath.XPathNodeType)" />
        <altmember cref="M:System.Xml.XPath.XPathNavigator.Select(System.Xml.XPath.XPathExpression)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SelectSingleNode">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Seleciona um único nó no <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SelectSingleNode">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XPath.XPathNavigator SelectSingleNode (string xpath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XPath.XPathNavigator SelectSingleNode(string xpath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.SelectSingleNode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SelectSingleNode (xpath As String) As XPathNavigator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XPath::XPathNavigator ^ SelectSingleNode(System::String ^ xpath);" />
      <MemberSignature Language="F#" Value="abstract member SelectSingleNode : string -&gt; System.Xml.XPath.XPathNavigator&#xA;override this.SelectSingleNode : string -&gt; System.Xml.XPath.XPathNavigator" Usage="xPathNavigator.SelectSingleNode xpath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNavigator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xpath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xpath">Um <see cref="T:System.String" /> que representa uma expressão XPath.</param>
        <summary>Seleciona um único nó no <see cref="T:System.Xml.XPath.XPathNavigator" /> usando a consulta XPath especificada.</summary>
        <returns>Um objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> que contém o primeiro nó correspondente à consulta XPath especificada; caso contrário, <see langword="null" /> se não houver resultado da consulta.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Xml.XPath.XPathNavigator.SelectSingleNode%2A> método seleciona o primeiro nó que corresponde à consulta XPath no <xref:System.Xml.XPath.XPathNavigator> objeto.  
  
   
  
## Examples  
 O exemplo a seguir seleciona um único nó do <xref:System.Xml.XPath.XPathNavigator> com base na consulta XPath especificada.  
  
 [!code-cpp[XPathNavigatorMethods#43](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#43)]
 [!code-csharp[XPathNavigatorMethods#43](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#43)]
 [!code-vb[XPathNavigatorMethods#43](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#43)]  
  
 O exemplo usa o arquivo `books.xml` como entrada.  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>   
<bookstore>  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Ocorreu um erro na consulta XPath ou o tipo de retorno da expressão XPath não é um nó.</exception>
        <exception cref="T:System.Xml.XPath.XPathException">A consulta XPath não é válida.</exception>
      </Docs>
    </Member>
    <Member MemberName="SelectSingleNode">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XPath.XPathNavigator SelectSingleNode (System.Xml.XPath.XPathExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XPath.XPathNavigator SelectSingleNode(class System.Xml.XPath.XPathExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.SelectSingleNode(System.Xml.XPath.XPathExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SelectSingleNode (expression As XPathExpression) As XPathNavigator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XPath::XPathNavigator ^ SelectSingleNode(System::Xml::XPath::XPathExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member SelectSingleNode : System.Xml.XPath.XPathExpression -&gt; System.Xml.XPath.XPathNavigator&#xA;override this.SelectSingleNode : System.Xml.XPath.XPathExpression -&gt; System.Xml.XPath.XPathNavigator" Usage="xPathNavigator.SelectSingleNode expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNavigator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Xml.XPath.XPathExpression" />
      </Parameters>
      <Docs>
        <param name="expression">Um objeto <see cref="T:System.Xml.XPath.XPathExpression" /> que contém a consulta XPath compilada.</param>
        <summary>Seleciona um único nó no <see cref="T:System.Xml.XPath.XPathNavigator" /> usando o objeto <see cref="T:System.Xml.XPath.XPathExpression" /> especificado.</summary>
        <returns>Um objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> que contém o primeiro nó correspondente à consulta XPath especificada; caso contrário, <see langword="null" /> se não houver resultado da consulta.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Xml.XPath.XPathNavigator.SelectSingleNode%2A> método seleciona o primeiro nó que corresponde à consulta XPath compilada contida em de <xref:System.Xml.XPath.XPathExpression> do objeto no <xref:System.Xml.XPath.XPathNavigator>.  
  
   
  
## Examples  
 O exemplo a seguir seleciona um único nó do <xref:System.Xml.XPath.XPathNavigator> com base na consulta XPath contida no <xref:System.Xml.XPath.XPathExpression>.  
  
 [!code-cpp[XPathNavigatorMethods#44](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#44)]
 [!code-csharp[XPathNavigatorMethods#44](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#44)]
 [!code-vb[XPathNavigatorMethods#44](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#44)]  
  
 O exemplo usa o arquivo `books.xml` como entrada.  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>   
<bookstore>  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Ocorreu um erro na consulta XPath ou o tipo de retorno da expressão XPath não é um nó.</exception>
        <exception cref="T:System.Xml.XPath.XPathException">A consulta XPath não é válida.</exception>
      </Docs>
    </Member>
    <Member MemberName="SelectSingleNode">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XPath.XPathNavigator SelectSingleNode (string xpath, System.Xml.IXmlNamespaceResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XPath.XPathNavigator SelectSingleNode(string xpath, class System.Xml.IXmlNamespaceResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.SelectSingleNode(System.String,System.Xml.IXmlNamespaceResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SelectSingleNode (xpath As String, resolver As IXmlNamespaceResolver) As XPathNavigator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XPath::XPathNavigator ^ SelectSingleNode(System::String ^ xpath, System::Xml::IXmlNamespaceResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="abstract member SelectSingleNode : string * System.Xml.IXmlNamespaceResolver -&gt; System.Xml.XPath.XPathNavigator&#xA;override this.SelectSingleNode : string * System.Xml.IXmlNamespaceResolver -&gt; System.Xml.XPath.XPathNavigator" Usage="xPathNavigator.SelectSingleNode (xpath, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNavigator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xpath" Type="System.String" />
        <Parameter Name="resolver" Type="System.Xml.IXmlNamespaceResolver" />
      </Parameters>
      <Docs>
        <param name="xpath">Um <see cref="T:System.String" /> que representa uma expressão XPath.</param>
        <param name="resolver">O objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> usado para resolver prefixos de namespace na consulta XPath.</param>
        <summary>Seleciona um único nó no objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> usando a consulta XPath especificada com o objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> especificado para resolver os prefixos de namespace.</summary>
        <returns>Um objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> que contém o primeiro nó correspondente à consulta XPath especificada; caso contrário, <see langword="null" /> se não houver resultado da consulta.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Xml.XPath.XPathNavigator.SelectSingleNode%2A> método seleciona o primeiro nó que corresponde à consulta XPath especificada. O <xref:System.Xml.XPath.XPathNavigator.SelectSingleNode%2A> usa o <xref:System.Xml.IXmlNamespaceResolver> objeto para resolver os prefixos de namespace.  
  
> [!NOTE]
>  No XPath todos os namespaces devem ser prefixados em uma consulta. Se um documento XML usa um namespace padrão, você ainda deverá adicionar um prefixo de namespace para o <xref:System.Xml.IXmlNamespaceResolver> objeto.  
  
   
  
## Examples  
 O exemplo a seguir seleciona um único nó do <xref:System.Xml.XPath.XPathNavigator> objeto com base na consulta XPath especificada e usa o <xref:System.Xml.XmlNamespaceManager> objeto especificado para resolver os prefixos de namespace na consulta XPath.  
  
 [!code-cpp[XPathNavigatorMethods#45](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#45)]
 [!code-csharp[XPathNavigatorMethods#45](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#45)]
 [!code-vb[XPathNavigatorMethods#45](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#45)]  
  
 O exemplo usa o arquivo `contosoBooks.xml` como entrada.  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>  
<bookstore xmlns="http://www.contoso.com/books">  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Ocorreu um erro na consulta XPath ou o tipo de retorno da expressão XPath não é um nó.</exception>
        <exception cref="T:System.Xml.XPath.XPathException">A consulta XPath não é válida.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetTypedValue">
      <MemberSignature Language="C#" Value="public virtual void SetTypedValue (object typedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetTypedValue(object typedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.SetTypedValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetTypedValue (typedValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetTypedValue(System::Object ^ typedValue);" />
      <MemberSignature Language="F#" Value="abstract member SetTypedValue : obj -&gt; unit&#xA;override this.SetTypedValue : obj -&gt; unit" Usage="xPathNavigator.SetTypedValue typedValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typedValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="typedValue">O novo valor tipado do nó.</param>
        <summary>Define o valor tipado do nó atual.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando um <xref:System.Xml.XmlDocument> objeto é criado como resultado de uma validação de esquema <xref:System.Xml.XmlReader> object, o valor especificado para o <xref:System.Xml.XPath.XPathNavigator.SetTypedValue%2A> método é verificado em relação ao esquema de linguagem de definição de esquema XML (XSD) para o documento XML. Se o valor especificado é inválido de acordo com o esquema para o documento XML, um <xref:System.Xml.Schema.XmlSchemaException> é gerada.  
  
 O <xref:System.Xml.XPath.XPathNavigator.SetTypedValue%2A> método é válido somente quando o <xref:System.Xml.XPath.XPathNavigator> é posicionado em um nó de elemento ou atributo.  
  
   
  
## Examples  
 No exemplo a seguir, o <xref:System.Xml.XPath.XPathNavigator.SetTypedValue%2A> método é usado para atualizar todos os `price` elementos na `contosoBooks.xml` de arquivos usando o <xref:System.Xml.XmlNamespaceManager> objeto para resolver os prefixos de namespace na expressão XPath.  
  
 [!code-cpp[XPathNavigatorMethods#46](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#46)]
 [!code-csharp[XPathNavigatorMethods#46](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#46)]
 [!code-vb[XPathNavigatorMethods#46](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#46)]  
  
 O exemplo usa o arquivo `contosoBooks.xml` como entrada.  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>  
<bookstore xmlns="http://www.contoso.com/books">  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">O <see cref="T:System.Xml.XPath.XPathNavigator" /> não é compatível com o tipo do objeto especificado.</exception>
        <exception cref="T:System.ArgumentNullException">O valor especificado não pode ser <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">O <see cref="T:System.Xml.XPath.XPathNavigator" /> não está posicionado em um nó de elemento ou de atributo.</exception>
        <exception cref="T:System.NotSupportedException">O <see cref="T:System.Xml.XPath.XPathNavigator" /> não dá suporte à edição.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public virtual void SetValue (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetValue(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.SetValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetValue (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetValue(System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member SetValue : string -&gt; unit&#xA;override this.SetValue : string -&gt; unit" Usage="xPathNavigator.SetValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">O novo valor do nó.</param>
        <summary>Define o valor do nó atual.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
-   Se o <xref:System.Xml.XPath.XPathNavigator> está posicionado em um nó de elemento com conteúdo complexo (elementos filho), chamando o <xref:System.Xml.XPath.XPathNavigator.SetValue%2A> método substitui os elementos filho com um nó de texto que contém o novo valor de cadeia de caracteres.  
  
-   O <xref:System.Xml.XPath.XPathNavigator.SetValue%2A> método não é possível atualizar o nó raiz ou nós de namespace.  
  
   
  
## Examples  
 No exemplo a seguir, o <xref:System.Xml.XPath.XPathNavigator.SetValue%2A> método é usado para atualizar todos os `price` elementos na `contosoBooks.xml` de arquivos usando o <xref:System.Xml.XmlNamespaceManager> objeto para resolver os prefixos de namespace na expressão XPath.  
  
 [!code-cpp[XPathNavigatorMethods#47](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#47)]
 [!code-csharp[XPathNavigatorMethods#47](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#47)]
 [!code-vb[XPathNavigatorMethods#47](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#47)]  
  
 O exemplo usa o arquivo `contosoBooks.xml` como entrada.  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>  
<bookstore xmlns="http://www.contoso.com/books">  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">O parâmetro de valor é <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">O <see cref="T:System.Xml.XPath.XPathNavigator" /> está posicionado no nó raiz, em um nó de namespace ou o valor especificado é inválido.</exception>
        <exception cref="T:System.NotSupportedException">O <see cref="T:System.Xml.XPath.XPathNavigator" /> não dá suporte à edição.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cria uma nova cópia do objeto <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
        <returns>Uma nova cópia do objeto <see cref="T:System.Xml.XPath.XPathNavigator" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este membro é uma implementação do membro de interface explícita. Ele só pode ser usado quando a instância de <xref:System.Xml.XPath.XPathNavigator> é convertida em uma interface de <xref:System.ICloneable>.  
  
 Para obter uma descrição desse membro, consulte <xref:System.Xml.XPath.XPathNavigator.Clone%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="xPathNavigator.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtém o valor de texto do nó atual.</summary>
        <returns>Um <see langword="string" /> que contém o valor de texto do nó atual.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O conteúdo retornado pela <xref:System.Xml.XPath.XPathNavigator.ToString%2A> depende do método a <xref:System.Xml.XPath.XPathNodeType> do nó.  
  
|XPathNodeType|Valor de propriedade|  
|-------------------|--------------------|  
|<xref:System.Xml.XPath.XPathNodeType.Root>|O <xref:System.Xml.XmlNode.InnerText%2A> do nó raiz.|  
|<xref:System.Xml.XPath.XPathNodeType.Element>|O <xref:System.Xml.XmlNode.InnerText%2A> do elemento.|  
|<xref:System.Xml.XPath.XPathNodeType.Attribute>|O valor do atributo.|  
|<xref:System.Xml.XPath.XPathNodeType.Text>|O conteúdo do nó de texto.|  
|<xref:System.Xml.XPath.XPathNodeType.ProcessingInstruction>|Todo o conteúdo exceto o destino.|  
|<xref:System.Xml.XPath.XPathNodeType.Comment>|O conteúdo do comentário.|  
|<xref:System.Xml.XPath.XPathNodeType.Whitespace>|O espaço em branco entre marcação.|  
|<xref:System.Xml.XPath.XPathNodeType.SignificantWhitespace>|O espaço em branco entre marcação em um modelo de conteúdo misto ou espaço em branco dentro de um `xml:space='preserve'` escopo.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypedValue">
      <MemberSignature Language="C#" Value="public override object TypedValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object TypedValue" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XPath.XPathNavigator.TypedValue" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property TypedValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ TypedValue { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TypedValue : obj" Usage="System.Xml.XPath.XPathNavigator.TypedValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o nó atual como um objeto em caixa do tipo mais adequado do .NET Framework.</summary>
        <value>O nó atual como um objeto demarcado do tipo do .NET Framework mais apropriado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para atributos e elementos com o tipo atômico de simple ou conteúdo de texto simples, o <xref:System.Xml.XPath.XPathNavigator.TypedValue%2A> propriedade retorna um demarcado <xref:System.Object> do .NET Framework mais apropriado <xref:System.Type>. Se o elemento ou conteúdo do atributo é um tipo de lista, o <xref:System.Xml.XPath.XPathNavigator.TypedValue%2A> propriedade retorna uma matriz de objetos do .NET Framework mais apropriado <xref:System.Type>.  
  
 A tabela a seguir descreve o <xref:System.Xml.XPath.XPathNavigator.TypedValue%2A> retornado por cada <xref:System.Xml.XPath.XPathNodeType>.  
  
|XPathNodeType|TypedValue retornado|  
|-------------------|-------------------------|  
|<xref:System.Xml.XPath.XPathNodeType.Root>|Retorna um <xref:System.String> objeto que contém todos os <xref:System.Xml.XPath.XPathNodeType.Text> descendentes do nó do documento, concatenados e separados por espaço em branco. Se o documento não tem nenhum <xref:System.Xml.XPath.XPathNodeType.Text> filhos do nó, <xref:System.String.Empty?displayProperty=nameWithType> será retornado.|  
|<xref:System.Xml.XPath.XPathNodeType.Element><br /><br /> (conteúdo simple ou não tipado)|Retorna um <xref:System.Object> que representa o valor digitado do <xref:System.Xml.XPath.XPathNodeType.Element>.<br /><br /> Se o <xref:System.Xml.XPath.XPathNodeType.Element> é definido como um tipo de dados de lista do esquema XML, em seguida, o valor do nó é exposto como uma matriz de objetos. Cada <xref:System.Object> na matriz contém o valor digitado de um filho do elemento.|  
|<xref:System.Xml.XPath.XPathNodeType.Element><br /><br /> (não tipado, misto ou complexo conteúdo)|Retorna um <xref:System.String> objeto que contém todos os <xref:System.Xml.XPath.XPathNodeType.Text> descendentes do nó a <xref:System.Xml.XPath.XPathNodeType.Element> (incluindo as representações de cadeia de caracteres de valores digitados), concatenados e separados por espaço em branco. Se o <xref:System.Xml.XPath.XPathNodeType.Element> não tem nenhum <xref:System.Xml.XPath.XPathNodeType.Text> filhos do nó, <xref:System.String.Empty?displayProperty=nameWithType> será retornado.|  
|<xref:System.Xml.XPath.XPathNodeType.Attribute><br /><br /> (conteúdo simple ou não tipado)|Retorna um <xref:System.Object> que representa o valor digitado do <xref:System.Xml.XPath.XPathNodeType.Attribute>. O <xref:System.Object> é convertido como um .NET Framework <xref:System.Type> valor.<br /><br /> Se o <xref:System.Xml.XPath.XPathNodeType.Attribute> é definido como um tipo de dados de lista do esquema XML, o valor do nó é exposto como uma matriz de objetos. Cada <xref:System.Object> na matriz contém o valor digitado de um filho do <xref:System.Xml.XPath.XPathNodeType.Attribute>.|  
|<xref:System.Xml.XPath.XPathNodeType.Text>|Um <xref:System.String> que contém o texto do objeto.|  
|<xref:System.Xml.XPath.XPathNodeType.Comment>|Um <xref:System.String> objeto que contém o conteúdo dos comentários, exceto os que envolvem `<!--` e `-->`.|  
|<xref:System.Xml.XPath.XPathNodeType.ProcessingInstruction>|Um <xref:System.String> que contém o conteúdo da instrução de processamento, excluindo o destino e ao redor do objeto `<?` e `?>`.|  
|<xref:System.Xml.XPath.XPathNodeType.Namespace>|Um <xref:System.String> objeto que contém o nome do namespace.|  
|<xref:System.Xml.XPath.XPathNodeType.Whitespace>|Um <xref:System.String> objeto que contém o texto do nó.|  
|<xref:System.Xml.XPath.XPathNodeType.SignificantWhitespace>|Um <xref:System.String> objeto que contém o texto do nó.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnderlyingObject">
      <MemberSignature Language="C#" Value="public virtual object UnderlyingObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object UnderlyingObject" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XPath.XPathNavigator.UnderlyingObject" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property UnderlyingObject As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ UnderlyingObject { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UnderlyingObject : obj" Usage="System.Xml.XPath.XPathNavigator.UnderlyingObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Usado por implementações de <see cref="T:System.Xml.XPath.XPathNavigator" /> que fornecem uma exibição XML "virtualizada" sobre um repositório, a fim de fornecer acesso aos objetos subjacentes.</summary>
        <value>O padrão é <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Xml.XPath.XPathNavigator.UnderlyingObject%2A> propriedade pode ser usada por <xref:System.Xml.XPath.XPathNavigator> implementações que fornecem um "XML"virtualizada"Exibir em um repositório, para fornecer acesso aos objetos subjacentes. Por exemplo, se um <xref:System.Xml.XPath.XPathNavigator> objeto é usado para fornecer uma exibição XML virtual em um gráfico de objeto de tempo de execução de linguagem comum (CLR), talvez você queira executar consultas de XPath usando o <xref:System.Xml.XPath.XPathNavigator.Select%2A> método e, em seguida, acessar os objetos CLR subjacente os nós selecionados. O <xref:System.Xml.XPath.XPathNavigator.UnderlyingObject%2A> propriedade poderia expor esses objetos subjacentes.  
  
 Em muitos casos, esse valor será `null`e o objeto retornado pelo <xref:System.Xml.XPath.XPathNavigator.UnderlyingObject%2A> propriedade sempre será específico da implementação.  
  
 O <xref:System.Xml.XPath.XPathNavigator.UnderlyingObject%2A> deve preservar a identidade do objeto de propriedade e só deve ser usada para retornar os objetos que têm uma correspondência direta para seus respectivos itens sobrepostos. Um usuário sempre deve obter o mesmo objeto em sucessivas visitas ao mesmo nó usando a mesma <xref:System.Xml.XPath.XPathNavigator> objeto ou um clonado.  
  
> [!NOTE]
>  O <xref:System.Xml.XPath.XPathNavigator.UnderlyingObject%2A> propriedade de um <xref:System.Xml.XPath.XPathNavigator> objeto criado por uma <xref:System.Xml.XmlDocument> objeto retorna correspondente <xref:System.Xml.XmlNode>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public abstract string Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XPath.XPathNavigator.Value" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Value { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : string" Usage="System.Xml.XPath.XPathNavigator.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValueAs">
      <MemberSignature Language="C#" Value="public override object ValueAs (Type returnType, System.Xml.IXmlNamespaceResolver nsResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ValueAs(class System.Type returnType, class System.Xml.IXmlNamespaceResolver nsResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.ValueAs(System.Type,System.Xml.IXmlNamespaceResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ValueAs (returnType As Type, nsResolver As IXmlNamespaceResolver) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ValueAs(Type ^ returnType, System::Xml::IXmlNamespaceResolver ^ nsResolver);" />
      <MemberSignature Language="F#" Value="override this.ValueAs : Type * System.Xml.IXmlNamespaceResolver -&gt; obj" Usage="xPathNavigator.ValueAs (returnType, nsResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="nsResolver" Type="System.Xml.IXmlNamespaceResolver" />
      </Parameters>
      <Docs>
        <param name="returnType">O <see cref="T:System.Type" /> para retornar como o valor do nó atual.</param>
        <param name="nsResolver">O objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> usado para resolver prefixos de namespace.</param>
        <summary>Obtém o valor do nó atual como o <see cref="T:System.Type" /> especificado, usando o objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> especificado para resolver prefixos de namespace.</summary>
        <returns>O valor do nó atual como o <see cref="T:System.Type" /> solicitado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Xml.XPath.XPathItem.ValueAs%2A> método tenta converter o valor do nó atual para o tipo do .NET Framework, especificado de acordo com as regras de XPath 2.0 de conversão de tipo do nó atual.  
  
 O <xref:System.Xml.IXmlNamespaceResolver> objeto é usado para resolver os prefixos de namespace relacionados a conversões de tipo. Por exemplo, ao converter um `xs:QName` para um `xs:string`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">O valor do nó atual não está no formato correto para o tipo de destino.</exception>
        <exception cref="T:System.InvalidCastException">A tentativa de conversão não é válida.</exception>
      </Docs>
    </Member>
    <Member MemberName="ValueAsBoolean">
      <MemberSignature Language="C#" Value="public override bool ValueAsBoolean { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValueAsBoolean" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XPath.XPathNavigator.ValueAsBoolean" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ValueAsBoolean As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ValueAsBoolean { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ValueAsBoolean : bool" Usage="System.Xml.XPath.XPathNavigator.ValueAsBoolean" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o valor do nó atual como um <see cref="T:System.Boolean" />.</summary>
        <value>Valor do nó atual como um <see cref="T:System.Boolean" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se o <xref:System.Xml.XPath.XPathNavigator> tem informações de tipo ou esquema (por exemplo, de um <xref:System.Xml.XmlDocument> inicializado com uma validação de esquema XML do objeto <xref:System.Xml.XmlReader>), e se o nó atual é definido como um esquema XML `xs:boolean` tipo, o <xref:System.Xml.XPath.XPathNavigator.ValueAsBoolean%2A> propriedade Retorna o valor do nó atual como um não demarcado <xref:System.Boolean> objeto.  
  
 No entanto, se o <xref:System.Xml.XPath.XPathNavigator> não tem qualquer informação de tipo ou esquema, o <xref:System.Xml.XPath.XPathNavigator.ValueAsBoolean%2A> propriedade tenta converter o valor de cadeia de caracteres do nó atual para um <xref:System.Boolean> valor, de acordo com o XPath 2,0 regras para `xs:boolean`.  
  
   
  
## Examples  
 No exemplo a seguir, o valor de cada elemento na `valueas.xml` arquivo é retornado usando o <xref:System.Xml.XPath.XPathNavigator.ValueAsBoolean%2A>, <xref:System.Xml.XPath.XPathNavigator.ValueAsDateTime%2A>, <xref:System.Xml.XPath.XPathNavigator.ValueAsDouble%2A>, <xref:System.Xml.XPath.XPathNavigator.ValueAsInt%2A>, e <xref:System.Xml.XPath.XPathNavigator.ValueAsLong%2A> propriedades.  
  
 [!code-cpp[XPathNavigatorProperties#5](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorProperties/CPP/xpathnavigatorproperties.cpp#5)]
 [!code-csharp[XPathNavigatorProperties#5](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorProperties/CS/xpathnavigatorproperties.cs#5)]
 [!code-vb[XPathNavigatorProperties#5](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorProperties/VB/xpathnavigatorproperties.vb#5)]  
  
 O exemplo usa o arquivo `valueas.xml` como entrada.  
  
```xml  
<root>  
    <booleanElement>true</booleanElement>  
    <dateTimeElement>2004-04-20T12:00:00</dateTimeElement>  
    <decimalElement>10.00</decimalElement>  
    <numberElement>100000000</numberElement>  
</root>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">O valor de cadeia de caracteres do nó atual não pode ser convertido em um <see cref="T:System.Boolean" />.</exception>
        <exception cref="T:System.InvalidCastException">A tentativa de conversão em <see cref="T:System.Boolean" /> não é válida.</exception>
      </Docs>
    </Member>
    <Member MemberName="ValueAsDateTime">
      <MemberSignature Language="C#" Value="public override DateTime ValueAsDateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime ValueAsDateTime" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XPath.XPathNavigator.ValueAsDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ValueAsDateTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property DateTime ValueAsDateTime { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.ValueAsDateTime : DateTime" Usage="System.Xml.XPath.XPathNavigator.ValueAsDateTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o valor do nó atual como um <see cref="T:System.DateTime" />.</summary>
        <value>Valor do nó atual como um <see cref="T:System.DateTime" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se o <xref:System.Xml.XPath.XPathNavigator> tem informações de tipo ou esquema (por exemplo, de um <xref:System.Xml.XmlDocument> inicializado com uma validação de esquema XML do objeto <xref:System.Xml.XmlReader>), e se o nó atual é definido como um esquema XML `xs:datetime` tipo, o <xref:System.Xml.XPath.XPathNavigator.ValueAsDateTime%2A> propriedade Retorna o valor do nó atual como um não demarcado <xref:System.DateTime> objeto.  
  
 No entanto, se o <xref:System.Xml.XPath.XPathNavigator> não tem qualquer informação de tipo ou esquema, o <xref:System.Xml.XPath.XPathNavigator.ValueAsDateTime%2A> propriedade tenta converter o valor de cadeia de caracteres do nó atual para um <xref:System.DateTime> valor, de acordo com o XPath 2,0 regras para `xs:datetime`.  
  
   
  
## Examples  
 Para obter um exemplo de <xref:System.Xml.XPath.XPathNavigator.ValueAsDateTime%2A> propriedade, consulte o <xref:System.Xml.XPath.XPathNavigator.ValueAsBoolean%2A> propriedade.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">O valor de cadeia de caracteres do nó atual não pode ser convertido em um <see cref="T:System.DateTime" />.</exception>
        <exception cref="T:System.InvalidCastException">A tentativa de conversão em <see cref="T:System.DateTime" /> não é válida.</exception>
      </Docs>
    </Member>
    <Member MemberName="ValueAsDouble">
      <MemberSignature Language="C#" Value="public override double ValueAsDouble { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 ValueAsDouble" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XPath.XPathNavigator.ValueAsDouble" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ValueAsDouble As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property double ValueAsDouble { double get(); };" />
      <MemberSignature Language="F#" Value="member this.ValueAsDouble : double" Usage="System.Xml.XPath.XPathNavigator.ValueAsDouble" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o valor do nó atual como um <see cref="T:System.Double" />.</summary>
        <value>Valor do nó atual como um <see cref="T:System.Double" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se o <xref:System.Xml.XPath.XPathNavigator> tem informações de tipo ou esquema (por exemplo, de um <xref:System.Xml.XmlDocument> inicializado com uma validação de esquema XML do objeto <xref:System.Xml.XmlReader>), e se o nó atual é definido como um esquema XML `xs:double` tipo, o <xref:System.Xml.XPath.XPathNavigator.ValueAsDouble%2A> propriedade Retorna o valor do nó atual como um não demarcado <xref:System.Double> objeto.  
  
 No entanto, se o <xref:System.Xml.XPath.XPathNavigator> não tem qualquer informação de tipo ou esquema, o <xref:System.Xml.XPath.XPathNavigator.ValueAsDouble%2A> propriedade tenta converter o valor de cadeia de caracteres do nó atual para um <xref:System.Double> valor, de acordo com o XPath 2,0 regras para `xsd:double`.  
  
   
  
## Examples  
 Para obter um exemplo de <xref:System.Xml.XPath.XPathNavigator.ValueAsDouble%2A> propriedade, consulte o <xref:System.Xml.XPath.XPathNavigator.ValueAsBoolean%2A> propriedade.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">O valor de cadeia de caracteres do nó atual não pode ser convertido em um <see cref="T:System.Double" />.</exception>
        <exception cref="T:System.InvalidCastException">A tentativa de conversão em <see cref="T:System.Double" /> não é válida.</exception>
      </Docs>
    </Member>
    <Member MemberName="ValueAsInt">
      <MemberSignature Language="C#" Value="public override int ValueAsInt { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ValueAsInt" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XPath.XPathNavigator.ValueAsInt" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ValueAsInt As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ValueAsInt { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ValueAsInt : int" Usage="System.Xml.XPath.XPathNavigator.ValueAsInt" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o valor do nó atual como um <see cref="T:System.Int32" />.</summary>
        <value>Valor do nó atual como um <see cref="T:System.Int32" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se o <xref:System.Xml.XPath.XPathNavigator> tem informações de tipo ou esquema (por exemplo, de um <xref:System.Xml.XmlDocument> inicializado com uma validação de esquema XML do objeto <xref:System.Xml.XmlReader>), e se o nó atual é definido como um esquema XML `xs:integer` tipo, o <xref:System.Xml.XPath.XPathNavigator.ValueAsInt%2A> propriedade Retorna o valor do nó atual como um não demarcado <xref:System.Int32> objeto.  
  
 No entanto, se o <xref:System.Xml.XPath.XPathNavigator> não tem qualquer informação de tipo ou esquema, o <xref:System.Xml.XPath.XPathNavigator.ValueAsInt%2A> propriedade tenta converter o valor de cadeia de caracteres do nó atual para um <xref:System.Int32> valor, de acordo com o XPath 2,0 regras para `xs:integer`.  
  
   
  
## Examples  
 Para obter um exemplo de <xref:System.Xml.XPath.XPathNavigator.ValueAsInt%2A> propriedade, consulte o <xref:System.Xml.XPath.XPathNavigator.ValueAsBoolean%2A> propriedade.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">O valor de cadeia de caracteres do nó atual não pode ser convertido em um <see cref="T:System.Int32" />.</exception>
        <exception cref="T:System.InvalidCastException">A tentativa de conversão em <see cref="T:System.Int32" /> não é válida.</exception>
      </Docs>
    </Member>
    <Member MemberName="ValueAsLong">
      <MemberSignature Language="C#" Value="public override long ValueAsLong { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ValueAsLong" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XPath.XPathNavigator.ValueAsLong" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ValueAsLong As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long ValueAsLong { long get(); };" />
      <MemberSignature Language="F#" Value="member this.ValueAsLong : int64" Usage="System.Xml.XPath.XPathNavigator.ValueAsLong" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o valor do nó atual como um <see cref="T:System.Int64" />.</summary>
        <value>Valor do nó atual como um <see cref="T:System.Int64" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se o <xref:System.Xml.XPath.XPathNavigator> tem informações de tipo ou esquema (por exemplo, de um <xref:System.Xml.XmlDocument> inicializado com uma validação de esquema XML do objeto <xref:System.Xml.XmlReader>), e se o nó atual é definido como um esquema XML `xs:integer` tipo, o <xref:System.Xml.XPath.XPathNavigator.ValueAsLong%2A> propriedade Retorna o valor do nó atual como um não demarcado <xref:System.Int64> objeto.  
  
 No entanto, se o <xref:System.Xml.XPath.XPathNavigator> não tem qualquer informação de tipo ou esquema, o <xref:System.Xml.XPath.XPathNavigator.ValueAsLong%2A> propriedade tenta converter o valor de cadeia de caracteres do nó atual para um <xref:System.Int64> valor, de acordo com o XPath 2,0 regras para `xs:integer`.  
  
   
  
## Examples  
 Para obter um exemplo de <xref:System.Xml.XPath.XPathNavigator.ValueAsLong%2A> propriedade, consulte o <xref:System.Xml.XPath.XPathNavigator.ValueAsBoolean%2A> propriedade.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">O valor de cadeia de caracteres do nó atual não pode ser convertido em um <see cref="T:System.Int64" />.</exception>
        <exception cref="T:System.InvalidCastException">A tentativa de conversão em <see cref="T:System.Int64" /> não é válida.</exception>
      </Docs>
    </Member>
    <Member MemberName="ValueType">
      <MemberSignature Language="C#" Value="public override Type ValueType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ValueType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XPath.XPathNavigator.ValueType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ValueType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ ValueType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ValueType : Type" Usage="System.Xml.XPath.XPathNavigator.ValueType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o <see cref="T:System.Type" /> do .NET Framework do nó atual.</summary>
        <value>O .NET Framework <see cref="T:System.Type" /> do nó atual. O valor padrão é <see cref="T:System.String" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Xml.XPath.XPathItem.ValueType%2A> propriedade obtém o .NET Framework <xref:System.Type> do valor digitado do nó atual.  
  
 Por exemplo, um elemento do tipo `xs:int` teria uma <xref:System.Xml.XPath.XPathItem.ValueType%2A> de <xref:System.Int32> por padrão. No entanto, o <xref:System.Xml.XPath.XPathItem.ValueType%2A> pode ser qualquer um dos tipos válidos que podem ser mapeados para `xs:int` tais como <xref:System.Int16> ou <xref:System.Double>.  
  
 Se um nó não tiver nenhum tipo, isso é equivalente à anotação de tipo sobre o nó que está sendo `xdt:untypedAtomic`. Nesse caso, o <xref:System.Xml.XPath.XPathNavigator.ValueType%2A> propriedade retorna uma cadeia de caracteres para o nó. Para obter mais informações, consulte [suporte a tipo nas Classes System. XML](~/docs/standard/data/xml/type-support-in-the-system-xml-classes.md).  
  
   
  
## Examples  
 No exemplo a seguir, o `contosoBooks.xml` arquivo XML e `contosoBooks.xsd` esquema de (XSD) de linguagem de definição de esquema XML são usados para criar um <xref:System.Xml.XPath.XPathNavigator> objeto. O valor digitado do `price` elemento é exibido usando o <xref:System.Xml.XPath.XPathNavigator.ValueType%2A> propriedade e, em seguida, retornados como uma cadeia de caracteres usando o <xref:System.Xml.XPath.XPathNavigator.ValueAs%2A> método.  
  
 [!code-cpp[XPathNavigatorProperties#6](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorProperties/CPP/xpathnavigatorproperties.cpp#6)]
 [!code-csharp[XPathNavigatorProperties#6](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorProperties/CS/xpathnavigatorproperties.cs#6)]
 [!code-vb[XPathNavigatorProperties#6](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorProperties/VB/xpathnavigatorproperties.vb#6)]  
  
 O exemplo usa o arquivo `contosoBooks.xml` como entrada.  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>  
<bookstore xmlns="http://www.contoso.com/books">  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 O exemplo também usa `contosoBooks.xsd` como entrada.  
  
```xml  
  
<?xml version="1.0" encoding="utf-8"?>  
<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.contoso.com/books" xmlns:xs="http://www.w3.org/2001/XMLSchema">  
    <xs:element name="bookstore">  
        <xs:complexType>  
            <xs:sequence>  
                <xs:element maxOccurs="unbounded" name="book">  
                    <xs:complexType>  
                        <xs:sequence>  
                            <xs:element name="title" type="xs:string" />  
                            <xs:element name="author">  
                                <xs:complexType>  
                                    <xs:sequence>  
                                        <xs:element minOccurs="0" name="name" type="xs:string" />  
                                        <xs:element minOccurs="0" name="first-name" type="xs:string" />  
                                        <xs:element minOccurs="0" name="last-name" type="xs:string" />  
                                    </xs:sequence>  
                                </xs:complexType>  
                            </xs:element>  
                            <xs:element name="price" type="xs:decimal" />  
                        </xs:sequence>  
                        <xs:attribute name="genre" type="xs:string" use="required" />  
                        <xs:attribute name="publicationdate" type="xs:date" use="required" />  
                        <xs:attribute name="ISBN" type="xs:string" use="required" />  
                    </xs:complexType>  
                </xs:element>  
            </xs:sequence>  
        </xs:complexType>  
    </xs:element>  
</xs:schema>  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteSubtree">
      <MemberSignature Language="C#" Value="public virtual void WriteSubtree (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteSubtree(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.WriteSubtree(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteSubtree (writer As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteSubtree(System::Xml::XmlWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member WriteSubtree : System.Xml.XmlWriter -&gt; unit&#xA;override this.WriteSubtree : System.Xml.XmlWriter -&gt; unit" Usage="xPathNavigator.WriteSubtree writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer">O objeto <see cref="T:System.Xml.XmlWriter" /> para o qual transmitir.</param>
        <summary>Transmite o nó atual e seus nós filho para o objeto <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Declarações de Namespace para os namespaces no escopo do nó atual são inseridas no XML transmitido para o <xref:System.Xml.XmlWriter> objeto especificado.  
  
 Por exemplo, se o <xref:System.Xml.XPath.XPathNavigator.WriteSubtree%2A> método é chamado no primeiro `book` elemento da `books.xml` arquivo, o `http://www.contoso.com/books` declaração de namespace feita na parte superior do documento XML será exibido no XML transmitido para o <xref:System.Xml.XmlWriter> objeto especificado conforme mostrado no exemplo a seguir.  
  
```xml  
<?xml version="1.0" encoding="utf-8"?>  
<book genre="autobiography" publicationdate="1981" ISBN="1-861003-11-0" xmlns="http://www.contoso.com/books">  
    <title>The Autobiography of Benjamin Franklin</title>  
    <author>  
        <first-name>Benjamin</first-name>  
        <last-name>Franklin</last-name>  
    </author>  
    <price>8.99</price>  
</book>  
```  
  
> [!NOTE]
>  O <xref:System.Xml.XPath.XPathNavigator.WriteSubtree%2A> método não afeta a posição do <xref:System.Xml.XPath.XPathNavigator>.  
  
   
  
## Examples  
 O exemplo a seguir ilustra o uso de <xref:System.Xml.XPath.XPathNavigator.WriteSubtree%2A> método no primeiro `book` elemento do `contosoBooks.xml` arquivo.  
  
 [!code-cpp[XPathNavigatorMethods#48](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#48)]
 [!code-csharp[XPathNavigatorMethods#48](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#48)]
 [!code-vb[XPathNavigatorMethods#48](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#48)]  
  
 O exemplo usa o arquivo `contosoBooks.xml` como entrada.  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>  
<bookstore xmlns="http://www.contoso.com/books">  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlLang">
      <MemberSignature Language="C#" Value="public virtual string XmlLang { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XmlLang" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XPath.XPathNavigator.XmlLang" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property XmlLang As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ XmlLang { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlLang : string" Usage="System.Xml.XPath.XPathNavigator.XmlLang" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o escopo <c>xml:lang</c> para o nó atual.</summary>
        <value>Um <see cref="T:System.String" /> que contém o valor da <c>XML: lang</c> escopo, ou <see cref="F:System.String.Empty" /> se o nó atual não tem nenhum <c>XML: lang</c> definir o escopo de valor a ser retornado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 No exemplo XML a seguir, quando o <xref:System.Xml.XPath.XPathNavigator> é posicionado na `name` elemento, o <xref:System.Xml.XPath.XPathNavigator.XmlLang%2A> propriedade retorna um escopo de `en-us` indicando que o nó está no escopo de um `xml:lang="en-us"` atributo.  
  
```xml  
<root xml:lang="en-us">  
    <name>Name</name>  
</root>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlType">
      <MemberSignature Language="C#" Value="public override System.Xml.Schema.XmlSchemaType XmlType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.XmlSchemaType XmlType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XPath.XPathNavigator.XmlType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property XmlType As XmlSchemaType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::Schema::XmlSchemaType ^ XmlType { System::Xml::Schema::XmlSchemaType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlType : System.Xml.Schema.XmlSchemaType" Usage="System.Xml.XPath.XPathNavigator.XmlType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém as informações <see cref="T:System.Xml.Schema.XmlSchemaType" /> para o nó atual.</summary>
        <value>Uma <see cref="T:System.Xml.Schema.XmlSchemaType" /> objeto; o padrão é <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 As seguintes são notas importantes a considerar ao usar o <xref:System.Xml.XPath.XPathNavigator.XmlType%2A> propriedade.  
  
-   O <xref:System.Xml.XPath.XPathNavigator.XmlType%2A> é de propriedade `null`, a menos que o <xref:System.Xml.Schema.IXmlSchemaInfo.Validity%2A> propriedade do <xref:System.Xml.XPath.XPathNavigator.SchemaInfo%2A> propriedade do <xref:System.Xml.XPath.XPathNavigator> é definido como <xref:System.Xml.Schema.XmlSchemaValidity.Valid?displayProperty=nameWithType>.  
  
-   Se o nó for válido, o <xref:System.Xml.XPath.XPathNavigator.XmlType%2A> propriedade é igual a <xref:System.Xml.Schema.IXmlSchemaInfo.SchemaType%2A> propriedade do <xref:System.Xml.XPath.XPathNavigator.SchemaInfo%2A> propriedade do <xref:System.Xml.XPath.XPathNavigator>, a menos que este nó é um membro de uma união.  
  
-   Se o nó for um membro de uma união, o <xref:System.Xml.XPath.XPathNavigator.XmlType%2A> propriedade é igual a <xref:System.Xml.Schema.IXmlSchemaInfo.MemberType%2A> propriedade da <xref:System.Xml.XPath.XPathNavigator.SchemaInfo%2A> propriedade deste <xref:System.Xml.XPath.XPathNavigator>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>