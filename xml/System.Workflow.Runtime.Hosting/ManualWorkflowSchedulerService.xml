<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ManualWorkflowSchedulerService.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac529d7dc949af5bb583371d9160e6a3aacfa20cb2a.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">29d7dc949af5bb583371d9160e6a3aacfa20cb2a</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService">
          <source>Provides a threading service that allows the host application creating a workflow instance to donate the <ph id="ph1">&lt;see cref="T:System.Threading.Thread" /&gt;</ph> on which the workflow instance is run.</source>
          <target state="translated">Fornece um serviço de threading que permite que o aplicativo host crie uma instância de fluxo de trabalho para doar o <ph id="ph1">&lt;see cref="T:System.Threading.Thread" /&gt;</ph> no qual a instância de fluxo de trabalho é executada.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService">
          <source>Using this threading service, host applications can run a workflow instance on a single <ph id="ph1">&lt;see cref="T:System.Threading.Thread" /&gt;</ph> in synchronous mode (although if the workflow contains a delay activity, the work is postponed until after the delay activity is executed on a separate thread spawned by <ph id="ph2">&lt;see cref="System.Threading.Timer" /&gt;</ph>).This mode blocks the execution of the host application until the workflow instance becomes idle.</source>
          <target state="translated">Usando esse serviço de threading, aplicativos de host podem executar uma instância de fluxo de trabalho em um único <ph id="ph1">&lt;see cref="T:System.Threading.Thread" /&gt;</ph> no modo síncrono (porém, se o fluxo de trabalho contiver uma atividade de atraso, o trabalho será adiado até depois que a atividade de atraso for executada em um thread separado gerado pelo <ph id="ph2">&lt;see cref="System.Threading.Timer" /&gt;</ph>). Esse modo bloqueia a execução do aplicativo host até que a instância de fluxo de trabalho fique ociosa.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService">
          <source>Subsequently, the workflow instance can only be executed using the <ph id="ph1">&lt;see cref="M:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.RunWorkflow(System.Guid)" /&gt;</ph> method of this service.</source>
          <target state="translated">Em seguida, a instância de fluxo de trabalho só pode ser executada usando o método <ph id="ph1">&lt;see cref="M:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.RunWorkflow(System.Guid)" /&gt;</ph> desse serviço.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService&gt;</ph> does not automatically run a workflow instance that is in the queue.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService&gt;</ph> não executar automaticamente uma instância de fluxo de trabalho que está na fila.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService">
          <source>The host must call <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.RunWorkflow%2A&gt;</ph> to run a specified workflow.</source>
          <target state="translated">O host deve chamar <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.RunWorkflow%2A&gt;</ph> para executar um fluxo de trabalho especificado.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="T:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.#ctor(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> that determines how delay activities are handled.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> que determina como são tratadas as atividades de atraso.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.#ctor(System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the scheduler service automatically resumes workflows after delay activities expire (by using an in-memory timer).</source>
          <target state="translated">Se <ph id="ph1">&lt;see langword="true" /&gt;</ph>, o serviço do agendador retomará automaticamente fluxos de trabalho depois que as atividades de atraso expirarem (usando um timer na memória).</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.#ctor(System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="false" /&gt;</ph>, the host must manually resume the workflow after the delay activities expire.</source>
          <target state="translated">Se <ph id="ph1">&lt;see langword="false" /&gt;</ph>, o host deverá retomar manualmente o fluxo de trabalho depois que as atividades de atraso expirarem.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.#ctor(System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.#ctor(System.Collections.Specialized.NameValueCollection)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> that contains parameters for <bpt id="p1">&lt;c&gt;</bpt>useActiveTimers<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> que contém parâmetros para <bpt id="p1">&lt;c&gt;</bpt>useActiveTimers<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.#ctor(System.Collections.Specialized.NameValueCollection)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the scheduler service automatically resumes workflows after delay activities expire (by using an in-memory timer).</source>
          <target state="translated">Se <ph id="ph1">&lt;see langword="true" /&gt;</ph>, o serviço do agendador retomará automaticamente fluxos de trabalho depois que as atividades de atraso expirarem (usando um timer na memória).</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.#ctor(System.Collections.Specialized.NameValueCollection)">
          <source>If <ph id="ph1">&lt;see langword="false" /&gt;</ph>, the host must manually resume the workflow after the delay activities expire.</source>
          <target state="translated">Se <ph id="ph1">&lt;see langword="false" /&gt;</ph>, o host deverá retomar manualmente o fluxo de trabalho depois que as atividades de atraso expirarem.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.#ctor(System.Collections.Specialized.NameValueCollection)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Cancel(System.Guid)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> associated with the existing scheduled work item to cancel.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> associado ao item de trabalho agendado existente a ser cancelado.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Cancel(System.Guid)">
          <source>Cancels the specified existing workflow instance work item.</source>
          <target state="translated">Cancela o item de trabalho de instância de fluxo de trabalho existente especificado.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.OnStarted">
          <source>Overloaded from <ph id="ph1">&lt;see cref="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted" /&gt;</ph>.</source>
          <target state="translated">Sobrecarregado de <ph id="ph1">&lt;see cref="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.OnStarted">
          <source>This method is called whenever <ph id="ph1">&lt;see cref="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime" /&gt;</ph> is called and is used by the <ph id="ph2">&lt;see cref="T:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService" /&gt;</ph> to do work that is needed when the <ph id="ph3">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> starts.</source>
          <target state="translated">Este método é chamado sempre que <ph id="ph1">&lt;see cref="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime" /&gt;</ph> é chamado e é usado pelo <ph id="ph2">&lt;see cref="T:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService" /&gt;</ph> para fazer o trabalho necessário quando o <ph id="ph3">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> é iniciado.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.RunWorkflow(System.Guid)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> for the workflow instance to run.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> para a instância de fluxo de trabalho a ser executada.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.RunWorkflow(System.Guid)">
          <source>Runs the specified workflow instance.</source>
          <target state="translated">Executa a instância de fluxo de trabalho especificada.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.RunWorkflow(System.Guid)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the workflow starts running; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o fluxo de trabalho começar a ser executado; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.RunWorkflow(System.Guid)">
          <source>This is a synchronous call that uses the current thread to run the workflow.</source>
          <target state="translated">Isso é uma chamada síncrona que usa o thread atual para executar o fluxo de trabalho.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.RunWorkflow(System.Guid)">
          <source>It does not return until the workflow idles, suspends, completes, terminates, or aborts.</source>
          <target state="translated">Ele não retorna até que o fluxo de trabalho ocioso, suspende, concluído, termina ou anulada.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.RunWorkflow(System.Guid)">
          <source><ph id="ph1">&lt;paramref name="workflowInstanceId" /&gt;</ph> is an empty GUID.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="workflowInstanceId" /&gt;</ph> é um GUID vazio.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="T:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService">
          <source>Adds a workflow instance to the pending work items queue.</source>
          <target state="translated">Adiciona uma instância de fluxo de trabalho à fila de itens de trabalho pendentes.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Threading.WaitCallback" /&gt;</ph> multicast delegate that represents the method to run.</source>
          <target state="translated">Um representante multicast de <ph id="ph1">&lt;see cref="T:System.Threading.WaitCallback" /&gt;</ph> que representa o método a ser executado.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> that represents the workflow instance.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> que representa a instância do fluxo de trabalho.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid)">
          <source>Adds a workflow instance to the pending work items queue using the specified workflow instance using the specified multicast delegate.</source>
          <target state="translated">Adiciona uma instância de fluxo de trabalho à fila de itens de trabalho pendentes usando a instância de fluxo de trabalho especificada usando o delegado multicast especificado.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid)">
          <source><ph id="ph1">&lt;paramref name="callback" /&gt;</ph> contains a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="callback" /&gt;</ph> contém uma referência nula (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> no Visual Basic).</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid,System.DateTime,System.Guid)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Threading.WaitCallback" /&gt;</ph> multicast delegate that represents the method to run.</source>
          <target state="translated">Um representante multicast de <ph id="ph1">&lt;see cref="T:System.Threading.WaitCallback" /&gt;</ph> que representa o método a ser executado.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid,System.DateTime,System.Guid)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> that represents the workflow instance.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> que representa a instância do fluxo de trabalho.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid,System.DateTime,System.Guid)">
          <source>The <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> that indicates the time to begin running the thread.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> que indica a hora para começar a executar o thread.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid,System.DateTime,System.Guid)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> that represents the scheduled thread.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> que representa o thread agendado.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid,System.DateTime,System.Guid)">
          <source>Adds the specified workflow instance to the pending work item queue using the specified multicast delegate, <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> and GUIDs.</source>
          <target state="translated">Adiciona a instância de fluxo de trabalho especificada à fila de itens de trabalho pendentes usando o delegado multicast, o <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> e os GUIDs especificados.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid,System.DateTime,System.Guid)">
          <source><ph id="ph1">&lt;paramref name="callback" /&gt;</ph> contains a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="callback" /&gt;</ph> contém uma referência nula (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> no Visual Basic).</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid,System.DateTime,System.Guid)">
          <source><ph id="ph1">&lt;paramref name="workflowInstanceId" /&gt;</ph> or <ph id="ph2">&lt;paramref name="timerId" /&gt;</ph> is an empty GUID.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="workflowInstanceId" /&gt;</ph> ou <ph id="ph2">&lt;paramref name="timerId" /&gt;</ph> é um GUID vazio.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Stop">
          <source>Overloaded from <ph id="ph1">&lt;see cref="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop" /&gt;</ph>.</source>
          <target state="translated">Sobrecarregado de <ph id="ph1">&lt;see cref="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Stop">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService" /&gt;</ph> uses this method to do work that is needed when the <ph id="ph2">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> stops.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService" /&gt;</ph> usa esse método para fazer o trabalho necessário quando o <ph id="ph2">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> para.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>